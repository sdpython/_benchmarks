<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1686" onload="init(evt)" viewBox="0 0 1200 1686" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1686" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1669.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1669.00"> </text><g id="frames"><g><title>_safe_accumulator_op (sklearn/utils/extmath.py:706) (1 samples, 0.16%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(231,112,40)"/><text x="13.00" y="350.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(208,223,29)"/><text x="13.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(223,77,10)"/><text x="13.00" y="382.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.16%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(218,148,4)"/><text x="13.00" y="398.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.16%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(209,88,42)"/><text x="13.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.16%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(247,203,17)"/><text x="13.00" y="430.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4664) (1 samples, 0.16%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(227,143,12)"/><text x="13.00" y="446.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:31) (2 samples, 0.32%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(205,60,11)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:11) (2 samples, 0.32%)</title><rect x="10" y="68" width="3" height="15" fill="rgb(231,59,26)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:39) (2 samples, 0.32%)</title><rect x="10" y="84" width="3" height="15" fill="rgb(230,130,12)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.32%)</title><rect x="10" y="100" width="3" height="15" fill="rgb(228,100,14)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (2 samples, 0.32%)</title><rect x="10" y="116" width="3" height="15" fill="rgb(211,55,46)"/><text x="13.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (2 samples, 0.32%)</title><rect x="10" y="132" width="3" height="15" fill="rgb(253,17,11)"/><text x="13.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.32%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(230,180,46)"/><text x="13.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.32%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(231,216,54)"/><text x="13.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.32%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(237,184,12)"/><text x="13.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.32%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(248,200,53)"/><text x="13.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.32%)</title><rect x="10" y="212" width="3" height="15" fill="rgb(232,94,47)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.32%)</title><rect x="10" y="228" width="3" height="15" fill="rgb(207,165,25)"/><text x="13.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (2 samples, 0.32%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(211,211,50)"/><text x="13.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.32%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(233,13,11)"/><text x="13.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:280) (2 samples, 0.32%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(248,115,54)"/><text x="13.00" y="286.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py:1231) (2 samples, 0.32%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(231,111,16)"/><text x="13.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.32%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(212,224,42)"/><text x="13.00" y="318.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (2 samples, 0.32%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(227,94,46)"/><text x="13.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="11" y="340" width="2" height="15" fill="rgb(248,49,48)"/><text x="14.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="11" y="356" width="2" height="15" fill="rgb(215,220,21)"/><text x="14.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.16%)</title><rect x="11" y="372" width="2" height="15" fill="rgb(227,193,16)"/><text x="14.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.16%)</title><rect x="11" y="388" width="2" height="15" fill="rgb(230,64,27)"/><text x="14.00" y="398.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.16%)</title><rect x="13" y="196" width="2" height="15" fill="rgb(242,139,24)"/><text x="16.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.16%)</title><rect x="13" y="212" width="2" height="15" fill="rgb(253,135,45)"/><text x="16.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:139) (1 samples, 0.16%)</title><rect x="13" y="228" width="2" height="15" fill="rgb(218,48,40)"/><text x="16.00" y="238.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.16%)</title><rect x="15" y="276" width="2" height="15" fill="rgb(224,41,31)"/><text x="18.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.16%)</title><rect x="15" y="292" width="2" height="15" fill="rgb(235,52,13)"/><text x="18.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.16%)</title><rect x="15" y="308" width="2" height="15" fill="rgb(227,218,15)"/><text x="18.00" y="318.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (3 samples, 0.48%)</title><rect x="13" y="84" width="6" height="15" fill="rgb(211,140,39)"/><text x="16.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.48%)</title><rect x="13" y="100" width="6" height="15" fill="rgb(224,127,21)"/><text x="16.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.48%)</title><rect x="13" y="116" width="6" height="15" fill="rgb(234,215,8)"/><text x="16.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.48%)</title><rect x="13" y="132" width="6" height="15" fill="rgb(220,126,44)"/><text x="16.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.48%)</title><rect x="13" y="148" width="6" height="15" fill="rgb(217,73,6)"/><text x="16.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.48%)</title><rect x="13" y="164" width="6" height="15" fill="rgb(224,115,16)"/><text x="16.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.48%)</title><rect x="13" y="180" width="6" height="15" fill="rgb(240,60,9)"/><text x="16.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (2 samples, 0.32%)</title><rect x="15" y="196" width="4" height="15" fill="rgb(208,181,11)"/><text x="18.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.32%)</title><rect x="15" y="212" width="4" height="15" fill="rgb(253,177,7)"/><text x="18.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.32%)</title><rect x="15" y="228" width="4" height="15" fill="rgb(214,105,44)"/><text x="18.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="15" y="244" width="4" height="15" fill="rgb(233,210,33)"/><text x="18.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.32%)</title><rect x="15" y="260" width="4" height="15" fill="rgb(218,3,40)"/><text x="18.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.16%)</title><rect x="17" y="276" width="2" height="15" fill="rgb(224,52,36)"/><text x="20.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.16%)</title><rect x="17" y="292" width="2" height="15" fill="rgb(240,6,10)"/><text x="20.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.16%)</title><rect x="17" y="308" width="2" height="15" fill="rgb(225,41,2)"/><text x="20.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.16%)</title><rect x="17" y="324" width="2" height="15" fill="rgb(217,106,6)"/><text x="20.00" y="334.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.16%)</title><rect x="19" y="148" width="2" height="15" fill="rgb(249,171,10)"/><text x="22.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.16%)</title><rect x="19" y="164" width="2" height="15" fill="rgb(225,176,10)"/><text x="22.00" y="174.50"></text></g><g><title>__init__ (queue.py:49) (1 samples, 0.16%)</title><rect x="19" y="180" width="2" height="15" fill="rgb(251,23,36)"/><text x="22.00" y="190.50"></text></g><g><title>__init__ (threading.py:238) (1 samples, 0.16%)</title><rect x="19" y="196" width="2" height="15" fill="rgb(248,85,28)"/><text x="22.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.16%)</title><rect x="21" y="180" width="2" height="15" fill="rgb(215,113,21)"/><text x="24.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (4 samples, 0.64%)</title><rect x="23" y="180" width="7" height="15" fill="rgb(246,141,32)"/><text x="26.00" y="190.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.16%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(215,157,4)"/><text x="31.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.16%)</title><rect x="28" y="212" width="2" height="15" fill="rgb(211,127,38)"/><text x="31.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.16%)</title><rect x="30" y="180" width="2" height="15" fill="rgb(206,123,32)"/><text x="33.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.16%)</title><rect x="34" y="228" width="2" height="15" fill="rgb(213,165,47)"/><text x="37.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (3 samples, 0.48%)</title><rect x="32" y="212" width="6" height="15" fill="rgb(234,185,54)"/><text x="35.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.16%)</title><rect x="36" y="228" width="2" height="15" fill="rgb(223,137,11)"/><text x="39.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (4 samples, 0.64%)</title><rect x="32" y="180" width="8" height="15" fill="rgb(252,182,10)"/><text x="35.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (4 samples, 0.64%)</title><rect x="32" y="196" width="8" height="15" fill="rgb(224,216,43)"/><text x="35.00" y="206.50"></text></g><g><title>delayed_function (joblib/parallel.py:305) (1 samples, 0.16%)</title><rect x="38" y="212" width="2" height="15" fill="rgb(249,143,31)"/><text x="41.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.16%)</title><rect x="40" y="180" width="2" height="15" fill="rgb(221,28,1)"/><text x="43.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.32%)</title><rect x="42" y="180" width="4" height="15" fill="rgb(214,80,29)"/><text x="45.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.16%)</title><rect x="46" y="180" width="1" height="15" fill="rgb(230,186,11)"/><text x="49.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.48%)</title><rect x="51" y="212" width="6" height="15" fill="rgb(251,49,29)"/><text x="54.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (7 samples, 1.13%)</title><rect x="47" y="196" width="14" height="15" fill="rgb(240,52,50)"/><text x="50.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.32%)</title><rect x="57" y="212" width="4" height="15" fill="rgb(248,214,0)"/><text x="60.00" y="222.50"></text></g><g><title>0x7fbce49e39a0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="59" y="228" width="2" height="15" fill="rgb(238,140,37)"/><text x="62.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 0.64%)</title><rect x="61" y="212" width="7" height="15" fill="rgb(247,78,37)"/><text x="64.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (4 samples, 0.64%)</title><rect x="61" y="228" width="7" height="15" fill="rgb(219,142,14)"/><text x="64.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:120) (1 samples, 0.16%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(229,28,3)"/><text x="71.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (16 samples, 2.57%)</title><rect x="47" y="180" width="31" height="15" fill="rgb(244,124,52)"/><text x="50.00" y="190.50">di..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (9 samples, 1.45%)</title><rect x="61" y="196" width="17" height="15" fill="rgb(217,201,19)"/><text x="64.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (4 samples, 0.64%)</title><rect x="70" y="212" width="8" height="15" fill="rgb(219,220,43)"/><text x="73.00" y="222.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.16%)</title><rect x="80" y="196" width="2" height="15" fill="rgb(222,120,24)"/><text x="83.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.16%)</title><rect x="82" y="196" width="1" height="15" fill="rgb(207,160,30)"/><text x="85.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.16%)</title><rect x="82" y="212" width="1" height="15" fill="rgb(226,171,17)"/><text x="85.00" y="222.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.16%)</title><rect x="83" y="196" width="2" height="15" fill="rgb(237,100,40)"/><text x="86.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (5 samples, 0.80%)</title><rect x="78" y="180" width="9" height="15" fill="rgb(206,137,41)"/><text x="81.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.16%)</title><rect x="85" y="196" width="2" height="15" fill="rgb(213,1,20)"/><text x="88.00" y="206.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.16%)</title><rect x="87" y="196" width="2" height="15" fill="rgb(253,98,27)"/><text x="90.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.16%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(230,89,50)"/><text x="92.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.16%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(235,60,47)"/><text x="92.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.16%)</title><rect x="89" y="244" width="2" height="15" fill="rgb(244,198,40)"/><text x="92.00" y="254.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.32%)</title><rect x="89" y="196" width="4" height="15" fill="rgb(223,203,53)"/><text x="92.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.16%)</title><rect x="91" y="212" width="2" height="15" fill="rgb(230,78,28)"/><text x="94.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 0.64%)</title><rect x="87" y="180" width="8" height="15" fill="rgb(225,18,24)"/><text x="90.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.16%)</title><rect x="93" y="196" width="2" height="15" fill="rgb(227,114,42)"/><text x="96.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.16%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(230,76,25)"/><text x="96.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (2 samples, 0.32%)</title><rect x="97" y="196" width="4" height="15" fill="rgb(240,190,35)"/><text x="100.00" y="206.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.16%)</title><rect x="99" y="212" width="2" height="15" fill="rgb(243,129,19)"/><text x="102.00" y="222.50"></text></g><g><title>0x7ffc01b5ea57 ([vdso]) (1 samples, 0.16%)</title><rect x="99" y="228" width="2" height="15" fill="rgb(227,63,49)"/><text x="102.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.16%)</title><rect x="101" y="196" width="1" height="15" fill="rgb(249,144,23)"/><text x="104.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (1 samples, 0.16%)</title><rect x="106" y="244" width="2" height="15" fill="rgb(253,79,29)"/><text x="109.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.16%)</title><rect x="106" y="260" width="2" height="15" fill="rgb(218,68,44)"/><text x="109.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.32%)</title><rect x="116" y="308" width="4" height="15" fill="rgb(211,20,10)"/><text x="119.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.16%)</title><rect x="118" y="324" width="2" height="15" fill="rgb(242,94,15)"/><text x="121.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="121" y="324" width="2" height="15" fill="rgb(221,17,32)"/><text x="124.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 0.96%)</title><rect x="123" y="324" width="12" height="15" fill="rgb(222,141,33)"/><text x="126.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.80%)</title><rect x="125" y="340" width="10" height="15" fill="rgb(248,219,52)"/><text x="128.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (12 samples, 1.93%)</title><rect x="114" y="292" width="23" height="15" fill="rgb(226,132,10)"/><text x="117.00" y="302.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 1.45%)</title><rect x="120" y="308" width="17" height="15" fill="rgb(227,94,17)"/><text x="123.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="135" y="324" width="2" height="15" fill="rgb(225,23,48)"/><text x="138.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.16%)</title><rect x="140" y="324" width="2" height="15" fill="rgb(220,24,42)"/><text x="143.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (4 samples, 0.64%)</title><rect x="137" y="292" width="7" height="15" fill="rgb(253,162,23)"/><text x="140.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (3 samples, 0.48%)</title><rect x="139" y="308" width="5" height="15" fill="rgb(241,225,0)"/><text x="142.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.16%)</title><rect x="142" y="324" width="2" height="15" fill="rgb(228,211,51)"/><text x="145.00" y="334.50"></text></g><g><title>0x7fbcbe4242df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="144" y="356" width="2" height="15" fill="rgb(208,223,16)"/><text x="147.00" y="366.50"></text></g><g><title>0x7fbcbe408d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="144" y="372" width="2" height="15" fill="rgb(212,154,47)"/><text x="147.00" y="382.50"></text></g><g><title>0x7fbcbe408666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="144" y="388" width="2" height="15" fill="rgb(224,219,8)"/><text x="147.00" y="398.50"></text></g><g><title>0x7fbcbe3fe2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="144" y="404" width="2" height="15" fill="rgb(234,87,25)"/><text x="147.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="144" y="420" width="2" height="15" fill="rgb(224,111,32)"/><text x="147.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.16%)</title><rect x="144" y="436" width="2" height="15" fill="rgb(250,129,41)"/><text x="147.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:569) (1 samples, 0.16%)</title><rect x="144" y="452" width="2" height="15" fill="rgb(230,42,37)"/><text x="147.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="144" y="468" width="2" height="15" fill="rgb(216,119,17)"/><text x="147.00" y="478.50"></text></g><g><title>0x7fbcbe424456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="146" y="356" width="2" height="15" fill="rgb(238,111,0)"/><text x="149.00" y="366.50"></text></g><g><title>0x7fbcbe4246aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="148" y="356" width="6" height="15" fill="rgb(252,87,10)"/><text x="151.00" y="366.50"></text></g><g><title>0x7fbcbe4246ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="154" y="356" width="2" height="15" fill="rgb(221,147,53)"/><text x="157.00" y="366.50"></text></g><g><title>0x7fbcbe4246b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="156" y="356" width="1" height="15" fill="rgb(252,41,43)"/><text x="159.00" y="366.50"></text></g><g><title>0x7fbcbe4246c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="157" y="356" width="2" height="15" fill="rgb(248,204,26)"/><text x="160.00" y="366.50"></text></g><g><title>0x7fbcbe4246c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="159" y="356" width="2" height="15" fill="rgb(209,228,26)"/><text x="162.00" y="366.50"></text></g><g><title>0x7fbcbe4246d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="161" y="356" width="2" height="15" fill="rgb(240,66,15)"/><text x="164.00" y="366.50"></text></g><g><title>0x7fbcbe4246e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="163" y="356" width="2" height="15" fill="rgb(247,9,52)"/><text x="166.00" y="366.50"></text></g><g><title>0x7fbcbe4247a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="165" y="356" width="2" height="15" fill="rgb(224,151,52)"/><text x="168.00" y="366.50"></text></g><g><title>0x7fbcbe4247b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="167" y="356" width="2" height="15" fill="rgb(219,70,2)"/><text x="170.00" y="366.50"></text></g><g><title>0x7fbcbe3fc529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="169" y="372" width="2" height="15" fill="rgb(224,22,37)"/><text x="172.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="169" y="388" width="2" height="15" fill="rgb(205,43,20)"/><text x="172.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.16%)</title><rect x="169" y="404" width="2" height="15" fill="rgb(244,21,32)"/><text x="172.00" y="414.50"></text></g><g><title>0x7fbcbe3fbae3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="171" y="404" width="2" height="15" fill="rgb(209,73,45)"/><text x="174.00" y="414.50"></text></g><g><title>0x7fbcbe425405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.57%)</title><rect x="144" y="340" width="31" height="15" fill="rgb(238,5,52)"/><text x="147.00" y="350.50">0x..</text></g><g><title>0x7fbcbe424c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="169" y="356" width="6" height="15" fill="rgb(217,138,12)"/><text x="172.00" y="366.50"></text></g><g><title>0x7fbcbe3fc5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="171" y="372" width="4" height="15" fill="rgb(223,185,19)"/><text x="174.00" y="382.50"></text></g><g><title>0x7fbcbe3fc2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="171" y="388" width="4" height="15" fill="rgb(211,225,53)"/><text x="174.00" y="398.50"></text></g><g><title>0x7fbcbe3fbbad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="173" y="404" width="2" height="15" fill="rgb(252,80,43)"/><text x="176.00" y="414.50"></text></g><g><title>0x7fbcbe3fa178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="175" y="356" width="1" height="15" fill="rgb(225,26,42)"/><text x="178.00" y="366.50"></text></g><g><title>0x7fbcbe415fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.89%)</title><rect x="144" y="324" width="34" height="15" fill="rgb(210,115,19)"/><text x="147.00" y="334.50">0x..</text></g><g><title>0x7fbcbe425540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="175" y="340" width="3" height="15" fill="rgb(205,141,8)"/><text x="178.00" y="350.50"></text></g><g><title>0x7fbcbe3fa2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="176" y="356" width="2" height="15" fill="rgb(223,33,25)"/><text x="179.00" y="366.50"></text></g><g><title>0x7fbcbe3f9530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="176" y="372" width="2" height="15" fill="rgb(241,181,39)"/><text x="179.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="176" y="388" width="2" height="15" fill="rgb(218,47,15)"/><text x="179.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.16%)</title><rect x="178" y="340" width="2" height="15" fill="rgb(219,113,20)"/><text x="181.00" y="350.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.16%)</title><rect x="178" y="356" width="2" height="15" fill="rgb(235,228,21)"/><text x="181.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.16%)</title><rect x="180" y="372" width="2" height="15" fill="rgb(230,7,0)"/><text x="183.00" y="382.50"></text></g><g><title>0x7fbcbe41605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="178" y="324" width="6" height="15" fill="rgb(234,185,16)"/><text x="181.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.32%)</title><rect x="180" y="340" width="4" height="15" fill="rgb(217,92,8)"/><text x="183.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.32%)</title><rect x="180" y="356" width="4" height="15" fill="rgb(208,184,4)"/><text x="183.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.16%)</title><rect x="182" y="372" width="2" height="15" fill="rgb(230,99,48)"/><text x="185.00" y="382.50"></text></g><g><title>0x7fbcbe41613a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="184" y="324" width="2" height="15" fill="rgb(248,194,8)"/><text x="187.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="184" y="340" width="2" height="15" fill="rgb(241,18,9)"/><text x="187.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="184" y="356" width="2" height="15" fill="rgb(230,223,30)"/><text x="187.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.16%)</title><rect x="184" y="372" width="2" height="15" fill="rgb(222,80,18)"/><text x="187.00" y="382.50"></text></g><g><title>0x7fbcbe4161bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="186" y="324" width="2" height="15" fill="rgb(216,168,36)"/><text x="189.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.16%)</title><rect x="186" y="340" width="2" height="15" fill="rgb(232,113,54)"/><text x="189.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (24 samples, 3.86%)</title><rect x="144" y="292" width="46" height="15" fill="rgb(233,60,47)"/><text x="147.00" y="302.50">pred..</text></g><g><title>0x7fbcbe416d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.86%)</title><rect x="144" y="308" width="46" height="15" fill="rgb(235,224,46)"/><text x="147.00" y="318.50">0x7f..</text></g><g><title>0x7fbcbe416328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="188" y="324" width="2" height="15" fill="rgb(254,218,22)"/><text x="191.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.16%)</title><rect x="188" y="340" width="2" height="15" fill="rgb(249,73,8)"/><text x="191.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.16%)</title><rect x="188" y="356" width="2" height="15" fill="rgb(239,221,38)"/><text x="191.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="194" y="308" width="1" height="15" fill="rgb(235,148,2)"/><text x="197.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.16%)</title><rect x="194" y="324" width="1" height="15" fill="rgb(230,147,12)"/><text x="197.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.16%)</title><rect x="194" y="340" width="1" height="15" fill="rgb(254,1,28)"/><text x="197.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.16%)</title><rect x="194" y="356" width="1" height="15" fill="rgb(228,81,3)"/><text x="197.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.16%)</title><rect x="194" y="372" width="1" height="15" fill="rgb(254,89,52)"/><text x="197.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.16%)</title><rect x="194" y="388" width="1" height="15" fill="rgb(244,21,5)"/><text x="197.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (4 samples, 0.64%)</title><rect x="190" y="292" width="7" height="15" fill="rgb(225,125,11)"/><text x="193.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1718) (1 samples, 0.16%)</title><rect x="195" y="308" width="2" height="15" fill="rgb(238,29,39)"/><text x="198.00" y="318.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.16%)</title><rect x="201" y="356" width="2" height="15" fill="rgb(245,218,33)"/><text x="204.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="201" y="372" width="2" height="15" fill="rgb(233,142,12)"/><text x="204.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.16%)</title><rect x="201" y="388" width="2" height="15" fill="rgb(248,142,8)"/><text x="204.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.16%)</title><rect x="201" y="404" width="2" height="15" fill="rgb(244,68,45)"/><text x="204.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.16%)</title><rect x="201" y="420" width="2" height="15" fill="rgb(254,146,53)"/><text x="204.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.16%)</title><rect x="201" y="436" width="2" height="15" fill="rgb(250,216,51)"/><text x="204.00" y="446.50"></text></g><g><title>0x7fbce4ab0fa0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="201" y="452" width="2" height="15" fill="rgb(240,63,31)"/><text x="204.00" y="462.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.16%)</title><rect x="203" y="372" width="2" height="15" fill="rgb(228,22,36)"/><text x="206.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.16%)</title><rect x="205" y="452" width="2" height="15" fill="rgb(225,125,14)"/><text x="208.00" y="462.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.16%)</title><rect x="205" y="468" width="2" height="15" fill="rgb(217,35,14)"/><text x="208.00" y="478.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="205" y="484" width="2" height="15" fill="rgb(251,114,29)"/><text x="208.00" y="494.50"></text></g><g><title>0x7fbce498a8c8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="205" y="500" width="2" height="15" fill="rgb(215,134,10)"/><text x="208.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.32%)</title><rect x="205" y="404" width="4" height="15" fill="rgb(229,112,54)"/><text x="208.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.32%)</title><rect x="205" y="420" width="4" height="15" fill="rgb(207,216,13)"/><text x="208.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.32%)</title><rect x="205" y="436" width="4" height="15" fill="rgb(227,203,35)"/><text x="208.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.16%)</title><rect x="207" y="452" width="2" height="15" fill="rgb(252,170,10)"/><text x="210.00" y="462.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="207" y="468" width="2" height="15" fill="rgb(224,5,48)"/><text x="210.00" y="478.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.16%)</title><rect x="209" y="436" width="2" height="15" fill="rgb(252,65,4)"/><text x="212.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="212" y="452" width="2" height="15" fill="rgb(233,121,48)"/><text x="215.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.48%)</title><rect x="211" y="436" width="5" height="15" fill="rgb(215,219,29)"/><text x="214.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.16%)</title><rect x="214" y="452" width="2" height="15" fill="rgb(253,107,51)"/><text x="217.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.16%)</title><rect x="216" y="436" width="2" height="15" fill="rgb(245,117,51)"/><text x="219.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (6 samples, 0.96%)</title><rect x="209" y="404" width="11" height="15" fill="rgb(224,97,45)"/><text x="212.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.96%)</title><rect x="209" y="420" width="11" height="15" fill="rgb(213,149,3)"/><text x="212.00" y="430.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.16%)</title><rect x="218" y="436" width="2" height="15" fill="rgb(211,8,22)"/><text x="221.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 2.09%)</title><rect x="197" y="292" width="25" height="15" fill="rgb(223,166,37)"/><text x="200.00" y="302.50">p..</text></g><g><title>array_sum (methods.c:2215) (13 samples, 2.09%)</title><rect x="197" y="308" width="25" height="15" fill="rgb(231,185,37)"/><text x="200.00" y="318.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 2.09%)</title><rect x="197" y="324" width="25" height="15" fill="rgb(228,59,26)"/><text x="200.00" y="334.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 1.93%)</title><rect x="199" y="340" width="23" height="15" fill="rgb(226,113,14)"/><text x="202.00" y="350.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.61%)</title><rect x="203" y="356" width="19" height="15" fill="rgb(233,185,23)"/><text x="206.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.45%)</title><rect x="205" y="372" width="17" height="15" fill="rgb(251,132,6)"/><text x="208.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (9 samples, 1.45%)</title><rect x="205" y="388" width="17" height="15" fill="rgb(235,179,30)"/><text x="208.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.16%)</title><rect x="220" y="404" width="2" height="15" fill="rgb(240,39,42)"/><text x="223.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.16%)</title><rect x="220" y="420" width="2" height="15" fill="rgb(232,195,16)"/><text x="223.00" y="430.50"></text></g><g><title>count_boolean_trues (item_selection.c:2036) (1 samples, 0.16%)</title><rect x="224" y="340" width="2" height="15" fill="rgb(239,120,31)"/><text x="227.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3869) (1 samples, 0.16%)</title><rect x="224" y="356" width="2" height="15" fill="rgb(212,154,28)"/><text x="227.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(230,7,34)"/><text x="227.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="224" y="388" width="2" height="15" fill="rgb(209,103,12)"/><text x="227.00" y="398.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.32%)</title><rect x="224" y="308" width="4" height="15" fill="rgb(207,29,8)"/><text x="227.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (2 samples, 0.32%)</title><rect x="224" y="324" width="4" height="15" fill="rgb(248,225,37)"/><text x="227.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2065) (1 samples, 0.16%)</title><rect x="226" y="340" width="2" height="15" fill="rgb(229,89,48)"/><text x="229.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (1 samples, 0.16%)</title><rect x="228" y="308" width="2" height="15" fill="rgb(229,189,33)"/><text x="231.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:145) (1 samples, 0.16%)</title><rect x="228" y="324" width="2" height="15" fill="rgb(217,177,6)"/><text x="231.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.16%)</title><rect x="230" y="324" width="1" height="15" fill="rgb(224,106,14)"/><text x="233.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.16%)</title><rect x="231" y="340" width="2" height="15" fill="rgb(238,204,6)"/><text x="234.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.16%)</title><rect x="231" y="356" width="2" height="15" fill="rgb(207,125,3)"/><text x="234.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.16%)</title><rect x="233" y="340" width="2" height="15" fill="rgb(250,105,50)"/><text x="236.00" y="350.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.16%)</title><rect x="233" y="356" width="2" height="15" fill="rgb(235,83,3)"/><text x="236.00" y="366.50"></text></g><g><title>_extract_pyvals (extobj.c:196) (1 samples, 0.16%)</title><rect x="233" y="372" width="2" height="15" fill="rgb(247,224,4)"/><text x="236.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1691) (1 samples, 0.16%)</title><rect x="235" y="356" width="2" height="15" fill="rgb(218,126,51)"/><text x="238.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (9 samples, 1.45%)</title><rect x="222" y="292" width="17" height="15" fill="rgb(235,58,19)"/><text x="225.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (5 samples, 0.80%)</title><rect x="230" y="308" width="9" height="15" fill="rgb(237,38,42)"/><text x="233.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.64%)</title><rect x="231" y="324" width="8" height="15" fill="rgb(234,57,53)"/><text x="234.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.32%)</title><rect x="235" y="340" width="4" height="15" fill="rgb(252,141,40)"/><text x="238.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.16%)</title><rect x="237" y="356" width="2" height="15" fill="rgb(212,72,33)"/><text x="240.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.16%)</title><rect x="237" y="372" width="2" height="15" fill="rgb(253,43,18)"/><text x="240.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="237" y="388" width="2" height="15" fill="rgb(226,196,49)"/><text x="240.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.16%)</title><rect x="239" y="308" width="2" height="15" fill="rgb(236,39,34)"/><text x="242.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="239" y="324" width="2" height="15" fill="rgb(205,212,24)"/><text x="242.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.16%)</title><rect x="239" y="340" width="2" height="15" fill="rgb(236,102,23)"/><text x="242.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.16%)</title><rect x="239" y="356" width="2" height="15" fill="rgb(225,147,17)"/><text x="242.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.16%)</title><rect x="241" y="372" width="2" height="15" fill="rgb(231,189,40)"/><text x="244.00" y="382.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2168) (1 samples, 0.16%)</title><rect x="241" y="388" width="2" height="15" fill="rgb(253,82,38)"/><text x="244.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.16%)</title><rect x="243" y="372" width="2" height="15" fill="rgb(239,166,44)"/><text x="246.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1679) (1 samples, 0.16%)</title><rect x="243" y="388" width="2" height="15" fill="rgb(212,35,20)"/><text x="246.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.48%)</title><rect x="241" y="356" width="6" height="15" fill="rgb(217,131,49)"/><text x="244.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:505) (1 samples, 0.16%)</title><rect x="245" y="372" width="2" height="15" fill="rgb(239,202,6)"/><text x="248.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.16%)</title><rect x="247" y="404" width="2" height="15" fill="rgb(247,220,24)"/><text x="250.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.16%)</title><rect x="249" y="404" width="1" height="15" fill="rgb(213,60,33)"/><text x="252.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.32%)</title><rect x="250" y="404" width="4" height="15" fill="rgb(233,138,32)"/><text x="253.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.16%)</title><rect x="254" y="404" width="2" height="15" fill="rgb(230,211,44)"/><text x="257.00" y="414.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.13%)</title><rect x="247" y="388" width="13" height="15" fill="rgb(252,43,29)"/><text x="250.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.32%)</title><rect x="256" y="404" width="4" height="15" fill="rgb(220,190,18)"/><text x="259.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.32%)</title><rect x="256" y="420" width="4" height="15" fill="rgb(208,224,24)"/><text x="259.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 1.29%)</title><rect x="247" y="356" width="15" height="15" fill="rgb(209,120,36)"/><text x="250.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (8 samples, 1.29%)</title><rect x="247" y="372" width="15" height="15" fill="rgb(208,171,52)"/><text x="250.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.16%)</title><rect x="260" y="388" width="2" height="15" fill="rgb(205,67,8)"/><text x="263.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 0.64%)</title><rect x="262" y="356" width="7" height="15" fill="rgb(216,67,51)"/><text x="265.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (4 samples, 0.64%)</title><rect x="262" y="372" width="7" height="15" fill="rgb(206,85,40)"/><text x="265.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (4 samples, 0.64%)</title><rect x="262" y="388" width="7" height="15" fill="rgb(232,224,53)"/><text x="265.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (4 samples, 0.64%)</title><rect x="262" y="404" width="7" height="15" fill="rgb(230,10,10)"/><text x="265.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (4 samples, 0.64%)</title><rect x="262" y="420" width="7" height="15" fill="rgb(250,86,28)"/><text x="265.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (83 samples, 13.34%)</title><rect x="114" y="276" width="157" height="15" fill="rgb(211,0,39)"/><text x="117.00" y="286.50">_accumulate_predicti..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (17 samples, 2.73%)</title><rect x="239" y="292" width="32" height="15" fill="rgb(231,184,7)"/><text x="242.00" y="302.50">pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 2.57%)</title><rect x="241" y="308" width="30" height="15" fill="rgb(230,206,6)"/><text x="244.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 2.57%)</title><rect x="241" y="324" width="30" height="15" fill="rgb(251,28,48)"/><text x="244.00" y="334.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (16 samples, 2.57%)</title><rect x="241" y="340" width="30" height="15" fill="rgb(227,66,3)"/><text x="244.00" y="350.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.16%)</title><rect x="269" y="356" width="2" height="15" fill="rgb(229,199,25)"/><text x="272.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.16%)</title><rect x="269" y="372" width="2" height="15" fill="rgb(216,94,47)"/><text x="272.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (3 samples, 0.48%)</title><rect x="271" y="276" width="6" height="15" fill="rgb(233,104,11)"/><text x="274.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.16%)</title><rect x="275" y="292" width="2" height="15" fill="rgb(205,196,11)"/><text x="278.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.16%)</title><rect x="275" y="308" width="2" height="15" fill="rgb(214,14,52)"/><text x="278.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.16%)</title><rect x="277" y="276" width="2" height="15" fill="rgb(220,221,35)"/><text x="280.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1611) (1 samples, 0.16%)</title><rect x="281" y="324" width="2" height="15" fill="rgb(213,212,1)"/><text x="284.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.16%)</title><rect x="283" y="324" width="2" height="15" fill="rgb(224,108,17)"/><text x="286.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.16%)</title><rect x="283" y="340" width="2" height="15" fill="rgb(220,147,21)"/><text x="286.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.16%)</title><rect x="283" y="356" width="2" height="15" fill="rgb(227,30,13)"/><text x="286.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.16%)</title><rect x="283" y="372" width="2" height="15" fill="rgb(224,145,32)"/><text x="286.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="283" y="388" width="2" height="15" fill="rgb(207,201,24)"/><text x="286.00" y="398.50"></text></g><g><title>0x7fbce498aa3c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="283" y="404" width="2" height="15" fill="rgb(250,122,27)"/><text x="286.00" y="414.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1369) (1 samples, 0.16%)</title><rect x="285" y="340" width="1" height="15" fill="rgb(231,69,12)"/><text x="288.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 0.80%)</title><rect x="279" y="276" width="9" height="15" fill="rgb(234,139,5)"/><text x="282.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.64%)</title><rect x="281" y="292" width="7" height="15" fill="rgb(245,185,14)"/><text x="284.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.64%)</title><rect x="281" y="308" width="7" height="15" fill="rgb(207,69,13)"/><text x="284.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.32%)</title><rect x="285" y="324" width="3" height="15" fill="rgb(213,69,19)"/><text x="288.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.16%)</title><rect x="286" y="340" width="2" height="15" fill="rgb(225,109,35)"/><text x="289.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.16%)</title><rect x="286" y="356" width="2" height="15" fill="rgb(236,64,49)"/><text x="289.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.16%)</title><rect x="286" y="372" width="2" height="15" fill="rgb(231,56,21)"/><text x="289.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.16%)</title><rect x="286" y="388" width="2" height="15" fill="rgb(217,101,41)"/><text x="289.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.16%)</title><rect x="286" y="404" width="2" height="15" fill="rgb(254,219,18)"/><text x="289.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (94 samples, 15.11%)</title><rect x="114" y="260" width="178" height="15" fill="rgb(215,3,6)"/><text x="117.00" y="270.50">&lt;listcomp&gt; (joblib/para..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.32%)</title><rect x="288" y="276" width="4" height="15" fill="rgb(242,110,48)"/><text x="291.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (101 samples, 16.24%)</title><rect x="104" y="212" width="192" height="15" fill="rgb(217,27,27)"/><text x="107.00" y="222.50">apply_async (joblib/_para..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (101 samples, 16.24%)</title><rect x="104" y="228" width="192" height="15" fill="rgb(240,36,48)"/><text x="107.00" y="238.50">__init__ (joblib/_paralle..</text></g><g><title>__call__ (joblib/parallel.py:256) (99 samples, 15.92%)</title><rect x="108" y="244" width="188" height="15" fill="rgb(223,185,35)"/><text x="111.00" y="254.50">__call__ (joblib/paralle..</text></g><g><title>__exit__ (joblib/parallel.py:215) (2 samples, 0.32%)</title><rect x="292" y="260" width="4" height="15" fill="rgb(246,104,37)"/><text x="295.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.16%)</title><rect x="294" y="276" width="2" height="15" fill="rgb(247,57,22)"/><text x="297.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.16%)</title><rect x="296" y="228" width="2" height="15" fill="rgb(252,30,24)"/><text x="299.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.32%)</title><rect x="298" y="228" width="4" height="15" fill="rgb(226,137,39)"/><text x="301.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.16%)</title><rect x="300" y="244" width="2" height="15" fill="rgb(237,3,29)"/><text x="303.00" y="254.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (4 samples, 0.64%)</title><rect x="296" y="212" width="8" height="15" fill="rgb(218,4,48)"/><text x="299.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.16%)</title><rect x="302" y="228" width="2" height="15" fill="rgb(214,207,52)"/><text x="305.00" y="238.50"></text></g><g><title>0x7fbce49e8730 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="302" y="244" width="2" height="15" fill="rgb(208,34,17)"/><text x="305.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (107 samples, 17.20%)</title><rect x="102" y="196" width="203" height="15" fill="rgb(223,149,6)"/><text x="105.00" y="206.50">_dispatch (joblib/parallel..</text></g><g><title>apply_async (joblib/_parallel_backends.py:204) (1 samples, 0.16%)</title><rect x="304" y="212" width="1" height="15" fill="rgb(251,155,54)"/><text x="307.00" y="222.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (152 samples, 24.44%)</title><rect x="19" y="100" width="288" height="15" fill="rgb(234,85,4)"/><text x="22.00" y="110.50">profile (bench_RandomForestClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (152 samples, 24.44%)</title><rect x="19" y="116" width="288" height="15" fill="rgb(237,127,5)"/><text x="22.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (152 samples, 24.44%)</title><rect x="19" y="132" width="288" height="15" fill="rgb(222,72,46)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (151 samples, 24.28%)</title><rect x="21" y="148" width="286" height="15" fill="rgb(209,46,14)"/><text x="24.00" y="158.50">predict_proba (sklearn/ensemble/_fores..</text></g><g><title>__call__ (joblib/parallel.py:1006) (151 samples, 24.28%)</title><rect x="21" y="164" width="286" height="15" fill="rgb(252,3,27)"/><text x="24.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (112 samples, 18.01%)</title><rect x="95" y="180" width="212" height="15" fill="rgb(216,220,45)"/><text x="98.00" y="190.50">dispatch_one_batch (joblib/..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.16%)</title><rect x="305" y="196" width="2" height="15" fill="rgb(233,181,45)"/><text x="308.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:654) (1 samples, 0.16%)</title><rect x="307" y="148" width="2" height="15" fill="rgb(217,115,18)"/><text x="310.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="307" y="164" width="2" height="15" fill="rgb(224,133,32)"/><text x="310.00" y="174.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (1 samples, 0.16%)</title><rect x="309" y="148" width="2" height="15" fill="rgb(226,40,47)"/><text x="312.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:410) (1 samples, 0.16%)</title><rect x="309" y="164" width="2" height="15" fill="rgb(239,44,11)"/><text x="312.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="309" y="180" width="2" height="15" fill="rgb(227,131,1)"/><text x="312.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.16%)</title><rect x="309" y="196" width="2" height="15" fill="rgb(231,9,50)"/><text x="312.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.16%)</title><rect x="311" y="164" width="2" height="15" fill="rgb(245,190,24)"/><text x="314.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.16%)</title><rect x="311" y="180" width="2" height="15" fill="rgb(246,23,46)"/><text x="314.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.16%)</title><rect x="311" y="196" width="2" height="15" fill="rgb(213,64,19)"/><text x="314.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.16%)</title><rect x="317" y="180" width="2" height="15" fill="rgb(230,123,52)"/><text x="320.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.16%)</title><rect x="324" y="196" width="2" height="15" fill="rgb(250,65,2)"/><text x="327.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 0.80%)</title><rect x="319" y="180" width="9" height="15" fill="rgb(230,185,33)"/><text x="322.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.16%)</title><rect x="326" y="196" width="2" height="15" fill="rgb(212,210,20)"/><text x="329.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.16%)</title><rect x="326" y="212" width="2" height="15" fill="rgb(233,133,2)"/><text x="329.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.16%)</title><rect x="328" y="180" width="2" height="15" fill="rgb(227,138,6)"/><text x="331.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.16%)</title><rect x="338" y="212" width="2" height="15" fill="rgb(230,92,25)"/><text x="341.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:58) (3 samples, 0.48%)</title><rect x="341" y="228" width="6" height="15" fill="rgb(247,25,29)"/><text x="344.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (10 samples, 1.61%)</title><rect x="330" y="180" width="19" height="15" fill="rgb(215,200,20)"/><text x="333.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (8 samples, 1.29%)</title><rect x="334" y="196" width="15" height="15" fill="rgb(210,200,43)"/><text x="337.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (5 samples, 0.80%)</title><rect x="340" y="212" width="9" height="15" fill="rgb(225,38,50)"/><text x="343.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.16%)</title><rect x="347" y="228" width="2" height="15" fill="rgb(217,47,8)"/><text x="350.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.16%)</title><rect x="349" y="180" width="2" height="15" fill="rgb(224,127,46)"/><text x="352.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.16%)</title><rect x="351" y="180" width="2" height="15" fill="rgb(228,26,51)"/><text x="354.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.16%)</title><rect x="353" y="180" width="2" height="15" fill="rgb(246,93,52)"/><text x="356.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.16%)</title><rect x="360" y="212" width="2" height="15" fill="rgb(230,28,0)"/><text x="363.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.16%)</title><rect x="362" y="212" width="2" height="15" fill="rgb(214,117,53)"/><text x="365.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (6 samples, 0.96%)</title><rect x="355" y="196" width="11" height="15" fill="rgb(217,223,0)"/><text x="358.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.16%)</title><rect x="364" y="212" width="2" height="15" fill="rgb(219,90,24)"/><text x="367.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.48%)</title><rect x="366" y="212" width="6" height="15" fill="rgb(233,149,36)"/><text x="369.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.32%)</title><rect x="368" y="228" width="4" height="15" fill="rgb(212,33,34)"/><text x="371.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.16%)</title><rect x="370" y="244" width="2" height="15" fill="rgb(215,32,32)"/><text x="373.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.16%)</title><rect x="372" y="212" width="2" height="15" fill="rgb(228,62,44)"/><text x="375.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (11 samples, 1.77%)</title><rect x="355" y="180" width="21" height="15" fill="rgb(251,30,11)"/><text x="358.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (5 samples, 0.80%)</title><rect x="366" y="196" width="10" height="15" fill="rgb(251,3,33)"/><text x="369.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.16%)</title><rect x="374" y="212" width="2" height="15" fill="rgb(229,56,53)"/><text x="377.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.16%)</title><rect x="376" y="180" width="2" height="15" fill="rgb(214,169,19)"/><text x="379.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.16%)</title><rect x="376" y="196" width="2" height="15" fill="rgb(208,160,19)"/><text x="379.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.16%)</title><rect x="379" y="196" width="2" height="15" fill="rgb(248,213,34)"/><text x="382.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.16%)</title><rect x="379" y="212" width="2" height="15" fill="rgb(253,208,12)"/><text x="382.00" y="222.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.16%)</title><rect x="381" y="212" width="2" height="15" fill="rgb(207,34,45)"/><text x="384.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.16%)</title><rect x="381" y="228" width="2" height="15" fill="rgb(206,9,36)"/><text x="384.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 0.96%)</title><rect x="378" y="180" width="11" height="15" fill="rgb(219,48,23)"/><text x="381.00" y="190.50"></text></g><g><title>put (queue.py:151) (4 samples, 0.64%)</title><rect x="381" y="196" width="8" height="15" fill="rgb(209,205,13)"/><text x="384.00" y="206.50"></text></g><g><title>notify (threading.py:348) (3 samples, 0.48%)</title><rect x="383" y="212" width="6" height="15" fill="rgb(240,204,13)"/><text x="386.00" y="222.50"></text></g><g><title>0x7fbce49f312f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="387" y="228" width="2" height="15" fill="rgb(225,222,52)"/><text x="390.00" y="238.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.16%)</title><rect x="389" y="212" width="2" height="15" fill="rgb(226,153,8)"/><text x="392.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.16%)</title><rect x="389" y="228" width="2" height="15" fill="rgb(246,51,37)"/><text x="392.00" y="238.50"></text></g><g><title>get (queue.py:181) (3 samples, 0.48%)</title><rect x="389" y="196" width="6" height="15" fill="rgb(244,83,38)"/><text x="392.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.32%)</title><rect x="391" y="212" width="4" height="15" fill="rgb(242,113,33)"/><text x="394.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (5 samples, 0.80%)</title><rect x="389" y="180" width="9" height="15" fill="rgb(238,95,16)"/><text x="392.00" y="190.50"></text></g><g><title>get (queue.py:182) (2 samples, 0.32%)</title><rect x="395" y="196" width="3" height="15" fill="rgb(223,127,9)"/><text x="398.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.16%)</title><rect x="398" y="180" width="2" height="15" fill="rgb(215,91,42)"/><text x="401.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:258) (1 samples, 0.16%)</title><rect x="398" y="196" width="2" height="15" fill="rgb(218,113,48)"/><text x="401.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (2 samples, 0.32%)</title><rect x="404" y="196" width="4" height="15" fill="rgb(237,91,13)"/><text x="407.00" y="206.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.16%)</title><rect x="406" y="212" width="2" height="15" fill="rgb(245,53,42)"/><text x="409.00" y="222.50"></text></g><g><title>0x7ffc01b5ebb2 ([vdso]) (1 samples, 0.16%)</title><rect x="406" y="228" width="2" height="15" fill="rgb(209,114,46)"/><text x="409.00" y="238.50"></text></g><g><title>0x7ffc01b5e949 ([vdso]) (1 samples, 0.16%)</title><rect x="406" y="244" width="2" height="15" fill="rgb(235,85,34)"/><text x="409.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (3 samples, 0.48%)</title><rect x="408" y="196" width="6" height="15" fill="rgb(241,153,18)"/><text x="411.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (2 samples, 0.32%)</title><rect x="414" y="196" width="3" height="15" fill="rgb(212,84,28)"/><text x="417.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (2 samples, 0.32%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(227,110,3)"/><text x="422.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.48%)</title><rect x="419" y="244" width="6" height="15" fill="rgb(223,173,32)"/><text x="422.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.16%)</title><rect x="423" y="260" width="2" height="15" fill="rgb(224,111,2)"/><text x="426.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.16%)</title><rect x="433" y="292" width="1" height="15" fill="rgb(250,194,42)"/><text x="436.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.16%)</title><rect x="433" y="308" width="1" height="15" fill="rgb(223,164,33)"/><text x="436.00" y="318.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.16%)</title><rect x="433" y="324" width="1" height="15" fill="rgb(244,101,39)"/><text x="436.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.16%)</title><rect x="433" y="340" width="1" height="15" fill="rgb(205,91,49)"/><text x="436.00" y="350.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.16%)</title><rect x="433" y="356" width="1" height="15" fill="rgb(226,203,33)"/><text x="436.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="442" y="340" width="2" height="15" fill="rgb(252,39,17)"/><text x="445.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.64%)</title><rect x="438" y="324" width="8" height="15" fill="rgb(250,4,8)"/><text x="441.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="444" y="340" width="2" height="15" fill="rgb(244,82,3)"/><text x="447.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (8 samples, 1.29%)</title><rect x="434" y="292" width="16" height="15" fill="rgb(224,165,15)"/><text x="437.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 1.13%)</title><rect x="436" y="308" width="14" height="15" fill="rgb(225,189,49)"/><text x="439.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.32%)</title><rect x="446" y="324" width="4" height="15" fill="rgb(221,120,2)"/><text x="449.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="448" y="340" width="2" height="15" fill="rgb(246,26,36)"/><text x="451.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (2 samples, 0.32%)</title><rect x="450" y="292" width="3" height="15" fill="rgb(237,51,37)"/><text x="453.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.32%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(205,22,48)"/><text x="453.00" y="318.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.16%)</title><rect x="452" y="324" width="1" height="15" fill="rgb(238,173,26)"/><text x="455.00" y="334.50"></text></g><g><title>0x7fbcbe415f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="455" y="324" width="2" height="15" fill="rgb(205,61,13)"/><text x="458.00" y="334.50"></text></g><g><title>0x7fbcbe405d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="455" y="340" width="2" height="15" fill="rgb(243,84,20)"/><text x="458.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.16%)</title><rect x="455" y="356" width="2" height="15" fill="rgb(224,6,11)"/><text x="458.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="455" y="372" width="2" height="15" fill="rgb(233,80,45)"/><text x="458.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.16%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(253,59,35)"/><text x="458.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:641) (1 samples, 0.16%)</title><rect x="457" y="436" width="2" height="15" fill="rgb(219,223,28)"/><text x="460.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.16%)</title><rect x="459" y="436" width="2" height="15" fill="rgb(236,215,40)"/><text x="462.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.16%)</title><rect x="461" y="436" width="2" height="15" fill="rgb(233,19,26)"/><text x="464.00" y="446.50"></text></g><g><title>0x7fbcbe408d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.64%)</title><rect x="457" y="372" width="8" height="15" fill="rgb(253,114,26)"/><text x="460.00" y="382.50"></text></g><g><title>0x7fbcbe408666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.64%)</title><rect x="457" y="388" width="8" height="15" fill="rgb(214,177,24)"/><text x="460.00" y="398.50"></text></g><g><title>0x7fbcbe3fe2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.64%)</title><rect x="457" y="404" width="8" height="15" fill="rgb(208,190,26)"/><text x="460.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 0.64%)</title><rect x="457" y="420" width="8" height="15" fill="rgb(237,104,39)"/><text x="460.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.16%)</title><rect x="463" y="436" width="2" height="15" fill="rgb(230,26,42)"/><text x="466.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.16%)</title><rect x="463" y="452" width="2" height="15" fill="rgb(210,48,25)"/><text x="466.00" y="462.50"></text></g><g><title>0x7fbce49e193a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="463" y="468" width="2" height="15" fill="rgb(224,71,47)"/><text x="466.00" y="478.50"></text></g><g><title>0x7fbcbe4242df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.80%)</title><rect x="457" y="356" width="10" height="15" fill="rgb(211,226,43)"/><text x="460.00" y="366.50"></text></g><g><title>0x7fbcbe408e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="465" y="372" width="2" height="15" fill="rgb(224,41,46)"/><text x="468.00" y="382.50"></text></g><g><title>0x7fbcbe3fc2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="465" y="388" width="2" height="15" fill="rgb(253,66,34)"/><text x="468.00" y="398.50"></text></g><g><title>0x7fbcbe3fbab2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="465" y="404" width="2" height="15" fill="rgb(222,138,31)"/><text x="468.00" y="414.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.16%)</title><rect x="467" y="404" width="2" height="15" fill="rgb(223,183,42)"/><text x="470.00" y="414.50"></text></g><g><title>0x7fbce3bf4ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="467" y="420" width="2" height="15" fill="rgb(243,46,48)"/><text x="470.00" y="430.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.32%)</title><rect x="467" y="372" width="3" height="15" fill="rgb(212,67,18)"/><text x="470.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.32%)</title><rect x="467" y="388" width="3" height="15" fill="rgb(251,193,49)"/><text x="470.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.16%)</title><rect x="469" y="404" width="1" height="15" fill="rgb(241,46,5)"/><text x="472.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.16%)</title><rect x="469" y="420" width="1" height="15" fill="rgb(225,153,2)"/><text x="472.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.16%)</title><rect x="469" y="436" width="1" height="15" fill="rgb(223,62,51)"/><text x="472.00" y="446.50"></text></g><g><title>0x7fbcbe424592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.48%)</title><rect x="467" y="356" width="5" height="15" fill="rgb(207,57,4)"/><text x="470.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.16%)</title><rect x="470" y="372" width="2" height="15" fill="rgb(254,155,54)"/><text x="473.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.16%)</title><rect x="470" y="388" width="2" height="15" fill="rgb(253,169,24)"/><text x="473.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.16%)</title><rect x="470" y="404" width="2" height="15" fill="rgb(214,70,21)"/><text x="473.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="470" y="420" width="2" height="15" fill="rgb(208,21,51)"/><text x="473.00" y="430.50"></text></g><g><title>0x7fbcbe424644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(247,74,51)"/><text x="475.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(228,87,15)"/><text x="475.00" y="382.50"></text></g><g><title>0x7fbcbe424690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(251,83,1)"/><text x="477.00" y="366.50"></text></g><g><title>0x7fbcbe42469b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="476" y="356" width="4" height="15" fill="rgb(221,5,25)"/><text x="479.00" y="366.50"></text></g><g><title>0x7fbcbe4246aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.96%)</title><rect x="480" y="356" width="11" height="15" fill="rgb(222,102,49)"/><text x="483.00" y="366.50"></text></g><g><title>0x7fbcbe4246ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="491" y="356" width="2" height="15" fill="rgb(227,224,52)"/><text x="494.00" y="366.50"></text></g><g><title>0x7fbcbe4246e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="493" y="356" width="2" height="15" fill="rgb(240,153,47)"/><text x="496.00" y="366.50"></text></g><g><title>0x7fbcbe4247a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="495" y="356" width="2" height="15" fill="rgb(210,226,48)"/><text x="498.00" y="366.50"></text></g><g><title>0x7fbcbe42492f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="497" y="356" width="2" height="15" fill="rgb(214,32,9)"/><text x="500.00" y="366.50"></text></g><g><title>0x7fbcbe3f99af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="497" y="372" width="2" height="15" fill="rgb(254,24,29)"/><text x="500.00" y="382.50"></text></g><g><title>0x7fbcbe425405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 3.70%)</title><rect x="457" y="340" width="44" height="15" fill="rgb(253,135,29)"/><text x="460.00" y="350.50">0x7f..</text></g><g><title>0x7fbcbe424c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="499" y="356" width="2" height="15" fill="rgb(246,22,28)"/><text x="502.00" y="366.50"></text></g><g><title>0x7fbcbe3fc529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="499" y="372" width="2" height="15" fill="rgb(216,144,33)"/><text x="502.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="499" y="388" width="2" height="15" fill="rgb(216,117,54)"/><text x="502.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.16%)</title><rect x="499" y="404" width="2" height="15" fill="rgb(206,203,21)"/><text x="502.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.16%)</title><rect x="499" y="420" width="2" height="15" fill="rgb(227,137,4)"/><text x="502.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.16%)</title><rect x="499" y="436" width="2" height="15" fill="rgb(231,48,6)"/><text x="502.00" y="446.50"></text></g><g><title>_append_char (buffer.c:115) (1 samples, 0.16%)</title><rect x="499" y="452" width="2" height="15" fill="rgb(246,143,16)"/><text x="502.00" y="462.50"></text></g><g><title>0x7fbcbe3fa178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="501" y="356" width="2" height="15" fill="rgb(232,137,13)"/><text x="504.00" y="366.50"></text></g><g><title>0x7fbcbe415fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 4.02%)</title><rect x="457" y="324" width="48" height="15" fill="rgb(208,199,9)"/><text x="460.00" y="334.50">0x7f..</text></g><g><title>0x7fbcbe425540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="501" y="340" width="4" height="15" fill="rgb(221,70,21)"/><text x="504.00" y="350.50"></text></g><g><title>0x7fbcbe3fa188 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(228,138,32)"/><text x="506.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.16%)</title><rect x="505" y="340" width="2" height="15" fill="rgb(247,106,32)"/><text x="508.00" y="350.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (4 samples, 0.64%)</title><rect x="507" y="372" width="7" height="15" fill="rgb(230,209,29)"/><text x="510.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (2 samples, 0.32%)</title><rect x="514" y="372" width="4" height="15" fill="rgb(216,16,54)"/><text x="517.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (8 samples, 1.29%)</title><rect x="507" y="356" width="15" height="15" fill="rgb(226,91,21)"/><text x="510.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (2 samples, 0.32%)</title><rect x="518" y="372" width="4" height="15" fill="rgb(250,29,16)"/><text x="521.00" y="382.50"></text></g><g><title>0x7fbcbe41605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.61%)</title><rect x="505" y="324" width="19" height="15" fill="rgb(210,51,18)"/><text x="508.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (9 samples, 1.45%)</title><rect x="507" y="340" width="17" height="15" fill="rgb(242,160,8)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.16%)</title><rect x="522" y="356" width="2" height="15" fill="rgb(208,178,18)"/><text x="525.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.16%)</title><rect x="522" y="372" width="2" height="15" fill="rgb(211,66,9)"/><text x="525.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.16%)</title><rect x="522" y="388" width="2" height="15" fill="rgb(240,12,7)"/><text x="525.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.16%)</title><rect x="522" y="404" width="2" height="15" fill="rgb(251,163,49)"/><text x="525.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (38 samples, 6.11%)</title><rect x="453" y="292" width="73" height="15" fill="rgb(221,174,36)"/><text x="456.00" y="302.50">predict_..</text></g><g><title>0x7fbcbe416d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (37 samples, 5.95%)</title><rect x="455" y="308" width="71" height="15" fill="rgb(228,127,9)"/><text x="458.00" y="318.50">0x7fbcbe..</text></g><g><title>0x7fbcbe41614f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="524" y="324" width="2" height="15" fill="rgb(207,183,22)"/><text x="527.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="524" y="340" width="2" height="15" fill="rgb(237,137,8)"/><text x="527.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(250,140,0)"/><text x="527.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.16%)</title><rect x="524" y="372" width="2" height="15" fill="rgb(216,151,10)"/><text x="527.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.32%)</title><rect x="526" y="292" width="3" height="15" fill="rgb(215,205,39)"/><text x="529.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="527" y="308" width="2" height="15" fill="rgb(230,128,8)"/><text x="530.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.16%)</title><rect x="527" y="324" width="2" height="15" fill="rgb(250,25,4)"/><text x="530.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.16%)</title><rect x="531" y="308" width="2" height="15" fill="rgb(249,46,7)"/><text x="534.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.16%)</title><rect x="531" y="324" width="2" height="15" fill="rgb(208,192,3)"/><text x="534.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="533" y="308" width="2" height="15" fill="rgb(226,74,25)"/><text x="536.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.16%)</title><rect x="533" y="324" width="2" height="15" fill="rgb(228,74,30)"/><text x="536.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.16%)</title><rect x="533" y="340" width="2" height="15" fill="rgb(227,153,34)"/><text x="536.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.16%)</title><rect x="533" y="356" width="2" height="15" fill="rgb(235,52,48)"/><text x="536.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.16%)</title><rect x="533" y="372" width="2" height="15" fill="rgb(230,32,16)"/><text x="536.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.16%)</title><rect x="537" y="404" width="2" height="15" fill="rgb(223,100,4)"/><text x="540.00" y="414.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (3 samples, 0.48%)</title><rect x="537" y="356" width="6" height="15" fill="rgb(207,189,23)"/><text x="540.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.48%)</title><rect x="537" y="372" width="6" height="15" fill="rgb(205,74,43)"/><text x="540.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.48%)</title><rect x="537" y="388" width="6" height="15" fill="rgb(244,216,42)"/><text x="540.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.32%)</title><rect x="539" y="404" width="4" height="15" fill="rgb(207,89,50)"/><text x="542.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.32%)</title><rect x="539" y="420" width="4" height="15" fill="rgb(234,27,0)"/><text x="542.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.32%)</title><rect x="539" y="436" width="4" height="15" fill="rgb(249,80,42)"/><text x="542.00" y="446.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.16%)</title><rect x="543" y="388" width="1" height="15" fill="rgb(243,1,6)"/><text x="546.00" y="398.50"></text></g><g><title>0x7fbce49f3120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="543" y="404" width="1" height="15" fill="rgb(236,190,18)"/><text x="546.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3629) (1 samples, 0.16%)</title><rect x="544" y="388" width="2" height="15" fill="rgb(246,135,34)"/><text x="547.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.16%)</title><rect x="544" y="404" width="2" height="15" fill="rgb(232,7,43)"/><text x="547.00" y="414.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.16%)</title><rect x="544" y="420" width="2" height="15" fill="rgb(230,167,42)"/><text x="547.00" y="430.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.16%)</title><rect x="546" y="388" width="2" height="15" fill="rgb(222,183,31)"/><text x="549.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.16%)</title><rect x="546" y="404" width="2" height="15" fill="rgb(216,131,8)"/><text x="549.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.16%)</title><rect x="546" y="420" width="2" height="15" fill="rgb(207,19,7)"/><text x="549.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.16%)</title><rect x="546" y="436" width="2" height="15" fill="rgb(211,115,24)"/><text x="549.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1720) (1 samples, 0.16%)</title><rect x="546" y="452" width="2" height="15" fill="rgb(240,194,33)"/><text x="549.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1023) (1 samples, 0.16%)</title><rect x="548" y="468" width="2" height="15" fill="rgb(245,203,32)"/><text x="551.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.32%)</title><rect x="548" y="404" width="4" height="15" fill="rgb(211,22,22)"/><text x="551.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.32%)</title><rect x="548" y="420" width="4" height="15" fill="rgb(238,174,18)"/><text x="551.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.32%)</title><rect x="548" y="436" width="4" height="15" fill="rgb(240,220,15)"/><text x="551.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.32%)</title><rect x="548" y="452" width="4" height="15" fill="rgb(254,104,27)"/><text x="551.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="550" y="468" width="2" height="15" fill="rgb(251,196,34)"/><text x="553.00" y="478.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="550" y="484" width="2" height="15" fill="rgb(242,177,23)"/><text x="553.00" y="494.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="550" y="500" width="2" height="15" fill="rgb(211,99,36)"/><text x="553.00" y="510.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="550" y="516" width="2" height="15" fill="rgb(211,171,54)"/><text x="553.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="550" y="532" width="2" height="15" fill="rgb(223,214,4)"/><text x="553.00" y="542.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:390) (1 samples, 0.16%)</title><rect x="552" y="420" width="2" height="15" fill="rgb(254,160,4)"/><text x="555.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.32%)</title><rect x="552" y="404" width="4" height="15" fill="rgb(240,99,45)"/><text x="555.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.16%)</title><rect x="554" y="420" width="2" height="15" fill="rgb(230,132,54)"/><text x="557.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.16%)</title><rect x="554" y="436" width="2" height="15" fill="rgb(251,33,34)"/><text x="557.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.16%)</title><rect x="554" y="452" width="2" height="15" fill="rgb(250,148,22)"/><text x="557.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.16%)</title><rect x="556" y="420" width="2" height="15" fill="rgb(234,144,50)"/><text x="559.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1666) (1 samples, 0.16%)</title><rect x="556" y="436" width="2" height="15" fill="rgb(208,139,12)"/><text x="559.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.16%)</title><rect x="558" y="420" width="2" height="15" fill="rgb(236,206,25)"/><text x="561.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.16%)</title><rect x="558" y="436" width="2" height="15" fill="rgb(228,69,22)"/><text x="561.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="558" y="452" width="2" height="15" fill="rgb(217,22,23)"/><text x="561.00" y="462.50"></text></g><g><title>0x7fbce49d3e5a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="558" y="468" width="2" height="15" fill="rgb(246,31,4)"/><text x="561.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.48%)</title><rect x="556" y="404" width="6" height="15" fill="rgb(223,60,14)"/><text x="559.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.16%)</title><rect x="560" y="420" width="2" height="15" fill="rgb(224,75,39)"/><text x="563.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.16%)</title><rect x="560" y="436" width="2" height="15" fill="rgb(240,191,34)"/><text x="563.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.16%)</title><rect x="562" y="420" width="1" height="15" fill="rgb(234,75,2)"/><text x="565.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1447) (1 samples, 0.16%)</title><rect x="562" y="436" width="1" height="15" fill="rgb(245,207,13)"/><text x="565.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (3 samples, 0.48%)</title><rect x="563" y="420" width="6" height="15" fill="rgb(218,8,52)"/><text x="566.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.16%)</title><rect x="569" y="420" width="2" height="15" fill="rgb(231,85,15)"/><text x="572.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.16%)</title><rect x="571" y="420" width="2" height="15" fill="rgb(235,151,37)"/><text x="574.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (3 samples, 0.48%)</title><rect x="575" y="436" width="6" height="15" fill="rgb(234,162,54)"/><text x="578.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.32%)</title><rect x="581" y="436" width="3" height="15" fill="rgb(221,131,26)"/><text x="584.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.32%)</title><rect x="588" y="452" width="4" height="15" fill="rgb(225,32,28)"/><text x="591.00" y="462.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (2 samples, 0.32%)</title><rect x="592" y="452" width="4" height="15" fill="rgb(230,189,16)"/><text x="595.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (7 samples, 1.13%)</title><rect x="584" y="436" width="14" height="15" fill="rgb(253,145,54)"/><text x="587.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.16%)</title><rect x="596" y="452" width="2" height="15" fill="rgb(224,87,6)"/><text x="599.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.32%)</title><rect x="598" y="436" width="3" height="15" fill="rgb(212,130,40)"/><text x="601.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (22 samples, 3.54%)</title><rect x="562" y="404" width="41" height="15" fill="rgb(252,228,15)"/><text x="565.00" y="414.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 2.57%)</title><rect x="573" y="420" width="30" height="15" fill="rgb(208,74,3)"/><text x="576.00" y="430.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.16%)</title><rect x="601" y="436" width="2" height="15" fill="rgb(248,117,49)"/><text x="604.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (40 samples, 6.43%)</title><rect x="529" y="292" width="76" height="15" fill="rgb(252,187,32)"/><text x="532.00" y="302.50">predict_..</text></g><g><title>array_sum (methods.c:2215) (37 samples, 5.95%)</title><rect x="535" y="308" width="70" height="15" fill="rgb(246,19,6)"/><text x="538.00" y="318.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (37 samples, 5.95%)</title><rect x="535" y="324" width="70" height="15" fill="rgb(233,93,43)"/><text x="538.00" y="334.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (36 samples, 5.79%)</title><rect x="537" y="340" width="68" height="15" fill="rgb(228,67,43)"/><text x="540.00" y="350.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (33 samples, 5.31%)</title><rect x="543" y="356" width="62" height="15" fill="rgb(228,178,6)"/><text x="546.00" y="366.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (33 samples, 5.31%)</title><rect x="543" y="372" width="62" height="15" fill="rgb(205,176,19)"/><text x="546.00" y="382.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (30 samples, 4.82%)</title><rect x="548" y="388" width="57" height="15" fill="rgb(251,97,35)"/><text x="551.00" y="398.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.16%)</title><rect x="603" y="404" width="2" height="15" fill="rgb(215,23,48)"/><text x="606.00" y="414.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.16%)</title><rect x="603" y="420" width="2" height="15" fill="rgb(208,199,32)"/><text x="606.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.16%)</title><rect x="603" y="436" width="2" height="15" fill="rgb(234,30,20)"/><text x="606.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1042) (1 samples, 0.16%)</title><rect x="607" y="356" width="2" height="15" fill="rgb(234,127,39)"/><text x="610.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.16%)</title><rect x="609" y="372" width="2" height="15" fill="rgb(243,49,19)"/><text x="612.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1161) (1 samples, 0.16%)</title><rect x="609" y="388" width="2" height="15" fill="rgb(233,55,27)"/><text x="612.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.48%)</title><rect x="607" y="340" width="6" height="15" fill="rgb(254,188,31)"/><text x="610.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.32%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(229,97,16)"/><text x="612.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.16%)</title><rect x="611" y="372" width="2" height="15" fill="rgb(227,97,20)"/><text x="614.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.16%)</title><rect x="611" y="388" width="2" height="15" fill="rgb(239,33,39)"/><text x="614.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:242) (1 samples, 0.16%)</title><rect x="611" y="404" width="2" height="15" fill="rgb(246,20,49)"/><text x="614.00" y="414.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.16%)</title><rect x="613" y="356" width="2" height="15" fill="rgb(226,191,54)"/><text x="616.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.16%)</title><rect x="613" y="372" width="2" height="15" fill="rgb(227,127,39)"/><text x="616.00" y="382.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1823) (1 samples, 0.16%)</title><rect x="613" y="388" width="2" height="15" fill="rgb(253,134,45)"/><text x="616.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.32%)</title><rect x="613" y="340" width="4" height="15" fill="rgb(212,118,16)"/><text x="616.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:412) (1 samples, 0.16%)</title><rect x="615" y="356" width="2" height="15" fill="rgb(211,184,9)"/><text x="618.00" y="366.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.16%)</title><rect x="615" y="372" width="2" height="15" fill="rgb(220,28,34)"/><text x="618.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.16%)</title><rect x="617" y="340" width="1" height="15" fill="rgb(223,34,14)"/><text x="620.00" y="350.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:365) (1 samples, 0.16%)</title><rect x="617" y="356" width="1" height="15" fill="rgb(236,115,12)"/><text x="620.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.16%)</title><rect x="618" y="372" width="2" height="15" fill="rgb(214,59,50)"/><text x="621.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (1 samples, 0.16%)</title><rect x="618" y="388" width="2" height="15" fill="rgb(220,45,3)"/><text x="621.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:295) (1 samples, 0.16%)</title><rect x="618" y="404" width="2" height="15" fill="rgb(224,41,29)"/><text x="621.00" y="414.50"></text></g><g><title>sse2_binary_scalar2_equal_DOUBLE (simd.inc.src:976) (1 samples, 0.16%)</title><rect x="618" y="420" width="2" height="15" fill="rgb(228,150,52)"/><text x="621.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.29%)</title><rect x="607" y="324" width="15" height="15" fill="rgb(243,168,34)"/><text x="610.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.32%)</title><rect x="618" y="340" width="4" height="15" fill="rgb(212,78,52)"/><text x="621.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.32%)</title><rect x="618" y="356" width="4" height="15" fill="rgb(234,45,54)"/><text x="621.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.16%)</title><rect x="620" y="372" width="2" height="15" fill="rgb(214,180,30)"/><text x="623.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="620" y="388" width="2" height="15" fill="rgb(242,109,15)"/><text x="623.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.16%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(226,213,10)"/><text x="625.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="624" y="372" width="2" height="15" fill="rgb(230,200,43)"/><text x="627.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (3 samples, 0.48%)</title><rect x="622" y="324" width="6" height="15" fill="rgb(205,190,50)"/><text x="625.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 0.48%)</title><rect x="622" y="340" width="6" height="15" fill="rgb(226,193,10)"/><text x="625.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.32%)</title><rect x="624" y="356" width="4" height="15" fill="rgb(233,34,49)"/><text x="627.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.16%)</title><rect x="626" y="372" width="2" height="15" fill="rgb(235,229,54)"/><text x="629.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (13 samples, 2.09%)</title><rect x="605" y="292" width="25" height="15" fill="rgb(243,143,34)"/><text x="608.00" y="302.50">p..</text></g><g><title>array_richcompare (arrayobject.c:1445) (12 samples, 1.93%)</title><rect x="607" y="308" width="23" height="15" fill="rgb(218,59,38)"/><text x="610.00" y="318.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.16%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(249,85,53)"/><text x="631.00" y="334.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.16%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(225,72,39)"/><text x="631.00" y="350.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.16%)</title><rect x="628" y="356" width="2" height="15" fill="rgb(212,130,10)"/><text x="631.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.16%)</title><rect x="630" y="324" width="2" height="15" fill="rgb(252,75,33)"/><text x="633.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.16%)</title><rect x="630" y="340" width="2" height="15" fill="rgb(205,59,22)"/><text x="633.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1540) (1 samples, 0.16%)</title><rect x="632" y="388" width="2" height="15" fill="rgb(216,129,31)"/><text x="635.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.32%)</title><rect x="632" y="372" width="4" height="15" fill="rgb(228,97,15)"/><text x="635.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1910) (1 samples, 0.16%)</title><rect x="634" y="388" width="2" height="15" fill="rgb(250,97,2)"/><text x="637.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.48%)</title><rect x="632" y="356" width="5" height="15" fill="rgb(244,133,53)"/><text x="635.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="636" y="372" width="1" height="15" fill="rgb(206,170,53)"/><text x="639.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2783) (1 samples, 0.16%)</title><rect x="636" y="388" width="1" height="15" fill="rgb(216,166,32)"/><text x="639.00" y="398.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.16%)</title><rect x="636" y="404" width="1" height="15" fill="rgb(220,10,8)"/><text x="639.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.32%)</title><rect x="637" y="404" width="4" height="15" fill="rgb(240,136,5)"/><text x="640.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="641" y="404" width="2" height="15" fill="rgb(208,15,32)"/><text x="644.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1023) (1 samples, 0.16%)</title><rect x="643" y="404" width="2" height="15" fill="rgb(217,210,36)"/><text x="646.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="647" y="420" width="2" height="15" fill="rgb(240,133,31)"/><text x="650.00" y="430.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (5 samples, 0.80%)</title><rect x="645" y="404" width="10" height="15" fill="rgb(227,177,44)"/><text x="648.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (3 samples, 0.48%)</title><rect x="649" y="420" width="6" height="15" fill="rgb(225,192,24)"/><text x="652.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (10 samples, 1.61%)</title><rect x="637" y="356" width="19" height="15" fill="rgb(214,227,9)"/><text x="640.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (10 samples, 1.61%)</title><rect x="637" y="372" width="19" height="15" fill="rgb(222,83,1)"/><text x="640.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (10 samples, 1.61%)</title><rect x="637" y="388" width="19" height="15" fill="rgb(209,202,4)"/><text x="640.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1076) (1 samples, 0.16%)</title><rect x="655" y="404" width="1" height="15" fill="rgb(218,188,2)"/><text x="658.00" y="414.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (2 samples, 0.32%)</title><rect x="656" y="404" width="4" height="15" fill="rgb(230,41,21)"/><text x="659.00" y="414.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (2 samples, 0.32%)</title><rect x="656" y="420" width="4" height="15" fill="rgb(246,107,40)"/><text x="659.00" y="430.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (23 samples, 3.70%)</title><rect x="630" y="308" width="43" height="15" fill="rgb(245,13,16)"/><text x="633.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (22 samples, 3.54%)</title><rect x="632" y="324" width="41" height="15" fill="rgb(228,107,20)"/><text x="635.00" y="334.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (22 samples, 3.54%)</title><rect x="632" y="340" width="41" height="15" fill="rgb(220,145,2)"/><text x="635.00" y="350.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (9 samples, 1.45%)</title><rect x="656" y="356" width="17" height="15" fill="rgb(205,119,5)"/><text x="659.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (9 samples, 1.45%)</title><rect x="656" y="372" width="17" height="15" fill="rgb(208,200,14)"/><text x="659.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (9 samples, 1.45%)</title><rect x="656" y="388" width="17" height="15" fill="rgb(234,94,29)"/><text x="659.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 1.13%)</title><rect x="660" y="404" width="13" height="15" fill="rgb(230,130,53)"/><text x="663.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 1.13%)</title><rect x="660" y="420" width="13" height="15" fill="rgb(227,14,46)"/><text x="663.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (128 samples, 20.58%)</title><rect x="433" y="276" width="242" height="15" fill="rgb(219,139,29)"/><text x="436.00" y="286.50">_accumulate_prediction (sklearn/..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (24 samples, 3.86%)</title><rect x="630" y="292" width="45" height="15" fill="rgb(235,71,38)"/><text x="633.00" y="302.50">pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.16%)</title><rect x="673" y="308" width="2" height="15" fill="rgb(240,38,2)"/><text x="676.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.16%)</title><rect x="673" y="324" width="2" height="15" fill="rgb(232,41,41)"/><text x="676.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.16%)</title><rect x="675" y="276" width="2" height="15" fill="rgb(234,138,17)"/><text x="678.00" y="286.50"></text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.16%)</title><rect x="679" y="292" width="2" height="15" fill="rgb(225,36,3)"/><text x="682.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.16%)</title><rect x="681" y="308" width="2" height="15" fill="rgb(236,103,8)"/><text x="684.00" y="318.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.16%)</title><rect x="683" y="388" width="2" height="15" fill="rgb(224,75,14)"/><text x="686.00" y="398.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.16%)</title><rect x="685" y="388" width="2" height="15" fill="rgb(221,63,42)"/><text x="688.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.16%)</title><rect x="685" y="404" width="2" height="15" fill="rgb(229,51,8)"/><text x="688.00" y="414.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.48%)</title><rect x="683" y="340" width="6" height="15" fill="rgb(223,101,52)"/><text x="686.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.48%)</title><rect x="683" y="356" width="6" height="15" fill="rgb(236,193,37)"/><text x="686.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.48%)</title><rect x="683" y="372" width="6" height="15" fill="rgb(244,129,4)"/><text x="686.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.16%)</title><rect x="687" y="388" width="2" height="15" fill="rgb(236,222,46)"/><text x="690.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.16%)</title><rect x="687" y="404" width="2" height="15" fill="rgb(239,221,46)"/><text x="690.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (7 samples, 1.13%)</title><rect x="677" y="276" width="14" height="15" fill="rgb(228,50,2)"/><text x="680.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.80%)</title><rect x="681" y="292" width="10" height="15" fill="rgb(227,156,21)"/><text x="684.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.64%)</title><rect x="683" y="308" width="8" height="15" fill="rgb(232,88,40)"/><text x="686.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.64%)</title><rect x="683" y="324" width="8" height="15" fill="rgb(219,28,17)"/><text x="686.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.16%)</title><rect x="689" y="340" width="2" height="15" fill="rgb(244,140,51)"/><text x="692.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (138 samples, 22.19%)</title><rect x="431" y="260" width="261" height="15" fill="rgb(226,119,23)"/><text x="434.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.16%)</title><rect x="691" y="276" width="1" height="15" fill="rgb(239,146,38)"/><text x="694.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.16%)</title><rect x="691" y="292" width="1" height="15" fill="rgb(252,136,31)"/><text x="694.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.16%)</title><rect x="691" y="308" width="1" height="15" fill="rgb(221,182,31)"/><text x="694.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="691" y="324" width="1" height="15" fill="rgb(211,173,53)"/><text x="694.00" y="334.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (146 samples, 23.47%)</title><rect x="417" y="212" width="277" height="15" fill="rgb(246,15,7)"/><text x="420.00" y="222.50">apply_async (joblib/_parallel_backend..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (146 samples, 23.47%)</title><rect x="417" y="228" width="277" height="15" fill="rgb(219,175,24)"/><text x="420.00" y="238.50">__init__ (joblib/_parallel_backends.p..</text></g><g><title>__call__ (joblib/parallel.py:256) (142 samples, 22.83%)</title><rect x="425" y="244" width="269" height="15" fill="rgb(219,194,25)"/><text x="428.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.16%)</title><rect x="692" y="260" width="2" height="15" fill="rgb(248,177,15)"/><text x="695.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.16%)</title><rect x="694" y="228" width="2" height="15" fill="rgb(227,107,2)"/><text x="697.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.16%)</title><rect x="696" y="228" width="2" height="15" fill="rgb(213,172,24)"/><text x="699.00" y="238.50"></text></g><g><title>0x7ffc01b5ea01 ([vdso]) (1 samples, 0.16%)</title><rect x="696" y="244" width="2" height="15" fill="rgb(224,91,49)"/><text x="699.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.16%)</title><rect x="698" y="228" width="2" height="15" fill="rgb(252,39,39)"/><text x="701.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (150 samples, 24.12%)</title><rect x="417" y="196" width="285" height="15" fill="rgb(228,193,35)"/><text x="420.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (4 samples, 0.64%)</title><rect x="694" y="212" width="8" height="15" fill="rgb(220,47,42)"/><text x="697.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.16%)</title><rect x="700" y="228" width="2" height="15" fill="rgb(228,214,27)"/><text x="703.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (207 samples, 33.28%)</title><rect x="313" y="164" width="393" height="15" fill="rgb(213,118,38)"/><text x="316.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (161 samples, 25.88%)</title><rect x="400" y="180" width="306" height="15" fill="rgb(208,215,52)"/><text x="403.00" y="190.50">dispatch_one_batch (joblib/parallel.py:83..</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.32%)</title><rect x="702" y="196" width="4" height="15" fill="rgb(251,83,23)"/><text x="705.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1015) (1 samples, 0.16%)</title><rect x="706" y="164" width="2" height="15" fill="rgb(221,161,27)"/><text x="709.00" y="174.50"></text></g><g><title>helper (contextlib.py:239) (1 samples, 0.16%)</title><rect x="706" y="180" width="2" height="15" fill="rgb(206,30,22)"/><text x="709.00" y="190.50"></text></g><g><title>__init__ (contextlib.py:83) (1 samples, 0.16%)</title><rect x="706" y="196" width="2" height="15" fill="rgb(241,57,1)"/><text x="709.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:38) (367 samples, 59.00%)</title><rect x="13" y="52" width="697" height="15" fill="rgb(236,213,26)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:37) (367 samples, 59.00%)</title><rect x="13" y="68" width="697" height="15" fill="rgb(218,82,40)"/><text x="16.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (364 samples, 58.52%)</title><rect x="19" y="84" width="691" height="15" fill="rgb(205,118,42)"/><text x="22.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (212 samples, 34.08%)</title><rect x="307" y="100" width="403" height="15" fill="rgb(240,200,0)"/><text x="310.00" y="110.50">profile (bench_RandomForestClassifier_default_m_cl_100..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (212 samples, 34.08%)</title><rect x="307" y="116" width="403" height="15" fill="rgb(247,27,38)"/><text x="310.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (212 samples, 34.08%)</title><rect x="307" y="132" width="403" height="15" fill="rgb(236,156,29)"/><text x="310.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:22..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (210 samples, 33.76%)</title><rect x="311" y="148" width="399" height="15" fill="rgb(205,190,22)"/><text x="314.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.16%)</title><rect x="708" y="164" width="2" height="15" fill="rgb(212,21,4)"/><text x="711.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:896) (1 samples, 0.16%)</title><rect x="708" y="180" width="2" height="15" fill="rgb(247,64,26)"/><text x="711.00" y="190.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.16%)</title><rect x="710" y="500" width="1" height="15" fill="rgb(210,6,28)"/><text x="713.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="710" y="516" width="1" height="15" fill="rgb(240,228,11)"/><text x="713.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="710" y="532" width="1" height="15" fill="rgb(244,93,15)"/><text x="713.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="710" y="548" width="1" height="15" fill="rgb(246,155,19)"/><text x="713.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="710" y="564" width="1" height="15" fill="rgb(241,209,44)"/><text x="713.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="710" y="580" width="1" height="15" fill="rgb(238,128,51)"/><text x="713.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="710" y="596" width="1" height="15" fill="rgb(217,52,2)"/><text x="713.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="710" y="612" width="1" height="15" fill="rgb(253,97,30)"/><text x="713.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:3266) (1 samples, 0.16%)</title><rect x="710" y="628" width="1" height="15" fill="rgb(229,156,0)"/><text x="713.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:182) (1 samples, 0.16%)</title><rect x="710" y="644" width="1" height="15" fill="rgb(212,8,4)"/><text x="713.00" y="654.50"></text></g><g><title>&lt;module&gt; (&lt;__array_function__ internals&gt;:2) (1 samples, 0.16%)</title><rect x="710" y="660" width="1" height="15" fill="rgb(239,33,26)"/><text x="713.00" y="670.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.16%)</title><rect x="710" y="676" width="1" height="15" fill="rgb(222,211,12)"/><text x="713.00" y="686.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (2 samples, 0.32%)</title><rect x="710" y="372" width="3" height="15" fill="rgb(220,151,31)"/><text x="713.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="710" y="388" width="3" height="15" fill="rgb(240,196,35)"/><text x="713.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="710" y="404" width="3" height="15" fill="rgb(230,225,23)"/><text x="713.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="710" y="420" width="3" height="15" fill="rgb(235,61,0)"/><text x="713.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="710" y="436" width="3" height="15" fill="rgb(215,127,51)"/><text x="713.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="710" y="452" width="3" height="15" fill="rgb(236,75,5)"/><text x="713.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="710" y="468" width="3" height="15" fill="rgb(234,147,36)"/><text x="713.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="710" y="484" width="3" height="15" fill="rgb(250,95,2)"/><text x="713.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:34) (1 samples, 0.16%)</title><rect x="711" y="500" width="2" height="15" fill="rgb(252,87,24)"/><text x="714.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="711" y="516" width="2" height="15" fill="rgb(254,218,11)"/><text x="714.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="711" y="532" width="2" height="15" fill="rgb(218,101,2)"/><text x="714.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="711" y="548" width="2" height="15" fill="rgb(226,223,23)"/><text x="714.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="711" y="564" width="2" height="15" fill="rgb(229,102,46)"/><text x="714.00" y="574.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="711" y="580" width="2" height="15" fill="rgb(234,64,9)"/><text x="714.00" y="590.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="711" y="596" width="2" height="15" fill="rgb(228,142,49)"/><text x="714.00" y="606.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (3 samples, 0.48%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(248,67,52)"/><text x="713.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.48%)</title><rect x="710" y="260" width="5" height="15" fill="rgb(254,53,46)"/><text x="713.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="710" y="276" width="5" height="15" fill="rgb(240,47,30)"/><text x="713.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="710" y="292" width="5" height="15" fill="rgb(226,84,48)"/><text x="713.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="710" y="308" width="5" height="15" fill="rgb(237,50,51)"/><text x="713.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="710" y="324" width="5" height="15" fill="rgb(216,80,45)"/><text x="713.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="710" y="340" width="5" height="15" fill="rgb(252,120,33)"/><text x="713.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="710" y="356" width="5" height="15" fill="rgb(251,132,28)"/><text x="713.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.16%)</title><rect x="713" y="372" width="2" height="15" fill="rgb(240,166,18)"/><text x="716.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="713" y="388" width="2" height="15" fill="rgb(237,14,18)"/><text x="716.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="713" y="404" width="2" height="15" fill="rgb(253,54,49)"/><text x="716.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="713" y="420" width="2" height="15" fill="rgb(220,38,33)"/><text x="716.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="713" y="436" width="2" height="15" fill="rgb(224,163,52)"/><text x="716.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="713" y="452" width="2" height="15" fill="rgb(244,52,10)"/><text x="716.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="713" y="468" width="2" height="15" fill="rgb(234,122,12)"/><text x="716.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.16%)</title><rect x="713" y="484" width="2" height="15" fill="rgb(239,172,21)"/><text x="716.00" y="494.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.16%)</title><rect x="713" y="500" width="2" height="15" fill="rgb(234,159,20)"/><text x="716.00" y="510.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="713" y="516" width="2" height="15" fill="rgb(240,26,11)"/><text x="716.00" y="526.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:1) (4 samples, 0.64%)</title><rect x="710" y="148" width="7" height="15" fill="rgb(235,24,41)"/><text x="713.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.64%)</title><rect x="710" y="164" width="7" height="15" fill="rgb(205,163,30)"/><text x="713.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.64%)</title><rect x="710" y="180" width="7" height="15" fill="rgb(234,166,8)"/><text x="713.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.64%)</title><rect x="710" y="196" width="7" height="15" fill="rgb(244,198,24)"/><text x="713.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.64%)</title><rect x="710" y="212" width="7" height="15" fill="rgb(252,56,10)"/><text x="713.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.64%)</title><rect x="710" y="228" width="7" height="15" fill="rgb(214,134,25)"/><text x="713.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.16%)</title><rect x="715" y="244" width="2" height="15" fill="rgb(230,225,36)"/><text x="718.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="715" y="260" width="2" height="15" fill="rgb(235,55,17)"/><text x="718.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="715" y="276" width="2" height="15" fill="rgb(210,227,36)"/><text x="718.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="715" y="292" width="2" height="15" fill="rgb(251,220,44)"/><text x="718.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="715" y="308" width="2" height="15" fill="rgb(235,220,4)"/><text x="718.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="715" y="324" width="2" height="15" fill="rgb(238,122,43)"/><text x="718.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="715" y="340" width="2" height="15" fill="rgb(221,31,53)"/><text x="718.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="715" y="356" width="2" height="15" fill="rgb(223,183,5)"/><text x="718.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.16%)</title><rect x="715" y="372" width="2" height="15" fill="rgb(243,130,37)"/><text x="718.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="715" y="388" width="2" height="15" fill="rgb(254,68,24)"/><text x="718.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="715" y="404" width="2" height="15" fill="rgb(210,151,37)"/><text x="718.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="715" y="420" width="2" height="15" fill="rgb(245,5,9)"/><text x="718.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="715" y="436" width="2" height="15" fill="rgb(240,227,51)"/><text x="718.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="715" y="452" width="2" height="15" fill="rgb(225,57,10)"/><text x="718.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.16%)</title><rect x="715" y="468" width="2" height="15" fill="rgb(228,58,39)"/><text x="718.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="715" y="484" width="2" height="15" fill="rgb(239,208,16)"/><text x="718.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="715" y="500" width="2" height="15" fill="rgb(252,228,38)"/><text x="718.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="715" y="516" width="2" height="15" fill="rgb(245,68,9)"/><text x="718.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="715" y="532" width="2" height="15" fill="rgb(238,199,28)"/><text x="718.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="715" y="548" width="2" height="15" fill="rgb(235,120,30)"/><text x="718.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:3245) (1 samples, 0.16%)</title><rect x="715" y="564" width="2" height="15" fill="rgb(220,37,8)"/><text x="718.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.16%)</title><rect x="715" y="580" width="2" height="15" fill="rgb(237,91,8)"/><text x="718.00" y="590.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.16%)</title><rect x="717" y="916" width="2" height="15" fill="rgb(213,155,43)"/><text x="720.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.16%)</title><rect x="717" y="932" width="2" height="15" fill="rgb(228,78,48)"/><text x="720.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.16%)</title><rect x="717" y="948" width="2" height="15" fill="rgb(244,220,1)"/><text x="720.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.16%)</title><rect x="717" y="964" width="2" height="15" fill="rgb(216,196,25)"/><text x="720.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.32%)</title><rect x="717" y="852" width="4" height="15" fill="rgb(222,195,32)"/><text x="720.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.32%)</title><rect x="717" y="868" width="4" height="15" fill="rgb(220,12,8)"/><text x="720.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.32%)</title><rect x="717" y="884" width="4" height="15" fill="rgb(246,213,26)"/><text x="720.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="717" y="900" width="4" height="15" fill="rgb(244,116,45)"/><text x="720.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.16%)</title><rect x="719" y="916" width="2" height="15" fill="rgb(212,83,45)"/><text x="722.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.16%)</title><rect x="719" y="932" width="2" height="15" fill="rgb(224,156,6)"/><text x="722.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.16%)</title><rect x="719" y="948" width="2" height="15" fill="rgb(221,11,43)"/><text x="722.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.16%)</title><rect x="719" y="964" width="2" height="15" fill="rgb(232,180,47)"/><text x="722.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.16%)</title><rect x="719" y="980" width="2" height="15" fill="rgb(205,192,7)"/><text x="722.00" y="990.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.16%)</title><rect x="721" y="948" width="2" height="15" fill="rgb(225,164,30)"/><text x="724.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.16%)</title><rect x="721" y="964" width="2" height="15" fill="rgb(235,9,12)"/><text x="724.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.16%)</title><rect x="721" y="980" width="2" height="15" fill="rgb(226,70,33)"/><text x="724.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.16%)</title><rect x="721" y="996" width="2" height="15" fill="rgb(235,122,12)"/><text x="724.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="721" y="1012" width="2" height="15" fill="rgb(252,128,34)"/><text x="724.00" y="1022.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="721" y="868" width="4" height="15" fill="rgb(246,151,1)"/><text x="724.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.32%)</title><rect x="721" y="884" width="4" height="15" fill="rgb(236,150,22)"/><text x="724.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.32%)</title><rect x="721" y="900" width="4" height="15" fill="rgb(249,170,47)"/><text x="724.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.32%)</title><rect x="721" y="916" width="4" height="15" fill="rgb(244,95,54)"/><text x="724.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.32%)</title><rect x="721" y="932" width="4" height="15" fill="rgb(212,134,7)"/><text x="724.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.16%)</title><rect x="723" y="948" width="2" height="15" fill="rgb(209,67,1)"/><text x="726.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.16%)</title><rect x="723" y="964" width="2" height="15" fill="rgb(228,196,38)"/><text x="726.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:136) (1 samples, 0.16%)</title><rect x="723" y="980" width="2" height="15" fill="rgb(246,51,18)"/><text x="726.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:2) (5 samples, 0.80%)</title><rect x="717" y="148" width="10" height="15" fill="rgb(249,4,39)"/><text x="720.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="164" width="10" height="15" fill="rgb(217,49,48)"/><text x="720.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.80%)</title><rect x="717" y="180" width="10" height="15" fill="rgb(237,26,31)"/><text x="720.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="196" width="10" height="15" fill="rgb(233,187,21)"/><text x="720.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="212" width="10" height="15" fill="rgb(217,120,8)"/><text x="720.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="228" width="10" height="15" fill="rgb(233,53,52)"/><text x="720.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="244" width="10" height="15" fill="rgb(251,42,52)"/><text x="720.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="260" width="10" height="15" fill="rgb(205,163,49)"/><text x="720.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="276" width="10" height="15" fill="rgb(249,93,10)"/><text x="720.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.80%)</title><rect x="717" y="292" width="10" height="15" fill="rgb(241,161,3)"/><text x="720.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="308" width="10" height="15" fill="rgb(246,136,37)"/><text x="720.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="324" width="10" height="15" fill="rgb(236,175,24)"/><text x="720.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="340" width="10" height="15" fill="rgb(229,174,12)"/><text x="720.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="356" width="10" height="15" fill="rgb(253,190,41)"/><text x="720.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="372" width="10" height="15" fill="rgb(225,85,9)"/><text x="720.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.80%)</title><rect x="717" y="388" width="10" height="15" fill="rgb(221,211,39)"/><text x="720.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="404" width="10" height="15" fill="rgb(205,93,44)"/><text x="720.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="420" width="10" height="15" fill="rgb(247,85,39)"/><text x="720.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="436" width="10" height="15" fill="rgb(219,31,43)"/><text x="720.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="452" width="10" height="15" fill="rgb(208,192,8)"/><text x="720.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="468" width="10" height="15" fill="rgb(240,97,38)"/><text x="720.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.80%)</title><rect x="717" y="484" width="10" height="15" fill="rgb(253,12,6)"/><text x="720.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="500" width="10" height="15" fill="rgb(214,104,16)"/><text x="720.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="516" width="10" height="15" fill="rgb(241,137,28)"/><text x="720.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="532" width="10" height="15" fill="rgb(234,76,45)"/><text x="720.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="548" width="10" height="15" fill="rgb(240,68,12)"/><text x="720.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="564" width="10" height="15" fill="rgb(229,142,49)"/><text x="720.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.80%)</title><rect x="717" y="580" width="10" height="15" fill="rgb(230,57,50)"/><text x="720.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="596" width="10" height="15" fill="rgb(213,123,54)"/><text x="720.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.80%)</title><rect x="717" y="612" width="10" height="15" fill="rgb(247,178,31)"/><text x="720.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="628" width="10" height="15" fill="rgb(245,128,16)"/><text x="720.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="644" width="10" height="15" fill="rgb(241,117,1)"/><text x="720.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="660" width="10" height="15" fill="rgb(208,60,25)"/><text x="720.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="676" width="10" height="15" fill="rgb(211,146,53)"/><text x="720.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="692" width="10" height="15" fill="rgb(210,66,49)"/><text x="720.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="708" width="10" height="15" fill="rgb(251,26,29)"/><text x="720.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.80%)</title><rect x="717" y="724" width="10" height="15" fill="rgb(249,75,27)"/><text x="720.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.80%)</title><rect x="717" y="740" width="10" height="15" fill="rgb(208,141,26)"/><text x="720.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.80%)</title><rect x="717" y="756" width="10" height="15" fill="rgb(227,81,34)"/><text x="720.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.80%)</title><rect x="717" y="772" width="10" height="15" fill="rgb(253,156,15)"/><text x="720.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.80%)</title><rect x="717" y="788" width="10" height="15" fill="rgb(231,141,26)"/><text x="720.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.80%)</title><rect x="717" y="804" width="10" height="15" fill="rgb(245,20,35)"/><text x="720.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 0.80%)</title><rect x="717" y="820" width="10" height="15" fill="rgb(235,202,4)"/><text x="720.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 0.80%)</title><rect x="717" y="836" width="10" height="15" fill="rgb(230,222,50)"/><text x="720.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.48%)</title><rect x="721" y="852" width="6" height="15" fill="rgb(239,97,47)"/><text x="724.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.16%)</title><rect x="725" y="868" width="2" height="15" fill="rgb(230,90,27)"/><text x="728.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.16%)</title><rect x="725" y="884" width="2" height="15" fill="rgb(207,170,31)"/><text x="728.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.16%)</title><rect x="725" y="900" width="2" height="15" fill="rgb(214,117,21)"/><text x="728.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.16%)</title><rect x="727" y="484" width="2" height="15" fill="rgb(251,139,41)"/><text x="730.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="727" y="500" width="2" height="15" fill="rgb(206,68,54)"/><text x="730.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="516" width="2" height="15" fill="rgb(238,41,30)"/><text x="730.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="532" width="2" height="15" fill="rgb(210,64,4)"/><text x="730.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="548" width="2" height="15" fill="rgb(223,157,46)"/><text x="730.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="564" width="2" height="15" fill="rgb(207,167,27)"/><text x="730.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="580" width="2" height="15" fill="rgb(217,106,22)"/><text x="730.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="596" width="2" height="15" fill="rgb(206,222,29)"/><text x="730.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.16%)</title><rect x="727" y="612" width="2" height="15" fill="rgb(219,118,36)"/><text x="730.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="628" width="2" height="15" fill="rgb(235,180,12)"/><text x="730.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="644" width="2" height="15" fill="rgb(222,174,16)"/><text x="730.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="660" width="2" height="15" fill="rgb(252,124,44)"/><text x="730.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="676" width="2" height="15" fill="rgb(214,150,25)"/><text x="730.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="692" width="2" height="15" fill="rgb(247,203,16)"/><text x="730.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.16%)</title><rect x="727" y="708" width="2" height="15" fill="rgb(225,162,37)"/><text x="730.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="724" width="2" height="15" fill="rgb(205,89,11)"/><text x="730.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="740" width="2" height="15" fill="rgb(225,146,34)"/><text x="730.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="756" width="2" height="15" fill="rgb(228,96,46)"/><text x="730.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="772" width="2" height="15" fill="rgb(240,194,28)"/><text x="730.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="788" width="2" height="15" fill="rgb(243,69,21)"/><text x="730.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.16%)</title><rect x="727" y="804" width="2" height="15" fill="rgb(223,162,36)"/><text x="730.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="820" width="2" height="15" fill="rgb(249,103,52)"/><text x="730.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="836" width="2" height="15" fill="rgb(213,130,53)"/><text x="730.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="852" width="2" height="15" fill="rgb(209,14,38)"/><text x="730.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="868" width="2" height="15" fill="rgb(214,152,47)"/><text x="730.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="884" width="2" height="15" fill="rgb(222,92,0)"/><text x="730.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.16%)</title><rect x="727" y="900" width="2" height="15" fill="rgb(237,30,48)"/><text x="730.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="916" width="2" height="15" fill="rgb(210,16,15)"/><text x="730.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="932" width="2" height="15" fill="rgb(236,197,12)"/><text x="730.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="948" width="2" height="15" fill="rgb(206,74,40)"/><text x="730.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="964" width="2" height="15" fill="rgb(243,54,3)"/><text x="730.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="980" width="2" height="15" fill="rgb(241,174,5)"/><text x="730.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.16%)</title><rect x="727" y="996" width="2" height="15" fill="rgb(217,153,44)"/><text x="730.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1012" width="2" height="15" fill="rgb(233,223,27)"/><text x="730.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="727" y="1028" width="2" height="15" fill="rgb(251,68,51)"/><text x="730.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="1044" width="2" height="15" fill="rgb(215,54,29)"/><text x="730.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1060" width="2" height="15" fill="rgb(210,115,43)"/><text x="730.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="1076" width="2" height="15" fill="rgb(209,187,45)"/><text x="730.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="1092" width="2" height="15" fill="rgb(209,115,37)"/><text x="730.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="1108" width="2" height="15" fill="rgb(227,214,16)"/><text x="730.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="1124" width="2" height="15" fill="rgb(216,17,26)"/><text x="730.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.16%)</title><rect x="727" y="1140" width="2" height="15" fill="rgb(243,122,46)"/><text x="730.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1156" width="2" height="15" fill="rgb(234,103,31)"/><text x="730.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="1172" width="2" height="15" fill="rgb(222,32,28)"/><text x="730.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="1188" width="2" height="15" fill="rgb(212,121,42)"/><text x="730.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="1204" width="2" height="15" fill="rgb(213,91,7)"/><text x="730.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="1220" width="2" height="15" fill="rgb(254,36,16)"/><text x="730.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.16%)</title><rect x="727" y="1236" width="2" height="15" fill="rgb(241,160,51)"/><text x="730.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1252" width="2" height="15" fill="rgb(248,145,33)"/><text x="730.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="1268" width="2" height="15" fill="rgb(243,73,45)"/><text x="730.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="1284" width="2" height="15" fill="rgb(213,218,21)"/><text x="730.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="1300" width="2" height="15" fill="rgb(208,186,25)"/><text x="730.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="1316" width="2" height="15" fill="rgb(240,87,41)"/><text x="730.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.16%)</title><rect x="727" y="1332" width="2" height="15" fill="rgb(251,214,14)"/><text x="730.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1348" width="2" height="15" fill="rgb(241,72,26)"/><text x="730.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="1364" width="2" height="15" fill="rgb(251,37,18)"/><text x="730.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="1380" width="2" height="15" fill="rgb(252,24,38)"/><text x="730.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="727" y="1396" width="2" height="15" fill="rgb(229,182,26)"/><text x="730.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="727" y="1412" width="2" height="15" fill="rgb(246,133,43)"/><text x="730.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.16%)</title><rect x="727" y="1428" width="2" height="15" fill="rgb(216,157,22)"/><text x="730.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="727" y="1444" width="2" height="15" fill="rgb(211,221,3)"/><text x="730.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="727" y="1460" width="2" height="15" fill="rgb(233,176,2)"/><text x="730.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="727" y="1476" width="2" height="15" fill="rgb(249,37,6)"/><text x="730.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="727" y="1492" width="2" height="15" fill="rgb(227,137,38)"/><text x="730.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="727" y="1508" width="2" height="15" fill="rgb(243,15,13)"/><text x="730.00" y="1518.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="727" y="1524" width="2" height="15" fill="rgb(232,81,1)"/><text x="730.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="727" y="180" width="3" height="15" fill="rgb(222,73,33)"/><text x="730.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="727" y="196" width="3" height="15" fill="rgb(239,90,50)"/><text x="730.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="727" y="212" width="3" height="15" fill="rgb(225,214,42)"/><text x="730.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="727" y="228" width="3" height="15" fill="rgb(240,61,5)"/><text x="730.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="727" y="244" width="3" height="15" fill="rgb(212,113,42)"/><text x="730.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="727" y="260" width="3" height="15" fill="rgb(233,168,7)"/><text x="730.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="727" y="276" width="3" height="15" fill="rgb(209,140,23)"/><text x="730.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.32%)</title><rect x="727" y="292" width="3" height="15" fill="rgb(254,147,5)"/><text x="730.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="727" y="308" width="3" height="15" fill="rgb(246,122,11)"/><text x="730.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="727" y="324" width="3" height="15" fill="rgb(238,15,13)"/><text x="730.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="727" y="340" width="3" height="15" fill="rgb(241,137,53)"/><text x="730.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="727" y="356" width="3" height="15" fill="rgb(213,70,44)"/><text x="730.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="727" y="372" width="3" height="15" fill="rgb(234,31,28)"/><text x="730.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.32%)</title><rect x="727" y="388" width="3" height="15" fill="rgb(217,72,53)"/><text x="730.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="727" y="404" width="3" height="15" fill="rgb(228,158,25)"/><text x="730.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="727" y="420" width="3" height="15" fill="rgb(214,58,11)"/><text x="730.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="727" y="436" width="3" height="15" fill="rgb(218,178,20)"/><text x="730.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="727" y="452" width="3" height="15" fill="rgb(212,140,0)"/><text x="730.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="727" y="468" width="3" height="15" fill="rgb(210,153,43)"/><text x="730.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.16%)</title><rect x="729" y="484" width="1" height="15" fill="rgb(234,90,11)"/><text x="732.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="500" width="1" height="15" fill="rgb(205,218,36)"/><text x="732.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="516" width="1" height="15" fill="rgb(254,211,10)"/><text x="732.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="532" width="1" height="15" fill="rgb(221,64,45)"/><text x="732.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="548" width="1" height="15" fill="rgb(243,219,46)"/><text x="732.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="564" width="1" height="15" fill="rgb(220,183,36)"/><text x="732.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.16%)</title><rect x="729" y="580" width="1" height="15" fill="rgb(241,188,41)"/><text x="732.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="596" width="1" height="15" fill="rgb(205,156,51)"/><text x="732.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="612" width="1" height="15" fill="rgb(244,115,3)"/><text x="732.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="628" width="1" height="15" fill="rgb(217,139,51)"/><text x="732.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="644" width="1" height="15" fill="rgb(230,125,20)"/><text x="732.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="660" width="1" height="15" fill="rgb(217,72,11)"/><text x="732.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.16%)</title><rect x="729" y="676" width="1" height="15" fill="rgb(251,190,45)"/><text x="732.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="692" width="1" height="15" fill="rgb(231,172,51)"/><text x="732.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="708" width="1" height="15" fill="rgb(240,98,28)"/><text x="732.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="724" width="1" height="15" fill="rgb(218,225,11)"/><text x="732.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="740" width="1" height="15" fill="rgb(205,196,51)"/><text x="732.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="756" width="1" height="15" fill="rgb(253,222,12)"/><text x="732.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.16%)</title><rect x="729" y="772" width="1" height="15" fill="rgb(234,55,7)"/><text x="732.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="729" y="788" width="1" height="15" fill="rgb(214,76,50)"/><text x="732.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="804" width="1" height="15" fill="rgb(227,114,30)"/><text x="732.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="820" width="1" height="15" fill="rgb(240,218,29)"/><text x="732.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="836" width="1" height="15" fill="rgb(249,88,46)"/><text x="732.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="852" width="1" height="15" fill="rgb(229,217,41)"/><text x="732.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="868" width="1" height="15" fill="rgb(251,112,5)"/><text x="732.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="884" width="1" height="15" fill="rgb(246,26,7)"/><text x="732.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.16%)</title><rect x="729" y="900" width="1" height="15" fill="rgb(212,45,42)"/><text x="732.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="916" width="1" height="15" fill="rgb(216,138,27)"/><text x="732.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="932" width="1" height="15" fill="rgb(209,97,29)"/><text x="732.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="948" width="1" height="15" fill="rgb(225,108,24)"/><text x="732.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="964" width="1" height="15" fill="rgb(227,150,49)"/><text x="732.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="980" width="1" height="15" fill="rgb(252,63,33)"/><text x="732.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.16%)</title><rect x="729" y="996" width="1" height="15" fill="rgb(238,126,15)"/><text x="732.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="729" y="1012" width="1" height="15" fill="rgb(206,33,15)"/><text x="732.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="1028" width="1" height="15" fill="rgb(248,156,40)"/><text x="732.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="1044" width="1" height="15" fill="rgb(210,216,53)"/><text x="732.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="1060" width="1" height="15" fill="rgb(233,176,24)"/><text x="732.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="1076" width="1" height="15" fill="rgb(252,160,4)"/><text x="732.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="1092" width="1" height="15" fill="rgb(248,76,30)"/><text x="732.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="1108" width="1" height="15" fill="rgb(225,175,4)"/><text x="732.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.16%)</title><rect x="729" y="1124" width="1" height="15" fill="rgb(232,41,51)"/><text x="732.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="1140" width="1" height="15" fill="rgb(208,56,14)"/><text x="732.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="1156" width="1" height="15" fill="rgb(227,68,12)"/><text x="732.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="1172" width="1" height="15" fill="rgb(209,227,18)"/><text x="732.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="1188" width="1" height="15" fill="rgb(238,193,20)"/><text x="732.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="1204" width="1" height="15" fill="rgb(217,185,36)"/><text x="732.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.16%)</title><rect x="729" y="1220" width="1" height="15" fill="rgb(254,132,46)"/><text x="732.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="1236" width="1" height="15" fill="rgb(231,4,50)"/><text x="732.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="1252" width="1" height="15" fill="rgb(239,169,18)"/><text x="732.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="1268" width="1" height="15" fill="rgb(225,67,38)"/><text x="732.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="1284" width="1" height="15" fill="rgb(231,6,29)"/><text x="732.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="1300" width="1" height="15" fill="rgb(254,184,27)"/><text x="732.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:15) (1 samples, 0.16%)</title><rect x="729" y="1316" width="1" height="15" fill="rgb(208,225,45)"/><text x="732.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="1332" width="1" height="15" fill="rgb(233,87,19)"/><text x="732.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="1348" width="1" height="15" fill="rgb(229,64,15)"/><text x="732.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="1364" width="1" height="15" fill="rgb(254,144,28)"/><text x="732.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="729" y="1380" width="1" height="15" fill="rgb(239,174,26)"/><text x="732.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="729" y="1396" width="1" height="15" fill="rgb(231,74,17)"/><text x="732.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py:5) (1 samples, 0.16%)</title><rect x="729" y="1412" width="1" height="15" fill="rgb(244,44,43)"/><text x="732.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="729" y="1428" width="1" height="15" fill="rgb(207,4,23)"/><text x="732.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="729" y="1444" width="1" height="15" fill="rgb(225,207,50)"/><text x="732.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="729" y="1460" width="1" height="15" fill="rgb(249,214,10)"/><text x="732.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="729" y="1476" width="1" height="15" fill="rgb(250,82,1)"/><text x="732.00" y="1486.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="729" y="1492" width="1" height="15" fill="rgb(228,32,22)"/><text x="732.00" y="1502.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="729" y="1508" width="1" height="15" fill="rgb(218,115,35)"/><text x="732.00" y="1518.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:4) (3 samples, 0.48%)</title><rect x="727" y="148" width="5" height="15" fill="rgb(251,177,12)"/><text x="730.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="727" y="164" width="5" height="15" fill="rgb(240,94,37)"/><text x="730.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="180" width="2" height="15" fill="rgb(236,140,2)"/><text x="733.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="196" width="2" height="15" fill="rgb(214,192,52)"/><text x="733.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="212" width="2" height="15" fill="rgb(250,183,42)"/><text x="733.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="228" width="2" height="15" fill="rgb(245,68,44)"/><text x="733.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.16%)</title><rect x="730" y="244" width="2" height="15" fill="rgb(234,163,13)"/><text x="733.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="260" width="2" height="15" fill="rgb(216,88,33)"/><text x="733.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="276" width="2" height="15" fill="rgb(253,12,6)"/><text x="733.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="292" width="2" height="15" fill="rgb(224,80,31)"/><text x="733.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="308" width="2" height="15" fill="rgb(219,99,50)"/><text x="733.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="324" width="2" height="15" fill="rgb(213,39,23)"/><text x="733.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.16%)</title><rect x="730" y="340" width="2" height="15" fill="rgb(210,219,9)"/><text x="733.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="356" width="2" height="15" fill="rgb(244,146,7)"/><text x="733.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="372" width="2" height="15" fill="rgb(232,32,24)"/><text x="733.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="388" width="2" height="15" fill="rgb(222,9,20)"/><text x="733.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="404" width="2" height="15" fill="rgb(230,112,37)"/><text x="733.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="420" width="2" height="15" fill="rgb(238,33,42)"/><text x="733.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.16%)</title><rect x="730" y="436" width="2" height="15" fill="rgb(216,177,36)"/><text x="733.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="452" width="2" height="15" fill="rgb(224,107,23)"/><text x="733.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="468" width="2" height="15" fill="rgb(251,210,30)"/><text x="733.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="484" width="2" height="15" fill="rgb(248,103,36)"/><text x="733.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="500" width="2" height="15" fill="rgb(219,118,44)"/><text x="733.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="516" width="2" height="15" fill="rgb(213,25,35)"/><text x="733.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:35) (1 samples, 0.16%)</title><rect x="730" y="532" width="2" height="15" fill="rgb(253,139,0)"/><text x="733.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="548" width="2" height="15" fill="rgb(240,122,54)"/><text x="733.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="564" width="2" height="15" fill="rgb(241,22,38)"/><text x="733.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="580" width="2" height="15" fill="rgb(245,91,21)"/><text x="733.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="596" width="2" height="15" fill="rgb(205,48,50)"/><text x="733.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="612" width="2" height="15" fill="rgb(225,65,36)"/><text x="733.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py:8) (1 samples, 0.16%)</title><rect x="730" y="628" width="2" height="15" fill="rgb(246,206,41)"/><text x="733.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="644" width="2" height="15" fill="rgb(209,61,2)"/><text x="733.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="660" width="2" height="15" fill="rgb(233,138,3)"/><text x="733.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="730" y="676" width="2" height="15" fill="rgb(217,57,38)"/><text x="733.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="730" y="692" width="2" height="15" fill="rgb(238,201,14)"/><text x="733.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="708" width="2" height="15" fill="rgb(251,62,8)"/><text x="733.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py:34) (1 samples, 0.16%)</title><rect x="730" y="724" width="2" height="15" fill="rgb(243,209,38)"/><text x="733.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="730" y="740" width="2" height="15" fill="rgb(226,141,47)"/><text x="733.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="730" y="756" width="2" height="15" fill="rgb(215,60,23)"/><text x="733.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.16%)</title><rect x="730" y="772" width="2" height="15" fill="rgb(250,89,33)"/><text x="733.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.16%)</title><rect x="730" y="788" width="2" height="15" fill="rgb(247,57,3)"/><text x="733.00" y="798.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.16%)</title><rect x="730" y="804" width="2" height="15" fill="rgb(218,103,21)"/><text x="733.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="730" y="820" width="2" height="15" fill="rgb(218,192,28)"/><text x="733.00" y="830.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="836" width="2" height="15" fill="rgb(210,185,21)"/><text x="733.00" y="846.50"></text></g><g><title>0x7fbce4c5a995 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="852" width="2" height="15" fill="rgb(231,143,31)"/><text x="733.00" y="862.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="868" width="2" height="15" fill="rgb(230,102,1)"/><text x="733.00" y="878.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="884" width="2" height="15" fill="rgb(211,152,46)"/><text x="733.00" y="894.50"></text></g><g><title>0x7fbce4c5a258 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="900" width="2" height="15" fill="rgb(251,173,16)"/><text x="733.00" y="910.50"></text></g><g><title>0x7fbce4ca7d7a (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="916" width="2" height="15" fill="rgb(219,127,11)"/><text x="733.00" y="926.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="932" width="2" height="15" fill="rgb(228,142,16)"/><text x="733.00" y="942.50"></text></g><g><title>0x7fbce4ca8345 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="948" width="2" height="15" fill="rgb(228,96,2)"/><text x="733.00" y="958.50"></text></g><g><title>0x7fbce4ca0fec (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="964" width="2" height="15" fill="rgb(225,167,38)"/><text x="733.00" y="974.50"></text></g><g><title>0x7fbce4c9f56b (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="980" width="2" height="15" fill="rgb(254,178,12)"/><text x="733.00" y="990.50"></text></g><g><title>0x7fbce4c9ec6d (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="996" width="2" height="15" fill="rgb(221,97,31)"/><text x="733.00" y="1006.50"></text></g><g><title>0x7fbce4c9e751 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="730" y="1012" width="2" height="15" fill="rgb(241,104,16)"/><text x="733.00" y="1022.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:113) (1 samples, 0.16%)</title><rect x="732" y="772" width="2" height="15" fill="rgb(216,221,48)"/><text x="735.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="732" y="788" width="2" height="15" fill="rgb(214,14,37)"/><text x="735.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="732" y="804" width="2" height="15" fill="rgb(221,74,47)"/><text x="735.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="732" y="820" width="2" height="15" fill="rgb(242,84,2)"/><text x="735.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="732" y="836" width="2" height="15" fill="rgb(216,42,51)"/><text x="735.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="732" y="852" width="2" height="15" fill="rgb(231,168,0)"/><text x="735.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="732" y="868" width="2" height="15" fill="rgb(249,33,22)"/><text x="735.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="732" y="884" width="2" height="15" fill="rgb(229,179,20)"/><text x="735.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py:10) (1 samples, 0.16%)</title><rect x="732" y="900" width="2" height="15" fill="rgb(221,37,52)"/><text x="735.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.32%)</title><rect x="732" y="484" width="4" height="15" fill="rgb(233,222,33)"/><text x="735.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="732" y="500" width="4" height="15" fill="rgb(232,87,7)"/><text x="735.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="732" y="516" width="4" height="15" fill="rgb(219,59,44)"/><text x="735.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="732" y="532" width="4" height="15" fill="rgb(222,227,11)"/><text x="735.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="732" y="548" width="4" height="15" fill="rgb(250,173,42)"/><text x="735.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="732" y="564" width="4" height="15" fill="rgb(211,39,22)"/><text x="735.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.32%)</title><rect x="732" y="580" width="4" height="15" fill="rgb(223,121,23)"/><text x="735.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="732" y="596" width="4" height="15" fill="rgb(244,84,46)"/><text x="735.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="732" y="612" width="4" height="15" fill="rgb(206,229,29)"/><text x="735.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="732" y="628" width="4" height="15" fill="rgb(217,102,25)"/><text x="735.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="732" y="644" width="4" height="15" fill="rgb(234,148,36)"/><text x="735.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="732" y="660" width="4" height="15" fill="rgb(224,70,41)"/><text x="735.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.32%)</title><rect x="732" y="676" width="4" height="15" fill="rgb(218,63,43)"/><text x="735.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="732" y="692" width="4" height="15" fill="rgb(212,198,12)"/><text x="735.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="732" y="708" width="4" height="15" fill="rgb(225,153,50)"/><text x="735.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="732" y="724" width="4" height="15" fill="rgb(248,203,3)"/><text x="735.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="732" y="740" width="4" height="15" fill="rgb(245,149,32)"/><text x="735.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="732" y="756" width="4" height="15" fill="rgb(240,214,29)"/><text x="735.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.16%)</title><rect x="734" y="772" width="2" height="15" fill="rgb(249,8,40)"/><text x="737.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="734" y="788" width="2" height="15" fill="rgb(206,131,42)"/><text x="737.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="734" y="804" width="2" height="15" fill="rgb(234,46,14)"/><text x="737.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="734" y="820" width="2" height="15" fill="rgb(210,190,36)"/><text x="737.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="734" y="836" width="2" height="15" fill="rgb(212,21,1)"/><text x="737.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="734" y="852" width="2" height="15" fill="rgb(239,107,42)"/><text x="737.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="734" y="868" width="2" height="15" fill="rgb(225,134,3)"/><text x="737.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="734" y="884" width="2" height="15" fill="rgb(214,24,47)"/><text x="737.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.16%)</title><rect x="734" y="900" width="2" height="15" fill="rgb(247,63,52)"/><text x="737.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="734" y="916" width="2" height="15" fill="rgb(208,193,51)"/><text x="737.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="734" y="932" width="2" height="15" fill="rgb(218,167,6)"/><text x="737.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="734" y="948" width="2" height="15" fill="rgb(239,169,0)"/><text x="737.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="734" y="964" width="2" height="15" fill="rgb(224,0,17)"/><text x="737.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="734" y="980" width="2" height="15" fill="rgb(248,21,47)"/><text x="737.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.16%)</title><rect x="734" y="996" width="2" height="15" fill="rgb(224,127,42)"/><text x="737.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="734" y="1012" width="2" height="15" fill="rgb(236,165,50)"/><text x="737.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="734" y="1028" width="2" height="15" fill="rgb(242,154,46)"/><text x="737.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="734" y="1044" width="2" height="15" fill="rgb(214,36,50)"/><text x="737.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="734" y="1060" width="2" height="15" fill="rgb(214,181,41)"/><text x="737.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="734" y="1076" width="2" height="15" fill="rgb(218,71,3)"/><text x="737.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:89) (1 samples, 0.16%)</title><rect x="734" y="1092" width="2" height="15" fill="rgb(243,141,41)"/><text x="737.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="734" y="1108" width="2" height="15" fill="rgb(231,196,20)"/><text x="737.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="734" y="1124" width="2" height="15" fill="rgb(233,20,36)"/><text x="737.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="734" y="1140" width="2" height="15" fill="rgb(231,199,27)"/><text x="737.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="734" y="1156" width="2" height="15" fill="rgb(229,166,25)"/><text x="737.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="734" y="1172" width="2" height="15" fill="rgb(237,124,42)"/><text x="737.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="734" y="1188" width="2" height="15" fill="rgb(242,181,18)"/><text x="737.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="734" y="1204" width="2" height="15" fill="rgb(247,166,38)"/><text x="737.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 0.48%)</title><rect x="732" y="244" width="6" height="15" fill="rgb(226,73,50)"/><text x="735.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="732" y="260" width="6" height="15" fill="rgb(221,54,16)"/><text x="735.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="732" y="276" width="6" height="15" fill="rgb(241,219,24)"/><text x="735.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="732" y="292" width="6" height="15" fill="rgb(225,93,10)"/><text x="735.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="732" y="308" width="6" height="15" fill="rgb(220,175,37)"/><text x="735.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="732" y="324" width="6" height="15" fill="rgb(219,142,35)"/><text x="735.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 0.48%)</title><rect x="732" y="340" width="6" height="15" fill="rgb(232,45,18)"/><text x="735.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="732" y="356" width="6" height="15" fill="rgb(251,194,45)"/><text x="735.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.48%)</title><rect x="732" y="372" width="6" height="15" fill="rgb(248,148,12)"/><text x="735.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="732" y="388" width="6" height="15" fill="rgb(226,136,19)"/><text x="735.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="732" y="404" width="6" height="15" fill="rgb(240,66,5)"/><text x="735.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="732" y="420" width="6" height="15" fill="rgb(219,222,32)"/><text x="735.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="732" y="436" width="6" height="15" fill="rgb(233,156,53)"/><text x="735.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="732" y="452" width="6" height="15" fill="rgb(216,21,41)"/><text x="735.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="732" y="468" width="6" height="15" fill="rgb(214,85,7)"/><text x="735.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.16%)</title><rect x="736" y="484" width="2" height="15" fill="rgb(236,132,28)"/><text x="739.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="500" width="2" height="15" fill="rgb(227,193,36)"/><text x="739.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="516" width="2" height="15" fill="rgb(217,5,8)"/><text x="739.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="532" width="2" height="15" fill="rgb(236,186,6)"/><text x="739.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="548" width="2" height="15" fill="rgb(208,135,6)"/><text x="739.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="564" width="2" height="15" fill="rgb(230,36,23)"/><text x="739.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.16%)</title><rect x="736" y="580" width="2" height="15" fill="rgb(253,149,10)"/><text x="739.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="596" width="2" height="15" fill="rgb(220,190,34)"/><text x="739.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="736" y="612" width="2" height="15" fill="rgb(213,11,32)"/><text x="739.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="628" width="2" height="15" fill="rgb(228,20,18)"/><text x="739.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="644" width="2" height="15" fill="rgb(250,110,30)"/><text x="739.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="660" width="2" height="15" fill="rgb(210,70,14)"/><text x="739.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="676" width="2" height="15" fill="rgb(212,210,34)"/><text x="739.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="692" width="2" height="15" fill="rgb(225,15,48)"/><text x="739.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="708" width="2" height="15" fill="rgb(220,40,25)"/><text x="739.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.16%)</title><rect x="736" y="724" width="2" height="15" fill="rgb(250,216,7)"/><text x="739.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="740" width="2" height="15" fill="rgb(215,207,26)"/><text x="739.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="756" width="2" height="15" fill="rgb(248,0,15)"/><text x="739.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="772" width="2" height="15" fill="rgb(216,114,4)"/><text x="739.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="788" width="2" height="15" fill="rgb(219,29,42)"/><text x="739.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="804" width="2" height="15" fill="rgb(205,115,48)"/><text x="739.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.16%)</title><rect x="736" y="820" width="2" height="15" fill="rgb(237,228,5)"/><text x="739.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="836" width="2" height="15" fill="rgb(210,102,46)"/><text x="739.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="852" width="2" height="15" fill="rgb(232,47,46)"/><text x="739.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="868" width="2" height="15" fill="rgb(231,24,51)"/><text x="739.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="884" width="2" height="15" fill="rgb(253,52,22)"/><text x="739.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="900" width="2" height="15" fill="rgb(225,159,38)"/><text x="739.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.16%)</title><rect x="736" y="916" width="2" height="15" fill="rgb(213,128,16)"/><text x="739.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="932" width="2" height="15" fill="rgb(242,228,41)"/><text x="739.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="736" y="948" width="2" height="15" fill="rgb(225,169,13)"/><text x="739.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="964" width="2" height="15" fill="rgb(240,209,17)"/><text x="739.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="980" width="2" height="15" fill="rgb(219,73,28)"/><text x="739.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="996" width="2" height="15" fill="rgb(219,109,10)"/><text x="739.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="1012" width="2" height="15" fill="rgb(228,14,30)"/><text x="739.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="1028" width="2" height="15" fill="rgb(231,202,41)"/><text x="739.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="1044" width="2" height="15" fill="rgb(227,91,12)"/><text x="739.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.16%)</title><rect x="736" y="1060" width="2" height="15" fill="rgb(249,26,18)"/><text x="739.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="1076" width="2" height="15" fill="rgb(238,147,51)"/><text x="739.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="1092" width="2" height="15" fill="rgb(214,211,4)"/><text x="739.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="1108" width="2" height="15" fill="rgb(241,121,26)"/><text x="739.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="1124" width="2" height="15" fill="rgb(231,204,4)"/><text x="739.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="1140" width="2" height="15" fill="rgb(226,5,17)"/><text x="739.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.16%)</title><rect x="736" y="1156" width="2" height="15" fill="rgb(250,85,28)"/><text x="739.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="736" y="1172" width="2" height="15" fill="rgb(206,210,5)"/><text x="739.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="1188" width="2" height="15" fill="rgb(215,198,13)"/><text x="739.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="736" y="1204" width="2" height="15" fill="rgb(222,73,14)"/><text x="739.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="736" y="1220" width="2" height="15" fill="rgb(223,158,36)"/><text x="739.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="736" y="1236" width="2" height="15" fill="rgb(252,0,19)"/><text x="739.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="736" y="1252" width="2" height="15" fill="rgb(213,30,33)"/><text x="739.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="736" y="1268" width="2" height="15" fill="rgb(222,123,39)"/><text x="739.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:201) (1 samples, 0.16%)</title><rect x="736" y="1284" width="2" height="15" fill="rgb(212,155,20)"/><text x="739.00" y="1294.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.16%)</title><rect x="736" y="1300" width="2" height="15" fill="rgb(217,211,49)"/><text x="739.00" y="1310.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="736" y="1316" width="2" height="15" fill="rgb(249,75,4)"/><text x="739.00" y="1326.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.16%)</title><rect x="736" y="1332" width="2" height="15" fill="rgb(246,217,35)"/><text x="739.00" y="1342.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.16%)</title><rect x="736" y="1348" width="2" height="15" fill="rgb(226,110,14)"/><text x="739.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.16%)</title><rect x="736" y="1364" width="2" height="15" fill="rgb(250,228,18)"/><text x="739.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.16%)</title><rect x="736" y="1380" width="2" height="15" fill="rgb(205,133,2)"/><text x="739.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.16%)</title><rect x="736" y="1396" width="2" height="15" fill="rgb(237,76,47)"/><text x="739.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py:552) (1 samples, 0.16%)</title><rect x="736" y="1412" width="2" height="15" fill="rgb(208,83,44)"/><text x="739.00" y="1422.50"></text></g><g><title>get (sre_parse.py:255) (1 samples, 0.16%)</title><rect x="736" y="1428" width="2" height="15" fill="rgb(219,19,54)"/><text x="739.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.16%)</title><rect x="738" y="436" width="2" height="15" fill="rgb(212,16,51)"/><text x="741.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="738" y="452" width="2" height="15" fill="rgb(211,36,45)"/><text x="741.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="738" y="468" width="2" height="15" fill="rgb(237,185,4)"/><text x="741.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="738" y="484" width="2" height="15" fill="rgb(251,126,49)"/><text x="741.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="738" y="500" width="2" height="15" fill="rgb(222,59,32)"/><text x="741.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="738" y="516" width="2" height="15" fill="rgb(226,119,21)"/><text x="741.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.16%)</title><rect x="738" y="532" width="2" height="15" fill="rgb(246,145,2)"/><text x="741.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="738" y="548" width="2" height="15" fill="rgb(208,174,2)"/><text x="741.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="738" y="564" width="2" height="15" fill="rgb(241,144,6)"/><text x="741.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="738" y="580" width="2" height="15" fill="rgb(211,145,3)"/><text x="741.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="738" y="596" width="2" height="15" fill="rgb(230,202,31)"/><text x="741.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="738" y="612" width="2" height="15" fill="rgb(244,146,54)"/><text x="741.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.16%)</title><rect x="738" y="628" width="2" height="15" fill="rgb(210,124,0)"/><text x="741.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="738" y="644" width="2" height="15" fill="rgb(239,99,53)"/><text x="741.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="738" y="660" width="2" height="15" fill="rgb(224,127,42)"/><text x="741.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="738" y="676" width="2" height="15" fill="rgb(250,95,52)"/><text x="741.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="738" y="692" width="2" height="15" fill="rgb(208,76,51)"/><text x="741.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="738" y="708" width="2" height="15" fill="rgb(233,139,32)"/><text x="741.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:20) (1 samples, 0.16%)</title><rect x="738" y="724" width="2" height="15" fill="rgb(249,119,40)"/><text x="741.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="738" y="740" width="2" height="15" fill="rgb(237,138,53)"/><text x="741.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="738" y="756" width="2" height="15" fill="rgb(215,40,36)"/><text x="741.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="738" y="772" width="2" height="15" fill="rgb(251,28,18)"/><text x="741.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.16%)</title><rect x="738" y="788" width="2" height="15" fill="rgb(226,211,26)"/><text x="741.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.16%)</title><rect x="738" y="804" width="2" height="15" fill="rgb(227,142,41)"/><text x="741.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.16%)</title><rect x="738" y="820" width="2" height="15" fill="rgb(218,41,2)"/><text x="741.00" y="830.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.16%)</title><rect x="740" y="1492" width="2" height="15" fill="rgb(251,172,52)"/><text x="743.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.16%)</title><rect x="740" y="1508" width="2" height="15" fill="rgb(227,146,1)"/><text x="743.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:4) (18 samples, 2.89%)</title><rect x="710" y="52" width="34" height="15" fill="rgb(236,122,38)"/><text x="713.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 2.89%)</title><rect x="710" y="68" width="34" height="15" fill="rgb(212,24,29)"/><text x="713.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 2.89%)</title><rect x="710" y="84" width="34" height="15" fill="rgb(209,124,44)"/><text x="713.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 2.89%)</title><rect x="710" y="100" width="34" height="15" fill="rgb(242,173,38)"/><text x="713.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 2.89%)</title><rect x="710" y="116" width="34" height="15" fill="rgb(213,133,37)"/><text x="713.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 2.89%)</title><rect x="710" y="132" width="34" height="15" fill="rgb(250,94,41)"/><text x="713.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_m_cl.py:7) (6 samples, 0.96%)</title><rect x="732" y="148" width="12" height="15" fill="rgb(210,106,10)"/><text x="735.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.96%)</title><rect x="732" y="164" width="12" height="15" fill="rgb(232,47,48)"/><text x="735.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.96%)</title><rect x="732" y="180" width="12" height="15" fill="rgb(205,220,24)"/><text x="735.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.96%)</title><rect x="732" y="196" width="12" height="15" fill="rgb(206,204,47)"/><text x="735.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.96%)</title><rect x="732" y="212" width="12" height="15" fill="rgb(218,17,18)"/><text x="735.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.96%)</title><rect x="732" y="228" width="12" height="15" fill="rgb(206,28,17)"/><text x="735.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.48%)</title><rect x="738" y="244" width="6" height="15" fill="rgb(208,149,35)"/><text x="741.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="738" y="260" width="6" height="15" fill="rgb(245,205,24)"/><text x="741.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="738" y="276" width="6" height="15" fill="rgb(226,78,48)"/><text x="741.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="738" y="292" width="6" height="15" fill="rgb(215,65,34)"/><text x="741.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="738" y="308" width="6" height="15" fill="rgb(211,142,41)"/><text x="741.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="738" y="324" width="6" height="15" fill="rgb(253,116,48)"/><text x="741.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.48%)</title><rect x="738" y="340" width="6" height="15" fill="rgb(243,85,11)"/><text x="741.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.48%)</title><rect x="738" y="356" width="6" height="15" fill="rgb(224,104,26)"/><text x="741.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.48%)</title><rect x="738" y="372" width="6" height="15" fill="rgb(231,193,42)"/><text x="741.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.48%)</title><rect x="738" y="388" width="6" height="15" fill="rgb(228,197,27)"/><text x="741.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.48%)</title><rect x="738" y="404" width="6" height="15" fill="rgb(233,149,14)"/><text x="741.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.48%)</title><rect x="738" y="420" width="6" height="15" fill="rgb(246,5,24)"/><text x="741.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.32%)</title><rect x="740" y="436" width="4" height="15" fill="rgb(241,218,51)"/><text x="743.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="452" width="4" height="15" fill="rgb(244,208,37)"/><text x="743.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="740" y="468" width="4" height="15" fill="rgb(246,38,43)"/><text x="743.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="484" width="4" height="15" fill="rgb(227,221,17)"/><text x="743.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="500" width="4" height="15" fill="rgb(205,63,33)"/><text x="743.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="516" width="4" height="15" fill="rgb(237,129,34)"/><text x="743.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="532" width="4" height="15" fill="rgb(236,74,37)"/><text x="743.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="548" width="4" height="15" fill="rgb(236,33,47)"/><text x="743.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="564" width="4" height="15" fill="rgb(240,193,4)"/><text x="743.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.32%)</title><rect x="740" y="580" width="4" height="15" fill="rgb(212,66,32)"/><text x="743.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="596" width="4" height="15" fill="rgb(253,107,12)"/><text x="743.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="612" width="4" height="15" fill="rgb(239,130,23)"/><text x="743.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="628" width="4" height="15" fill="rgb(238,20,51)"/><text x="743.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="644" width="4" height="15" fill="rgb(211,109,23)"/><text x="743.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="660" width="4" height="15" fill="rgb(234,34,28)"/><text x="743.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.32%)</title><rect x="740" y="676" width="4" height="15" fill="rgb(228,34,21)"/><text x="743.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="692" width="4" height="15" fill="rgb(254,64,42)"/><text x="743.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="708" width="4" height="15" fill="rgb(226,75,41)"/><text x="743.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="724" width="4" height="15" fill="rgb(229,118,4)"/><text x="743.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="740" width="4" height="15" fill="rgb(239,152,34)"/><text x="743.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="756" width="4" height="15" fill="rgb(209,154,42)"/><text x="743.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.32%)</title><rect x="740" y="772" width="4" height="15" fill="rgb(228,48,40)"/><text x="743.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="788" width="4" height="15" fill="rgb(213,197,25)"/><text x="743.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="804" width="4" height="15" fill="rgb(205,136,48)"/><text x="743.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="820" width="4" height="15" fill="rgb(247,214,24)"/><text x="743.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="836" width="4" height="15" fill="rgb(253,9,35)"/><text x="743.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="852" width="4" height="15" fill="rgb(238,33,44)"/><text x="743.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.32%)</title><rect x="740" y="868" width="4" height="15" fill="rgb(227,12,38)"/><text x="743.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="884" width="4" height="15" fill="rgb(205,166,14)"/><text x="743.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.32%)</title><rect x="740" y="900" width="4" height="15" fill="rgb(209,95,14)"/><text x="743.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="916" width="4" height="15" fill="rgb(237,23,11)"/><text x="743.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="932" width="4" height="15" fill="rgb(250,195,0)"/><text x="743.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="948" width="4" height="15" fill="rgb(236,201,46)"/><text x="743.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="964" width="4" height="15" fill="rgb(224,88,44)"/><text x="743.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="980" width="4" height="15" fill="rgb(246,210,48)"/><text x="743.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="996" width="4" height="15" fill="rgb(243,213,13)"/><text x="743.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.32%)</title><rect x="740" y="1012" width="4" height="15" fill="rgb(232,89,16)"/><text x="743.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="1028" width="4" height="15" fill="rgb(209,181,11)"/><text x="743.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="1044" width="4" height="15" fill="rgb(235,229,43)"/><text x="743.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="1060" width="4" height="15" fill="rgb(251,90,41)"/><text x="743.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="1076" width="4" height="15" fill="rgb(218,39,29)"/><text x="743.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1092" width="4" height="15" fill="rgb(206,36,23)"/><text x="743.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.32%)</title><rect x="740" y="1108" width="4" height="15" fill="rgb(253,124,49)"/><text x="743.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="740" y="1124" width="4" height="15" fill="rgb(222,137,14)"/><text x="743.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1140" width="4" height="15" fill="rgb(229,76,11)"/><text x="743.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="1156" width="4" height="15" fill="rgb(223,162,14)"/><text x="743.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="1172" width="4" height="15" fill="rgb(249,23,19)"/><text x="743.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="1188" width="4" height="15" fill="rgb(243,26,19)"/><text x="743.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="1204" width="4" height="15" fill="rgb(254,97,29)"/><text x="743.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1220" width="4" height="15" fill="rgb(233,31,54)"/><text x="743.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.32%)</title><rect x="740" y="1236" width="4" height="15" fill="rgb(234,152,45)"/><text x="743.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.32%)</title><rect x="740" y="1252" width="4" height="15" fill="rgb(235,220,41)"/><text x="743.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1268" width="4" height="15" fill="rgb(236,145,29)"/><text x="743.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="1284" width="4" height="15" fill="rgb(208,90,14)"/><text x="743.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="1300" width="4" height="15" fill="rgb(223,131,1)"/><text x="743.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="1316" width="4" height="15" fill="rgb(205,227,10)"/><text x="743.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="1332" width="4" height="15" fill="rgb(238,41,41)"/><text x="743.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1348" width="4" height="15" fill="rgb(224,226,37)"/><text x="743.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.32%)</title><rect x="740" y="1364" width="4" height="15" fill="rgb(221,129,2)"/><text x="743.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="740" y="1380" width="4" height="15" fill="rgb(224,219,33)"/><text x="743.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="740" y="1396" width="4" height="15" fill="rgb(217,9,50)"/><text x="743.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="740" y="1412" width="4" height="15" fill="rgb(214,78,20)"/><text x="743.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="740" y="1428" width="4" height="15" fill="rgb(250,11,14)"/><text x="743.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="740" y="1444" width="4" height="15" fill="rgb(246,135,5)"/><text x="743.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.32%)</title><rect x="740" y="1460" width="4" height="15" fill="rgb(247,50,12)"/><text x="743.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.32%)</title><rect x="740" y="1476" width="4" height="15" fill="rgb(250,45,25)"/><text x="743.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.16%)</title><rect x="742" y="1492" width="2" height="15" fill="rgb(238,44,14)"/><text x="745.00" y="1502.50"></text></g><g><title>0x7fbcd4a8e0e9 (?) (1 samples, 0.16%)</title><rect x="742" y="1508" width="2" height="15" fill="rgb(235,167,53)"/><text x="745.00" y="1518.50"></text></g><g><title>0x7fbcd4a74bc1 (?) (1 samples, 0.16%)</title><rect x="742" y="1524" width="2" height="15" fill="rgb(248,114,44)"/><text x="745.00" y="1534.50"></text></g><g><title>0x7fbcd4b52d50 (?) (1 samples, 0.16%)</title><rect x="742" y="1540" width="2" height="15" fill="rgb(209,82,28)"/><text x="745.00" y="1550.50"></text></g><g><title>0x7fbcd4b57f6f (?) (1 samples, 0.16%)</title><rect x="742" y="1556" width="2" height="15" fill="rgb(231,163,18)"/><text x="745.00" y="1566.50"></text></g><g><title>0x7fbcd4b6e2e8 (?) (1 samples, 0.16%)</title><rect x="742" y="1572" width="2" height="15" fill="rgb(220,207,0)"/><text x="745.00" y="1582.50"></text></g><g><title>0x7fbcd4b4ea38 (?) (1 samples, 0.16%)</title><rect x="742" y="1588" width="2" height="15" fill="rgb(213,178,47)"/><text x="745.00" y="1598.50"></text></g><g><title>0x7fbcd4ad5d1f (?) (1 samples, 0.16%)</title><rect x="742" y="1604" width="2" height="15" fill="rgb(234,5,11)"/><text x="745.00" y="1614.50"></text></g><g><title>0x7fbcd4ad5571 (?) (1 samples, 0.16%)</title><rect x="742" y="1620" width="2" height="15" fill="rgb(233,132,40)"/><text x="745.00" y="1630.50"></text></g><g><title>0x7fbcd4ad4b07 (?) (1 samples, 0.16%)</title><rect x="742" y="1636" width="2" height="15" fill="rgb(230,27,38)"/><text x="745.00" y="1646.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.16%)</title><rect x="744" y="116" width="2" height="15" fill="rgb(244,179,36)"/><text x="747.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.16%)</title><rect x="744" y="132" width="2" height="15" fill="rgb(207,178,45)"/><text x="747.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.16%)</title><rect x="744" y="148" width="2" height="15" fill="rgb(251,9,0)"/><text x="747.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.16%)</title><rect x="744" y="164" width="2" height="15" fill="rgb(213,187,54)"/><text x="747.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.16%)</title><rect x="744" y="180" width="2" height="15" fill="rgb(222,111,35)"/><text x="747.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:57) (1 samples, 0.16%)</title><rect x="744" y="196" width="2" height="15" fill="rgb(243,220,35)"/><text x="747.00" y="206.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (2 samples, 0.32%)</title><rect x="744" y="84" width="3" height="15" fill="rgb(223,181,54)"/><text x="747.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.32%)</title><rect x="744" y="100" width="3" height="15" fill="rgb(235,53,18)"/><text x="747.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.16%)</title><rect x="746" y="116" width="1" height="15" fill="rgb(213,172,30)"/><text x="749.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.16%)</title><rect x="746" y="132" width="1" height="15" fill="rgb(249,103,30)"/><text x="749.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.16%)</title><rect x="746" y="148" width="1" height="15" fill="rgb(233,6,37)"/><text x="749.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.16%)</title><rect x="746" y="164" width="1" height="15" fill="rgb(231,7,1)"/><text x="749.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.16%)</title><rect x="746" y="180" width="1" height="15" fill="rgb(225,95,39)"/><text x="749.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.16%)</title><rect x="746" y="196" width="1" height="15" fill="rgb(217,9,23)"/><text x="749.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:162) (1 samples, 0.16%)</title><rect x="746" y="212" width="1" height="15" fill="rgb(246,162,48)"/><text x="749.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.16%)</title><rect x="746" y="228" width="1" height="15" fill="rgb(243,228,47)"/><text x="749.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.16%)</title><rect x="746" y="244" width="1" height="15" fill="rgb(247,229,41)"/><text x="749.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.16%)</title><rect x="746" y="260" width="1" height="15" fill="rgb(248,182,32)"/><text x="749.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.16%)</title><rect x="746" y="276" width="1" height="15" fill="rgb(244,63,4)"/><text x="749.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.16%)</title><rect x="746" y="292" width="1" height="15" fill="rgb(230,21,24)"/><text x="749.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.16%)</title><rect x="746" y="308" width="1" height="15" fill="rgb(228,86,13)"/><text x="749.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:448) (1 samples, 0.16%)</title><rect x="746" y="324" width="1" height="15" fill="rgb(224,5,23)"/><text x="749.00" y="334.50"></text></g><g><title>0x7fbcd2d1c7c9 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="746" y="340" width="1" height="15" fill="rgb(226,95,39)"/><text x="749.00" y="350.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="746" y="356" width="1" height="15" fill="rgb(213,64,43)"/><text x="749.00" y="366.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="746" y="372" width="1" height="15" fill="rgb(248,121,37)"/><text x="749.00" y="382.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="746" y="388" width="1" height="15" fill="rgb(245,165,21)"/><text x="749.00" y="398.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="746" y="404" width="1" height="15" fill="rgb(221,160,13)"/><text x="749.00" y="414.50"></text></g><g><title>0x7fbca5670422 (?) (1 samples, 0.16%)</title><rect x="747" y="244" width="2" height="15" fill="rgb(224,183,1)"/><text x="750.00" y="254.50"></text></g><g><title>0x7fbca567689e (?) (1 samples, 0.16%)</title><rect x="747" y="260" width="2" height="15" fill="rgb(205,7,3)"/><text x="750.00" y="270.50"></text></g><g><title>0x7fbca567674f (?) (1 samples, 0.16%)</title><rect x="747" y="276" width="2" height="15" fill="rgb(237,78,40)"/><text x="750.00" y="286.50"></text></g><g><title>0x7fbca567ca3a (?) (1 samples, 0.16%)</title><rect x="747" y="292" width="2" height="15" fill="rgb(247,114,52)"/><text x="750.00" y="302.50"></text></g><g><title>0x7fbcae98ecff (?) (1 samples, 0.16%)</title><rect x="747" y="308" width="2" height="15" fill="rgb(244,6,15)"/><text x="750.00" y="318.50"></text></g><g><title>0x7fbca567778c (?) (1 samples, 0.16%)</title><rect x="747" y="324" width="2" height="15" fill="rgb(224,50,28)"/><text x="750.00" y="334.50"></text></g><g><title>0x7fbca5663d4b (?) (1 samples, 0.16%)</title><rect x="747" y="340" width="2" height="15" fill="rgb(221,207,6)"/><text x="750.00" y="350.50"></text></g><g><title>0x7fbcae998ab9 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="749" y="452" width="2" height="15" fill="rgb(218,71,23)"/><text x="752.00" y="462.50"></text></g><g><title>0x7fbcae999ea9 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="749" y="468" width="2" height="15" fill="rgb(222,86,20)"/><text x="752.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (5 samples, 0.80%)</title><rect x="751" y="484" width="10" height="15" fill="rgb(243,66,4)"/><text x="754.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.16%)</title><rect x="759" y="500" width="2" height="15" fill="rgb(228,70,20)"/><text x="762.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (2 samples, 0.32%)</title><rect x="761" y="484" width="4" height="15" fill="rgb(206,214,35)"/><text x="764.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_end (stl_tree.h:681) (1 samples, 0.16%)</title><rect x="765" y="532" width="1" height="15" fill="rgb(234,197,38)"/><text x="768.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (1 samples, 0.16%)</title><rect x="766" y="532" width="2" height="15" fill="rgb(211,177,7)"/><text x="769.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (9 samples, 1.45%)</title><rect x="768" y="532" width="17" height="15" fill="rgb(237,41,1)"/><text x="771.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (12 samples, 1.93%)</title><rect x="765" y="484" width="22" height="15" fill="rgb(239,66,15)"/><text x="768.00" y="494.50">R..</text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (12 samples, 1.93%)</title><rect x="765" y="500" width="22" height="15" fill="rgb(228,183,33)"/><text x="768.00" y="510.50">s..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (12 samples, 1.93%)</title><rect x="765" y="516" width="22" height="15" fill="rgb(224,36,21)"/><text x="768.00" y="526.50">s..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (1 samples, 0.16%)</title><rect x="785" y="532" width="2" height="15" fill="rgb(216,2,6)"/><text x="788.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (3 samples, 0.48%)</title><rect x="787" y="484" width="6" height="15" fill="rgb(250,59,36)"/><text x="790.00" y="494.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (25 samples, 4.02%)</title><rect x="747" y="100" width="48" height="15" fill="rgb(254,66,32)"/><text x="750.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (25 samples, 4.02%)</title><rect x="747" y="116" width="48" height="15" fill="rgb(249,73,19)"/><text x="750.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (25 samples, 4.02%)</title><rect x="747" y="132" width="48" height="15" fill="rgb(208,132,54)"/><text x="750.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (25 samples, 4.02%)</title><rect x="747" y="148" width="48" height="15" fill="rgb(223,63,18)"/><text x="750.00" y="158.50">run ..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (25 samples, 4.02%)</title><rect x="747" y="164" width="48" height="15" fill="rgb(232,190,36)"/><text x="750.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (25 samples, 4.02%)</title><rect x="747" y="180" width="48" height="15" fill="rgb(217,13,2)"/><text x="750.00" y="190.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (25 samples, 4.02%)</title><rect x="747" y="196" width="48" height="15" fill="rgb(214,185,40)"/><text x="750.00" y="206.50">run ..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 4.02%)</title><rect x="747" y="212" width="48" height="15" fill="rgb(220,19,23)"/><text x="750.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (25 samples, 4.02%)</title><rect x="747" y="228" width="48" height="15" fill="rgb(251,202,29)"/><text x="750.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 3.86%)</title><rect x="749" y="244" width="46" height="15" fill="rgb(243,74,23)"/><text x="752.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 3.86%)</title><rect x="749" y="260" width="46" height="15" fill="rgb(254,139,16)"/><text x="752.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (24 samples, 3.86%)</title><rect x="749" y="276" width="46" height="15" fill="rgb(243,107,35)"/><text x="752.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (24 samples, 3.86%)</title><rect x="749" y="292" width="46" height="15" fill="rgb(218,196,10)"/><text x="752.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (24 samples, 3.86%)</title><rect x="749" y="308" width="46" height="15" fill="rgb(233,46,5)"/><text x="752.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (24 samples, 3.86%)</title><rect x="749" y="324" width="46" height="15" fill="rgb(220,141,53)"/><text x="752.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (24 samples, 3.86%)</title><rect x="749" y="340" width="46" height="15" fill="rgb(212,94,12)"/><text x="752.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (24 samples, 3.86%)</title><rect x="749" y="356" width="46" height="15" fill="rgb(245,208,17)"/><text x="752.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (24 samples, 3.86%)</title><rect x="749" y="372" width="46" height="15" fill="rgb(227,28,8)"/><text x="752.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (24 samples, 3.86%)</title><rect x="749" y="388" width="46" height="15" fill="rgb(208,74,21)"/><text x="752.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (24 samples, 3.86%)</title><rect x="749" y="404" width="46" height="15" fill="rgb(225,92,43)"/><text x="752.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (24 samples, 3.86%)</title><rect x="749" y="420" width="46" height="15" fill="rgb(223,175,31)"/><text x="752.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (24 samples, 3.86%)</title><rect x="749" y="436" width="46" height="15" fill="rgb(228,38,40)"/><text x="752.00" y="446.50">pybi..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (23 samples, 3.70%)</title><rect x="751" y="452" width="44" height="15" fill="rgb(227,164,7)"/><text x="754.00" y="462.50">GOMP..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (23 samples, 3.70%)</title><rect x="751" y="468" width="44" height="15" fill="rgb(221,53,31)"/><text x="754.00" y="478.50">Runt..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:644) (1 samples, 0.16%)</title><rect x="793" y="484" width="2" height="15" fill="rgb(243,150,4)"/><text x="796.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:521) (1 samples, 0.16%)</title><rect x="795" y="484" width="2" height="15" fill="rgb(232,74,44)"/><text x="798.00" y="494.50"></text></g><g><title>std::isnan (cmath:642) (4 samples, 0.64%)</title><rect x="808" y="500" width="8" height="15" fill="rgb(209,87,45)"/><text x="811.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (11 samples, 1.77%)</title><rect x="797" y="484" width="21" height="15" fill="rgb(208,8,21)"/><text x="800.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.16%)</title><rect x="816" y="500" width="2" height="15" fill="rgb(241,90,39)"/><text x="819.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (2 samples, 0.32%)</title><rect x="818" y="484" width="3" height="15" fill="rgb(223,56,37)"/><text x="821.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_end (stl_tree.h:681) (1 samples, 0.16%)</title><rect x="821" y="532" width="2" height="15" fill="rgb(210,128,1)"/><text x="824.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (1 samples, 0.16%)</title><rect x="823" y="532" width="2" height="15" fill="rgb(242,186,42)"/><text x="826.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (9 samples, 1.45%)</title><rect x="821" y="484" width="18" height="15" fill="rgb(237,85,37)"/><text x="824.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (9 samples, 1.45%)</title><rect x="821" y="500" width="18" height="15" fill="rgb(213,9,31)"/><text x="824.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (9 samples, 1.45%)</title><rect x="821" y="516" width="18" height="15" fill="rgb(239,160,10)"/><text x="824.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (7 samples, 1.13%)</title><rect x="825" y="532" width="14" height="15" fill="rgb(213,76,51)"/><text x="828.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:609) (1 samples, 0.16%)</title><rect x="839" y="484" width="1" height="15" fill="rgb(205,103,21)"/><text x="842.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (5 samples, 0.80%)</title><rect x="840" y="484" width="10" height="15" fill="rgb(206,65,45)"/><text x="843.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (1 samples, 0.16%)</title><rect x="850" y="484" width="2" height="15" fill="rgb(210,25,7)"/><text x="853.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:856) (1 samples, 0.16%)</title><rect x="850" y="500" width="2" height="15" fill="rgb(206,77,31)"/><text x="853.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:626) (1 samples, 0.16%)</title><rect x="852" y="484" width="2" height="15" fill="rgb(243,201,15)"/><text x="855.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:45) (59 samples, 9.49%)</title><rect x="744" y="52" width="112" height="15" fill="rgb(209,23,47)"/><text x="747.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:44) (59 samples, 9.49%)</title><rect x="744" y="68" width="112" height="15" fill="rgb(234,68,45)"/><text x="747.00" y="78.50">profile_pyrt ..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (57 samples, 9.16%)</title><rect x="747" y="84" width="109" height="15" fill="rgb(231,37,5)"/><text x="750.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (32 samples, 5.14%)</title><rect x="795" y="100" width="61" height="15" fill="rgb(240,195,13)"/><text x="798.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (32 samples, 5.14%)</title><rect x="795" y="116" width="61" height="15" fill="rgb(251,109,36)"/><text x="798.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (32 samples, 5.14%)</title><rect x="795" y="132" width="61" height="15" fill="rgb(248,215,43)"/><text x="798.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (32 samples, 5.14%)</title><rect x="795" y="148" width="61" height="15" fill="rgb(211,207,47)"/><text x="798.00" y="158.50">run (m..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (32 samples, 5.14%)</title><rect x="795" y="164" width="61" height="15" fill="rgb(210,143,6)"/><text x="798.00" y="174.50">_run_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (32 samples, 5.14%)</title><rect x="795" y="180" width="61" height="15" fill="rgb(213,52,34)"/><text x="798.00" y="190.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (32 samples, 5.14%)</title><rect x="795" y="196" width="61" height="15" fill="rgb(242,12,51)"/><text x="798.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 5.14%)</title><rect x="795" y="212" width="61" height="15" fill="rgb(242,92,15)"/><text x="798.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (32 samples, 5.14%)</title><rect x="795" y="228" width="61" height="15" fill="rgb(212,97,31)"/><text x="798.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (32 samples, 5.14%)</title><rect x="795" y="244" width="61" height="15" fill="rgb(215,221,27)"/><text x="798.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (32 samples, 5.14%)</title><rect x="795" y="260" width="61" height="15" fill="rgb(246,201,34)"/><text x="798.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (32 samples, 5.14%)</title><rect x="795" y="276" width="61" height="15" fill="rgb(209,72,9)"/><text x="798.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (32 samples, 5.14%)</title><rect x="795" y="292" width="61" height="15" fill="rgb(251,226,37)"/><text x="798.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (32 samples, 5.14%)</title><rect x="795" y="308" width="61" height="15" fill="rgb(225,212,6)"/><text x="798.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (32 samples, 5.14%)</title><rect x="795" y="324" width="61" height="15" fill="rgb(218,184,48)"/><text x="798.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (32 samples, 5.14%)</title><rect x="795" y="340" width="61" height="15" fill="rgb(211,204,52)"/><text x="798.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (32 samples, 5.14%)</title><rect x="795" y="356" width="61" height="15" fill="rgb(215,111,43)"/><text x="798.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (32 samples, 5.14%)</title><rect x="795" y="372" width="61" height="15" fill="rgb(249,39,24)"/><text x="798.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (32 samples, 5.14%)</title><rect x="795" y="388" width="61" height="15" fill="rgb(250,116,10)"/><text x="798.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (32 samples, 5.14%)</title><rect x="795" y="404" width="61" height="15" fill="rgb(250,124,27)"/><text x="798.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (32 samples, 5.14%)</title><rect x="795" y="420" width="61" height="15" fill="rgb(248,217,52)"/><text x="798.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (32 samples, 5.14%)</title><rect x="795" y="436" width="61" height="15" fill="rgb(214,155,13)"/><text x="798.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (32 samples, 5.14%)</title><rect x="795" y="452" width="61" height="15" fill="rgb(246,132,7)"/><text x="798.00" y="462.50">GOMP_p..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (32 samples, 5.14%)</title><rect x="795" y="468" width="61" height="15" fill="rgb(232,32,29)"/><text x="798.00" y="478.50">Runtim..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:629) (1 samples, 0.16%)</title><rect x="854" y="484" width="2" height="15" fill="rgb(243,64,54)"/><text x="857.00" y="494.50"></text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.16%)</title><rect x="854" y="500" width="2" height="15" fill="rgb(211,198,49)"/><text x="857.00" y="510.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.16%)</title><rect x="856" y="276" width="2" height="15" fill="rgb(251,172,11)"/><text x="859.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.16%)</title><rect x="856" y="292" width="2" height="15" fill="rgb(209,211,8)"/><text x="859.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.16%)</title><rect x="856" y="308" width="2" height="15" fill="rgb(242,26,36)"/><text x="859.00" y="318.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:28) (2 samples, 0.32%)</title><rect x="856" y="84" width="3" height="15" fill="rgb(239,182,17)"/><text x="859.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.32%)</title><rect x="856" y="100" width="3" height="15" fill="rgb(224,75,9)"/><text x="859.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.32%)</title><rect x="856" y="116" width="3" height="15" fill="rgb(241,173,47)"/><text x="859.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.32%)</title><rect x="856" y="132" width="3" height="15" fill="rgb(207,220,24)"/><text x="859.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.32%)</title><rect x="856" y="148" width="3" height="15" fill="rgb(224,146,42)"/><text x="859.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.32%)</title><rect x="856" y="164" width="3" height="15" fill="rgb(224,107,21)"/><text x="859.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.32%)</title><rect x="856" y="180" width="3" height="15" fill="rgb(233,56,8)"/><text x="859.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (2 samples, 0.32%)</title><rect x="856" y="196" width="3" height="15" fill="rgb(219,88,14)"/><text x="859.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.32%)</title><rect x="856" y="212" width="3" height="15" fill="rgb(245,144,49)"/><text x="859.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.32%)</title><rect x="856" y="228" width="3" height="15" fill="rgb(248,49,10)"/><text x="859.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="856" y="244" width="3" height="15" fill="rgb(211,53,48)"/><text x="859.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.32%)</title><rect x="856" y="260" width="3" height="15" fill="rgb(227,53,25)"/><text x="859.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.16%)</title><rect x="858" y="276" width="1" height="15" fill="rgb(254,91,39)"/><text x="861.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:164) (1 samples, 0.16%)</title><rect x="858" y="292" width="1" height="15" fill="rgb(215,16,40)"/><text x="861.00" y="302.50"></text></g><g><title>0x7fbca49d0ff9 (?) (1 samples, 0.16%)</title><rect x="861" y="212" width="2" height="15" fill="rgb(239,113,24)"/><text x="864.00" y="222.50"></text></g><g><title>0x7fbca49cbef6 (?) (1 samples, 0.16%)</title><rect x="861" y="228" width="2" height="15" fill="rgb(239,70,52)"/><text x="864.00" y="238.50"></text></g><g><title>0x7fbca49c0962 (?) (1 samples, 0.16%)</title><rect x="861" y="244" width="2" height="15" fill="rgb(215,93,37)"/><text x="864.00" y="254.50"></text></g><g><title>0x7fbca49f47a7 (?) (1 samples, 0.16%)</title><rect x="861" y="260" width="2" height="15" fill="rgb(233,192,5)"/><text x="864.00" y="270.50"></text></g><g><title>0x7fbca49f4379 (?) (1 samples, 0.16%)</title><rect x="861" y="276" width="2" height="15" fill="rgb(241,180,22)"/><text x="864.00" y="286.50"></text></g><g><title>0x7fbca4e528b8 (?) (1 samples, 0.16%)</title><rect x="861" y="292" width="2" height="15" fill="rgb(226,42,33)"/><text x="864.00" y="302.50"></text></g><g><title>0x7fbca4e50c7f (?) (1 samples, 0.16%)</title><rect x="861" y="308" width="2" height="15" fill="rgb(228,219,10)"/><text x="864.00" y="318.50"></text></g><g><title>0x7fbca4e6399c (?) (1 samples, 0.16%)</title><rect x="861" y="324" width="2" height="15" fill="rgb(232,214,10)"/><text x="864.00" y="334.50"></text></g><g><title>0x7fbca4b81396 (?) (1 samples, 0.16%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(231,16,12)"/><text x="864.00" y="350.50"></text></g><g><title>0x7fbca49aedfc (?) (1 samples, 0.16%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(244,193,34)"/><text x="864.00" y="366.50"></text></g><g><title>0x7fbca49dc78a (?) (1 samples, 0.16%)</title><rect x="861" y="372" width="2" height="15" fill="rgb(234,33,35)"/><text x="864.00" y="382.50"></text></g><g><title>0x7fbce49d2991 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="861" y="388" width="2" height="15" fill="rgb(243,142,41)"/><text x="864.00" y="398.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:18) (70 samples, 11.25%)</title><rect x="859" y="100" width="133" height="15" fill="rgb(232,226,18)"/><text x="862.00" y="110.50">profile (bench_R..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (69 samples, 11.09%)</title><rect x="861" y="116" width="131" height="15" fill="rgb(226,128,54)"/><text x="864.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (69 samples, 11.09%)</title><rect x="861" y="132" width="131" height="15" fill="rgb(247,112,18)"/><text x="864.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (69 samples, 11.09%)</title><rect x="861" y="148" width="131" height="15" fill="rgb(232,113,38)"/><text x="864.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (69 samples, 11.09%)</title><rect x="861" y="164" width="131" height="15" fill="rgb(247,140,4)"/><text x="864.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (69 samples, 11.09%)</title><rect x="861" y="180" width="131" height="15" fill="rgb(253,23,6)"/><text x="864.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (69 samples, 11.09%)</title><rect x="861" y="196" width="131" height="15" fill="rgb(218,46,33)"/><text x="864.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="212" width="129" height="15" fill="rgb(246,214,6)"/><text x="866.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="228" width="129" height="15" fill="rgb(206,92,16)"/><text x="866.00" y="238.50">void pybind11::c..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="244" width="129" height="15" fill="rgb(210,187,30)"/><text x="866.00" y="254.50">onnxruntime::pyt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="260" width="129" height="15" fill="rgb(209,102,48)"/><text x="866.00" y="270.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="276" width="129" height="15" fill="rgb(211,40,10)"/><text x="866.00" y="286.50">onnxruntime::Inf..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="292" width="129" height="15" fill="rgb(237,117,20)"/><text x="866.00" y="302.50">onnxruntime::uti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="308" width="129" height="15" fill="rgb(209,80,17)"/><text x="866.00" y="318.50">onnxruntime::uti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="324" width="129" height="15" fill="rgb(248,106,34)"/><text x="866.00" y="334.50">onnxruntime::Seq..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="340" width="129" height="15" fill="rgb(228,54,35)"/><text x="866.00" y="350.50">onnxruntime::ml:..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 10.93%)</title><rect x="863" y="356" width="129" height="15" fill="rgb(208,208,41)"/><text x="866.00" y="366.50">onnxruntime::ml:..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="988" y="372" width="4" height="15" fill="rgb(237,65,26)"/><text x="991.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="988" y="388" width="4" height="15" fill="rgb(218,175,38)"/><text x="991.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="990" y="404" width="2" height="15" fill="rgb(232,138,3)"/><text x="993.00" y="414.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 15.59%)</title><rect x="994" y="356" width="184" height="15" fill="rgb(216,14,19)"/><text x="997.00" y="366.50">onnxruntime::ml::TreeEn..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (99 samples, 15.92%)</title><rect x="992" y="340" width="188" height="15" fill="rgb(214,228,20)"/><text x="995.00" y="350.50">onnxruntime::ml::TreeEns..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1178" y="356" width="2" height="15" fill="rgb(244,37,39)"/><text x="1181.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1178" y="372" width="2" height="15" fill="rgb(242,185,45)"/><text x="1181.00" y="382.50"></text></g><g><title>0x7fbce49d40a3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1182" y="388" width="2" height="15" fill="rgb(246,174,35)"/><text x="1185.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.40%)</title><rect x="992" y="260" width="194" height="15" fill="rgb(209,178,33)"/><text x="995.00" y="270.50">onnxruntime::InferenceSes..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.40%)</title><rect x="992" y="276" width="194" height="15" fill="rgb(217,106,44)"/><text x="995.00" y="286.50">onnxruntime::InferenceSes..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.40%)</title><rect x="992" y="292" width="194" height="15" fill="rgb(230,4,4)"/><text x="995.00" y="302.50">onnxruntime::utils::Execu..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.40%)</title><rect x="992" y="308" width="194" height="15" fill="rgb(239,109,12)"/><text x="995.00" y="318.50">onnxruntime::utils::Execu..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (102 samples, 16.40%)</title><rect x="992" y="324" width="194" height="15" fill="rgb(208,120,13)"/><text x="995.00" y="334.50">onnxruntime::SequentialEx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.48%)</title><rect x="1180" y="340" width="6" height="15" fill="rgb(224,89,45)"/><text x="1183.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.32%)</title><rect x="1182" y="356" width="4" height="15" fill="rgb(254,11,32)"/><text x="1185.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.32%)</title><rect x="1182" y="372" width="4" height="15" fill="rgb(208,135,28)"/><text x="1185.00" y="382.50"></text></g><g><title>0x7fbce49d4368 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1184" y="388" width="2" height="15" fill="rgb(207,51,51)"/><text x="1187.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1186" y="260" width="2" height="15" fill="rgb(245,63,41)"/><text x="1189.00" y="270.50"></text></g><g><title>all (622 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,16,15)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:52) (176 samples, 28.30%)</title><rect x="856" y="52" width="334" height="15" fill="rgb(208,86,34)"/><text x="859.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_defaul..</text></g><g><title>profile_ort (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:51) (176 samples, 28.30%)</title><rect x="856" y="68" width="334" height="15" fill="rgb(226,63,42)"/><text x="859.00" y="78.50">profile_ort (bench_RandomForestClassifier_def..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:29) (174 samples, 27.97%)</title><rect x="859" y="84" width="331" height="15" fill="rgb(243,221,35)"/><text x="862.00" y="94.50">setup_profile (bench_RandomForestClassifier_..</text></g><g><title>profile (bench_RandomForestClassifier_default_m_cl_1000_50_12_float_.py:23) (104 samples, 16.72%)</title><rect x="992" y="100" width="198" height="15" fill="rgb(205,188,31)"/><text x="995.00" y="110.50">profile (bench_RandomFore..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (104 samples, 16.72%)</title><rect x="992" y="116" width="198" height="15" fill="rgb(238,204,53)"/><text x="995.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (104 samples, 16.72%)</title><rect x="992" y="132" width="198" height="15" fill="rgb(215,229,34)"/><text x="995.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (104 samples, 16.72%)</title><rect x="992" y="148" width="198" height="15" fill="rgb(215,51,53)"/><text x="995.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (104 samples, 16.72%)</title><rect x="992" y="164" width="198" height="15" fill="rgb(217,50,35)"/><text x="995.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (104 samples, 16.72%)</title><rect x="992" y="180" width="198" height="15" fill="rgb(240,179,37)"/><text x="995.00" y="190.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (onnxruntime/capi/session.py:136) (104 samples, 16.72%)</title><rect x="992" y="196" width="198" height="15" fill="rgb(251,203,13)"/><text x="995.00" y="206.50">run (onnxruntime/capi/ses..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 16.72%)</title><rect x="992" y="212" width="198" height="15" fill="rgb(210,85,43)"/><text x="995.00" y="222.50">pybind11::cpp_function::d..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 16.72%)</title><rect x="992" y="228" width="198" height="15" fill="rgb(223,146,46)"/><text x="995.00" y="238.50">void pybind11::cpp_functi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 16.72%)</title><rect x="992" y="244" width="198" height="15" fill="rgb(244,168,50)"/><text x="995.00" y="254.50">onnxruntime::python::addO..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(206,135,47)"/><text x="1191.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(223,210,14)"/><text x="1191.00" y="286.50"></text></g><g><title>0x7fbce49d2d07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(252,102,16)"/><text x="1191.00" y="302.50"></text></g></g></svg>