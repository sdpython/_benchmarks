<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(211,0,29)"/><text x="13.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(216,217,0)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(240,114,40)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(250,208,12)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(231,92,47)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(213,216,36)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(252,32,29)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(237,43,39)"/><text x="16.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(239,178,14)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(240,54,12)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(241,182,1)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(237,66,4)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(236,163,24)"/><text x="19.00" y="942.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.26%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(228,34,5)"/><text x="19.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.26%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(229,162,33)"/><text x="19.00" y="974.50"></text></g><g><title>0x7ff2712dd6d0 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(227,11,46)"/><text x="19.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.78%)</title><rect x="13" y="836" width="9" height="15" fill="rgb(233,206,14)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.78%)</title><rect x="13" y="852" width="9" height="15" fill="rgb(221,102,32)"/><text x="16.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(236,39,3)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(252,217,26)"/><text x="22.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(221,51,2)"/><text x="22.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(225,181,35)"/><text x="22.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(213,221,53)"/><text x="22.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(214,200,45)"/><text x="22.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(212,142,15)"/><text x="22.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(230,198,0)"/><text x="22.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.30%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(234,114,29)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.30%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(233,151,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="324" width="12" height="15" fill="rgb(245,201,29)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="340" width="12" height="15" fill="rgb(229,101,7)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="13" y="356" width="12" height="15" fill="rgb(215,156,50)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="372" width="12" height="15" fill="rgb(247,33,13)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.04%)</title><rect x="13" y="388" width="12" height="15" fill="rgb(244,202,21)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="404" width="12" height="15" fill="rgb(246,172,45)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="420" width="12" height="15" fill="rgb(244,177,2)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="436" width="12" height="15" fill="rgb(210,131,29)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="13" y="452" width="12" height="15" fill="rgb(253,48,20)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="468" width="12" height="15" fill="rgb(217,178,26)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.04%)</title><rect x="13" y="484" width="12" height="15" fill="rgb(206,131,40)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="500" width="12" height="15" fill="rgb(207,121,12)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="516" width="12" height="15" fill="rgb(221,157,1)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="532" width="12" height="15" fill="rgb(227,140,9)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="13" y="548" width="12" height="15" fill="rgb(243,49,15)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="564" width="12" height="15" fill="rgb(248,150,3)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.04%)</title><rect x="13" y="580" width="12" height="15" fill="rgb(248,114,11)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="596" width="12" height="15" fill="rgb(216,155,14)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="612" width="12" height="15" fill="rgb(251,170,47)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="628" width="12" height="15" fill="rgb(235,30,45)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="644" width="12" height="15" fill="rgb(232,31,51)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="660" width="12" height="15" fill="rgb(253,154,10)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="676" width="12" height="15" fill="rgb(217,148,52)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="13" y="692" width="12" height="15" fill="rgb(230,197,51)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="708" width="12" height="15" fill="rgb(238,161,10)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.04%)</title><rect x="13" y="724" width="12" height="15" fill="rgb(250,124,53)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="740" width="12" height="15" fill="rgb(251,201,35)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="756" width="12" height="15" fill="rgb(222,100,19)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="772" width="12" height="15" fill="rgb(250,27,4)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="13" y="788" width="12" height="15" fill="rgb(212,15,38)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="13" y="804" width="12" height="15" fill="rgb(221,87,5)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.04%)</title><rect x="13" y="820" width="12" height="15" fill="rgb(209,62,31)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(236,215,25)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(216,113,7)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(218,104,44)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(249,229,5)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(219,191,41)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(223,128,22)"/><text x="25.00" y="926.50"></text></g><g><title>originalTextFor (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(248,202,25)"/><text x="25.00" y="942.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(243,222,39)"/><text x="25.00" y="958.50"></text></g><g><title>copy (copy.py) (1 samples, 0.26%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(247,76,20)"/><text x="25.00" y="974.50"></text></g><g><title>_reconstruct (copy.py) (1 samples, 0.26%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(248,210,52)"/><text x="25.00" y="990.50"></text></g><g><title>__newobj__ (copyreg.py) (1 samples, 0.26%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(246,26,35)"/><text x="25.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="10" y="196" width="18" height="15" fill="rgb(214,80,18)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="10" y="212" width="18" height="15" fill="rgb(217,211,16)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="10" y="228" width="18" height="15" fill="rgb(227,87,0)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="10" y="244" width="18" height="15" fill="rgb(241,13,5)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.56%)</title><rect x="10" y="260" width="18" height="15" fill="rgb(242,210,1)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="10" y="276" width="18" height="15" fill="rgb(205,155,19)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="292" width="3" height="15" fill="rgb(248,64,24)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="308" width="3" height="15" fill="rgb(222,8,6)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="324" width="3" height="15" fill="rgb(207,198,28)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="340" width="3" height="15" fill="rgb(229,171,11)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="356" width="3" height="15" fill="rgb(220,185,9)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="372" width="3" height="15" fill="rgb(222,81,50)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.26%)</title><rect x="25" y="388" width="3" height="15" fill="rgb(215,152,45)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="404" width="3" height="15" fill="rgb(219,124,9)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="420" width="3" height="15" fill="rgb(252,45,24)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="436" width="3" height="15" fill="rgb(243,117,16)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="452" width="3" height="15" fill="rgb(250,144,0)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="468" width="3" height="15" fill="rgb(213,0,34)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="484" width="3" height="15" fill="rgb(242,166,29)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(226,56,24)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(246,35,0)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(249,85,22)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(206,12,4)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(217,128,1)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.26%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(237,200,43)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(215,174,27)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(251,198,46)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(234,102,11)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(250,62,5)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(220,53,15)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(233,118,9)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(219,133,31)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(224,53,23)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(248,47,9)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(225,14,47)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(231,80,27)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.26%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(227,149,22)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(218,33,38)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(242,175,50)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(247,210,47)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(239,139,13)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(207,19,4)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(246,180,19)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(236,124,23)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.26%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(243,88,34)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(218,138,18)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(206,174,17)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(207,107,21)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(252,157,39)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(244,140,25)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(228,203,45)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(222,221,6)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.26%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(251,160,7)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.26%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(221,76,42)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.26%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(213,150,30)"/><text x="28.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.26%)</title><rect x="25" y="1076" width="3" height="15" fill="rgb(218,36,50)"/><text x="28.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.26%)</title><rect x="25" y="1092" width="3" height="15" fill="rgb(239,181,26)"/><text x="28.00" y="1102.50"></text></g><g><title>unicode_lstrip (python3.7) (1 samples, 0.26%)</title><rect x="25" y="1108" width="3" height="15" fill="rgb(226,72,46)"/><text x="28.00" y="1118.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.26%)</title><rect x="28" y="1204" width="3" height="15" fill="rgb(214,1,54)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1220" width="3" height="15" fill="rgb(214,107,14)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1236" width="3" height="15" fill="rgb(247,7,18)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1252" width="3" height="15" fill="rgb(206,207,19)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1268" width="3" height="15" fill="rgb(220,214,11)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1284" width="3" height="15" fill="rgb(254,156,28)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.26%)</title><rect x="28" y="1300" width="3" height="15" fill="rgb(224,106,42)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1316" width="3" height="15" fill="rgb(229,220,4)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1332" width="3" height="15" fill="rgb(236,12,20)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1348" width="3" height="15" fill="rgb(210,202,13)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1364" width="3" height="15" fill="rgb(226,85,24)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1380" width="3" height="15" fill="rgb(237,167,49)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="1396" width="3" height="15" fill="rgb(213,29,39)"/><text x="31.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1412" width="3" height="15" fill="rgb(250,77,17)"/><text x="31.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1428" width="3" height="15" fill="rgb(229,18,13)"/><text x="31.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1444" width="3" height="15" fill="rgb(226,161,54)"/><text x="31.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1460" width="3" height="15" fill="rgb(210,23,26)"/><text x="31.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1476" width="3" height="15" fill="rgb(224,157,5)"/><text x="31.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1492" width="3" height="15" fill="rgb(230,138,48)"/><text x="31.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1508" width="3" height="15" fill="rgb(205,106,47)"/><text x="31.00" y="1518.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="1524" width="3" height="15" fill="rgb(249,42,23)"/><text x="31.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="28" y="1124" width="6" height="15" fill="rgb(217,18,16)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="28" y="1140" width="6" height="15" fill="rgb(239,229,20)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="28" y="1156" width="6" height="15" fill="rgb(221,219,0)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="28" y="1172" width="6" height="15" fill="rgb(239,206,7)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="28" y="1188" width="6" height="15" fill="rgb(224,40,20)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.26%)</title><rect x="31" y="1204" width="3" height="15" fill="rgb(209,32,22)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1220" width="3" height="15" fill="rgb(248,217,20)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1236" width="3" height="15" fill="rgb(229,13,18)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1252" width="3" height="15" fill="rgb(239,142,4)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="1268" width="3" height="15" fill="rgb(210,33,42)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1284" width="3" height="15" fill="rgb(244,26,37)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.26%)</title><rect x="31" y="1300" width="3" height="15" fill="rgb(240,102,19)"/><text x="34.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.26%)</title><rect x="31" y="1316" width="3" height="15" fill="rgb(209,80,18)"/><text x="34.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.26%)</title><rect x="31" y="1332" width="3" height="15" fill="rgb(248,75,24)"/><text x="34.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.26%)</title><rect x="31" y="1348" width="3" height="15" fill="rgb(242,169,38)"/><text x="34.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.26%)</title><rect x="31" y="1364" width="3" height="15" fill="rgb(240,32,50)"/><text x="34.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py) (1 samples, 0.26%)</title><rect x="31" y="1380" width="3" height="15" fill="rgb(214,227,42)"/><text x="34.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="484" width="12" height="15" fill="rgb(215,221,54)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="500" width="12" height="15" fill="rgb(230,194,39)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="516" width="12" height="15" fill="rgb(239,160,22)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="532" width="12" height="15" fill="rgb(249,121,27)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="548" width="12" height="15" fill="rgb(235,210,37)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="564" width="12" height="15" fill="rgb(208,137,14)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.04%)</title><rect x="28" y="580" width="12" height="15" fill="rgb(242,93,43)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="596" width="12" height="15" fill="rgb(232,148,23)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="612" width="12" height="15" fill="rgb(231,206,29)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="628" width="12" height="15" fill="rgb(217,155,13)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="644" width="12" height="15" fill="rgb(205,59,47)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="660" width="12" height="15" fill="rgb(230,142,21)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.04%)</title><rect x="28" y="676" width="12" height="15" fill="rgb(206,128,41)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="692" width="12" height="15" fill="rgb(212,143,4)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="708" width="12" height="15" fill="rgb(253,172,20)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="724" width="12" height="15" fill="rgb(249,167,30)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="740" width="12" height="15" fill="rgb(217,31,19)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="756" width="12" height="15" fill="rgb(242,119,43)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.04%)</title><rect x="28" y="772" width="12" height="15" fill="rgb(241,82,12)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="788" width="12" height="15" fill="rgb(225,19,12)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="804" width="12" height="15" fill="rgb(221,146,32)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="820" width="12" height="15" fill="rgb(248,21,38)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="836" width="12" height="15" fill="rgb(239,128,34)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="852" width="12" height="15" fill="rgb(216,78,54)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.04%)</title><rect x="28" y="868" width="12" height="15" fill="rgb(243,224,13)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="884" width="12" height="15" fill="rgb(215,32,34)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="900" width="12" height="15" fill="rgb(250,209,32)"/><text x="31.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="916" width="12" height="15" fill="rgb(252,166,50)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="932" width="12" height="15" fill="rgb(226,19,22)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="948" width="12" height="15" fill="rgb(248,18,9)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="964" width="12" height="15" fill="rgb(251,90,7)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="980" width="12" height="15" fill="rgb(218,178,21)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="996" width="12" height="15" fill="rgb(207,210,11)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.04%)</title><rect x="28" y="1012" width="12" height="15" fill="rgb(224,138,1)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="1028" width="12" height="15" fill="rgb(209,183,9)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="1044" width="12" height="15" fill="rgb(235,22,24)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="1060" width="12" height="15" fill="rgb(232,90,54)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="28" y="1076" width="12" height="15" fill="rgb(212,160,29)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="28" y="1092" width="12" height="15" fill="rgb(207,80,23)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.04%)</title><rect x="28" y="1108" width="12" height="15" fill="rgb(229,92,3)"/><text x="31.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1124" width="6" height="15" fill="rgb(231,167,16)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1140" width="6" height="15" fill="rgb(226,206,49)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1156" width="6" height="15" fill="rgb(206,132,29)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1172" width="6" height="15" fill="rgb(218,214,8)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1188" width="6" height="15" fill="rgb(248,86,2)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="34" y="1204" width="6" height="15" fill="rgb(235,17,10)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1220" width="6" height="15" fill="rgb(215,198,34)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.52%)</title><rect x="34" y="1236" width="6" height="15" fill="rgb(251,183,13)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1252" width="6" height="15" fill="rgb(235,214,14)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1268" width="6" height="15" fill="rgb(223,139,54)"/><text x="37.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1284" width="6" height="15" fill="rgb(244,29,4)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1300" width="6" height="15" fill="rgb(216,229,40)"/><text x="37.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1316" width="6" height="15" fill="rgb(215,25,50)"/><text x="37.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="34" y="1332" width="6" height="15" fill="rgb(214,139,44)"/><text x="37.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1348" width="6" height="15" fill="rgb(249,55,44)"/><text x="37.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.52%)</title><rect x="34" y="1364" width="6" height="15" fill="rgb(220,181,7)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1380" width="6" height="15" fill="rgb(254,194,6)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1396" width="6" height="15" fill="rgb(244,173,22)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1412" width="6" height="15" fill="rgb(216,217,53)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="34" y="1428" width="6" height="15" fill="rgb(214,149,44)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="34" y="1444" width="6" height="15" fill="rgb(212,8,28)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.52%)</title><rect x="34" y="1460" width="6" height="15" fill="rgb(222,182,41)"/><text x="37.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.52%)</title><rect x="34" y="1476" width="6" height="15" fill="rgb(224,135,49)"/><text x="37.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.52%)</title><rect x="34" y="1492" width="6" height="15" fill="rgb(227,57,6)"/><text x="37.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.26%)</title><rect x="37" y="1508" width="3" height="15" fill="rgb(223,63,3)"/><text x="40.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.26%)</title><rect x="37" y="1524" width="3" height="15" fill="rgb(240,11,6)"/><text x="40.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="37" y="1540" width="3" height="15" fill="rgb(249,68,7)"/><text x="40.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="37" y="1556" width="3" height="15" fill="rgb(219,145,51)"/><text x="40.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.26%)</title><rect x="37" y="1572" width="3" height="15" fill="rgb(217,76,52)"/><text x="40.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.26%)</title><rect x="37" y="1588" width="3" height="15" fill="rgb(205,93,40)"/><text x="40.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.26%)</title><rect x="37" y="1604" width="3" height="15" fill="rgb(245,140,21)"/><text x="40.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="37" y="1620" width="3" height="15" fill="rgb(206,229,0)"/><text x="40.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="37" y="1636" width="3" height="15" fill="rgb(246,149,51)"/><text x="40.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.26%)</title><rect x="37" y="1652" width="3" height="15" fill="rgb(248,137,51)"/><text x="40.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="37" y="1668" width="3" height="15" fill="rgb(228,43,9)"/><text x="40.00" y="1678.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="37" y="1684" width="3" height="15" fill="rgb(226,198,45)"/><text x="40.00" y="1694.50"></text></g><g><title>0x7ff2712ce8a4 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="37" y="1700" width="3" height="15" fill="rgb(238,96,30)"/><text x="40.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1092" width="3" height="15" fill="rgb(207,80,24)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.26%)</title><rect x="40" y="1108" width="3" height="15" fill="rgb(219,211,22)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1124" width="3" height="15" fill="rgb(247,66,7)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1140" width="3" height="15" fill="rgb(218,3,54)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1156" width="3" height="15" fill="rgb(224,18,14)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1172" width="3" height="15" fill="rgb(245,21,50)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1188" width="3" height="15" fill="rgb(243,191,24)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.26%)</title><rect x="40" y="1204" width="3" height="15" fill="rgb(229,191,21)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1220" width="3" height="15" fill="rgb(248,73,29)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1236" width="3" height="15" fill="rgb(252,203,19)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1252" width="3" height="15" fill="rgb(207,218,2)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1268" width="3" height="15" fill="rgb(249,42,22)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1284" width="3" height="15" fill="rgb(253,28,1)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.26%)</title><rect x="40" y="1300" width="3" height="15" fill="rgb(217,220,15)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1316" width="3" height="15" fill="rgb(205,79,15)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1332" width="3" height="15" fill="rgb(227,148,16)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1348" width="3" height="15" fill="rgb(223,212,2)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1364" width="3" height="15" fill="rgb(252,159,44)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1380" width="3" height="15" fill="rgb(206,205,5)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.26%)</title><rect x="40" y="1396" width="3" height="15" fill="rgb(232,76,9)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1412" width="3" height="15" fill="rgb(212,89,28)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1428" width="3" height="15" fill="rgb(215,168,16)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1444" width="3" height="15" fill="rgb(212,199,15)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1460" width="3" height="15" fill="rgb(226,214,49)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1476" width="3" height="15" fill="rgb(226,78,10)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.26%)</title><rect x="40" y="1492" width="3" height="15" fill="rgb(211,161,6)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1508" width="3" height="15" fill="rgb(216,23,48)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1524" width="3" height="15" fill="rgb(238,162,32)"/><text x="43.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1540" width="3" height="15" fill="rgb(226,227,26)"/><text x="43.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1556" width="3" height="15" fill="rgb(221,68,24)"/><text x="43.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1572" width="3" height="15" fill="rgb(246,84,26)"/><text x="43.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.26%)</title><rect x="40" y="1588" width="3" height="15" fill="rgb(234,93,43)"/><text x="43.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1604" width="3" height="15" fill="rgb(227,147,2)"/><text x="43.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1620" width="3" height="15" fill="rgb(227,69,15)"/><text x="43.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1636" width="3" height="15" fill="rgb(245,25,11)"/><text x="43.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1652" width="3" height="15" fill="rgb(219,67,12)"/><text x="43.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1668" width="3" height="15" fill="rgb(215,187,4)"/><text x="43.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.26%)</title><rect x="40" y="1684" width="3" height="15" fill="rgb(249,44,46)"/><text x="43.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1700" width="3" height="15" fill="rgb(205,135,34)"/><text x="43.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1716" width="3" height="15" fill="rgb(228,1,53)"/><text x="43.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1732" width="3" height="15" fill="rgb(242,40,8)"/><text x="43.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1748" width="3" height="15" fill="rgb(210,34,12)"/><text x="43.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1764" width="3" height="15" fill="rgb(253,164,22)"/><text x="43.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.26%)</title><rect x="40" y="1780" width="3" height="15" fill="rgb(215,55,4)"/><text x="43.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1796" width="3" height="15" fill="rgb(210,103,22)"/><text x="43.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1812" width="3" height="15" fill="rgb(230,114,44)"/><text x="43.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1828" width="3" height="15" fill="rgb(242,81,0)"/><text x="43.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="40" y="1844" width="3" height="15" fill="rgb(249,215,7)"/><text x="43.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="40" y="1860" width="3" height="15" fill="rgb(213,11,43)"/><text x="43.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.26%)</title><rect x="40" y="1876" width="3" height="15" fill="rgb(233,157,34)"/><text x="43.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.26%)</title><rect x="40" y="1892" width="3" height="15" fill="rgb(245,101,15)"/><text x="43.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.26%)</title><rect x="40" y="1908" width="3" height="15" fill="rgb(209,50,15)"/><text x="43.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.26%)</title><rect x="40" y="1924" width="3" height="15" fill="rgb(211,228,19)"/><text x="43.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.56%)</title><rect x="28" y="340" width="18" height="15" fill="rgb(221,17,1)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="356" width="18" height="15" fill="rgb(247,150,51)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="372" width="18" height="15" fill="rgb(246,86,50)"/><text x="31.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="388" width="18" height="15" fill="rgb(242,89,45)"/><text x="31.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.56%)</title><rect x="28" y="404" width="18" height="15" fill="rgb(211,32,36)"/><text x="31.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="420" width="18" height="15" fill="rgb(231,186,33)"/><text x="31.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.56%)</title><rect x="28" y="436" width="18" height="15" fill="rgb(237,177,10)"/><text x="31.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="452" width="18" height="15" fill="rgb(226,4,34)"/><text x="31.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.56%)</title><rect x="28" y="468" width="18" height="15" fill="rgb(232,9,51)"/><text x="31.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="484" width="6" height="15" fill="rgb(218,193,51)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="500" width="6" height="15" fill="rgb(249,94,1)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="516" width="6" height="15" fill="rgb(238,128,1)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.52%)</title><rect x="40" y="532" width="6" height="15" fill="rgb(250,186,33)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="548" width="6" height="15" fill="rgb(227,163,47)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="564" width="6" height="15" fill="rgb(214,13,18)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="580" width="6" height="15" fill="rgb(233,156,6)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="596" width="6" height="15" fill="rgb(209,94,33)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="612" width="6" height="15" fill="rgb(229,160,35)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.52%)</title><rect x="40" y="628" width="6" height="15" fill="rgb(239,20,34)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="644" width="6" height="15" fill="rgb(254,147,6)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="660" width="6" height="15" fill="rgb(249,79,48)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="676" width="6" height="15" fill="rgb(217,52,30)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="692" width="6" height="15" fill="rgb(233,216,31)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="708" width="6" height="15" fill="rgb(217,33,21)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.52%)</title><rect x="40" y="724" width="6" height="15" fill="rgb(219,194,39)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="740" width="6" height="15" fill="rgb(205,41,30)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="756" width="6" height="15" fill="rgb(232,196,19)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="772" width="6" height="15" fill="rgb(236,54,32)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="788" width="6" height="15" fill="rgb(223,154,44)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="804" width="6" height="15" fill="rgb(253,115,19)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.52%)</title><rect x="40" y="820" width="6" height="15" fill="rgb(221,174,50)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="836" width="6" height="15" fill="rgb(216,87,26)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="852" width="6" height="15" fill="rgb(226,225,12)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="868" width="6" height="15" fill="rgb(246,55,6)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="884" width="6" height="15" fill="rgb(223,167,17)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="900" width="6" height="15" fill="rgb(246,12,5)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.52%)</title><rect x="40" y="916" width="6" height="15" fill="rgb(213,71,2)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="932" width="6" height="15" fill="rgb(242,29,41)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="948" width="6" height="15" fill="rgb(238,89,18)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="964" width="6" height="15" fill="rgb(224,136,47)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="980" width="6" height="15" fill="rgb(230,134,47)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="996" width="6" height="15" fill="rgb(228,190,50)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.52%)</title><rect x="40" y="1012" width="6" height="15" fill="rgb(239,33,22)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1028" width="6" height="15" fill="rgb(220,222,39)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1044" width="6" height="15" fill="rgb(245,4,50)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="40" y="1060" width="6" height="15" fill="rgb(221,142,4)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="40" y="1076" width="6" height="15" fill="rgb(254,98,41)"/><text x="43.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1092" width="3" height="15" fill="rgb(215,61,28)"/><text x="46.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="43" y="1108" width="3" height="15" fill="rgb(216,147,48)"/><text x="46.00" y="1118.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.26%)</title><rect x="46" y="580" width="3" height="15" fill="rgb(229,101,10)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="596" width="3" height="15" fill="rgb(238,165,37)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="612" width="3" height="15" fill="rgb(213,121,48)"/><text x="49.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="628" width="3" height="15" fill="rgb(224,35,53)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="644" width="3" height="15" fill="rgb(215,88,47)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="660" width="3" height="15" fill="rgb(249,220,24)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="676" width="3" height="15" fill="rgb(233,56,8)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="692" width="3" height="15" fill="rgb(250,119,50)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="708" width="3" height="15" fill="rgb(218,6,7)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.26%)</title><rect x="46" y="724" width="3" height="15" fill="rgb(232,39,41)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="740" width="3" height="15" fill="rgb(219,7,29)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="756" width="3" height="15" fill="rgb(228,221,28)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(207,178,31)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(221,162,5)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(239,181,23)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.26%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(213,223,33)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="836" width="3" height="15" fill="rgb(232,26,19)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="852" width="3" height="15" fill="rgb(216,160,36)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="868" width="3" height="15" fill="rgb(209,223,13)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="884" width="3" height="15" fill="rgb(251,194,38)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="900" width="3" height="15" fill="rgb(229,39,19)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.26%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(248,11,30)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(211,50,5)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(237,8,9)"/><text x="49.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(241,86,39)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(236,13,53)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(206,209,17)"/><text x="49.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(229,8,38)"/><text x="49.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(254,170,38)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(242,23,54)"/><text x="49.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.26%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(253,53,26)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(226,136,11)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(208,143,22)"/><text x="49.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(242,62,26)"/><text x="49.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(225,152,35)"/><text x="49.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(205,33,47)"/><text x="49.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(239,189,23)"/><text x="49.00" y="1166.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.26%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(253,47,8)"/><text x="52.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(231,66,42)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(254,18,37)"/><text x="52.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(235,196,30)"/><text x="52.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(214,92,13)"/><text x="52.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(245,162,38)"/><text x="52.00" y="990.50"></text></g><g><title>&lt;module&gt; (idna/__init__.py) (1 samples, 0.26%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(248,219,48)"/><text x="52.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(216,130,23)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(208,106,16)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(246,27,50)"/><text x="52.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(250,202,31)"/><text x="52.00" y="1070.50"></text></g><g><title>0x7ff2712e2ec9 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(245,17,49)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="948" width="3" height="15" fill="rgb(239,150,32)"/><text x="56.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="964" width="3" height="15" fill="rgb(236,102,19)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="980" width="3" height="15" fill="rgb(254,44,52)"/><text x="56.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="996" width="3" height="15" fill="rgb(233,152,53)"/><text x="56.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="53" y="1012" width="3" height="15" fill="rgb(229,224,29)"/><text x="56.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1028" width="3" height="15" fill="rgb(245,88,7)"/><text x="56.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.26%)</title><rect x="53" y="1044" width="3" height="15" fill="rgb(239,15,7)"/><text x="56.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1060" width="3" height="15" fill="rgb(248,85,40)"/><text x="56.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1076" width="3" height="15" fill="rgb(252,147,52)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1092" width="3" height="15" fill="rgb(217,196,10)"/><text x="56.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1108" width="3" height="15" fill="rgb(206,49,8)"/><text x="56.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1124" width="3" height="15" fill="rgb(211,184,51)"/><text x="56.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="53" y="1140" width="3" height="15" fill="rgb(249,6,6)"/><text x="56.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1156" width="3" height="15" fill="rgb(232,49,49)"/><text x="56.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.26%)</title><rect x="53" y="1172" width="3" height="15" fill="rgb(243,228,49)"/><text x="56.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1188" width="3" height="15" fill="rgb(217,44,26)"/><text x="56.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1204" width="3" height="15" fill="rgb(235,185,16)"/><text x="56.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1220" width="3" height="15" fill="rgb(232,88,53)"/><text x="56.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="53" y="1236" width="3" height="15" fill="rgb(208,67,29)"/><text x="56.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1252" width="3" height="15" fill="rgb(243,198,25)"/><text x="56.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.26%)</title><rect x="53" y="1268" width="3" height="15" fill="rgb(236,39,37)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1284" width="3" height="15" fill="rgb(233,41,2)"/><text x="56.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1300" width="3" height="15" fill="rgb(220,41,54)"/><text x="56.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1316" width="3" height="15" fill="rgb(229,14,10)"/><text x="56.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="53" y="1332" width="3" height="15" fill="rgb(246,121,29)"/><text x="56.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="53" y="1348" width="3" height="15" fill="rgb(239,66,0)"/><text x="56.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.26%)</title><rect x="53" y="1364" width="3" height="15" fill="rgb(207,26,19)"/><text x="56.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.26%)</title><rect x="53" y="1380" width="3" height="15" fill="rgb(236,228,32)"/><text x="56.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.26%)</title><rect x="53" y="1396" width="3" height="15" fill="rgb(221,139,31)"/><text x="56.00" y="1406.50"></text></g><g><title>0x7ff23c12754d (?) (1 samples, 0.26%)</title><rect x="53" y="1412" width="3" height="15" fill="rgb(214,72,35)"/><text x="56.00" y="1422.50"></text></g><g><title>0x7ff23c168231 (?) (1 samples, 0.26%)</title><rect x="53" y="1428" width="3" height="15" fill="rgb(225,196,16)"/><text x="56.00" y="1438.50"></text></g><g><title>0x7ff23c229480 (?) (1 samples, 0.26%)</title><rect x="53" y="1444" width="3" height="15" fill="rgb(240,30,17)"/><text x="56.00" y="1454.50"></text></g><g><title>0x7ff23c267d69 (?) (1 samples, 0.26%)</title><rect x="53" y="1460" width="3" height="15" fill="rgb(210,157,23)"/><text x="56.00" y="1470.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="53" y="1476" width="3" height="15" fill="rgb(230,49,0)"/><text x="56.00" y="1486.50"></text></g><g><title>0x7ff23c228d30 (?) (1 samples, 0.26%)</title><rect x="53" y="1492" width="3" height="15" fill="rgb(234,150,11)"/><text x="56.00" y="1502.50"></text></g><g><title>0x7ff23c1d4e38 (?) (1 samples, 0.26%)</title><rect x="53" y="1508" width="3" height="15" fill="rgb(241,219,22)"/><text x="56.00" y="1518.50"></text></g><g><title>0x7ff23c229514 (?) (1 samples, 0.26%)</title><rect x="53" y="1524" width="3" height="15" fill="rgb(221,95,36)"/><text x="56.00" y="1534.50"></text></g><g><title>0x7ff23c267d69 (?) (1 samples, 0.26%)</title><rect x="53" y="1540" width="3" height="15" fill="rgb(234,173,11)"/><text x="56.00" y="1550.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="53" y="1556" width="3" height="15" fill="rgb(230,97,12)"/><text x="56.00" y="1566.50"></text></g><g><title>0x7ff23c228cb9 (?) (1 samples, 0.26%)</title><rect x="53" y="1572" width="3" height="15" fill="rgb(224,13,4)"/><text x="56.00" y="1582.50"></text></g><g><title>0x7ff23c20fd16 (?) (1 samples, 0.26%)</title><rect x="53" y="1588" width="3" height="15" fill="rgb(237,76,34)"/><text x="56.00" y="1598.50"></text></g><g><title>0x7ff23c20f7d2 (?) (1 samples, 0.26%)</title><rect x="53" y="1604" width="3" height="15" fill="rgb(205,96,16)"/><text x="56.00" y="1614.50"></text></g><g><title>0x7ff23c229343 (?) (1 samples, 0.26%)</title><rect x="53" y="1620" width="3" height="15" fill="rgb(221,158,32)"/><text x="56.00" y="1630.50"></text></g><g><title>0x7ff23c267d69 (?) (1 samples, 0.26%)</title><rect x="53" y="1636" width="3" height="15" fill="rgb(230,198,34)"/><text x="56.00" y="1646.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="53" y="1652" width="3" height="15" fill="rgb(249,187,11)"/><text x="56.00" y="1662.50"></text></g><g><title>0x7ff23c228da9 (?) (1 samples, 0.26%)</title><rect x="53" y="1668" width="3" height="15" fill="rgb(223,54,7)"/><text x="56.00" y="1678.50"></text></g><g><title>0x7ff23c2f5554 (?) (1 samples, 0.26%)</title><rect x="53" y="1684" width="3" height="15" fill="rgb(212,155,8)"/><text x="56.00" y="1694.50"></text></g><g><title>0x7ff23c326e6c (?) (1 samples, 0.26%)</title><rect x="53" y="1700" width="3" height="15" fill="rgb(248,78,37)"/><text x="56.00" y="1710.50"></text></g><g><title>0x7ff23c20edbb (?) (1 samples, 0.26%)</title><rect x="53" y="1716" width="3" height="15" fill="rgb(239,129,11)"/><text x="56.00" y="1726.50"></text></g><g><title>0x7ff23c22b520 (?) (1 samples, 0.26%)</title><rect x="53" y="1732" width="3" height="15" fill="rgb(224,122,48)"/><text x="56.00" y="1742.50"></text></g><g><title>0x7ff23c22b20b (?) (1 samples, 0.26%)</title><rect x="53" y="1748" width="3" height="15" fill="rgb(245,46,28)"/><text x="56.00" y="1758.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.60%)</title><rect x="28" y="244" width="31" height="15" fill="rgb(246,20,45)"/><text x="31.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.60%)</title><rect x="28" y="260" width="31" height="15" fill="rgb(253,37,12)"/><text x="31.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.60%)</title><rect x="28" y="276" width="31" height="15" fill="rgb(249,110,20)"/><text x="31.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.60%)</title><rect x="28" y="292" width="31" height="15" fill="rgb(219,85,39)"/><text x="31.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.60%)</title><rect x="28" y="308" width="31" height="15" fill="rgb(226,93,37)"/><text x="31.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.60%)</title><rect x="28" y="324" width="31" height="15" fill="rgb(249,125,17)"/><text x="31.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.04%)</title><rect x="46" y="340" width="13" height="15" fill="rgb(207,156,38)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="356" width="13" height="15" fill="rgb(219,63,21)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="372" width="13" height="15" fill="rgb(233,97,44)"/><text x="49.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="388" width="13" height="15" fill="rgb(230,155,6)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="404" width="13" height="15" fill="rgb(206,197,25)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="420" width="13" height="15" fill="rgb(214,216,13)"/><text x="49.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="436" width="13" height="15" fill="rgb(205,115,3)"/><text x="49.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="46" y="452" width="13" height="15" fill="rgb(209,40,9)"/><text x="49.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="468" width="13" height="15" fill="rgb(235,30,28)"/><text x="49.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.04%)</title><rect x="46" y="484" width="13" height="15" fill="rgb(221,33,1)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="500" width="13" height="15" fill="rgb(252,83,36)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="516" width="13" height="15" fill="rgb(235,11,17)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="532" width="13" height="15" fill="rgb(229,174,23)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.04%)</title><rect x="46" y="548" width="13" height="15" fill="rgb(247,91,30)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.04%)</title><rect x="46" y="564" width="13" height="15" fill="rgb(240,19,6)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.78%)</title><rect x="49" y="580" width="10" height="15" fill="rgb(236,203,25)"/><text x="52.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="596" width="10" height="15" fill="rgb(210,7,7)"/><text x="52.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="612" width="10" height="15" fill="rgb(241,110,27)"/><text x="52.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="628" width="10" height="15" fill="rgb(211,62,0)"/><text x="52.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.78%)</title><rect x="49" y="644" width="10" height="15" fill="rgb(232,28,12)"/><text x="52.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="660" width="10" height="15" fill="rgb(214,193,42)"/><text x="52.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.78%)</title><rect x="49" y="676" width="10" height="15" fill="rgb(225,42,9)"/><text x="52.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="692" width="10" height="15" fill="rgb(226,153,34)"/><text x="52.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="708" width="10" height="15" fill="rgb(234,91,23)"/><text x="52.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="724" width="10" height="15" fill="rgb(235,58,53)"/><text x="52.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.78%)</title><rect x="49" y="740" width="10" height="15" fill="rgb(225,109,49)"/><text x="52.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="756" width="10" height="15" fill="rgb(234,142,32)"/><text x="52.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.78%)</title><rect x="49" y="772" width="10" height="15" fill="rgb(231,46,27)"/><text x="52.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="788" width="10" height="15" fill="rgb(239,2,52)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="804" width="10" height="15" fill="rgb(217,1,16)"/><text x="52.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="820" width="10" height="15" fill="rgb(242,71,49)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="836" width="10" height="15" fill="rgb(250,155,26)"/><text x="52.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="852" width="10" height="15" fill="rgb(239,19,38)"/><text x="52.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.78%)</title><rect x="49" y="868" width="10" height="15" fill="rgb(220,8,33)"/><text x="52.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="49" y="884" width="10" height="15" fill="rgb(236,179,50)"/><text x="52.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (2 samples, 0.52%)</title><rect x="53" y="900" width="6" height="15" fill="rgb(206,110,30)"/><text x="56.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="53" y="916" width="6" height="15" fill="rgb(235,41,36)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="53" y="932" width="6" height="15" fill="rgb(235,184,53)"/><text x="56.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="948" width="3" height="15" fill="rgb(242,193,13)"/><text x="59.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="56" y="964" width="3" height="15" fill="rgb(236,196,18)"/><text x="59.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="980" width="3" height="15" fill="rgb(219,42,27)"/><text x="59.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.26%)</title><rect x="56" y="996" width="3" height="15" fill="rgb(222,227,8)"/><text x="59.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1012" width="3" height="15" fill="rgb(239,42,49)"/><text x="59.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1028" width="3" height="15" fill="rgb(238,30,40)"/><text x="59.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1044" width="3" height="15" fill="rgb(215,148,52)"/><text x="59.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="56" y="1060" width="3" height="15" fill="rgb(229,124,29)"/><text x="59.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1076" width="3" height="15" fill="rgb(250,216,49)"/><text x="59.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.26%)</title><rect x="56" y="1092" width="3" height="15" fill="rgb(230,219,10)"/><text x="59.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1108" width="3" height="15" fill="rgb(232,160,9)"/><text x="59.00" y="1118.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1124" width="3" height="15" fill="rgb(229,212,51)"/><text x="59.00" y="1134.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="56" y="1140" width="3" height="15" fill="rgb(233,33,3)"/><text x="59.00" y="1150.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.26%)</title><rect x="59" y="244" width="3" height="15" fill="rgb(231,149,31)"/><text x="62.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="260" width="3" height="15" fill="rgb(237,76,46)"/><text x="62.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="276" width="3" height="15" fill="rgb(208,95,31)"/><text x="62.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="292" width="3" height="15" fill="rgb(229,127,26)"/><text x="62.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="308" width="3" height="15" fill="rgb(251,102,1)"/><text x="62.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="324" width="3" height="15" fill="rgb(210,137,17)"/><text x="62.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="340" width="3" height="15" fill="rgb(224,29,19)"/><text x="62.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="356" width="3" height="15" fill="rgb(243,173,40)"/><text x="62.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.26%)</title><rect x="59" y="372" width="3" height="15" fill="rgb(249,157,0)"/><text x="62.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="388" width="3" height="15" fill="rgb(245,215,33)"/><text x="62.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="404" width="3" height="15" fill="rgb(213,188,15)"/><text x="62.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="420" width="3" height="15" fill="rgb(242,128,15)"/><text x="62.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="436" width="3" height="15" fill="rgb(207,184,5)"/><text x="62.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="452" width="3" height="15" fill="rgb(254,21,40)"/><text x="62.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="468" width="3" height="15" fill="rgb(237,200,40)"/><text x="62.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="484" width="3" height="15" fill="rgb(243,141,2)"/><text x="62.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.26%)</title><rect x="59" y="500" width="3" height="15" fill="rgb(216,218,40)"/><text x="62.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="516" width="3" height="15" fill="rgb(234,61,41)"/><text x="62.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="532" width="3" height="15" fill="rgb(217,202,47)"/><text x="62.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="548" width="3" height="15" fill="rgb(253,118,5)"/><text x="62.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="564" width="3" height="15" fill="rgb(208,134,3)"/><text x="62.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="580" width="3" height="15" fill="rgb(218,212,15)"/><text x="62.00" y="590.50"></text></g><g><title>0x7ff263b93585 (?) (1 samples, 0.26%)</title><rect x="59" y="596" width="3" height="15" fill="rgb(223,97,12)"/><text x="62.00" y="606.50"></text></g><g><title>0x7ff263b99075 (?) (1 samples, 0.26%)</title><rect x="59" y="612" width="3" height="15" fill="rgb(240,149,33)"/><text x="62.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="628" width="3" height="15" fill="rgb(211,102,41)"/><text x="62.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="644" width="3" height="15" fill="rgb(243,188,37)"/><text x="62.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="660" width="3" height="15" fill="rgb(227,156,9)"/><text x="62.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="676" width="3" height="15" fill="rgb(243,145,1)"/><text x="62.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="692" width="3" height="15" fill="rgb(207,106,11)"/><text x="62.00" y="702.50"></text></g><g><title>0x7ff2634d0543 (?) (1 samples, 0.26%)</title><rect x="59" y="708" width="3" height="15" fill="rgb(216,12,54)"/><text x="62.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="724" width="3" height="15" fill="rgb(211,8,41)"/><text x="62.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="740" width="3" height="15" fill="rgb(243,215,39)"/><text x="62.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="756" width="3" height="15" fill="rgb(227,70,35)"/><text x="62.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="772" width="3" height="15" fill="rgb(245,15,14)"/><text x="62.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="788" width="3" height="15" fill="rgb(250,95,18)"/><text x="62.00" y="798.50"></text></g><g><title>0x7ff2632a5b9c (?) (1 samples, 0.26%)</title><rect x="59" y="804" width="3" height="15" fill="rgb(220,158,11)"/><text x="62.00" y="814.50"></text></g><g><title>0x7ff2632a9885 (?) (1 samples, 0.26%)</title><rect x="59" y="820" width="3" height="15" fill="rgb(238,91,11)"/><text x="62.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="836" width="3" height="15" fill="rgb(218,54,13)"/><text x="62.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="852" width="3" height="15" fill="rgb(211,183,37)"/><text x="62.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="868" width="3" height="15" fill="rgb(232,173,43)"/><text x="62.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="884" width="3" height="15" fill="rgb(234,42,22)"/><text x="62.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="900" width="3" height="15" fill="rgb(208,55,45)"/><text x="62.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.26%)</title><rect x="59" y="916" width="3" height="15" fill="rgb(253,30,45)"/><text x="62.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="932" width="3" height="15" fill="rgb(231,51,22)"/><text x="62.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="948" width="3" height="15" fill="rgb(246,76,46)"/><text x="62.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="964" width="3" height="15" fill="rgb(239,32,0)"/><text x="62.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="980" width="3" height="15" fill="rgb(231,174,43)"/><text x="62.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="996" width="3" height="15" fill="rgb(244,159,0)"/><text x="62.00" y="1006.50"></text></g><g><title>&lt;module&gt; (base64.py) (1 samples, 0.26%)</title><rect x="59" y="1012" width="3" height="15" fill="rgb(223,3,18)"/><text x="62.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="1028" width="3" height="15" fill="rgb(229,82,26)"/><text x="62.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="1044" width="3" height="15" fill="rgb(250,32,14)"/><text x="62.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="1060" width="3" height="15" fill="rgb(213,228,37)"/><text x="62.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="1076" width="3" height="15" fill="rgb(226,63,43)"/><text x="62.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="1092" width="3" height="15" fill="rgb(224,25,26)"/><text x="62.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="1108" width="3" height="15" fill="rgb(214,23,14)"/><text x="62.00" y="1118.50"></text></g><g><title>0x7ff263056d96 (?) (1 samples, 0.26%)</title><rect x="59" y="1124" width="3" height="15" fill="rgb(221,122,31)"/><text x="62.00" y="1134.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_base.py) (1 samples, 0.26%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(237,210,11)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(236,34,16)"/><text x="65.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="372" width="3" height="15" fill="rgb(232,158,40)"/><text x="65.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="388" width="3" height="15" fill="rgb(254,93,25)"/><text x="65.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="62" y="404" width="3" height="15" fill="rgb(228,77,3)"/><text x="65.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="420" width="3" height="15" fill="rgb(249,164,44)"/><text x="65.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py) (1 samples, 0.26%)</title><rect x="62" y="436" width="3" height="15" fill="rgb(219,229,43)"/><text x="65.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="452" width="3" height="15" fill="rgb(221,188,4)"/><text x="65.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="468" width="3" height="15" fill="rgb(224,153,3)"/><text x="65.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="484" width="3" height="15" fill="rgb(208,205,7)"/><text x="65.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="62" y="500" width="3" height="15" fill="rgb(241,164,26)"/><text x="65.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="516" width="3" height="15" fill="rgb(243,90,42)"/><text x="65.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/_data.py) (1 samples, 0.26%)</title><rect x="62" y="532" width="3" height="15" fill="rgb(230,226,0)"/><text x="65.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="548" width="3" height="15" fill="rgb(254,23,40)"/><text x="65.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="564" width="3" height="15" fill="rgb(226,179,11)"/><text x="65.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="62" y="580" width="3" height="15" fill="rgb(228,79,40)"/><text x="65.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="62" y="596" width="3" height="15" fill="rgb(238,86,36)"/><text x="65.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="62" y="612" width="3" height="15" fill="rgb(227,128,42)"/><text x="65.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="62" y="628" width="3" height="15" fill="rgb(250,176,23)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="68" width="58" height="15" fill="rgb(226,68,38)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="84" width="58" height="15" fill="rgb(215,9,31)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="100" width="58" height="15" fill="rgb(240,103,44)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 4.95%)</title><rect x="10" y="116" width="58" height="15" fill="rgb(228,115,28)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="132" width="58" height="15" fill="rgb(215,226,35)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (19 samples, 4.95%)</title><rect x="10" y="148" width="58" height="15" fill="rgb(219,44,39)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="164" width="58" height="15" fill="rgb(242,223,45)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.95%)</title><rect x="10" y="180" width="58" height="15" fill="rgb(232,159,40)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.39%)</title><rect x="28" y="196" width="40" height="15" fill="rgb(249,13,22)"/><text x="31.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.39%)</title><rect x="28" y="212" width="40" height="15" fill="rgb(245,225,1)"/><text x="31.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.39%)</title><rect x="28" y="228" width="40" height="15" fill="rgb(235,216,38)"/><text x="31.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (2 samples, 0.52%)</title><rect x="62" y="244" width="6" height="15" fill="rgb(235,101,50)"/><text x="65.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="62" y="260" width="6" height="15" fill="rgb(208,73,25)"/><text x="65.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="62" y="276" width="6" height="15" fill="rgb(220,108,53)"/><text x="65.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="62" y="292" width="6" height="15" fill="rgb(236,224,38)"/><text x="65.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="62" y="308" width="6" height="15" fill="rgb(228,208,0)"/><text x="65.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="62" y="324" width="6" height="15" fill="rgb(245,101,33)"/><text x="65.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.26%)</title><rect x="65" y="340" width="3" height="15" fill="rgb(247,41,16)"/><text x="68.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="356" width="3" height="15" fill="rgb(212,106,43)"/><text x="68.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="372" width="3" height="15" fill="rgb(213,50,42)"/><text x="68.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="388" width="3" height="15" fill="rgb(240,43,46)"/><text x="68.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="404" width="3" height="15" fill="rgb(214,21,8)"/><text x="68.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="420" width="3" height="15" fill="rgb(220,207,19)"/><text x="68.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.26%)</title><rect x="65" y="436" width="3" height="15" fill="rgb(216,60,9)"/><text x="68.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="452" width="3" height="15" fill="rgb(207,186,52)"/><text x="68.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="468" width="3" height="15" fill="rgb(214,184,28)"/><text x="68.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="484" width="3" height="15" fill="rgb(241,53,3)"/><text x="68.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="500" width="3" height="15" fill="rgb(230,195,53)"/><text x="68.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="516" width="3" height="15" fill="rgb(206,50,15)"/><text x="68.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.26%)</title><rect x="65" y="532" width="3" height="15" fill="rgb(231,66,43)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="548" width="3" height="15" fill="rgb(241,109,10)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="564" width="3" height="15" fill="rgb(250,8,15)"/><text x="68.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="580" width="3" height="15" fill="rgb(244,1,42)"/><text x="68.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="596" width="3" height="15" fill="rgb(239,24,4)"/><text x="68.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="612" width="3" height="15" fill="rgb(219,182,25)"/><text x="68.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.26%)</title><rect x="65" y="628" width="3" height="15" fill="rgb(233,109,24)"/><text x="68.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="644" width="3" height="15" fill="rgb(245,148,7)"/><text x="68.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="660" width="3" height="15" fill="rgb(233,112,39)"/><text x="68.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="676" width="3" height="15" fill="rgb(233,56,2)"/><text x="68.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="692" width="3" height="15" fill="rgb(207,131,45)"/><text x="68.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="708" width="3" height="15" fill="rgb(223,218,15)"/><text x="68.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="724" width="3" height="15" fill="rgb(238,135,26)"/><text x="68.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="740" width="3" height="15" fill="rgb(225,54,37)"/><text x="68.00" y="750.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py) (1 samples, 0.26%)</title><rect x="65" y="756" width="3" height="15" fill="rgb(239,107,13)"/><text x="68.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="772" width="3" height="15" fill="rgb(207,93,6)"/><text x="68.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="788" width="3" height="15" fill="rgb(208,59,52)"/><text x="68.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="804" width="3" height="15" fill="rgb(219,191,3)"/><text x="68.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="820" width="3" height="15" fill="rgb(227,160,49)"/><text x="68.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="836" width="3" height="15" fill="rgb(252,149,50)"/><text x="68.00" y="846.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/_unsupervised.py) (1 samples, 0.26%)</title><rect x="65" y="852" width="3" height="15" fill="rgb(228,187,16)"/><text x="68.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="868" width="3" height="15" fill="rgb(247,116,44)"/><text x="68.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="884" width="3" height="15" fill="rgb(219,228,27)"/><text x="68.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="900" width="3" height="15" fill="rgb(234,187,42)"/><text x="68.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="916" width="3" height="15" fill="rgb(221,193,6)"/><text x="68.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="932" width="3" height="15" fill="rgb(248,77,32)"/><text x="68.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.26%)</title><rect x="65" y="948" width="3" height="15" fill="rgb(233,229,5)"/><text x="68.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="964" width="3" height="15" fill="rgb(247,79,12)"/><text x="68.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="980" width="3" height="15" fill="rgb(230,183,2)"/><text x="68.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="65" y="996" width="3" height="15" fill="rgb(219,6,36)"/><text x="68.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="1012" width="3" height="15" fill="rgb(215,192,3)"/><text x="68.00" y="1022.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="1028" width="3" height="15" fill="rgb(244,60,46)"/><text x="68.00" y="1038.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="65" y="1044" width="3" height="15" fill="rgb(209,32,18)"/><text x="68.00" y="1054.50"></text></g><g><title>0x7ff2312fe72e (?) (1 samples, 0.26%)</title><rect x="105" y="228" width="3" height="15" fill="rgb(252,104,13)"/><text x="108.00" y="238.50"></text></g><g><title>0x7ff2312e0210 (?) (1 samples, 0.26%)</title><rect x="105" y="244" width="3" height="15" fill="rgb(225,158,30)"/><text x="108.00" y="254.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="105" y="260" width="3" height="15" fill="rgb(213,196,4)"/><text x="108.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="111" y="244" width="3" height="15" fill="rgb(252,229,2)"/><text x="114.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="114" y="260" width="3" height="15" fill="rgb(237,60,44)"/><text x="117.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="114" y="276" width="3" height="15" fill="rgb(206,74,39)"/><text x="117.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="114" y="292" width="3" height="15" fill="rgb(246,67,43)"/><text x="117.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 1.30%)</title><rect x="105" y="212" width="15" height="15" fill="rgb(238,142,22)"/><text x="108.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.04%)</title><rect x="108" y="228" width="12" height="15" fill="rgb(220,27,28)"/><text x="111.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="114" y="244" width="6" height="15" fill="rgb(234,110,50)"/><text x="117.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="117" y="260" width="3" height="15" fill="rgb(215,163,48)"/><text x="120.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="117" y="276" width="3" height="15" fill="rgb(250,77,15)"/><text x="120.00" y="286.50"></text></g><g><title>0x7ff2712e2ed6 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="117" y="292" width="3" height="15" fill="rgb(217,15,30)"/><text x="120.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="126" y="260" width="3" height="15" fill="rgb(216,5,32)"/><text x="129.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="129" y="260" width="3" height="15" fill="rgb(230,188,31)"/><text x="132.00" y="270.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="132" y="292" width="3" height="15" fill="rgb(247,37,7)"/><text x="135.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="135" y="292" width="4" height="15" fill="rgb(251,110,15)"/><text x="138.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="356" width="3" height="15" fill="rgb(246,54,29)"/><text x="148.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="372" width="3" height="15" fill="rgb(209,160,40)"/><text x="148.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="388" width="3" height="15" fill="rgb(247,80,51)"/><text x="148.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="404" width="3" height="15" fill="rgb(249,223,34)"/><text x="148.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="145" y="420" width="3" height="15" fill="rgb(224,167,24)"/><text x="148.00" y="430.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="145" y="436" width="3" height="15" fill="rgb(234,219,12)"/><text x="148.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="145" y="452" width="3" height="15" fill="rgb(243,220,28)"/><text x="148.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="148" y="356" width="3" height="15" fill="rgb(247,228,24)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.78%)</title><rect x="145" y="340" width="9" height="15" fill="rgb(234,166,29)"/><text x="148.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="151" y="356" width="3" height="15" fill="rgb(215,32,6)"/><text x="154.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="151" y="372" width="3" height="15" fill="rgb(236,129,19)"/><text x="154.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.78%)</title><rect x="154" y="340" width="9" height="15" fill="rgb(241,135,29)"/><text x="157.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="356" width="3" height="15" fill="rgb(213,198,39)"/><text x="163.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="372" width="3" height="15" fill="rgb(252,213,35)"/><text x="163.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="388" width="3" height="15" fill="rgb(254,114,39)"/><text x="163.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="404" width="3" height="15" fill="rgb(208,188,52)"/><text x="163.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="420" width="3" height="15" fill="rgb(229,54,9)"/><text x="163.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="436" width="3" height="15" fill="rgb(245,144,29)"/><text x="163.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="160" y="452" width="3" height="15" fill="rgb(215,0,38)"/><text x="163.00" y="462.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.34%)</title><rect x="139" y="308" width="27" height="15" fill="rgb(212,68,19)"/><text x="142.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.82%)</title><rect x="145" y="324" width="21" height="15" fill="rgb(234,23,50)"/><text x="148.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="163" y="340" width="3" height="15" fill="rgb(224,130,10)"/><text x="166.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="163" y="356" width="3" height="15" fill="rgb(250,30,13)"/><text x="166.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.12%)</title><rect x="132" y="260" width="37" height="15" fill="rgb(243,197,54)"/><text x="135.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.12%)</title><rect x="132" y="276" width="37" height="15" fill="rgb(214,228,50)"/><text x="135.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.60%)</title><rect x="139" y="292" width="30" height="15" fill="rgb(250,174,23)"/><text x="142.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="166" y="308" width="3" height="15" fill="rgb(227,87,20)"/><text x="169.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="166" y="324" width="3" height="15" fill="rgb(214,37,37)"/><text x="169.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="166" y="340" width="3" height="15" fill="rgb(221,41,49)"/><text x="169.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="169" y="276" width="3" height="15" fill="rgb(237,195,3)"/><text x="172.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="169" y="260" width="6" height="15" fill="rgb(224,70,4)"/><text x="172.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="172" y="276" width="3" height="15" fill="rgb(226,153,39)"/><text x="175.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="172" y="292" width="3" height="15" fill="rgb(223,213,53)"/><text x="175.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="172" y="308" width="3" height="15" fill="rgb(253,185,48)"/><text x="175.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.69%)</title><rect x="123" y="244" width="56" height="15" fill="rgb(231,195,52)"/><text x="126.00" y="254.50">onnxr..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="175" y="260" width="4" height="15" fill="rgb(209,174,50)"/><text x="178.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (37 samples, 9.64%)</title><rect x="68" y="100" width="114" height="15" fill="rgb(215,122,45)"/><text x="71.00" y="110.50">profile (bench..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (36 samples, 9.38%)</title><rect x="71" y="116" width="111" height="15" fill="rgb(247,147,36)"/><text x="74.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (36 samples, 9.38%)</title><rect x="71" y="132" width="111" height="15" fill="rgb(232,167,7)"/><text x="74.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (35 samples, 9.11%)</title><rect x="74" y="148" width="108" height="15" fill="rgb(219,56,37)"/><text x="77.00" y="158.50">run (mlprodic..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (33 samples, 8.59%)</title><rect x="80" y="164" width="102" height="15" fill="rgb(251,93,13)"/><text x="83.00" y="174.50">_run_whole_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (28 samples, 7.29%)</title><rect x="96" y="180" width="86" height="15" fill="rgb(223,209,50)"/><text x="99.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py) (28 samples, 7.29%)</title><rect x="96" y="196" width="86" height="15" fill="rgb(250,4,19)"/><text x="99.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 5.21%)</title><rect x="120" y="212" width="62" height="15" fill="rgb(216,167,50)"/><text x="123.00" y="222.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 5.21%)</title><rect x="120" y="228" width="62" height="15" fill="rgb(222,20,41)"/><text x="123.00" y="238.50">void p..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="179" y="244" width="3" height="15" fill="rgb(211,74,4)"/><text x="182.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (38 samples, 9.90%)</title><rect x="68" y="68" width="117" height="15" fill="rgb(244,164,2)"/><text x="71.00" y="78.50">profile_ort (b..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (38 samples, 9.90%)</title><rect x="68" y="84" width="117" height="15" fill="rgb(225,183,35)"/><text x="71.00" y="94.50">setup_profile ..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="182" y="100" width="3" height="15" fill="rgb(225,94,51)"/><text x="185.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="182" y="116" width="3" height="15" fill="rgb(208,87,17)"/><text x="185.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="182" y="132" width="3" height="15" fill="rgb(206,229,22)"/><text x="185.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="182" y="148" width="3" height="15" fill="rgb(205,69,15)"/><text x="185.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="182" y="164" width="3" height="15" fill="rgb(229,135,50)"/><text x="185.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="180" width="3" height="15" fill="rgb(254,179,8)"/><text x="185.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="196" width="3" height="15" fill="rgb(253,74,37)"/><text x="185.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="212" width="3" height="15" fill="rgb(228,173,35)"/><text x="185.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="182" y="228" width="3" height="15" fill="rgb(222,66,19)"/><text x="185.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="244" width="3" height="15" fill="rgb(244,102,5)"/><text x="185.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.26%)</title><rect x="182" y="260" width="3" height="15" fill="rgb(233,127,49)"/><text x="185.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="276" width="3" height="15" fill="rgb(253,124,35)"/><text x="185.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="292" width="3" height="15" fill="rgb(247,179,31)"/><text x="185.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="308" width="3" height="15" fill="rgb(210,83,32)"/><text x="185.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="182" y="324" width="3" height="15" fill="rgb(247,148,13)"/><text x="185.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="182" y="340" width="3" height="15" fill="rgb(223,224,22)"/><text x="185.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.26%)</title><rect x="182" y="356" width="3" height="15" fill="rgb(244,74,32)"/><text x="185.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.26%)</title><rect x="182" y="372" width="3" height="15" fill="rgb(212,80,54)"/><text x="185.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.26%)</title><rect x="182" y="388" width="3" height="15" fill="rgb(205,165,13)"/><text x="185.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.26%)</title><rect x="182" y="404" width="3" height="15" fill="rgb(241,60,15)"/><text x="185.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.26%)</title><rect x="182" y="420" width="3" height="15" fill="rgb(224,99,53)"/><text x="185.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.26%)</title><rect x="182" y="436" width="3" height="15" fill="rgb(230,1,53)"/><text x="185.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.26%)</title><rect x="182" y="452" width="3" height="15" fill="rgb(220,22,51)"/><text x="185.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.26%)</title><rect x="182" y="468" width="3" height="15" fill="rgb(251,144,5)"/><text x="185.00" y="478.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="185" y="116" width="3" height="15" fill="rgb(231,71,41)"/><text x="188.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="185" y="132" width="3" height="15" fill="rgb(239,138,39)"/><text x="188.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="185" y="148" width="3" height="15" fill="rgb(217,146,8)"/><text x="188.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="249" y="180" width="3" height="15" fill="rgb(241,133,0)"/><text x="252.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.26%)</title><rect x="344" y="196" width="4" height="15" fill="rgb(230,217,47)"/><text x="347.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.26%)</title><rect x="363" y="212" width="3" height="15" fill="rgb(217,198,26)"/><text x="366.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.26%)</title><rect x="366" y="212" width="3" height="15" fill="rgb(251,199,26)"/><text x="369.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.26%)</title><rect x="366" y="228" width="3" height="15" fill="rgb(223,224,32)"/><text x="369.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.52%)</title><rect x="369" y="212" width="6" height="15" fill="rgb(239,147,35)"/><text x="372.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.26%)</title><rect x="372" y="228" width="3" height="15" fill="rgb(218,13,47)"/><text x="375.00" y="238.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.26%)</title><rect x="415" y="340" width="3" height="15" fill="rgb(215,35,49)"/><text x="418.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.26%)</title><rect x="418" y="340" width="3" height="15" fill="rgb(246,81,33)"/><text x="421.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.78%)</title><rect x="415" y="324" width="9" height="15" fill="rgb(209,81,34)"/><text x="418.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="421" y="340" width="3" height="15" fill="rgb(225,166,15)"/><text x="424.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="421" y="356" width="3" height="15" fill="rgb(247,24,41)"/><text x="424.00" y="366.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.26%)</title><rect x="421" y="372" width="3" height="15" fill="rgb(230,122,15)"/><text x="424.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 2.34%)</title><rect x="400" y="244" width="27" height="15" fill="rgb(213,137,17)"/><text x="403.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.82%)</title><rect x="406" y="260" width="21" height="15" fill="rgb(227,35,18)"/><text x="409.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 1.56%)</title><rect x="409" y="276" width="18" height="15" fill="rgb(206,91,9)"/><text x="412.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.30%)</title><rect x="412" y="292" width="15" height="15" fill="rgb(227,96,41)"/><text x="415.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 1.30%)</title><rect x="412" y="308" width="15" height="15" fill="rgb(246,87,33)"/><text x="415.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="424" y="324" width="3" height="15" fill="rgb(207,183,45)"/><text x="427.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="434" y="324" width="3" height="15" fill="rgb(242,107,48)"/><text x="437.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="434" y="340" width="3" height="15" fill="rgb(217,109,45)"/><text x="437.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.26%)</title><rect x="440" y="340" width="3" height="15" fill="rgb(212,217,0)"/><text x="443.00" y="350.50"></text></g><g><title>0x7ff2704ee7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="440" y="356" width="3" height="15" fill="rgb(236,217,37)"/><text x="443.00" y="366.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.26%)</title><rect x="443" y="340" width="3" height="15" fill="rgb(220,35,47)"/><text x="446.00" y="350.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.30%)</title><rect x="434" y="292" width="15" height="15" fill="rgb(207,163,49)"/><text x="437.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.30%)</title><rect x="434" y="308" width="15" height="15" fill="rgb(216,145,25)"/><text x="437.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.04%)</title><rect x="437" y="324" width="12" height="15" fill="rgb(231,83,12)"/><text x="440.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.26%)</title><rect x="446" y="340" width="3" height="15" fill="rgb(252,23,47)"/><text x="449.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="446" y="356" width="3" height="15" fill="rgb(240,183,12)"/><text x="449.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (8 samples, 2.08%)</title><rect x="427" y="244" width="25" height="15" fill="rgb(244,83,0)"/><text x="430.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.08%)</title><rect x="427" y="260" width="25" height="15" fill="rgb(222,94,18)"/><text x="430.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.82%)</title><rect x="430" y="276" width="22" height="15" fill="rgb(211,194,26)"/><text x="433.00" y="286.50">a..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.26%)</title><rect x="449" y="292" width="3" height="15" fill="rgb(237,191,43)"/><text x="452.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.26%)</title><rect x="455" y="260" width="3" height="15" fill="rgb(253,72,11)"/><text x="458.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.26%)</title><rect x="455" y="276" width="3" height="15" fill="rgb(216,15,11)"/><text x="458.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.26%)</title><rect x="455" y="292" width="3" height="15" fill="rgb(212,126,40)"/><text x="458.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="461" y="276" width="3" height="15" fill="rgb(243,73,15)"/><text x="464.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.26%)</title><rect x="464" y="324" width="3" height="15" fill="rgb(226,132,16)"/><text x="467.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="464" y="340" width="3" height="15" fill="rgb(214,194,30)"/><text x="467.00" y="350.50"></text></g><g><title>0x7ff2712847a5 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="464" y="356" width="3" height="15" fill="rgb(226,19,0)"/><text x="467.00" y="366.50"></text></g><g><title>0x7ff2712ecd50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="464" y="372" width="3" height="15" fill="rgb(228,88,15)"/><text x="467.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.78%)</title><rect x="464" y="292" width="10" height="15" fill="rgb(242,158,2)"/><text x="467.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.78%)</title><rect x="464" y="308" width="10" height="15" fill="rgb(209,210,21)"/><text x="467.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.52%)</title><rect x="467" y="324" width="7" height="15" fill="rgb(212,70,48)"/><text x="470.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.26%)</title><rect x="470" y="340" width="4" height="15" fill="rgb(235,91,21)"/><text x="473.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.26%)</title><rect x="470" y="356" width="4" height="15" fill="rgb(215,11,33)"/><text x="473.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="474" y="292" width="3" height="15" fill="rgb(249,68,45)"/><text x="477.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.26%)</title><rect x="477" y="308" width="3" height="15" fill="rgb(231,72,35)"/><text x="480.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="480" y="324" width="3" height="15" fill="rgb(224,196,13)"/><text x="483.00" y="334.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.26%)</title><rect x="483" y="324" width="3" height="15" fill="rgb(234,102,46)"/><text x="486.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.78%)</title><rect x="480" y="308" width="9" height="15" fill="rgb(248,117,33)"/><text x="483.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.26%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(241,47,31)"/><text x="489.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.30%)</title><rect x="477" y="292" width="15" height="15" fill="rgb(208,225,35)"/><text x="480.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.26%)</title><rect x="489" y="308" width="3" height="15" fill="rgb(226,66,41)"/><text x="492.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="489" y="324" width="3" height="15" fill="rgb(252,156,34)"/><text x="492.00" y="334.50"></text></g><g><title>0x7ff27144be00 (libm-2.29.so) (1 samples, 0.26%)</title><rect x="498" y="356" width="3" height="15" fill="rgb(214,107,1)"/><text x="501.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 3.39%)</title><rect x="464" y="276" width="40" height="15" fill="rgb(208,228,52)"/><text x="467.00" y="286.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (4 samples, 1.04%)</title><rect x="492" y="292" width="12" height="15" fill="rgb(246,190,2)"/><text x="495.00" y="302.50"></text></g><g><title>0x7ff25c5b433d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.04%)</title><rect x="492" y="308" width="12" height="15" fill="rgb(230,182,30)"/><text x="495.00" y="318.50"></text></g><g><title>0x7ff25c5d6214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.04%)</title><rect x="492" y="324" width="12" height="15" fill="rgb(230,187,17)"/><text x="495.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (4 samples, 1.04%)</title><rect x="492" y="340" width="12" height="15" fill="rgb(216,48,26)"/><text x="495.00" y="350.50"></text></g><g><title>0x7ff27144be2f (libm-2.29.so) (1 samples, 0.26%)</title><rect x="501" y="356" width="3" height="15" fill="rgb(253,24,22)"/><text x="504.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 4.17%)</title><rect x="458" y="260" width="49" height="15" fill="rgb(222,207,17)"/><text x="461.00" y="270.50">PyUF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="504" y="276" width="3" height="15" fill="rgb(238,164,7)"/><text x="507.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="504" y="292" width="3" height="15" fill="rgb(210,55,48)"/><text x="507.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="504" y="308" width="3" height="15" fill="rgb(251,135,46)"/><text x="507.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (44 samples, 11.46%)</title><rect x="378" y="228" width="135" height="15" fill="rgb(239,80,37)"/><text x="381.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 5.21%)</title><rect x="452" y="244" width="61" height="15" fill="rgb(231,91,26)"/><text x="455.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.52%)</title><rect x="507" y="260" width="6" height="15" fill="rgb(238,213,26)"/><text x="510.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(244,96,36)"/><text x="547.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.26%)</title><rect x="553" y="292" width="3" height="15" fill="rgb(234,76,4)"/><text x="556.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="553" y="308" width="3" height="15" fill="rgb(232,62,2)"/><text x="556.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.26%)</title><rect x="553" y="324" width="3" height="15" fill="rgb(249,131,52)"/><text x="556.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (3 samples, 0.78%)</title><rect x="550" y="276" width="10" height="15" fill="rgb(241,72,45)"/><text x="553.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="556" y="292" width="4" height="15" fill="rgb(211,38,48)"/><text x="559.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="556" y="308" width="4" height="15" fill="rgb(222,171,12)"/><text x="559.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 1.30%)</title><rect x="547" y="260" width="16" height="15" fill="rgb(233,179,10)"/><text x="550.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.26%)</title><rect x="560" y="276" width="3" height="15" fill="rgb(244,85,4)"/><text x="563.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.26%)</title><rect x="560" y="292" width="3" height="15" fill="rgb(244,114,0)"/><text x="563.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="560" y="308" width="3" height="15" fill="rgb(251,180,26)"/><text x="563.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="560" y="324" width="3" height="15" fill="rgb(229,211,7)"/><text x="563.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.26%)</title><rect x="560" y="340" width="3" height="15" fill="rgb(222,21,52)"/><text x="563.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="572" y="340" width="3" height="15" fill="rgb(214,106,17)"/><text x="575.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(205,62,38)"/><text x="575.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="575" y="372" width="3" height="15" fill="rgb(254,173,40)"/><text x="578.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="575" y="388" width="3" height="15" fill="rgb(241,134,32)"/><text x="578.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.52%)</title><rect x="578" y="372" width="6" height="15" fill="rgb(217,104,30)"/><text x="581.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="581" y="388" width="3" height="15" fill="rgb(251,177,27)"/><text x="584.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.26%)</title><rect x="584" y="372" width="3" height="15" fill="rgb(229,57,26)"/><text x="587.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.26%)</title><rect x="584" y="388" width="3" height="15" fill="rgb(225,220,43)"/><text x="587.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.26%)</title><rect x="584" y="404" width="3" height="15" fill="rgb(233,51,32)"/><text x="587.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="584" y="420" width="3" height="15" fill="rgb(222,155,49)"/><text x="587.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="584" y="436" width="3" height="15" fill="rgb(208,74,0)"/><text x="587.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="584" y="452" width="3" height="15" fill="rgb(212,183,9)"/><text x="587.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="584" y="468" width="3" height="15" fill="rgb(247,223,37)"/><text x="587.00" y="478.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.52%)</title><rect x="587" y="372" width="6" height="15" fill="rgb(212,214,29)"/><text x="590.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.52%)</title><rect x="587" y="388" width="6" height="15" fill="rgb(218,165,7)"/><text x="590.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.52%)</title><rect x="587" y="404" width="6" height="15" fill="rgb(228,132,53)"/><text x="590.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (2 samples, 0.52%)</title><rect x="587" y="420" width="6" height="15" fill="rgb(244,76,33)"/><text x="590.00" y="430.50"></text></g><g><title>array_sum (methods.c) (11 samples, 2.86%)</title><rect x="563" y="260" width="33" height="15" fill="rgb(253,112,12)"/><text x="566.00" y="270.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 2.86%)</title><rect x="563" y="276" width="33" height="15" fill="rgb(235,222,32)"/><text x="566.00" y="286.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 2.86%)</title><rect x="563" y="292" width="33" height="15" fill="rgb(240,104,35)"/><text x="566.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.86%)</title><rect x="563" y="308" width="33" height="15" fill="rgb(225,177,53)"/><text x="566.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.86%)</title><rect x="563" y="324" width="33" height="15" fill="rgb(238,60,54)"/><text x="566.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.82%)</title><rect x="575" y="340" width="21" height="15" fill="rgb(230,71,4)"/><text x="578.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.82%)</title><rect x="575" y="356" width="21" height="15" fill="rgb(251,56,8)"/><text x="578.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="593" y="372" width="3" height="15" fill="rgb(250,94,11)"/><text x="596.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.26%)</title><rect x="593" y="388" width="3" height="15" fill="rgb(251,220,5)"/><text x="596.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.26%)</title><rect x="593" y="404" width="3" height="15" fill="rgb(238,115,13)"/><text x="596.00" y="414.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.26%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(215,134,1)"/><text x="599.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.26%)</title><rect x="600" y="292" width="3" height="15" fill="rgb(218,76,30)"/><text x="603.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.26%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(215,197,25)"/><text x="606.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="603" y="340" width="3" height="15" fill="rgb(236,187,41)"/><text x="606.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="606" y="324" width="3" height="15" fill="rgb(234,171,9)"/><text x="609.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.78%)</title><rect x="603" y="292" width="9" height="15" fill="rgb(239,128,44)"/><text x="606.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.78%)</title><rect x="603" y="308" width="9" height="15" fill="rgb(254,174,29)"/><text x="606.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.26%)</title><rect x="609" y="324" width="3" height="15" fill="rgb(242,203,46)"/><text x="612.00" y="334.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="609" y="340" width="3" height="15" fill="rgb(220,44,23)"/><text x="612.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (140 samples, 36.46%)</title><rect x="185" y="100" width="430" height="15" fill="rgb(216,167,39)"/><text x="188.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 36.20%)</title><rect x="188" y="116" width="427" height="15" fill="rgb(241,192,51)"/><text x="191.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (135 samples, 35.16%)</title><rect x="200" y="132" width="415" height="15" fill="rgb(243,35,3)"/><text x="203.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (134 samples, 34.90%)</title><rect x="203" y="148" width="412" height="15" fill="rgb(208,10,36)"/><text x="206.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (128 samples, 33.33%)</title><rect x="222" y="164" width="393" height="15" fill="rgb(253,209,24)"/><text x="225.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (118 samples, 30.73%)</title><rect x="252" y="180" width="363" height="15" fill="rgb(227,191,46)"/><text x="255.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (87 samples, 22.66%)</title><rect x="348" y="196" width="267" height="15" fill="rgb(225,86,36)"/><text x="351.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (78 samples, 20.31%)</title><rect x="375" y="212" width="240" height="15" fill="rgb(245,26,28)"/><text x="378.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 8.59%)</title><rect x="513" y="228" width="102" height="15" fill="rgb(239,166,32)"/><text x="516.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (31 samples, 8.07%)</title><rect x="520" y="244" width="95" height="15" fill="rgb(240,112,47)"/><text x="523.00" y="254.50">norm_l1 (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.56%)</title><rect x="596" y="260" width="19" height="15" fill="rgb(254,30,48)"/><text x="599.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.56%)</title><rect x="596" y="276" width="19" height="15" fill="rgb(237,165,52)"/><text x="599.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="612" y="292" width="3" height="15" fill="rgb(244,94,44)"/><text x="615.00" y="302.50"></text></g><g><title>find (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="628" width="3" height="15" fill="rgb(234,102,47)"/><text x="618.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="644" width="3" height="15" fill="rgb(251,54,52)"/><text x="618.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="660" width="3" height="15" fill="rgb(254,50,34)"/><text x="618.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="676" width="3" height="15" fill="rgb(228,41,40)"/><text x="618.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="692" width="3" height="15" fill="rgb(223,41,0)"/><text x="618.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="708" width="3" height="15" fill="rgb(220,182,52)"/><text x="618.00" y="718.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="724" width="3" height="15" fill="rgb(220,98,6)"/><text x="618.00" y="734.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="740" width="3" height="15" fill="rgb(212,19,32)"/><text x="618.00" y="750.50"></text></g><g><title>iter_fields (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="615" y="756" width="3" height="15" fill="rgb(252,32,10)"/><text x="618.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="615" y="404" width="6" height="15" fill="rgb(232,36,37)"/><text x="618.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="615" y="420" width="6" height="15" fill="rgb(205,49,14)"/><text x="618.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="615" y="436" width="6" height="15" fill="rgb(228,136,38)"/><text x="618.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.52%)</title><rect x="615" y="452" width="6" height="15" fill="rgb(220,50,31)"/><text x="618.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="615" y="468" width="6" height="15" fill="rgb(207,210,48)"/><text x="618.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.52%)</title><rect x="615" y="484" width="6" height="15" fill="rgb(254,224,54)"/><text x="618.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.52%)</title><rect x="615" y="500" width="6" height="15" fill="rgb(244,182,36)"/><text x="618.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.52%)</title><rect x="615" y="516" width="6" height="15" fill="rgb(244,215,11)"/><text x="618.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.52%)</title><rect x="615" y="532" width="6" height="15" fill="rgb(210,113,52)"/><text x="618.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.52%)</title><rect x="615" y="548" width="6" height="15" fill="rgb(216,12,52)"/><text x="618.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (2 samples, 0.52%)</title><rect x="615" y="564" width="6" height="15" fill="rgb(254,84,24)"/><text x="618.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (2 samples, 0.52%)</title><rect x="615" y="580" width="6" height="15" fill="rgb(229,127,17)"/><text x="618.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (2 samples, 0.52%)</title><rect x="615" y="596" width="6" height="15" fill="rgb(205,17,2)"/><text x="618.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (2 samples, 0.52%)</title><rect x="615" y="612" width="6" height="15" fill="rgb(239,159,20)"/><text x="618.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py) (1 samples, 0.26%)</title><rect x="618" y="628" width="3" height="15" fill="rgb(235,108,17)"/><text x="621.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="644" width="3" height="15" fill="rgb(215,62,52)"/><text x="621.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="660" width="3" height="15" fill="rgb(221,80,9)"/><text x="621.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="676" width="3" height="15" fill="rgb(233,122,51)"/><text x="621.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="692" width="3" height="15" fill="rgb(244,227,22)"/><text x="621.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="708" width="3" height="15" fill="rgb(223,74,50)"/><text x="621.00" y="718.50"></text></g><g><title>get_visitor (jinja2/visitor.py) (1 samples, 0.26%)</title><rect x="618" y="724" width="3" height="15" fill="rgb(211,223,43)"/><text x="621.00" y="734.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (143 samples, 37.24%)</title><rect x="185" y="68" width="439" height="15" fill="rgb(210,204,37)"/><text x="188.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solver..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (143 samples, 37.24%)</title><rect x="185" y="84" width="439" height="15" fill="rgb(206,130,15)"/><text x="188.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solve..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.78%)</title><rect x="615" y="100" width="9" height="15" fill="rgb(227,109,20)"/><text x="618.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.78%)</title><rect x="615" y="116" width="9" height="15" fill="rgb(243,169,54)"/><text x="618.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.78%)</title><rect x="615" y="132" width="9" height="15" fill="rgb(251,150,50)"/><text x="618.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.78%)</title><rect x="615" y="148" width="9" height="15" fill="rgb(250,214,38)"/><text x="618.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.78%)</title><rect x="615" y="164" width="9" height="15" fill="rgb(239,96,0)"/><text x="618.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.78%)</title><rect x="615" y="180" width="9" height="15" fill="rgb(232,167,15)"/><text x="618.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (3 samples, 0.78%)</title><rect x="615" y="196" width="9" height="15" fill="rgb(245,130,7)"/><text x="618.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="212" width="9" height="15" fill="rgb(218,16,7)"/><text x="618.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="228" width="9" height="15" fill="rgb(225,102,25)"/><text x="618.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="244" width="9" height="15" fill="rgb(245,223,38)"/><text x="618.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.78%)</title><rect x="615" y="260" width="9" height="15" fill="rgb(238,3,41)"/><text x="618.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="276" width="9" height="15" fill="rgb(233,201,53)"/><text x="618.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (3 samples, 0.78%)</title><rect x="615" y="292" width="9" height="15" fill="rgb(214,64,8)"/><text x="618.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="308" width="9" height="15" fill="rgb(225,10,30)"/><text x="618.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="324" width="9" height="15" fill="rgb(214,75,48)"/><text x="618.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="340" width="9" height="15" fill="rgb(228,88,41)"/><text x="618.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.78%)</title><rect x="615" y="356" width="9" height="15" fill="rgb(237,29,1)"/><text x="618.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.78%)</title><rect x="615" y="372" width="9" height="15" fill="rgb(231,10,30)"/><text x="618.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (3 samples, 0.78%)</title><rect x="615" y="388" width="9" height="15" fill="rgb(227,25,42)"/><text x="618.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="621" y="404" width="3" height="15" fill="rgb(230,32,28)"/><text x="624.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.26%)</title><rect x="621" y="420" width="3" height="15" fill="rgb(213,188,47)"/><text x="624.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="621" y="436" width="3" height="15" fill="rgb(226,100,40)"/><text x="624.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="621" y="452" width="3" height="15" fill="rgb(219,144,24)"/><text x="624.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.26%)</title><rect x="621" y="468" width="3" height="15" fill="rgb(217,23,53)"/><text x="624.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="621" y="484" width="3" height="15" fill="rgb(236,18,27)"/><text x="624.00" y="494.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="621" y="500" width="3" height="15" fill="rgb(235,112,4)"/><text x="624.00" y="510.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="621" y="516" width="3" height="15" fill="rgb(206,137,10)"/><text x="624.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="621" y="532" width="3" height="15" fill="rgb(213,226,20)"/><text x="624.00" y="542.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="621" y="548" width="3" height="15" fill="rgb(235,26,25)"/><text x="624.00" y="558.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.26%)</title><rect x="661" y="180" width="3" height="15" fill="rgb(248,199,47)"/><text x="664.00" y="190.50"></text></g><g><title>array_inplace_true_divide (number.c) (1 samples, 0.26%)</title><rect x="664" y="180" width="3" height="15" fill="rgb(240,5,54)"/><text x="667.00" y="190.50"></text></g><g><title>0x7ff2704ee140 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="667" y="196" width="3" height="15" fill="rgb(219,117,38)"/><text x="670.00" y="206.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 1.04%)</title><rect x="667" y="180" width="12" height="15" fill="rgb(253,6,31)"/><text x="670.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (3 samples, 0.78%)</title><rect x="670" y="196" width="9" height="15" fill="rgb(252,20,15)"/><text x="673.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.26%)</title><rect x="676" y="212" width="3" height="15" fill="rgb(218,212,1)"/><text x="679.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.04%)</title><rect x="682" y="244" width="13" height="15" fill="rgb(251,50,21)"/><text x="685.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.04%)</title><rect x="682" y="260" width="13" height="15" fill="rgb(207,29,22)"/><text x="685.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.04%)</title><rect x="682" y="276" width="13" height="15" fill="rgb(229,65,44)"/><text x="685.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.04%)</title><rect x="682" y="292" width="13" height="15" fill="rgb(233,28,3)"/><text x="685.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.04%)</title><rect x="682" y="308" width="13" height="15" fill="rgb(245,21,45)"/><text x="685.00" y="318.50"></text></g><g><title>0x7ff2712e2e82 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="692" y="324" width="3" height="15" fill="rgb(242,46,15)"/><text x="695.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="701" y="308" width="3" height="15" fill="rgb(208,202,23)"/><text x="704.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.52%)</title><rect x="701" y="292" width="6" height="15" fill="rgb(214,175,52)"/><text x="704.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="704" y="308" width="3" height="15" fill="rgb(239,146,47)"/><text x="707.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="707" y="292" width="3" height="15" fill="rgb(207,103,38)"/><text x="710.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="707" y="308" width="3" height="15" fill="rgb(237,204,18)"/><text x="710.00" y="318.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.26%)</title><rect x="710" y="340" width="3" height="15" fill="rgb(225,78,51)"/><text x="713.00" y="350.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.26%)</title><rect x="710" y="356" width="3" height="15" fill="rgb(243,12,18)"/><text x="713.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.82%)</title><rect x="695" y="276" width="21" height="15" fill="rgb(206,86,46)"/><text x="698.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.52%)</title><rect x="710" y="292" width="6" height="15" fill="rgb(221,5,9)"/><text x="713.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.52%)</title><rect x="710" y="308" width="6" height="15" fill="rgb(221,121,28)"/><text x="713.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.52%)</title><rect x="710" y="324" width="6" height="15" fill="rgb(217,158,20)"/><text x="713.00" y="334.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.26%)</title><rect x="713" y="340" width="3" height="15" fill="rgb(253,15,49)"/><text x="716.00" y="350.50"></text></g><g><title>array_sum (methods.c) (14 samples, 3.65%)</title><rect x="679" y="180" width="43" height="15" fill="rgb(237,70,3)"/><text x="682.00" y="190.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 3.65%)</title><rect x="679" y="196" width="43" height="15" fill="rgb(214,134,44)"/><text x="682.00" y="206.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 3.65%)</title><rect x="679" y="212" width="43" height="15" fill="rgb(213,47,45)"/><text x="682.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 3.39%)</title><rect x="682" y="228" width="40" height="15" fill="rgb(209,208,42)"/><text x="685.00" y="238.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 2.34%)</title><rect x="695" y="244" width="27" height="15" fill="rgb(231,106,24)"/><text x="698.00" y="254.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 2.34%)</title><rect x="695" y="260" width="27" height="15" fill="rgb(221,163,33)"/><text x="698.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.52%)</title><rect x="716" y="276" width="6" height="15" fill="rgb(214,124,20)"/><text x="719.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.52%)</title><rect x="741" y="196" width="6" height="15" fill="rgb(208,125,41)"/><text x="744.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.52%)</title><rect x="741" y="212" width="6" height="15" fill="rgb(229,93,4)"/><text x="744.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="744" y="228" width="3" height="15" fill="rgb(221,204,47)"/><text x="747.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.26%)</title><rect x="744" y="244" width="3" height="15" fill="rgb(205,35,25)"/><text x="747.00" y="254.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="747" y="244" width="3" height="15" fill="rgb(242,116,13)"/><text x="750.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="750" y="244" width="3" height="15" fill="rgb(223,32,22)"/><text x="753.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.26%)</title><rect x="753" y="276" width="3" height="15" fill="rgb(224,189,7)"/><text x="756.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.26%)</title><rect x="756" y="292" width="3" height="15" fill="rgb(218,21,23)"/><text x="759.00" y="302.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.26%)</title><rect x="756" y="308" width="3" height="15" fill="rgb(216,142,6)"/><text x="759.00" y="318.50"></text></g><g><title>array_add (number.c) (5 samples, 1.30%)</title><rect x="747" y="196" width="15" height="15" fill="rgb(252,11,2)"/><text x="750.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.30%)</title><rect x="747" y="212" width="15" height="15" fill="rgb(227,175,19)"/><text x="750.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.30%)</title><rect x="747" y="228" width="15" height="15" fill="rgb(224,37,42)"/><text x="750.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.78%)</title><rect x="753" y="244" width="9" height="15" fill="rgb(219,161,37)"/><text x="756.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.78%)</title><rect x="753" y="260" width="9" height="15" fill="rgb(220,158,15)"/><text x="756.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.52%)</title><rect x="756" y="276" width="6" height="15" fill="rgb(206,88,21)"/><text x="759.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.26%)</title><rect x="759" y="292" width="3" height="15" fill="rgb(210,227,39)"/><text x="762.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.52%)</title><rect x="762" y="196" width="7" height="15" fill="rgb(208,50,0)"/><text x="765.00" y="206.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (2 samples, 0.52%)</title><rect x="762" y="212" width="7" height="15" fill="rgb(223,141,11)"/><text x="765.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.52%)</title><rect x="762" y="228" width="7" height="15" fill="rgb(253,224,50)"/><text x="765.00" y="238.50"></text></g><g><title>0x7ff2713aa151 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="821" y="212" width="3" height="15" fill="rgb(227,170,12)"/><text x="824.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.78%)</title><rect x="824" y="212" width="9" height="15" fill="rgb(221,89,12)"/><text x="827.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.78%)</title><rect x="833" y="212" width="9" height="15" fill="rgb(230,89,41)"/><text x="836.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="851" y="228" width="4" height="15" fill="rgb(222,183,37)"/><text x="854.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (3 samples, 0.78%)</title><rect x="855" y="228" width="9" height="15" fill="rgb(228,3,38)"/><text x="858.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.34%)</title><rect x="842" y="212" width="28" height="15" fill="rgb(248,174,26)"/><text x="845.00" y="222.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.52%)</title><rect x="864" y="228" width="6" height="15" fill="rgb(253,131,42)"/><text x="867.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="870" y="212" width="3" height="15" fill="rgb(212,49,18)"/><text x="873.00" y="222.50"></text></g><g><title>0x7ff2713aa130 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="870" y="228" width="3" height="15" fill="rgb(253,180,9)"/><text x="873.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.82%)</title><rect x="873" y="212" width="22" height="15" fill="rgb(254,150,19)"/><text x="876.00" y="222.50">_..</text></g><g><title>issubdtype (numpy/core/numerictypes.py) (6 samples, 1.56%)</title><rect x="895" y="212" width="18" height="15" fill="rgb(228,73,44)"/><text x="898.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 0.78%)</title><rect x="904" y="228" width="9" height="15" fill="rgb(220,187,25)"/><text x="907.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (56 samples, 14.58%)</title><rect x="769" y="196" width="172" height="15" fill="rgb(223,143,21)"/><text x="772.00" y="206.50">check_array (sklearn/u..</text></g><g><title>simplefilter (warnings.py) (9 samples, 2.34%)</title><rect x="913" y="212" width="28" height="15" fill="rgb(230,41,21)"/><text x="916.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py) (8 samples, 2.08%)</title><rect x="916" y="228" width="25" height="15" fill="rgb(223,169,42)"/><text x="919.00" y="238.50">_..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.78%)</title><rect x="971" y="228" width="10" height="15" fill="rgb(241,228,29)"/><text x="974.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 3.91%)</title><rect x="941" y="212" width="46" height="15" fill="rgb(249,41,9)"/><text x="944.00" y="222.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.52%)</title><rect x="981" y="228" width="6" height="15" fill="rgb(223,75,8)"/><text x="984.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 4.17%)</title><rect x="941" y="196" width="49" height="15" fill="rgb(207,133,6)"/><text x="944.00" y="206.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.26%)</title><rect x="987" y="212" width="3" height="15" fill="rgb(219,103,29)"/><text x="990.00" y="222.50"></text></g><g><title>0x7fffffffffffffff (?) (1 samples, 0.26%)</title><rect x="1017" y="212" width="3" height="15" fill="rgb(231,119,45)"/><text x="1020.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.26%)</title><rect x="1017" y="228" width="3" height="15" fill="rgb(215,132,3)"/><text x="1020.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.26%)</title><rect x="1017" y="244" width="3" height="15" fill="rgb(223,71,13)"/><text x="1020.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="1017" y="260" width="3" height="15" fill="rgb(206,149,26)"/><text x="1020.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.26%)</title><rect x="1020" y="212" width="4" height="15" fill="rgb(218,174,28)"/><text x="1023.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.26%)</title><rect x="1033" y="260" width="3" height="15" fill="rgb(229,148,23)"/><text x="1036.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="1039" y="308" width="3" height="15" fill="rgb(218,1,40)"/><text x="1042.00" y="318.50"></text></g><g><title>0x7ff2712848b8 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1042" y="356" width="3" height="15" fill="rgb(214,8,51)"/><text x="1045.00" y="366.50"></text></g><g><title>0x7ff2712ecd50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1045" y="356" width="3" height="15" fill="rgb(237,146,52)"/><text x="1048.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (3 samples, 0.78%)</title><rect x="1042" y="324" width="9" height="15" fill="rgb(217,34,32)"/><text x="1045.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (3 samples, 0.78%)</title><rect x="1042" y="340" width="9" height="15" fill="rgb(224,225,52)"/><text x="1045.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="356" width="3" height="15" fill="rgb(244,158,34)"/><text x="1051.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.52%)</title><rect x="1051" y="324" width="6" height="15" fill="rgb(224,82,19)"/><text x="1054.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="1057" y="324" width="3" height="15" fill="rgb(205,214,27)"/><text x="1060.00" y="334.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.26%)</title><rect x="1060" y="324" width="4" height="15" fill="rgb(241,220,25)"/><text x="1063.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (11 samples, 2.86%)</title><rect x="1039" y="276" width="34" height="15" fill="rgb(225,144,45)"/><text x="1042.00" y="286.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (11 samples, 2.86%)</title><rect x="1039" y="292" width="34" height="15" fill="rgb(214,177,22)"/><text x="1042.00" y="302.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (10 samples, 2.60%)</title><rect x="1042" y="308" width="31" height="15" fill="rgb(244,126,47)"/><text x="1045.00" y="318.50">ra..</text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (3 samples, 0.78%)</title><rect x="1064" y="324" width="9" height="15" fill="rgb(252,197,35)"/><text x="1067.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (2 samples, 0.52%)</title><rect x="1067" y="340" width="6" height="15" fill="rgb(214,152,51)"/><text x="1070.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (13 samples, 3.39%)</title><rect x="1036" y="260" width="40" height="15" fill="rgb(233,161,37)"/><text x="1039.00" y="270.50">Npy..</text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1073" y="276" width="3" height="15" fill="rgb(226,102,4)"/><text x="1076.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.26%)</title><rect x="1076" y="260" width="3" height="15" fill="rgb(231,107,16)"/><text x="1079.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.26%)</title><rect x="1076" y="276" width="3" height="15" fill="rgb(253,136,13)"/><text x="1079.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="1076" y="292" width="3" height="15" fill="rgb(253,130,40)"/><text x="1079.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="1076" y="308" width="3" height="15" fill="rgb(239,4,4)"/><text x="1079.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1079" y="260" width="6" height="15" fill="rgb(212,160,34)"/><text x="1082.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (119 samples, 30.99%)</title><rect x="722" y="180" width="366" height="15" fill="rgb(229,60,49)"/><text x="725.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (32 samples, 8.33%)</title><rect x="990" y="196" width="98" height="15" fill="rgb(205,214,49)"/><text x="993.00" y="206.50">safe_sparse..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 5.47%)</title><rect x="1024" y="212" width="64" height="15" fill="rgb(239,228,53)"/><text x="1027.00" y="222.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (21 samples, 5.47%)</title><rect x="1024" y="228" width="64" height="15" fill="rgb(240,143,10)"/><text x="1027.00" y="238.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (20 samples, 5.21%)</title><rect x="1027" y="244" width="61" height="15" fill="rgb(241,44,51)"/><text x="1030.00" y="254.50">PyUFun..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="1085" y="260" width="3" height="15" fill="rgb(217,125,15)"/><text x="1088.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="1085" y="276" width="3" height="15" fill="rgb(245,218,28)"/><text x="1088.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.26%)</title><rect x="1085" y="292" width="3" height="15" fill="rgb(234,182,49)"/><text x="1088.00" y="302.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1091" y="212" width="3" height="15" fill="rgb(224,162,12)"/><text x="1094.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1094" y="212" width="3" height="15" fill="rgb(237,163,47)"/><text x="1097.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1094" y="228" width="3" height="15" fill="rgb(222,219,2)"/><text x="1097.00" y="238.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="1097" y="228" width="3" height="15" fill="rgb(252,224,34)"/><text x="1100.00" y="238.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.26%)</title><rect x="1100" y="260" width="3" height="15" fill="rgb(251,168,48)"/><text x="1103.00" y="270.50"></text></g><g><title>0x7ff2704ee2d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1103" y="276" width="4" height="15" fill="rgb(249,153,43)"/><text x="1106.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.78%)</title><rect x="1100" y="228" width="10" height="15" fill="rgb(237,50,30)"/><text x="1103.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.78%)</title><rect x="1100" y="244" width="10" height="15" fill="rgb(247,215,16)"/><text x="1103.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.52%)</title><rect x="1103" y="260" width="7" height="15" fill="rgb(234,36,39)"/><text x="1106.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1107" y="276" width="3" height="15" fill="rgb(244,2,40)"/><text x="1110.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.26%)</title><rect x="1110" y="244" width="3" height="15" fill="rgb(229,194,51)"/><text x="1113.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.26%)</title><rect x="1110" y="260" width="3" height="15" fill="rgb(208,88,9)"/><text x="1113.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.56%)</title><rect x="1097" y="212" width="19" height="15" fill="rgb(227,101,40)"/><text x="1100.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.52%)</title><rect x="1110" y="228" width="6" height="15" fill="rgb(219,112,39)"/><text x="1113.00" y="238.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.26%)</title><rect x="1113" y="244" width="3" height="15" fill="rgb(207,35,42)"/><text x="1116.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.52%)</title><rect x="1116" y="212" width="6" height="15" fill="rgb(251,56,12)"/><text x="1119.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.26%)</title><rect x="1119" y="228" width="3" height="15" fill="rgb(216,165,25)"/><text x="1122.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1122" y="212" width="3" height="15" fill="rgb(220,15,16)"/><text x="1125.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 3.39%)</title><rect x="1088" y="196" width="40" height="15" fill="rgb(243,227,3)"/><text x="1091.00" y="206.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.26%)</title><rect x="1125" y="212" width="3" height="15" fill="rgb(237,65,39)"/><text x="1128.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (156 samples, 40.62%)</title><rect x="652" y="164" width="479" height="15" fill="rgb(221,72,11)"/><text x="655.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 3.65%)</title><rect x="1088" y="180" width="43" height="15" fill="rgb(245,0,21)"/><text x="1091.00" y="190.50">ufun..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1128" y="196" width="3" height="15" fill="rgb(231,81,15)"/><text x="1131.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 2.86%)</title><rect x="1143" y="180" width="34" height="15" fill="rgb(217,212,39)"/><text x="1146.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.52%)</title><rect x="1171" y="196" width="6" height="15" fill="rgb(211,156,42)"/><text x="1174.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (178 samples, 46.35%)</title><rect x="636" y="132" width="547" height="15" fill="rgb(220,26,17)"/><text x="639.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (176 samples, 45.83%)</title><rect x="643" y="148" width="540" height="15" fill="rgb(219,172,50)"/><text x="646.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 4.43%)</title><rect x="1131" y="164" width="52" height="15" fill="rgb(222,49,50)"/><text x="1134.00" y="174.50">check..</text></g><g><title>isclass (inspect.py) (2 samples, 0.52%)</title><rect x="1177" y="180" width="6" height="15" fill="rgb(234,224,37)"/><text x="1180.00" y="190.50"></text></g><g><title>all (384 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,29,26)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (384 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(229,2,5)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (184 samples, 47.92%)</title><rect x="624" y="68" width="566" height="15" fill="rgb(242,49,27)"/><text x="627.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (184 samples, 47.92%)</title><rect x="624" y="84" width="566" height="15" fill="rgb(243,24,37)"/><text x="627.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_1..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_float_.py) (184 samples, 47.92%)</title><rect x="624" y="100" width="566" height="15" fill="rgb(212,214,45)"/><text x="627.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1_50_12_floa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (182 samples, 47.40%)</title><rect x="630" y="116" width="560" height="15" fill="rgb(208,116,52)"/><text x="633.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.52%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(247,36,29)"/><text x="1186.00" y="142.50"></text></g></g></svg>