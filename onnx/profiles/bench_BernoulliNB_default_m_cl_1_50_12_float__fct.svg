<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(251,76,6)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(242,121,13)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(248,34,38)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(212,93,25)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(214,4,9)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(225,151,44)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(230,127,45)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(208,135,54)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(213,144,3)"/><text x="15.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(207,183,4)"/><text x="15.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(237,7,49)"/><text x="15.00" y="1038.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(206,4,0)"/><text x="18.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(221,123,48)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(247,189,30)"/><text x="18.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.48%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(241,176,27)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(212,49,5)"/><text x="21.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(230,186,39)"/><text x="21.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(213,125,15)"/><text x="21.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(227,149,29)"/><text x="21.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(220,163,13)"/><text x="21.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.20%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(234,11,13)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.20%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(245,143,3)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.72%)</title><rect x="15" y="868" width="9" height="15" fill="rgb(207,173,27)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.72%)</title><rect x="15" y="884" width="9" height="15" fill="rgb(225,118,13)"/><text x="18.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(217,133,50)"/><text x="24.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(210,21,20)"/><text x="24.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(222,137,19)"/><text x="24.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.24%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(219,102,16)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.24%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(241,38,53)"/><text x="24.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.44%)</title><rect x="10" y="292" width="17" height="15" fill="rgb(210,121,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="308" width="17" height="15" fill="rgb(236,70,38)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="324" width="17" height="15" fill="rgb(232,174,36)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="340" width="17" height="15" fill="rgb(213,133,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="10" y="356" width="17" height="15" fill="rgb(245,101,8)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="372" width="17" height="15" fill="rgb(218,179,45)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.44%)</title><rect x="10" y="388" width="17" height="15" fill="rgb(242,33,45)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="404" width="17" height="15" fill="rgb(220,9,25)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="420" width="17" height="15" fill="rgb(215,29,22)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="436" width="17" height="15" fill="rgb(229,159,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="10" y="452" width="17" height="15" fill="rgb(242,45,37)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="468" width="17" height="15" fill="rgb(233,211,48)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.44%)</title><rect x="10" y="484" width="17" height="15" fill="rgb(210,166,53)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="500" width="17" height="15" fill="rgb(223,179,24)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="516" width="17" height="15" fill="rgb(246,163,42)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="532" width="17" height="15" fill="rgb(215,204,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="10" y="548" width="17" height="15" fill="rgb(211,41,0)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="564" width="17" height="15" fill="rgb(238,213,18)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.44%)</title><rect x="10" y="580" width="17" height="15" fill="rgb(251,74,35)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="596" width="17" height="15" fill="rgb(222,106,42)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="612" width="17" height="15" fill="rgb(205,203,8)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="628" width="17" height="15" fill="rgb(226,10,13)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="644" width="17" height="15" fill="rgb(232,86,45)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="660" width="17" height="15" fill="rgb(245,155,30)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="676" width="17" height="15" fill="rgb(250,108,23)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="10" y="692" width="17" height="15" fill="rgb(219,94,32)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="708" width="17" height="15" fill="rgb(210,69,21)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.44%)</title><rect x="10" y="724" width="17" height="15" fill="rgb(247,194,47)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="740" width="17" height="15" fill="rgb(253,180,36)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="756" width="17" height="15" fill="rgb(229,73,5)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="772" width="17" height="15" fill="rgb(211,29,48)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="10" y="788" width="17" height="15" fill="rgb(254,149,24)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="10" y="804" width="17" height="15" fill="rgb(222,180,23)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.44%)</title><rect x="10" y="820" width="17" height="15" fill="rgb(243,65,48)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(244,27,16)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(210,153,24)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(218,74,9)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(205,222,30)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(213,15,9)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.24%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(222,132,38)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(206,93,40)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(222,114,29)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(233,164,20)"/><text x="27.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(245,113,51)"/><text x="27.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.24%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(224,195,1)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(207,103,34)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(242,38,19)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(235,164,32)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(232,57,54)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(233,186,8)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(208,141,7)"/><text x="27.00" y="1102.50"></text></g><g><title>makeHTMLTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(252,46,4)"/><text x="27.00" y="1118.50"></text></g><g><title>_makeTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1124" width="3" height="15" fill="rgb(231,190,5)"/><text x="27.00" y="1134.50"></text></g><g><title>setResultsName (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1140" width="3" height="15" fill="rgb(253,28,21)"/><text x="27.00" y="1150.50"></text></g><g><title>setResultsName (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1156" width="3" height="15" fill="rgb(214,16,36)"/><text x="27.00" y="1166.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1172" width="3" height="15" fill="rgb(225,25,22)"/><text x="27.00" y="1182.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1188" width="3" height="15" fill="rgb(223,85,50)"/><text x="27.00" y="1198.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(251,73,18)"/><text x="27.00" y="1214.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(232,142,10)"/><text x="27.00" y="1230.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(248,202,54)"/><text x="27.00" y="1246.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(232,127,39)"/><text x="27.00" y="1262.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(221,194,24)"/><text x="27.00" y="1278.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(211,102,41)"/><text x="27.00" y="1294.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.24%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(223,14,2)"/><text x="27.00" y="1310.50"></text></g><g><title>copy (copy.py) (1 samples, 0.24%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(241,134,1)"/><text x="27.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.68%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(212,1,6)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.68%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(223,208,49)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.68%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(211,224,19)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.68%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(218,10,26)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.68%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(252,98,20)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.68%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(212,56,29)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.24%)</title><rect x="27" y="292" width="2" height="15" fill="rgb(249,214,4)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="308" width="2" height="15" fill="rgb(235,63,28)"/><text x="30.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="324" width="2" height="15" fill="rgb(251,201,35)"/><text x="30.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="340" width="2" height="15" fill="rgb(250,20,27)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="356" width="2" height="15" fill="rgb(229,142,45)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="372" width="2" height="15" fill="rgb(225,178,44)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.24%)</title><rect x="27" y="388" width="2" height="15" fill="rgb(240,178,9)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="404" width="2" height="15" fill="rgb(248,118,8)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="420" width="2" height="15" fill="rgb(246,43,9)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="436" width="2" height="15" fill="rgb(249,16,47)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="452" width="2" height="15" fill="rgb(210,214,2)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(228,228,24)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.24%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(216,120,20)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(226,97,31)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(223,206,41)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(225,176,33)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(249,207,25)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(223,173,6)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.24%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(228,86,6)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(222,196,13)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(206,179,40)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(231,155,0)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(246,168,2)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="660" width="2" height="15" fill="rgb(250,163,11)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.24%)</title><rect x="27" y="676" width="2" height="15" fill="rgb(249,179,9)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="692" width="2" height="15" fill="rgb(245,211,28)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="708" width="2" height="15" fill="rgb(223,94,40)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="724" width="2" height="15" fill="rgb(213,211,4)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="740" width="2" height="15" fill="rgb(238,40,41)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="756" width="2" height="15" fill="rgb(228,221,39)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.24%)</title><rect x="27" y="772" width="2" height="15" fill="rgb(219,110,27)"/><text x="30.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="788" width="2" height="15" fill="rgb(233,88,17)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="804" width="2" height="15" fill="rgb(237,64,54)"/><text x="30.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="820" width="2" height="15" fill="rgb(220,178,20)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="836" width="2" height="15" fill="rgb(207,33,24)"/><text x="30.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="852" width="2" height="15" fill="rgb(240,102,17)"/><text x="30.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="868" width="2" height="15" fill="rgb(209,150,14)"/><text x="30.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="884" width="2" height="15" fill="rgb(215,199,43)"/><text x="30.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.24%)</title><rect x="27" y="900" width="2" height="15" fill="rgb(234,77,53)"/><text x="30.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="916" width="2" height="15" fill="rgb(219,142,7)"/><text x="30.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="932" width="2" height="15" fill="rgb(207,16,20)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="948" width="2" height="15" fill="rgb(218,140,45)"/><text x="30.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="964" width="2" height="15" fill="rgb(212,33,16)"/><text x="30.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="980" width="2" height="15" fill="rgb(230,74,35)"/><text x="30.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="27" y="996" width="2" height="15" fill="rgb(206,68,41)"/><text x="30.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="27" y="1012" width="2" height="15" fill="rgb(217,34,40)"/><text x="30.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.24%)</title><rect x="27" y="1028" width="2" height="15" fill="rgb(228,32,9)"/><text x="30.00" y="1038.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.24%)</title><rect x="29" y="1300" width="3" height="15" fill="rgb(211,63,13)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1316" width="3" height="15" fill="rgb(206,91,16)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1332" width="3" height="15" fill="rgb(223,64,48)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1348" width="3" height="15" fill="rgb(250,183,30)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(205,9,17)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(225,140,37)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.24%)</title><rect x="29" y="1396" width="3" height="15" fill="rgb(222,197,41)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1412" width="3" height="15" fill="rgb(223,52,39)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1428" width="3" height="15" fill="rgb(244,115,2)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1444" width="3" height="15" fill="rgb(244,66,35)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="29" y="1460" width="3" height="15" fill="rgb(243,229,32)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="29" y="1476" width="3" height="15" fill="rgb(245,99,8)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.24%)</title><rect x="29" y="1492" width="3" height="15" fill="rgb(222,221,36)"/><text x="32.00" y="1502.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.24%)</title><rect x="29" y="1508" width="3" height="15" fill="rgb(248,172,27)"/><text x="32.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.48%)</title><rect x="29" y="1204" width="6" height="15" fill="rgb(215,165,0)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="29" y="1220" width="6" height="15" fill="rgb(218,229,53)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="29" y="1236" width="6" height="15" fill="rgb(229,180,29)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="29" y="1252" width="6" height="15" fill="rgb(214,112,44)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="29" y="1268" width="6" height="15" fill="rgb(215,109,43)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="29" y="1284" width="6" height="15" fill="rgb(208,105,40)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.24%)</title><rect x="32" y="1300" width="3" height="15" fill="rgb(246,162,19)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1316" width="3" height="15" fill="rgb(218,214,3)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1332" width="3" height="15" fill="rgb(229,46,17)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1348" width="3" height="15" fill="rgb(221,30,28)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1364" width="3" height="15" fill="rgb(229,176,17)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1380" width="3" height="15" fill="rgb(231,6,29)"/><text x="35.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.24%)</title><rect x="32" y="1396" width="3" height="15" fill="rgb(223,62,40)"/><text x="35.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1412" width="3" height="15" fill="rgb(218,2,1)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1428" width="3" height="15" fill="rgb(205,110,35)"/><text x="35.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1444" width="3" height="15" fill="rgb(224,38,5)"/><text x="35.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1460" width="3" height="15" fill="rgb(247,209,10)"/><text x="35.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1476" width="3" height="15" fill="rgb(218,175,34)"/><text x="35.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.24%)</title><rect x="32" y="1492" width="3" height="15" fill="rgb(248,10,14)"/><text x="35.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1508" width="3" height="15" fill="rgb(240,196,30)"/><text x="35.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1524" width="3" height="15" fill="rgb(247,68,31)"/><text x="35.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1540" width="3" height="15" fill="rgb(253,149,46)"/><text x="35.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1556" width="3" height="15" fill="rgb(218,189,23)"/><text x="35.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1572" width="3" height="15" fill="rgb(232,119,31)"/><text x="35.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.24%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(218,8,7)"/><text x="35.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1604" width="3" height="15" fill="rgb(239,153,36)"/><text x="35.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1620" width="3" height="15" fill="rgb(241,182,23)"/><text x="35.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1636" width="3" height="15" fill="rgb(226,133,35)"/><text x="35.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1652" width="3" height="15" fill="rgb(209,173,47)"/><text x="35.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1668" width="3" height="15" fill="rgb(230,51,1)"/><text x="35.00" y="1678.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.24%)</title><rect x="32" y="1684" width="3" height="15" fill="rgb(234,7,11)"/><text x="35.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1700" width="3" height="15" fill="rgb(250,206,53)"/><text x="35.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1716" width="3" height="15" fill="rgb(229,86,11)"/><text x="35.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="32" y="1732" width="3" height="15" fill="rgb(233,225,54)"/><text x="35.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1748" width="3" height="15" fill="rgb(236,135,1)"/><text x="35.00" y="1758.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1764" width="3" height="15" fill="rgb(213,102,30)"/><text x="35.00" y="1774.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1780" width="3" height="15" fill="rgb(207,191,29)"/><text x="35.00" y="1790.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="32" y="1796" width="3" height="15" fill="rgb(215,58,47)"/><text x="35.00" y="1806.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.24%)</title><rect x="32" y="1812" width="3" height="15" fill="rgb(217,94,41)"/><text x="35.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="35" y="1220" width="3" height="15" fill="rgb(205,155,6)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="35" y="1236" width="3" height="15" fill="rgb(212,106,32)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="35" y="1252" width="3" height="15" fill="rgb(230,83,18)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="35" y="1268" width="3" height="15" fill="rgb(249,1,21)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="35" y="1284" width="3" height="15" fill="rgb(206,208,0)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.24%)</title><rect x="35" y="1300" width="3" height="15" fill="rgb(242,22,5)"/><text x="38.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.24%)</title><rect x="35" y="1316" width="3" height="15" fill="rgb(213,68,0)"/><text x="38.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.24%)</title><rect x="35" y="1332" width="3" height="15" fill="rgb(210,36,53)"/><text x="38.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.24%)</title><rect x="35" y="1348" width="3" height="15" fill="rgb(234,212,51)"/><text x="38.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.24%)</title><rect x="35" y="1364" width="3" height="15" fill="rgb(209,96,4)"/><text x="38.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.24%)</title><rect x="35" y="1380" width="3" height="15" fill="rgb(206,18,22)"/><text x="38.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.24%)</title><rect x="35" y="1396" width="3" height="15" fill="rgb(216,92,12)"/><text x="38.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.24%)</title><rect x="35" y="1412" width="3" height="15" fill="rgb(251,146,54)"/><text x="38.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.24%)</title><rect x="35" y="1428" width="3" height="15" fill="rgb(245,35,53)"/><text x="38.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="35" y="1444" width="3" height="15" fill="rgb(243,179,47)"/><text x="38.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1460" width="3" height="15" fill="rgb(234,102,14)"/><text x="38.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1476" width="3" height="15" fill="rgb(248,113,39)"/><text x="38.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1492" width="3" height="15" fill="rgb(249,199,11)"/><text x="38.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1508" width="3" height="15" fill="rgb(253,208,4)"/><text x="38.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1524" width="3" height="15" fill="rgb(232,73,3)"/><text x="38.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1540" width="3" height="15" fill="rgb(228,201,0)"/><text x="38.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1556" width="3" height="15" fill="rgb(254,168,29)"/><text x="38.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1572" width="3" height="15" fill="rgb(207,192,51)"/><text x="38.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1588" width="3" height="15" fill="rgb(210,131,34)"/><text x="38.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1604" width="3" height="15" fill="rgb(246,98,5)"/><text x="38.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1620" width="3" height="15" fill="rgb(234,167,49)"/><text x="38.00" y="1630.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1636" width="3" height="15" fill="rgb(236,1,10)"/><text x="38.00" y="1646.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="35" y="1652" width="3" height="15" fill="rgb(211,67,51)"/><text x="38.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.96%)</title><rect x="29" y="1124" width="12" height="15" fill="rgb(242,102,5)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.96%)</title><rect x="29" y="1140" width="12" height="15" fill="rgb(250,66,48)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.96%)</title><rect x="29" y="1156" width="12" height="15" fill="rgb(214,56,8)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.96%)</title><rect x="29" y="1172" width="12" height="15" fill="rgb(238,8,12)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.96%)</title><rect x="29" y="1188" width="12" height="15" fill="rgb(216,218,13)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.48%)</title><rect x="35" y="1204" width="6" height="15" fill="rgb(253,98,29)"/><text x="38.00" y="1214.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="38" y="1220" width="3" height="15" fill="rgb(225,221,1)"/><text x="41.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="38" y="1236" width="3" height="15" fill="rgb(209,174,44)"/><text x="41.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="38" y="1252" width="3" height="15" fill="rgb(230,140,38)"/><text x="41.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.20%)</title><rect x="29" y="868" width="15" height="15" fill="rgb(207,186,50)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="884" width="15" height="15" fill="rgb(246,18,3)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="900" width="15" height="15" fill="rgb(240,190,4)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="916" width="15" height="15" fill="rgb(244,188,48)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="932" width="15" height="15" fill="rgb(238,145,13)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="948" width="15" height="15" fill="rgb(231,157,6)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="964" width="15" height="15" fill="rgb(205,76,9)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.20%)</title><rect x="29" y="980" width="15" height="15" fill="rgb(216,98,32)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="996" width="15" height="15" fill="rgb(224,141,7)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.20%)</title><rect x="29" y="1012" width="15" height="15" fill="rgb(241,186,26)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="1028" width="15" height="15" fill="rgb(209,181,10)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="1044" width="15" height="15" fill="rgb(238,64,32)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="1060" width="15" height="15" fill="rgb(206,107,11)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.20%)</title><rect x="29" y="1076" width="15" height="15" fill="rgb(219,128,14)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.20%)</title><rect x="29" y="1092" width="15" height="15" fill="rgb(253,100,28)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.20%)</title><rect x="29" y="1108" width="15" height="15" fill="rgb(221,46,44)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(242,175,32)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(247,38,28)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(219,167,32)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1172" width="3" height="15" fill="rgb(232,172,5)"/><text x="44.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1188" width="3" height="15" fill="rgb(205,137,42)"/><text x="44.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="41" y="1204" width="3" height="15" fill="rgb(239,194,26)"/><text x="44.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1220" width="3" height="15" fill="rgb(234,98,41)"/><text x="44.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.24%)</title><rect x="41" y="1236" width="3" height="15" fill="rgb(216,10,41)"/><text x="44.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1252" width="3" height="15" fill="rgb(209,221,45)"/><text x="44.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1268" width="3" height="15" fill="rgb(245,28,37)"/><text x="44.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1284" width="3" height="15" fill="rgb(225,109,47)"/><text x="44.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1300" width="3" height="15" fill="rgb(249,13,43)"/><text x="44.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1316" width="3" height="15" fill="rgb(233,219,28)"/><text x="44.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="41" y="1332" width="3" height="15" fill="rgb(206,225,33)"/><text x="44.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1348" width="3" height="15" fill="rgb(248,15,11)"/><text x="44.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.24%)</title><rect x="41" y="1364" width="3" height="15" fill="rgb(208,195,40)"/><text x="44.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1380" width="3" height="15" fill="rgb(217,139,33)"/><text x="44.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1396" width="3" height="15" fill="rgb(218,214,31)"/><text x="44.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1412" width="3" height="15" fill="rgb(250,50,18)"/><text x="44.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="41" y="1428" width="3" height="15" fill="rgb(209,139,44)"/><text x="44.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="41" y="1444" width="3" height="15" fill="rgb(235,111,18)"/><text x="44.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.24%)</title><rect x="41" y="1460" width="3" height="15" fill="rgb(252,158,2)"/><text x="44.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.24%)</title><rect x="41" y="1476" width="3" height="15" fill="rgb(237,159,29)"/><text x="44.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.24%)</title><rect x="41" y="1492" width="3" height="15" fill="rgb(221,74,1)"/><text x="44.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.24%)</title><rect x="41" y="1508" width="3" height="15" fill="rgb(242,79,37)"/><text x="44.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.24%)</title><rect x="41" y="1524" width="3" height="15" fill="rgb(215,199,3)"/><text x="44.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.24%)</title><rect x="41" y="1540" width="3" height="15" fill="rgb(223,67,0)"/><text x="44.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.24%)</title><rect x="41" y="1556" width="3" height="15" fill="rgb(206,25,23)"/><text x="44.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.24%)</title><rect x="41" y="1572" width="3" height="15" fill="rgb(220,89,22)"/><text x="44.00" y="1582.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.24%)</title><rect x="41" y="1588" width="3" height="15" fill="rgb(223,120,12)"/><text x="44.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="484" width="17" height="15" fill="rgb(237,119,54)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="500" width="17" height="15" fill="rgb(232,35,0)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="516" width="17" height="15" fill="rgb(211,140,31)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="532" width="17" height="15" fill="rgb(221,132,51)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="29" y="548" width="17" height="15" fill="rgb(250,206,18)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="564" width="17" height="15" fill="rgb(231,6,48)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 1.44%)</title><rect x="29" y="580" width="17" height="15" fill="rgb(223,57,32)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="596" width="17" height="15" fill="rgb(241,218,6)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="612" width="17" height="15" fill="rgb(248,53,6)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="628" width="17" height="15" fill="rgb(210,57,4)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="29" y="644" width="17" height="15" fill="rgb(226,37,52)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="660" width="17" height="15" fill="rgb(213,18,22)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 1.44%)</title><rect x="29" y="676" width="17" height="15" fill="rgb(229,86,37)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="692" width="17" height="15" fill="rgb(227,112,17)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="708" width="17" height="15" fill="rgb(249,79,3)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="724" width="17" height="15" fill="rgb(225,89,47)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="29" y="740" width="17" height="15" fill="rgb(241,72,3)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="756" width="17" height="15" fill="rgb(208,168,38)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 1.44%)</title><rect x="29" y="772" width="17" height="15" fill="rgb(211,218,40)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="788" width="17" height="15" fill="rgb(206,74,50)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="804" width="17" height="15" fill="rgb(250,131,20)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="820" width="17" height="15" fill="rgb(211,114,7)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.44%)</title><rect x="29" y="836" width="17" height="15" fill="rgb(247,204,45)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.44%)</title><rect x="29" y="852" width="17" height="15" fill="rgb(242,32,25)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register_rewritten_converters.py) (1 samples, 0.24%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(215,105,25)"/><text x="47.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(234,139,1)"/><text x="47.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(216,67,50)"/><text x="47.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(221,93,19)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(226,205,9)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(236,136,5)"/><text x="47.00" y="958.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(222,193,49)"/><text x="47.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(230,186,8)"/><text x="47.00" y="990.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(216,41,31)"/><text x="47.00" y="1006.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="1012" width="2" height="15" fill="rgb(225,213,11)"/><text x="47.00" y="1022.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="44" y="1028" width="2" height="15" fill="rgb(254,35,18)"/><text x="47.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="772" width="3" height="15" fill="rgb(241,215,14)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="788" width="3" height="15" fill="rgb(218,81,20)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="804" width="3" height="15" fill="rgb(222,29,31)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="820" width="3" height="15" fill="rgb(212,51,8)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="46" y="836" width="3" height="15" fill="rgb(218,112,7)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="852" width="3" height="15" fill="rgb(231,105,41)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.24%)</title><rect x="46" y="868" width="3" height="15" fill="rgb(217,153,41)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="884" width="3" height="15" fill="rgb(218,97,4)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="900" width="3" height="15" fill="rgb(212,146,33)"/><text x="49.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="916" width="3" height="15" fill="rgb(215,159,30)"/><text x="49.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="46" y="932" width="3" height="15" fill="rgb(233,167,21)"/><text x="49.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="948" width="3" height="15" fill="rgb(217,207,36)"/><text x="49.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.24%)</title><rect x="46" y="964" width="3" height="15" fill="rgb(241,73,23)"/><text x="49.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="980" width="3" height="15" fill="rgb(214,107,40)"/><text x="49.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="996" width="3" height="15" fill="rgb(217,57,36)"/><text x="49.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1012" width="3" height="15" fill="rgb(222,210,15)"/><text x="49.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="46" y="1028" width="3" height="15" fill="rgb(210,124,19)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(234,200,23)"/><text x="49.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.24%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(205,21,13)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(235,203,36)"/><text x="49.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(231,38,34)"/><text x="49.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(214,207,0)"/><text x="49.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(208,84,12)"/><text x="49.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="46" y="1140" width="3" height="15" fill="rgb(220,17,37)"/><text x="49.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.24%)</title><rect x="46" y="1156" width="3" height="15" fill="rgb(233,189,0)"/><text x="49.00" y="1166.50"></text></g><g><title>DatetimeTZDtype (pandas/core/dtypes/dtypes.py) (1 samples, 0.24%)</title><rect x="46" y="1172" width="3" height="15" fill="rgb(235,86,50)"/><text x="49.00" y="1182.50"></text></g><g><title>compile (re.py) (1 samples, 0.24%)</title><rect x="46" y="1188" width="3" height="15" fill="rgb(237,58,19)"/><text x="49.00" y="1198.50"></text></g><g><title>_compile (re.py) (1 samples, 0.24%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(232,133,38)"/><text x="49.00" y="1214.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(248,108,46)"/><text x="49.00" y="1230.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(222,123,29)"/><text x="49.00" y="1246.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(205,170,25)"/><text x="49.00" y="1262.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="46" y="1268" width="3" height="15" fill="rgb(245,131,23)"/><text x="49.00" y="1278.50"></text></g><g><title>getuntil (sre_parse.py) (1 samples, 0.24%)</title><rect x="46" y="1284" width="3" height="15" fill="rgb(231,202,15)"/><text x="49.00" y="1294.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.24%)</title><rect x="46" y="1300" width="3" height="15" fill="rgb(223,134,45)"/><text x="49.00" y="1310.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.92%)</title><rect x="29" y="340" width="23" height="15" fill="rgb(240,49,25)"/><text x="32.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="356" width="23" height="15" fill="rgb(230,45,13)"/><text x="32.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="372" width="23" height="15" fill="rgb(225,79,12)"/><text x="32.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="388" width="23" height="15" fill="rgb(207,11,47)"/><text x="32.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.92%)</title><rect x="29" y="404" width="23" height="15" fill="rgb(253,8,33)"/><text x="32.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="420" width="23" height="15" fill="rgb(254,83,25)"/><text x="32.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.92%)</title><rect x="29" y="436" width="23" height="15" fill="rgb(249,201,6)"/><text x="32.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="452" width="23" height="15" fill="rgb(224,167,33)"/><text x="32.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.92%)</title><rect x="29" y="468" width="23" height="15" fill="rgb(213,223,24)"/><text x="32.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="484" width="6" height="15" fill="rgb(209,68,10)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="46" y="500" width="6" height="15" fill="rgb(244,48,18)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="516" width="6" height="15" fill="rgb(217,145,36)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.48%)</title><rect x="46" y="532" width="6" height="15" fill="rgb(253,141,11)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="548" width="6" height="15" fill="rgb(215,161,25)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="564" width="6" height="15" fill="rgb(223,38,40)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="580" width="6" height="15" fill="rgb(218,181,1)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="46" y="596" width="6" height="15" fill="rgb(224,73,7)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="612" width="6" height="15" fill="rgb(206,18,18)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.48%)</title><rect x="46" y="628" width="6" height="15" fill="rgb(240,25,8)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="644" width="6" height="15" fill="rgb(211,137,51)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="660" width="6" height="15" fill="rgb(235,196,29)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="676" width="6" height="15" fill="rgb(205,112,45)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="46" y="692" width="6" height="15" fill="rgb(242,161,20)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="708" width="6" height="15" fill="rgb(220,174,54)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.48%)</title><rect x="46" y="724" width="6" height="15" fill="rgb(238,204,48)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="740" width="6" height="15" fill="rgb(208,221,32)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="46" y="756" width="6" height="15" fill="rgb(254,21,9)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="772" width="3" height="15" fill="rgb(205,118,40)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="788" width="3" height="15" fill="rgb(207,23,42)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="804" width="3" height="15" fill="rgb(205,19,28)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="820" width="3" height="15" fill="rgb(231,28,21)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="836" width="3" height="15" fill="rgb(222,229,45)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="852" width="3" height="15" fill="rgb(212,24,42)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="868" width="3" height="15" fill="rgb(235,68,35)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="884" width="3" height="15" fill="rgb(247,220,2)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="900" width="3" height="15" fill="rgb(249,71,30)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.24%)</title><rect x="49" y="916" width="3" height="15" fill="rgb(239,26,16)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="932" width="3" height="15" fill="rgb(224,113,40)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="948" width="3" height="15" fill="rgb(223,12,16)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="964" width="3" height="15" fill="rgb(236,161,35)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="980" width="3" height="15" fill="rgb(232,60,2)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="996" width="3" height="15" fill="rgb(221,146,27)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.24%)</title><rect x="49" y="1012" width="3" height="15" fill="rgb(240,100,28)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1028" width="3" height="15" fill="rgb(253,206,4)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(206,122,35)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(253,108,14)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(237,42,25)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(246,79,27)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.24%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(251,92,10)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(254,115,10)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(248,165,17)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1156" width="3" height="15" fill="rgb(214,8,31)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1172" width="3" height="15" fill="rgb(253,104,45)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1188" width="3" height="15" fill="rgb(222,52,16)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="1204" width="3" height="15" fill="rgb(216,40,39)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1220" width="3" height="15" fill="rgb(209,129,6)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1236" width="3" height="15" fill="rgb(247,161,30)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1252" width="3" height="15" fill="rgb(236,229,23)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1268" width="3" height="15" fill="rgb(229,226,21)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1284" width="3" height="15" fill="rgb(226,218,12)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.24%)</title><rect x="49" y="1300" width="3" height="15" fill="rgb(211,107,27)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1316" width="3" height="15" fill="rgb(238,108,42)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1332" width="3" height="15" fill="rgb(213,206,28)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1348" width="3" height="15" fill="rgb(237,160,17)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1364" width="3" height="15" fill="rgb(221,86,6)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1380" width="3" height="15" fill="rgb(233,97,41)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="1396" width="3" height="15" fill="rgb(219,214,4)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1412" width="3" height="15" fill="rgb(214,221,4)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1428" width="3" height="15" fill="rgb(212,211,3)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1444" width="3" height="15" fill="rgb(221,90,23)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1460" width="3" height="15" fill="rgb(212,94,31)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1476" width="3" height="15" fill="rgb(248,184,48)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.24%)</title><rect x="49" y="1492" width="3" height="15" fill="rgb(231,91,25)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1508" width="3" height="15" fill="rgb(220,48,36)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1524" width="3" height="15" fill="rgb(227,104,39)"/><text x="52.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1540" width="3" height="15" fill="rgb(253,164,28)"/><text x="52.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1556" width="3" height="15" fill="rgb(222,9,51)"/><text x="52.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1572" width="3" height="15" fill="rgb(217,52,26)"/><text x="52.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1588" width="3" height="15" fill="rgb(239,97,50)"/><text x="52.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1604" width="3" height="15" fill="rgb(214,84,25)"/><text x="52.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1620" width="3" height="15" fill="rgb(241,184,52)"/><text x="52.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="1636" width="3" height="15" fill="rgb(220,23,30)"/><text x="52.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1652" width="3" height="15" fill="rgb(218,183,35)"/><text x="52.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1668" width="3" height="15" fill="rgb(231,107,38)"/><text x="52.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1684" width="3" height="15" fill="rgb(230,6,14)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1700" width="3" height="15" fill="rgb(242,123,26)"/><text x="52.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1716" width="3" height="15" fill="rgb(239,105,51)"/><text x="52.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="49" y="1732" width="3" height="15" fill="rgb(228,106,10)"/><text x="52.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="49" y="1748" width="3" height="15" fill="rgb(232,139,35)"/><text x="52.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/cbook/__init__.py) (1 samples, 0.24%)</title><rect x="49" y="1764" width="3" height="15" fill="rgb(241,131,16)"/><text x="52.00" y="1774.50"></text></g><g><title>compile (re.py) (1 samples, 0.24%)</title><rect x="49" y="1780" width="3" height="15" fill="rgb(228,161,12)"/><text x="52.00" y="1790.50"></text></g><g><title>_compile (re.py) (1 samples, 0.24%)</title><rect x="49" y="1796" width="3" height="15" fill="rgb(216,187,52)"/><text x="52.00" y="1806.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.24%)</title><rect x="49" y="1812" width="3" height="15" fill="rgb(217,170,34)"/><text x="52.00" y="1822.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1828" width="3" height="15" fill="rgb(205,48,50)"/><text x="52.00" y="1838.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1844" width="3" height="15" fill="rgb(212,38,19)"/><text x="52.00" y="1854.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1860" width="3" height="15" fill="rgb(213,16,42)"/><text x="52.00" y="1870.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1876" width="3" height="15" fill="rgb(254,219,42)"/><text x="52.00" y="1886.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1892" width="3" height="15" fill="rgb(229,42,19)"/><text x="52.00" y="1902.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1908" width="3" height="15" fill="rgb(234,200,34)"/><text x="52.00" y="1918.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.24%)</title><rect x="49" y="1924" width="3" height="15" fill="rgb(245,2,36)"/><text x="52.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 2.16%)</title><rect x="29" y="244" width="26" height="15" fill="rgb(254,221,13)"/><text x="32.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.16%)</title><rect x="29" y="260" width="26" height="15" fill="rgb(224,99,1)"/><text x="32.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.16%)</title><rect x="29" y="276" width="26" height="15" fill="rgb(218,190,30)"/><text x="32.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.16%)</title><rect x="29" y="292" width="26" height="15" fill="rgb(249,8,24)"/><text x="32.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.16%)</title><rect x="29" y="308" width="26" height="15" fill="rgb(253,47,4)"/><text x="32.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.16%)</title><rect x="29" y="324" width="26" height="15" fill="rgb(247,173,44)"/><text x="32.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.24%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(225,219,33)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(245,108,27)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(243,174,54)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(236,208,30)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(209,53,49)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(254,169,15)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(252,165,6)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(247,5,19)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(209,39,52)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(245,155,50)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(222,158,8)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="516" width="3" height="15" fill="rgb(238,200,43)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="532" width="3" height="15" fill="rgb(217,53,24)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="548" width="3" height="15" fill="rgb(205,180,25)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="564" width="3" height="15" fill="rgb(217,22,30)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.24%)</title><rect x="52" y="580" width="3" height="15" fill="rgb(207,172,30)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="596" width="3" height="15" fill="rgb(226,105,41)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="612" width="3" height="15" fill="rgb(249,103,33)"/><text x="55.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="628" width="3" height="15" fill="rgb(244,163,50)"/><text x="55.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="644" width="3" height="15" fill="rgb(252,213,36)"/><text x="55.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="660" width="3" height="15" fill="rgb(210,215,45)"/><text x="55.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.24%)</title><rect x="52" y="676" width="3" height="15" fill="rgb(245,165,12)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="692" width="3" height="15" fill="rgb(228,114,49)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="708" width="3" height="15" fill="rgb(230,189,30)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(247,28,16)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(217,83,0)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(225,214,42)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(251,217,36)"/><text x="55.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(225,91,32)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(241,84,24)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="820" width="3" height="15" fill="rgb(226,149,39)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="836" width="3" height="15" fill="rgb(240,60,50)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="852" width="3" height="15" fill="rgb(228,226,43)"/><text x="55.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(205,24,28)"/><text x="55.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(214,167,6)"/><text x="55.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.24%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(253,58,44)"/><text x="55.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(223,225,2)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(205,126,1)"/><text x="55.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(216,24,39)"/><text x="55.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(211,108,35)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(246,117,33)"/><text x="55.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(230,220,20)"/><text x="55.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1012" width="3" height="15" fill="rgb(242,221,48)"/><text x="55.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(225,197,50)"/><text x="55.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.24%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(244,210,16)"/><text x="55.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(220,147,26)"/><text x="55.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(242,89,36)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1092" width="3" height="15" fill="rgb(241,202,3)"/><text x="55.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1108" width="3" height="15" fill="rgb(230,209,17)"/><text x="55.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(252,144,16)"/><text x="55.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(223,35,22)"/><text x="55.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(232,26,24)"/><text x="55.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.24%)</title><rect x="52" y="1172" width="3" height="15" fill="rgb(207,39,22)"/><text x="55.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1188" width="3" height="15" fill="rgb(246,11,1)"/><text x="55.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1204" width="3" height="15" fill="rgb(213,109,27)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1220" width="3" height="15" fill="rgb(228,121,40)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1236" width="3" height="15" fill="rgb(245,38,36)"/><text x="55.00" y="1246.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="52" y="1252" width="3" height="15" fill="rgb(223,220,40)"/><text x="55.00" y="1262.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1268" width="3" height="15" fill="rgb(233,132,34)"/><text x="55.00" y="1278.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1284" width="3" height="15" fill="rgb(237,7,41)"/><text x="55.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1300" width="3" height="15" fill="rgb(207,118,42)"/><text x="55.00" y="1310.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="52" y="1316" width="3" height="15" fill="rgb(225,21,23)"/><text x="55.00" y="1326.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.24%)</title><rect x="55" y="372" width="3" height="15" fill="rgb(209,142,42)"/><text x="58.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="388" width="3" height="15" fill="rgb(231,223,19)"/><text x="58.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="404" width="3" height="15" fill="rgb(249,148,5)"/><text x="58.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="420" width="3" height="15" fill="rgb(241,106,35)"/><text x="58.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="436" width="3" height="15" fill="rgb(237,127,4)"/><text x="58.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="452" width="3" height="15" fill="rgb(245,113,15)"/><text x="58.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="55" y="468" width="3" height="15" fill="rgb(251,164,32)"/><text x="58.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="55" y="484" width="3" height="15" fill="rgb(248,49,33)"/><text x="58.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.24%)</title><rect x="55" y="500" width="3" height="15" fill="rgb(226,54,22)"/><text x="58.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py) (1 samples, 0.24%)</title><rect x="55" y="516" width="3" height="15" fill="rgb(251,93,46)"/><text x="58.00" y="526.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="58" y="548" width="3" height="15" fill="rgb(235,109,15)"/><text x="61.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="564" width="3" height="15" fill="rgb(243,131,16)"/><text x="61.00" y="574.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="580" width="3" height="15" fill="rgb(239,35,7)"/><text x="61.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="596" width="3" height="15" fill="rgb(235,31,26)"/><text x="61.00" y="606.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="58" y="612" width="3" height="15" fill="rgb(243,78,1)"/><text x="61.00" y="622.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.24%)</title><rect x="58" y="628" width="3" height="15" fill="rgb(231,169,51)"/><text x="61.00" y="638.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.24%)</title><rect x="58" y="644" width="3" height="15" fill="rgb(212,93,51)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(247,153,48)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(209,194,3)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(230,142,37)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 4.57%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(212,47,8)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(234,20,44)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py) (19 samples, 4.57%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(254,212,7)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(226,36,36)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 4.57%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(248,140,31)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.88%)</title><rect x="29" y="196" width="34" height="15" fill="rgb(220,84,49)"/><text x="32.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.88%)</title><rect x="29" y="212" width="34" height="15" fill="rgb(222,195,32)"/><text x="32.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.88%)</title><rect x="29" y="228" width="34" height="15" fill="rgb(245,73,1)"/><text x="32.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.72%)</title><rect x="55" y="244" width="8" height="15" fill="rgb(224,72,10)"/><text x="58.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="260" width="8" height="15" fill="rgb(218,101,49)"/><text x="58.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="276" width="8" height="15" fill="rgb(249,12,51)"/><text x="58.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="292" width="8" height="15" fill="rgb(220,84,6)"/><text x="58.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="308" width="8" height="15" fill="rgb(230,127,41)"/><text x="58.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="324" width="8" height="15" fill="rgb(214,213,27)"/><text x="58.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.72%)</title><rect x="55" y="340" width="8" height="15" fill="rgb(246,87,0)"/><text x="58.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.72%)</title><rect x="55" y="356" width="8" height="15" fill="rgb(237,134,11)"/><text x="58.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (2 samples, 0.48%)</title><rect x="58" y="372" width="5" height="15" fill="rgb(230,70,0)"/><text x="61.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="388" width="5" height="15" fill="rgb(232,148,21)"/><text x="61.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="404" width="5" height="15" fill="rgb(253,196,24)"/><text x="61.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="420" width="5" height="15" fill="rgb(229,36,10)"/><text x="61.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="436" width="5" height="15" fill="rgb(221,15,34)"/><text x="61.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="452" width="5" height="15" fill="rgb(241,24,41)"/><text x="61.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="58" y="468" width="5" height="15" fill="rgb(208,77,4)"/><text x="61.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="484" width="5" height="15" fill="rgb(228,212,45)"/><text x="61.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (2 samples, 0.48%)</title><rect x="58" y="500" width="5" height="15" fill="rgb(236,202,13)"/><text x="61.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="516" width="5" height="15" fill="rgb(245,153,40)"/><text x="61.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="58" y="532" width="5" height="15" fill="rgb(239,167,46)"/><text x="61.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="548" width="2" height="15" fill="rgb(231,149,31)"/><text x="64.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="564" width="2" height="15" fill="rgb(245,71,4)"/><text x="64.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="580" width="2" height="15" fill="rgb(247,33,3)"/><text x="64.00" y="590.50"></text></g><g><title>0x7fa86dafa585 (?) (1 samples, 0.24%)</title><rect x="61" y="596" width="2" height="15" fill="rgb(214,32,37)"/><text x="64.00" y="606.50"></text></g><g><title>0x7fa86db00075 (?) (1 samples, 0.24%)</title><rect x="61" y="612" width="2" height="15" fill="rgb(236,179,18)"/><text x="64.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="628" width="2" height="15" fill="rgb(220,183,10)"/><text x="64.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="644" width="2" height="15" fill="rgb(206,221,46)"/><text x="64.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="660" width="2" height="15" fill="rgb(254,227,8)"/><text x="64.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="676" width="2" height="15" fill="rgb(226,39,26)"/><text x="64.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="692" width="2" height="15" fill="rgb(224,14,43)"/><text x="64.00" y="702.50"></text></g><g><title>0x7fa86d437543 (?) (1 samples, 0.24%)</title><rect x="61" y="708" width="2" height="15" fill="rgb(233,185,53)"/><text x="64.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="724" width="2" height="15" fill="rgb(238,186,26)"/><text x="64.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="740" width="2" height="15" fill="rgb(217,124,7)"/><text x="64.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="756" width="2" height="15" fill="rgb(213,127,38)"/><text x="64.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="772" width="2" height="15" fill="rgb(247,147,28)"/><text x="64.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="788" width="2" height="15" fill="rgb(244,107,13)"/><text x="64.00" y="798.50"></text></g><g><title>0x7fa86d20cb9c (?) (1 samples, 0.24%)</title><rect x="61" y="804" width="2" height="15" fill="rgb(223,182,39)"/><text x="64.00" y="814.50"></text></g><g><title>0x7fa86d210885 (?) (1 samples, 0.24%)</title><rect x="61" y="820" width="2" height="15" fill="rgb(223,125,36)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="836" width="2" height="15" fill="rgb(208,146,4)"/><text x="64.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="852" width="2" height="15" fill="rgb(239,139,41)"/><text x="64.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="868" width="2" height="15" fill="rgb(248,80,51)"/><text x="64.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="884" width="2" height="15" fill="rgb(238,204,15)"/><text x="64.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="900" width="2" height="15" fill="rgb(236,46,42)"/><text x="64.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.24%)</title><rect x="61" y="916" width="2" height="15" fill="rgb(228,26,15)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="932" width="2" height="15" fill="rgb(251,137,42)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="948" width="2" height="15" fill="rgb(212,163,20)"/><text x="64.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="964" width="2" height="15" fill="rgb(243,159,42)"/><text x="64.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="980" width="2" height="15" fill="rgb(221,56,31)"/><text x="64.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="996" width="2" height="15" fill="rgb(248,31,42)"/><text x="64.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py) (1 samples, 0.24%)</title><rect x="61" y="1012" width="2" height="15" fill="rgb(225,145,23)"/><text x="64.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1028" width="2" height="15" fill="rgb(233,54,3)"/><text x="64.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1044" width="2" height="15" fill="rgb(235,3,47)"/><text x="64.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1060" width="2" height="15" fill="rgb(214,11,16)"/><text x="64.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.24%)</title><rect x="61" y="1076" width="2" height="15" fill="rgb(246,168,3)"/><text x="64.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1092" width="2" height="15" fill="rgb(233,92,30)"/><text x="64.00" y="1102.50"></text></g><g><title>&lt;module&gt; (bisect.py) (1 samples, 0.24%)</title><rect x="61" y="1108" width="2" height="15" fill="rgb(252,20,18)"/><text x="64.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1124" width="2" height="15" fill="rgb(211,127,36)"/><text x="64.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.24%)</title><rect x="61" y="1140" width="2" height="15" fill="rgb(211,22,35)"/><text x="64.00" y="1150.50"></text></g><g><title>0x7fa83b276ff9 (?) (1 samples, 0.24%)</title><rect x="83" y="212" width="3" height="15" fill="rgb(209,128,45)"/><text x="86.00" y="222.50"></text></g><g><title>0x7fa83b271ef6 (?) (1 samples, 0.24%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(213,213,22)"/><text x="86.00" y="238.50"></text></g><g><title>0x7fa83b266962 (?) (1 samples, 0.24%)</title><rect x="83" y="244" width="3" height="15" fill="rgb(234,91,54)"/><text x="86.00" y="254.50"></text></g><g><title>0x7fa83b29a7a7 (?) (1 samples, 0.24%)</title><rect x="83" y="260" width="3" height="15" fill="rgb(218,222,12)"/><text x="86.00" y="270.50"></text></g><g><title>0x7fa83b299fe1 (?) (1 samples, 0.24%)</title><rect x="83" y="276" width="3" height="15" fill="rgb(231,70,54)"/><text x="86.00" y="286.50"></text></g><g><title>0x7fa83b29461f (?) (1 samples, 0.24%)</title><rect x="83" y="292" width="3" height="15" fill="rgb(227,218,4)"/><text x="86.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="83" y="308" width="3" height="15" fill="rgb(235,135,0)"/><text x="86.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 0.96%)</title><rect x="86" y="212" width="11" height="15" fill="rgb(231,137,21)"/><text x="89.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="89" y="228" width="8" height="15" fill="rgb(212,109,32)"/><text x="92.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="95" y="244" width="2" height="15" fill="rgb(213,172,19)"/><text x="98.00" y="254.50"></text></g><g><title>0x7fa87b233bc0 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="95" y="260" width="2" height="15" fill="rgb(242,158,7)"/><text x="98.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.24%)</title><rect x="97" y="212" width="3" height="15" fill="rgb(247,72,47)"/><text x="100.00" y="222.50"></text></g><g><title>0x7ffed0dfdbb2 ([vdso]) (1 samples, 0.24%)</title><rect x="97" y="228" width="3" height="15" fill="rgb(241,73,50)"/><text x="100.00" y="238.50"></text></g><g><title>0x7ffed0dfd949 ([vdso]) (1 samples, 0.24%)</title><rect x="97" y="244" width="3" height="15" fill="rgb(217,128,32)"/><text x="100.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="100" y="260" width="3" height="15" fill="rgb(230,3,54)"/><text x="103.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="103" y="292" width="3" height="15" fill="rgb(252,219,38)"/><text x="106.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="103" y="308" width="3" height="15" fill="rgb(208,33,22)"/><text x="106.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="103" y="324" width="3" height="15" fill="rgb(217,112,25)"/><text x="106.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="103" y="340" width="3" height="15" fill="rgb(205,185,29)"/><text x="106.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="103" y="356" width="3" height="15" fill="rgb(250,90,4)"/><text x="106.00" y="366.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="106" y="340" width="3" height="15" fill="rgb(216,168,37)"/><text x="109.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="106" y="356" width="3" height="15" fill="rgb(224,144,5)"/><text x="109.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="106" y="372" width="3" height="15" fill="rgb(243,28,32)"/><text x="109.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="109" y="452" width="3" height="15" fill="rgb(250,181,45)"/><text x="112.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="109" y="468" width="3" height="15" fill="rgb(244,186,35)"/><text x="112.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="109" y="484" width="3" height="15" fill="rgb(225,81,24)"/><text x="112.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="109" y="500" width="3" height="15" fill="rgb(227,97,13)"/><text x="112.00" y="510.50"></text></g><g><title>0x7fa87b233a41 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="109" y="516" width="3" height="15" fill="rgb(221,24,41)"/><text x="112.00" y="526.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="340" width="5" height="15" fill="rgb(240,23,36)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="356" width="5" height="15" fill="rgb(208,51,25)"/><text x="112.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="372" width="5" height="15" fill="rgb(211,167,41)"/><text x="112.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="388" width="5" height="15" fill="rgb(250,93,9)"/><text x="112.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="404" width="5" height="15" fill="rgb(227,57,36)"/><text x="112.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="420" width="5" height="15" fill="rgb(226,158,24)"/><text x="112.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="109" y="436" width="5" height="15" fill="rgb(210,119,33)"/><text x="112.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="112" y="452" width="2" height="15" fill="rgb(244,37,15)"/><text x="115.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="117" y="356" width="3" height="15" fill="rgb(242,194,7)"/><text x="120.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="117" y="372" width="3" height="15" fill="rgb(212,173,12)"/><text x="120.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="117" y="388" width="3" height="15" fill="rgb(241,51,31)"/><text x="120.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.72%)</title><rect x="114" y="340" width="9" height="15" fill="rgb(228,7,43)"/><text x="117.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(248,81,15)"/><text x="123.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(211,95,37)"/><text x="123.00" y="382.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="123" y="340" width="3" height="15" fill="rgb(208,173,32)"/><text x="126.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="126" y="340" width="3" height="15" fill="rgb(247,54,49)"/><text x="129.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="126" y="356" width="3" height="15" fill="rgb(250,143,53)"/><text x="129.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="126" y="372" width="3" height="15" fill="rgb(221,80,35)"/><text x="129.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="129" y="340" width="2" height="15" fill="rgb(218,164,26)"/><text x="132.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="129" y="356" width="2" height="15" fill="rgb(227,103,44)"/><text x="132.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="129" y="372" width="2" height="15" fill="rgb(206,60,30)"/><text x="132.00" y="382.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="131" y="340" width="3" height="15" fill="rgb(246,75,39)"/><text x="134.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="131" y="356" width="3" height="15" fill="rgb(222,78,48)"/><text x="134.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.24%)</title><rect x="131" y="372" width="3" height="15" fill="rgb(223,104,17)"/><text x="134.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.24%)</title><rect x="131" y="388" width="3" height="15" fill="rgb(207,146,30)"/><text x="134.00" y="398.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="134" y="356" width="3" height="15" fill="rgb(213,105,39)"/><text x="137.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="134" y="372" width="3" height="15" fill="rgb(229,61,23)"/><text x="137.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="134" y="388" width="3" height="15" fill="rgb(210,133,0)"/><text x="137.00" y="398.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="134" y="340" width="6" height="15" fill="rgb(214,116,27)"/><text x="137.00" y="350.50"></text></g><g><title>onnxruntime::Tensor::MutableData&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="137" y="356" width="3" height="15" fill="rgb(212,129,25)"/><text x="140.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.37%)</title><rect x="103" y="260" width="40" height="15" fill="rgb(229,120,7)"/><text x="106.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.37%)</title><rect x="103" y="276" width="40" height="15" fill="rgb(205,134,24)"/><text x="106.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.12%)</title><rect x="106" y="292" width="37" height="15" fill="rgb(230,14,33)"/><text x="109.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.12%)</title><rect x="106" y="308" width="37" height="15" fill="rgb(242,219,47)"/><text x="109.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 3.12%)</title><rect x="106" y="324" width="37" height="15" fill="rgb(206,18,45)"/><text x="109.00" y="334.50">onn..</text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="340" width="3" height="15" fill="rgb(228,147,53)"/><text x="143.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="356" width="3" height="15" fill="rgb(233,204,37)"/><text x="143.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="372" width="3" height="15" fill="rgb(212,223,6)"/><text x="143.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="388" width="3" height="15" fill="rgb(211,41,12)"/><text x="143.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="404" width="3" height="15" fill="rgb(206,178,12)"/><text x="143.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="420" width="3" height="15" fill="rgb(213,73,48)"/><text x="143.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="436" width="3" height="15" fill="rgb(228,25,35)"/><text x="143.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="452" width="3" height="15" fill="rgb(224,96,51)"/><text x="143.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="468" width="3" height="15" fill="rgb(246,196,23)"/><text x="143.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="140" y="484" width="3" height="15" fill="rgb(217,100,41)"/><text x="143.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="140" y="500" width="3" height="15" fill="rgb(208,228,31)"/><text x="143.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="140" y="516" width="3" height="15" fill="rgb(210,124,38)"/><text x="143.00" y="526.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.85%)</title><rect x="100" y="244" width="46" height="15" fill="rgb(227,192,12)"/><text x="103.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="143" y="260" width="3" height="15" fill="rgb(207,77,25)"/><text x="146.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="143" y="276" width="3" height="15" fill="rgb(207,156,19)"/><text x="146.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="143" y="292" width="3" height="15" fill="rgb(251,104,19)"/><text x="146.00" y="302.50"></text></g><g><title>0x7fa87b233906 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="143" y="308" width="3" height="15" fill="rgb(244,209,13)"/><text x="146.00" y="318.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(205,6,51)"/><text x="149.00" y="270.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (31 samples, 7.45%)</title><rect x="63" y="68" width="88" height="15" fill="rgb(207,210,33)"/><text x="66.00" y="78.50">profile_or..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (31 samples, 7.45%)</title><rect x="63" y="84" width="88" height="15" fill="rgb(205,104,35)"/><text x="66.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (31 samples, 7.45%)</title><rect x="63" y="100" width="88" height="15" fill="rgb(225,147,50)"/><text x="66.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 7.21%)</title><rect x="66" y="116" width="85" height="15" fill="rgb(224,139,22)"/><text x="69.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 7.21%)</title><rect x="66" y="132" width="85" height="15" fill="rgb(237,220,29)"/><text x="69.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (30 samples, 7.21%)</title><rect x="66" y="148" width="85" height="15" fill="rgb(236,224,31)"/><text x="69.00" y="158.50">run (mlpro..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 6.97%)</title><rect x="69" y="164" width="82" height="15" fill="rgb(216,92,3)"/><text x="72.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (27 samples, 6.49%)</title><rect x="75" y="180" width="76" height="15" fill="rgb(220,179,20)"/><text x="78.00" y="190.50">run (mlp..</text></g><g><title>run (onnxruntime/capi/session.py) (26 samples, 6.25%)</title><rect x="78" y="196" width="73" height="15" fill="rgb(246,76,2)"/><text x="81.00" y="206.50">run (onn..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.33%)</title><rect x="100" y="212" width="51" height="15" fill="rgb(231,54,51)"/><text x="103.00" y="222.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 4.33%)</title><rect x="100" y="228" width="51" height="15" fill="rgb(226,211,9)"/><text x="103.00" y="238.50">void ..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.48%)</title><rect x="146" y="244" width="5" height="15" fill="rgb(211,48,54)"/><text x="149.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.24%)</title><rect x="148" y="260" width="3" height="15" fill="rgb(247,58,9)"/><text x="151.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="148" y="276" width="3" height="15" fill="rgb(234,78,8)"/><text x="151.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="148" y="292" width="3" height="15" fill="rgb(216,83,41)"/><text x="151.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.48%)</title><rect x="183" y="180" width="5" height="15" fill="rgb(254,90,13)"/><text x="186.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="398" y="228" width="3" height="15" fill="rgb(247,142,24)"/><text x="401.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="398" y="244" width="3" height="15" fill="rgb(250,226,38)"/><text x="401.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="398" y="260" width="3" height="15" fill="rgb(248,155,25)"/><text x="401.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.24%)</title><rect x="401" y="228" width="3" height="15" fill="rgb(224,180,47)"/><text x="404.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.24%)</title><rect x="401" y="244" width="3" height="15" fill="rgb(248,204,2)"/><text x="404.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.24%)</title><rect x="401" y="260" width="3" height="15" fill="rgb(215,33,7)"/><text x="404.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="407" y="260" width="2" height="15" fill="rgb(247,117,26)"/><text x="410.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.24%)</title><rect x="407" y="276" width="2" height="15" fill="rgb(212,2,43)"/><text x="410.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.24%)</title><rect x="409" y="260" width="3" height="15" fill="rgb(252,132,39)"/><text x="412.00" y="270.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.24%)</title><rect x="412" y="260" width="3" height="15" fill="rgb(238,145,38)"/><text x="415.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.24%)</title><rect x="412" y="276" width="3" height="15" fill="rgb(206,58,14)"/><text x="415.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="412" y="292" width="3" height="15" fill="rgb(229,72,14)"/><text x="415.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (5 samples, 1.20%)</title><rect x="404" y="244" width="14" height="15" fill="rgb(220,154,7)"/><text x="407.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="415" y="260" width="3" height="15" fill="rgb(230,7,6)"/><text x="418.00" y="270.50"></text></g><g><title>0x7fa87b235700 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="415" y="276" width="3" height="15" fill="rgb(206,158,30)"/><text x="418.00" y="286.50"></text></g><g><title>0x7fa87b232aa4 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="415" y="292" width="3" height="15" fill="rgb(228,125,17)"/><text x="418.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="418" y="244" width="3" height="15" fill="rgb(213,136,37)"/><text x="421.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="418" y="260" width="3" height="15" fill="rgb(222,52,46)"/><text x="421.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (12 samples, 2.88%)</title><rect x="392" y="212" width="34" height="15" fill="rgb(230,212,10)"/><text x="395.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (8 samples, 1.92%)</title><rect x="404" y="228" width="22" height="15" fill="rgb(241,29,2)"/><text x="407.00" y="238.50">a..</text></g><g><title>prepare_index (mapping.c) (2 samples, 0.48%)</title><rect x="421" y="244" width="5" height="15" fill="rgb(211,7,15)"/><text x="424.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="424" y="260" width="2" height="15" fill="rgb(239,172,22)"/><text x="427.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="424" y="276" width="2" height="15" fill="rgb(253,164,10)"/><text x="427.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="424" y="292" width="2" height="15" fill="rgb(240,171,20)"/><text x="427.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="435" y="276" width="3" height="15" fill="rgb(217,7,38)"/><text x="438.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="441" y="292" width="2" height="15" fill="rgb(235,212,45)"/><text x="444.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="441" y="308" width="2" height="15" fill="rgb(208,22,35)"/><text x="444.00" y="318.50"></text></g><g><title>0x7fa87b1eb9e8 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="441" y="324" width="2" height="15" fill="rgb(233,122,48)"/><text x="444.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="443" y="292" width="3" height="15" fill="rgb(215,197,54)"/><text x="446.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.24%)</title><rect x="446" y="292" width="3" height="15" fill="rgb(240,97,14)"/><text x="449.00" y="302.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="449" y="292" width="3" height="15" fill="rgb(221,180,43)"/><text x="452.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (10 samples, 2.40%)</title><rect x="426" y="212" width="29" height="15" fill="rgb(243,113,6)"/><text x="429.00" y="222.50">_r..</text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (9 samples, 2.16%)</title><rect x="429" y="228" width="26" height="15" fill="rgb(244,139,36)"/><text x="432.00" y="238.50">&lt;..</text></g><g><title>array_astype (methods.c) (8 samples, 1.92%)</title><rect x="432" y="244" width="23" height="15" fill="rgb(206,49,17)"/><text x="435.00" y="254.50">a..</text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 1.68%)</title><rect x="435" y="260" width="20" height="15" fill="rgb(222,173,4)"/><text x="438.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 1.44%)</title><rect x="438" y="276" width="17" height="15" fill="rgb(212,86,29)"/><text x="441.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="452" y="292" width="3" height="15" fill="rgb(224,72,14)"/><text x="455.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="452" y="308" width="3" height="15" fill="rgb(246,174,46)"/><text x="455.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="458" y="292" width="3" height="15" fill="rgb(250,22,33)"/><text x="461.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.24%)</title><rect x="458" y="308" width="3" height="15" fill="rgb(222,122,43)"/><text x="461.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.24%)</title><rect x="458" y="324" width="3" height="15" fill="rgb(249,221,32)"/><text x="461.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.24%)</title><rect x="458" y="340" width="3" height="15" fill="rgb(210,132,50)"/><text x="461.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="458" y="356" width="3" height="15" fill="rgb(247,196,36)"/><text x="461.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.24%)</title><rect x="461" y="292" width="2" height="15" fill="rgb(208,220,49)"/><text x="464.00" y="302.50"></text></g><g><title>0x7fa87b233965 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="461" y="308" width="2" height="15" fill="rgb(233,223,54)"/><text x="464.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (4 samples, 0.96%)</title><rect x="455" y="212" width="11" height="15" fill="rgb(251,200,32)"/><text x="458.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.96%)</title><rect x="455" y="228" width="11" height="15" fill="rgb(221,114,46)"/><text x="458.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.72%)</title><rect x="458" y="244" width="8" height="15" fill="rgb(250,69,32)"/><text x="461.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="458" y="260" width="8" height="15" fill="rgb(227,95,45)"/><text x="461.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="458" y="276" width="8" height="15" fill="rgb(228,168,12)"/><text x="461.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.24%)</title><rect x="463" y="292" width="3" height="15" fill="rgb(231,43,36)"/><text x="466.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="463" y="308" width="3" height="15" fill="rgb(223,191,41)"/><text x="466.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (2 samples, 0.48%)</title><rect x="466" y="212" width="6" height="15" fill="rgb(215,130,12)"/><text x="469.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.48%)</title><rect x="466" y="228" width="6" height="15" fill="rgb(234,143,19)"/><text x="469.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.48%)</title><rect x="466" y="244" width="6" height="15" fill="rgb(222,205,40)"/><text x="469.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.48%)</title><rect x="466" y="260" width="6" height="15" fill="rgb(217,29,44)"/><text x="469.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (2 samples, 0.48%)</title><rect x="466" y="276" width="6" height="15" fill="rgb(221,129,32)"/><text x="469.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.48%)</title><rect x="466" y="292" width="6" height="15" fill="rgb(251,190,9)"/><text x="469.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.48%)</title><rect x="466" y="308" width="6" height="15" fill="rgb(222,86,0)"/><text x="469.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="475" y="276" width="3" height="15" fill="rgb(223,77,14)"/><text x="478.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="475" y="292" width="3" height="15" fill="rgb(216,107,18)"/><text x="478.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.24%)</title><rect x="475" y="308" width="3" height="15" fill="rgb(237,151,37)"/><text x="478.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.24%)</title><rect x="478" y="276" width="2" height="15" fill="rgb(213,199,3)"/><text x="481.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.24%)</title><rect x="478" y="292" width="2" height="15" fill="rgb(219,228,9)"/><text x="481.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="480" y="276" width="3" height="15" fill="rgb(230,27,33)"/><text x="483.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="480" y="292" width="3" height="15" fill="rgb(227,101,14)"/><text x="483.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.24%)</title><rect x="480" y="308" width="3" height="15" fill="rgb(239,37,13)"/><text x="483.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="480" y="324" width="3" height="15" fill="rgb(245,180,2)"/><text x="483.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="480" y="340" width="3" height="15" fill="rgb(222,19,14)"/><text x="483.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (5 samples, 1.20%)</title><rect x="472" y="212" width="14" height="15" fill="rgb(205,202,36)"/><text x="475.00" y="222.50"></text></g><g><title>array_add (number.c) (5 samples, 1.20%)</title><rect x="472" y="228" width="14" height="15" fill="rgb(216,176,38)"/><text x="475.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.20%)</title><rect x="472" y="244" width="14" height="15" fill="rgb(230,57,20)"/><text x="475.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="472" y="260" width="14" height="15" fill="rgb(234,118,42)"/><text x="475.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="483" y="276" width="3" height="15" fill="rgb(241,26,36)"/><text x="486.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.24%)</title><rect x="483" y="292" width="3" height="15" fill="rgb(219,139,14)"/><text x="486.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="483" y="308" width="3" height="15" fill="rgb(238,17,28)"/><text x="486.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.24%)</title><rect x="483" y="324" width="3" height="15" fill="rgb(206,40,51)"/><text x="486.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.24%)</title><rect x="486" y="212" width="3" height="15" fill="rgb(233,34,28)"/><text x="489.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.24%)</title><rect x="486" y="228" width="3" height="15" fill="rgb(221,208,7)"/><text x="489.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.24%)</title><rect x="512" y="244" width="2" height="15" fill="rgb(219,207,10)"/><text x="515.00" y="254.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.24%)</title><rect x="514" y="244" width="3" height="15" fill="rgb(219,125,51)"/><text x="517.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.24%)</title><rect x="520" y="276" width="3" height="15" fill="rgb(213,198,12)"/><text x="523.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.24%)</title><rect x="523" y="324" width="3" height="15" fill="rgb(209,27,42)"/><text x="526.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.48%)</title><rect x="523" y="292" width="6" height="15" fill="rgb(249,48,15)"/><text x="526.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.48%)</title><rect x="523" y="308" width="6" height="15" fill="rgb(228,23,52)"/><text x="526.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="526" y="324" width="3" height="15" fill="rgb(251,186,40)"/><text x="529.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="526" y="340" width="3" height="15" fill="rgb(227,58,4)"/><text x="529.00" y="350.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.24%)</title><rect x="529" y="308" width="2" height="15" fill="rgb(207,184,48)"/><text x="532.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.24%)</title><rect x="529" y="324" width="2" height="15" fill="rgb(231,150,18)"/><text x="532.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_subtract_FLOAT (simd.inc.src) (1 samples, 0.24%)</title><rect x="529" y="340" width="2" height="15" fill="rgb(217,150,54)"/><text x="532.00" y="350.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.24%)</title><rect x="529" y="356" width="2" height="15" fill="rgb(211,0,5)"/><text x="532.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.96%)</title><rect x="523" y="276" width="11" height="15" fill="rgb(231,186,12)"/><text x="526.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="529" y="292" width="5" height="15" fill="rgb(248,186,17)"/><text x="532.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="531" y="308" width="3" height="15" fill="rgb(251,14,37)"/><text x="534.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.24%)</title><rect x="531" y="324" width="3" height="15" fill="rgb(217,207,18)"/><text x="534.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.44%)</title><rect x="520" y="260" width="17" height="15" fill="rgb(249,138,39)"/><text x="523.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.24%)</title><rect x="534" y="276" width="3" height="15" fill="rgb(240,70,7)"/><text x="537.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.24%)</title><rect x="534" y="292" width="3" height="15" fill="rgb(215,157,45)"/><text x="537.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (16 samples, 3.85%)</title><rect x="495" y="228" width="45" height="15" fill="rgb(235,135,26)"/><text x="498.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.92%)</title><rect x="517" y="244" width="23" height="15" fill="rgb(253,219,47)"/><text x="520.00" y="254.50">u..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.24%)</title><rect x="537" y="260" width="3" height="15" fill="rgb(209,20,3)"/><text x="540.00" y="270.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.24%)</title><rect x="548" y="356" width="3" height="15" fill="rgb(241,203,53)"/><text x="551.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="548" y="372" width="3" height="15" fill="rgb(252,81,40)"/><text x="551.00" y="382.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="548" y="388" width="3" height="15" fill="rgb(229,37,24)"/><text x="551.00" y="398.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 0.96%)</title><rect x="543" y="276" width="11" height="15" fill="rgb(214,6,34)"/><text x="546.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.72%)</title><rect x="546" y="292" width="8" height="15" fill="rgb(215,221,28)"/><text x="549.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.48%)</title><rect x="548" y="308" width="6" height="15" fill="rgb(244,125,51)"/><text x="551.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.48%)</title><rect x="548" y="324" width="6" height="15" fill="rgb(233,161,46)"/><text x="551.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.48%)</title><rect x="548" y="340" width="6" height="15" fill="rgb(211,21,44)"/><text x="551.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="551" y="356" width="3" height="15" fill="rgb(246,11,0)"/><text x="554.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="554" y="292" width="3" height="15" fill="rgb(215,154,42)"/><text x="557.00" y="302.50"></text></g><g><title>array_astype (methods.c) (3 samples, 0.72%)</title><rect x="554" y="276" width="9" height="15" fill="rgb(219,200,49)"/><text x="557.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.48%)</title><rect x="557" y="292" width="6" height="15" fill="rgb(233,184,4)"/><text x="560.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.48%)</title><rect x="557" y="308" width="6" height="15" fill="rgb(251,180,21)"/><text x="560.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="560" y="324" width="3" height="15" fill="rgb(247,17,13)"/><text x="563.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="560" y="340" width="3" height="15" fill="rgb(217,147,12)"/><text x="563.00" y="350.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.24%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(238,152,53)"/><text x="571.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (12 samples, 2.88%)</title><rect x="540" y="228" width="34" height="15" fill="rgb(219,173,44)"/><text x="543.00" y="238.50">_r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (11 samples, 2.64%)</title><rect x="543" y="244" width="31" height="15" fill="rgb(252,213,34)"/><text x="546.00" y="254.50">_r..</text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (11 samples, 2.64%)</title><rect x="543" y="260" width="31" height="15" fill="rgb(249,214,32)"/><text x="546.00" y="270.50">_a..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (4 samples, 0.96%)</title><rect x="563" y="276" width="11" height="15" fill="rgb(229,107,39)"/><text x="566.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.48%)</title><rect x="568" y="292" width="6" height="15" fill="rgb(226,119,28)"/><text x="571.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (2 samples, 0.48%)</title><rect x="568" y="308" width="6" height="15" fill="rgb(233,87,54)"/><text x="571.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.24%)</title><rect x="571" y="324" width="3" height="15" fill="rgb(238,142,42)"/><text x="574.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.48%)</title><rect x="577" y="260" width="5" height="15" fill="rgb(228,77,51)"/><text x="580.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.24%)</title><rect x="580" y="276" width="2" height="15" fill="rgb(226,163,44)"/><text x="583.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.24%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(224,221,47)"/><text x="583.00" y="302.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.24%)</title><rect x="585" y="356" width="3" height="15" fill="rgb(237,153,13)"/><text x="588.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="582" y="276" width="9" height="15" fill="rgb(244,6,13)"/><text x="585.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.48%)</title><rect x="585" y="292" width="6" height="15" fill="rgb(214,146,0)"/><text x="588.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.48%)</title><rect x="585" y="308" width="6" height="15" fill="rgb(246,121,5)"/><text x="588.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.48%)</title><rect x="585" y="324" width="6" height="15" fill="rgb(239,23,11)"/><text x="588.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.48%)</title><rect x="585" y="340" width="6" height="15" fill="rgb(223,111,15)"/><text x="588.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.24%)</title><rect x="588" y="356" width="3" height="15" fill="rgb(229,142,54)"/><text x="591.00" y="366.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.24%)</title><rect x="588" y="372" width="3" height="15" fill="rgb(250,157,41)"/><text x="591.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (7 samples, 1.68%)</title><rect x="574" y="228" width="20" height="15" fill="rgb(208,223,10)"/><text x="577.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.44%)</title><rect x="577" y="244" width="17" height="15" fill="rgb(247,83,12)"/><text x="580.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.96%)</title><rect x="582" y="260" width="12" height="15" fill="rgb(207,14,17)"/><text x="585.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.24%)</title><rect x="591" y="276" width="3" height="15" fill="rgb(239,42,29)"/><text x="594.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="594" y="292" width="3" height="15" fill="rgb(242,77,47)"/><text x="597.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (2 samples, 0.48%)</title><rect x="594" y="228" width="6" height="15" fill="rgb(211,6,28)"/><text x="597.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.48%)</title><rect x="594" y="244" width="6" height="15" fill="rgb(227,213,0)"/><text x="597.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.48%)</title><rect x="594" y="260" width="6" height="15" fill="rgb(211,141,41)"/><text x="597.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="594" y="276" width="6" height="15" fill="rgb(222,197,37)"/><text x="597.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.24%)</title><rect x="597" y="292" width="3" height="15" fill="rgb(237,223,34)"/><text x="600.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.24%)</title><rect x="597" y="308" width="3" height="15" fill="rgb(253,87,33)"/><text x="600.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.24%)</title><rect x="597" y="324" width="3" height="15" fill="rgb(246,199,43)"/><text x="600.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.24%)</title><rect x="608" y="260" width="3" height="15" fill="rgb(239,8,17)"/><text x="611.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.24%)</title><rect x="608" y="276" width="3" height="15" fill="rgb(217,176,40)"/><text x="611.00" y="286.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.24%)</title><rect x="614" y="356" width="3" height="15" fill="rgb(242,72,43)"/><text x="617.00" y="366.50"></text></g><g><title>gemv (cblasfuncs.c) (3 samples, 0.72%)</title><rect x="614" y="340" width="8" height="15" fill="rgb(213,163,19)"/><text x="617.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.48%)</title><rect x="617" y="356" width="5" height="15" fill="rgb(232,70,1)"/><text x="620.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.24%)</title><rect x="619" y="372" width="3" height="15" fill="rgb(230,124,51)"/><text x="622.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (9 samples, 2.16%)</title><rect x="600" y="228" width="25" height="15" fill="rgb(222,160,2)"/><text x="603.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 2.16%)</title><rect x="600" y="244" width="25" height="15" fill="rgb(215,52,7)"/><text x="603.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 1.20%)</title><rect x="611" y="260" width="14" height="15" fill="rgb(221,57,51)"/><text x="614.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.96%)</title><rect x="614" y="276" width="11" height="15" fill="rgb(253,17,53)"/><text x="617.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (4 samples, 0.96%)</title><rect x="614" y="292" width="11" height="15" fill="rgb(244,34,30)"/><text x="617.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 0.96%)</title><rect x="614" y="308" width="11" height="15" fill="rgb(246,167,32)"/><text x="617.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 0.96%)</title><rect x="614" y="324" width="11" height="15" fill="rgb(243,137,36)"/><text x="617.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.24%)</title><rect x="622" y="340" width="3" height="15" fill="rgb(239,112,51)"/><text x="625.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.24%)</title><rect x="622" y="356" width="3" height="15" fill="rgb(248,180,14)"/><text x="625.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.24%)</title><rect x="622" y="372" width="3" height="15" fill="rgb(213,118,2)"/><text x="625.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="622" y="388" width="3" height="15" fill="rgb(236,93,19)"/><text x="625.00" y="398.50"></text></g><g><title>0x7fa87b1eba4d (libc-2.29.so) (1 samples, 0.24%)</title><rect x="622" y="404" width="3" height="15" fill="rgb(217,9,29)"/><text x="625.00" y="414.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.24%)</title><rect x="648" y="356" width="3" height="15" fill="rgb(236,228,51)"/><text x="651.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.24%)</title><rect x="648" y="372" width="3" height="15" fill="rgb(225,175,26)"/><text x="651.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.24%)</title><rect x="648" y="388" width="3" height="15" fill="rgb(224,206,23)"/><text x="651.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.72%)</title><rect x="645" y="324" width="8" height="15" fill="rgb(236,51,18)"/><text x="648.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.72%)</title><rect x="645" y="340" width="8" height="15" fill="rgb(239,170,14)"/><text x="648.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.24%)</title><rect x="651" y="356" width="2" height="15" fill="rgb(229,108,19)"/><text x="654.00" y="366.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.24%)</title><rect x="659" y="340" width="3" height="15" fill="rgb(251,98,0)"/><text x="662.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="662" y="372" width="3" height="15" fill="rgb(208,119,6)"/><text x="665.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.24%)</title><rect x="662" y="388" width="3" height="15" fill="rgb(225,103,33)"/><text x="665.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.24%)</title><rect x="662" y="404" width="3" height="15" fill="rgb(223,184,38)"/><text x="665.00" y="414.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.24%)</title><rect x="662" y="420" width="3" height="15" fill="rgb(214,105,21)"/><text x="665.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.24%)</title><rect x="665" y="404" width="3" height="15" fill="rgb(252,131,26)"/><text x="668.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="665" y="420" width="3" height="15" fill="rgb(242,93,17)"/><text x="668.00" y="430.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.48%)</title><rect x="665" y="372" width="5" height="15" fill="rgb(237,39,13)"/><text x="668.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.48%)</title><rect x="665" y="388" width="5" height="15" fill="rgb(226,137,42)"/><text x="668.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="668" y="404" width="2" height="15" fill="rgb(247,144,22)"/><text x="671.00" y="414.50"></text></g><g><title>0x7fa87b1eb8d9 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="668" y="420" width="2" height="15" fill="rgb(237,65,32)"/><text x="671.00" y="430.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (15 samples, 3.61%)</title><rect x="631" y="244" width="42" height="15" fill="rgb(218,50,7)"/><text x="634.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (15 samples, 3.61%)</title><rect x="631" y="260" width="42" height="15" fill="rgb(247,182,17)"/><text x="634.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (13 samples, 3.12%)</title><rect x="636" y="276" width="37" height="15" fill="rgb(243,46,27)"/><text x="639.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (12 samples, 2.88%)</title><rect x="639" y="292" width="34" height="15" fill="rgb(206,109,30)"/><text x="642.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.40%)</title><rect x="645" y="308" width="28" height="15" fill="rgb(229,109,34)"/><text x="648.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.68%)</title><rect x="653" y="324" width="20" height="15" fill="rgb(241,93,14)"/><text x="656.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.96%)</title><rect x="662" y="340" width="11" height="15" fill="rgb(246,77,4)"/><text x="665.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.96%)</title><rect x="662" y="356" width="11" height="15" fill="rgb(249,55,34)"/><text x="665.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.24%)</title><rect x="670" y="372" width="3" height="15" fill="rgb(226,77,32)"/><text x="673.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="670" y="388" width="3" height="15" fill="rgb(239,52,46)"/><text x="673.00" y="398.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="670" y="404" width="3" height="15" fill="rgb(232,173,45)"/><text x="673.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (18 samples, 4.33%)</title><rect x="625" y="228" width="51" height="15" fill="rgb(230,113,48)"/><text x="628.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.24%)</title><rect x="673" y="244" width="3" height="15" fill="rgb(228,128,53)"/><text x="676.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.24%)</title><rect x="673" y="260" width="3" height="15" fill="rgb(209,39,6)"/><text x="676.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.24%)</title><rect x="673" y="276" width="3" height="15" fill="rgb(233,82,51)"/><text x="676.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.72%)</title><rect x="693" y="356" width="9" height="15" fill="rgb(242,187,43)"/><text x="696.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.72%)</title><rect x="693" y="372" width="9" height="15" fill="rgb(227,119,36)"/><text x="696.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.72%)</title><rect x="693" y="388" width="9" height="15" fill="rgb(229,99,42)"/><text x="696.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.96%)</title><rect x="693" y="324" width="11" height="15" fill="rgb(246,42,37)"/><text x="696.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.96%)</title><rect x="693" y="340" width="11" height="15" fill="rgb(219,55,25)"/><text x="696.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.24%)</title><rect x="702" y="356" width="2" height="15" fill="rgb(232,219,21)"/><text x="705.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="702" y="372" width="2" height="15" fill="rgb(213,134,31)"/><text x="705.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="707" y="388" width="3" height="15" fill="rgb(221,99,3)"/><text x="710.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="707" y="404" width="3" height="15" fill="rgb(249,14,50)"/><text x="710.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.72%)</title><rect x="704" y="372" width="9" height="15" fill="rgb(252,64,8)"/><text x="707.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.24%)</title><rect x="710" y="388" width="3" height="15" fill="rgb(225,84,20)"/><text x="713.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.96%)</title><rect x="704" y="356" width="12" height="15" fill="rgb(223,97,39)"/><text x="707.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.24%)</title><rect x="713" y="372" width="3" height="15" fill="rgb(243,38,37)"/><text x="716.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.24%)</title><rect x="713" y="388" width="3" height="15" fill="rgb(225,59,49)"/><text x="716.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.24%)</title><rect x="713" y="404" width="3" height="15" fill="rgb(215,50,16)"/><text x="716.00" y="414.50"></text></g><g><title>0x7fa87b1eb767 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="713" y="420" width="3" height="15" fill="rgb(236,67,46)"/><text x="716.00" y="430.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (198 samples, 47.60%)</title><rect x="157" y="164" width="562" height="15" fill="rgb(242,226,22)"/><text x="160.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (187 samples, 44.95%)</title><rect x="188" y="180" width="531" height="15" fill="rgb(248,163,18)"/><text x="191.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (122 samples, 29.33%)</title><rect x="373" y="196" width="346" height="15" fill="rgb(239,43,3)"/><text x="376.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (81 samples, 19.47%)</title><rect x="489" y="212" width="230" height="15" fill="rgb(211,71,18)"/><text x="492.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (15 samples, 3.61%)</title><rect x="676" y="228" width="43" height="15" fill="rgb(218,56,45)"/><text x="679.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (15 samples, 3.61%)</title><rect x="676" y="244" width="43" height="15" fill="rgb(220,57,10)"/><text x="679.00" y="254.50">sum ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 3.12%)</title><rect x="682" y="260" width="37" height="15" fill="rgb(235,91,48)"/><text x="685.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (13 samples, 3.12%)</title><rect x="682" y="276" width="37" height="15" fill="rgb(230,136,27)"/><text x="685.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (12 samples, 2.88%)</title><rect x="685" y="292" width="34" height="15" fill="rgb(246,134,39)"/><text x="688.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 2.16%)</title><rect x="693" y="308" width="26" height="15" fill="rgb(237,199,45)"/><text x="696.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="704" y="324" width="15" height="15" fill="rgb(241,41,43)"/><text x="707.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.20%)</title><rect x="704" y="340" width="15" height="15" fill="rgb(247,108,12)"/><text x="707.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.24%)</title><rect x="716" y="356" width="3" height="15" fill="rgb(227,158,27)"/><text x="719.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="716" y="372" width="3" height="15" fill="rgb(209,216,38)"/><text x="719.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="716" y="388" width="3" height="15" fill="rgb(225,93,38)"/><text x="719.00" y="398.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (201 samples, 48.32%)</title><rect x="151" y="100" width="570" height="15" fill="rgb(236,58,28)"/><text x="154.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 48.32%)</title><rect x="151" y="116" width="570" height="15" fill="rgb(241,18,46)"/><text x="154.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 48.32%)</title><rect x="151" y="132" width="570" height="15" fill="rgb(245,197,1)"/><text x="154.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (201 samples, 48.32%)</title><rect x="151" y="148" width="570" height="15" fill="rgb(217,110,42)"/><text x="154.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="719" y="164" width="2" height="15" fill="rgb(246,199,54)"/><text x="722.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="719" y="180" width="2" height="15" fill="rgb(228,102,7)"/><text x="722.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="719" y="196" width="2" height="15" fill="rgb(233,75,37)"/><text x="722.00" y="206.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (202 samples, 48.56%)</title><rect x="151" y="68" width="573" height="15" fill="rgb(230,213,26)"/><text x="154.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (202 samples, 48.56%)</title><rect x="151" y="84" width="573" height="15" fill="rgb(242,175,19)"/><text x="154.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.24%)</title><rect x="721" y="100" width="3" height="15" fill="rgb(209,0,4)"/><text x="724.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.24%)</title><rect x="721" y="116" width="3" height="15" fill="rgb(249,38,46)"/><text x="724.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.24%)</title><rect x="721" y="132" width="3" height="15" fill="rgb(234,51,25)"/><text x="724.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.24%)</title><rect x="721" y="148" width="3" height="15" fill="rgb(206,18,12)"/><text x="724.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.24%)</title><rect x="721" y="164" width="3" height="15" fill="rgb(207,125,43)"/><text x="724.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.24%)</title><rect x="721" y="180" width="3" height="15" fill="rgb(236,18,54)"/><text x="724.00" y="190.50"></text></g><g><title>convert_sklearn_naive_bayes (skl2onnx/operator_converters/naive_bayes.py) (1 samples, 0.24%)</title><rect x="721" y="196" width="3" height="15" fill="rgb(229,1,42)"/><text x="724.00" y="206.50"></text></g><g><title>_joint_log_likelihood_bernoulli (skl2onnx/operator_converters/naive_bayes.py) (1 samples, 0.24%)</title><rect x="721" y="212" width="3" height="15" fill="rgb(233,167,40)"/><text x="724.00" y="222.50"></text></g><g><title>add_initializer (skl2onnx/common/_container.py) (1 samples, 0.24%)</title><rect x="721" y="228" width="3" height="15" fill="rgb(237,27,21)"/><text x="724.00" y="238.50"></text></g><g><title>make_tensor (onnx/helper.py) (1 samples, 0.24%)</title><rect x="721" y="244" width="3" height="15" fill="rgb(223,129,53)"/><text x="724.00" y="254.50"></text></g><g><title>0x7fa8695816d5 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="721" y="260" width="3" height="15" fill="rgb(210,129,41)"/><text x="724.00" y="270.50"></text></g><g><title>google::protobuf::DynamicMessage::New (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="721" y="276" width="3" height="15" fill="rgb(246,1,8)"/><text x="724.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="721" y="292" width="3" height="15" fill="rgb(222,24,36)"/><text x="724.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="721" y="308" width="3" height="15" fill="rgb(231,210,3)"/><text x="724.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="727" y="116" width="3" height="15" fill="rgb(234,221,36)"/><text x="730.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="727" y="132" width="3" height="15" fill="rgb(228,156,30)"/><text x="730.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="727" y="148" width="3" height="15" fill="rgb(242,216,4)"/><text x="730.00" y="158.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.24%)</title><rect x="744" y="180" width="3" height="15" fill="rgb(213,80,28)"/><text x="747.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.24%)</title><rect x="744" y="196" width="3" height="15" fill="rgb(223,103,24)"/><text x="747.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="744" y="212" width="3" height="15" fill="rgb(231,36,49)"/><text x="747.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.24%)</title><rect x="761" y="228" width="3" height="15" fill="rgb(206,15,35)"/><text x="764.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="781" y="244" width="6" height="15" fill="rgb(212,105,6)"/><text x="784.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.16%)</title><rect x="764" y="228" width="26" height="15" fill="rgb(216,210,54)"/><text x="767.00" y="238.50">_..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.24%)</title><rect x="787" y="244" width="3" height="15" fill="rgb(205,32,35)"/><text x="790.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.48%)</title><rect x="790" y="228" width="5" height="15" fill="rgb(223,28,6)"/><text x="793.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="792" y="244" width="3" height="15" fill="rgb(223,205,33)"/><text x="795.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.48%)</title><rect x="795" y="228" width="6" height="15" fill="rgb(232,96,9)"/><text x="798.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.48%)</title><rect x="795" y="244" width="6" height="15" fill="rgb(225,4,11)"/><text x="798.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (21 samples, 5.05%)</title><rect x="750" y="196" width="59" height="15" fill="rgb(252,93,7)"/><text x="753.00" y="206.50">_check..</text></g><g><title>check_array (sklearn/utils/validation.py) (21 samples, 5.05%)</title><rect x="750" y="212" width="59" height="15" fill="rgb(232,37,7)"/><text x="753.00" y="222.50">check_..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.72%)</title><rect x="801" y="228" width="8" height="15" fill="rgb(217,137,49)"/><text x="804.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.72%)</title><rect x="801" y="244" width="8" height="15" fill="rgb(226,196,5)"/><text x="804.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="815" y="244" width="3" height="15" fill="rgb(232,13,4)"/><text x="818.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="815" y="260" width="3" height="15" fill="rgb(244,2,54)"/><text x="818.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.24%)</title><rect x="815" y="276" width="3" height="15" fill="rgb(210,191,24)"/><text x="818.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="818" y="244" width="3" height="15" fill="rgb(232,117,42)"/><text x="821.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (3 samples, 0.72%)</title><rect x="815" y="228" width="9" height="15" fill="rgb(230,146,20)"/><text x="818.00" y="238.50"></text></g><g><title>npy_memchr (common.h) (1 samples, 0.24%)</title><rect x="821" y="244" width="3" height="15" fill="rgb(206,205,11)"/><text x="824.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="824" y="228" width="2" height="15" fill="rgb(238,57,37)"/><text x="827.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="824" y="244" width="2" height="15" fill="rgb(239,198,52)"/><text x="827.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="824" y="260" width="2" height="15" fill="rgb(209,102,13)"/><text x="827.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (5 samples, 1.20%)</title><rect x="815" y="212" width="14" height="15" fill="rgb(223,199,2)"/><text x="818.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.24%)</title><rect x="826" y="228" width="3" height="15" fill="rgb(212,12,43)"/><text x="829.00" y="238.50"></text></g><g><title>binop_should_defer (binop_override.h) (1 samples, 0.24%)</title><rect x="832" y="228" width="3" height="15" fill="rgb(220,103,7)"/><text x="835.00" y="238.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="832" y="244" width="3" height="15" fill="rgb(234,109,31)"/><text x="835.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="835" y="260" width="3" height="15" fill="rgb(222,63,47)"/><text x="838.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.24%)</title><rect x="835" y="276" width="3" height="15" fill="rgb(245,0,18)"/><text x="838.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.24%)</title><rect x="835" y="292" width="3" height="15" fill="rgb(246,50,54)"/><text x="838.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="835" y="308" width="3" height="15" fill="rgb(243,60,23)"/><text x="838.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.24%)</title><rect x="835" y="324" width="3" height="15" fill="rgb(212,182,33)"/><text x="838.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.24%)</title><rect x="835" y="340" width="3" height="15" fill="rgb(250,209,34)"/><text x="838.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="835" y="356" width="3" height="15" fill="rgb(223,94,20)"/><text x="838.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="838" y="260" width="5" height="15" fill="rgb(218,175,27)"/><text x="841.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="841" y="276" width="2" height="15" fill="rgb(209,115,2)"/><text x="844.00" y="286.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.24%)</title><rect x="841" y="292" width="2" height="15" fill="rgb(209,89,37)"/><text x="844.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c) (7 samples, 1.68%)</title><rect x="829" y="212" width="20" height="15" fill="rgb(221,96,27)"/><text x="832.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.20%)</title><rect x="835" y="228" width="14" height="15" fill="rgb(244,104,11)"/><text x="838.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="835" y="244" width="14" height="15" fill="rgb(249,112,3)"/><text x="838.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.48%)</title><rect x="843" y="260" width="6" height="15" fill="rgb(214,105,30)"/><text x="846.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.24%)</title><rect x="860" y="228" width="3" height="15" fill="rgb(232,124,54)"/><text x="863.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.48%)</title><rect x="863" y="228" width="6" height="15" fill="rgb(246,162,54)"/><text x="866.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="872" y="244" width="5" height="15" fill="rgb(206,192,20)"/><text x="875.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.96%)</title><rect x="869" y="228" width="11" height="15" fill="rgb(216,173,38)"/><text x="872.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.24%)</title><rect x="877" y="244" width="3" height="15" fill="rgb(238,225,39)"/><text x="880.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.72%)</title><rect x="880" y="228" width="9" height="15" fill="rgb(223,112,11)"/><text x="883.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.24%)</title><rect x="886" y="244" width="3" height="15" fill="rgb(237,33,54)"/><text x="889.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.24%)</title><rect x="886" y="260" width="3" height="15" fill="rgb(211,214,2)"/><text x="889.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (17 samples, 4.09%)</title><rect x="849" y="212" width="48" height="15" fill="rgb(227,132,8)"/><text x="852.00" y="222.50">chec..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.72%)</title><rect x="889" y="228" width="8" height="15" fill="rgb(227,197,11)"/><text x="892.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.48%)</title><rect x="892" y="244" width="5" height="15" fill="rgb(205,194,52)"/><text x="895.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.24%)</title><rect x="897" y="244" width="3" height="15" fill="rgb(238,88,38)"/><text x="900.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (55 samples, 13.22%)</title><rect x="747" y="180" width="156" height="15" fill="rgb(246,27,26)"/><text x="750.00" y="190.50">_check_X (sklearn/na..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (33 samples, 7.93%)</title><rect x="809" y="196" width="94" height="15" fill="rgb(240,189,38)"/><text x="812.00" y="206.50">binarize (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.48%)</title><rect x="897" y="212" width="6" height="15" fill="rgb(251,39,49)"/><text x="900.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.48%)</title><rect x="897" y="228" width="6" height="15" fill="rgb(211,60,39)"/><text x="900.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="900" y="244" width="3" height="15" fill="rgb(241,180,27)"/><text x="903.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="900" y="260" width="3" height="15" fill="rgb(248,165,28)"/><text x="903.00" y="270.50"></text></g><g><title>array_add (number.c) (1 samples, 0.24%)</title><rect x="912" y="196" width="2" height="15" fill="rgb(239,77,39)"/><text x="915.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.24%)</title><rect x="912" y="212" width="2" height="15" fill="rgb(207,208,17)"/><text x="915.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.24%)</title><rect x="912" y="228" width="2" height="15" fill="rgb(213,172,46)"/><text x="915.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="912" y="244" width="2" height="15" fill="rgb(212,131,31)"/><text x="915.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="914" y="212" width="3" height="15" fill="rgb(247,105,33)"/><text x="917.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="914" y="228" width="3" height="15" fill="rgb(207,105,31)"/><text x="917.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.48%)</title><rect x="914" y="196" width="6" height="15" fill="rgb(231,27,24)"/><text x="917.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="917" y="212" width="3" height="15" fill="rgb(242,116,26)"/><text x="920.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="917" y="228" width="3" height="15" fill="rgb(233,78,52)"/><text x="920.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="917" y="244" width="3" height="15" fill="rgb(244,193,45)"/><text x="920.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.24%)</title><rect x="920" y="212" width="3" height="15" fill="rgb(219,226,52)"/><text x="923.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="929" y="244" width="2" height="15" fill="rgb(222,0,38)"/><text x="932.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.24%)</title><rect x="929" y="260" width="2" height="15" fill="rgb(248,131,16)"/><text x="932.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.24%)</title><rect x="929" y="276" width="2" height="15" fill="rgb(252,226,6)"/><text x="932.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="929" y="292" width="2" height="15" fill="rgb(224,97,52)"/><text x="932.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.24%)</title><rect x="929" y="308" width="2" height="15" fill="rgb(222,37,37)"/><text x="932.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.24%)</title><rect x="929" y="324" width="2" height="15" fill="rgb(247,188,34)"/><text x="932.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="929" y="340" width="2" height="15" fill="rgb(218,107,20)"/><text x="932.00" y="350.50"></text></g><g><title>0x7fa87b234b68 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="929" y="356" width="2" height="15" fill="rgb(226,118,7)"/><text x="932.00" y="366.50"></text></g><g><title>array_subtract (number.c) (5 samples, 1.20%)</title><rect x="920" y="196" width="14" height="15" fill="rgb(247,47,4)"/><text x="923.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.96%)</title><rect x="923" y="212" width="11" height="15" fill="rgb(236,57,11)"/><text x="926.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.96%)</title><rect x="923" y="228" width="11" height="15" fill="rgb(218,56,26)"/><text x="926.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.24%)</title><rect x="931" y="244" width="3" height="15" fill="rgb(247,182,54)"/><text x="934.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="931" y="260" width="3" height="15" fill="rgb(229,138,6)"/><text x="934.00" y="270.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.24%)</title><rect x="931" y="276" width="3" height="15" fill="rgb(209,26,42)"/><text x="934.00" y="286.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="931" y="292" width="3" height="15" fill="rgb(209,201,44)"/><text x="934.00" y="302.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.24%)</title><rect x="931" y="308" width="3" height="15" fill="rgb(253,62,24)"/><text x="934.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.24%)</title><rect x="934" y="260" width="3" height="15" fill="rgb(223,134,1)"/><text x="937.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.24%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(238,227,14)"/><text x="937.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.24%)</title><rect x="934" y="292" width="3" height="15" fill="rgb(213,45,44)"/><text x="937.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.24%)</title><rect x="934" y="308" width="3" height="15" fill="rgb(241,102,50)"/><text x="937.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.24%)</title><rect x="934" y="324" width="3" height="15" fill="rgb(239,10,21)"/><text x="937.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.24%)</title><rect x="943" y="276" width="3" height="15" fill="rgb(223,127,31)"/><text x="946.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.24%)</title><rect x="943" y="292" width="3" height="15" fill="rgb(239,186,18)"/><text x="946.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.24%)</title><rect x="943" y="308" width="3" height="15" fill="rgb(232,216,5)"/><text x="946.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.24%)</title><rect x="946" y="276" width="2" height="15" fill="rgb(231,19,18)"/><text x="949.00" y="286.50"></text></g><g><title>0x7fa87a454f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(237,9,6)"/><text x="954.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="954" y="308" width="3" height="15" fill="rgb(254,74,2)"/><text x="957.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="954" y="324" width="3" height="15" fill="rgb(220,36,15)"/><text x="957.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.72%)</title><rect x="951" y="292" width="9" height="15" fill="rgb(221,46,44)"/><text x="954.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.24%)</title><rect x="957" y="308" width="3" height="15" fill="rgb(214,43,49)"/><text x="960.00" y="318.50"></text></g><g><title>0x7fa87a455e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.24%)</title><rect x="957" y="324" width="3" height="15" fill="rgb(219,109,27)"/><text x="960.00" y="334.50"></text></g><g><title>array_sum (methods.c) (10 samples, 2.40%)</title><rect x="934" y="196" width="29" height="15" fill="rgb(227,88,53)"/><text x="937.00" y="206.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (10 samples, 2.40%)</title><rect x="934" y="212" width="29" height="15" fill="rgb(247,102,14)"/><text x="937.00" y="222.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 2.40%)</title><rect x="934" y="228" width="29" height="15" fill="rgb(220,68,16)"/><text x="937.00" y="238.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 2.40%)</title><rect x="934" y="244" width="29" height="15" fill="rgb(253,22,4)"/><text x="937.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 2.16%)</title><rect x="937" y="260" width="26" height="15" fill="rgb(213,140,28)"/><text x="940.00" y="270.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.20%)</title><rect x="948" y="276" width="15" height="15" fill="rgb(242,121,38)"/><text x="951.00" y="286.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.24%)</title><rect x="960" y="292" width="3" height="15" fill="rgb(212,96,3)"/><text x="963.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.24%)</title><rect x="971" y="260" width="3" height="15" fill="rgb(212,133,2)"/><text x="974.00" y="270.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.24%)</title><rect x="974" y="260" width="3" height="15" fill="rgb(222,62,8)"/><text x="977.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.24%)</title><rect x="974" y="276" width="3" height="15" fill="rgb(217,113,38)"/><text x="977.00" y="286.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.24%)</title><rect x="977" y="260" width="3" height="15" fill="rgb(224,177,39)"/><text x="980.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.24%)</title><rect x="977" y="276" width="3" height="15" fill="rgb(245,226,6)"/><text x="980.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (7 samples, 1.68%)</title><rect x="963" y="196" width="19" height="15" fill="rgb(221,51,42)"/><text x="966.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.20%)</title><rect x="968" y="212" width="14" height="15" fill="rgb(222,44,25)"/><text x="971.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="968" y="228" width="14" height="15" fill="rgb(235,25,18)"/><text x="971.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="968" y="244" width="14" height="15" fill="rgb(235,105,23)"/><text x="971.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.24%)</title><rect x="980" y="260" width="2" height="15" fill="rgb(247,125,54)"/><text x="983.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.24%)</title><rect x="982" y="212" width="3" height="15" fill="rgb(231,215,13)"/><text x="985.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.24%)</title><rect x="982" y="228" width="3" height="15" fill="rgb(251,100,18)"/><text x="985.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.24%)</title><rect x="982" y="244" width="3" height="15" fill="rgb(224,123,9)"/><text x="985.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.24%)</title><rect x="991" y="260" width="3" height="15" fill="rgb(244,17,21)"/><text x="994.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="991" y="244" width="6" height="15" fill="rgb(232,71,8)"/><text x="994.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.24%)</title><rect x="994" y="260" width="3" height="15" fill="rgb(218,191,4)"/><text x="997.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.24%)</title><rect x="994" y="276" width="3" height="15" fill="rgb(254,162,39)"/><text x="997.00" y="286.50"></text></g><g><title>0x7fa87b405e40 (libm-2.29.so) (1 samples, 0.24%)</title><rect x="997" y="276" width="2" height="15" fill="rgb(216,70,12)"/><text x="1000.00" y="286.50"></text></g><g><title>0x7fa87b405e4d (libm-2.29.so) (1 samples, 0.24%)</title><rect x="999" y="276" width="3" height="15" fill="rgb(220,188,0)"/><text x="1002.00" y="286.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (36 samples, 8.65%)</title><rect x="903" y="180" width="102" height="15" fill="rgb(232,89,27)"/><text x="906.00" y="190.50">_joint_log_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.92%)</title><rect x="982" y="196" width="23" height="15" fill="rgb(211,41,30)"/><text x="985.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.68%)</title><rect x="985" y="212" width="20" height="15" fill="rgb(223,30,42)"/><text x="988.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.20%)</title><rect x="991" y="228" width="14" height="15" fill="rgb(214,197,49)"/><text x="994.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="997" y="244" width="8" height="15" fill="rgb(217,208,25)"/><text x="1000.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (3 samples, 0.72%)</title><rect x="997" y="260" width="8" height="15" fill="rgb(232,202,1)"/><text x="1000.00" y="270.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.24%)</title><rect x="1002" y="276" width="3" height="15" fill="rgb(234,129,47)"/><text x="1005.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="1005" y="180" width="3" height="15" fill="rgb(249,222,42)"/><text x="1008.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.24%)</title><rect x="1005" y="196" width="3" height="15" fill="rgb(229,209,31)"/><text x="1008.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.24%)</title><rect x="1005" y="212" width="3" height="15" fill="rgb(236,82,7)"/><text x="1008.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.24%)</title><rect x="1005" y="228" width="3" height="15" fill="rgb(246,174,10)"/><text x="1008.00" y="238.50"></text></g><g><title>array_subtract (number.c) (2 samples, 0.48%)</title><rect x="1008" y="180" width="6" height="15" fill="rgb(241,136,41)"/><text x="1011.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1008" y="196" width="6" height="15" fill="rgb(210,71,23)"/><text x="1011.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1008" y="212" width="6" height="15" fill="rgb(212,117,54)"/><text x="1011.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1008" y="228" width="6" height="15" fill="rgb(238,182,12)"/><text x="1011.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1008" y="244" width="6" height="15" fill="rgb(241,50,51)"/><text x="1011.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.48%)</title><rect x="1008" y="260" width="6" height="15" fill="rgb(218,57,27)"/><text x="1011.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.48%)</title><rect x="1008" y="276" width="6" height="15" fill="rgb(231,216,2)"/><text x="1011.00" y="286.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (4 samples, 0.96%)</title><rect x="1014" y="180" width="11" height="15" fill="rgb(237,173,49)"/><text x="1017.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.96%)</title><rect x="1014" y="196" width="11" height="15" fill="rgb(237,224,10)"/><text x="1017.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (4 samples, 0.96%)</title><rect x="1014" y="212" width="11" height="15" fill="rgb(225,203,39)"/><text x="1017.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 1.20%)</title><rect x="1025" y="180" width="14" height="15" fill="rgb(209,95,51)"/><text x="1028.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.72%)</title><rect x="1031" y="196" width="8" height="15" fill="rgb(248,62,21)"/><text x="1034.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.24%)</title><rect x="1036" y="212" width="3" height="15" fill="rgb(254,29,11)"/><text x="1039.00" y="222.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (5 samples, 1.20%)</title><rect x="1056" y="196" width="14" height="15" fill="rgb(216,223,47)"/><text x="1059.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (4 samples, 0.96%)</title><rect x="1059" y="212" width="11" height="15" fill="rgb(231,84,53)"/><text x="1062.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (2 samples, 0.48%)</title><rect x="1065" y="228" width="5" height="15" fill="rgb(246,69,52)"/><text x="1068.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (5 samples, 1.20%)</title><rect x="1070" y="196" width="15" height="15" fill="rgb(218,82,23)"/><text x="1073.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (4 samples, 0.96%)</title><rect x="1073" y="212" width="12" height="15" fill="rgb(245,129,45)"/><text x="1076.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.24%)</title><rect x="1082" y="228" width="3" height="15" fill="rgb(230,21,24)"/><text x="1085.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.24%)</title><rect x="1090" y="212" width="3" height="15" fill="rgb(215,61,40)"/><text x="1093.00" y="222.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (4 samples, 0.96%)</title><rect x="1085" y="196" width="11" height="15" fill="rgb(207,25,31)"/><text x="1088.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.24%)</title><rect x="1093" y="212" width="3" height="15" fill="rgb(233,52,41)"/><text x="1096.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.24%)</title><rect x="1093" y="228" width="3" height="15" fill="rgb(233,22,51)"/><text x="1096.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.72%)</title><rect x="1104" y="276" width="9" height="15" fill="rgb(237,192,20)"/><text x="1107.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.48%)</title><rect x="1107" y="292" width="6" height="15" fill="rgb(229,46,44)"/><text x="1110.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.48%)</title><rect x="1107" y="308" width="6" height="15" fill="rgb(205,143,4)"/><text x="1110.00" y="318.50"></text></g><g><title>0x7fa87b249e89 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1110" y="324" width="3" height="15" fill="rgb(208,103,5)"/><text x="1113.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.24%)</title><rect x="1116" y="292" width="3" height="15" fill="rgb(210,0,41)"/><text x="1119.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.24%)</title><rect x="1119" y="324" width="2" height="15" fill="rgb(205,1,2)"/><text x="1122.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.48%)</title><rect x="1119" y="308" width="5" height="15" fill="rgb(222,221,38)"/><text x="1122.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (1 samples, 0.24%)</title><rect x="1121" y="324" width="3" height="15" fill="rgb(241,180,29)"/><text x="1124.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.24%)</title><rect x="1121" y="340" width="3" height="15" fill="rgb(228,68,18)"/><text x="1124.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.24%)</title><rect x="1121" y="356" width="3" height="15" fill="rgb(254,128,17)"/><text x="1124.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.24%)</title><rect x="1121" y="372" width="3" height="15" fill="rgb(222,35,3)"/><text x="1124.00" y="382.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (11 samples, 2.64%)</title><rect x="1096" y="196" width="31" height="15" fill="rgb(225,75,28)"/><text x="1099.00" y="206.50">am..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 2.64%)</title><rect x="1096" y="212" width="31" height="15" fill="rgb(205,102,44)"/><text x="1099.00" y="222.50">ar..</text></g><g><title>amax (numpy/core/fromnumeric.py) (9 samples, 2.16%)</title><rect x="1102" y="228" width="25" height="15" fill="rgb(234,38,49)"/><text x="1105.00" y="238.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (8 samples, 1.92%)</title><rect x="1104" y="244" width="23" height="15" fill="rgb(219,116,39)"/><text x="1107.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.92%)</title><rect x="1104" y="260" width="23" height="15" fill="rgb(209,109,53)"/><text x="1107.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.20%)</title><rect x="1113" y="276" width="14" height="15" fill="rgb(210,223,4)"/><text x="1116.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.72%)</title><rect x="1119" y="292" width="8" height="15" fill="rgb(207,158,4)"/><text x="1122.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1124" y="308" width="3" height="15" fill="rgb(236,48,37)"/><text x="1127.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1124" y="324" width="3" height="15" fill="rgb(211,68,41)"/><text x="1127.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1124" y="340" width="3" height="15" fill="rgb(228,5,28)"/><text x="1127.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.24%)</title><rect x="1124" y="356" width="3" height="15" fill="rgb(252,86,33)"/><text x="1127.00" y="366.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.24%)</title><rect x="1127" y="196" width="3" height="15" fill="rgb(235,62,45)"/><text x="1130.00" y="206.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.24%)</title><rect x="1127" y="212" width="3" height="15" fill="rgb(226,223,12)"/><text x="1130.00" y="222.50"></text></g><g><title>multi_DECREF (mapping.c) (1 samples, 0.24%)</title><rect x="1127" y="228" width="3" height="15" fill="rgb(232,187,43)"/><text x="1130.00" y="238.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.24%)</title><rect x="1130" y="292" width="3" height="15" fill="rgb(205,201,46)"/><text x="1133.00" y="302.50"></text></g><g><title>array_subtract (number.c) (2 samples, 0.48%)</title><rect x="1130" y="196" width="6" height="15" fill="rgb(226,80,19)"/><text x="1133.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1130" y="212" width="6" height="15" fill="rgb(238,167,11)"/><text x="1133.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1130" y="228" width="6" height="15" fill="rgb(249,25,14)"/><text x="1133.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1130" y="244" width="6" height="15" fill="rgb(238,22,24)"/><text x="1133.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1130" y="260" width="6" height="15" fill="rgb(222,119,4)"/><text x="1133.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.48%)</title><rect x="1130" y="276" width="6" height="15" fill="rgb(254,97,5)"/><text x="1133.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.24%)</title><rect x="1133" y="292" width="3" height="15" fill="rgb(228,91,7)"/><text x="1136.00" y="302.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (1 samples, 0.24%)</title><rect x="1136" y="196" width="2" height="15" fill="rgb(252,89,13)"/><text x="1139.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.24%)</title><rect x="1136" y="212" width="2" height="15" fill="rgb(218,112,8)"/><text x="1139.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py) (1 samples, 0.24%)</title><rect x="1136" y="228" width="2" height="15" fill="rgb(215,141,52)"/><text x="1139.00" y="238.50"></text></g><g><title>array_squeeze (methods.c) (1 samples, 0.24%)</title><rect x="1136" y="244" width="2" height="15" fill="rgb(220,31,14)"/><text x="1139.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.24%)</title><rect x="1144" y="260" width="3" height="15" fill="rgb(245,139,22)"/><text x="1147.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.24%)</title><rect x="1147" y="308" width="3" height="15" fill="rgb(251,227,36)"/><text x="1150.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1147" y="324" width="3" height="15" fill="rgb(252,149,14)"/><text x="1150.00" y="334.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1147" y="340" width="3" height="15" fill="rgb(218,87,39)"/><text x="1150.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.48%)</title><rect x="1147" y="292" width="6" height="15" fill="rgb(220,224,14)"/><text x="1150.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1150" y="308" width="3" height="15" fill="rgb(239,112,34)"/><text x="1153.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1150" y="324" width="3" height="15" fill="rgb(231,67,32)"/><text x="1153.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1150" y="340" width="3" height="15" fill="rgb(242,38,44)"/><text x="1153.00" y="350.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (6 samples, 1.44%)</title><rect x="1138" y="196" width="17" height="15" fill="rgb(253,138,2)"/><text x="1141.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.44%)</title><rect x="1138" y="212" width="17" height="15" fill="rgb(224,78,52)"/><text x="1141.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (6 samples, 1.44%)</title><rect x="1138" y="228" width="17" height="15" fill="rgb(239,113,9)"/><text x="1141.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.96%)</title><rect x="1144" y="244" width="11" height="15" fill="rgb(206,32,2)"/><text x="1147.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.72%)</title><rect x="1147" y="260" width="8" height="15" fill="rgb(254,102,1)"/><text x="1150.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.72%)</title><rect x="1147" y="276" width="8" height="15" fill="rgb(212,38,41)"/><text x="1150.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.24%)</title><rect x="1153" y="292" width="2" height="15" fill="rgb(249,70,42)"/><text x="1156.00" y="302.50"></text></g><g><title>0x7fa87b311151 (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1153" y="308" width="2" height="15" fill="rgb(226,189,20)"/><text x="1156.00" y="318.50"></text></g><g><title>PyUFunc_IsFiniteTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1155" y="228" width="3" height="15" fill="rgb(223,88,17)"/><text x="1158.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1158" y="228" width="3" height="15" fill="rgb(223,97,44)"/><text x="1161.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1158" y="244" width="3" height="15" fill="rgb(240,142,11)"/><text x="1161.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="1158" y="260" width="3" height="15" fill="rgb(227,170,38)"/><text x="1161.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1161" y="228" width="3" height="15" fill="rgb(224,86,44)"/><text x="1164.00" y="238.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1164" y="228" width="3" height="15" fill="rgb(229,175,16)"/><text x="1167.00" y="238.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.24%)</title><rect x="1167" y="292" width="3" height="15" fill="rgb(222,118,52)"/><text x="1170.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.48%)</title><rect x="1167" y="260" width="5" height="15" fill="rgb(207,12,15)"/><text x="1170.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.48%)</title><rect x="1167" y="276" width="5" height="15" fill="rgb(223,89,37)"/><text x="1170.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.24%)</title><rect x="1170" y="292" width="2" height="15" fill="rgb(252,155,12)"/><text x="1173.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.72%)</title><rect x="1167" y="244" width="8" height="15" fill="rgb(240,130,52)"/><text x="1170.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.24%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(222,18,54)"/><text x="1175.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.24%)</title><rect x="1172" y="276" width="3" height="15" fill="rgb(249,114,37)"/><text x="1175.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.96%)</title><rect x="1167" y="228" width="11" height="15" fill="rgb(221,92,18)"/><text x="1170.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1175" y="244" width="3" height="15" fill="rgb(228,111,8)"/><text x="1178.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.24%)</title><rect x="1175" y="260" width="3" height="15" fill="rgb(236,199,52)"/><text x="1178.00" y="270.50"></text></g><g><title>0x7fa87b405e88 (libm-2.29.so) (1 samples, 0.24%)</title><rect x="1175" y="276" width="3" height="15" fill="rgb(205,127,35)"/><text x="1178.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (157 samples, 37.74%)</title><rect x="736" y="164" width="445" height="15" fill="rgb(237,63,14)"/><text x="739.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (50 samples, 12.02%)</title><rect x="1039" y="180" width="142" height="15" fill="rgb(231,0,13)"/><text x="1042.00" y="190.50">logsumexp (scipy/s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.16%)</title><rect x="1155" y="196" width="26" height="15" fill="rgb(228,204,35)"/><text x="1158.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.16%)</title><rect x="1155" y="212" width="26" height="15" fill="rgb(205,64,48)"/><text x="1158.00" y="222.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1178" y="228" width="3" height="15" fill="rgb(221,135,44)"/><text x="1181.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.24%)</title><rect x="1178" y="244" width="3" height="15" fill="rgb(219,212,28)"/><text x="1181.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="1178" y="260" width="3" height="15" fill="rgb(205,29,47)"/><text x="1181.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="1178" y="276" width="3" height="15" fill="rgb(228,181,6)"/><text x="1181.00" y="286.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.24%)</title><rect x="1178" y="292" width="3" height="15" fill="rgb(216,23,44)"/><text x="1181.00" y="302.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (162 samples, 38.94%)</title><rect x="724" y="100" width="460" height="15" fill="rgb(206,14,21)"/><text x="727.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 38.46%)</title><rect x="730" y="116" width="454" height="15" fill="rgb(212,161,16)"/><text x="733.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 37.98%)</title><rect x="736" y="132" width="448" height="15" fill="rgb(239,136,19)"/><text x="739.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (158 samples, 37.98%)</title><rect x="736" y="148" width="448" height="15" fill="rgb(246,25,4)"/><text x="739.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1181" y="164" width="3" height="15" fill="rgb(209,41,51)"/><text x="1184.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1181" y="180" width="3" height="15" fill="rgb(249,226,18)"/><text x="1184.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1181" y="196" width="3" height="15" fill="rgb(239,32,29)"/><text x="1184.00" y="206.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.24%)</title><rect x="1181" y="212" width="3" height="15" fill="rgb(219,216,50)"/><text x="1184.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.24%)</title><rect x="1181" y="228" width="3" height="15" fill="rgb(208,147,20)"/><text x="1184.00" y="238.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.24%)</title><rect x="1181" y="244" width="3" height="15" fill="rgb(247,113,16)"/><text x="1184.00" y="254.50"></text></g><g><title>0x7fa87b405ba5 (libm-2.29.so) (1 samples, 0.24%)</title><rect x="1181" y="260" width="3" height="15" fill="rgb(227,203,43)"/><text x="1184.00" y="270.50"></text></g><g><title>0x7fa83c7b802d (?) (1 samples, 0.24%)</title><rect x="1184" y="564" width="3" height="15" fill="rgb(208,148,6)"/><text x="1187.00" y="574.50"></text></g><g><title>0x7fa83c952e70 (?) (1 samples, 0.24%)</title><rect x="1184" y="580" width="3" height="15" fill="rgb(243,136,23)"/><text x="1187.00" y="590.50"></text></g><g><title>all (416 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,143,0)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (416 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,134,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (164 samples, 39.42%)</title><rect x="724" y="68" width="466" height="15" fill="rgb(253,144,34)"/><text x="727.00" y="78.50">profile_skl (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py) (164 samples, 39.42%)</title><rect x="724" y="84" width="466" height="15" fill="rgb(242,96,16)"/><text x="727.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.48%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(241,141,49)"/><text x="1187.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (2 samples, 0.48%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(246,151,1)"/><text x="1187.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (2 samples, 0.48%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(212,141,41)"/><text x="1187.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(206,182,7)"/><text x="1187.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(240,134,14)"/><text x="1187.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(235,44,8)"/><text x="1187.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(205,42,1)"/><text x="1187.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="212" width="6" height="15" fill="rgb(242,111,6)"/><text x="1187.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (2 samples, 0.48%)</title><rect x="1184" y="228" width="6" height="15" fill="rgb(218,8,33)"/><text x="1187.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="244" width="6" height="15" fill="rgb(216,163,35)"/><text x="1187.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="260" width="6" height="15" fill="rgb(252,225,22)"/><text x="1187.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="276" width="6" height="15" fill="rgb(225,147,20)"/><text x="1187.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.48%)</title><rect x="1184" y="292" width="6" height="15" fill="rgb(208,19,54)"/><text x="1187.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.48%)</title><rect x="1184" y="308" width="6" height="15" fill="rgb(220,221,30)"/><text x="1187.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (2 samples, 0.48%)</title><rect x="1184" y="324" width="6" height="15" fill="rgb(254,189,54)"/><text x="1187.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py) (2 samples, 0.48%)</title><rect x="1184" y="340" width="6" height="15" fill="rgb(219,105,33)"/><text x="1187.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py) (2 samples, 0.48%)</title><rect x="1184" y="356" width="6" height="15" fill="rgb(239,163,37)"/><text x="1187.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py) (2 samples, 0.48%)</title><rect x="1184" y="372" width="6" height="15" fill="rgb(214,172,25)"/><text x="1187.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c) (2 samples, 0.48%)</title><rect x="1184" y="388" width="6" height="15" fill="rgb(243,192,35)"/><text x="1187.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="404" width="6" height="15" fill="rgb(246,110,47)"/><text x="1187.00" y="414.50"></text></g><g><title>0x7fa87b4bb995 (libdl-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="420" width="6" height="15" fill="rgb(220,122,33)"/><text x="1187.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="436" width="6" height="15" fill="rgb(237,216,33)"/><text x="1187.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="452" width="6" height="15" fill="rgb(254,210,27)"/><text x="1187.00" y="462.50"></text></g><g><title>0x7fa87b4bb258 (libdl-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="468" width="6" height="15" fill="rgb(238,213,44)"/><text x="1187.00" y="478.50"></text></g><g><title>0x7fa87b508d7a (ld-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="484" width="6" height="15" fill="rgb(214,35,22)"/><text x="1187.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="500" width="6" height="15" fill="rgb(254,99,22)"/><text x="1187.00" y="510.50"></text></g><g><title>0x7fa87b509473 (ld-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="516" width="6" height="15" fill="rgb(205,120,22)"/><text x="1187.00" y="526.50"></text></g><g><title>0x7fa87b5056b9 (ld-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="532" width="6" height="15" fill="rgb(205,6,26)"/><text x="1187.00" y="542.50"></text></g><g><title>0x7fa87b5055ba (ld-2.29.so) (2 samples, 0.48%)</title><rect x="1184" y="548" width="6" height="15" fill="rgb(235,104,25)"/><text x="1187.00" y="558.50"></text></g><g><title>_GLOBAL__sub_I_updater_colmaker.cc (libxgboost.so) (1 samples, 0.24%)</title><rect x="1187" y="564" width="3" height="15" fill="rgb(238,154,1)"/><text x="1190.00" y="574.50"></text></g><g><title>dmlc::Registry&lt;xgboost::TreeUpdaterReg&gt;::__REGISTER__ (libxgboost.so) (1 samples, 0.24%)</title><rect x="1187" y="580" width="3" height="15" fill="rgb(238,221,44)"/><text x="1190.00" y="590.50"></text></g><g><title>std::map&lt;std::string, xgboost::TreeUpdaterReg*, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, xgboost::TreeUpdaterReg*&gt; &gt; &gt;::operator[] (libxgboost.so) (1 samples, 0.24%)</title><rect x="1187" y="596" width="3" height="15" fill="rgb(226,22,40)"/><text x="1190.00" y="606.50"></text></g><g><title>std::_Rb_tree&lt;std::string, std::pair&lt;std::string const, xgboost::TreeUpdaterReg*&gt;, std::_Select1st&lt;std::pair&lt;std::string const, xgboost::TreeUpdaterReg*&gt; &gt;, std::less&lt;std::string&gt;, std::allocator&lt;std::pair&lt;std::string const, xgboost::TreeUpdaterReg*&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::string const&amp;&gt;, std::tuple&lt;&gt; &gt; (libxgboost.so) (1 samples, 0.24%)</title><rect x="1187" y="612" width="3" height="15" fill="rgb(246,37,29)"/><text x="1190.00" y="622.50"></text></g><g><title>std::string::string (libstdc++.so.6.0.28) (1 samples, 0.24%)</title><rect x="1187" y="628" width="3" height="15" fill="rgb(226,70,37)"/><text x="1190.00" y="638.50"></text></g></g></svg>