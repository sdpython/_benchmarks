<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1990" onload="init(evt)" viewBox="0 0 1200 1990" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1990" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1973.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1973.00"> </text><g id="frames"><g><title>array_reshape (methods.c:195) (1 samples, 0.36%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(238,19,42)"/><text x="13.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.36%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(214,72,18)"/><text x="13.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:18) (2 samples, 0.71%)</title><rect x="10" y="100" width="8" height="15" fill="rgb(243,106,3)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.71%)</title><rect x="10" y="116" width="8" height="15" fill="rgb(235,175,6)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (2 samples, 0.71%)</title><rect x="10" y="132" width="8" height="15" fill="rgb(243,159,45)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (2 samples, 0.71%)</title><rect x="10" y="148" width="8" height="15" fill="rgb(237,194,44)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.71%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(241,130,36)"/><text x="13.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.36%)</title><rect x="14" y="180" width="4" height="15" fill="rgb(213,143,39)"/><text x="17.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.36%)</title><rect x="14" y="196" width="4" height="15" fill="rgb(211,56,21)"/><text x="17.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.36%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(213,217,32)"/><text x="17.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.36%)</title><rect x="14" y="228" width="4" height="15" fill="rgb(226,89,21)"/><text x="17.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.36%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(249,175,41)"/><text x="17.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.36%)</title><rect x="14" y="260" width="4" height="15" fill="rgb(247,104,19)"/><text x="17.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.36%)</title><rect x="14" y="276" width="4" height="15" fill="rgb(223,147,20)"/><text x="17.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.36%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(212,113,38)"/><text x="17.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.36%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(212,98,7)"/><text x="17.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.36%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(215,180,32)"/><text x="17.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.36%)</title><rect x="14" y="340" width="4" height="15" fill="rgb(218,138,45)"/><text x="17.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 1.07%)</title><rect x="22" y="164" width="13" height="15" fill="rgb(216,134,19)"/><text x="25.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (3 samples, 1.07%)</title><rect x="22" y="180" width="13" height="15" fill="rgb(237,111,53)"/><text x="25.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.36%)</title><rect x="35" y="164" width="4" height="15" fill="rgb(240,52,13)"/><text x="38.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.36%)</title><rect x="43" y="180" width="4" height="15" fill="rgb(238,119,15)"/><text x="46.00" y="190.50"></text></g><g><title>0x7f6c0f1851ea (libc-2.29.so) (1 samples, 0.36%)</title><rect x="52" y="196" width="4" height="15" fill="rgb(227,25,13)"/><text x="55.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.07%)</title><rect x="47" y="180" width="13" height="15" fill="rgb(214,90,22)"/><text x="50.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.36%)</title><rect x="56" y="196" width="4" height="15" fill="rgb(222,82,37)"/><text x="59.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 3.21%)</title><rect x="39" y="164" width="38" height="15" fill="rgb(252,125,10)"/><text x="42.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (4 samples, 1.43%)</title><rect x="60" y="180" width="17" height="15" fill="rgb(242,41,13)"/><text x="63.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(226,75,25)"/><text x="76.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (15 samples, 5.36%)</title><rect x="18" y="148" width="63" height="15" fill="rgb(245,169,11)"/><text x="21.00" y="158.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.36%)</title><rect x="77" y="164" width="4" height="15" fill="rgb(206,190,32)"/><text x="80.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.36%)</title><rect x="94" y="212" width="4" height="15" fill="rgb(232,84,29)"/><text x="97.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.36%)</title><rect x="98" y="228" width="4" height="15" fill="rgb(228,180,44)"/><text x="101.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.71%)</title><rect x="98" y="212" width="8" height="15" fill="rgb(209,7,4)"/><text x="101.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.36%)</title><rect x="102" y="228" width="4" height="15" fill="rgb(218,40,6)"/><text x="105.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (7 samples, 2.50%)</title><rect x="90" y="180" width="29" height="15" fill="rgb(213,186,51)"/><text x="93.00" y="190.50">de..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.50%)</title><rect x="90" y="196" width="29" height="15" fill="rgb(251,66,32)"/><text x="93.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 1.07%)</title><rect x="106" y="212" width="13" height="15" fill="rgb(231,5,29)"/><text x="109.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.36%)</title><rect x="123" y="196" width="5" height="15" fill="rgb(205,38,5)"/><text x="126.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.71%)</title><rect x="128" y="196" width="8" height="15" fill="rgb(211,159,47)"/><text x="131.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.36%)</title><rect x="132" y="212" width="4" height="15" fill="rgb(218,120,16)"/><text x="135.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.36%)</title><rect x="149" y="212" width="4" height="15" fill="rgb(239,34,31)"/><text x="152.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.36%)</title><rect x="153" y="212" width="4" height="15" fill="rgb(232,115,39)"/><text x="156.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.36%)</title><rect x="157" y="212" width="4" height="15" fill="rgb(229,182,51)"/><text x="160.00" y="222.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.36%)</title><rect x="161" y="212" width="4" height="15" fill="rgb(205,60,50)"/><text x="164.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (8 samples, 2.86%)</title><rect x="136" y="196" width="34" height="15" fill="rgb(238,132,9)"/><text x="139.00" y="206.50">ch..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.36%)</title><rect x="165" y="212" width="5" height="15" fill="rgb(239,81,8)"/><text x="168.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.14%)</title><rect x="170" y="196" width="25" height="15" fill="rgb(224,77,52)"/><text x="173.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.43%)</title><rect x="178" y="212" width="17" height="15" fill="rgb(208,106,29)"/><text x="181.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.43%)</title><rect x="178" y="228" width="17" height="15" fill="rgb(246,158,37)"/><text x="181.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.36%)</title><rect x="195" y="196" width="4" height="15" fill="rgb(228,175,0)"/><text x="198.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.36%)</title><rect x="199" y="212" width="4" height="15" fill="rgb(228,154,49)"/><text x="202.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.71%)</title><rect x="199" y="196" width="9" height="15" fill="rgb(239,201,49)"/><text x="202.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.36%)</title><rect x="203" y="212" width="5" height="15" fill="rgb(250,167,38)"/><text x="206.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.36%)</title><rect x="208" y="196" width="4" height="15" fill="rgb(253,84,36)"/><text x="211.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.36%)</title><rect x="212" y="196" width="4" height="15" fill="rgb(229,55,42)"/><text x="215.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.71%)</title><rect x="216" y="196" width="8" height="15" fill="rgb(236,1,23)"/><text x="219.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.36%)</title><rect x="220" y="212" width="4" height="15" fill="rgb(222,43,32)"/><text x="223.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.36%)</title><rect x="220" y="228" width="4" height="15" fill="rgb(214,31,3)"/><text x="223.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.36%)</title><rect x="229" y="228" width="4" height="15" fill="rgb(242,74,16)"/><text x="232.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.71%)</title><rect x="229" y="212" width="8" height="15" fill="rgb(227,91,20)"/><text x="232.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.36%)</title><rect x="233" y="228" width="4" height="15" fill="rgb(247,183,44)"/><text x="236.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (5 samples, 1.79%)</title><rect x="224" y="196" width="22" height="15" fill="rgb(238,84,3)"/><text x="227.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.71%)</title><rect x="237" y="212" width="9" height="15" fill="rgb(243,46,14)"/><text x="240.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.36%)</title><rect x="241" y="228" width="5" height="15" fill="rgb(248,211,28)"/><text x="244.00" y="238.50"></text></g><g><title>0x7f6c0f242df0 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="258" y="228" width="4" height="15" fill="rgb(234,174,18)"/><text x="261.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.79%)</title><rect x="246" y="212" width="21" height="15" fill="rgb(232,168,45)"/><text x="249.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.36%)</title><rect x="262" y="228" width="5" height="15" fill="rgb(232,121,8)"/><text x="265.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (40 samples, 14.29%)</title><rect x="119" y="180" width="169" height="15" fill="rgb(211,182,27)"/><text x="122.00" y="190.50">decision_function (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 3.57%)</title><rect x="246" y="196" width="42" height="15" fill="rgb(214,179,42)"/><text x="249.00" y="206.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.79%)</title><rect x="267" y="212" width="21" height="15" fill="rgb(243,141,27)"/><text x="270.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.07%)</title><rect x="275" y="228" width="13" height="15" fill="rgb(252,0,16)"/><text x="278.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.71%)</title><rect x="279" y="244" width="9" height="15" fill="rgb(224,47,29)"/><text x="282.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:270) (1 samples, 0.36%)</title><rect x="288" y="180" width="4" height="15" fill="rgb(223,112,7)"/><text x="291.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.36%)</title><rect x="292" y="180" width="4" height="15" fill="rgb(246,198,35)"/><text x="295.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.36%)</title><rect x="292" y="196" width="4" height="15" fill="rgb(223,159,33)"/><text x="295.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.36%)</title><rect x="292" y="212" width="4" height="15" fill="rgb(240,130,2)"/><text x="295.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.36%)</title><rect x="292" y="228" width="4" height="15" fill="rgb(246,173,50)"/><text x="295.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.36%)</title><rect x="292" y="244" width="4" height="15" fill="rgb(221,226,32)"/><text x="295.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:136) (1 samples, 0.36%)</title><rect x="292" y="260" width="4" height="15" fill="rgb(227,163,7)"/><text x="295.00" y="270.50"></text></g><g><title>array_add (number.c:326) (2 samples, 0.71%)</title><rect x="296" y="196" width="9" height="15" fill="rgb(227,85,48)"/><text x="299.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.36%)</title><rect x="300" y="212" width="5" height="15" fill="rgb(239,122,9)"/><text x="303.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.36%)</title><rect x="300" y="228" width="5" height="15" fill="rgb(219,73,37)"/><text x="303.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.36%)</title><rect x="305" y="244" width="4" height="15" fill="rgb(223,24,23)"/><text x="308.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.36%)</title><rect x="305" y="260" width="4" height="15" fill="rgb(212,63,6)"/><text x="308.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.36%)</title><rect x="309" y="276" width="4" height="15" fill="rgb(206,68,25)"/><text x="312.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.71%)</title><rect x="309" y="260" width="8" height="15" fill="rgb(222,165,0)"/><text x="312.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.36%)</title><rect x="313" y="276" width="4" height="15" fill="rgb(243,115,42)"/><text x="316.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1701) (1 samples, 0.36%)</title><rect x="313" y="292" width="4" height="15" fill="rgb(216,164,31)"/><text x="316.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2045) (1 samples, 0.36%)</title><rect x="317" y="292" width="4" height="15" fill="rgb(205,36,2)"/><text x="320.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.71%)</title><rect x="317" y="260" width="9" height="15" fill="rgb(228,72,1)"/><text x="320.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.71%)</title><rect x="317" y="276" width="9" height="15" fill="rgb(217,8,9)"/><text x="320.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.36%)</title><rect x="321" y="292" width="5" height="15" fill="rgb(213,32,31)"/><text x="324.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.36%)</title><rect x="326" y="276" width="4" height="15" fill="rgb(244,195,43)"/><text x="329.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.36%)</title><rect x="326" y="292" width="4" height="15" fill="rgb(214,82,12)"/><text x="329.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.36%)</title><rect x="326" y="308" width="4" height="15" fill="rgb(244,159,35)"/><text x="329.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.36%)</title><rect x="326" y="324" width="4" height="15" fill="rgb(219,13,33)"/><text x="329.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.50%)</title><rect x="305" y="212" width="29" height="15" fill="rgb(246,186,46)"/><text x="308.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.50%)</title><rect x="305" y="228" width="29" height="15" fill="rgb(240,37,1)"/><text x="308.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 2.14%)</title><rect x="309" y="244" width="25" height="15" fill="rgb(237,153,15)"/><text x="312.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.71%)</title><rect x="326" y="260" width="8" height="15" fill="rgb(237,113,54)"/><text x="329.00" y="270.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.36%)</title><rect x="330" y="276" width="4" height="15" fill="rgb(239,59,19)"/><text x="333.00" y="286.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1857) (1 samples, 0.36%)</title><rect x="330" y="292" width="4" height="15" fill="rgb(250,139,3)"/><text x="333.00" y="302.50"></text></g><g><title>array_add (number.c:330) (8 samples, 2.86%)</title><rect x="305" y="196" width="33" height="15" fill="rgb(225,5,51)"/><text x="308.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.36%)</title><rect x="334" y="212" width="4" height="15" fill="rgb(241,181,26)"/><text x="337.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.36%)</title><rect x="334" y="228" width="4" height="15" fill="rgb(225,63,54)"/><text x="337.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.07%)</title><rect x="338" y="196" width="13" height="15" fill="rgb(210,96,31)"/><text x="341.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.07%)</title><rect x="338" y="212" width="13" height="15" fill="rgb(226,133,2)"/><text x="341.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (3 samples, 1.07%)</title><rect x="338" y="228" width="13" height="15" fill="rgb(238,60,0)"/><text x="341.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.36%)</title><rect x="355" y="244" width="4" height="15" fill="rgb(230,49,43)"/><text x="358.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.36%)</title><rect x="355" y="260" width="4" height="15" fill="rgb(220,96,8)"/><text x="358.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2791) (1 samples, 0.36%)</title><rect x="359" y="244" width="5" height="15" fill="rgb(214,12,48)"/><text x="362.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.36%)</title><rect x="359" y="260" width="5" height="15" fill="rgb(213,136,0)"/><text x="362.00" y="270.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.36%)</title><rect x="359" y="276" width="5" height="15" fill="rgb(227,142,3)"/><text x="362.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.36%)</title><rect x="364" y="260" width="4" height="15" fill="rgb(246,192,40)"/><text x="367.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.36%)</title><rect x="364" y="276" width="4" height="15" fill="rgb(234,199,10)"/><text x="367.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:522) (1 samples, 0.36%)</title><rect x="368" y="260" width="4" height="15" fill="rgb(207,37,41)"/><text x="371.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (3 samples, 1.07%)</title><rect x="364" y="244" width="12" height="15" fill="rgb(236,87,29)"/><text x="367.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.36%)</title><rect x="372" y="260" width="4" height="15" fill="rgb(206,190,44)"/><text x="375.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.36%)</title><rect x="372" y="276" width="4" height="15" fill="rgb(241,148,25)"/><text x="375.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.36%)</title><rect x="372" y="292" width="4" height="15" fill="rgb(209,140,18)"/><text x="375.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.36%)</title><rect x="372" y="308" width="4" height="15" fill="rgb(206,180,27)"/><text x="375.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:564) (1 samples, 0.36%)</title><rect x="372" y="324" width="4" height="15" fill="rgb(225,164,43)"/><text x="375.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2846) (1 samples, 0.36%)</title><rect x="376" y="244" width="4" height="15" fill="rgb(234,71,19)"/><text x="379.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.36%)</title><rect x="376" y="260" width="4" height="15" fill="rgb(247,23,42)"/><text x="379.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.36%)</title><rect x="380" y="244" width="5" height="15" fill="rgb(219,139,26)"/><text x="383.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.36%)</title><rect x="380" y="260" width="5" height="15" fill="rgb(219,24,25)"/><text x="383.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (1 samples, 0.36%)</title><rect x="380" y="276" width="5" height="15" fill="rgb(254,93,30)"/><text x="383.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.36%)</title><rect x="380" y="292" width="5" height="15" fill="rgb(218,93,34)"/><text x="383.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.36%)</title><rect x="380" y="308" width="5" height="15" fill="rgb(249,38,13)"/><text x="383.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.36%)</title><rect x="380" y="324" width="5" height="15" fill="rgb(240,94,11)"/><text x="383.00" y="334.50"></text></g><g><title>0x7f6c0e3874f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="380" y="340" width="5" height="15" fill="rgb(235,178,48)"/><text x="383.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2919) (1 samples, 0.36%)</title><rect x="385" y="244" width="4" height="15" fill="rgb(226,1,53)"/><text x="388.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.36%)</title><rect x="389" y="244" width="4" height="15" fill="rgb(211,194,3)"/><text x="392.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:152) (1 samples, 0.36%)</title><rect x="389" y="260" width="4" height="15" fill="rgb(220,96,24)"/><text x="392.00" y="270.50"></text></g><g><title>0x7f6c0f18514e (libc-2.29.so) (1 samples, 0.36%)</title><rect x="389" y="276" width="4" height="15" fill="rgb(239,85,36)"/><text x="392.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 3.93%)</title><rect x="351" y="196" width="46" height="15" fill="rgb(245,162,27)"/><text x="354.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.57%)</title><rect x="355" y="212" width="42" height="15" fill="rgb(242,155,49)"/><text x="358.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (10 samples, 3.57%)</title><rect x="355" y="228" width="42" height="15" fill="rgb(225,87,13)"/><text x="358.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.36%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(230,218,47)"/><text x="396.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.36%)</title><rect x="393" y="260" width="4" height="15" fill="rgb(239,52,25)"/><text x="396.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.36%)</title><rect x="393" y="276" width="4" height="15" fill="rgb(249,158,46)"/><text x="396.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.36%)</title><rect x="393" y="292" width="4" height="15" fill="rgb(217,171,48)"/><text x="396.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (25 samples, 8.93%)</title><rect x="296" y="180" width="105" height="15" fill="rgb(254,103,40)"/><text x="299.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.36%)</title><rect x="397" y="196" width="4" height="15" fill="rgb(229,174,49)"/><text x="400.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (77 samples, 27.50%)</title><rect x="81" y="164" width="325" height="15" fill="rgb(251,86,26)"/><text x="84.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_ba..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.36%)</title><rect x="401" y="180" width="5" height="15" fill="rgb(211,40,53)"/><text x="404.00" y="190.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.36%)</title><rect x="406" y="212" width="4" height="15" fill="rgb(234,82,7)"/><text x="409.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.36%)</title><rect x="406" y="228" width="4" height="15" fill="rgb(227,22,26)"/><text x="409.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.71%)</title><rect x="406" y="180" width="8" height="15" fill="rgb(214,164,3)"/><text x="409.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.71%)</title><rect x="406" y="196" width="8" height="15" fill="rgb(245,176,43)"/><text x="409.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.36%)</title><rect x="410" y="212" width="4" height="15" fill="rgb(250,66,48)"/><text x="413.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.36%)</title><rect x="414" y="196" width="4" height="15" fill="rgb(222,144,30)"/><text x="417.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1986) (1 samples, 0.36%)</title><rect x="414" y="212" width="4" height="15" fill="rgb(251,171,50)"/><text x="417.00" y="222.50"></text></g><g><title>0x7f6c0f185124 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="414" y="228" width="4" height="15" fill="rgb(230,119,1)"/><text x="417.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.36%)</title><rect x="418" y="212" width="5" height="15" fill="rgb(209,21,40)"/><text x="421.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.36%)</title><rect x="418" y="228" width="5" height="15" fill="rgb(232,146,26)"/><text x="421.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.36%)</title><rect x="418" y="244" width="5" height="15" fill="rgb(234,82,46)"/><text x="421.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.36%)</title><rect x="418" y="260" width="5" height="15" fill="rgb(212,66,20)"/><text x="421.00" y="270.50"></text></g><g><title>0x7f6bf156a9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.71%)</title><rect x="423" y="244" width="8" height="15" fill="rgb(254,35,13)"/><text x="426.00" y="254.50"></text></g><g><title>0x7f6bf158b265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.71%)</title><rect x="423" y="260" width="8" height="15" fill="rgb(230,100,4)"/><text x="426.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (2 samples, 0.71%)</title><rect x="423" y="276" width="8" height="15" fill="rgb(224,74,50)"/><text x="426.00" y="286.50"></text></g><g><title>0x7f6c0f336c0c (libm-2.29.so) (1 samples, 0.36%)</title><rect x="427" y="292" width="4" height="15" fill="rgb(225,80,32)"/><text x="430.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.43%)</title><rect x="418" y="196" width="17" height="15" fill="rgb(209,31,52)"/><text x="421.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 1.07%)</title><rect x="423" y="212" width="12" height="15" fill="rgb(212,127,12)"/><text x="426.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (3 samples, 1.07%)</title><rect x="423" y="228" width="12" height="15" fill="rgb(207,165,11)"/><text x="426.00" y="238.50"></text></g><g><title>0x7f6bf158b13e (?) (1 samples, 0.36%)</title><rect x="431" y="244" width="4" height="15" fill="rgb(246,78,52)"/><text x="434.00" y="254.50"></text></g><g><title>0x7f6bf158aef7 (?) (1 samples, 0.36%)</title><rect x="431" y="260" width="4" height="15" fill="rgb(252,5,18)"/><text x="434.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 2.86%)</title><rect x="406" y="164" width="33" height="15" fill="rgb(252,5,8)"/><text x="409.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.14%)</title><rect x="414" y="180" width="25" height="15" fill="rgb(205,17,22)"/><text x="417.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.36%)</title><rect x="435" y="196" width="4" height="15" fill="rgb(221,89,16)"/><text x="438.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.36%)</title><rect x="439" y="164" width="5" height="15" fill="rgb(215,63,42)"/><text x="442.00" y="174.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.36%)</title><rect x="456" y="228" width="4" height="15" fill="rgb(253,148,25)"/><text x="459.00" y="238.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.71%)</title><rect x="460" y="260" width="9" height="15" fill="rgb(209,95,43)"/><text x="463.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.71%)</title><rect x="460" y="276" width="9" height="15" fill="rgb(228,66,19)"/><text x="463.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.36%)</title><rect x="465" y="292" width="4" height="15" fill="rgb(208,143,5)"/><text x="468.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.36%)</title><rect x="465" y="308" width="4" height="15" fill="rgb(207,71,31)"/><text x="468.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.36%)</title><rect x="469" y="276" width="4" height="15" fill="rgb(239,80,16)"/><text x="472.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.36%)</title><rect x="469" y="292" width="4" height="15" fill="rgb(216,171,38)"/><text x="472.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.36%)</title><rect x="469" y="308" width="4" height="15" fill="rgb(249,166,17)"/><text x="472.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.36%)</title><rect x="469" y="324" width="4" height="15" fill="rgb(211,27,19)"/><text x="472.00" y="334.50"></text></g><g><title>0x7f6c0f11ca19 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="469" y="340" width="4" height="15" fill="rgb(225,158,10)"/><text x="472.00" y="350.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:735) (1 samples, 0.36%)</title><rect x="469" y="356" width="4" height="15" fill="rgb(205,228,19)"/><text x="472.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.36%)</title><rect x="473" y="292" width="4" height="15" fill="rgb(223,65,13)"/><text x="476.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.36%)</title><rect x="477" y="292" width="5" height="15" fill="rgb(243,117,5)"/><text x="480.00" y="302.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:785) (1 samples, 0.36%)</title><rect x="477" y="308" width="5" height="15" fill="rgb(234,53,19)"/><text x="480.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.36%)</title><rect x="482" y="292" width="4" height="15" fill="rgb(240,78,20)"/><text x="485.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.36%)</title><rect x="482" y="308" width="4" height="15" fill="rgb(208,196,14)"/><text x="485.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.36%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(215,94,28)"/><text x="485.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.36%)</title><rect x="482" y="340" width="4" height="15" fill="rgb(210,132,0)"/><text x="485.00" y="350.50"></text></g><g><title>array_sum (methods.c:2215) (9 samples, 3.21%)</title><rect x="452" y="180" width="38" height="15" fill="rgb(253,89,48)"/><text x="455.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (9 samples, 3.21%)</title><rect x="452" y="196" width="38" height="15" fill="rgb(217,107,12)"/><text x="455.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 3.21%)</title><rect x="452" y="212" width="38" height="15" fill="rgb(235,30,47)"/><text x="455.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.50%)</title><rect x="460" y="228" width="30" height="15" fill="rgb(241,60,26)"/><text x="463.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (7 samples, 2.50%)</title><rect x="460" y="244" width="30" height="15" fill="rgb(246,48,41)"/><text x="463.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.79%)</title><rect x="469" y="260" width="21" height="15" fill="rgb(220,46,50)"/><text x="472.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 1.43%)</title><rect x="473" y="276" width="17" height="15" fill="rgb(247,98,49)"/><text x="476.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.36%)</title><rect x="486" y="292" width="4" height="15" fill="rgb(232,145,31)"/><text x="489.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.36%)</title><rect x="486" y="308" width="4" height="15" fill="rgb(250,130,28)"/><text x="489.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.36%)</title><rect x="490" y="196" width="4" height="15" fill="rgb(240,122,13)"/><text x="493.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.36%)</title><rect x="490" y="212" width="4" height="15" fill="rgb(230,123,50)"/><text x="493.00" y="222.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.36%)</title><rect x="494" y="212" width="4" height="15" fill="rgb(238,166,25)"/><text x="497.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.71%)</title><rect x="494" y="196" width="9" height="15" fill="rgb(228,104,4)"/><text x="497.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.36%)</title><rect x="498" y="212" width="5" height="15" fill="rgb(238,198,9)"/><text x="501.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.36%)</title><rect x="498" y="228" width="5" height="15" fill="rgb(239,97,53)"/><text x="501.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.36%)</title><rect x="498" y="244" width="5" height="15" fill="rgb(221,200,21)"/><text x="501.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.36%)</title><rect x="498" y="260" width="5" height="15" fill="rgb(236,8,40)"/><text x="501.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.36%)</title><rect x="503" y="196" width="4" height="15" fill="rgb(251,38,34)"/><text x="506.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.36%)</title><rect x="503" y="212" width="4" height="15" fill="rgb(220,215,7)"/><text x="506.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.36%)</title><rect x="507" y="228" width="4" height="15" fill="rgb(236,209,14)"/><text x="510.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.36%)</title><rect x="507" y="244" width="4" height="15" fill="rgb(214,197,33)"/><text x="510.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.36%)</title><rect x="511" y="228" width="4" height="15" fill="rgb(226,174,44)"/><text x="514.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:330) (1 samples, 0.36%)</title><rect x="511" y="244" width="4" height="15" fill="rgb(219,105,17)"/><text x="514.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (119 samples, 42.50%)</title><rect x="18" y="132" width="501" height="15" fill="rgb(253,227,28)"/><text x="21.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (104 samples, 37.14%)</title><rect x="81" y="148" width="438" height="15" fill="rgb(221,176,28)"/><text x="84.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (18 samples, 6.43%)</title><rect x="444" y="164" width="75" height="15" fill="rgb(248,60,38)"/><text x="447.00" y="174.50">_predict..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.50%)</title><rect x="490" y="180" width="29" height="15" fill="rgb(221,171,2)"/><text x="493.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.07%)</title><rect x="507" y="196" width="12" height="15" fill="rgb(227,208,45)"/><text x="510.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.07%)</title><rect x="507" y="212" width="12" height="15" fill="rgb(234,150,51)"/><text x="510.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.36%)</title><rect x="515" y="228" width="4" height="15" fill="rgb(234,220,30)"/><text x="518.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.36%)</title><rect x="515" y="244" width="4" height="15" fill="rgb(218,16,41)"/><text x="518.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:38) (122 samples, 43.57%)</title><rect x="10" y="52" width="514" height="15" fill="rgb(235,98,31)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:37) (122 samples, 43.57%)</title><rect x="10" y="68" width="514" height="15" fill="rgb(213,211,21)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_o..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:29) (122 samples, 43.57%)</title><rect x="10" y="84" width="514" height="15" fill="rgb(254,209,11)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:23) (120 samples, 42.86%)</title><rect x="18" y="100" width="506" height="15" fill="rgb(247,160,3)"/><text x="21.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (120 samples, 42.86%)</title><rect x="18" y="116" width="506" height="15" fill="rgb(236,175,40)"/><text x="21.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.36%)</title><rect x="519" y="132" width="5" height="15" fill="rgb(249,111,10)"/><text x="522.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:1) (1 samples, 0.36%)</title><rect x="524" y="148" width="4" height="15" fill="rgb(248,139,45)"/><text x="527.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="524" y="164" width="4" height="15" fill="rgb(205,86,36)"/><text x="527.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="524" y="180" width="4" height="15" fill="rgb(208,168,51)"/><text x="527.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="524" y="196" width="4" height="15" fill="rgb(235,214,21)"/><text x="527.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="524" y="212" width="4" height="15" fill="rgb(241,2,9)"/><text x="527.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="228" width="4" height="15" fill="rgb(224,149,47)"/><text x="527.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.36%)</title><rect x="524" y="244" width="4" height="15" fill="rgb(249,19,29)"/><text x="527.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="524" y="260" width="4" height="15" fill="rgb(218,202,5)"/><text x="527.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="276" width="4" height="15" fill="rgb(231,93,14)"/><text x="527.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="524" y="292" width="4" height="15" fill="rgb(208,138,28)"/><text x="527.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="524" y="308" width="4" height="15" fill="rgb(254,10,52)"/><text x="527.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="524" y="324" width="4" height="15" fill="rgb(245,32,14)"/><text x="527.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="524" y="340" width="4" height="15" fill="rgb(215,57,0)"/><text x="527.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="356" width="4" height="15" fill="rgb(217,36,17)"/><text x="527.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.36%)</title><rect x="524" y="372" width="4" height="15" fill="rgb(250,97,48)"/><text x="527.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="524" y="388" width="4" height="15" fill="rgb(238,45,32)"/><text x="527.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="404" width="4" height="15" fill="rgb(208,213,49)"/><text x="527.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="524" y="420" width="4" height="15" fill="rgb(247,58,44)"/><text x="527.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="524" y="436" width="4" height="15" fill="rgb(208,25,29)"/><text x="527.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="524" y="452" width="4" height="15" fill="rgb(210,208,33)"/><text x="527.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="524" y="468" width="4" height="15" fill="rgb(254,208,33)"/><text x="527.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="484" width="4" height="15" fill="rgb(216,125,36)"/><text x="527.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.36%)</title><rect x="524" y="500" width="4" height="15" fill="rgb(252,77,17)"/><text x="527.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="524" y="516" width="4" height="15" fill="rgb(247,1,8)"/><text x="527.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="524" y="532" width="4" height="15" fill="rgb(227,209,45)"/><text x="527.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="524" y="548" width="4" height="15" fill="rgb(224,43,32)"/><text x="527.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="524" y="564" width="4" height="15" fill="rgb(214,37,1)"/><text x="527.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="580" width="4" height="15" fill="rgb(224,221,45)"/><text x="527.00" y="590.50"></text></g><g><title>0x7f6c01a2b585 (?) (1 samples, 0.36%)</title><rect x="524" y="596" width="4" height="15" fill="rgb(222,106,54)"/><text x="527.00" y="606.50"></text></g><g><title>0x7f6c01a31075 (?) (1 samples, 0.36%)</title><rect x="524" y="612" width="4" height="15" fill="rgb(230,205,53)"/><text x="527.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="524" y="628" width="4" height="15" fill="rgb(232,78,16)"/><text x="527.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="524" y="644" width="4" height="15" fill="rgb(214,105,10)"/><text x="527.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="524" y="660" width="4" height="15" fill="rgb(221,155,44)"/><text x="527.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.36%)</title><rect x="524" y="676" width="4" height="15" fill="rgb(240,22,52)"/><text x="527.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="524" y="692" width="4" height="15" fill="rgb(250,13,20)"/><text x="527.00" y="702.50"></text></g><g><title>0x7f6c01368543 (?) (1 samples, 0.36%)</title><rect x="524" y="708" width="4" height="15" fill="rgb(216,40,23)"/><text x="527.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.36%)</title><rect x="524" y="724" width="4" height="15" fill="rgb(234,190,24)"/><text x="527.00" y="734.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.36%)</title><rect x="524" y="740" width="4" height="15" fill="rgb(232,141,16)"/><text x="527.00" y="750.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:176) (1 samples, 0.36%)</title><rect x="524" y="756" width="4" height="15" fill="rgb(215,208,26)"/><text x="527.00" y="766.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.36%)</title><rect x="528" y="852" width="4" height="15" fill="rgb(210,112,20)"/><text x="531.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.36%)</title><rect x="528" y="868" width="4" height="15" fill="rgb(230,50,12)"/><text x="531.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.36%)</title><rect x="528" y="884" width="4" height="15" fill="rgb(253,195,14)"/><text x="531.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.36%)</title><rect x="528" y="900" width="4" height="15" fill="rgb(251,15,23)"/><text x="531.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.36%)</title><rect x="528" y="916" width="4" height="15" fill="rgb(207,100,22)"/><text x="531.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.36%)</title><rect x="528" y="932" width="4" height="15" fill="rgb(248,141,14)"/><text x="531.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2585) (1 samples, 0.36%)</title><rect x="528" y="948" width="4" height="15" fill="rgb(253,38,22)"/><text x="531.00" y="958.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.36%)</title><rect x="528" y="964" width="4" height="15" fill="rgb(213,23,16)"/><text x="531.00" y="974.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.36%)</title><rect x="528" y="980" width="4" height="15" fill="rgb(212,182,46)"/><text x="531.00" y="990.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.36%)</title><rect x="528" y="996" width="4" height="15" fill="rgb(217,75,23)"/><text x="531.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.36%)</title><rect x="532" y="1044" width="4" height="15" fill="rgb(208,23,42)"/><text x="535.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.07%)</title><rect x="528" y="820" width="13" height="15" fill="rgb(230,64,35)"/><text x="531.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.07%)</title><rect x="528" y="836" width="13" height="15" fill="rgb(245,27,50)"/><text x="531.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.71%)</title><rect x="532" y="852" width="9" height="15" fill="rgb(252,204,9)"/><text x="535.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.71%)</title><rect x="532" y="868" width="9" height="15" fill="rgb(218,227,50)"/><text x="535.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.71%)</title><rect x="532" y="884" width="9" height="15" fill="rgb(208,22,5)"/><text x="535.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.71%)</title><rect x="532" y="900" width="9" height="15" fill="rgb(235,32,53)"/><text x="535.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.71%)</title><rect x="532" y="916" width="9" height="15" fill="rgb(207,22,39)"/><text x="535.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.71%)</title><rect x="532" y="932" width="9" height="15" fill="rgb(232,76,35)"/><text x="535.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.71%)</title><rect x="532" y="948" width="9" height="15" fill="rgb(252,6,6)"/><text x="535.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.71%)</title><rect x="532" y="964" width="9" height="15" fill="rgb(234,179,51)"/><text x="535.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.71%)</title><rect x="532" y="980" width="9" height="15" fill="rgb(220,163,23)"/><text x="535.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.71%)</title><rect x="532" y="996" width="9" height="15" fill="rgb(232,113,26)"/><text x="535.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.71%)</title><rect x="532" y="1012" width="9" height="15" fill="rgb(246,114,29)"/><text x="535.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.71%)</title><rect x="532" y="1028" width="9" height="15" fill="rgb(243,227,7)"/><text x="535.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.36%)</title><rect x="536" y="1044" width="5" height="15" fill="rgb(252,165,24)"/><text x="539.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:2) (4 samples, 1.43%)</title><rect x="528" y="148" width="17" height="15" fill="rgb(249,98,11)"/><text x="531.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="164" width="17" height="15" fill="rgb(207,187,17)"/><text x="531.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.43%)</title><rect x="528" y="180" width="17" height="15" fill="rgb(210,7,12)"/><text x="531.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="196" width="17" height="15" fill="rgb(206,195,47)"/><text x="531.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="212" width="17" height="15" fill="rgb(237,166,42)"/><text x="531.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="228" width="17" height="15" fill="rgb(237,137,18)"/><text x="531.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="244" width="17" height="15" fill="rgb(214,214,27)"/><text x="531.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="260" width="17" height="15" fill="rgb(233,223,50)"/><text x="531.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="276" width="17" height="15" fill="rgb(215,52,36)"/><text x="531.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.43%)</title><rect x="528" y="292" width="17" height="15" fill="rgb(217,7,1)"/><text x="531.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="308" width="17" height="15" fill="rgb(244,161,0)"/><text x="531.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="324" width="17" height="15" fill="rgb(211,57,10)"/><text x="531.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="340" width="17" height="15" fill="rgb(217,205,38)"/><text x="531.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="356" width="17" height="15" fill="rgb(243,6,25)"/><text x="531.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="372" width="17" height="15" fill="rgb(229,13,31)"/><text x="531.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.43%)</title><rect x="528" y="388" width="17" height="15" fill="rgb(253,186,39)"/><text x="531.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="404" width="17" height="15" fill="rgb(210,39,36)"/><text x="531.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="420" width="17" height="15" fill="rgb(247,165,35)"/><text x="531.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="436" width="17" height="15" fill="rgb(252,198,53)"/><text x="531.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="452" width="17" height="15" fill="rgb(253,68,28)"/><text x="531.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="468" width="17" height="15" fill="rgb(209,195,16)"/><text x="531.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.43%)</title><rect x="528" y="484" width="17" height="15" fill="rgb(237,218,39)"/><text x="531.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="500" width="17" height="15" fill="rgb(230,135,1)"/><text x="531.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="516" width="17" height="15" fill="rgb(240,3,18)"/><text x="531.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="532" width="17" height="15" fill="rgb(206,112,20)"/><text x="531.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="548" width="17" height="15" fill="rgb(214,174,27)"/><text x="531.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="564" width="17" height="15" fill="rgb(224,106,11)"/><text x="531.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.43%)</title><rect x="528" y="580" width="17" height="15" fill="rgb(236,12,49)"/><text x="531.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="596" width="17" height="15" fill="rgb(225,111,51)"/><text x="531.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.43%)</title><rect x="528" y="612" width="17" height="15" fill="rgb(229,47,39)"/><text x="531.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="628" width="17" height="15" fill="rgb(230,228,3)"/><text x="531.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="644" width="17" height="15" fill="rgb(222,29,7)"/><text x="531.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="660" width="17" height="15" fill="rgb(251,181,4)"/><text x="531.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="676" width="17" height="15" fill="rgb(251,122,51)"/><text x="531.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="692" width="17" height="15" fill="rgb(227,126,4)"/><text x="531.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="708" width="17" height="15" fill="rgb(250,91,3)"/><text x="531.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.43%)</title><rect x="528" y="724" width="17" height="15" fill="rgb(250,43,14)"/><text x="531.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.43%)</title><rect x="528" y="740" width="17" height="15" fill="rgb(212,196,27)"/><text x="531.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.43%)</title><rect x="528" y="756" width="17" height="15" fill="rgb(245,145,44)"/><text x="531.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.43%)</title><rect x="528" y="772" width="17" height="15" fill="rgb(252,139,37)"/><text x="531.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.43%)</title><rect x="528" y="788" width="17" height="15" fill="rgb(228,163,22)"/><text x="531.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.43%)</title><rect x="528" y="804" width="17" height="15" fill="rgb(232,167,41)"/><text x="531.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (1 samples, 0.36%)</title><rect x="541" y="820" width="4" height="15" fill="rgb(228,81,51)"/><text x="544.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="541" y="836" width="4" height="15" fill="rgb(238,189,42)"/><text x="544.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="541" y="852" width="4" height="15" fill="rgb(223,83,30)"/><text x="544.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="541" y="868" width="4" height="15" fill="rgb(229,85,23)"/><text x="544.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="541" y="884" width="4" height="15" fill="rgb(222,65,40)"/><text x="544.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="541" y="900" width="4" height="15" fill="rgb(231,67,26)"/><text x="544.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py:214) (1 samples, 0.36%)</title><rect x="541" y="916" width="4" height="15" fill="rgb(207,98,1)"/><text x="544.00" y="926.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.36%)</title><rect x="541" y="932" width="4" height="15" fill="rgb(217,166,19)"/><text x="544.00" y="942.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.36%)</title><rect x="541" y="948" width="4" height="15" fill="rgb(208,53,18)"/><text x="544.00" y="958.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.36%)</title><rect x="541" y="964" width="4" height="15" fill="rgb(247,9,35)"/><text x="544.00" y="974.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.36%)</title><rect x="541" y="980" width="4" height="15" fill="rgb(230,56,20)"/><text x="544.00" y="990.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.36%)</title><rect x="541" y="996" width="4" height="15" fill="rgb(225,126,6)"/><text x="544.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.36%)</title><rect x="541" y="1012" width="4" height="15" fill="rgb(228,98,13)"/><text x="544.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.36%)</title><rect x="541" y="1028" width="4" height="15" fill="rgb(218,90,6)"/><text x="544.00" y="1038.50"></text></g><g><title>_optimize_charset (sre_compile.py:338) (1 samples, 0.36%)</title><rect x="541" y="1044" width="4" height="15" fill="rgb(249,126,51)"/><text x="544.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.36%)</title><rect x="545" y="580" width="4" height="15" fill="rgb(250,140,30)"/><text x="548.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="545" y="596" width="4" height="15" fill="rgb(236,111,0)"/><text x="548.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="545" y="612" width="4" height="15" fill="rgb(205,197,24)"/><text x="548.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="545" y="628" width="4" height="15" fill="rgb(251,62,51)"/><text x="548.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="545" y="644" width="4" height="15" fill="rgb(248,152,6)"/><text x="548.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="545" y="660" width="4" height="15" fill="rgb(229,9,53)"/><text x="548.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.36%)</title><rect x="545" y="676" width="4" height="15" fill="rgb(227,65,33)"/><text x="548.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="545" y="692" width="4" height="15" fill="rgb(232,108,3)"/><text x="548.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="545" y="708" width="4" height="15" fill="rgb(223,96,46)"/><text x="548.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="545" y="724" width="4" height="15" fill="rgb(234,24,1)"/><text x="548.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="545" y="740" width="4" height="15" fill="rgb(236,195,34)"/><text x="548.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="545" y="756" width="4" height="15" fill="rgb(250,191,43)"/><text x="548.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.36%)</title><rect x="545" y="772" width="4" height="15" fill="rgb(236,154,15)"/><text x="548.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="545" y="788" width="4" height="15" fill="rgb(238,56,46)"/><text x="548.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="545" y="804" width="4" height="15" fill="rgb(224,187,39)"/><text x="548.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="545" y="820" width="4" height="15" fill="rgb(211,54,48)"/><text x="548.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="545" y="836" width="4" height="15" fill="rgb(235,151,46)"/><text x="548.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="545" y="852" width="4" height="15" fill="rgb(215,201,5)"/><text x="548.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:8490) (1 samples, 0.36%)</title><rect x="545" y="868" width="4" height="15" fill="rgb(235,166,10)"/><text x="548.00" y="878.50"></text></g><g><title>_add_numeric_operations (pandas/core/generic.py:10637) (1 samples, 0.36%)</title><rect x="545" y="884" width="4" height="15" fill="rgb(212,226,32)"/><text x="548.00" y="894.50"></text></g><g><title>_make_stat_function (pandas/core/generic.py:11605) (1 samples, 0.36%)</title><rect x="545" y="900" width="4" height="15" fill="rgb(210,189,39)"/><text x="548.00" y="910.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.36%)</title><rect x="545" y="916" width="4" height="15" fill="rgb(214,119,17)"/><text x="548.00" y="926.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.36%)</title><rect x="545" y="932" width="4" height="15" fill="rgb(230,28,30)"/><text x="548.00" y="942.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.36%)</title><rect x="545" y="948" width="4" height="15" fill="rgb(226,181,42)"/><text x="548.00" y="958.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.36%)</title><rect x="545" y="964" width="4" height="15" fill="rgb(221,138,40)"/><text x="548.00" y="974.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.36%)</title><rect x="545" y="980" width="4" height="15" fill="rgb(216,218,27)"/><text x="548.00" y="990.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.71%)</title><rect x="545" y="292" width="8" height="15" fill="rgb(245,207,9)"/><text x="548.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="545" y="308" width="8" height="15" fill="rgb(250,30,25)"/><text x="548.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="545" y="324" width="8" height="15" fill="rgb(216,118,30)"/><text x="548.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="545" y="340" width="8" height="15" fill="rgb(243,51,19)"/><text x="548.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="545" y="356" width="8" height="15" fill="rgb(220,116,33)"/><text x="548.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="545" y="372" width="8" height="15" fill="rgb(213,159,17)"/><text x="548.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.71%)</title><rect x="545" y="388" width="8" height="15" fill="rgb(225,31,5)"/><text x="548.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="545" y="404" width="8" height="15" fill="rgb(235,186,8)"/><text x="548.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="545" y="420" width="8" height="15" fill="rgb(229,164,54)"/><text x="548.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="545" y="436" width="8" height="15" fill="rgb(253,176,8)"/><text x="548.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="545" y="452" width="8" height="15" fill="rgb(250,55,45)"/><text x="548.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="545" y="468" width="8" height="15" fill="rgb(232,85,2)"/><text x="548.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.71%)</title><rect x="545" y="484" width="8" height="15" fill="rgb(236,96,27)"/><text x="548.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="545" y="500" width="8" height="15" fill="rgb(225,34,51)"/><text x="548.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="545" y="516" width="8" height="15" fill="rgb(218,6,18)"/><text x="548.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="545" y="532" width="8" height="15" fill="rgb(253,176,48)"/><text x="548.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="545" y="548" width="8" height="15" fill="rgb(229,127,17)"/><text x="548.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="545" y="564" width="8" height="15" fill="rgb(244,15,23)"/><text x="548.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.36%)</title><rect x="549" y="580" width="4" height="15" fill="rgb(214,112,10)"/><text x="552.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="549" y="596" width="4" height="15" fill="rgb(236,197,24)"/><text x="552.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="549" y="612" width="4" height="15" fill="rgb(214,154,30)"/><text x="552.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="549" y="628" width="4" height="15" fill="rgb(227,91,13)"/><text x="552.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="549" y="644" width="4" height="15" fill="rgb(219,191,15)"/><text x="552.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="549" y="660" width="4" height="15" fill="rgb(239,16,21)"/><text x="552.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="549" y="676" width="4" height="15" fill="rgb(229,158,44)"/><text x="552.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="549" y="692" width="4" height="15" fill="rgb(226,100,43)"/><text x="552.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="549" y="708" width="4" height="15" fill="rgb(250,57,4)"/><text x="552.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.36%)</title><rect x="549" y="724" width="4" height="15" fill="rgb(215,65,26)"/><text x="552.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="549" y="740" width="4" height="15" fill="rgb(241,83,21)"/><text x="552.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="549" y="756" width="4" height="15" fill="rgb(238,82,19)"/><text x="552.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="549" y="772" width="4" height="15" fill="rgb(225,174,28)"/><text x="552.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="549" y="788" width="4" height="15" fill="rgb(244,191,9)"/><text x="552.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="549" y="804" width="4" height="15" fill="rgb(209,195,6)"/><text x="552.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:25) (1 samples, 0.36%)</title><rect x="549" y="820" width="4" height="15" fill="rgb(218,16,3)"/><text x="552.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="549" y="836" width="4" height="15" fill="rgb(226,50,11)"/><text x="552.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="549" y="852" width="4" height="15" fill="rgb(217,70,50)"/><text x="552.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="549" y="868" width="4" height="15" fill="rgb(212,38,7)"/><text x="552.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="549" y="884" width="4" height="15" fill="rgb(212,124,38)"/><text x="552.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="549" y="900" width="4" height="15" fill="rgb(214,125,21)"/><text x="552.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/sorting.py:17) (1 samples, 0.36%)</title><rect x="549" y="916" width="4" height="15" fill="rgb(207,0,48)"/><text x="552.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="549" y="932" width="4" height="15" fill="rgb(229,166,24)"/><text x="552.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="549" y="948" width="4" height="15" fill="rgb(233,56,48)"/><text x="552.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="549" y="964" width="4" height="15" fill="rgb(230,105,24)"/><text x="552.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="549" y="980" width="4" height="15" fill="rgb(213,167,25)"/><text x="552.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="549" y="996" width="4" height="15" fill="rgb(235,98,41)"/><text x="552.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="549" y="1012" width="4" height="15" fill="rgb(205,134,18)"/><text x="552.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:11) (1 samples, 0.36%)</title><rect x="553" y="1476" width="4" height="15" fill="rgb(251,25,41)"/><text x="556.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="553" y="1492" width="4" height="15" fill="rgb(232,125,12)"/><text x="556.00" y="1502.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;:177) (1 samples, 0.36%)</title><rect x="553" y="1508" width="4" height="15" fill="rgb(220,2,41)"/><text x="556.00" y="1518.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.71%)</title><rect x="553" y="820" width="9" height="15" fill="rgb(205,15,13)"/><text x="556.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.71%)</title><rect x="553" y="836" width="9" height="15" fill="rgb(243,140,2)"/><text x="556.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="852" width="9" height="15" fill="rgb(205,23,48)"/><text x="556.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="868" width="9" height="15" fill="rgb(234,122,54)"/><text x="556.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="884" width="9" height="15" fill="rgb(222,55,34)"/><text x="556.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="900" width="9" height="15" fill="rgb(205,213,27)"/><text x="556.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="916" width="9" height="15" fill="rgb(236,141,0)"/><text x="556.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="932" width="9" height="15" fill="rgb(237,45,18)"/><text x="556.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.71%)</title><rect x="553" y="948" width="9" height="15" fill="rgb(249,26,13)"/><text x="556.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="964" width="9" height="15" fill="rgb(251,106,20)"/><text x="556.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="980" width="9" height="15" fill="rgb(240,20,25)"/><text x="556.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="996" width="9" height="15" fill="rgb(226,7,44)"/><text x="556.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="1012" width="9" height="15" fill="rgb(208,225,8)"/><text x="556.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1028" width="9" height="15" fill="rgb(250,23,17)"/><text x="556.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.71%)</title><rect x="553" y="1044" width="9" height="15" fill="rgb(233,191,27)"/><text x="556.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="1060" width="9" height="15" fill="rgb(234,59,5)"/><text x="556.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="1076" width="9" height="15" fill="rgb(218,89,18)"/><text x="556.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="1092" width="9" height="15" fill="rgb(234,180,12)"/><text x="556.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="1108" width="9" height="15" fill="rgb(245,228,12)"/><text x="556.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1124" width="9" height="15" fill="rgb(253,104,48)"/><text x="556.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.71%)</title><rect x="553" y="1140" width="9" height="15" fill="rgb(247,8,10)"/><text x="556.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="1156" width="9" height="15" fill="rgb(218,137,31)"/><text x="556.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="1172" width="9" height="15" fill="rgb(242,36,0)"/><text x="556.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="1188" width="9" height="15" fill="rgb(247,95,53)"/><text x="556.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="1204" width="9" height="15" fill="rgb(251,200,12)"/><text x="556.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1220" width="9" height="15" fill="rgb(230,84,51)"/><text x="556.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.71%)</title><rect x="553" y="1236" width="9" height="15" fill="rgb(245,91,22)"/><text x="556.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="1252" width="9" height="15" fill="rgb(221,202,7)"/><text x="556.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="1268" width="9" height="15" fill="rgb(227,197,37)"/><text x="556.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="1284" width="9" height="15" fill="rgb(215,151,7)"/><text x="556.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="1300" width="9" height="15" fill="rgb(236,62,12)"/><text x="556.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1316" width="9" height="15" fill="rgb(214,203,29)"/><text x="556.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.71%)</title><rect x="553" y="1332" width="9" height="15" fill="rgb(220,178,13)"/><text x="556.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="1348" width="9" height="15" fill="rgb(242,50,51)"/><text x="556.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.71%)</title><rect x="553" y="1364" width="9" height="15" fill="rgb(206,121,27)"/><text x="556.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1380" width="9" height="15" fill="rgb(250,192,2)"/><text x="556.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="553" y="1396" width="9" height="15" fill="rgb(240,165,22)"/><text x="556.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="553" y="1412" width="9" height="15" fill="rgb(216,47,0)"/><text x="556.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="553" y="1428" width="9" height="15" fill="rgb(249,166,17)"/><text x="556.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="553" y="1444" width="9" height="15" fill="rgb(206,179,44)"/><text x="556.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="553" y="1460" width="9" height="15" fill="rgb(220,13,50)"/><text x="556.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.36%)</title><rect x="557" y="1476" width="5" height="15" fill="rgb(246,163,29)"/><text x="560.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="557" y="1492" width="5" height="15" fill="rgb(215,145,20)"/><text x="560.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="557" y="1508" width="5" height="15" fill="rgb(217,37,46)"/><text x="560.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="557" y="1524" width="5" height="15" fill="rgb(236,166,38)"/><text x="560.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="557" y="1540" width="5" height="15" fill="rgb(231,190,51)"/><text x="560.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="557" y="1556" width="5" height="15" fill="rgb(211,188,39)"/><text x="560.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.36%)</title><rect x="557" y="1572" width="5" height="15" fill="rgb(225,28,48)"/><text x="560.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="557" y="1588" width="5" height="15" fill="rgb(206,35,28)"/><text x="560.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="557" y="1604" width="5" height="15" fill="rgb(205,52,33)"/><text x="560.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="557" y="1620" width="5" height="15" fill="rgb(252,18,42)"/><text x="560.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="557" y="1636" width="5" height="15" fill="rgb(240,123,54)"/><text x="560.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="557" y="1652" width="5" height="15" fill="rgb(253,225,43)"/><text x="560.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.36%)</title><rect x="557" y="1668" width="5" height="15" fill="rgb(231,41,38)"/><text x="560.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="557" y="1684" width="5" height="15" fill="rgb(233,49,19)"/><text x="560.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="557" y="1700" width="5" height="15" fill="rgb(216,145,44)"/><text x="560.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="557" y="1716" width="5" height="15" fill="rgb(214,218,13)"/><text x="560.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="557" y="1732" width="5" height="15" fill="rgb(248,137,36)"/><text x="560.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="557" y="1748" width="5" height="15" fill="rgb(208,7,24)"/><text x="560.00" y="1758.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.36%)</title><rect x="557" y="1764" width="5" height="15" fill="rgb(218,33,43)"/><text x="560.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="557" y="1780" width="5" height="15" fill="rgb(218,24,23)"/><text x="560.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="557" y="1796" width="5" height="15" fill="rgb(221,228,5)"/><text x="560.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="557" y="1812" width="5" height="15" fill="rgb(250,92,21)"/><text x="560.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="557" y="1828" width="5" height="15" fill="rgb(238,90,40)"/><text x="560.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="557" y="1844" width="5" height="15" fill="rgb(245,69,21)"/><text x="560.00" y="1854.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:45) (1 samples, 0.36%)</title><rect x="557" y="1860" width="5" height="15" fill="rgb(218,59,21)"/><text x="560.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="557" y="1876" width="5" height="15" fill="rgb(234,18,38)"/><text x="560.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="557" y="1892" width="5" height="15" fill="rgb(211,209,49)"/><text x="560.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.36%)</title><rect x="557" y="1908" width="5" height="15" fill="rgb(252,9,41)"/><text x="560.00" y="1918.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.36%)</title><rect x="557" y="1924" width="5" height="15" fill="rgb(206,53,0)"/><text x="560.00" y="1934.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:538) (1 samples, 0.36%)</title><rect x="557" y="1940" width="5" height="15" fill="rgb(230,118,53)"/><text x="560.00" y="1950.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1790) (1 samples, 0.36%)</title><rect x="562" y="1364" width="4" height="15" fill="rgb(220,44,37)"/><text x="565.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1556) (1 samples, 0.36%)</title><rect x="562" y="1380" width="4" height="15" fill="rgb(215,13,11)"/><text x="565.00" y="1390.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:591) (1 samples, 0.36%)</title><rect x="562" y="1396" width="4" height="15" fill="rgb(235,78,9)"/><text x="565.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.36%)</title><rect x="562" y="1412" width="4" height="15" fill="rgb(239,222,46)"/><text x="565.00" y="1422.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.36%)</title><rect x="562" y="1428" width="4" height="15" fill="rgb(224,9,14)"/><text x="565.00" y="1438.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.36%)</title><rect x="562" y="1444" width="4" height="15" fill="rgb(211,98,42)"/><text x="565.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py:2220) (1 samples, 0.36%)</title><rect x="562" y="1460" width="4" height="15" fill="rgb(206,150,28)"/><text x="565.00" y="1470.50"></text></g><g><title>_signature_bound_method (inspect.py:1822) (1 samples, 0.36%)</title><rect x="562" y="1476" width="4" height="15" fill="rgb(241,106,41)"/><text x="565.00" y="1486.50"></text></g><g><title>replace (inspect.py:2856) (1 samples, 0.36%)</title><rect x="562" y="1492" width="4" height="15" fill="rgb(206,69,12)"/><text x="565.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.71%)</title><rect x="562" y="1236" width="8" height="15" fill="rgb(221,5,10)"/><text x="565.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.71%)</title><rect x="562" y="1252" width="8" height="15" fill="rgb(207,125,34)"/><text x="565.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="562" y="1268" width="8" height="15" fill="rgb(208,168,44)"/><text x="565.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="562" y="1284" width="8" height="15" fill="rgb(232,132,37)"/><text x="565.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="562" y="1300" width="8" height="15" fill="rgb(246,56,29)"/><text x="565.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="562" y="1316" width="8" height="15" fill="rgb(212,198,54)"/><text x="565.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="562" y="1332" width="8" height="15" fill="rgb(231,183,31)"/><text x="565.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="562" y="1348" width="8" height="15" fill="rgb(254,114,38)"/><text x="565.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6025) (1 samples, 0.36%)</title><rect x="566" y="1364" width="4" height="15" fill="rgb(230,2,50)"/><text x="569.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.36%)</title><rect x="566" y="1380" width="4" height="15" fill="rgb(221,169,53)"/><text x="569.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.36%)</title><rect x="566" y="1396" width="4" height="15" fill="rgb(223,101,3)"/><text x="569.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (5 samples, 1.79%)</title><rect x="553" y="532" width="21" height="15" fill="rgb(224,167,45)"/><text x="556.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="553" y="548" width="21" height="15" fill="rgb(246,102,32)"/><text x="556.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="553" y="564" width="21" height="15" fill="rgb(226,136,39)"/><text x="556.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="553" y="580" width="21" height="15" fill="rgb(214,206,53)"/><text x="556.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="553" y="596" width="21" height="15" fill="rgb(213,126,13)"/><text x="556.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="553" y="612" width="21" height="15" fill="rgb(220,74,13)"/><text x="556.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (5 samples, 1.79%)</title><rect x="553" y="628" width="21" height="15" fill="rgb(218,76,40)"/><text x="556.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="553" y="644" width="21" height="15" fill="rgb(214,26,7)"/><text x="556.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="553" y="660" width="21" height="15" fill="rgb(206,174,27)"/><text x="556.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="553" y="676" width="21" height="15" fill="rgb(233,58,31)"/><text x="556.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="553" y="692" width="21" height="15" fill="rgb(222,155,21)"/><text x="556.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="553" y="708" width="21" height="15" fill="rgb(219,57,25)"/><text x="556.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (5 samples, 1.79%)</title><rect x="553" y="724" width="21" height="15" fill="rgb(232,225,7)"/><text x="556.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.79%)</title><rect x="553" y="740" width="21" height="15" fill="rgb(209,106,30)"/><text x="556.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.79%)</title><rect x="553" y="756" width="21" height="15" fill="rgb(207,9,22)"/><text x="556.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.79%)</title><rect x="553" y="772" width="21" height="15" fill="rgb(219,38,33)"/><text x="556.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.79%)</title><rect x="553" y="788" width="21" height="15" fill="rgb(242,179,14)"/><text x="556.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.79%)</title><rect x="553" y="804" width="21" height="15" fill="rgb(223,47,23)"/><text x="556.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 1.07%)</title><rect x="562" y="820" width="12" height="15" fill="rgb(247,203,13)"/><text x="565.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.07%)</title><rect x="562" y="836" width="12" height="15" fill="rgb(219,92,28)"/><text x="565.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.07%)</title><rect x="562" y="852" width="12" height="15" fill="rgb(247,102,1)"/><text x="565.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.07%)</title><rect x="562" y="868" width="12" height="15" fill="rgb(239,107,35)"/><text x="565.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.07%)</title><rect x="562" y="884" width="12" height="15" fill="rgb(236,184,17)"/><text x="565.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.07%)</title><rect x="562" y="900" width="12" height="15" fill="rgb(239,169,18)"/><text x="565.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 1.07%)</title><rect x="562" y="916" width="12" height="15" fill="rgb(225,140,3)"/><text x="565.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.07%)</title><rect x="562" y="932" width="12" height="15" fill="rgb(242,116,17)"/><text x="565.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.07%)</title><rect x="562" y="948" width="12" height="15" fill="rgb(248,10,15)"/><text x="565.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.07%)</title><rect x="562" y="964" width="12" height="15" fill="rgb(227,74,38)"/><text x="565.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.07%)</title><rect x="562" y="980" width="12" height="15" fill="rgb(231,88,52)"/><text x="565.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.07%)</title><rect x="562" y="996" width="12" height="15" fill="rgb(206,223,19)"/><text x="565.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 1.07%)</title><rect x="562" y="1012" width="12" height="15" fill="rgb(218,161,3)"/><text x="565.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.07%)</title><rect x="562" y="1028" width="12" height="15" fill="rgb(229,10,5)"/><text x="565.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.07%)</title><rect x="562" y="1044" width="12" height="15" fill="rgb(242,16,16)"/><text x="565.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.07%)</title><rect x="562" y="1060" width="12" height="15" fill="rgb(245,98,23)"/><text x="565.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.07%)</title><rect x="562" y="1076" width="12" height="15" fill="rgb(205,126,50)"/><text x="565.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.07%)</title><rect x="562" y="1092" width="12" height="15" fill="rgb(232,47,39)"/><text x="565.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (3 samples, 1.07%)</title><rect x="562" y="1108" width="12" height="15" fill="rgb(228,76,17)"/><text x="565.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.07%)</title><rect x="562" y="1124" width="12" height="15" fill="rgb(236,124,34)"/><text x="565.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.07%)</title><rect x="562" y="1140" width="12" height="15" fill="rgb(242,165,7)"/><text x="565.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.07%)</title><rect x="562" y="1156" width="12" height="15" fill="rgb(247,91,41)"/><text x="565.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.07%)</title><rect x="562" y="1172" width="12" height="15" fill="rgb(207,22,48)"/><text x="565.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.07%)</title><rect x="562" y="1188" width="12" height="15" fill="rgb(253,44,52)"/><text x="565.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.07%)</title><rect x="562" y="1204" width="12" height="15" fill="rgb(228,157,44)"/><text x="565.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.07%)</title><rect x="562" y="1220" width="12" height="15" fill="rgb(224,10,35)"/><text x="565.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:14) (1 samples, 0.36%)</title><rect x="570" y="1236" width="4" height="15" fill="rgb(254,145,22)"/><text x="573.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.36%)</title><rect x="570" y="1252" width="4" height="15" fill="rgb(240,152,6)"/><text x="573.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="570" y="1268" width="4" height="15" fill="rgb(212,139,46)"/><text x="573.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="570" y="1284" width="4" height="15" fill="rgb(208,177,28)"/><text x="573.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="570" y="1300" width="4" height="15" fill="rgb(253,135,1)"/><text x="573.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="570" y="1316" width="4" height="15" fill="rgb(217,208,42)"/><text x="573.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="570" y="1332" width="4" height="15" fill="rgb(219,54,51)"/><text x="573.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="570" y="1348" width="4" height="15" fill="rgb(231,93,24)"/><text x="573.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py:804) (1 samples, 0.36%)</title><rect x="570" y="1364" width="4" height="15" fill="rgb(221,180,0)"/><text x="573.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:2824) (1 samples, 0.36%)</title><rect x="570" y="1380" width="4" height="15" fill="rgb(241,105,43)"/><text x="573.00" y="1390.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py:2849) (1 samples, 0.36%)</title><rect x="570" y="1396" width="4" height="15" fill="rgb(222,54,47)"/><text x="573.00" y="1406.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.36%)</title><rect x="570" y="1412" width="4" height="15" fill="rgb(228,100,53)"/><text x="573.00" y="1422.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.36%)</title><rect x="570" y="1428" width="4" height="15" fill="rgb(221,66,17)"/><text x="573.00" y="1438.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.36%)</title><rect x="570" y="1444" width="4" height="15" fill="rgb(242,59,21)"/><text x="573.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.36%)</title><rect x="574" y="1316" width="4" height="15" fill="rgb(244,227,0)"/><text x="577.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.36%)</title><rect x="574" y="1332" width="4" height="15" fill="rgb(223,170,14)"/><text x="577.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.36%)</title><rect x="574" y="1348" width="4" height="15" fill="rgb(242,75,4)"/><text x="577.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.36%)</title><rect x="574" y="1364" width="4" height="15" fill="rgb(227,98,44)"/><text x="577.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.36%)</title><rect x="574" y="1380" width="4" height="15" fill="rgb(241,225,16)"/><text x="577.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.36%)</title><rect x="574" y="1396" width="4" height="15" fill="rgb(240,193,2)"/><text x="577.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.36%)</title><rect x="574" y="1412" width="4" height="15" fill="rgb(229,9,22)"/><text x="577.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;:26) (1 samples, 0.36%)</title><rect x="574" y="1428" width="4" height="15" fill="rgb(244,121,23)"/><text x="577.00" y="1438.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:4) (9 samples, 3.21%)</title><rect x="545" y="148" width="38" height="15" fill="rgb(215,61,14)"/><text x="548.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.21%)</title><rect x="545" y="164" width="38" height="15" fill="rgb(254,221,6)"/><text x="548.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 3.21%)</title><rect x="545" y="180" width="38" height="15" fill="rgb(231,221,29)"/><text x="548.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.21%)</title><rect x="545" y="196" width="38" height="15" fill="rgb(250,154,13)"/><text x="548.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.21%)</title><rect x="545" y="212" width="38" height="15" fill="rgb(254,75,3)"/><text x="548.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.21%)</title><rect x="545" y="228" width="38" height="15" fill="rgb(240,49,51)"/><text x="548.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.21%)</title><rect x="545" y="244" width="38" height="15" fill="rgb(220,170,43)"/><text x="548.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.21%)</title><rect x="545" y="260" width="38" height="15" fill="rgb(205,105,1)"/><text x="548.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.21%)</title><rect x="545" y="276" width="38" height="15" fill="rgb(230,95,23)"/><text x="548.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 2.50%)</title><rect x="553" y="292" width="30" height="15" fill="rgb(246,91,7)"/><text x="556.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.50%)</title><rect x="553" y="308" width="30" height="15" fill="rgb(214,6,5)"/><text x="556.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.50%)</title><rect x="553" y="324" width="30" height="15" fill="rgb(226,153,21)"/><text x="556.00" y="334.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.50%)</title><rect x="553" y="340" width="30" height="15" fill="rgb(212,16,6)"/><text x="556.00" y="350.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.50%)</title><rect x="553" y="356" width="30" height="15" fill="rgb(233,71,25)"/><text x="556.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.50%)</title><rect x="553" y="372" width="30" height="15" fill="rgb(244,26,34)"/><text x="556.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.50%)</title><rect x="553" y="388" width="30" height="15" fill="rgb(215,139,51)"/><text x="556.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.50%)</title><rect x="553" y="404" width="30" height="15" fill="rgb(232,169,20)"/><text x="556.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.50%)</title><rect x="553" y="420" width="30" height="15" fill="rgb(213,125,44)"/><text x="556.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 2.50%)</title><rect x="553" y="436" width="30" height="15" fill="rgb(243,34,24)"/><text x="556.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.50%)</title><rect x="553" y="452" width="30" height="15" fill="rgb(243,114,23)"/><text x="556.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.50%)</title><rect x="553" y="468" width="30" height="15" fill="rgb(233,62,21)"/><text x="556.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.50%)</title><rect x="553" y="484" width="30" height="15" fill="rgb(231,78,13)"/><text x="556.00" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.50%)</title><rect x="553" y="500" width="30" height="15" fill="rgb(226,120,17)"/><text x="556.00" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.50%)</title><rect x="553" y="516" width="30" height="15" fill="rgb(226,30,37)"/><text x="556.00" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.71%)</title><rect x="574" y="532" width="9" height="15" fill="rgb(253,135,33)"/><text x="577.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="548" width="9" height="15" fill="rgb(254,108,28)"/><text x="577.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="564" width="9" height="15" fill="rgb(207,9,3)"/><text x="577.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="580" width="9" height="15" fill="rgb(214,39,36)"/><text x="577.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="596" width="9" height="15" fill="rgb(227,171,27)"/><text x="577.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="612" width="9" height="15" fill="rgb(220,210,49)"/><text x="577.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.71%)</title><rect x="574" y="628" width="9" height="15" fill="rgb(219,198,43)"/><text x="577.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="644" width="9" height="15" fill="rgb(237,136,50)"/><text x="577.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="660" width="9" height="15" fill="rgb(254,224,18)"/><text x="577.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="676" width="9" height="15" fill="rgb(210,37,32)"/><text x="577.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="692" width="9" height="15" fill="rgb(210,180,16)"/><text x="577.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="708" width="9" height="15" fill="rgb(247,22,9)"/><text x="577.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.71%)</title><rect x="574" y="724" width="9" height="15" fill="rgb(224,164,34)"/><text x="577.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="740" width="9" height="15" fill="rgb(248,185,32)"/><text x="577.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.71%)</title><rect x="574" y="756" width="9" height="15" fill="rgb(237,193,32)"/><text x="577.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="772" width="9" height="15" fill="rgb(231,223,12)"/><text x="577.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="788" width="9" height="15" fill="rgb(212,40,6)"/><text x="577.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="804" width="9" height="15" fill="rgb(231,202,18)"/><text x="577.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="820" width="9" height="15" fill="rgb(208,147,52)"/><text x="577.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="836" width="9" height="15" fill="rgb(226,174,40)"/><text x="577.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="852" width="9" height="15" fill="rgb(213,145,21)"/><text x="577.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.71%)</title><rect x="574" y="868" width="9" height="15" fill="rgb(237,74,19)"/><text x="577.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="884" width="9" height="15" fill="rgb(229,165,12)"/><text x="577.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="900" width="9" height="15" fill="rgb(228,15,33)"/><text x="577.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="916" width="9" height="15" fill="rgb(214,37,17)"/><text x="577.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="932" width="9" height="15" fill="rgb(218,37,6)"/><text x="577.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="948" width="9" height="15" fill="rgb(245,222,10)"/><text x="577.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.71%)</title><rect x="574" y="964" width="9" height="15" fill="rgb(215,178,20)"/><text x="577.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.71%)</title><rect x="574" y="980" width="9" height="15" fill="rgb(212,184,38)"/><text x="577.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="996" width="9" height="15" fill="rgb(213,183,18)"/><text x="577.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="1012" width="9" height="15" fill="rgb(246,35,21)"/><text x="577.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="1028" width="9" height="15" fill="rgb(221,117,24)"/><text x="577.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="1044" width="9" height="15" fill="rgb(238,58,49)"/><text x="577.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="1060" width="9" height="15" fill="rgb(235,185,28)"/><text x="577.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="1076" width="9" height="15" fill="rgb(237,110,50)"/><text x="577.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.71%)</title><rect x="574" y="1092" width="9" height="15" fill="rgb(206,214,50)"/><text x="577.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.71%)</title><rect x="574" y="1108" width="9" height="15" fill="rgb(228,114,14)"/><text x="577.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="1124" width="9" height="15" fill="rgb(220,74,6)"/><text x="577.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="1140" width="9" height="15" fill="rgb(211,151,34)"/><text x="577.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="1156" width="9" height="15" fill="rgb(230,147,15)"/><text x="577.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="1172" width="9" height="15" fill="rgb(231,120,21)"/><text x="577.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="1188" width="9" height="15" fill="rgb(249,84,52)"/><text x="577.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="1204" width="9" height="15" fill="rgb(227,134,18)"/><text x="577.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.71%)</title><rect x="574" y="1220" width="9" height="15" fill="rgb(237,161,25)"/><text x="577.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="574" y="1236" width="9" height="15" fill="rgb(211,184,43)"/><text x="577.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="574" y="1252" width="9" height="15" fill="rgb(223,46,37)"/><text x="577.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="574" y="1268" width="9" height="15" fill="rgb(251,132,29)"/><text x="577.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="574" y="1284" width="9" height="15" fill="rgb(205,27,20)"/><text x="577.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="574" y="1300" width="9" height="15" fill="rgb(229,61,45)"/><text x="577.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.36%)</title><rect x="578" y="1316" width="5" height="15" fill="rgb(209,69,38)"/><text x="581.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="578" y="1332" width="5" height="15" fill="rgb(242,170,43)"/><text x="581.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="578" y="1348" width="5" height="15" fill="rgb(208,41,6)"/><text x="581.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="578" y="1364" width="5" height="15" fill="rgb(217,213,47)"/><text x="581.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="578" y="1380" width="5" height="15" fill="rgb(222,80,2)"/><text x="581.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="578" y="1396" width="5" height="15" fill="rgb(208,38,43)"/><text x="581.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.36%)</title><rect x="578" y="1412" width="5" height="15" fill="rgb(254,142,8)"/><text x="581.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.36%)</title><rect x="578" y="1428" width="5" height="15" fill="rgb(218,76,21)"/><text x="581.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="578" y="1444" width="5" height="15" fill="rgb(240,72,3)"/><text x="581.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="578" y="1460" width="5" height="15" fill="rgb(224,179,31)"/><text x="581.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="578" y="1476" width="5" height="15" fill="rgb(249,91,38)"/><text x="581.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="578" y="1492" width="5" height="15" fill="rgb(245,160,20)"/><text x="581.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="578" y="1508" width="5" height="15" fill="rgb(253,66,1)"/><text x="581.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.36%)</title><rect x="578" y="1524" width="5" height="15" fill="rgb(237,120,37)"/><text x="581.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="578" y="1540" width="5" height="15" fill="rgb(219,66,8)"/><text x="581.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="578" y="1556" width="5" height="15" fill="rgb(212,91,36)"/><text x="581.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="578" y="1572" width="5" height="15" fill="rgb(219,88,51)"/><text x="581.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="578" y="1588" width="5" height="15" fill="rgb(242,23,4)"/><text x="581.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="578" y="1604" width="5" height="15" fill="rgb(212,191,49)"/><text x="581.00" y="1614.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:25) (1 samples, 0.36%)</title><rect x="578" y="1620" width="5" height="15" fill="rgb(244,129,26)"/><text x="581.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="578" y="1636" width="5" height="15" fill="rgb(248,142,6)"/><text x="581.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="578" y="1652" width="5" height="15" fill="rgb(244,101,21)"/><text x="581.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="578" y="1668" width="5" height="15" fill="rgb(238,29,11)"/><text x="581.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="578" y="1684" width="5" height="15" fill="rgb(224,143,12)"/><text x="581.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="578" y="1700" width="5" height="15" fill="rgb(242,27,32)"/><text x="581.00" y="1710.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="578" y="1716" width="5" height="15" fill="rgb(213,97,6)"/><text x="581.00" y="1726.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.36%)</title><rect x="583" y="484" width="4" height="15" fill="rgb(208,1,44)"/><text x="586.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="500" width="4" height="15" fill="rgb(223,170,24)"/><text x="586.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="516" width="4" height="15" fill="rgb(210,45,16)"/><text x="586.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="532" width="4" height="15" fill="rgb(230,25,54)"/><text x="586.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="548" width="4" height="15" fill="rgb(241,187,34)"/><text x="586.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="564" width="4" height="15" fill="rgb(216,94,27)"/><text x="586.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.36%)</title><rect x="583" y="580" width="4" height="15" fill="rgb(248,151,34)"/><text x="586.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="596" width="4" height="15" fill="rgb(237,94,37)"/><text x="586.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="612" width="4" height="15" fill="rgb(252,204,10)"/><text x="586.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="628" width="4" height="15" fill="rgb(210,129,45)"/><text x="586.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="644" width="4" height="15" fill="rgb(241,8,17)"/><text x="586.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="660" width="4" height="15" fill="rgb(237,149,47)"/><text x="586.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.36%)</title><rect x="583" y="676" width="4" height="15" fill="rgb(226,221,44)"/><text x="586.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="692" width="4" height="15" fill="rgb(231,71,47)"/><text x="586.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="708" width="4" height="15" fill="rgb(254,101,30)"/><text x="586.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="724" width="4" height="15" fill="rgb(230,72,26)"/><text x="586.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="740" width="4" height="15" fill="rgb(209,88,24)"/><text x="586.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="756" width="4" height="15" fill="rgb(242,151,51)"/><text x="586.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.36%)</title><rect x="583" y="772" width="4" height="15" fill="rgb(231,34,35)"/><text x="586.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="788" width="4" height="15" fill="rgb(229,121,6)"/><text x="586.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="804" width="4" height="15" fill="rgb(222,219,11)"/><text x="586.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="820" width="4" height="15" fill="rgb(211,102,14)"/><text x="586.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="836" width="4" height="15" fill="rgb(234,23,9)"/><text x="586.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="852" width="4" height="15" fill="rgb(244,185,47)"/><text x="586.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.36%)</title><rect x="583" y="868" width="4" height="15" fill="rgb(210,58,3)"/><text x="586.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="884" width="4" height="15" fill="rgb(212,31,53)"/><text x="586.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="900" width="4" height="15" fill="rgb(210,228,30)"/><text x="586.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="916" width="4" height="15" fill="rgb(250,13,47)"/><text x="586.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="932" width="4" height="15" fill="rgb(231,29,12)"/><text x="586.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="948" width="4" height="15" fill="rgb(219,93,1)"/><text x="586.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:39) (1 samples, 0.36%)</title><rect x="583" y="964" width="4" height="15" fill="rgb(216,153,47)"/><text x="586.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="980" width="4" height="15" fill="rgb(224,28,36)"/><text x="586.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="583" y="996" width="4" height="15" fill="rgb(220,77,54)"/><text x="586.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="583" y="1012" width="4" height="15" fill="rgb(247,158,17)"/><text x="586.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="583" y="1028" width="4" height="15" fill="rgb(237,38,32)"/><text x="586.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="583" y="1044" width="4" height="15" fill="rgb(211,19,50)"/><text x="586.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/response.py:10) (1 samples, 0.36%)</title><rect x="583" y="1060" width="4" height="15" fill="rgb(211,96,48)"/><text x="586.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="583" y="1076" width="4" height="15" fill="rgb(245,199,46)"/><text x="586.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.36%)</title><rect x="583" y="1092" width="4" height="15" fill="rgb(249,210,46)"/><text x="586.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.36%)</title><rect x="583" y="1108" width="4" height="15" fill="rgb(233,112,53)"/><text x="586.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.36%)</title><rect x="583" y="1124" width="4" height="15" fill="rgb(250,110,26)"/><text x="586.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.36%)</title><rect x="583" y="1140" width="4" height="15" fill="rgb(253,190,31)"/><text x="586.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.36%)</title><rect x="583" y="1156" width="4" height="15" fill="rgb(254,97,40)"/><text x="586.00" y="1166.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.36%)</title><rect x="583" y="1172" width="4" height="15" fill="rgb(221,71,54)"/><text x="586.00" y="1182.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:4) (16 samples, 5.71%)</title><rect x="524" y="52" width="67" height="15" fill="rgb(253,16,23)"/><text x="527.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 5.71%)</title><rect x="524" y="68" width="67" height="15" fill="rgb(229,69,49)"/><text x="527.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 5.71%)</title><rect x="524" y="84" width="67" height="15" fill="rgb(231,199,7)"/><text x="527.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 5.71%)</title><rect x="524" y="100" width="67" height="15" fill="rgb(211,17,23)"/><text x="527.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 5.71%)</title><rect x="524" y="116" width="67" height="15" fill="rgb(252,147,11)"/><text x="527.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 5.71%)</title><rect x="524" y="132" width="67" height="15" fill="rgb(238,61,23)"/><text x="527.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py:8) (2 samples, 0.71%)</title><rect x="583" y="148" width="8" height="15" fill="rgb(227,115,15)"/><text x="586.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="583" y="164" width="8" height="15" fill="rgb(205,41,11)"/><text x="586.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="583" y="180" width="8" height="15" fill="rgb(219,204,19)"/><text x="586.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="583" y="196" width="8" height="15" fill="rgb(229,162,11)"/><text x="586.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="583" y="212" width="8" height="15" fill="rgb(246,4,36)"/><text x="586.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="583" y="228" width="8" height="15" fill="rgb(253,107,54)"/><text x="586.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.71%)</title><rect x="583" y="244" width="8" height="15" fill="rgb(240,8,53)"/><text x="586.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="583" y="260" width="8" height="15" fill="rgb(246,20,43)"/><text x="586.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="583" y="276" width="8" height="15" fill="rgb(234,170,45)"/><text x="586.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="583" y="292" width="8" height="15" fill="rgb(243,210,40)"/><text x="586.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="583" y="308" width="8" height="15" fill="rgb(239,117,2)"/><text x="586.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="583" y="324" width="8" height="15" fill="rgb(250,192,26)"/><text x="586.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.71%)</title><rect x="583" y="340" width="8" height="15" fill="rgb(221,152,21)"/><text x="586.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="583" y="356" width="8" height="15" fill="rgb(252,2,48)"/><text x="586.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.71%)</title><rect x="583" y="372" width="8" height="15" fill="rgb(242,71,43)"/><text x="586.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="583" y="388" width="8" height="15" fill="rgb(244,143,34)"/><text x="586.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.71%)</title><rect x="583" y="404" width="8" height="15" fill="rgb(233,22,2)"/><text x="586.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.71%)</title><rect x="583" y="420" width="8" height="15" fill="rgb(238,11,29)"/><text x="586.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.71%)</title><rect x="583" y="436" width="8" height="15" fill="rgb(248,166,35)"/><text x="586.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.71%)</title><rect x="583" y="452" width="8" height="15" fill="rgb(208,120,16)"/><text x="586.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.71%)</title><rect x="583" y="468" width="8" height="15" fill="rgb(222,34,37)"/><text x="586.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.36%)</title><rect x="587" y="484" width="4" height="15" fill="rgb(212,14,49)"/><text x="590.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="587" y="500" width="4" height="15" fill="rgb(251,160,27)"/><text x="590.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="587" y="516" width="4" height="15" fill="rgb(207,150,31)"/><text x="590.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="587" y="532" width="4" height="15" fill="rgb(214,216,48)"/><text x="590.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="587" y="548" width="4" height="15" fill="rgb(238,72,15)"/><text x="590.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="587" y="564" width="4" height="15" fill="rgb(227,51,31)"/><text x="590.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.36%)</title><rect x="587" y="580" width="4" height="15" fill="rgb(225,128,19)"/><text x="590.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="587" y="596" width="4" height="15" fill="rgb(215,121,24)"/><text x="590.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.36%)</title><rect x="587" y="612" width="4" height="15" fill="rgb(240,93,30)"/><text x="590.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="587" y="628" width="4" height="15" fill="rgb(240,101,14)"/><text x="590.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="587" y="644" width="4" height="15" fill="rgb(229,162,48)"/><text x="590.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="587" y="660" width="4" height="15" fill="rgb(209,163,0)"/><text x="590.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="587" y="676" width="4" height="15" fill="rgb(251,161,53)"/><text x="590.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="587" y="692" width="4" height="15" fill="rgb(236,9,14)"/><text x="590.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="587" y="708" width="4" height="15" fill="rgb(230,157,50)"/><text x="590.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.36%)</title><rect x="587" y="724" width="4" height="15" fill="rgb(231,18,39)"/><text x="590.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="587" y="740" width="4" height="15" fill="rgb(215,104,32)"/><text x="590.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="587" y="756" width="4" height="15" fill="rgb(220,166,14)"/><text x="590.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="587" y="772" width="4" height="15" fill="rgb(205,31,50)"/><text x="590.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.36%)</title><rect x="587" y="788" width="4" height="15" fill="rgb(221,18,49)"/><text x="590.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.36%)</title><rect x="587" y="804" width="4" height="15" fill="rgb(227,65,39)"/><text x="590.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:10) (1 samples, 0.36%)</title><rect x="587" y="820" width="4" height="15" fill="rgb(249,83,42)"/><text x="590.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.36%)</title><rect x="587" y="836" width="4" height="15" fill="rgb(211,185,16)"/><text x="590.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.36%)</title><rect x="587" y="852" width="4" height="15" fill="rgb(226,36,44)"/><text x="590.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.36%)</title><rect x="587" y="868" width="4" height="15" fill="rgb(239,52,24)"/><text x="590.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.36%)</title><rect x="587" y="884" width="4" height="15" fill="rgb(210,169,21)"/><text x="590.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.36%)</title><rect x="587" y="900" width="4" height="15" fill="rgb(248,5,33)"/><text x="590.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.36%)</title><rect x="587" y="916" width="4" height="15" fill="rgb(235,168,4)"/><text x="590.00" y="926.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.36%)</title><rect x="591" y="180" width="4" height="15" fill="rgb(218,98,2)"/><text x="594.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:18) (2 samples, 0.71%)</title><rect x="591" y="100" width="9" height="15" fill="rgb(221,203,39)"/><text x="594.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.71%)</title><rect x="591" y="116" width="9" height="15" fill="rgb(241,184,53)"/><text x="594.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.71%)</title><rect x="591" y="132" width="9" height="15" fill="rgb(220,193,25)"/><text x="594.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.71%)</title><rect x="591" y="148" width="9" height="15" fill="rgb(212,156,35)"/><text x="594.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.71%)</title><rect x="591" y="164" width="9" height="15" fill="rgb(234,65,1)"/><text x="594.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.36%)</title><rect x="595" y="180" width="5" height="15" fill="rgb(208,116,20)"/><text x="598.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.36%)</title><rect x="595" y="196" width="5" height="15" fill="rgb(225,163,28)"/><text x="598.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.36%)</title><rect x="595" y="212" width="5" height="15" fill="rgb(252,218,1)"/><text x="598.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (1 samples, 0.36%)</title><rect x="595" y="228" width="5" height="15" fill="rgb(219,198,19)"/><text x="598.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.36%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(242,25,51)"/><text x="598.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.36%)</title><rect x="595" y="260" width="5" height="15" fill="rgb(239,62,36)"/><text x="598.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (1 samples, 0.36%)</title><rect x="595" y="276" width="5" height="15" fill="rgb(245,67,22)"/><text x="598.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="595" y="292" width="5" height="15" fill="rgb(235,213,33)"/><text x="598.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.36%)</title><rect x="595" y="308" width="5" height="15" fill="rgb(222,133,48)"/><text x="598.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.36%)</title><rect x="595" y="324" width="5" height="15" fill="rgb(221,228,20)"/><text x="598.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1864) (1 samples, 0.36%)</title><rect x="595" y="340" width="5" height="15" fill="rgb(206,4,17)"/><text x="598.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:336) (1 samples, 0.36%)</title><rect x="612" y="148" width="4" height="15" fill="rgb(244,205,16)"/><text x="615.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:423) (1 samples, 0.36%)</title><rect x="621" y="164" width="4" height="15" fill="rgb(236,36,2)"/><text x="624.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.36%)</title><rect x="625" y="164" width="4" height="15" fill="rgb(219,76,29)"/><text x="628.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.71%)</title><rect x="629" y="164" width="8" height="15" fill="rgb(209,47,30)"/><text x="632.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.36%)</title><rect x="637" y="164" width="5" height="15" fill="rgb(212,33,18)"/><text x="640.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.43%)</title><rect x="654" y="180" width="17" height="15" fill="rgb(229,85,9)"/><text x="657.00" y="190.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.36%)</title><rect x="688" y="276" width="4" height="15" fill="rgb(229,177,6)"/><text x="691.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="688" y="292" width="4" height="15" fill="rgb(223,82,37)"/><text x="691.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 1.07%)</title><rect x="684" y="212" width="12" height="15" fill="rgb(244,114,28)"/><text x="687.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.71%)</title><rect x="688" y="228" width="8" height="15" fill="rgb(248,26,53)"/><text x="691.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.71%)</title><rect x="688" y="244" width="8" height="15" fill="rgb(233,225,22)"/><text x="691.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.71%)</title><rect x="688" y="260" width="8" height="15" fill="rgb(234,127,33)"/><text x="691.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:93) (1 samples, 0.36%)</title><rect x="692" y="276" width="4" height="15" fill="rgb(210,53,11)"/><text x="695.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.36%)</title><rect x="692" y="292" width="4" height="15" fill="rgb(212,20,53)"/><text x="695.00" y="302.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.36%)</title><rect x="705" y="228" width="4" height="15" fill="rgb(223,151,35)"/><text x="708.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (9 samples, 3.21%)</title><rect x="680" y="196" width="38" height="15" fill="rgb(240,204,1)"/><text x="683.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (5 samples, 1.79%)</title><rect x="696" y="212" width="22" height="15" fill="rgb(239,187,9)"/><text x="699.00" y="222.50">_..</text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (2 samples, 0.71%)</title><rect x="709" y="228" width="9" height="15" fill="rgb(248,222,46)"/><text x="712.00" y="238.50"></text></g><g><title>0x7f6c0f185120 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="734" y="260" width="5" height="15" fill="rgb(236,189,47)"/><text x="737.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.36%)</title><rect x="743" y="372" width="4" height="15" fill="rgb(225,180,47)"/><text x="746.00" y="382.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:15) (1 samples, 0.36%)</title><rect x="743" y="388" width="4" height="15" fill="rgb(229,48,21)"/><text x="746.00" y="398.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.71%)</title><rect x="743" y="308" width="8" height="15" fill="rgb(236,164,35)"/><text x="746.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.71%)</title><rect x="743" y="324" width="8" height="15" fill="rgb(244,193,51)"/><text x="746.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.71%)</title><rect x="743" y="340" width="8" height="15" fill="rgb(215,227,0)"/><text x="746.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.71%)</title><rect x="743" y="356" width="8" height="15" fill="rgb(240,130,53)"/><text x="746.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.36%)</title><rect x="747" y="372" width="4" height="15" fill="rgb(250,112,52)"/><text x="750.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.36%)</title><rect x="747" y="388" width="4" height="15" fill="rgb(230,134,28)"/><text x="750.00" y="398.50"></text></g><g><title>0x7f6c0f17ae7a (libc-2.29.so) (1 samples, 0.36%)</title><rect x="747" y="404" width="4" height="15" fill="rgb(252,156,11)"/><text x="750.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (5 samples, 1.79%)</title><rect x="751" y="324" width="21" height="15" fill="rgb(213,67,41)"/><text x="754.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.36%)</title><rect x="772" y="324" width="5" height="15" fill="rgb(234,91,52)"/><text x="775.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.36%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(224,20,15)"/><text x="780.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.36%)</title><rect x="777" y="404" width="4" height="15" fill="rgb(242,129,24)"/><text x="780.00" y="414.50"></text></g><g><title>0x7f6c0f11ca19 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="777" y="420" width="4" height="15" fill="rgb(238,71,25)"/><text x="780.00" y="430.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.36%)</title><rect x="777" y="436" width="4" height="15" fill="rgb(208,192,52)"/><text x="780.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.71%)</title><rect x="777" y="356" width="8" height="15" fill="rgb(236,41,13)"/><text x="780.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.71%)</title><rect x="777" y="372" width="8" height="15" fill="rgb(219,137,42)"/><text x="780.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.36%)</title><rect x="781" y="388" width="4" height="15" fill="rgb(242,100,27)"/><text x="784.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.36%)</title><rect x="781" y="404" width="4" height="15" fill="rgb(225,26,38)"/><text x="784.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.36%)</title><rect x="781" y="420" width="4" height="15" fill="rgb(232,76,6)"/><text x="784.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.36%)</title><rect x="781" y="436" width="4" height="15" fill="rgb(214,123,1)"/><text x="784.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.36%)</title><rect x="781" y="452" width="4" height="15" fill="rgb(208,103,26)"/><text x="784.00" y="462.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.36%)</title><rect x="785" y="404" width="4" height="15" fill="rgb(211,71,42)"/><text x="788.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.36%)</title><rect x="785" y="420" width="4" height="15" fill="rgb(206,226,52)"/><text x="788.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:85) (1 samples, 0.36%)</title><rect x="789" y="404" width="4" height="15" fill="rgb(209,7,4)"/><text x="792.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (3 samples, 1.07%)</title><rect x="785" y="356" width="13" height="15" fill="rgb(214,77,15)"/><text x="788.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 1.07%)</title><rect x="785" y="372" width="13" height="15" fill="rgb(207,100,45)"/><text x="788.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 1.07%)</title><rect x="785" y="388" width="13" height="15" fill="rgb(230,46,12)"/><text x="788.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.36%)</title><rect x="793" y="404" width="5" height="15" fill="rgb(226,95,26)"/><text x="796.00" y="414.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 2.14%)</title><rect x="777" y="324" width="25" height="15" fill="rgb(222,63,23)"/><text x="780.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 2.14%)</title><rect x="777" y="340" width="25" height="15" fill="rgb(213,212,15)"/><text x="780.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.36%)</title><rect x="798" y="356" width="4" height="15" fill="rgb(248,60,46)"/><text x="801.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.36%)</title><rect x="798" y="372" width="4" height="15" fill="rgb(240,218,49)"/><text x="801.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.36%)</title><rect x="798" y="388" width="4" height="15" fill="rgb(242,17,33)"/><text x="801.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 5.71%)</title><rect x="739" y="260" width="67" height="15" fill="rgb(250,137,20)"/><text x="742.00" y="270.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 5.71%)</title><rect x="739" y="276" width="67" height="15" fill="rgb(219,116,37)"/><text x="742.00" y="286.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (15 samples, 5.36%)</title><rect x="743" y="292" width="63" height="15" fill="rgb(245,167,25)"/><text x="746.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.64%)</title><rect x="751" y="308" width="55" height="15" fill="rgb(228,207,12)"/><text x="754.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.36%)</title><rect x="802" y="324" width="4" height="15" fill="rgb(222,182,43)"/><text x="805.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.36%)</title><rect x="802" y="340" width="4" height="15" fill="rgb(224,87,27)"/><text x="805.00" y="350.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (20 samples, 7.14%)</title><rect x="726" y="244" width="84" height="15" fill="rgb(220,182,4)"/><text x="729.00" y="254.50">norm_l1 (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.36%)</title><rect x="806" y="260" width="4" height="15" fill="rgb(218,58,53)"/><text x="809.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:442) (1 samples, 0.36%)</title><rect x="806" y="276" width="4" height="15" fill="rgb(227,224,52)"/><text x="809.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3162) (1 samples, 0.36%)</title><rect x="814" y="276" width="5" height="15" fill="rgb(226,172,19)"/><text x="817.00" y="286.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1323) (1 samples, 0.36%)</title><rect x="819" y="292" width="4" height="15" fill="rgb(207,16,6)"/><text x="822.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1967) (1 samples, 0.36%)</title><rect x="823" y="292" width="4" height="15" fill="rgb(209,55,25)"/><text x="826.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 1.07%)</title><rect x="819" y="276" width="12" height="15" fill="rgb(234,150,9)"/><text x="822.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.36%)</title><rect x="827" y="292" width="4" height="15" fill="rgb(218,68,31)"/><text x="830.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.36%)</title><rect x="827" y="308" width="4" height="15" fill="rgb(220,137,46)"/><text x="830.00" y="318.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.36%)</title><rect x="827" y="324" width="4" height="15" fill="rgb(220,115,6)"/><text x="830.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:757) (1 samples, 0.36%)</title><rect x="827" y="340" width="4" height="15" fill="rgb(207,140,22)"/><text x="830.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1511) (1 samples, 0.36%)</title><rect x="827" y="356" width="4" height="15" fill="rgb(207,53,26)"/><text x="830.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.36%)</title><rect x="831" y="324" width="5" height="15" fill="rgb(254,64,2)"/><text x="834.00" y="334.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:872) (1 samples, 0.36%)</title><rect x="831" y="340" width="5" height="15" fill="rgb(250,198,9)"/><text x="834.00" y="350.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.36%)</title><rect x="831" y="356" width="5" height="15" fill="rgb(247,125,26)"/><text x="834.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.71%)</title><rect x="831" y="308" width="9" height="15" fill="rgb(238,58,20)"/><text x="834.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.36%)</title><rect x="836" y="324" width="4" height="15" fill="rgb(217,193,49)"/><text x="839.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.36%)</title><rect x="836" y="340" width="4" height="15" fill="rgb(208,209,31)"/><text x="839.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (30 samples, 10.71%)</title><rect x="718" y="196" width="126" height="15" fill="rgb(215,137,9)"/><text x="721.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 10.71%)</title><rect x="718" y="212" width="126" height="15" fill="rgb(253,37,38)"/><text x="721.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (29 samples, 10.36%)</title><rect x="722" y="228" width="122" height="15" fill="rgb(215,167,10)"/><text x="725.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (8 samples, 2.86%)</title><rect x="810" y="244" width="34" height="15" fill="rgb(222,14,37)"/><text x="813.00" y="254.50">no..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.50%)</title><rect x="814" y="260" width="30" height="15" fill="rgb(237,170,40)"/><text x="817.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.07%)</title><rect x="831" y="276" width="13" height="15" fill="rgb(244,192,46)"/><text x="834.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.07%)</title><rect x="831" y="292" width="13" height="15" fill="rgb(226,3,38)"/><text x="834.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.36%)</title><rect x="840" y="308" width="4" height="15" fill="rgb(219,197,54)"/><text x="843.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:300) (1 samples, 0.36%)</title><rect x="840" y="324" width="4" height="15" fill="rgb(249,0,39)"/><text x="843.00" y="334.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.36%)</title><rect x="852" y="244" width="5" height="15" fill="rgb(218,69,21)"/><text x="855.00" y="254.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.36%)</title><rect x="865" y="308" width="4" height="15" fill="rgb(248,103,24)"/><text x="868.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.36%)</title><rect x="865" y="324" width="4" height="15" fill="rgb(210,149,12)"/><text x="868.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.36%)</title><rect x="865" y="340" width="4" height="15" fill="rgb(247,174,17)"/><text x="868.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.36%)</title><rect x="869" y="356" width="4" height="15" fill="rgb(238,47,44)"/><text x="872.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.71%)</title><rect x="869" y="324" width="9" height="15" fill="rgb(254,7,39)"/><text x="872.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (2 samples, 0.71%)</title><rect x="869" y="340" width="9" height="15" fill="rgb(252,51,11)"/><text x="872.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.36%)</title><rect x="873" y="356" width="5" height="15" fill="rgb(210,1,54)"/><text x="876.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.36%)</title><rect x="873" y="372" width="5" height="15" fill="rgb(240,1,47)"/><text x="876.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (7 samples, 2.50%)</title><rect x="852" y="228" width="30" height="15" fill="rgb(205,212,20)"/><text x="855.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (6 samples, 2.14%)</title><rect x="857" y="244" width="25" height="15" fill="rgb(222,33,18)"/><text x="860.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (4 samples, 1.43%)</title><rect x="865" y="260" width="17" height="15" fill="rgb(242,216,50)"/><text x="868.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.43%)</title><rect x="865" y="276" width="17" height="15" fill="rgb(247,218,8)"/><text x="868.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (4 samples, 1.43%)</title><rect x="865" y="292" width="17" height="15" fill="rgb(233,226,11)"/><text x="868.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.07%)</title><rect x="869" y="308" width="13" height="15" fill="rgb(239,6,43)"/><text x="872.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (1 samples, 0.36%)</title><rect x="878" y="324" width="4" height="15" fill="rgb(234,200,28)"/><text x="881.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (1 samples, 0.36%)</title><rect x="878" y="340" width="4" height="15" fill="rgb(215,130,10)"/><text x="881.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.36%)</title><rect x="878" y="356" width="4" height="15" fill="rgb(234,28,16)"/><text x="881.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.36%)</title><rect x="886" y="244" width="4" height="15" fill="rgb(231,24,34)"/><text x="889.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:712) (1 samples, 0.36%)</title><rect x="886" y="260" width="4" height="15" fill="rgb(236,111,29)"/><text x="889.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.36%)</title><rect x="890" y="260" width="5" height="15" fill="rgb(230,6,16)"/><text x="893.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.36%)</title><rect x="895" y="292" width="4" height="15" fill="rgb(234,56,0)"/><text x="898.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.36%)</title><rect x="899" y="292" width="4" height="15" fill="rgb(214,34,32)"/><text x="902.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.36%)</title><rect x="899" y="308" width="4" height="15" fill="rgb(237,43,10)"/><text x="902.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.36%)</title><rect x="899" y="324" width="4" height="15" fill="rgb(216,92,3)"/><text x="902.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.36%)</title><rect x="899" y="340" width="4" height="15" fill="rgb(231,141,54)"/><text x="902.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.36%)</title><rect x="899" y="356" width="4" height="15" fill="rgb(224,221,6)"/><text x="902.00" y="366.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.36%)</title><rect x="899" y="372" width="4" height="15" fill="rgb(217,38,19)"/><text x="902.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.43%)</title><rect x="895" y="260" width="16" height="15" fill="rgb(219,37,48)"/><text x="898.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.43%)</title><rect x="895" y="276" width="16" height="15" fill="rgb(249,30,14)"/><text x="898.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.71%)</title><rect x="903" y="292" width="8" height="15" fill="rgb(248,125,15)"/><text x="906.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (2 samples, 0.71%)</title><rect x="903" y="308" width="8" height="15" fill="rgb(254,16,0)"/><text x="906.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.36%)</title><rect x="907" y="324" width="4" height="15" fill="rgb(236,151,30)"/><text x="910.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (8 samples, 2.86%)</title><rect x="882" y="228" width="34" height="15" fill="rgb(215,86,29)"/><text x="885.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 2.14%)</title><rect x="890" y="244" width="26" height="15" fill="rgb(224,10,44)"/><text x="893.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.36%)</title><rect x="911" y="260" width="5" height="15" fill="rgb(226,153,36)"/><text x="914.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (2 samples, 0.71%)</title><rect x="916" y="228" width="8" height="15" fill="rgb(238,20,24)"/><text x="919.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (1 samples, 0.36%)</title><rect x="924" y="228" width="4" height="15" fill="rgb(243,63,15)"/><text x="927.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.36%)</title><rect x="932" y="276" width="5" height="15" fill="rgb(236,129,6)"/><text x="935.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.36%)</title><rect x="932" y="292" width="5" height="15" fill="rgb(232,59,44)"/><text x="935.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.36%)</title><rect x="932" y="308" width="5" height="15" fill="rgb(221,193,42)"/><text x="935.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.36%)</title><rect x="932" y="324" width="5" height="15" fill="rgb(254,103,2)"/><text x="935.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.36%)</title><rect x="932" y="340" width="5" height="15" fill="rgb(250,164,20)"/><text x="935.00" y="350.50"></text></g><g><title>0x7f6c0f11c7d8 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="932" y="356" width="5" height="15" fill="rgb(232,150,43)"/><text x="935.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (3 samples, 1.07%)</title><rect x="928" y="228" width="13" height="15" fill="rgb(221,66,17)"/><text x="931.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.71%)</title><rect x="932" y="244" width="9" height="15" fill="rgb(205,148,32)"/><text x="935.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.71%)</title><rect x="932" y="260" width="9" height="15" fill="rgb(215,64,19)"/><text x="935.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.36%)</title><rect x="937" y="276" width="4" height="15" fill="rgb(209,141,38)"/><text x="940.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.36%)</title><rect x="937" y="292" width="4" height="15" fill="rgb(243,137,34)"/><text x="940.00" y="302.50"></text></g><g><title>0x7f6bf156931a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.36%)</title><rect x="937" y="308" width="4" height="15" fill="rgb(216,117,9)"/><text x="940.00" y="318.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (2 samples, 0.71%)</title><rect x="945" y="244" width="9" height="15" fill="rgb(207,46,20)"/><text x="948.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.36%)</title><rect x="949" y="260" width="5" height="15" fill="rgb(247,145,0)"/><text x="952.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.36%)</title><rect x="954" y="292" width="4" height="15" fill="rgb(244,12,7)"/><text x="957.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (28 samples, 10.00%)</title><rect x="844" y="196" width="118" height="15" fill="rgb(228,110,40)"/><text x="847.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 9.64%)</title><rect x="848" y="212" width="114" height="15" fill="rgb(218,161,23)"/><text x="851.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (5 samples, 1.79%)</title><rect x="941" y="228" width="21" height="15" fill="rgb(208,34,0)"/><text x="944.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (2 samples, 0.71%)</title><rect x="954" y="244" width="8" height="15" fill="rgb(209,180,8)"/><text x="957.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.71%)</title><rect x="954" y="260" width="8" height="15" fill="rgb(208,97,0)"/><text x="957.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (2 samples, 0.71%)</title><rect x="954" y="276" width="8" height="15" fill="rgb(206,33,22)"/><text x="957.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.36%)</title><rect x="958" y="292" width="4" height="15" fill="rgb(247,207,16)"/><text x="961.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.36%)</title><rect x="958" y="308" width="4" height="15" fill="rgb(222,36,38)"/><text x="961.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.36%)</title><rect x="958" y="324" width="4" height="15" fill="rgb(210,68,47)"/><text x="961.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3097) (1 samples, 0.36%)</title><rect x="958" y="340" width="4" height="15" fill="rgb(231,88,33)"/><text x="961.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (72 samples, 25.71%)</title><rect x="671" y="180" width="304" height="15" fill="rgb(213,62,31)"/><text x="674.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (3 samples, 1.07%)</title><rect x="962" y="196" width="13" height="15" fill="rgb(206,53,33)"/><text x="965.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3240) (1 samples, 0.36%)</title><rect x="970" y="212" width="5" height="15" fill="rgb(235,106,2)"/><text x="973.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1505) (1 samples, 0.36%)</title><rect x="970" y="228" width="5" height="15" fill="rgb(205,148,34)"/><text x="973.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.36%)</title><rect x="975" y="180" width="4" height="15" fill="rgb(208,72,24)"/><text x="978.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.71%)</title><rect x="979" y="180" width="8" height="15" fill="rgb(241,158,3)"/><text x="982.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (4 samples, 1.43%)</title><rect x="987" y="180" width="17" height="15" fill="rgb(230,226,35)"/><text x="990.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (88 samples, 31.43%)</title><rect x="642" y="164" width="371" height="15" fill="rgb(232,78,8)"/><text x="645.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.71%)</title><rect x="1004" y="180" width="9" height="15" fill="rgb(231,29,33)"/><text x="1007.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (98 samples, 35.00%)</title><rect x="612" y="132" width="413" height="15" fill="rgb(247,93,4)"/><text x="615.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (97 samples, 34.64%)</title><rect x="616" y="148" width="409" height="15" fill="rgb(232,224,44)"/><text x="619.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (3 samples, 1.07%)</title><rect x="1013" y="164" width="12" height="15" fill="rgb(206,200,1)"/><text x="1016.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:45) (104 samples, 37.14%)</title><rect x="591" y="52" width="438" height="15" fill="rgb(248,195,9)"/><text x="594.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverlib..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:44) (104 samples, 37.14%)</title><rect x="591" y="68" width="438" height="15" fill="rgb(219,23,49)"/><text x="594.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:29) (104 samples, 37.14%)</title><rect x="591" y="84" width="438" height="15" fill="rgb(253,92,18)"/><text x="594.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solv..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:23) (102 samples, 36.43%)</title><rect x="600" y="100" width="429" height="15" fill="rgb(231,28,23)"/><text x="603.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlib..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (101 samples, 36.07%)</title><rect x="604" y="116" width="425" height="15" fill="rgb(208,100,31)"/><text x="607.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.36%)</title><rect x="1025" y="132" width="4" height="15" fill="rgb(236,202,27)"/><text x="1028.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.36%)</title><rect x="1038" y="148" width="4" height="15" fill="rgb(227,154,13)"/><text x="1041.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.36%)</title><rect x="1042" y="148" width="4" height="15" fill="rgb(237,77,16)"/><text x="1045.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.36%)</title><rect x="1055" y="196" width="4" height="15" fill="rgb(211,150,28)"/><text x="1058.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 1.07%)</title><rect x="1059" y="196" width="13" height="15" fill="rgb(245,175,8)"/><text x="1062.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.71%)</title><rect x="1063" y="212" width="9" height="15" fill="rgb(236,189,30)"/><text x="1066.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1067" y="228" width="5" height="15" fill="rgb(205,185,25)"/><text x="1070.00" y="238.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1067" y="244" width="5" height="15" fill="rgb(249,220,8)"/><text x="1070.00" y="254.50"></text></g><g><title>0x7f6c0f164be8 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1067" y="260" width="5" height="15" fill="rgb(250,204,50)"/><text x="1070.00" y="270.50"></text></g><g><title>0x7f6bcf9cdff9 (?) (1 samples, 0.36%)</title><rect x="1072" y="212" width="4" height="15" fill="rgb(214,164,53)"/><text x="1075.00" y="222.50"></text></g><g><title>0x7f6bcf9c8ef6 (?) (1 samples, 0.36%)</title><rect x="1072" y="228" width="4" height="15" fill="rgb(220,27,16)"/><text x="1075.00" y="238.50"></text></g><g><title>0x7f6bcf9bd91a (?) (1 samples, 0.36%)</title><rect x="1072" y="244" width="4" height="15" fill="rgb(218,142,22)"/><text x="1075.00" y="254.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="1072" y="260" width="4" height="15" fill="rgb(232,130,12)"/><text x="1075.00" y="270.50"></text></g><g><title>0x7f6c0f164d02 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1076" y="228" width="4" height="15" fill="rgb(207,91,25)"/><text x="1079.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1080" y="260" width="4" height="15" fill="rgb(248,72,2)"/><text x="1083.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1080" y="276" width="4" height="15" fill="rgb(227,84,4)"/><text x="1083.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="1080" y="292" width="4" height="15" fill="rgb(251,7,22)"/><text x="1083.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(214,14,39)"/><text x="1087.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1084" y="308" width="4" height="15" fill="rgb(233,197,10)"/><text x="1087.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1088" y="292" width="5" height="15" fill="rgb(219,173,16)"/><text x="1091.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1088" y="308" width="5" height="15" fill="rgb(216,30,48)"/><text x="1091.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(245,182,18)"/><text x="1096.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="356" width="4" height="15" fill="rgb(240,160,18)"/><text x="1096.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="372" width="4" height="15" fill="rgb(219,152,49)"/><text x="1096.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="388" width="4" height="15" fill="rgb(219,56,32)"/><text x="1096.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="404" width="4" height="15" fill="rgb(231,154,43)"/><text x="1096.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="420" width="4" height="15" fill="rgb(221,164,50)"/><text x="1096.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="436" width="4" height="15" fill="rgb(243,32,5)"/><text x="1096.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="452" width="4" height="15" fill="rgb(239,150,28)"/><text x="1096.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="468" width="4" height="15" fill="rgb(219,72,45)"/><text x="1096.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="484" width="4" height="15" fill="rgb(232,52,23)"/><text x="1096.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="500" width="4" height="15" fill="rgb(205,61,22)"/><text x="1096.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="516" width="4" height="15" fill="rgb(205,165,25)"/><text x="1096.00" y="526.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1093" y="532" width="4" height="15" fill="rgb(241,44,21)"/><text x="1096.00" y="542.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1097" y="356" width="4" height="15" fill="rgb(228,34,53)"/><text x="1100.00" y="366.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1101" y="356" width="4" height="15" fill="rgb(211,221,30)"/><text x="1104.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1101" y="372" width="4" height="15" fill="rgb(247,19,41)"/><text x="1104.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.36%)</title><rect x="1101" y="388" width="4" height="15" fill="rgb(253,117,28)"/><text x="1104.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1105" y="356" width="4" height="15" fill="rgb(246,214,44)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1097" y="340" width="17" height="15" fill="rgb(216,56,7)"/><text x="1100.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1109" y="356" width="5" height="15" fill="rgb(213,73,47)"/><text x="1112.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1114" y="340" width="4" height="15" fill="rgb(218,176,0)"/><text x="1117.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1114" y="356" width="4" height="15" fill="rgb(248,42,22)"/><text x="1117.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1114" y="372" width="4" height="15" fill="rgb(236,161,54)"/><text x="1117.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetInputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1118" y="372" width="4" height="15" fill="rgb(211,21,10)"/><text x="1121.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.57%)</title><rect x="1084" y="276" width="42" height="15" fill="rgb(212,222,24)"/><text x="1087.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.86%)</title><rect x="1093" y="292" width="33" height="15" fill="rgb(224,194,50)"/><text x="1096.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.86%)</title><rect x="1093" y="308" width="33" height="15" fill="rgb(236,130,54)"/><text x="1096.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.86%)</title><rect x="1093" y="324" width="33" height="15" fill="rgb(227,129,9)"/><text x="1096.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1118" y="340" width="8" height="15" fill="rgb(254,110,31)"/><text x="1121.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1118" y="356" width="8" height="15" fill="rgb(253,167,9)"/><text x="1121.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="372" width="4" height="15" fill="rgb(226,94,6)"/><text x="1125.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="388" width="4" height="15" fill="rgb(247,160,52)"/><text x="1125.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="404" width="4" height="15" fill="rgb(246,106,16)"/><text x="1125.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1122" y="420" width="4" height="15" fill="rgb(214,75,39)"/><text x="1125.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.93%)</title><rect x="1084" y="260" width="47" height="15" fill="rgb(215,106,24)"/><text x="1087.00" y="270.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1126" y="276" width="5" height="15" fill="rgb(254,106,15)"/><text x="1129.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1126" y="292" width="5" height="15" fill="rgb(225,144,24)"/><text x="1129.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1126" y="308" width="5" height="15" fill="rgb(234,211,16)"/><text x="1129.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1131" y="260" width="8" height="15" fill="rgb(237,13,28)"/><text x="1134.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1135" y="276" width="4" height="15" fill="rgb(236,122,20)"/><text x="1138.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.36%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(219,103,5)"/><text x="1142.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.36%)</title><rect x="1139" y="308" width="4" height="15" fill="rgb(239,48,28)"/><text x="1142.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1139" y="260" width="8" height="15" fill="rgb(214,192,19)"/><text x="1142.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.71%)</title><rect x="1139" y="276" width="8" height="15" fill="rgb(251,37,39)"/><text x="1142.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.36%)</title><rect x="1143" y="292" width="4" height="15" fill="rgb(219,227,33)"/><text x="1146.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.36%)</title><rect x="1143" y="308" width="4" height="15" fill="rgb(241,22,43)"/><text x="1146.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.36%)</title><rect x="1143" y="324" width="4" height="15" fill="rgb(206,35,13)"/><text x="1146.00" y="334.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1147" y="260" width="5" height="15" fill="rgb(210,180,53)"/><text x="1150.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1152" y="276" width="8" height="15" fill="rgb(237,159,45)"/><text x="1155.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1152" y="292" width="8" height="15" fill="rgb(232,62,37)"/><text x="1155.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1152" y="308" width="8" height="15" fill="rgb(206,31,48)"/><text x="1155.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(218,204,49)"/><text x="1159.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="340" width="4" height="15" fill="rgb(238,151,54)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(229,17,41)"/><text x="1159.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="372" width="4" height="15" fill="rgb(252,207,38)"/><text x="1159.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1156" y="388" width="4" height="15" fill="rgb(250,142,48)"/><text x="1159.00" y="398.50"></text></g><g><title>0x7f6c0f164991 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1156" y="404" width="4" height="15" fill="rgb(215,11,23)"/><text x="1159.00" y="414.50"></text></g><g><title>0x7f6bfec317a0 (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1160" y="292" width="4" height="15" fill="rgb(232,20,28)"/><text x="1163.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.50%)</title><rect x="1080" y="244" width="88" height="15" fill="rgb(208,160,40)"/><text x="1083.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.43%)</title><rect x="1152" y="260" width="16" height="15" fill="rgb(220,47,52)"/><text x="1155.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1160" y="276" width="8" height="15" fill="rgb(213,132,35)"/><text x="1163.00" y="286.50"></text></g><g><title>0x7f6c0f164991 (libc-2.29.so) (1 samples, 0.36%)</title><rect x="1164" y="292" width="4" height="15" fill="rgb(216,72,32)"/><text x="1167.00" y="302.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1168" y="244" width="9" height="15" fill="rgb(224,68,38)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.71%)</title><rect x="1168" y="260" width="9" height="15" fill="rgb(212,84,19)"/><text x="1171.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1173" y="276" width="4" height="15" fill="rgb(236,143,33)"/><text x="1176.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1173" y="292" width="4" height="15" fill="rgb(225,9,5)"/><text x="1176.00" y="302.50"></text></g><g><title>0x7f6bfec30d50 (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1173" y="308" width="4" height="15" fill="rgb(227,98,1)"/><text x="1176.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (32 samples, 11.43%)</title><rect x="1046" y="164" width="135" height="15" fill="rgb(209,11,19)"/><text x="1049.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (31 samples, 11.07%)</title><rect x="1050" y="180" width="131" height="15" fill="rgb(213,11,46)"/><text x="1053.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py:136) (26 samples, 9.29%)</title><rect x="1072" y="196" width="109" height="15" fill="rgb(240,4,2)"/><text x="1075.00" y="206.50">run (onnxrunt..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 8.93%)</title><rect x="1076" y="212" width="105" height="15" fill="rgb(249,159,10)"/><text x="1079.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 8.57%)</title><rect x="1080" y="228" width="101" height="15" fill="rgb(214,32,34)"/><text x="1083.00" y="238.50">void pybind1..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1177" y="244" width="4" height="15" fill="rgb(238,2,20)"/><text x="1180.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.36%)</title><rect x="1177" y="260" width="4" height="15" fill="rgb(243,94,40)"/><text x="1180.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.36%)</title><rect x="1177" y="276" width="4" height="15" fill="rgb(237,58,44)"/><text x="1180.00" y="286.50"></text></g><g><title>all (280 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(224,128,23)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:52) (38 samples, 13.57%)</title><rect x="1029" y="52" width="161" height="15" fill="rgb(216,102,7)"/><text x="1032.00" y="62.50">&lt;module&gt; (bench_Logi..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:51) (38 samples, 13.57%)</title><rect x="1029" y="68" width="161" height="15" fill="rgb(244,148,5)"/><text x="1032.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:29) (38 samples, 13.57%)</title><rect x="1029" y="84" width="161" height="15" fill="rgb(217,34,12)"/><text x="1032.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_4_12_float_.py:23) (38 samples, 13.57%)</title><rect x="1029" y="100" width="161" height="15" fill="rgb(223,218,51)"/><text x="1032.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (37 samples, 13.21%)</title><rect x="1034" y="116" width="156" height="15" fill="rgb(248,24,12)"/><text x="1037.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (36 samples, 12.86%)</title><rect x="1038" y="132" width="152" height="15" fill="rgb(245,19,25)"/><text x="1041.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (34 samples, 12.14%)</title><rect x="1046" y="148" width="144" height="15" fill="rgb(208,211,5)"/><text x="1049.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.71%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(249,203,32)"/><text x="1184.00" y="174.50"></text></g></g></svg>