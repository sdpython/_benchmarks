<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.33%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(219,207,1)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(219,121,9)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(222,31,8)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(232,135,12)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(248,14,53)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(229,129,15)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.33%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(251,55,45)"/><text x="13.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(241,215,10)"/><text x="13.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(250,171,42)"/><text x="13.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(211,203,4)"/><text x="13.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(240,84,22)"/><text x="13.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(246,113,43)"/><text x="13.00" y="1246.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="10" y="1252" width="3" height="15" fill="rgb(246,35,52)"/><text x="13.00" y="1262.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.33%)</title><rect x="10" y="1268" width="3" height="15" fill="rgb(218,85,14)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="10" y="980" width="7" height="15" fill="rgb(252,214,31)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="10" y="996" width="7" height="15" fill="rgb(250,102,7)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="10" y="1012" width="7" height="15" fill="rgb(224,135,19)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="10" y="1028" width="7" height="15" fill="rgb(242,131,29)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="10" y="1044" width="7" height="15" fill="rgb(233,168,51)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="13" y="1060" width="4" height="15" fill="rgb(216,70,14)"/><text x="16.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="13" y="1076" width="4" height="15" fill="rgb(218,221,14)"/><text x="16.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="13" y="1092" width="4" height="15" fill="rgb(224,162,22)"/><text x="16.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="13" y="1108" width="4" height="15" fill="rgb(240,165,34)"/><text x="16.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="13" y="1124" width="4" height="15" fill="rgb(229,99,34)"/><text x="16.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="13" y="1140" width="4" height="15" fill="rgb(230,154,39)"/><text x="16.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="13" y="1156" width="4" height="15" fill="rgb(212,188,3)"/><text x="16.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.33%)</title><rect x="13" y="1172" width="4" height="15" fill="rgb(226,68,8)"/><text x="16.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.33%)</title><rect x="13" y="1188" width="4" height="15" fill="rgb(227,58,18)"/><text x="16.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.33%)</title><rect x="13" y="1204" width="4" height="15" fill="rgb(218,51,32)"/><text x="16.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.33%)</title><rect x="13" y="1220" width="4" height="15" fill="rgb(208,143,51)"/><text x="16.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.33%)</title><rect x="13" y="1236" width="4" height="15" fill="rgb(232,154,4)"/><text x="16.00" y="1246.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.33%)</title><rect x="13" y="1252" width="4" height="15" fill="rgb(224,19,2)"/><text x="16.00" y="1262.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="13" y="1268" width="4" height="15" fill="rgb(225,124,19)"/><text x="16.00" y="1278.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="13" y="1284" width="4" height="15" fill="rgb(220,171,6)"/><text x="16.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1332" width="4" height="15" fill="rgb(254,202,7)"/><text x="20.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1348" width="4" height="15" fill="rgb(243,125,16)"/><text x="20.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1364" width="4" height="15" fill="rgb(210,83,12)"/><text x="20.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1380" width="4" height="15" fill="rgb(238,48,49)"/><text x="20.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1396" width="4" height="15" fill="rgb(248,74,32)"/><text x="20.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="17" y="1412" width="4" height="15" fill="rgb(252,11,8)"/><text x="20.00" y="1422.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="17" y="1428" width="4" height="15" fill="rgb(251,101,44)"/><text x="20.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1444" width="4" height="15" fill="rgb(216,182,26)"/><text x="20.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1460" width="4" height="15" fill="rgb(245,213,44)"/><text x="20.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1476" width="4" height="15" fill="rgb(231,22,34)"/><text x="20.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1492" width="4" height="15" fill="rgb(224,160,30)"/><text x="20.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1508" width="4" height="15" fill="rgb(215,148,25)"/><text x="20.00" y="1518.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="1524" width="4" height="15" fill="rgb(237,112,4)"/><text x="20.00" y="1534.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="1540" width="4" height="15" fill="rgb(218,73,42)"/><text x="20.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1556" width="4" height="15" fill="rgb(218,225,48)"/><text x="20.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1572" width="4" height="15" fill="rgb(245,141,32)"/><text x="20.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1588" width="4" height="15" fill="rgb(248,141,39)"/><text x="20.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1604" width="4" height="15" fill="rgb(234,139,28)"/><text x="20.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1620" width="4" height="15" fill="rgb(206,182,0)"/><text x="20.00" y="1630.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="17" y="1636" width="4" height="15" fill="rgb(238,157,14)"/><text x="20.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1652" width="4" height="15" fill="rgb(207,94,39)"/><text x="20.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1668" width="4" height="15" fill="rgb(225,151,21)"/><text x="20.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1684" width="4" height="15" fill="rgb(252,7,36)"/><text x="20.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1700" width="4" height="15" fill="rgb(241,121,47)"/><text x="20.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1716" width="4" height="15" fill="rgb(249,96,41)"/><text x="20.00" y="1726.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.33%)</title><rect x="17" y="1732" width="4" height="15" fill="rgb(219,196,52)"/><text x="20.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1748" width="4" height="15" fill="rgb(250,155,32)"/><text x="20.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1764" width="4" height="15" fill="rgb(238,188,53)"/><text x="20.00" y="1774.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="17" y="1780" width="4" height="15" fill="rgb(218,88,26)"/><text x="20.00" y="1790.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1796" width="4" height="15" fill="rgb(222,167,13)"/><text x="20.00" y="1806.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1812" width="4" height="15" fill="rgb(242,92,32)"/><text x="20.00" y="1822.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="17" y="1828" width="4" height="15" fill="rgb(254,90,17)"/><text x="20.00" y="1838.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="628" width="15" height="15" fill="rgb(214,48,33)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="644" width="15" height="15" fill="rgb(229,21,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="660" width="15" height="15" fill="rgb(248,80,23)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="676" width="15" height="15" fill="rgb(252,73,19)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="692" width="15" height="15" fill="rgb(246,175,53)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="708" width="15" height="15" fill="rgb(254,52,54)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.31%)</title><rect x="10" y="724" width="15" height="15" fill="rgb(246,157,1)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="740" width="15" height="15" fill="rgb(246,4,37)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="756" width="15" height="15" fill="rgb(237,219,38)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="772" width="15" height="15" fill="rgb(246,175,2)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="788" width="15" height="15" fill="rgb(238,97,11)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="804" width="15" height="15" fill="rgb(250,205,17)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="820" width="15" height="15" fill="rgb(232,34,14)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(215,39,1)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="852" width="15" height="15" fill="rgb(216,187,49)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.31%)</title><rect x="10" y="868" width="15" height="15" fill="rgb(248,30,19)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="884" width="15" height="15" fill="rgb(241,31,31)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="900" width="15" height="15" fill="rgb(239,177,49)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="916" width="15" height="15" fill="rgb(219,111,4)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="10" y="932" width="15" height="15" fill="rgb(217,43,2)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="10" y="948" width="15" height="15" fill="rgb(214,6,40)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.31%)</title><rect x="10" y="964" width="15" height="15" fill="rgb(214,196,1)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="980" width="8" height="15" fill="rgb(209,65,31)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="996" width="8" height="15" fill="rgb(254,214,5)"/><text x="20.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1012" width="8" height="15" fill="rgb(225,215,29)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1028" width="8" height="15" fill="rgb(233,225,38)"/><text x="20.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1044" width="8" height="15" fill="rgb(235,0,36)"/><text x="20.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="17" y="1060" width="8" height="15" fill="rgb(206,159,4)"/><text x="20.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1076" width="8" height="15" fill="rgb(208,44,20)"/><text x="20.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.65%)</title><rect x="17" y="1092" width="8" height="15" fill="rgb(239,161,51)"/><text x="20.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1108" width="8" height="15" fill="rgb(211,135,34)"/><text x="20.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1124" width="8" height="15" fill="rgb(230,152,34)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1140" width="8" height="15" fill="rgb(231,89,11)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1156" width="8" height="15" fill="rgb(236,60,46)"/><text x="20.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1172" width="8" height="15" fill="rgb(214,207,46)"/><text x="20.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="17" y="1188" width="8" height="15" fill="rgb(222,133,36)"/><text x="20.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1204" width="8" height="15" fill="rgb(217,124,14)"/><text x="20.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.65%)</title><rect x="17" y="1220" width="8" height="15" fill="rgb(244,212,5)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1236" width="8" height="15" fill="rgb(247,218,7)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1252" width="8" height="15" fill="rgb(241,154,12)"/><text x="20.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1268" width="8" height="15" fill="rgb(225,124,19)"/><text x="20.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="17" y="1284" width="8" height="15" fill="rgb(228,175,11)"/><text x="20.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="17" y="1300" width="8" height="15" fill="rgb(212,137,22)"/><text x="20.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.65%)</title><rect x="17" y="1316" width="8" height="15" fill="rgb(244,68,5)"/><text x="20.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="21" y="1332" width="4" height="15" fill="rgb(246,198,8)"/><text x="24.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.33%)</title><rect x="21" y="1348" width="4" height="15" fill="rgb(216,48,29)"/><text x="24.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.33%)</title><rect x="21" y="1364" width="4" height="15" fill="rgb(247,161,37)"/><text x="24.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="21" y="1380" width="4" height="15" fill="rgb(211,131,39)"/><text x="24.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="21" y="1396" width="4" height="15" fill="rgb(243,132,25)"/><text x="24.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="21" y="1412" width="4" height="15" fill="rgb(205,146,42)"/><text x="24.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.33%)</title><rect x="21" y="1428" width="4" height="15" fill="rgb(250,25,36)"/><text x="24.00" y="1438.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="21" y="1444" width="4" height="15" fill="rgb(252,70,32)"/><text x="24.00" y="1454.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="1460" width="4" height="15" fill="rgb(252,59,7)"/><text x="24.00" y="1470.50"></text></g><g><title>0x7f14bb36b6b3 (?) (1 samples, 0.33%)</title><rect x="21" y="1476" width="4" height="15" fill="rgb(208,82,34)"/><text x="24.00" y="1486.50"></text></g><g><title>0x7f14bb4118e7 (?) (1 samples, 0.33%)</title><rect x="21" y="1492" width="4" height="15" fill="rgb(222,100,35)"/><text x="24.00" y="1502.50"></text></g><g><title>0x7f14bb41076d (?) (1 samples, 0.33%)</title><rect x="21" y="1508" width="4" height="15" fill="rgb(216,55,15)"/><text x="24.00" y="1518.50"></text></g><g><title>0x7f14bb3b2105 (?) (1 samples, 0.33%)</title><rect x="21" y="1524" width="4" height="15" fill="rgb(244,160,2)"/><text x="24.00" y="1534.50"></text></g><g><title>0x7f14bb41a589 (?) (1 samples, 0.33%)</title><rect x="21" y="1540" width="4" height="15" fill="rgb(250,91,45)"/><text x="24.00" y="1550.50"></text></g><g><title>__tls_get_addr (ld-2.29.so) (1 samples, 0.33%)</title><rect x="21" y="1556" width="4" height="15" fill="rgb(230,190,23)"/><text x="24.00" y="1566.50"></text></g><g><title>0x7f14cd2f24dc (ld-2.29.so) (1 samples, 0.33%)</title><rect x="21" y="1572" width="4" height="15" fill="rgb(219,46,15)"/><text x="24.00" y="1582.50"></text></g><g><title>0x7f14cd2f22b0 (ld-2.29.so) (1 samples, 0.33%)</title><rect x="21" y="1588" width="4" height="15" fill="rgb(236,116,19)"/><text x="24.00" y="1598.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="25" y="1396" width="4" height="15" fill="rgb(223,213,20)"/><text x="28.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.33%)</title><rect x="25" y="1412" width="4" height="15" fill="rgb(241,88,50)"/><text x="28.00" y="1422.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.33%)</title><rect x="25" y="1428" width="4" height="15" fill="rgb(223,91,44)"/><text x="28.00" y="1438.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="25" y="1444" width="4" height="15" fill="rgb(232,159,7)"/><text x="28.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="25" y="1460" width="4" height="15" fill="rgb(214,1,32)"/><text x="28.00" y="1470.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.33%)</title><rect x="25" y="1476" width="4" height="15" fill="rgb(210,123,43)"/><text x="28.00" y="1486.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.33%)</title><rect x="25" y="1492" width="4" height="15" fill="rgb(208,113,14)"/><text x="28.00" y="1502.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="29" y="1396" width="4" height="15" fill="rgb(212,177,37)"/><text x="32.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="340" width="26" height="15" fill="rgb(234,83,4)"/><text x="13.00" y="350.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="356" width="26" height="15" fill="rgb(228,116,36)"/><text x="13.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="372" width="26" height="15" fill="rgb(232,112,29)"/><text x="13.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="388" width="26" height="15" fill="rgb(207,27,34)"/><text x="13.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.29%)</title><rect x="10" y="404" width="26" height="15" fill="rgb(240,217,37)"/><text x="13.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="420" width="26" height="15" fill="rgb(209,77,31)"/><text x="13.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 2.29%)</title><rect x="10" y="436" width="26" height="15" fill="rgb(244,49,48)"/><text x="13.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="452" width="26" height="15" fill="rgb(248,158,49)"/><text x="13.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="468" width="26" height="15" fill="rgb(241,183,37)"/><text x="13.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="484" width="26" height="15" fill="rgb(214,86,12)"/><text x="13.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.29%)</title><rect x="10" y="500" width="26" height="15" fill="rgb(222,203,41)"/><text x="13.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="516" width="26" height="15" fill="rgb(224,170,36)"/><text x="13.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 2.29%)</title><rect x="10" y="532" width="26" height="15" fill="rgb(216,62,54)"/><text x="13.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="548" width="26" height="15" fill="rgb(219,71,38)"/><text x="13.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="564" width="26" height="15" fill="rgb(238,1,33)"/><text x="13.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="580" width="26" height="15" fill="rgb(236,178,34)"/><text x="13.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.29%)</title><rect x="10" y="596" width="26" height="15" fill="rgb(226,37,41)"/><text x="13.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.29%)</title><rect x="10" y="612" width="26" height="15" fill="rgb(246,196,27)"/><text x="13.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="628" width="11" height="15" fill="rgb(216,156,1)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="644" width="11" height="15" fill="rgb(236,58,24)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="660" width="11" height="15" fill="rgb(234,135,2)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="676" width="11" height="15" fill="rgb(217,208,38)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="692" width="11" height="15" fill="rgb(219,21,21)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="708" width="11" height="15" fill="rgb(219,214,25)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.98%)</title><rect x="25" y="724" width="11" height="15" fill="rgb(221,83,20)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="740" width="11" height="15" fill="rgb(226,209,50)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="756" width="11" height="15" fill="rgb(228,117,36)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="772" width="11" height="15" fill="rgb(222,102,9)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="788" width="11" height="15" fill="rgb(229,95,17)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="804" width="11" height="15" fill="rgb(242,24,4)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="820" width="11" height="15" fill="rgb(216,81,26)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="836" width="11" height="15" fill="rgb(236,205,13)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="852" width="11" height="15" fill="rgb(229,207,15)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="868" width="11" height="15" fill="rgb(218,175,18)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="884" width="11" height="15" fill="rgb(236,119,4)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="900" width="11" height="15" fill="rgb(219,133,43)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.98%)</title><rect x="25" y="916" width="11" height="15" fill="rgb(209,94,1)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="932" width="11" height="15" fill="rgb(219,69,28)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="948" width="11" height="15" fill="rgb(207,167,32)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="964" width="11" height="15" fill="rgb(237,163,30)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="980" width="11" height="15" fill="rgb(244,202,37)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="996" width="11" height="15" fill="rgb(208,25,43)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.98%)</title><rect x="25" y="1012" width="11" height="15" fill="rgb(221,109,26)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1028" width="11" height="15" fill="rgb(230,124,23)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1044" width="11" height="15" fill="rgb(221,225,5)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1060" width="11" height="15" fill="rgb(233,50,21)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="1076" width="11" height="15" fill="rgb(208,207,41)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1092" width="11" height="15" fill="rgb(225,120,42)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.98%)</title><rect x="25" y="1108" width="11" height="15" fill="rgb(251,56,49)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1124" width="11" height="15" fill="rgb(247,46,32)"/><text x="28.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1140" width="11" height="15" fill="rgb(216,49,13)"/><text x="28.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1156" width="11" height="15" fill="rgb(225,205,33)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1172" width="11" height="15" fill="rgb(229,228,27)"/><text x="28.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1188" width="11" height="15" fill="rgb(226,97,2)"/><text x="28.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="1204" width="11" height="15" fill="rgb(248,177,11)"/><text x="28.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1220" width="11" height="15" fill="rgb(207,143,6)"/><text x="28.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.98%)</title><rect x="25" y="1236" width="11" height="15" fill="rgb(231,51,28)"/><text x="28.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1252" width="11" height="15" fill="rgb(207,42,47)"/><text x="28.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1268" width="11" height="15" fill="rgb(221,21,20)"/><text x="28.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1284" width="11" height="15" fill="rgb(229,148,37)"/><text x="28.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1300" width="11" height="15" fill="rgb(216,27,47)"/><text x="28.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1316" width="11" height="15" fill="rgb(243,110,10)"/><text x="28.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.98%)</title><rect x="25" y="1332" width="11" height="15" fill="rgb(239,40,10)"/><text x="28.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="25" y="1348" width="11" height="15" fill="rgb(214,92,5)"/><text x="28.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (3 samples, 0.98%)</title><rect x="25" y="1364" width="11" height="15" fill="rgb(253,182,31)"/><text x="28.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (3 samples, 0.98%)</title><rect x="25" y="1380" width="11" height="15" fill="rgb(243,111,43)"/><text x="28.00" y="1390.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.33%)</title><rect x="33" y="1396" width="3" height="15" fill="rgb(235,190,8)"/><text x="36.00" y="1406.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.33%)</title><rect x="33" y="1412" width="3" height="15" fill="rgb(247,22,48)"/><text x="36.00" y="1422.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.33%)</title><rect x="33" y="1428" width="3" height="15" fill="rgb(230,173,31)"/><text x="36.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.61%)</title><rect x="10" y="292" width="30" height="15" fill="rgb(242,216,54)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="10" y="308" width="30" height="15" fill="rgb(233,228,5)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.61%)</title><rect x="10" y="324" width="30" height="15" fill="rgb(235,59,19)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="340" width="4" height="15" fill="rgb(239,210,0)"/><text x="39.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="356" width="4" height="15" fill="rgb(225,55,29)"/><text x="39.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="372" width="4" height="15" fill="rgb(219,133,51)"/><text x="39.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="36" y="388" width="4" height="15" fill="rgb(209,182,18)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="404" width="4" height="15" fill="rgb(254,66,36)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="420" width="4" height="15" fill="rgb(218,95,31)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="436" width="4" height="15" fill="rgb(227,49,12)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="452" width="4" height="15" fill="rgb(205,194,7)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="468" width="4" height="15" fill="rgb(242,155,19)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.33%)</title><rect x="36" y="484" width="4" height="15" fill="rgb(218,113,37)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="500" width="4" height="15" fill="rgb(224,78,46)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="516" width="4" height="15" fill="rgb(250,126,43)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="532" width="4" height="15" fill="rgb(254,144,54)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="548" width="4" height="15" fill="rgb(238,30,17)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="564" width="4" height="15" fill="rgb(252,87,26)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.33%)</title><rect x="36" y="580" width="4" height="15" fill="rgb(247,134,16)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="596" width="4" height="15" fill="rgb(249,132,26)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="612" width="4" height="15" fill="rgb(216,101,33)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(231,196,11)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(253,222,31)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(220,1,42)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.33%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(237,110,49)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(253,186,10)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(205,134,26)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(245,168,44)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(229,126,11)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(224,151,51)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.33%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(233,199,8)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(220,151,52)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(244,9,15)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(228,66,5)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(210,70,49)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(248,224,13)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.33%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(212,201,11)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(238,56,26)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(239,199,38)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(205,45,3)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(234,72,45)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(237,128,34)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.33%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(206,148,54)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(209,185,48)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(244,57,37)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(223,226,53)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(237,37,30)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(221,79,11)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.33%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(251,147,12)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(205,161,15)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(247,48,36)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(241,20,8)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(207,22,42)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(227,129,16)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.33%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(239,126,54)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(207,175,18)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(222,147,18)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(213,66,1)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(215,199,26)"/><text x="39.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(225,143,46)"/><text x="39.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(254,87,43)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(249,211,14)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(218,225,29)"/><text x="39.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(236,188,34)"/><text x="39.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(223,36,2)"/><text x="39.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(228,14,27)"/><text x="39.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.33%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(222,175,46)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(249,21,10)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1380" width="4" height="15" fill="rgb(235,28,10)"/><text x="39.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1396" width="4" height="15" fill="rgb(230,101,13)"/><text x="39.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="36" y="1412" width="4" height="15" fill="rgb(245,221,42)"/><text x="39.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1428" width="4" height="15" fill="rgb(222,95,6)"/><text x="39.00" y="1438.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (1 samples, 0.33%)</title><rect x="36" y="1444" width="4" height="15" fill="rgb(253,166,54)"/><text x="39.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1460" width="4" height="15" fill="rgb(219,219,30)"/><text x="39.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(226,153,22)"/><text x="39.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(215,182,45)"/><text x="39.00" y="1502.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(227,5,43)"/><text x="39.00" y="1518.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(242,167,22)"/><text x="39.00" y="1534.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(244,83,29)"/><text x="43.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(247,24,47)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="40" y="964" width="4" height="15" fill="rgb(235,0,53)"/><text x="43.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="40" y="980" width="4" height="15" fill="rgb(235,92,46)"/><text x="43.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="40" y="996" width="4" height="15" fill="rgb(231,79,30)"/><text x="43.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.33%)</title><rect x="40" y="1012" width="4" height="15" fill="rgb(245,201,7)"/><text x="43.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.33%)</title><rect x="40" y="1028" width="4" height="15" fill="rgb(228,65,32)"/><text x="43.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.33%)</title><rect x="40" y="1044" width="4" height="15" fill="rgb(239,100,45)"/><text x="43.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="836" width="8" height="15" fill="rgb(237,158,12)"/><text x="43.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="852" width="8" height="15" fill="rgb(207,225,7)"/><text x="43.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="868" width="8" height="15" fill="rgb(227,188,16)"/><text x="43.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="884" width="8" height="15" fill="rgb(218,30,51)"/><text x="43.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="900" width="8" height="15" fill="rgb(239,18,38)"/><text x="43.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.65%)</title><rect x="40" y="916" width="8" height="15" fill="rgb(238,53,41)"/><text x="43.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="932" width="4" height="15" fill="rgb(219,83,50)"/><text x="47.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="948" width="4" height="15" fill="rgb(243,216,41)"/><text x="47.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="964" width="4" height="15" fill="rgb(235,50,30)"/><text x="47.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="44" y="980" width="4" height="15" fill="rgb(210,140,10)"/><text x="47.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.33%)</title><rect x="44" y="996" width="4" height="15" fill="rgb(221,82,41)"/><text x="47.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="44" y="1012" width="4" height="15" fill="rgb(239,78,21)"/><text x="47.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="44" y="1028" width="4" height="15" fill="rgb(226,34,46)"/><text x="47.00" y="1038.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="884" width="4" height="15" fill="rgb(223,52,10)"/><text x="51.00" y="894.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.33%)</title><rect x="48" y="900" width="4" height="15" fill="rgb(231,10,47)"/><text x="51.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="916" width="4" height="15" fill="rgb(213,12,25)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="932" width="4" height="15" fill="rgb(236,46,51)"/><text x="51.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="948" width="4" height="15" fill="rgb(241,91,15)"/><text x="51.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(241,181,37)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(215,173,23)"/><text x="51.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="996" width="4" height="15" fill="rgb(213,65,32)"/><text x="51.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="48" y="1012" width="4" height="15" fill="rgb(212,213,49)"/><text x="51.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="48" y="1028" width="4" height="15" fill="rgb(220,91,42)"/><text x="51.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/six.py) (1 samples, 0.33%)</title><rect x="48" y="1044" width="4" height="15" fill="rgb(252,111,48)"/><text x="51.00" y="1054.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.33%)</title><rect x="52" y="916" width="4" height="15" fill="rgb(223,34,21)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="932" width="4" height="15" fill="rgb(237,16,10)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="948" width="4" height="15" fill="rgb(243,46,12)"/><text x="55.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="964" width="4" height="15" fill="rgb(206,152,44)"/><text x="55.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="52" y="980" width="4" height="15" fill="rgb(231,214,20)"/><text x="55.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="52" y="996" width="4" height="15" fill="rgb(223,133,5)"/><text x="55.00" y="1006.50"></text></g><g><title>&lt;module&gt; (dis.py) (1 samples, 0.33%)</title><rect x="52" y="1012" width="4" height="15" fill="rgb(226,163,38)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="404" width="20" height="15" fill="rgb(207,5,23)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="420" width="20" height="15" fill="rgb(240,148,41)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="436" width="20" height="15" fill="rgb(226,93,45)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="40" y="452" width="20" height="15" fill="rgb(238,229,4)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="468" width="20" height="15" fill="rgb(221,31,5)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.63%)</title><rect x="40" y="484" width="20" height="15" fill="rgb(224,8,17)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="500" width="20" height="15" fill="rgb(209,99,0)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="516" width="20" height="15" fill="rgb(234,195,25)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="532" width="20" height="15" fill="rgb(247,192,49)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="40" y="548" width="20" height="15" fill="rgb(237,141,10)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="564" width="20" height="15" fill="rgb(226,36,16)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.63%)</title><rect x="40" y="580" width="20" height="15" fill="rgb(205,117,11)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="596" width="20" height="15" fill="rgb(251,3,1)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="612" width="20" height="15" fill="rgb(211,139,30)"/><text x="43.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="628" width="20" height="15" fill="rgb(245,74,11)"/><text x="43.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="644" width="20" height="15" fill="rgb(249,219,11)"/><text x="43.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="660" width="20" height="15" fill="rgb(229,47,3)"/><text x="43.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="676" width="20" height="15" fill="rgb(242,171,41)"/><text x="43.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="40" y="692" width="20" height="15" fill="rgb(219,44,39)"/><text x="43.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="708" width="20" height="15" fill="rgb(243,124,21)"/><text x="43.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.63%)</title><rect x="40" y="724" width="20" height="15" fill="rgb(212,46,52)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="740" width="20" height="15" fill="rgb(247,135,25)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="756" width="20" height="15" fill="rgb(223,228,31)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="772" width="20" height="15" fill="rgb(233,98,28)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="40" y="788" width="20" height="15" fill="rgb(247,95,14)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="40" y="804" width="20" height="15" fill="rgb(238,112,37)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.63%)</title><rect x="40" y="820" width="20" height="15" fill="rgb(222,97,37)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="48" y="836" width="12" height="15" fill="rgb(248,114,39)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="48" y="852" width="12" height="15" fill="rgb(230,189,21)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="48" y="868" width="12" height="15" fill="rgb(238,100,38)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="52" y="884" width="8" height="15" fill="rgb(240,1,35)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="52" y="900" width="8" height="15" fill="rgb(244,191,6)"/><text x="55.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.33%)</title><rect x="56" y="916" width="4" height="15" fill="rgb(215,40,17)"/><text x="59.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="932" width="4" height="15" fill="rgb(235,68,2)"/><text x="59.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="948" width="4" height="15" fill="rgb(245,25,20)"/><text x="59.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="964" width="4" height="15" fill="rgb(251,185,53)"/><text x="59.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="56" y="980" width="4" height="15" fill="rgb(254,69,31)"/><text x="59.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="56" y="996" width="4" height="15" fill="rgb(253,198,24)"/><text x="59.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/markers.py) (1 samples, 0.33%)</title><rect x="56" y="1012" width="4" height="15" fill="rgb(224,165,15)"/><text x="59.00" y="1022.50"></text></g><g><title>__or__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.33%)</title><rect x="56" y="1028" width="4" height="15" fill="rgb(253,148,27)"/><text x="59.00" y="1038.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.33%)</title><rect x="56" y="1044" width="4" height="15" fill="rgb(226,65,54)"/><text x="59.00" y="1054.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.33%)</title><rect x="56" y="1060" width="4" height="15" fill="rgb(233,214,11)"/><text x="59.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="10" y="196" width="53" height="15" fill="rgb(222,223,2)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="10" y="212" width="53" height="15" fill="rgb(220,179,15)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="10" y="228" width="53" height="15" fill="rgb(221,133,13)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="10" y="244" width="53" height="15" fill="rgb(227,24,22)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.58%)</title><rect x="10" y="260" width="53" height="15" fill="rgb(253,88,22)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.58%)</title><rect x="10" y="276" width="53" height="15" fill="rgb(249,144,7)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.96%)</title><rect x="40" y="292" width="23" height="15" fill="rgb(227,38,43)"/><text x="43.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.96%)</title><rect x="40" y="308" width="23" height="15" fill="rgb(228,121,21)"/><text x="43.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.96%)</title><rect x="40" y="324" width="23" height="15" fill="rgb(249,175,6)"/><text x="43.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.96%)</title><rect x="40" y="340" width="23" height="15" fill="rgb(208,213,46)"/><text x="43.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.96%)</title><rect x="40" y="356" width="23" height="15" fill="rgb(211,175,7)"/><text x="43.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.96%)</title><rect x="40" y="372" width="23" height="15" fill="rgb(244,218,28)"/><text x="43.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.96%)</title><rect x="40" y="388" width="23" height="15" fill="rgb(238,170,50)"/><text x="43.00" y="398.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(210,179,33)"/><text x="63.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="388" width="4" height="15" fill="rgb(247,63,45)"/><text x="66.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="404" width="4" height="15" fill="rgb(231,2,14)"/><text x="66.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="420" width="4" height="15" fill="rgb(223,77,7)"/><text x="66.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="436" width="4" height="15" fill="rgb(251,180,3)"/><text x="66.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="63" y="452" width="4" height="15" fill="rgb(237,167,0)"/><text x="66.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="468" width="4" height="15" fill="rgb(254,115,25)"/><text x="66.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/tools/__init__.py) (1 samples, 0.33%)</title><rect x="63" y="484" width="4" height="15" fill="rgb(233,212,34)"/><text x="66.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="500" width="4" height="15" fill="rgb(220,53,5)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="516" width="4" height="15" fill="rgb(229,179,20)"/><text x="66.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="63" y="532" width="4" height="15" fill="rgb(213,136,49)"/><text x="66.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="63" y="548" width="4" height="15" fill="rgb(248,153,15)"/><text x="66.00" y="558.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.65%)</title><rect x="63" y="340" width="8" height="15" fill="rgb(238,112,3)"/><text x="66.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="63" y="356" width="8" height="15" fill="rgb(223,117,3)"/><text x="66.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="63" y="372" width="8" height="15" fill="rgb(253,173,7)"/><text x="66.00" y="382.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="67" y="388" width="4" height="15" fill="rgb(254,227,0)"/><text x="70.00" y="398.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="404" width="4" height="15" fill="rgb(245,26,9)"/><text x="70.00" y="414.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="67" y="420" width="4" height="15" fill="rgb(210,5,19)"/><text x="70.00" y="430.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.33%)</title><rect x="71" y="580" width="4" height="15" fill="rgb(234,185,8)"/><text x="74.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="596" width="4" height="15" fill="rgb(231,110,27)"/><text x="74.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="612" width="4" height="15" fill="rgb(231,136,54)"/><text x="74.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="628" width="4" height="15" fill="rgb(223,169,14)"/><text x="74.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="644" width="4" height="15" fill="rgb(209,108,18)"/><text x="74.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="660" width="4" height="15" fill="rgb(211,18,14)"/><text x="74.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="676" width="4" height="15" fill="rgb(249,228,28)"/><text x="74.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="692" width="4" height="15" fill="rgb(247,160,26)"/><text x="74.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="708" width="4" height="15" fill="rgb(220,187,19)"/><text x="74.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.33%)</title><rect x="71" y="724" width="4" height="15" fill="rgb(231,134,11)"/><text x="74.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="740" width="4" height="15" fill="rgb(244,60,51)"/><text x="74.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="756" width="4" height="15" fill="rgb(244,178,16)"/><text x="74.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="772" width="4" height="15" fill="rgb(217,30,39)"/><text x="74.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="788" width="4" height="15" fill="rgb(212,147,3)"/><text x="74.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="804" width="4" height="15" fill="rgb(222,119,40)"/><text x="74.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.33%)</title><rect x="71" y="820" width="4" height="15" fill="rgb(210,159,53)"/><text x="74.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="836" width="4" height="15" fill="rgb(225,38,41)"/><text x="74.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="852" width="4" height="15" fill="rgb(234,160,36)"/><text x="74.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="868" width="4" height="15" fill="rgb(235,78,24)"/><text x="74.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="884" width="4" height="15" fill="rgb(240,96,0)"/><text x="74.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="900" width="4" height="15" fill="rgb(205,0,32)"/><text x="74.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.33%)</title><rect x="71" y="916" width="4" height="15" fill="rgb(251,81,41)"/><text x="74.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="932" width="4" height="15" fill="rgb(213,126,52)"/><text x="74.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="948" width="4" height="15" fill="rgb(224,150,54)"/><text x="74.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="964" width="4" height="15" fill="rgb(222,195,40)"/><text x="74.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="980" width="4" height="15" fill="rgb(224,224,38)"/><text x="74.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="996" width="4" height="15" fill="rgb(214,228,41)"/><text x="74.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1012" width="4" height="15" fill="rgb(226,82,9)"/><text x="74.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1028" width="4" height="15" fill="rgb(211,178,47)"/><text x="74.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1044" width="4" height="15" fill="rgb(206,95,8)"/><text x="74.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.33%)</title><rect x="71" y="1060" width="4" height="15" fill="rgb(250,58,1)"/><text x="74.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1076" width="4" height="15" fill="rgb(212,223,30)"/><text x="74.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1092" width="4" height="15" fill="rgb(240,168,41)"/><text x="74.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="71" y="1108" width="4" height="15" fill="rgb(242,9,37)"/><text x="74.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1124" width="4" height="15" fill="rgb(236,30,33)"/><text x="74.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1140" width="4" height="15" fill="rgb(254,84,1)"/><text x="74.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1156" width="4" height="15" fill="rgb(239,116,53)"/><text x="74.00" y="1166.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="71" y="1172" width="4" height="15" fill="rgb(244,110,7)"/><text x="74.00" y="1182.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="71" y="1188" width="4" height="15" fill="rgb(250,201,50)"/><text x="74.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.31%)</title><rect x="63" y="244" width="16" height="15" fill="rgb(216,195,49)"/><text x="66.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="63" y="260" width="16" height="15" fill="rgb(248,141,40)"/><text x="66.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="63" y="276" width="16" height="15" fill="rgb(252,118,3)"/><text x="66.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="63" y="292" width="16" height="15" fill="rgb(232,13,32)"/><text x="66.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.31%)</title><rect x="63" y="308" width="16" height="15" fill="rgb(210,34,35)"/><text x="66.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.31%)</title><rect x="63" y="324" width="16" height="15" fill="rgb(251,114,35)"/><text x="66.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.65%)</title><rect x="71" y="340" width="8" height="15" fill="rgb(238,211,11)"/><text x="74.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="356" width="8" height="15" fill="rgb(218,74,2)"/><text x="74.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="372" width="8" height="15" fill="rgb(228,18,20)"/><text x="74.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="388" width="8" height="15" fill="rgb(229,58,38)"/><text x="74.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="404" width="8" height="15" fill="rgb(223,25,25)"/><text x="74.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="420" width="8" height="15" fill="rgb(209,31,50)"/><text x="74.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="436" width="8" height="15" fill="rgb(247,59,42)"/><text x="74.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="71" y="452" width="8" height="15" fill="rgb(216,114,42)"/><text x="74.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="468" width="8" height="15" fill="rgb(242,94,20)"/><text x="74.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.65%)</title><rect x="71" y="484" width="8" height="15" fill="rgb(224,105,37)"/><text x="74.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="500" width="8" height="15" fill="rgb(230,23,31)"/><text x="74.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="516" width="8" height="15" fill="rgb(246,202,52)"/><text x="74.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="532" width="8" height="15" fill="rgb(224,86,18)"/><text x="74.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="71" y="548" width="8" height="15" fill="rgb(254,9,42)"/><text x="74.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="71" y="564" width="8" height="15" fill="rgb(237,178,44)"/><text x="74.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.33%)</title><rect x="75" y="580" width="4" height="15" fill="rgb(211,122,53)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="596" width="4" height="15" fill="rgb(213,20,15)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="612" width="4" height="15" fill="rgb(235,103,24)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="628" width="4" height="15" fill="rgb(227,154,38)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="644" width="4" height="15" fill="rgb(250,169,51)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="660" width="4" height="15" fill="rgb(237,25,26)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.33%)</title><rect x="75" y="676" width="4" height="15" fill="rgb(246,103,28)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="692" width="4" height="15" fill="rgb(232,183,31)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="708" width="4" height="15" fill="rgb(219,141,38)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="724" width="4" height="15" fill="rgb(233,200,40)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="740" width="4" height="15" fill="rgb(210,215,16)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="756" width="4" height="15" fill="rgb(237,154,30)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.33%)</title><rect x="75" y="772" width="4" height="15" fill="rgb(226,204,19)"/><text x="78.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="788" width="4" height="15" fill="rgb(252,27,54)"/><text x="78.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="804" width="4" height="15" fill="rgb(212,224,35)"/><text x="78.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="820" width="4" height="15" fill="rgb(211,224,7)"/><text x="78.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="836" width="4" height="15" fill="rgb(210,102,24)"/><text x="78.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="852" width="4" height="15" fill="rgb(211,138,24)"/><text x="78.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.33%)</title><rect x="75" y="868" width="4" height="15" fill="rgb(213,55,4)"/><text x="78.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="884" width="4" height="15" fill="rgb(206,137,9)"/><text x="78.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="900" width="4" height="15" fill="rgb(216,132,28)"/><text x="78.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="916" width="4" height="15" fill="rgb(206,131,8)"/><text x="78.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="932" width="4" height="15" fill="rgb(241,4,11)"/><text x="78.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="948" width="4" height="15" fill="rgb(231,207,38)"/><text x="78.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.33%)</title><rect x="75" y="964" width="4" height="15" fill="rgb(234,167,17)"/><text x="78.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="980" width="4" height="15" fill="rgb(216,43,11)"/><text x="78.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="996" width="4" height="15" fill="rgb(234,202,0)"/><text x="78.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1012" width="4" height="15" fill="rgb(216,95,48)"/><text x="78.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1028" width="4" height="15" fill="rgb(234,107,33)"/><text x="78.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1044" width="4" height="15" fill="rgb(247,77,47)"/><text x="78.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.33%)</title><rect x="75" y="1060" width="4" height="15" fill="rgb(252,130,18)"/><text x="78.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1076" width="4" height="15" fill="rgb(254,17,44)"/><text x="78.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1092" width="4" height="15" fill="rgb(244,102,36)"/><text x="78.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1108" width="4" height="15" fill="rgb(241,180,35)"/><text x="78.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1124" width="4" height="15" fill="rgb(241,76,45)"/><text x="78.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1140" width="4" height="15" fill="rgb(233,128,41)"/><text x="78.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1156" width="4" height="15" fill="rgb(205,57,42)"/><text x="78.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1172" width="4" height="15" fill="rgb(245,177,20)"/><text x="78.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1188" width="4" height="15" fill="rgb(254,32,6)"/><text x="78.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.33%)</title><rect x="75" y="1204" width="4" height="15" fill="rgb(229,205,18)"/><text x="78.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1220" width="4" height="15" fill="rgb(221,159,34)"/><text x="78.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1236" width="4" height="15" fill="rgb(229,39,38)"/><text x="78.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1252" width="4" height="15" fill="rgb(229,58,34)"/><text x="78.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1268" width="4" height="15" fill="rgb(231,49,11)"/><text x="78.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1284" width="4" height="15" fill="rgb(232,1,16)"/><text x="78.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.33%)</title><rect x="75" y="1300" width="4" height="15" fill="rgb(239,221,23)"/><text x="78.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1316" width="4" height="15" fill="rgb(254,69,20)"/><text x="78.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1332" width="4" height="15" fill="rgb(223,135,31)"/><text x="78.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1348" width="4" height="15" fill="rgb(237,31,4)"/><text x="78.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="75" y="1364" width="4" height="15" fill="rgb(230,149,36)"/><text x="78.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="75" y="1380" width="4" height="15" fill="rgb(237,11,39)"/><text x="78.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.33%)</title><rect x="75" y="1396" width="4" height="15" fill="rgb(245,92,37)"/><text x="78.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.33%)</title><rect x="75" y="1412" width="4" height="15" fill="rgb(239,58,27)"/><text x="78.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.33%)</title><rect x="75" y="1428" width="4" height="15" fill="rgb(205,191,0)"/><text x="78.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.33%)</title><rect x="75" y="1444" width="4" height="15" fill="rgb(240,109,11)"/><text x="78.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1460" width="4" height="15" fill="rgb(242,31,24)"/><text x="78.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1476" width="4" height="15" fill="rgb(248,52,23)"/><text x="78.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1492" width="4" height="15" fill="rgb(252,51,31)"/><text x="78.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1508" width="4" height="15" fill="rgb(227,83,28)"/><text x="78.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1524" width="4" height="15" fill="rgb(247,202,2)"/><text x="78.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1540" width="4" height="15" fill="rgb(206,208,13)"/><text x="78.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.33%)</title><rect x="75" y="1556" width="4" height="15" fill="rgb(225,140,14)"/><text x="78.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="68" width="73" height="15" fill="rgb(228,107,45)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="84" width="73" height="15" fill="rgb(227,112,20)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="100" width="73" height="15" fill="rgb(243,137,24)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 6.21%)</title><rect x="10" y="116" width="73" height="15" fill="rgb(237,118,0)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="132" width="73" height="15" fill="rgb(245,193,1)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (19 samples, 6.21%)</title><rect x="10" y="148" width="73" height="15" fill="rgb(239,217,44)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="164" width="73" height="15" fill="rgb(236,150,49)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 6.21%)</title><rect x="10" y="180" width="73" height="15" fill="rgb(248,130,23)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="63" y="196" width="20" height="15" fill="rgb(244,136,42)"/><text x="66.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.63%)</title><rect x="63" y="212" width="20" height="15" fill="rgb(224,176,29)"/><text x="66.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.63%)</title><rect x="63" y="228" width="20" height="15" fill="rgb(209,86,41)"/><text x="66.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.33%)</title><rect x="79" y="244" width="4" height="15" fill="rgb(226,56,4)"/><text x="82.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="260" width="4" height="15" fill="rgb(238,89,19)"/><text x="82.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="276" width="4" height="15" fill="rgb(237,185,5)"/><text x="82.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="292" width="4" height="15" fill="rgb(250,98,36)"/><text x="82.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="308" width="4" height="15" fill="rgb(228,101,48)"/><text x="82.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="324" width="4" height="15" fill="rgb(252,58,30)"/><text x="82.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="340" width="4" height="15" fill="rgb(215,166,9)"/><text x="82.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="356" width="4" height="15" fill="rgb(209,109,31)"/><text x="82.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.33%)</title><rect x="79" y="372" width="4" height="15" fill="rgb(233,91,29)"/><text x="82.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="388" width="4" height="15" fill="rgb(252,43,25)"/><text x="82.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="404" width="4" height="15" fill="rgb(219,207,52)"/><text x="82.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="420" width="4" height="15" fill="rgb(237,14,46)"/><text x="82.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="436" width="4" height="15" fill="rgb(227,61,39)"/><text x="82.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="452" width="4" height="15" fill="rgb(243,98,2)"/><text x="82.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.33%)</title><rect x="79" y="468" width="4" height="15" fill="rgb(254,163,21)"/><text x="82.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="484" width="4" height="15" fill="rgb(239,3,29)"/><text x="82.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="500" width="4" height="15" fill="rgb(250,26,32)"/><text x="82.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="516" width="4" height="15" fill="rgb(227,152,52)"/><text x="82.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="532" width="4" height="15" fill="rgb(208,17,4)"/><text x="82.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="548" width="4" height="15" fill="rgb(213,163,32)"/><text x="82.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.33%)</title><rect x="79" y="564" width="4" height="15" fill="rgb(234,184,36)"/><text x="82.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="580" width="4" height="15" fill="rgb(252,78,10)"/><text x="82.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="596" width="4" height="15" fill="rgb(243,35,31)"/><text x="82.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="612" width="4" height="15" fill="rgb(235,120,21)"/><text x="82.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="628" width="4" height="15" fill="rgb(237,198,0)"/><text x="82.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="644" width="4" height="15" fill="rgb(220,220,24)"/><text x="82.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.33%)</title><rect x="79" y="660" width="4" height="15" fill="rgb(221,17,43)"/><text x="82.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="676" width="4" height="15" fill="rgb(236,207,42)"/><text x="82.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="692" width="4" height="15" fill="rgb(224,36,25)"/><text x="82.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="708" width="4" height="15" fill="rgb(253,93,30)"/><text x="82.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="724" width="4" height="15" fill="rgb(206,67,41)"/><text x="82.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="740" width="4" height="15" fill="rgb(238,147,46)"/><text x="82.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.33%)</title><rect x="79" y="756" width="4" height="15" fill="rgb(221,175,0)"/><text x="82.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="772" width="4" height="15" fill="rgb(225,111,46)"/><text x="82.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="788" width="4" height="15" fill="rgb(245,132,35)"/><text x="82.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="804" width="4" height="15" fill="rgb(252,108,19)"/><text x="82.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="820" width="4" height="15" fill="rgb(234,144,1)"/><text x="82.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="836" width="4" height="15" fill="rgb(245,178,4)"/><text x="82.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.33%)</title><rect x="79" y="852" width="4" height="15" fill="rgb(229,79,33)"/><text x="82.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="868" width="4" height="15" fill="rgb(240,188,14)"/><text x="82.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="884" width="4" height="15" fill="rgb(235,218,16)"/><text x="82.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="900" width="4" height="15" fill="rgb(222,45,11)"/><text x="82.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="79" y="916" width="4" height="15" fill="rgb(245,121,12)"/><text x="82.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="79" y="932" width="4" height="15" fill="rgb(236,36,22)"/><text x="82.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.33%)</title><rect x="79" y="948" width="4" height="15" fill="rgb(232,20,5)"/><text x="82.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.33%)</title><rect x="79" y="964" width="4" height="15" fill="rgb(241,215,12)"/><text x="82.00" y="974.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.33%)</title><rect x="79" y="980" width="4" height="15" fill="rgb(234,165,48)"/><text x="82.00" y="990.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.33%)</title><rect x="79" y="996" width="4" height="15" fill="rgb(205,118,3)"/><text x="82.00" y="1006.50"></text></g><g><title>getargs (numpy/compat/_inspect.py) (1 samples, 0.33%)</title><rect x="79" y="1012" width="4" height="15" fill="rgb(238,118,31)"/><text x="82.00" y="1022.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="106" y="180" width="4" height="15" fill="rgb(208,226,8)"/><text x="109.00" y="190.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="133" y="260" width="4" height="15" fill="rgb(224,119,24)"/><text x="136.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.98%)</title><rect x="129" y="212" width="12" height="15" fill="rgb(207,73,29)"/><text x="132.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.98%)</title><rect x="129" y="228" width="12" height="15" fill="rgb(209,143,37)"/><text x="132.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="133" y="244" width="8" height="15" fill="rgb(205,143,16)"/><text x="136.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="137" y="260" width="4" height="15" fill="rgb(218,10,10)"/><text x="140.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="137" y="276" width="4" height="15" fill="rgb(250,108,23)"/><text x="140.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="137" y="292" width="4" height="15" fill="rgb(254,205,31)"/><text x="140.00" y="302.50"></text></g><g><title>0x7f14cd01da4d (libc-2.29.so) (1 samples, 0.33%)</title><rect x="148" y="260" width="4" height="15" fill="rgb(228,119,7)"/><text x="151.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="152" y="260" width="4" height="15" fill="rgb(242,38,2)"/><text x="155.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="160" y="292" width="4" height="15" fill="rgb(205,145,23)"/><text x="163.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="160" y="308" width="4" height="15" fill="rgb(243,170,27)"/><text x="163.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="164" y="356" width="7" height="15" fill="rgb(222,225,6)"/><text x="167.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="164" y="372" width="7" height="15" fill="rgb(207,98,12)"/><text x="167.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="168" y="388" width="3" height="15" fill="rgb(253,76,10)"/><text x="171.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="168" y="404" width="3" height="15" fill="rgb(235,223,20)"/><text x="171.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="168" y="420" width="3" height="15" fill="rgb(213,23,41)"/><text x="171.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="372" width="4" height="15" fill="rgb(239,101,54)"/><text x="174.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="171" y="388" width="4" height="15" fill="rgb(223,204,50)"/><text x="174.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="171" y="356" width="8" height="15" fill="rgb(208,77,28)"/><text x="174.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="175" y="372" width="4" height="15" fill="rgb(217,34,7)"/><text x="178.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="175" y="388" width="4" height="15" fill="rgb(206,101,34)"/><text x="178.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.63%)</title><rect x="164" y="340" width="19" height="15" fill="rgb(239,38,34)"/><text x="167.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="179" y="356" width="4" height="15" fill="rgb(209,183,34)"/><text x="182.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="179" y="372" width="4" height="15" fill="rgb(211,189,47)"/><text x="182.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="340" width="4" height="15" fill="rgb(245,82,17)"/><text x="186.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="356" width="4" height="15" fill="rgb(222,50,0)"/><text x="186.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="372" width="4" height="15" fill="rgb(253,223,27)"/><text x="186.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="388" width="4" height="15" fill="rgb(225,193,6)"/><text x="186.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="404" width="4" height="15" fill="rgb(229,88,41)"/><text x="186.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="420" width="4" height="15" fill="rgb(243,29,23)"/><text x="186.00" y="430.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="183" y="436" width="4" height="15" fill="rgb(216,59,48)"/><text x="186.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="187" y="340" width="4" height="15" fill="rgb(244,144,31)"/><text x="190.00" y="350.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="191" y="340" width="7" height="15" fill="rgb(226,118,43)"/><text x="194.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="195" y="356" width="3" height="15" fill="rgb(214,145,3)"/><text x="198.00" y="366.50"></text></g><g><title>0x7f14cd19ce06 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="195" y="372" width="3" height="15" fill="rgb(219,81,12)"/><text x="198.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="340" width="4" height="15" fill="rgb(251,161,24)"/><text x="201.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="356" width="4" height="15" fill="rgb(247,65,38)"/><text x="201.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeFromDimension (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="372" width="4" height="15" fill="rgb(249,45,42)"/><text x="201.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.59%)</title><rect x="164" y="308" width="42" height="15" fill="rgb(212,137,25)"/><text x="167.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.59%)</title><rect x="164" y="324" width="42" height="15" fill="rgb(206,195,8)"/><text x="167.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="202" y="340" width="4" height="15" fill="rgb(216,191,26)"/><text x="205.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.58%)</title><rect x="156" y="260" width="54" height="15" fill="rgb(242,138,12)"/><text x="159.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.58%)</title><rect x="156" y="276" width="54" height="15" fill="rgb(213,120,0)"/><text x="159.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.92%)</title><rect x="164" y="292" width="46" height="15" fill="rgb(224,219,16)"/><text x="167.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="206" y="308" width="4" height="15" fill="rgb(218,69,42)"/><text x="209.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="206" y="324" width="4" height="15" fill="rgb(251,192,42)"/><text x="209.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="206" y="340" width="4" height="15" fill="rgb(214,0,26)"/><text x="209.00" y="350.50"></text></g><g><title>0x7f14cd0fb151 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="206" y="356" width="4" height="15" fill="rgb(233,134,36)"/><text x="209.00" y="366.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="210" y="260" width="4" height="15" fill="rgb(229,69,18)"/><text x="213.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="214" y="260" width="4" height="15" fill="rgb(205,96,3)"/><text x="217.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="214" y="276" width="4" height="15" fill="rgb(220,83,14)"/><text x="217.00" y="286.50"></text></g><g><title>onnxruntime::CPUAllocator::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="214" y="292" width="4" height="15" fill="rgb(225,185,51)"/><text x="217.00" y="302.50"></text></g><g><title>0x7f14cd03dd50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="218" y="276" width="4" height="15" fill="rgb(216,187,21)"/><text x="221.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="218" y="260" width="7" height="15" fill="rgb(251,142,3)"/><text x="221.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.33%)</title><rect x="222" y="276" width="3" height="15" fill="rgb(214,126,36)"/><text x="225.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="222" y="292" width="3" height="15" fill="rgb(254,102,9)"/><text x="225.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="222" y="308" width="3" height="15" fill="rgb(253,164,17)"/><text x="225.00" y="318.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="225" y="260" width="4" height="15" fill="rgb(250,52,20)"/><text x="228.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="225" y="276" width="4" height="15" fill="rgb(244,219,9)"/><text x="228.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="229" y="260" width="4" height="15" fill="rgb(237,185,1)"/><text x="232.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (41 samples, 13.40%)</title><rect x="83" y="100" width="158" height="15" fill="rgb(244,188,41)"/><text x="86.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 12.75%)</title><rect x="90" y="116" width="151" height="15" fill="rgb(211,100,1)"/><text x="93.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 12.75%)</title><rect x="90" y="132" width="151" height="15" fill="rgb(240,145,18)"/><text x="93.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 12.42%)</title><rect x="94" y="148" width="147" height="15" fill="rgb(211,135,5)"/><text x="97.00" y="158.50">run (mlprodict/onn..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (36 samples, 11.76%)</title><rect x="102" y="164" width="139" height="15" fill="rgb(216,96,22)"/><text x="105.00" y="174.50">_run_whole_runtim..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (34 samples, 11.11%)</title><rect x="110" y="180" width="131" height="15" fill="rgb(213,43,29)"/><text x="113.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (32 samples, 10.46%)</title><rect x="117" y="196" width="124" height="15" fill="rgb(236,45,18)"/><text x="120.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 8.50%)</title><rect x="141" y="212" width="100" height="15" fill="rgb(225,228,5)"/><text x="144.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 8.50%)</title><rect x="141" y="228" width="100" height="15" fill="rgb(222,90,3)"/><text x="144.00" y="238.50">void pybind1..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 8.50%)</title><rect x="141" y="244" width="100" height="15" fill="rgb(242,81,9)"/><text x="144.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="260" width="8" height="15" fill="rgb(219,153,4)"/><text x="236.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="276" width="8" height="15" fill="rgb(215,74,26)"/><text x="236.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="292" width="8" height="15" fill="rgb(249,66,49)"/><text x="236.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="308" width="8" height="15" fill="rgb(220,139,17)"/><text x="236.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="324" width="8" height="15" fill="rgb(248,216,22)"/><text x="236.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="340" width="8" height="15" fill="rgb(223,17,40)"/><text x="236.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="356" width="8" height="15" fill="rgb(207,64,4)"/><text x="236.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.65%)</title><rect x="233" y="372" width="8" height="15" fill="rgb(229,182,26)"/><text x="236.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="237" y="388" width="4" height="15" fill="rgb(214,201,6)"/><text x="240.00" y="398.50"></text></g><g><title>0x7f148d88eaf0 (?) (1 samples, 0.33%)</title><rect x="241" y="564" width="4" height="15" fill="rgb(242,175,46)"/><text x="244.00" y="574.50"></text></g><g><title>0x7f148d8a11d2 (?) (1 samples, 0.33%)</title><rect x="241" y="580" width="4" height="15" fill="rgb(254,143,50)"/><text x="244.00" y="590.50"></text></g><g><title>0x7f148d8a07b8 (?) (1 samples, 0.33%)</title><rect x="241" y="596" width="4" height="15" fill="rgb(252,176,10)"/><text x="244.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="241" y="612" width="4" height="15" fill="rgb(239,57,18)"/><text x="244.00" y="622.50"></text></g><g><title>0x7f148d89e72a (?) (1 samples, 0.33%)</title><rect x="241" y="628" width="4" height="15" fill="rgb(222,120,11)"/><text x="244.00" y="638.50"></text></g><g><title>0x7f148d89b4db (?) (1 samples, 0.33%)</title><rect x="241" y="644" width="4" height="15" fill="rgb(246,37,15)"/><text x="244.00" y="654.50"></text></g><g><title>0x7f148de34347 (?) (1 samples, 0.33%)</title><rect x="241" y="660" width="4" height="15" fill="rgb(254,10,45)"/><text x="244.00" y="670.50"></text></g><g><title>0x7f148d8cb0e2 (?) (1 samples, 0.33%)</title><rect x="241" y="676" width="4" height="15" fill="rgb(233,190,10)"/><text x="244.00" y="686.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="241" y="692" width="4" height="15" fill="rgb(236,168,21)"/><text x="244.00" y="702.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="241" y="708" width="4" height="15" fill="rgb(230,135,19)"/><text x="244.00" y="718.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.65%)</title><rect x="241" y="132" width="8" height="15" fill="rgb(230,229,23)"/><text x="244.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="241" y="148" width="8" height="15" fill="rgb(236,133,37)"/><text x="244.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="241" y="164" width="8" height="15" fill="rgb(241,198,32)"/><text x="244.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="180" width="8" height="15" fill="rgb(218,103,5)"/><text x="244.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="196" width="8" height="15" fill="rgb(212,223,17)"/><text x="244.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="212" width="8" height="15" fill="rgb(226,59,41)"/><text x="244.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="241" y="228" width="8" height="15" fill="rgb(226,181,21)"/><text x="244.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="244" width="8" height="15" fill="rgb(251,131,25)"/><text x="244.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.65%)</title><rect x="241" y="260" width="8" height="15" fill="rgb(214,116,29)"/><text x="244.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="276" width="8" height="15" fill="rgb(227,100,11)"/><text x="244.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="292" width="8" height="15" fill="rgb(223,55,8)"/><text x="244.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="308" width="8" height="15" fill="rgb(249,204,20)"/><text x="244.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="241" y="324" width="8" height="15" fill="rgb(236,101,7)"/><text x="244.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="340" width="8" height="15" fill="rgb(236,199,0)"/><text x="244.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.65%)</title><rect x="241" y="356" width="8" height="15" fill="rgb(222,195,42)"/><text x="244.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="372" width="8" height="15" fill="rgb(217,176,22)"/><text x="244.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="388" width="8" height="15" fill="rgb(215,181,24)"/><text x="244.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="404" width="8" height="15" fill="rgb(228,176,34)"/><text x="244.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="241" y="420" width="8" height="15" fill="rgb(230,112,16)"/><text x="244.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="436" width="8" height="15" fill="rgb(238,55,38)"/><text x="244.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.65%)</title><rect x="241" y="452" width="8" height="15" fill="rgb(228,80,24)"/><text x="244.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="468" width="8" height="15" fill="rgb(217,140,51)"/><text x="244.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="484" width="8" height="15" fill="rgb(228,35,34)"/><text x="244.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="500" width="8" height="15" fill="rgb(233,15,5)"/><text x="244.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="516" width="8" height="15" fill="rgb(247,145,3)"/><text x="244.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.65%)</title><rect x="241" y="532" width="8" height="15" fill="rgb(231,123,50)"/><text x="244.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="241" y="548" width="8" height="15" fill="rgb(225,83,53)"/><text x="244.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="564" width="4" height="15" fill="rgb(226,82,10)"/><text x="248.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="580" width="4" height="15" fill="rgb(243,106,36)"/><text x="248.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="596" width="4" height="15" fill="rgb(210,92,20)"/><text x="248.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="245" y="612" width="4" height="15" fill="rgb(239,67,27)"/><text x="248.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="628" width="4" height="15" fill="rgb(245,84,3)"/><text x="248.00" y="638.50"></text></g><g><title>onnx::OpSet_Onnx_ver1::ForEachSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="644" width="4" height="15" fill="rgb(252,201,32)"/><text x="248.00" y="654.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::ReduceSum_Onnx_ver1&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="245" y="660" width="4" height="15" fill="rgb(239,129,28)"/><text x="248.00" y="670.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (44 samples, 14.38%)</title><rect x="83" y="68" width="169" height="15" fill="rgb(228,173,0)"/><text x="86.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (44 samples, 14.38%)</title><rect x="83" y="84" width="169" height="15" fill="rgb(243,182,45)"/><text x="86.00" y="94.50">setup_profile (bench_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.98%)</title><rect x="241" y="100" width="11" height="15" fill="rgb(206,141,19)"/><text x="244.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.98%)</title><rect x="241" y="116" width="11" height="15" fill="rgb(245,103,24)"/><text x="244.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="249" y="132" width="3" height="15" fill="rgb(212,43,11)"/><text x="252.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.33%)</title><rect x="249" y="148" width="3" height="15" fill="rgb(242,119,38)"/><text x="252.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.33%)</title><rect x="249" y="164" width="3" height="15" fill="rgb(251,197,12)"/><text x="252.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="249" y="180" width="3" height="15" fill="rgb(245,39,2)"/><text x="252.00" y="190.50"></text></g><g><title>convert_sklearn_linear_classifier (skl2onnx/operator_converters/linear_classifier.py) (1 samples, 0.33%)</title><rect x="249" y="196" width="3" height="15" fill="rgb(243,195,50)"/><text x="252.00" y="206.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="249" y="212" width="3" height="15" fill="rgb(250,80,22)"/><text x="252.00" y="222.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="249" y="228" width="3" height="15" fill="rgb(215,152,46)"/><text x="252.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="256" y="132" width="4" height="15" fill="rgb(247,20,33)"/><text x="259.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.98%)</title><rect x="252" y="116" width="12" height="15" fill="rgb(227,27,14)"/><text x="255.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="260" y="132" width="4" height="15" fill="rgb(251,79,34)"/><text x="263.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.65%)</title><rect x="306" y="180" width="8" height="15" fill="rgb(211,17,34)"/><text x="309.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="399" y="196" width="4" height="15" fill="rgb(215,174,13)"/><text x="402.00" y="206.50"></text></g><g><title>0x7f14cd0fb151 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="422" y="212" width="4" height="15" fill="rgb(228,172,4)"/><text x="425.00" y="222.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="430" y="292" width="4" height="15" fill="rgb(223,157,35)"/><text x="433.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="430" y="308" width="4" height="15" fill="rgb(209,214,23)"/><text x="433.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="430" y="324" width="4" height="15" fill="rgb(238,193,40)"/><text x="433.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.98%)</title><rect x="426" y="260" width="12" height="15" fill="rgb(205,106,8)"/><text x="429.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.98%)</title><rect x="426" y="276" width="12" height="15" fill="rgb(223,112,5)"/><text x="429.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="434" y="292" width="4" height="15" fill="rgb(239,145,36)"/><text x="437.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.31%)</title><rect x="426" y="212" width="15" height="15" fill="rgb(219,69,25)"/><text x="429.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.31%)</title><rect x="426" y="228" width="15" height="15" fill="rgb(221,63,47)"/><text x="429.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 1.31%)</title><rect x="426" y="244" width="15" height="15" fill="rgb(243,5,13)"/><text x="429.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.33%)</title><rect x="438" y="260" width="3" height="15" fill="rgb(242,159,47)"/><text x="441.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(237,88,44)"/><text x="441.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(231,214,18)"/><text x="441.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(246,47,20)"/><text x="441.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (4 samples, 1.31%)</title><rect x="441" y="212" width="16" height="15" fill="rgb(243,182,30)"/><text x="444.00" y="222.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 1.31%)</title><rect x="484" y="276" width="15" height="15" fill="rgb(210,113,24)"/><text x="487.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.65%)</title><rect x="492" y="292" width="7" height="15" fill="rgb(220,116,37)"/><text x="495.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.65%)</title><rect x="492" y="308" width="7" height="15" fill="rgb(226,115,48)"/><text x="495.00" y="318.50"></text></g><g><title>0x7f14cc240dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="495" y="324" width="4" height="15" fill="rgb(221,35,35)"/><text x="498.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (10 samples, 3.27%)</title><rect x="468" y="244" width="39" height="15" fill="rgb(223,149,53)"/><text x="471.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.61%)</title><rect x="476" y="260" width="31" height="15" fill="rgb(236,77,27)"/><text x="479.00" y="270.50">ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.65%)</title><rect x="499" y="276" width="8" height="15" fill="rgb(216,207,41)"/><text x="502.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="503" y="292" width="4" height="15" fill="rgb(253,211,16)"/><text x="506.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.33%)</title><rect x="503" y="308" width="4" height="15" fill="rgb(228,224,28)"/><text x="506.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.33%)</title><rect x="503" y="324" width="4" height="15" fill="rgb(205,210,33)"/><text x="506.00" y="334.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.33%)</title><rect x="507" y="244" width="4" height="15" fill="rgb(254,69,24)"/><text x="510.00" y="254.50"></text></g><g><title>0x7f14cd03e1ef (libc-2.29.so) (1 samples, 0.33%)</title><rect x="526" y="340" width="4" height="15" fill="rgb(242,209,49)"/><text x="529.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.33%)</title><rect x="530" y="340" width="4" height="15" fill="rgb(213,171,54)"/><text x="533.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="534" y="340" width="4" height="15" fill="rgb(233,72,0)"/><text x="537.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.33%)</title><rect x="538" y="340" width="4" height="15" fill="rgb(231,43,41)"/><text x="541.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="538" y="356" width="4" height="15" fill="rgb(248,56,15)"/><text x="541.00" y="366.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="538" y="372" width="4" height="15" fill="rgb(220,107,24)"/><text x="541.00" y="382.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 2.94%)</title><rect x="511" y="244" width="35" height="15" fill="rgb(237,162,13)"/><text x="514.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.61%)</title><rect x="515" y="260" width="31" height="15" fill="rgb(234,136,49)"/><text x="518.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.63%)</title><rect x="526" y="276" width="20" height="15" fill="rgb(227,12,54)"/><text x="529.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.63%)</title><rect x="526" y="292" width="20" height="15" fill="rgb(213,192,54)"/><text x="529.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.63%)</title><rect x="526" y="308" width="20" height="15" fill="rgb(249,208,48)"/><text x="529.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.63%)</title><rect x="526" y="324" width="20" height="15" fill="rgb(248,64,27)"/><text x="529.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.33%)</title><rect x="542" y="340" width="4" height="15" fill="rgb(220,94,32)"/><text x="545.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.33%)</title><rect x="546" y="292" width="3" height="15" fill="rgb(252,177,35)"/><text x="549.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="546" y="308" width="3" height="15" fill="rgb(213,21,44)"/><text x="549.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.33%)</title><rect x="546" y="324" width="3" height="15" fill="rgb(209,130,35)"/><text x="549.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="546" y="340" width="3" height="15" fill="rgb(222,70,44)"/><text x="549.00" y="350.50"></text></g><g><title>0x7f14ccfd57c2 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="546" y="356" width="3" height="15" fill="rgb(218,28,39)"/><text x="549.00" y="366.50"></text></g><g><title>0x7f14ccfd5a86 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="546" y="372" width="3" height="15" fill="rgb(253,82,26)"/><text x="549.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.65%)</title><rect x="553" y="324" width="8" height="15" fill="rgb(222,140,37)"/><text x="556.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.31%)</title><rect x="549" y="308" width="16" height="15" fill="rgb(249,115,2)"/><text x="552.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="561" y="324" width="4" height="15" fill="rgb(245,26,19)"/><text x="564.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="561" y="340" width="4" height="15" fill="rgb(233,202,18)"/><text x="564.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.63%)</title><rect x="549" y="292" width="20" height="15" fill="rgb(208,152,25)"/><text x="552.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.33%)</title><rect x="565" y="308" width="4" height="15" fill="rgb(241,52,11)"/><text x="568.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="565" y="324" width="4" height="15" fill="rgb(222,92,26)"/><text x="568.00" y="334.50"></text></g><g><title>0x7f14af42233d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="569" y="308" width="4" height="15" fill="rgb(234,73,39)"/><text x="572.00" y="318.50"></text></g><g><title>0x7f14af444204 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="569" y="324" width="4" height="15" fill="rgb(227,59,26)"/><text x="572.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.61%)</title><rect x="546" y="276" width="30" height="15" fill="rgb(236,27,37)"/><text x="549.00" y="286.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.65%)</title><rect x="569" y="292" width="7" height="15" fill="rgb(239,89,46)"/><text x="572.00" y="302.50"></text></g><g><title>0x7f14af44413e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="573" y="308" width="3" height="15" fill="rgb(254,152,45)"/><text x="576.00" y="318.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c) (1 samples, 0.33%)</title><rect x="573" y="324" width="3" height="15" fill="rgb(234,73,20)"/><text x="576.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="573" y="340" width="3" height="15" fill="rgb(241,125,12)"/><text x="576.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="573" y="356" width="3" height="15" fill="rgb(245,194,37)"/><text x="576.00" y="366.50"></text></g><g><title>0x7f14cc23fe80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="573" y="372" width="3" height="15" fill="rgb(254,18,22)"/><text x="576.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (30 samples, 9.80%)</title><rect x="465" y="228" width="115" height="15" fill="rgb(236,194,12)"/><text x="468.00" y="238.50">_run (mlprodic..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.94%)</title><rect x="546" y="244" width="34" height="15" fill="rgb(223,162,43)"/><text x="549.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 2.94%)</title><rect x="546" y="260" width="34" height="15" fill="rgb(235,90,10)"/><text x="549.00" y="270.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="576" y="276" width="4" height="15" fill="rgb(240,169,14)"/><text x="579.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="603" y="260" width="4" height="15" fill="rgb(224,14,3)"/><text x="606.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="603" y="276" width="4" height="15" fill="rgb(251,203,33)"/><text x="606.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="603" y="292" width="4" height="15" fill="rgb(251,62,32)"/><text x="606.00" y="302.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.33%)</title><rect x="611" y="404" width="4" height="15" fill="rgb(221,147,53)"/><text x="614.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.65%)</title><rect x="611" y="372" width="8" height="15" fill="rgb(220,206,51)"/><text x="614.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.65%)</title><rect x="611" y="388" width="8" height="15" fill="rgb(253,110,26)"/><text x="614.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="615" y="404" width="4" height="15" fill="rgb(214,169,49)"/><text x="618.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="615" y="420" width="4" height="15" fill="rgb(238,212,38)"/><text x="618.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.98%)</title><rect x="611" y="356" width="12" height="15" fill="rgb(246,157,54)"/><text x="614.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="619" y="372" width="4" height="15" fill="rgb(236,73,6)"/><text x="622.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.33%)</title><rect x="619" y="388" width="4" height="15" fill="rgb(220,26,25)"/><text x="622.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.33%)</title><rect x="623" y="356" width="3" height="15" fill="rgb(229,101,9)"/><text x="626.00" y="366.50"></text></g><g><title>array_sum (methods.c) (6 samples, 1.96%)</title><rect x="607" y="260" width="23" height="15" fill="rgb(233,134,10)"/><text x="610.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (6 samples, 1.96%)</title><rect x="607" y="276" width="23" height="15" fill="rgb(210,210,23)"/><text x="610.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (6 samples, 1.96%)</title><rect x="607" y="292" width="23" height="15" fill="rgb(229,87,26)"/><text x="610.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 1.96%)</title><rect x="607" y="308" width="23" height="15" fill="rgb(251,181,2)"/><text x="610.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.96%)</title><rect x="607" y="324" width="23" height="15" fill="rgb(239,227,1)"/><text x="610.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.63%)</title><rect x="611" y="340" width="19" height="15" fill="rgb(229,203,31)"/><text x="614.00" y="350.50"></text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.33%)</title><rect x="626" y="356" width="4" height="15" fill="rgb(229,127,30)"/><text x="629.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="634" y="340" width="4" height="15" fill="rgb(240,48,34)"/><text x="637.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.65%)</title><rect x="634" y="324" width="8" height="15" fill="rgb(250,149,18)"/><text x="637.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="638" y="340" width="4" height="15" fill="rgb(238,24,36)"/><text x="641.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.98%)</title><rect x="634" y="292" width="12" height="15" fill="rgb(238,47,31)"/><text x="637.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.98%)</title><rect x="634" y="308" width="12" height="15" fill="rgb(226,36,33)"/><text x="637.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_divide_FLOAT (simd.inc.src) (1 samples, 0.33%)</title><rect x="642" y="324" width="4" height="15" fill="rgb(227,76,19)"/><text x="645.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.65%)</title><rect x="646" y="292" width="7" height="15" fill="rgb(241,61,30)"/><text x="649.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (102 samples, 33.33%)</title><rect x="264" y="132" width="393" height="15" fill="rgb(213,75,32)"/><text x="267.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (100 samples, 32.68%)</title><rect x="272" y="148" width="385" height="15" fill="rgb(225,113,54)"/><text x="275.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (100 samples, 32.68%)</title><rect x="272" y="164" width="385" height="15" fill="rgb(220,109,43)"/><text x="275.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (89 samples, 29.08%)</title><rect x="314" y="180" width="343" height="15" fill="rgb(208,148,35)"/><text x="317.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (66 samples, 21.57%)</title><rect x="403" y="196" width="254" height="15" fill="rgb(237,28,43)"/><text x="406.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (52 samples, 16.99%)</title><rect x="457" y="212" width="200" height="15" fill="rgb(210,137,12)"/><text x="460.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (20 samples, 6.54%)</title><rect x="580" y="228" width="77" height="15" fill="rgb(241,187,37)"/><text x="583.00" y="238.50">_run (ml..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (19 samples, 6.21%)</title><rect x="584" y="244" width="73" height="15" fill="rgb(233,143,46)"/><text x="587.00" y="254.50">norm_l1 ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.29%)</title><rect x="630" y="260" width="27" height="15" fill="rgb(207,31,51)"/><text x="633.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.29%)</title><rect x="630" y="276" width="27" height="15" fill="rgb(245,41,45)"/><text x="633.00" y="286.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="653" y="292" width="4" height="15" fill="rgb(209,90,31)"/><text x="656.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (106 samples, 34.64%)</title><rect x="252" y="100" width="409" height="15" fill="rgb(253,86,19)"/><text x="255.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solver..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (103 samples, 33.66%)</title><rect x="264" y="116" width="397" height="15" fill="rgb(234,193,14)"/><text x="267.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="657" y="132" width="4" height="15" fill="rgb(251,45,49)"/><text x="660.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (107 samples, 34.97%)</title><rect x="252" y="68" width="413" height="15" fill="rgb(212,174,27)"/><text x="255.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (107 samples, 34.97%)</title><rect x="252" y="84" width="413" height="15" fill="rgb(219,30,33)"/><text x="255.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="661" y="100" width="4" height="15" fill="rgb(235,220,2)"/><text x="664.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="661" y="116" width="4" height="15" fill="rgb(248,228,19)"/><text x="664.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="661" y="132" width="4" height="15" fill="rgb(222,58,35)"/><text x="664.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="661" y="148" width="4" height="15" fill="rgb(213,48,22)"/><text x="664.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="661" y="164" width="4" height="15" fill="rgb(241,52,4)"/><text x="664.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.33%)</title><rect x="661" y="180" width="4" height="15" fill="rgb(237,27,35)"/><text x="664.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.33%)</title><rect x="661" y="196" width="4" height="15" fill="rgb(230,100,46)"/><text x="664.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="212" width="4" height="15" fill="rgb(234,181,8)"/><text x="664.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="228" width="4" height="15" fill="rgb(247,116,38)"/><text x="664.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="244" width="4" height="15" fill="rgb(236,11,26)"/><text x="664.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="661" y="260" width="4" height="15" fill="rgb(221,49,36)"/><text x="664.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="276" width="4" height="15" fill="rgb(251,200,38)"/><text x="664.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.33%)</title><rect x="661" y="292" width="4" height="15" fill="rgb(244,20,4)"/><text x="664.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="308" width="4" height="15" fill="rgb(241,81,38)"/><text x="664.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="324" width="4" height="15" fill="rgb(254,120,17)"/><text x="664.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="340" width="4" height="15" fill="rgb(241,78,49)"/><text x="664.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="661" y="356" width="4" height="15" fill="rgb(226,79,46)"/><text x="664.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="661" y="372" width="4" height="15" fill="rgb(225,89,38)"/><text x="664.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.33%)</title><rect x="661" y="388" width="4" height="15" fill="rgb(208,56,51)"/><text x="664.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.33%)</title><rect x="661" y="404" width="4" height="15" fill="rgb(205,208,38)"/><text x="664.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.33%)</title><rect x="661" y="420" width="4" height="15" fill="rgb(205,97,17)"/><text x="664.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.33%)</title><rect x="661" y="436" width="4" height="15" fill="rgb(246,146,27)"/><text x="664.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.33%)</title><rect x="661" y="452" width="4" height="15" fill="rgb(207,170,50)"/><text x="664.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.33%)</title><rect x="661" y="468" width="4" height="15" fill="rgb(249,117,37)"/><text x="664.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.33%)</title><rect x="661" y="484" width="4" height="15" fill="rgb(210,116,21)"/><text x="664.00" y="494.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.33%)</title><rect x="715" y="180" width="4" height="15" fill="rgb(246,138,42)"/><text x="718.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (6 samples, 1.96%)</title><rect x="719" y="180" width="23" height="15" fill="rgb(248,96,47)"/><text x="722.00" y="190.50">a..</text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (4 samples, 1.31%)</title><rect x="727" y="196" width="15" height="15" fill="rgb(242,150,47)"/><text x="730.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.65%)</title><rect x="734" y="212" width="8" height="15" fill="rgb(253,11,10)"/><text x="737.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.65%)</title><rect x="742" y="244" width="8" height="15" fill="rgb(226,184,40)"/><text x="745.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.65%)</title><rect x="742" y="260" width="8" height="15" fill="rgb(245,161,34)"/><text x="745.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.65%)</title><rect x="742" y="276" width="8" height="15" fill="rgb(244,182,5)"/><text x="745.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.65%)</title><rect x="742" y="292" width="8" height="15" fill="rgb(222,11,39)"/><text x="745.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.65%)</title><rect x="742" y="308" width="8" height="15" fill="rgb(207,0,32)"/><text x="745.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.33%)</title><rect x="746" y="324" width="4" height="15" fill="rgb(219,18,21)"/><text x="749.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.33%)</title><rect x="750" y="260" width="4" height="15" fill="rgb(231,147,39)"/><text x="753.00" y="270.50"></text></g><g><title>mmap64 (libc-2.29.so) (5 samples, 1.63%)</title><rect x="773" y="308" width="19" height="15" fill="rgb(234,42,38)"/><text x="776.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.65%)</title><rect x="792" y="308" width="8" height="15" fill="rgb(210,93,41)"/><text x="795.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (13 samples, 4.25%)</title><rect x="754" y="292" width="50" height="15" fill="rgb(250,215,54)"/><text x="757.00" y="302.50">NpyIt..</text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.33%)</title><rect x="800" y="308" width="4" height="15" fill="rgb(232,67,5)"/><text x="803.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (5 samples, 1.63%)</title><rect x="804" y="292" width="19" height="15" fill="rgb(253,188,45)"/><text x="807.00" y="302.50"></text></g><g><title>__munmap (libc-2.29.so) (5 samples, 1.63%)</title><rect x="804" y="308" width="19" height="15" fill="rgb(214,159,0)"/><text x="807.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (20 samples, 6.54%)</title><rect x="754" y="276" width="77" height="15" fill="rgb(223,166,7)"/><text x="757.00" y="286.50">PyUFunc_..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.65%)</title><rect x="823" y="292" width="8" height="15" fill="rgb(225,56,17)"/><text x="826.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.65%)</title><rect x="823" y="308" width="8" height="15" fill="rgb(236,146,39)"/><text x="826.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.65%)</title><rect x="823" y="324" width="8" height="15" fill="rgb(247,97,16)"/><text x="826.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="827" y="340" width="4" height="15" fill="rgb(240,219,54)"/><text x="830.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="827" y="356" width="4" height="15" fill="rgb(209,71,52)"/><text x="830.00" y="366.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="831" y="292" width="4" height="15" fill="rgb(237,174,30)"/><text x="834.00" y="302.50"></text></g><g><title>array_sum (methods.c) (25 samples, 8.17%)</title><rect x="742" y="180" width="97" height="15" fill="rgb(244,193,40)"/><text x="745.00" y="190.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c) (25 samples, 8.17%)</title><rect x="742" y="196" width="97" height="15" fill="rgb(220,226,21)"/><text x="745.00" y="206.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py) (25 samples, 8.17%)</title><rect x="742" y="212" width="97" height="15" fill="rgb(217,190,44)"/><text x="745.00" y="222.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c) (25 samples, 8.17%)</title><rect x="742" y="228" width="97" height="15" fill="rgb(237,45,30)"/><text x="745.00" y="238.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (23 samples, 7.52%)</title><rect x="750" y="244" width="89" height="15" fill="rgb(251,207,28)"/><text x="753.00" y="254.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (22 samples, 7.19%)</title><rect x="754" y="260" width="85" height="15" fill="rgb(245,29,27)"/><text x="757.00" y="270.50">PyUFunc_Re..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.65%)</title><rect x="831" y="276" width="8" height="15" fill="rgb(236,84,9)"/><text x="834.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="835" y="292" width="4" height="15" fill="rgb(224,190,7)"/><text x="838.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="835" y="308" width="4" height="15" fill="rgb(239,38,24)"/><text x="838.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.33%)</title><rect x="850" y="196" width="4" height="15" fill="rgb(240,130,7)"/><text x="853.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="850" y="212" width="4" height="15" fill="rgb(244,190,26)"/><text x="853.00" y="222.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.33%)</title><rect x="858" y="276" width="4" height="15" fill="rgb(249,168,35)"/><text x="861.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.33%)</title><rect x="858" y="292" width="4" height="15" fill="rgb(218,36,12)"/><text x="861.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.33%)</title><rect x="858" y="308" width="4" height="15" fill="rgb(254,49,38)"/><text x="861.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.98%)</title><rect x="862" y="276" width="11" height="15" fill="rgb(212,62,39)"/><text x="865.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.65%)</title><rect x="866" y="292" width="7" height="15" fill="rgb(239,114,23)"/><text x="869.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.33%)</title><rect x="869" y="308" width="4" height="15" fill="rgb(232,56,48)"/><text x="872.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="869" y="324" width="4" height="15" fill="rgb(217,45,19)"/><text x="872.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="869" y="340" width="4" height="15" fill="rgb(206,85,20)"/><text x="872.00" y="350.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c) (1 samples, 0.33%)</title><rect x="873" y="276" width="4" height="15" fill="rgb(208,67,44)"/><text x="876.00" y="286.50"></text></g><g><title>array_add (number.c) (7 samples, 2.29%)</title><rect x="854" y="196" width="27" height="15" fill="rgb(244,51,28)"/><text x="857.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.29%)</title><rect x="854" y="212" width="27" height="15" fill="rgb(226,212,5)"/><text x="857.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.29%)</title><rect x="854" y="228" width="27" height="15" fill="rgb(248,7,32)"/><text x="857.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.96%)</title><rect x="858" y="244" width="23" height="15" fill="rgb(217,1,8)"/><text x="861.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.96%)</title><rect x="858" y="260" width="23" height="15" fill="rgb(243,22,43)"/><text x="861.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.33%)</title><rect x="877" y="276" width="4" height="15" fill="rgb(207,24,23)"/><text x="880.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="877" y="292" width="4" height="15" fill="rgb(210,105,46)"/><text x="880.00" y="302.50"></text></g><g><title>0x7f14cd0fbcf6 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="900" y="212" width="4" height="15" fill="rgb(225,191,14)"/><text x="903.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.98%)</title><rect x="904" y="212" width="12" height="15" fill="rgb(239,67,29)"/><text x="907.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.33%)</title><rect x="916" y="212" width="4" height="15" fill="rgb(248,55,20)"/><text x="919.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.33%)</title><rect x="920" y="212" width="3" height="15" fill="rgb(233,133,4)"/><text x="923.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.98%)</title><rect x="947" y="228" width="11" height="15" fill="rgb(232,162,52)"/><text x="950.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 3.59%)</title><rect x="923" y="212" width="43" height="15" fill="rgb(254,144,36)"/><text x="926.00" y="222.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.65%)</title><rect x="958" y="228" width="8" height="15" fill="rgb(226,177,54)"/><text x="961.00" y="238.50"></text></g><g><title>0x7f14cd02e6d4 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="962" y="244" width="4" height="15" fill="rgb(248,140,35)"/><text x="965.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.98%)</title><rect x="966" y="212" width="11" height="15" fill="rgb(251,167,43)"/><text x="969.00" y="222.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.33%)</title><rect x="974" y="228" width="3" height="15" fill="rgb(213,121,9)"/><text x="977.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.29%)</title><rect x="977" y="212" width="27" height="15" fill="rgb(212,124,43)"/><text x="980.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.98%)</title><rect x="993" y="228" width="11" height="15" fill="rgb(253,134,1)"/><text x="996.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.65%)</title><rect x="997" y="244" width="7" height="15" fill="rgb(215,111,39)"/><text x="1000.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="1012" y="228" width="4" height="15" fill="rgb(252,122,53)"/><text x="1015.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.63%)</title><rect x="1004" y="212" width="20" height="15" fill="rgb(220,17,37)"/><text x="1007.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.65%)</title><rect x="1016" y="228" width="8" height="15" fill="rgb(229,17,30)"/><text x="1019.00" y="238.50"></text></g><g><title>0x7f14cd033e7a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1020" y="244" width="4" height="15" fill="rgb(238,80,27)"/><text x="1023.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (41 samples, 13.40%)</title><rect x="881" y="196" width="158" height="15" fill="rgb(221,86,24)"/><text x="884.00" y="206.50">check_array (sklearn..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.31%)</title><rect x="1024" y="212" width="15" height="15" fill="rgb(222,47,0)"/><text x="1027.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 1.31%)</title><rect x="1024" y="228" width="15" height="15" fill="rgb(225,116,12)"/><text x="1027.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 2.61%)</title><rect x="1039" y="196" width="31" height="15" fill="rgb(245,102,5)"/><text x="1042.00" y="206.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.96%)</title><rect x="1047" y="212" width="23" height="15" fill="rgb(231,7,46)"/><text x="1050.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="1066" y="228" width="4" height="15" fill="rgb(249,11,5)"/><text x="1069.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.33%)</title><rect x="1082" y="260" width="3" height="15" fill="rgb(210,106,18)"/><text x="1085.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src) (1 samples, 0.33%)</title><rect x="1082" y="276" width="3" height="15" fill="rgb(235,79,9)"/><text x="1085.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1089" y="324" width="4" height="15" fill="rgb(225,215,21)"/><text x="1092.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="1093" y="324" width="4" height="15" fill="rgb(224,204,42)"/><text x="1096.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(241,177,39)"/><text x="1096.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.98%)</title><rect x="1089" y="292" width="12" height="15" fill="rgb(212,47,3)"/><text x="1092.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.98%)</title><rect x="1089" y="308" width="12" height="15" fill="rgb(230,156,31)"/><text x="1092.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="1097" y="324" width="4" height="15" fill="rgb(251,88,45)"/><text x="1100.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.63%)</title><rect x="1085" y="276" width="20" height="15" fill="rgb(218,162,34)"/><text x="1088.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1101" y="292" width="4" height="15" fill="rgb(242,152,11)"/><text x="1104.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="1101" y="308" width="4" height="15" fill="rgb(222,113,9)"/><text x="1104.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="1101" y="324" width="4" height="15" fill="rgb(212,110,37)"/><text x="1104.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="1101" y="340" width="4" height="15" fill="rgb(240,13,5)"/><text x="1104.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="1101" y="356" width="4" height="15" fill="rgb(212,50,0)"/><text x="1104.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1101" y="372" width="4" height="15" fill="rgb(252,121,4)"/><text x="1104.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1105" y="276" width="4" height="15" fill="rgb(215,133,48)"/><text x="1108.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.29%)</title><rect x="1085" y="260" width="27" height="15" fill="rgb(236,76,26)"/><text x="1088.00" y="270.50">N..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1109" y="276" width="3" height="15" fill="rgb(211,85,8)"/><text x="1112.00" y="286.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.33%)</title><rect x="1109" y="292" width="3" height="15" fill="rgb(233,144,49)"/><text x="1112.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1112" y="260" width="4" height="15" fill="rgb(240,43,18)"/><text x="1115.00" y="270.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1116" y="260" width="4" height="15" fill="rgb(223,173,5)"/><text x="1119.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.92%)</title><rect x="1078" y="228" width="46" height="15" fill="rgb(209,135,5)"/><text x="1081.00" y="238.50">PyUF..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 3.92%)</title><rect x="1078" y="244" width="46" height="15" fill="rgb(250,136,13)"/><text x="1081.00" y="254.50">PyUF..</text></g><g><title>_validate_num_dims (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1120" y="260" width="4" height="15" fill="rgb(240,178,46)"/><text x="1123.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (75 samples, 24.51%)</title><rect x="839" y="180" width="289" height="15" fill="rgb(249,95,49)"/><text x="842.00" y="190.50">decision_function (sklearn/linear_mode..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (15 samples, 4.90%)</title><rect x="1070" y="196" width="58" height="15" fill="rgb(252,91,46)"/><text x="1073.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.25%)</title><rect x="1078" y="212" width="50" height="15" fill="rgb(222,219,21)"/><text x="1081.00" y="222.50">ufunc..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1124" y="228" width="4" height="15" fill="rgb(251,169,8)"/><text x="1127.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="1128" y="196" width="4" height="15" fill="rgb(223,49,31)"/><text x="1131.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="1128" y="212" width="4" height="15" fill="rgb(232,159,48)"/><text x="1131.00" y="222.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.33%)</title><rect x="1132" y="276" width="4" height="15" fill="rgb(216,190,25)"/><text x="1135.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="1132" y="292" width="4" height="15" fill="rgb(254,89,14)"/><text x="1135.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="1132" y="308" width="4" height="15" fill="rgb(235,102,12)"/><text x="1135.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.65%)</title><rect x="1132" y="228" width="7" height="15" fill="rgb(241,183,3)"/><text x="1135.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.65%)</title><rect x="1132" y="244" width="7" height="15" fill="rgb(253,199,26)"/><text x="1135.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.65%)</title><rect x="1132" y="260" width="7" height="15" fill="rgb(250,184,54)"/><text x="1135.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1136" y="276" width="3" height="15" fill="rgb(247,10,11)"/><text x="1139.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1139" y="228" width="4" height="15" fill="rgb(212,124,50)"/><text x="1142.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1139" y="244" width="4" height="15" fill="rgb(217,205,43)"/><text x="1142.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1139" y="260" width="4" height="15" fill="rgb(219,63,39)"/><text x="1142.00" y="270.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1139" y="276" width="4" height="15" fill="rgb(232,156,37)"/><text x="1142.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.31%)</title><rect x="1132" y="196" width="15" height="15" fill="rgb(225,191,49)"/><text x="1135.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.31%)</title><rect x="1132" y="212" width="15" height="15" fill="rgb(243,87,26)"/><text x="1135.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1143" y="228" width="4" height="15" fill="rgb(254,51,52)"/><text x="1146.00" y="238.50"></text></g><g><title>0x7f14af4239dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1143" y="244" width="4" height="15" fill="rgb(247,165,18)"/><text x="1146.00" y="254.50"></text></g><g><title>0x7f14af444265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1143" y="260" width="4" height="15" fill="rgb(239,143,49)"/><text x="1146.00" y="270.50"></text></g><g><title>0x7f14af401fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1143" y="276" width="4" height="15" fill="rgb(234,210,6)"/><text x="1146.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (116 samples, 37.91%)</title><rect x="704" y="164" width="447" height="15" fill="rgb(207,77,5)"/><text x="707.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.96%)</title><rect x="1128" y="180" width="23" height="15" fill="rgb(234,162,37)"/><text x="1131.00" y="190.50">u..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1147" y="196" width="4" height="15" fill="rgb(239,80,28)"/><text x="1150.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 42.81%)</title><rect x="680" y="132" width="506" height="15" fill="rgb(205,31,5)"/><text x="683.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (129 samples, 42.16%)</title><rect x="688" y="148" width="498" height="15" fill="rgb(216,56,29)"/><text x="691.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 2.94%)</title><rect x="1151" y="164" width="35" height="15" fill="rgb(213,190,9)"/><text x="1154.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 2.29%)</title><rect x="1159" y="180" width="27" height="15" fill="rgb(216,2,45)"/><text x="1162.00" y="190.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.65%)</title><rect x="1178" y="196" width="8" height="15" fill="rgb(230,95,40)"/><text x="1181.00" y="206.50"></text></g><g><title>all (306 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,29,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (306 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(233,40,31)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (136 samples, 44.44%)</title><rect x="665" y="68" width="525" height="15" fill="rgb(226,50,31)"/><text x="668.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onn..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (136 samples, 44.44%)</title><rect x="665" y="84" width="525" height="15" fill="rgb(240,99,45)"/><text x="668.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_o..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_50_12_float_.py) (136 samples, 44.44%)</title><rect x="665" y="100" width="525" height="15" fill="rgb(227,211,31)"/><text x="668.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (135 samples, 44.12%)</title><rect x="669" y="116" width="521" height="15" fill="rgb(227,54,36)"/><text x="672.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.33%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(250,163,7)"/><text x="1189.00" y="142.50"></text></g></g></svg>