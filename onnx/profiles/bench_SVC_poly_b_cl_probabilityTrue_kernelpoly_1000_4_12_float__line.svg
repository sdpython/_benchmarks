<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>0x7fa5bea563fd (?) (1 samples, 0.12%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(232,162,23)"/><text x="13.00" y="190.50"></text></g><g><title>0x7fa5bea54553 (?) (1 samples, 0.12%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(241,193,22)"/><text x="13.00" y="206.50"></text></g><g><title>0x7fa5bea4fa09 (?) (1 samples, 0.12%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(225,114,8)"/><text x="13.00" y="222.50"></text></g><g><title>0x7fa5bea62283 (?) (1 samples, 0.12%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(244,120,37)"/><text x="13.00" y="238.50"></text></g><g><title>0x7fa5bea61e11 (?) (1 samples, 0.12%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(236,132,28)"/><text x="13.00" y="254.50"></text></g><g><title>0x7fa5bea5de73 (?) (1 samples, 0.12%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(245,156,3)"/><text x="13.00" y="270.50"></text></g><g><title>0x7fa5bea53d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="11" y="196" width="1" height="15" fill="rgb(214,92,50)"/><text x="14.00" y="206.50"></text></g><g><title>0x7fa5bea3de39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="11" y="212" width="1" height="15" fill="rgb(222,86,17)"/><text x="14.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.12%)</title><rect x="11" y="228" width="1" height="15" fill="rgb(246,1,48)"/><text x="14.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.12%)</title><rect x="11" y="244" width="1" height="15" fill="rgb(218,18,40)"/><text x="14.00" y="254.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.12%)</title><rect x="20" y="244" width="2" height="15" fill="rgb(239,64,47)"/><text x="23.00" y="254.50"></text></g><g><title>0x7fa5e4137c18 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="20" y="260" width="2" height="15" fill="rgb(215,197,41)"/><text x="23.00" y="270.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (14 samples, 1.61%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(225,141,35)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (14 samples, 1.61%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(229,73,51)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (14 samples, 1.61%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(206,154,30)"/><text x="13.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (14 samples, 1.61%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(206,227,23)"/><text x="13.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (14 samples, 1.61%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(230,29,5)"/><text x="13.00" y="174.50"></text></g><g><title>0x7fa5bea563fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (13 samples, 1.50%)</title><rect x="11" y="180" width="18" height="15" fill="rgb(219,110,25)"/><text x="14.00" y="190.50"></text></g><g><title>0x7fa5bea54553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.38%)</title><rect x="12" y="196" width="17" height="15" fill="rgb(227,78,20)"/><text x="15.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.38%)</title><rect x="12" y="212" width="17" height="15" fill="rgb(216,156,48)"/><text x="15.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.38%)</title><rect x="12" y="228" width="17" height="15" fill="rgb(247,142,19)"/><text x="15.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.58%)</title><rect x="22" y="244" width="7" height="15" fill="rgb(229,6,19)"/><text x="25.00" y="254.50"></text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.35%)</title><rect x="24" y="260" width="5" height="15" fill="rgb(248,182,14)"/><text x="27.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="27" y="276" width="2" height="15" fill="rgb(235,1,36)"/><text x="30.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.12%)</title><rect x="31" y="196" width="2" height="15" fill="rgb(219,69,48)"/><text x="34.00" y="206.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (5 samples, 0.58%)</title><rect x="30" y="164" width="7" height="15" fill="rgb(245,153,9)"/><text x="33.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.58%)</title><rect x="30" y="180" width="7" height="15" fill="rgb(243,128,2)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 0.35%)</title><rect x="33" y="196" width="4" height="15" fill="rgb(209,28,10)"/><text x="36.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.12%)</title><rect x="35" y="212" width="2" height="15" fill="rgb(235,137,44)"/><text x="38.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.12%)</title><rect x="37" y="180" width="1" height="15" fill="rgb(252,213,25)"/><text x="40.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.23%)</title><rect x="38" y="180" width="3" height="15" fill="rgb(206,23,9)"/><text x="41.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.12%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(235,153,39)"/><text x="42.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.23%)</title><rect x="41" y="180" width="2" height="15" fill="rgb(236,154,8)"/><text x="44.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.23%)</title><rect x="41" y="196" width="2" height="15" fill="rgb(221,5,4)"/><text x="44.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.23%)</title><rect x="41" y="212" width="2" height="15" fill="rgb(249,70,10)"/><text x="44.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.23%)</title><rect x="41" y="228" width="2" height="15" fill="rgb(241,177,37)"/><text x="44.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.23%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(207,144,28)"/><text x="44.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.23%)</title><rect x="41" y="260" width="2" height="15" fill="rgb(241,59,54)"/><text x="44.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.23%)</title><rect x="41" y="276" width="2" height="15" fill="rgb(222,138,27)"/><text x="44.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.23%)</title><rect x="41" y="292" width="2" height="15" fill="rgb(254,20,28)"/><text x="44.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.23%)</title><rect x="41" y="308" width="2" height="15" fill="rgb(216,141,17)"/><text x="44.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.12%)</title><rect x="43" y="180" width="2" height="15" fill="rgb(250,188,24)"/><text x="46.00" y="190.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (12 samples, 1.38%)</title><rect x="30" y="148" width="16" height="15" fill="rgb(252,194,48)"/><text x="33.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (7 samples, 0.81%)</title><rect x="37" y="164" width="9" height="15" fill="rgb(254,117,13)"/><text x="40.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.12%)</title><rect x="45" y="180" width="1" height="15" fill="rgb(233,146,18)"/><text x="48.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.12%)</title><rect x="45" y="196" width="1" height="15" fill="rgb(231,149,52)"/><text x="48.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.12%)</title><rect x="45" y="212" width="1" height="15" fill="rgb(223,140,43)"/><text x="48.00" y="222.50"></text></g><g><title>0x7fa5bea53de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="46" y="196" width="2" height="15" fill="rgb(231,187,16)"/><text x="49.00" y="206.50"></text></g><g><title>0x7fa5bea3d5ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(230,153,51)"/><text x="49.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:832) (1 samples, 0.12%)</title><rect x="46" y="228" width="2" height="15" fill="rgb(219,55,4)"/><text x="49.00" y="238.50"></text></g><g><title>0x7fa5bea542b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="48" y="196" width="1" height="15" fill="rgb(205,226,9)"/><text x="51.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="48" y="212" width="1" height="15" fill="rgb(244,47,34)"/><text x="51.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="48" y="228" width="1" height="15" fill="rgb(206,121,41)"/><text x="51.00" y="238.50"></text></g><g><title>0x7fa5bea54535 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="49" y="196" width="1" height="15" fill="rgb(221,154,15)"/><text x="52.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.12%)</title><rect x="49" y="212" width="1" height="15" fill="rgb(214,99,7)"/><text x="52.00" y="222.50"></text></g><g><title>0x7fa5bea36cf0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="137" y="244" width="2" height="15" fill="rgb(233,195,35)"/><text x="140.00" y="254.50"></text></g><g><title>0x7fa5bea36e80 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="139" y="244" width="1" height="15" fill="rgb(221,13,8)"/><text x="142.00" y="254.50"></text></g><g><title>0x7fa5e3f65906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="140" y="244" width="1" height="15" fill="rgb(242,179,12)"/><text x="143.00" y="254.50"></text></g><g><title>0x7fa5e3f6590e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="141" y="244" width="2" height="15" fill="rgb(226,51,1)"/><text x="144.00" y="254.50"></text></g><g><title>0x7fa5e3f6595e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="143" y="244" width="1" height="15" fill="rgb(242,147,46)"/><text x="146.00" y="254.50"></text></g><g><title>0x7fa5e3f65971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="144" y="244" width="1" height="15" fill="rgb(237,88,12)"/><text x="147.00" y="254.50"></text></g><g><title>0x7fa5e3f65a55 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="145" y="244" width="2" height="15" fill="rgb(248,41,47)"/><text x="148.00" y="254.50"></text></g><g><title>0x7fa5e3f65d07 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="147" y="244" width="1" height="15" fill="rgb(205,176,40)"/><text x="150.00" y="254.50"></text></g><g><title>0x7fa5e4137ba0 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="150" y="260" width="1" height="15" fill="rgb(246,101,8)"/><text x="153.00" y="270.50"></text></g><g><title>0x7fa5e4137c2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="151" y="260" width="1" height="15" fill="rgb(244,207,41)"/><text x="154.00" y="270.50"></text></g><g><title>0x7fa5e4137c32 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="152" y="260" width="3" height="15" fill="rgb(247,77,12)"/><text x="155.00" y="270.50"></text></g><g><title>0x7fa5e4137c56 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="155" y="260" width="1" height="15" fill="rgb(237,117,26)"/><text x="158.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 0.92%)</title><rect x="148" y="244" width="11" height="15" fill="rgb(247,130,32)"/><text x="151.00" y="254.50"></text></g><g><title>0x7fa5e4137c7f (libm-2.29.so) (2 samples, 0.23%)</title><rect x="156" y="260" width="3" height="15" fill="rgb(224,163,41)"/><text x="159.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="159" y="244" width="3" height="15" fill="rgb(237,19,21)"/><text x="162.00" y="254.50"></text></g><g><title>0x7fa5e3f66c38 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="179" y="260" width="3" height="15" fill="rgb(209,0,52)"/><text x="182.00" y="270.50"></text></g><g><title>0x7fa5e3f66c48 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="182" y="260" width="2" height="15" fill="rgb(239,130,49)"/><text x="185.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (21 samples, 2.42%)</title><rect x="162" y="244" width="28" height="15" fill="rgb(216,67,4)"/><text x="165.00" y="254.50">m..</text></g><g><title>0x7fa5e3f6700a (libc-2.29.so) (5 samples, 0.58%)</title><rect x="184" y="260" width="6" height="15" fill="rgb(238,62,15)"/><text x="187.00" y="270.50"></text></g><g><title>0x7fa5e3f6592c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="211" y="260" width="1" height="15" fill="rgb(220,119,14)"/><text x="214.00" y="270.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="212" y="260" width="1" height="15" fill="rgb(206,134,50)"/><text x="215.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.35%)</title><rect x="213" y="260" width="4" height="15" fill="rgb(205,33,50)"/><text x="216.00" y="270.50"></text></g><g><title>0x7fa5bea376b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="250" y="276" width="1" height="15" fill="rgb(218,88,53)"/><text x="253.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:38) (192 samples, 22.12%)</title><rect x="10" y="52" width="261" height="15" fill="rgb(232,39,20)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_prob..</text></g><g><title>profile_skl (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:37) (192 samples, 22.12%)</title><rect x="10" y="68" width="261" height="15" fill="rgb(234,28,28)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_poly_b_cl_p..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (192 samples, 22.12%)</title><rect x="10" y="84" width="261" height="15" fill="rgb(229,151,30)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_poly_b_cl..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (178 samples, 20.51%)</title><rect x="29" y="100" width="242" height="15" fill="rgb(246,228,31)"/><text x="32.00" y="110.50">profile (bench_SVC_poly_b_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (177 samples, 20.39%)</title><rect x="30" y="116" width="241" height="15" fill="rgb(221,140,42)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (177 samples, 20.39%)</title><rect x="30" y="132" width="241" height="15" fill="rgb(244,227,1)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (165 samples, 19.01%)</title><rect x="46" y="148" width="225" height="15" fill="rgb(210,87,45)"/><text x="49.00" y="158.50">_predict_proba (sklearn/svm/_..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (165 samples, 19.01%)</title><rect x="46" y="164" width="225" height="15" fill="rgb(254,193,23)"/><text x="49.00" y="174.50">_dense_predict_proba (sklearn..</text></g><g><title>0x7fa5bea563fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (165 samples, 19.01%)</title><rect x="46" y="180" width="225" height="15" fill="rgb(229,52,19)"/><text x="49.00" y="190.50">0x7fa5bea563fd (sklearn/svm/_..</text></g><g><title>0x7fa5bea54553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (162 samples, 18.66%)</title><rect x="50" y="196" width="221" height="15" fill="rgb(244,203,14)"/><text x="53.00" y="206.50">0x7fa5bea54553 (sklearn/svm/_..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (162 samples, 18.66%)</title><rect x="50" y="212" width="221" height="15" fill="rgb(221,49,11)"/><text x="53.00" y="222.50">copy_predict_proba (sklearn/s..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (160 samples, 18.43%)</title><rect x="53" y="228" width="218" height="15" fill="rgb(250,81,21)"/><text x="56.00" y="238.50">svm_predict_probability (skl..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (59 samples, 6.80%)</title><rect x="190" y="244" width="81" height="15" fill="rgb(226,21,36)"/><text x="193.00" y="254.50">svm_predi..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (39 samples, 4.49%)</title><rect x="217" y="260" width="54" height="15" fill="rgb(224,168,23)"/><text x="220.00" y="270.50">svm::..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.61%)</title><rect x="251" y="276" width="20" height="15" fill="rgb(224,153,17)"/><text x="254.00" y="286.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.12%)</title><rect x="271" y="372" width="1" height="15" fill="rgb(209,8,48)"/><text x="274.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="271" y="388" width="1" height="15" fill="rgb(248,227,23)"/><text x="274.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="271" y="404" width="1" height="15" fill="rgb(207,65,38)"/><text x="274.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="271" y="420" width="1" height="15" fill="rgb(243,44,12)"/><text x="274.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="271" y="436" width="1" height="15" fill="rgb(218,201,9)"/><text x="274.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="271" y="452" width="1" height="15" fill="rgb(205,38,17)"/><text x="274.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="271" y="468" width="1" height="15" fill="rgb(218,152,24)"/><text x="274.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="271" y="484" width="1" height="15" fill="rgb(206,70,45)"/><text x="274.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.12%)</title><rect x="271" y="500" width="1" height="15" fill="rgb(226,63,3)"/><text x="274.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="271" y="516" width="1" height="15" fill="rgb(219,187,14)"/><text x="274.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="271" y="532" width="1" height="15" fill="rgb(244,72,36)"/><text x="274.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="271" y="548" width="1" height="15" fill="rgb(218,147,52)"/><text x="274.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="271" y="564" width="1" height="15" fill="rgb(215,34,42)"/><text x="274.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="271" y="580" width="1" height="15" fill="rgb(210,142,22)"/><text x="274.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:174) (1 samples, 0.12%)</title><rect x="271" y="596" width="1" height="15" fill="rgb(217,150,29)"/><text x="274.00" y="606.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="271" y="612" width="1" height="15" fill="rgb(206,102,39)"/><text x="274.00" y="622.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="271" y="628" width="1" height="15" fill="rgb(210,31,18)"/><text x="274.00" y="638.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py:1) (2 samples, 0.23%)</title><rect x="271" y="148" width="2" height="15" fill="rgb(233,122,41)"/><text x="274.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="271" y="164" width="2" height="15" fill="rgb(246,148,41)"/><text x="274.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="271" y="180" width="2" height="15" fill="rgb(205,130,25)"/><text x="274.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="271" y="196" width="2" height="15" fill="rgb(253,157,45)"/><text x="274.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="271" y="212" width="2" height="15" fill="rgb(227,156,5)"/><text x="274.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="271" y="228" width="2" height="15" fill="rgb(227,139,1)"/><text x="274.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.23%)</title><rect x="271" y="244" width="2" height="15" fill="rgb(248,23,0)"/><text x="274.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="271" y="260" width="2" height="15" fill="rgb(217,180,39)"/><text x="274.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="271" y="276" width="2" height="15" fill="rgb(241,50,17)"/><text x="274.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="271" y="292" width="2" height="15" fill="rgb(208,94,4)"/><text x="274.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="271" y="308" width="2" height="15" fill="rgb(253,178,38)"/><text x="274.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="271" y="324" width="2" height="15" fill="rgb(250,52,30)"/><text x="274.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="271" y="340" width="2" height="15" fill="rgb(219,142,33)"/><text x="274.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="271" y="356" width="2" height="15" fill="rgb(212,222,14)"/><text x="274.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:69) (1 samples, 0.12%)</title><rect x="272" y="372" width="1" height="15" fill="rgb(253,90,3)"/><text x="275.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="272" y="388" width="1" height="15" fill="rgb(224,227,21)"/><text x="275.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="272" y="404" width="1" height="15" fill="rgb(231,146,10)"/><text x="275.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="272" y="420" width="1" height="15" fill="rgb(239,216,33)"/><text x="275.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="272" y="436" width="1" height="15" fill="rgb(252,164,45)"/><text x="275.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="272" y="452" width="1" height="15" fill="rgb(210,99,45)"/><text x="275.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="272" y="468" width="1" height="15" fill="rgb(207,79,48)"/><text x="275.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="272" y="484" width="1" height="15" fill="rgb(211,59,54)"/><text x="275.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numerictypes.py:86) (1 samples, 0.12%)</title><rect x="272" y="500" width="1" height="15" fill="rgb(212,204,29)"/><text x="275.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="272" y="516" width="1" height="15" fill="rgb(237,16,17)"/><text x="275.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="272" y="532" width="1" height="15" fill="rgb(246,89,6)"/><text x="275.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="272" y="548" width="1" height="15" fill="rgb(244,43,18)"/><text x="275.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="272" y="564" width="1" height="15" fill="rgb(223,145,31)"/><text x="275.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="272" y="580" width="1" height="15" fill="rgb(227,50,9)"/><text x="275.00" y="590.50"></text></g><g><title>&lt;module&gt; (numbers.py:32) (1 samples, 0.12%)</title><rect x="272" y="596" width="1" height="15" fill="rgb(213,122,5)"/><text x="275.00" y="606.50"></text></g><g><title>Complex (numbers.py:54) (1 samples, 0.12%)</title><rect x="272" y="612" width="1" height="15" fill="rgb(224,36,5)"/><text x="275.00" y="622.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.12%)</title><rect x="273" y="852" width="2" height="15" fill="rgb(236,103,16)"/><text x="276.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.12%)</title><rect x="273" y="868" width="2" height="15" fill="rgb(242,6,50)"/><text x="276.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.12%)</title><rect x="273" y="884" width="2" height="15" fill="rgb(234,94,2)"/><text x="276.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.12%)</title><rect x="273" y="900" width="2" height="15" fill="rgb(249,197,3)"/><text x="276.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.12%)</title><rect x="273" y="916" width="2" height="15" fill="rgb(245,88,42)"/><text x="276.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.12%)</title><rect x="273" y="932" width="2" height="15" fill="rgb(253,57,5)"/><text x="276.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="273" y="948" width="2" height="15" fill="rgb(248,212,30)"/><text x="276.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.12%)</title><rect x="273" y="964" width="2" height="15" fill="rgb(208,0,43)"/><text x="276.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.12%)</title><rect x="273" y="980" width="2" height="15" fill="rgb(206,60,29)"/><text x="276.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:210) (1 samples, 0.12%)</title><rect x="273" y="996" width="2" height="15" fill="rgb(217,76,4)"/><text x="276.00" y="1006.50"></text></g><g><title>_parse_letter_version (pkg_resources/_vendor/packaging/version.py:321) (1 samples, 0.12%)</title><rect x="273" y="1012" width="2" height="15" fill="rgb(240,144,50)"/><text x="276.00" y="1022.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.12%)</title><rect x="275" y="884" width="1" height="15" fill="rgb(222,102,45)"/><text x="278.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.12%)</title><rect x="275" y="900" width="1" height="15" fill="rgb(241,113,6)"/><text x="278.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.12%)</title><rect x="275" y="916" width="1" height="15" fill="rgb(216,117,5)"/><text x="278.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.12%)</title><rect x="275" y="932" width="1" height="15" fill="rgb(207,78,24)"/><text x="278.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.12%)</title><rect x="275" y="948" width="1" height="15" fill="rgb(236,62,10)"/><text x="278.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.12%)</title><rect x="275" y="964" width="1" height="15" fill="rgb(216,23,30)"/><text x="278.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.12%)</title><rect x="275" y="980" width="1" height="15" fill="rgb(215,15,47)"/><text x="278.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.12%)</title><rect x="275" y="996" width="1" height="15" fill="rgb(209,137,1)"/><text x="278.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.12%)</title><rect x="275" y="1012" width="1" height="15" fill="rgb(235,178,29)"/><text x="278.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.12%)</title><rect x="275" y="1028" width="1" height="15" fill="rgb(224,22,31)"/><text x="278.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.12%)</title><rect x="275" y="1044" width="1" height="15" fill="rgb(222,32,11)"/><text x="278.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.35%)</title><rect x="273" y="820" width="4" height="15" fill="rgb(227,222,29)"/><text x="276.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.35%)</title><rect x="273" y="836" width="4" height="15" fill="rgb(215,214,25)"/><text x="276.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.23%)</title><rect x="275" y="852" width="2" height="15" fill="rgb(208,54,40)"/><text x="278.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.23%)</title><rect x="275" y="868" width="2" height="15" fill="rgb(229,116,13)"/><text x="278.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.12%)</title><rect x="276" y="884" width="1" height="15" fill="rgb(242,167,48)"/><text x="279.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.12%)</title><rect x="276" y="900" width="1" height="15" fill="rgb(250,208,0)"/><text x="279.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.12%)</title><rect x="276" y="916" width="1" height="15" fill="rgb(231,106,26)"/><text x="279.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.12%)</title><rect x="276" y="932" width="1" height="15" fill="rgb(251,58,50)"/><text x="279.00" y="942.50"></text></g><g><title>exists (genericpath.py:21) (1 samples, 0.12%)</title><rect x="276" y="948" width="1" height="15" fill="rgb(244,227,6)"/><text x="279.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py:2) (4 samples, 0.46%)</title><rect x="273" y="148" width="6" height="15" fill="rgb(214,166,29)"/><text x="276.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="164" width="6" height="15" fill="rgb(245,56,3)"/><text x="276.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.46%)</title><rect x="273" y="180" width="6" height="15" fill="rgb(221,42,4)"/><text x="276.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="196" width="6" height="15" fill="rgb(218,145,13)"/><text x="276.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="212" width="6" height="15" fill="rgb(237,66,15)"/><text x="276.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="228" width="6" height="15" fill="rgb(214,8,31)"/><text x="276.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="244" width="6" height="15" fill="rgb(216,208,19)"/><text x="276.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="260" width="6" height="15" fill="rgb(214,51,22)"/><text x="276.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="276" width="6" height="15" fill="rgb(207,220,54)"/><text x="276.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.46%)</title><rect x="273" y="292" width="6" height="15" fill="rgb(251,132,44)"/><text x="276.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="308" width="6" height="15" fill="rgb(239,168,43)"/><text x="276.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="324" width="6" height="15" fill="rgb(248,122,23)"/><text x="276.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="340" width="6" height="15" fill="rgb(226,212,19)"/><text x="276.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="356" width="6" height="15" fill="rgb(227,3,4)"/><text x="276.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="372" width="6" height="15" fill="rgb(249,4,11)"/><text x="276.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.46%)</title><rect x="273" y="388" width="6" height="15" fill="rgb(228,155,46)"/><text x="276.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="404" width="6" height="15" fill="rgb(214,141,16)"/><text x="276.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="420" width="6" height="15" fill="rgb(205,104,38)"/><text x="276.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="436" width="6" height="15" fill="rgb(243,96,50)"/><text x="276.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="452" width="6" height="15" fill="rgb(249,138,28)"/><text x="276.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="468" width="6" height="15" fill="rgb(245,51,4)"/><text x="276.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.46%)</title><rect x="273" y="484" width="6" height="15" fill="rgb(250,15,6)"/><text x="276.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="500" width="6" height="15" fill="rgb(237,218,14)"/><text x="276.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="516" width="6" height="15" fill="rgb(245,34,26)"/><text x="276.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="532" width="6" height="15" fill="rgb(235,6,51)"/><text x="276.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="548" width="6" height="15" fill="rgb(234,212,2)"/><text x="276.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="564" width="6" height="15" fill="rgb(242,118,37)"/><text x="276.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.46%)</title><rect x="273" y="580" width="6" height="15" fill="rgb(245,50,24)"/><text x="276.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="596" width="6" height="15" fill="rgb(244,77,19)"/><text x="276.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.46%)</title><rect x="273" y="612" width="6" height="15" fill="rgb(233,163,38)"/><text x="276.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="628" width="6" height="15" fill="rgb(242,56,34)"/><text x="276.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="644" width="6" height="15" fill="rgb(222,1,13)"/><text x="276.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="660" width="6" height="15" fill="rgb(217,119,27)"/><text x="276.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="676" width="6" height="15" fill="rgb(231,216,0)"/><text x="276.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="692" width="6" height="15" fill="rgb(234,225,38)"/><text x="276.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="708" width="6" height="15" fill="rgb(218,143,8)"/><text x="276.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.46%)</title><rect x="273" y="724" width="6" height="15" fill="rgb(231,32,26)"/><text x="276.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="273" y="740" width="6" height="15" fill="rgb(213,78,44)"/><text x="276.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="273" y="756" width="6" height="15" fill="rgb(237,98,54)"/><text x="276.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="273" y="772" width="6" height="15" fill="rgb(225,25,30)"/><text x="276.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="273" y="788" width="6" height="15" fill="rgb(219,214,35)"/><text x="276.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="273" y="804" width="6" height="15" fill="rgb(228,183,15)"/><text x="276.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.12%)</title><rect x="277" y="820" width="2" height="15" fill="rgb(245,107,12)"/><text x="280.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="277" y="836" width="2" height="15" fill="rgb(241,121,31)"/><text x="280.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="277" y="852" width="2" height="15" fill="rgb(252,182,35)"/><text x="280.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="277" y="868" width="2" height="15" fill="rgb(206,110,11)"/><text x="280.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="277" y="884" width="2" height="15" fill="rgb(206,83,39)"/><text x="280.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="277" y="900" width="2" height="15" fill="rgb(227,117,39)"/><text x="280.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.12%)</title><rect x="277" y="916" width="2" height="15" fill="rgb(234,123,29)"/><text x="280.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.12%)</title><rect x="277" y="932" width="2" height="15" fill="rgb(238,32,19)"/><text x="280.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.12%)</title><rect x="277" y="948" width="2" height="15" fill="rgb(240,180,48)"/><text x="280.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.12%)</title><rect x="277" y="964" width="2" height="15" fill="rgb(237,69,40)"/><text x="280.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.12%)</title><rect x="277" y="980" width="2" height="15" fill="rgb(247,102,28)"/><text x="280.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.12%)</title><rect x="277" y="996" width="2" height="15" fill="rgb(247,122,36)"/><text x="280.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.12%)</title><rect x="277" y="1012" width="2" height="15" fill="rgb(207,45,38)"/><text x="280.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:821) (1 samples, 0.12%)</title><rect x="277" y="1028" width="2" height="15" fill="rgb(208,184,17)"/><text x="280.00" y="1038.50"></text></g><g><title>closegroup (sre_parse.py:97) (1 samples, 0.12%)</title><rect x="277" y="1044" width="2" height="15" fill="rgb(208,27,2)"/><text x="280.00" y="1054.50"></text></g><g><title>getwidth (sre_parse.py:184) (1 samples, 0.12%)</title><rect x="277" y="1060" width="2" height="15" fill="rgb(246,167,20)"/><text x="280.00" y="1070.50"></text></g><g><title>getwidth (sre_parse.py:200) (1 samples, 0.12%)</title><rect x="277" y="1076" width="2" height="15" fill="rgb(243,120,23)"/><text x="280.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.12%)</title><rect x="279" y="484" width="1" height="15" fill="rgb(243,12,24)"/><text x="282.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="279" y="500" width="1" height="15" fill="rgb(248,157,0)"/><text x="282.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="279" y="516" width="1" height="15" fill="rgb(205,37,0)"/><text x="282.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="279" y="532" width="1" height="15" fill="rgb(235,82,42)"/><text x="282.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="279" y="548" width="1" height="15" fill="rgb(236,1,37)"/><text x="282.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="279" y="564" width="1" height="15" fill="rgb(234,124,47)"/><text x="282.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.12%)</title><rect x="279" y="580" width="1" height="15" fill="rgb(253,113,3)"/><text x="282.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="279" y="596" width="1" height="15" fill="rgb(244,128,4)"/><text x="282.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="279" y="612" width="1" height="15" fill="rgb(248,132,0)"/><text x="282.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="279" y="628" width="1" height="15" fill="rgb(211,169,15)"/><text x="282.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="279" y="644" width="1" height="15" fill="rgb(243,135,48)"/><text x="282.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="279" y="660" width="1" height="15" fill="rgb(250,11,54)"/><text x="282.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.12%)</title><rect x="279" y="676" width="1" height="15" fill="rgb(231,69,10)"/><text x="282.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="279" y="692" width="1" height="15" fill="rgb(221,90,50)"/><text x="282.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="279" y="708" width="1" height="15" fill="rgb(205,71,1)"/><text x="282.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="279" y="724" width="1" height="15" fill="rgb(219,218,46)"/><text x="282.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="279" y="740" width="1" height="15" fill="rgb(216,103,1)"/><text x="282.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="279" y="756" width="1" height="15" fill="rgb(239,78,44)"/><text x="282.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:114) (1 samples, 0.12%)</title><rect x="279" y="772" width="1" height="15" fill="rgb(251,59,6)"/><text x="282.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="279" y="788" width="1" height="15" fill="rgb(253,89,31)"/><text x="282.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="279" y="804" width="1" height="15" fill="rgb(219,212,3)"/><text x="282.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="279" y="820" width="1" height="15" fill="rgb(209,25,43)"/><text x="282.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="279" y="836" width="1" height="15" fill="rgb(211,99,3)"/><text x="282.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="279" y="852" width="1" height="15" fill="rgb(233,166,25)"/><text x="282.00" y="862.50"></text></g><g><title>&lt;module&gt; (requests/models.py:16) (1 samples, 0.12%)</title><rect x="279" y="868" width="1" height="15" fill="rgb(238,58,18)"/><text x="282.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="279" y="884" width="1" height="15" fill="rgb(220,112,6)"/><text x="282.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="279" y="900" width="1" height="15" fill="rgb(230,194,37)"/><text x="282.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="279" y="916" width="1" height="15" fill="rgb(209,28,5)"/><text x="282.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="279" y="932" width="1" height="15" fill="rgb(216,102,27)"/><text x="282.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="279" y="948" width="1" height="15" fill="rgb(248,93,48)"/><text x="282.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="279" y="964" width="1" height="15" fill="rgb(228,92,7)"/><text x="282.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.23%)</title><rect x="279" y="244" width="2" height="15" fill="rgb(241,222,18)"/><text x="282.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(238,153,16)"/><text x="282.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="279" y="276" width="2" height="15" fill="rgb(211,113,8)"/><text x="282.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="279" y="292" width="2" height="15" fill="rgb(213,105,26)"/><text x="282.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="279" y="308" width="2" height="15" fill="rgb(244,171,28)"/><text x="282.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="279" y="324" width="2" height="15" fill="rgb(233,179,11)"/><text x="282.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.23%)</title><rect x="279" y="340" width="2" height="15" fill="rgb(220,167,9)"/><text x="282.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="279" y="356" width="2" height="15" fill="rgb(208,80,1)"/><text x="282.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.23%)</title><rect x="279" y="372" width="2" height="15" fill="rgb(238,31,36)"/><text x="282.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="279" y="388" width="2" height="15" fill="rgb(210,173,28)"/><text x="282.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="279" y="404" width="2" height="15" fill="rgb(245,131,22)"/><text x="282.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="279" y="420" width="2" height="15" fill="rgb(228,161,16)"/><text x="282.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="279" y="436" width="2" height="15" fill="rgb(207,176,52)"/><text x="282.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="279" y="452" width="2" height="15" fill="rgb(254,164,27)"/><text x="282.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="279" y="468" width="2" height="15" fill="rgb(239,90,20)"/><text x="282.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.12%)</title><rect x="280" y="484" width="1" height="15" fill="rgb(238,184,51)"/><text x="283.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="500" width="1" height="15" fill="rgb(216,10,1)"/><text x="283.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="516" width="1" height="15" fill="rgb(222,189,38)"/><text x="283.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="532" width="1" height="15" fill="rgb(222,170,22)"/><text x="283.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="548" width="1" height="15" fill="rgb(241,11,32)"/><text x="283.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="564" width="1" height="15" fill="rgb(250,129,10)"/><text x="283.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.12%)</title><rect x="280" y="580" width="1" height="15" fill="rgb(239,13,4)"/><text x="283.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="596" width="1" height="15" fill="rgb(228,167,21)"/><text x="283.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="280" y="612" width="1" height="15" fill="rgb(218,189,14)"/><text x="283.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="628" width="1" height="15" fill="rgb(243,187,9)"/><text x="283.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="644" width="1" height="15" fill="rgb(238,181,26)"/><text x="283.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="660" width="1" height="15" fill="rgb(208,169,3)"/><text x="283.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="676" width="1" height="15" fill="rgb(227,210,2)"/><text x="283.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="692" width="1" height="15" fill="rgb(214,60,3)"/><text x="283.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="708" width="1" height="15" fill="rgb(229,21,22)"/><text x="283.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.12%)</title><rect x="280" y="724" width="1" height="15" fill="rgb(230,197,12)"/><text x="283.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="740" width="1" height="15" fill="rgb(239,126,14)"/><text x="283.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="756" width="1" height="15" fill="rgb(253,201,38)"/><text x="283.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="772" width="1" height="15" fill="rgb(225,162,48)"/><text x="283.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="788" width="1" height="15" fill="rgb(240,85,26)"/><text x="283.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="804" width="1" height="15" fill="rgb(209,163,23)"/><text x="283.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.12%)</title><rect x="280" y="820" width="1" height="15" fill="rgb(250,114,43)"/><text x="283.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="836" width="1" height="15" fill="rgb(218,23,35)"/><text x="283.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="852" width="1" height="15" fill="rgb(248,19,44)"/><text x="283.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="868" width="1" height="15" fill="rgb(205,6,29)"/><text x="283.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="884" width="1" height="15" fill="rgb(251,81,10)"/><text x="283.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="900" width="1" height="15" fill="rgb(212,62,5)"/><text x="283.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.12%)</title><rect x="280" y="916" width="1" height="15" fill="rgb(228,187,24)"/><text x="283.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="932" width="1" height="15" fill="rgb(212,84,31)"/><text x="283.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="280" y="948" width="1" height="15" fill="rgb(214,93,19)"/><text x="283.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="964" width="1" height="15" fill="rgb(216,227,12)"/><text x="283.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="980" width="1" height="15" fill="rgb(216,214,45)"/><text x="283.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="996" width="1" height="15" fill="rgb(238,224,1)"/><text x="283.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="1012" width="1" height="15" fill="rgb(245,174,41)"/><text x="283.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="280" y="1028" width="1" height="15" fill="rgb(230,122,4)"/><text x="283.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="280" y="1044" width="1" height="15" fill="rgb(245,121,24)"/><text x="283.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.12%)</title><rect x="280" y="1060" width="1" height="15" fill="rgb(250,187,4)"/><text x="283.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="280" y="1076" width="1" height="15" fill="rgb(213,193,52)"/><text x="283.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="280" y="1092" width="1" height="15" fill="rgb(241,84,2)"/><text x="283.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="280" y="1108" width="1" height="15" fill="rgb(211,184,30)"/><text x="283.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.12%)</title><rect x="280" y="1124" width="1" height="15" fill="rgb(208,200,25)"/><text x="283.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.12%)</title><rect x="280" y="1140" width="1" height="15" fill="rgb(214,35,4)"/><text x="283.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.12%)</title><rect x="280" y="1156" width="1" height="15" fill="rgb(235,108,35)"/><text x="283.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.12%)</title><rect x="281" y="340" width="2" height="15" fill="rgb(238,1,42)"/><text x="284.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="356" width="2" height="15" fill="rgb(212,209,12)"/><text x="284.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="372" width="2" height="15" fill="rgb(222,94,24)"/><text x="284.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="388" width="2" height="15" fill="rgb(215,52,1)"/><text x="284.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="404" width="2" height="15" fill="rgb(217,8,20)"/><text x="284.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="420" width="2" height="15" fill="rgb(208,91,38)"/><text x="284.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.12%)</title><rect x="281" y="436" width="2" height="15" fill="rgb(230,101,31)"/><text x="284.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="452" width="2" height="15" fill="rgb(233,208,8)"/><text x="284.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="468" width="2" height="15" fill="rgb(225,160,48)"/><text x="284.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="484" width="2" height="15" fill="rgb(220,221,27)"/><text x="284.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="500" width="2" height="15" fill="rgb(224,112,29)"/><text x="284.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="516" width="2" height="15" fill="rgb(222,146,12)"/><text x="284.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.12%)</title><rect x="281" y="532" width="2" height="15" fill="rgb(239,212,11)"/><text x="284.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="548" width="2" height="15" fill="rgb(233,155,39)"/><text x="284.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.12%)</title><rect x="281" y="564" width="2" height="15" fill="rgb(231,140,32)"/><text x="284.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="580" width="2" height="15" fill="rgb(217,9,40)"/><text x="284.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="596" width="2" height="15" fill="rgb(229,158,50)"/><text x="284.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="612" width="2" height="15" fill="rgb(236,166,12)"/><text x="284.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="628" width="2" height="15" fill="rgb(243,156,35)"/><text x="284.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="644" width="2" height="15" fill="rgb(226,127,43)"/><text x="284.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="660" width="2" height="15" fill="rgb(248,130,24)"/><text x="284.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:97) (1 samples, 0.12%)</title><rect x="281" y="676" width="2" height="15" fill="rgb(222,151,47)"/><text x="284.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="692" width="2" height="15" fill="rgb(238,103,2)"/><text x="284.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="708" width="2" height="15" fill="rgb(249,116,19)"/><text x="284.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="724" width="2" height="15" fill="rgb(245,53,25)"/><text x="284.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="740" width="2" height="15" fill="rgb(247,13,37)"/><text x="284.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="756" width="2" height="15" fill="rgb(245,61,31)"/><text x="284.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py:13) (1 samples, 0.12%)</title><rect x="281" y="772" width="2" height="15" fill="rgb(222,57,13)"/><text x="284.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="788" width="2" height="15" fill="rgb(247,62,43)"/><text x="284.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="804" width="2" height="15" fill="rgb(242,16,22)"/><text x="284.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="820" width="2" height="15" fill="rgb(230,36,27)"/><text x="284.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="836" width="2" height="15" fill="rgb(213,220,42)"/><text x="284.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="852" width="2" height="15" fill="rgb(252,16,32)"/><text x="284.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py:12) (1 samples, 0.12%)</title><rect x="281" y="868" width="2" height="15" fill="rgb(245,114,33)"/><text x="284.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="884" width="2" height="15" fill="rgb(231,51,38)"/><text x="284.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="900" width="2" height="15" fill="rgb(242,69,47)"/><text x="284.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="281" y="916" width="2" height="15" fill="rgb(232,66,51)"/><text x="284.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="281" y="932" width="2" height="15" fill="rgb(206,204,35)"/><text x="284.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="948" width="2" height="15" fill="rgb(213,142,20)"/><text x="284.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio5.py:98) (1 samples, 0.12%)</title><rect x="281" y="964" width="2" height="15" fill="rgb(237,228,33)"/><text x="284.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="281" y="980" width="2" height="15" fill="rgb(239,64,25)"/><text x="284.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="281" y="996" width="2" height="15" fill="rgb(239,227,25)"/><text x="284.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.12%)</title><rect x="281" y="1012" width="2" height="15" fill="rgb(227,79,34)"/><text x="284.00" y="1022.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.12%)</title><rect x="281" y="1028" width="2" height="15" fill="rgb(218,38,24)"/><text x="284.00" y="1038.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.12%)</title><rect x="281" y="1044" width="2" height="15" fill="rgb(237,45,27)"/><text x="284.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="281" y="1060" width="2" height="15" fill="rgb(249,202,2)"/><text x="284.00" y="1070.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1076" width="2" height="15" fill="rgb(227,95,25)"/><text x="284.00" y="1086.50"></text></g><g><title>0x7fa5e41ed995 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1092" width="2" height="15" fill="rgb(221,70,50)"/><text x="284.00" y="1102.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1108" width="2" height="15" fill="rgb(242,215,19)"/><text x="284.00" y="1118.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1124" width="2" height="15" fill="rgb(207,88,22)"/><text x="284.00" y="1134.50"></text></g><g><title>0x7fa5e41ed258 (libdl-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1140" width="2" height="15" fill="rgb(222,142,17)"/><text x="284.00" y="1150.50"></text></g><g><title>0x7fa5e423ad7a (ld-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1156" width="2" height="15" fill="rgb(223,196,38)"/><text x="284.00" y="1166.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1172" width="2" height="15" fill="rgb(209,55,1)"/><text x="284.00" y="1182.50"></text></g><g><title>0x7fa5e423b345 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1188" width="2" height="15" fill="rgb(230,22,50)"/><text x="284.00" y="1198.50"></text></g><g><title>0x7fa5e4233fec (ld-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1204" width="2" height="15" fill="rgb(213,150,48)"/><text x="284.00" y="1214.50"></text></g><g><title>0x7fa5e4232432 (ld-2.29.so) (1 samples, 0.12%)</title><rect x="281" y="1220" width="2" height="15" fill="rgb(244,68,13)"/><text x="284.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.12%)</title><rect x="283" y="436" width="1" height="15" fill="rgb(246,14,5)"/><text x="286.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="452" width="1" height="15" fill="rgb(207,73,30)"/><text x="286.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="468" width="1" height="15" fill="rgb(247,68,31)"/><text x="286.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="484" width="1" height="15" fill="rgb(218,179,28)"/><text x="286.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="500" width="1" height="15" fill="rgb(240,46,11)"/><text x="286.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="516" width="1" height="15" fill="rgb(206,197,16)"/><text x="286.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.12%)</title><rect x="283" y="532" width="1" height="15" fill="rgb(219,183,47)"/><text x="286.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="548" width="1" height="15" fill="rgb(223,93,24)"/><text x="286.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="564" width="1" height="15" fill="rgb(213,153,15)"/><text x="286.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="580" width="1" height="15" fill="rgb(253,154,46)"/><text x="286.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="596" width="1" height="15" fill="rgb(225,182,10)"/><text x="286.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="612" width="1" height="15" fill="rgb(239,207,6)"/><text x="286.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.12%)</title><rect x="283" y="628" width="1" height="15" fill="rgb(235,170,16)"/><text x="286.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="644" width="1" height="15" fill="rgb(226,218,5)"/><text x="286.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="660" width="1" height="15" fill="rgb(211,156,41)"/><text x="286.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="676" width="1" height="15" fill="rgb(217,207,15)"/><text x="286.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="692" width="1" height="15" fill="rgb(208,202,4)"/><text x="286.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="708" width="1" height="15" fill="rgb(221,131,14)"/><text x="286.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.12%)</title><rect x="283" y="724" width="1" height="15" fill="rgb(230,132,17)"/><text x="286.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="740" width="1" height="15" fill="rgb(236,14,37)"/><text x="286.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="756" width="1" height="15" fill="rgb(245,133,25)"/><text x="286.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="772" width="1" height="15" fill="rgb(213,216,41)"/><text x="286.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="788" width="1" height="15" fill="rgb(212,73,36)"/><text x="286.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="804" width="1" height="15" fill="rgb(253,88,12)"/><text x="286.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.12%)</title><rect x="283" y="820" width="1" height="15" fill="rgb(210,92,19)"/><text x="286.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="836" width="1" height="15" fill="rgb(244,114,45)"/><text x="286.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="852" width="1" height="15" fill="rgb(231,196,34)"/><text x="286.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="868" width="1" height="15" fill="rgb(229,173,53)"/><text x="286.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="884" width="1" height="15" fill="rgb(236,209,33)"/><text x="286.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="900" width="1" height="15" fill="rgb(248,89,52)"/><text x="286.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.12%)</title><rect x="283" y="916" width="1" height="15" fill="rgb(225,37,16)"/><text x="286.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="283" y="932" width="1" height="15" fill="rgb(222,76,17)"/><text x="286.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="283" y="948" width="1" height="15" fill="rgb(212,171,34)"/><text x="286.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="283" y="964" width="1" height="15" fill="rgb(211,175,44)"/><text x="286.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="283" y="980" width="1" height="15" fill="rgb(206,224,40)"/><text x="286.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="283" y="996" width="1" height="15" fill="rgb(253,188,31)"/><text x="286.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:8493) (1 samples, 0.12%)</title><rect x="283" y="1012" width="1" height="15" fill="rgb(241,13,18)"/><text x="286.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.12%)</title><rect x="283" y="1028" width="1" height="15" fill="rgb(219,105,6)"/><text x="286.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:745) (1 samples, 0.12%)</title><rect x="283" y="1044" width="1" height="15" fill="rgb(233,204,47)"/><text x="286.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1464) (1 samples, 0.12%)</title><rect x="283" y="1060" width="1" height="15" fill="rgb(245,146,46)"/><text x="286.00" y="1070.50"></text></g><g><title>_get_opstr (pandas/core/ops/__init__.py:284) (1 samples, 0.12%)</title><rect x="283" y="1076" width="1" height="15" fill="rgb(243,54,46)"/><text x="286.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.12%)</title><rect x="284" y="1460" width="1" height="15" fill="rgb(253,184,42)"/><text x="287.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.12%)</title><rect x="284" y="1476" width="1" height="15" fill="rgb(238,63,33)"/><text x="287.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.12%)</title><rect x="284" y="1492" width="1" height="15" fill="rgb(221,14,31)"/><text x="287.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.12%)</title><rect x="284" y="1508" width="1" height="15" fill="rgb(212,214,16)"/><text x="287.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.12%)</title><rect x="284" y="1524" width="1" height="15" fill="rgb(205,88,43)"/><text x="287.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.12%)</title><rect x="284" y="1540" width="1" height="15" fill="rgb(228,151,53)"/><text x="287.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.12%)</title><rect x="284" y="1556" width="1" height="15" fill="rgb(249,116,30)"/><text x="287.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:125) (1 samples, 0.12%)</title><rect x="284" y="1572" width="1" height="15" fill="rgb(212,13,47)"/><text x="287.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:4) (12 samples, 1.38%)</title><rect x="271" y="52" width="16" height="15" fill="rgb(215,195,32)"/><text x="274.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.38%)</title><rect x="271" y="68" width="16" height="15" fill="rgb(228,213,0)"/><text x="274.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.38%)</title><rect x="271" y="84" width="16" height="15" fill="rgb(227,3,48)"/><text x="274.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.38%)</title><rect x="271" y="100" width="16" height="15" fill="rgb(233,37,6)"/><text x="274.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.38%)</title><rect x="271" y="116" width="16" height="15" fill="rgb(237,29,54)"/><text x="274.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.38%)</title><rect x="271" y="132" width="16" height="15" fill="rgb(222,127,18)"/><text x="274.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_b_cl_probabilityTrue_kernelpoly.py:7) (6 samples, 0.69%)</title><rect x="279" y="148" width="8" height="15" fill="rgb(243,147,54)"/><text x="282.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.69%)</title><rect x="279" y="164" width="8" height="15" fill="rgb(218,4,36)"/><text x="282.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.69%)</title><rect x="279" y="180" width="8" height="15" fill="rgb(206,155,6)"/><text x="282.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.69%)</title><rect x="279" y="196" width="8" height="15" fill="rgb(207,229,2)"/><text x="282.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.69%)</title><rect x="279" y="212" width="8" height="15" fill="rgb(225,145,50)"/><text x="282.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.69%)</title><rect x="279" y="228" width="8" height="15" fill="rgb(253,156,3)"/><text x="282.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.46%)</title><rect x="281" y="244" width="6" height="15" fill="rgb(243,68,28)"/><text x="284.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.46%)</title><rect x="281" y="260" width="6" height="15" fill="rgb(252,74,29)"/><text x="284.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.46%)</title><rect x="281" y="276" width="6" height="15" fill="rgb(233,75,53)"/><text x="284.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.46%)</title><rect x="281" y="292" width="6" height="15" fill="rgb(213,134,33)"/><text x="284.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.46%)</title><rect x="281" y="308" width="6" height="15" fill="rgb(228,168,53)"/><text x="284.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.46%)</title><rect x="281" y="324" width="6" height="15" fill="rgb(234,71,19)"/><text x="284.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.35%)</title><rect x="283" y="340" width="4" height="15" fill="rgb(217,60,33)"/><text x="286.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.35%)</title><rect x="283" y="356" width="4" height="15" fill="rgb(208,148,38)"/><text x="286.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.35%)</title><rect x="283" y="372" width="4" height="15" fill="rgb(252,152,13)"/><text x="286.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.35%)</title><rect x="283" y="388" width="4" height="15" fill="rgb(254,147,7)"/><text x="286.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.35%)</title><rect x="283" y="404" width="4" height="15" fill="rgb(213,115,0)"/><text x="286.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.35%)</title><rect x="283" y="420" width="4" height="15" fill="rgb(229,102,26)"/><text x="286.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.23%)</title><rect x="284" y="436" width="3" height="15" fill="rgb(215,77,48)"/><text x="287.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="452" width="3" height="15" fill="rgb(215,128,50)"/><text x="287.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.23%)</title><rect x="284" y="468" width="3" height="15" fill="rgb(228,81,8)"/><text x="287.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="484" width="3" height="15" fill="rgb(216,191,48)"/><text x="287.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="500" width="3" height="15" fill="rgb(229,147,35)"/><text x="287.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="516" width="3" height="15" fill="rgb(220,80,18)"/><text x="287.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="532" width="3" height="15" fill="rgb(247,186,48)"/><text x="287.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="548" width="3" height="15" fill="rgb(236,12,21)"/><text x="287.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="564" width="3" height="15" fill="rgb(230,26,48)"/><text x="287.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.23%)</title><rect x="284" y="580" width="3" height="15" fill="rgb(214,61,53)"/><text x="287.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="596" width="3" height="15" fill="rgb(250,21,54)"/><text x="287.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="612" width="3" height="15" fill="rgb(220,221,2)"/><text x="287.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="628" width="3" height="15" fill="rgb(236,146,4)"/><text x="287.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="644" width="3" height="15" fill="rgb(219,201,36)"/><text x="287.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="660" width="3" height="15" fill="rgb(220,174,43)"/><text x="287.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.23%)</title><rect x="284" y="676" width="3" height="15" fill="rgb(223,186,28)"/><text x="287.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="692" width="3" height="15" fill="rgb(249,37,19)"/><text x="287.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="708" width="3" height="15" fill="rgb(247,19,2)"/><text x="287.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="724" width="3" height="15" fill="rgb(244,106,5)"/><text x="287.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="740" width="3" height="15" fill="rgb(210,194,0)"/><text x="287.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="756" width="3" height="15" fill="rgb(252,216,20)"/><text x="287.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.23%)</title><rect x="284" y="772" width="3" height="15" fill="rgb(230,202,52)"/><text x="287.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="788" width="3" height="15" fill="rgb(226,221,29)"/><text x="287.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="804" width="3" height="15" fill="rgb(245,81,5)"/><text x="287.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="820" width="3" height="15" fill="rgb(241,224,8)"/><text x="287.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="836" width="3" height="15" fill="rgb(253,22,4)"/><text x="287.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="852" width="3" height="15" fill="rgb(235,35,25)"/><text x="287.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.23%)</title><rect x="284" y="868" width="3" height="15" fill="rgb(252,12,47)"/><text x="287.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="884" width="3" height="15" fill="rgb(231,111,29)"/><text x="287.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.23%)</title><rect x="284" y="900" width="3" height="15" fill="rgb(230,135,5)"/><text x="287.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="916" width="3" height="15" fill="rgb(220,34,51)"/><text x="287.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="932" width="3" height="15" fill="rgb(216,207,8)"/><text x="287.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="948" width="3" height="15" fill="rgb(243,214,47)"/><text x="287.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="964" width="3" height="15" fill="rgb(207,40,21)"/><text x="287.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="980" width="3" height="15" fill="rgb(253,225,1)"/><text x="287.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="996" width="3" height="15" fill="rgb(229,138,36)"/><text x="287.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.23%)</title><rect x="284" y="1012" width="3" height="15" fill="rgb(229,15,43)"/><text x="287.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="1028" width="3" height="15" fill="rgb(252,32,27)"/><text x="287.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="1044" width="3" height="15" fill="rgb(247,16,35)"/><text x="287.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="1060" width="3" height="15" fill="rgb(254,130,34)"/><text x="287.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="1076" width="3" height="15" fill="rgb(235,123,37)"/><text x="287.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1092" width="3" height="15" fill="rgb(216,133,29)"/><text x="287.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.23%)</title><rect x="284" y="1108" width="3" height="15" fill="rgb(207,30,8)"/><text x="287.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="284" y="1124" width="3" height="15" fill="rgb(238,20,54)"/><text x="287.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1140" width="3" height="15" fill="rgb(244,34,23)"/><text x="287.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="1156" width="3" height="15" fill="rgb(216,74,31)"/><text x="287.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="1172" width="3" height="15" fill="rgb(248,218,2)"/><text x="287.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="1188" width="3" height="15" fill="rgb(214,229,41)"/><text x="287.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="1204" width="3" height="15" fill="rgb(225,84,40)"/><text x="287.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1220" width="3" height="15" fill="rgb(238,210,31)"/><text x="287.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.23%)</title><rect x="284" y="1236" width="3" height="15" fill="rgb(242,7,13)"/><text x="287.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.23%)</title><rect x="284" y="1252" width="3" height="15" fill="rgb(234,46,44)"/><text x="287.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1268" width="3" height="15" fill="rgb(254,221,41)"/><text x="287.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="1284" width="3" height="15" fill="rgb(228,174,3)"/><text x="287.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="1300" width="3" height="15" fill="rgb(210,187,42)"/><text x="287.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="1316" width="3" height="15" fill="rgb(232,174,39)"/><text x="287.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="1332" width="3" height="15" fill="rgb(235,69,27)"/><text x="287.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1348" width="3" height="15" fill="rgb(240,80,37)"/><text x="287.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.23%)</title><rect x="284" y="1364" width="3" height="15" fill="rgb(250,81,21)"/><text x="287.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.23%)</title><rect x="284" y="1380" width="3" height="15" fill="rgb(207,159,15)"/><text x="287.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.23%)</title><rect x="284" y="1396" width="3" height="15" fill="rgb(223,130,52)"/><text x="287.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.23%)</title><rect x="284" y="1412" width="3" height="15" fill="rgb(228,224,9)"/><text x="287.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.23%)</title><rect x="284" y="1428" width="3" height="15" fill="rgb(212,182,14)"/><text x="287.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.23%)</title><rect x="284" y="1444" width="3" height="15" fill="rgb(238,225,5)"/><text x="287.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.12%)</title><rect x="285" y="1460" width="2" height="15" fill="rgb(219,188,47)"/><text x="288.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="285" y="1476" width="2" height="15" fill="rgb(207,137,6)"/><text x="288.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="285" y="1492" width="2" height="15" fill="rgb(246,41,35)"/><text x="288.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="285" y="1508" width="2" height="15" fill="rgb(213,166,54)"/><text x="288.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="285" y="1524" width="2" height="15" fill="rgb(208,61,14)"/><text x="288.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="285" y="1540" width="2" height="15" fill="rgb(252,29,2)"/><text x="288.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.12%)</title><rect x="285" y="1556" width="2" height="15" fill="rgb(246,42,13)"/><text x="288.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.12%)</title><rect x="285" y="1572" width="2" height="15" fill="rgb(252,50,15)"/><text x="288.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="285" y="1588" width="2" height="15" fill="rgb(236,51,44)"/><text x="288.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="285" y="1604" width="2" height="15" fill="rgb(210,86,15)"/><text x="288.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="285" y="1620" width="2" height="15" fill="rgb(214,21,40)"/><text x="288.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="285" y="1636" width="2" height="15" fill="rgb(253,17,43)"/><text x="288.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="285" y="1652" width="2" height="15" fill="rgb(219,7,50)"/><text x="288.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.12%)</title><rect x="285" y="1668" width="2" height="15" fill="rgb(215,30,48)"/><text x="288.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="285" y="1684" width="2" height="15" fill="rgb(243,67,0)"/><text x="288.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="285" y="1700" width="2" height="15" fill="rgb(239,204,15)"/><text x="288.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="285" y="1716" width="2" height="15" fill="rgb(223,8,9)"/><text x="288.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="285" y="1732" width="2" height="15" fill="rgb(225,143,43)"/><text x="288.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="285" y="1748" width="2" height="15" fill="rgb(233,78,25)"/><text x="288.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.12%)</title><rect x="285" y="1764" width="2" height="15" fill="rgb(205,157,7)"/><text x="288.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.12%)</title><rect x="285" y="1780" width="2" height="15" fill="rgb(249,76,16)"/><text x="288.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="285" y="1796" width="2" height="15" fill="rgb(209,42,20)"/><text x="288.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.12%)</title><rect x="285" y="1812" width="2" height="15" fill="rgb(213,191,23)"/><text x="288.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.12%)</title><rect x="285" y="1828" width="2" height="15" fill="rgb(241,20,4)"/><text x="288.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.12%)</title><rect x="285" y="1844" width="2" height="15" fill="rgb(208,223,3)"/><text x="288.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.12%)</title><rect x="285" y="1860" width="2" height="15" fill="rgb(245,82,36)"/><text x="288.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.12%)</title><rect x="285" y="1876" width="2" height="15" fill="rgb(239,146,13)"/><text x="288.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:800) (1 samples, 0.12%)</title><rect x="285" y="1892" width="2" height="15" fill="rgb(244,68,22)"/><text x="288.00" y="1902.50"></text></g><g><title>__new__ (jinja2/nodes.py:67) (1 samples, 0.12%)</title><rect x="285" y="1908" width="2" height="15" fill="rgb(210,229,42)"/><text x="288.00" y="1918.50"></text></g><g><title>0x7fa5a50d4c29 (?) (1 samples, 0.12%)</title><rect x="287" y="244" width="1" height="15" fill="rgb(242,216,18)"/><text x="290.00" y="254.50"></text></g><g><title>0x7fa5a50dbd9e (?) (1 samples, 0.12%)</title><rect x="287" y="260" width="1" height="15" fill="rgb(222,125,36)"/><text x="290.00" y="270.50"></text></g><g><title>0x7fa5a50dbc56 (?) (1 samples, 0.12%)</title><rect x="287" y="276" width="1" height="15" fill="rgb(230,67,29)"/><text x="290.00" y="286.50"></text></g><g><title>0x7fa5a50e1ac7 (?) (1 samples, 0.12%)</title><rect x="287" y="292" width="1" height="15" fill="rgb(235,57,29)"/><text x="290.00" y="302.50"></text></g><g><title>0x7fa5a50e0c6b (?) (1 samples, 0.12%)</title><rect x="287" y="308" width="1" height="15" fill="rgb(235,209,2)"/><text x="290.00" y="318.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (1 samples, 0.12%)</title><rect x="288" y="452" width="2" height="15" fill="rgb(211,164,30)"/><text x="291.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (1 samples, 0.12%)</title><rect x="288" y="468" width="2" height="15" fill="rgb(243,116,37)"/><text x="291.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="288" y="484" width="2" height="15" fill="rgb(251,72,12)"/><text x="291.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="288" y="500" width="2" height="15" fill="rgb(229,119,32)"/><text x="291.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="288" y="516" width="2" height="15" fill="rgb(218,189,33)"/><text x="291.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="288" y="532" width="2" height="15" fill="rgb(226,53,37)"/><text x="291.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="288" y="548" width="2" height="15" fill="rgb(237,89,9)"/><text x="291.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (1 samples, 0.12%)</title><rect x="290" y="452" width="1" height="15" fill="rgb(213,44,25)"/><text x="293.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (1 samples, 0.12%)</title><rect x="291" y="452" width="1" height="15" fill="rgb(232,75,17)"/><text x="294.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.12%)</title><rect x="291" y="468" width="1" height="15" fill="rgb(245,132,27)"/><text x="294.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.12%)</title><rect x="291" y="484" width="1" height="15" fill="rgb(231,25,13)"/><text x="294.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="291" y="500" width="1" height="15" fill="rgb(254,132,2)"/><text x="294.00" y="510.50"></text></g><g><title>0x7fa5e3f6597c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="291" y="516" width="1" height="15" fill="rgb(216,177,52)"/><text x="294.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.12%)</title><rect x="292" y="452" width="2" height="15" fill="rgb(231,13,54)"/><text x="295.00" y="462.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (1 samples, 0.12%)</title><rect x="294" y="484" width="1" height="15" fill="rgb(237,39,37)"/><text x="297.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="294" y="500" width="1" height="15" fill="rgb(252,107,4)"/><text x="297.00" y="510.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (7 samples, 0.81%)</title><rect x="287" y="100" width="9" height="15" fill="rgb(242,206,10)"/><text x="290.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 0.81%)</title><rect x="287" y="116" width="9" height="15" fill="rgb(254,166,11)"/><text x="290.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (7 samples, 0.81%)</title><rect x="287" y="132" width="9" height="15" fill="rgb(254,56,6)"/><text x="290.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (7 samples, 0.81%)</title><rect x="287" y="148" width="9" height="15" fill="rgb(250,185,26)"/><text x="290.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (7 samples, 0.81%)</title><rect x="287" y="164" width="9" height="15" fill="rgb(249,220,17)"/><text x="290.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (7 samples, 0.81%)</title><rect x="287" y="180" width="9" height="15" fill="rgb(216,150,43)"/><text x="290.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (7 samples, 0.81%)</title><rect x="287" y="196" width="9" height="15" fill="rgb(213,4,46)"/><text x="290.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 0.81%)</title><rect x="287" y="212" width="9" height="15" fill="rgb(251,169,23)"/><text x="290.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (7 samples, 0.81%)</title><rect x="287" y="228" width="9" height="15" fill="rgb(208,47,16)"/><text x="290.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (6 samples, 0.69%)</title><rect x="288" y="244" width="8" height="15" fill="rgb(225,59,35)"/><text x="291.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (6 samples, 0.69%)</title><rect x="288" y="260" width="8" height="15" fill="rgb(213,151,18)"/><text x="291.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (6 samples, 0.69%)</title><rect x="288" y="276" width="8" height="15" fill="rgb(247,201,43)"/><text x="291.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (6 samples, 0.69%)</title><rect x="288" y="292" width="8" height="15" fill="rgb(250,61,44)"/><text x="291.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (6 samples, 0.69%)</title><rect x="288" y="308" width="8" height="15" fill="rgb(249,39,48)"/><text x="291.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (6 samples, 0.69%)</title><rect x="288" y="324" width="8" height="15" fill="rgb(216,136,14)"/><text x="291.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (6 samples, 0.69%)</title><rect x="288" y="340" width="8" height="15" fill="rgb(227,144,8)"/><text x="291.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (6 samples, 0.69%)</title><rect x="288" y="356" width="8" height="15" fill="rgb(243,141,12)"/><text x="291.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (6 samples, 0.69%)</title><rect x="288" y="372" width="8" height="15" fill="rgb(213,0,16)"/><text x="291.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (6 samples, 0.69%)</title><rect x="288" y="388" width="8" height="15" fill="rgb(234,186,35)"/><text x="291.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (6 samples, 0.69%)</title><rect x="288" y="404" width="8" height="15" fill="rgb(223,220,25)"/><text x="291.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (6 samples, 0.69%)</title><rect x="288" y="420" width="8" height="15" fill="rgb(223,200,13)"/><text x="291.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (6 samples, 0.69%)</title><rect x="288" y="436" width="8" height="15" fill="rgb(242,28,3)"/><text x="291.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (2 samples, 0.23%)</title><rect x="294" y="452" width="2" height="15" fill="rgb(222,222,1)"/><text x="297.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.23%)</title><rect x="294" y="468" width="2" height="15" fill="rgb(240,44,36)"/><text x="297.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (1 samples, 0.12%)</title><rect x="295" y="484" width="1" height="15" fill="rgb(250,159,36)"/><text x="298.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (1 samples, 0.12%)</title><rect x="295" y="500" width="1" height="15" fill="rgb(238,162,14)"/><text x="298.00" y="510.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="295" y="516" width="1" height="15" fill="rgb(215,193,25)"/><text x="298.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.12%)</title><rect x="298" y="196" width="1" height="15" fill="rgb(208,71,40)"/><text x="301.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.12%)</title><rect x="298" y="212" width="1" height="15" fill="rgb(214,7,7)"/><text x="301.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.12%)</title><rect x="298" y="228" width="1" height="15" fill="rgb(222,151,43)"/><text x="301.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.12%)</title><rect x="298" y="244" width="1" height="15" fill="rgb(248,124,44)"/><text x="301.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.12%)</title><rect x="298" y="260" width="1" height="15" fill="rgb(214,76,2)"/><text x="301.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.12%)</title><rect x="298" y="276" width="1" height="15" fill="rgb(220,100,1)"/><text x="301.00" y="286.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.12%)</title><rect x="299" y="276" width="1" height="15" fill="rgb(213,121,19)"/><text x="302.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.12%)</title><rect x="299" y="292" width="1" height="15" fill="rgb(221,113,50)"/><text x="302.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.12%)</title><rect x="299" y="308" width="1" height="15" fill="rgb(238,1,20)"/><text x="302.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.12%)</title><rect x="299" y="324" width="1" height="15" fill="rgb(247,163,33)"/><text x="302.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.12%)</title><rect x="299" y="340" width="1" height="15" fill="rgb(234,136,5)"/><text x="302.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.12%)</title><rect x="299" y="356" width="1" height="15" fill="rgb(244,186,49)"/><text x="302.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.12%)</title><rect x="299" y="372" width="1" height="15" fill="rgb(210,50,0)"/><text x="302.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.12%)</title><rect x="299" y="388" width="1" height="15" fill="rgb(236,4,1)"/><text x="302.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.12%)</title><rect x="299" y="404" width="1" height="15" fill="rgb(209,85,8)"/><text x="302.00" y="414.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.12%)</title><rect x="300" y="276" width="2" height="15" fill="rgb(224,102,25)"/><text x="303.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.12%)</title><rect x="300" y="292" width="2" height="15" fill="rgb(212,72,42)"/><text x="303.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.12%)</title><rect x="300" y="308" width="2" height="15" fill="rgb(225,14,33)"/><text x="303.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.12%)</title><rect x="300" y="324" width="2" height="15" fill="rgb(233,191,12)"/><text x="303.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.12%)</title><rect x="300" y="340" width="2" height="15" fill="rgb(231,182,8)"/><text x="303.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.12%)</title><rect x="300" y="356" width="2" height="15" fill="rgb(219,184,39)"/><text x="303.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.12%)</title><rect x="300" y="372" width="2" height="15" fill="rgb(210,185,18)"/><text x="303.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.12%)</title><rect x="300" y="388" width="2" height="15" fill="rgb(229,209,11)"/><text x="303.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.12%)</title><rect x="300" y="404" width="2" height="15" fill="rgb(209,181,30)"/><text x="303.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.12%)</title><rect x="300" y="420" width="2" height="15" fill="rgb(217,22,29)"/><text x="303.00" y="430.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.12%)</title><rect x="300" y="436" width="2" height="15" fill="rgb(253,128,22)"/><text x="303.00" y="446.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.12%)</title><rect x="300" y="452" width="2" height="15" fill="rgb(240,71,51)"/><text x="303.00" y="462.50"></text></g><g><title>0x7fa5e3f65bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="302" y="468" width="1" height="15" fill="rgb(233,163,16)"/><text x="305.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (2 samples, 0.23%)</title><rect x="302" y="452" width="3" height="15" fill="rgb(209,132,9)"/><text x="305.00" y="462.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="303" y="468" width="2" height="15" fill="rgb(254,20,2)"/><text x="306.00" y="478.50"></text></g><g><title>0x7fa5e3f65a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="305" y="484" width="1" height="15" fill="rgb(236,32,38)"/><text x="308.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:390) (2 samples, 0.23%)</title><rect x="305" y="452" width="2" height="15" fill="rgb(254,62,0)"/><text x="308.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.23%)</title><rect x="305" y="468" width="2" height="15" fill="rgb(213,150,31)"/><text x="308.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="306" y="484" width="1" height="15" fill="rgb(215,217,38)"/><text x="309.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:391) (1 samples, 0.12%)</title><rect x="307" y="452" width="2" height="15" fill="rgb(216,74,52)"/><text x="310.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h:259) (1 samples, 0.12%)</title><rect x="307" y="468" width="2" height="15" fill="rgb(235,12,20)"/><text x="310.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h:125) (1 samples, 0.12%)</title><rect x="307" y="484" width="2" height="15" fill="rgb(206,189,9)"/><text x="310.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h:87) (1 samples, 0.12%)</title><rect x="307" y="500" width="2" height="15" fill="rgb(209,78,30)"/><text x="310.00" y="510.50"></text></g><g><title>0x7fa5a50c4810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="310" y="468" width="1" height="15" fill="rgb(224,141,6)"/><text x="313.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="311" y="468" width="2" height="15" fill="rgb(224,225,13)"/><text x="314.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (5 samples, 0.58%)</title><rect x="313" y="468" width="6" height="15" fill="rgb(217,75,34)"/><text x="316.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (5 samples, 0.58%)</title><rect x="313" y="484" width="6" height="15" fill="rgb(247,50,42)"/><text x="316.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (5 samples, 0.58%)</title><rect x="313" y="500" width="6" height="15" fill="rgb(232,7,51)"/><text x="316.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (5 samples, 0.58%)</title><rect x="313" y="516" width="6" height="15" fill="rgb(213,204,11)"/><text x="316.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.58%)</title><rect x="313" y="532" width="6" height="15" fill="rgb(241,206,18)"/><text x="316.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.46%)</title><rect x="314" y="548" width="5" height="15" fill="rgb(213,110,15)"/><text x="317.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.12%)</title><rect x="319" y="468" width="2" height="15" fill="rgb(214,39,46)"/><text x="322.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.12%)</title><rect x="319" y="484" width="2" height="15" fill="rgb(211,120,48)"/><text x="322.00" y="494.50"></text></g><g><title>0x7fa5a50c46c0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="321" y="484" width="1" height="15" fill="rgb(243,149,2)"/><text x="324.00" y="494.50"></text></g><g><title>0x7fa5e3f85d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="322" y="484" width="2" height="15" fill="rgb(223,143,18)"/><text x="325.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (4 samples, 0.46%)</title><rect x="321" y="468" width="5" height="15" fill="rgb(241,164,22)"/><text x="324.00" y="478.50"></text></g><g><title>0x7fa5e3f85d62 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="324" y="484" width="2" height="15" fill="rgb(213,219,11)"/><text x="327.00" y="494.50"></text></g><g><title>0x7fa5a50c42a0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="326" y="484" width="2" height="15" fill="rgb(250,145,13)"/><text x="329.00" y="494.50"></text></g><g><title>0x7fa5e3f65965 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="328" y="484" width="1" height="15" fill="rgb(219,50,35)"/><text x="331.00" y="494.50"></text></g><g><title>0x7fa5e3f65991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="329" y="484" width="1" height="15" fill="rgb(240,120,45)"/><text x="332.00" y="494.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="330" y="484" width="2" height="15" fill="rgb(231,121,46)"/><text x="333.00" y="494.50"></text></g><g><title>0x7fa5e3f65bc0 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="332" y="484" width="1" height="15" fill="rgb(243,9,27)"/><text x="335.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 0.92%)</title><rect x="326" y="468" width="11" height="15" fill="rgb(213,149,50)"/><text x="329.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.35%)</title><rect x="333" y="484" width="4" height="15" fill="rgb(215,14,21)"/><text x="336.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (22 samples, 2.53%)</title><rect x="309" y="452" width="29" height="15" fill="rgb(219,112,33)"/><text x="312.00" y="462.50">Ru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:443) (1 samples, 0.12%)</title><rect x="337" y="468" width="1" height="15" fill="rgb(216,41,20)"/><text x="340.00" y="478.50"></text></g><g><title>0x7fa5a50c4440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="340" y="468" width="1" height="15" fill="rgb(252,143,46)"/><text x="343.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (5 samples, 0.58%)</title><rect x="341" y="468" width="7" height="15" fill="rgb(218,66,23)"/><text x="344.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:272) (1 samples, 0.12%)</title><rect x="348" y="468" width="1" height="15" fill="rgb(247,69,47)"/><text x="351.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.12%)</title><rect x="349" y="468" width="2" height="15" fill="rgb(222,147,39)"/><text x="352.00" y="478.50"></text></g><g><title>0x7fa5a50c3e60 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="352" y="484" width="1" height="15" fill="rgb(209,21,15)"/><text x="355.00" y="494.50"></text></g><g><title>0x7fa5a50c42b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="353" y="484" width="3" height="15" fill="rgb(205,208,6)"/><text x="356.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (4 samples, 0.46%)</title><rect x="356" y="484" width="6" height="15" fill="rgb(215,156,20)"/><text x="359.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:49) (1 samples, 0.12%)</title><rect x="362" y="484" width="1" height="15" fill="rgb(244,154,32)"/><text x="365.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:50) (3 samples, 0.35%)</title><rect x="363" y="484" width="4" height="15" fill="rgb(235,175,42)"/><text x="366.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (3 samples, 0.35%)</title><rect x="367" y="484" width="4" height="15" fill="rgb(230,9,23)"/><text x="370.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (8 samples, 0.92%)</title><rect x="371" y="484" width="11" height="15" fill="rgb(218,197,30)"/><text x="374.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (2 samples, 0.23%)</title><rect x="382" y="484" width="3" height="15" fill="rgb(206,93,21)"/><text x="385.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:276) (26 samples, 3.00%)</title><rect x="351" y="468" width="35" height="15" fill="rgb(225,38,34)"/><text x="354.00" y="478.50">Ru..</text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:116) (1 samples, 0.12%)</title><rect x="385" y="484" width="1" height="15" fill="rgb(238,47,18)"/><text x="388.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:277) (3 samples, 0.35%)</title><rect x="386" y="468" width="4" height="15" fill="rgb(205,153,47)"/><text x="389.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:279) (2 samples, 0.23%)</title><rect x="390" y="468" width="3" height="15" fill="rgb(250,187,52)"/><text x="393.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:280) (9 samples, 1.04%)</title><rect x="393" y="468" width="12" height="15" fill="rgb(214,220,12)"/><text x="396.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (51 samples, 5.88%)</title><rect x="338" y="452" width="70" height="15" fill="rgb(251,88,31)"/><text x="341.00" y="462.50">Runtime..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (2 samples, 0.23%)</title><rect x="405" y="468" width="3" height="15" fill="rgb(254,72,10)"/><text x="408.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:409) (3 samples, 0.35%)</title><rect x="408" y="452" width="4" height="15" fill="rgb(208,208,51)"/><text x="411.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:918) (1 samples, 0.12%)</title><rect x="412" y="468" width="1" height="15" fill="rgb(222,128,12)"/><text x="415.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h:475) (1 samples, 0.12%)</title><rect x="412" y="484" width="1" height="15" fill="rgb(226,179,20)"/><text x="415.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h:120) (1 samples, 0.12%)</title><rect x="412" y="500" width="1" height="15" fill="rgb(230,207,30)"/><text x="415.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (2 samples, 0.23%)</title><rect x="412" y="452" width="3" height="15" fill="rgb(220,61,32)"/><text x="415.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:924) (1 samples, 0.12%)</title><rect x="413" y="468" width="2" height="15" fill="rgb(239,3,42)"/><text x="416.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:452) (1 samples, 0.12%)</title><rect x="415" y="500" width="1" height="15" fill="rgb(252,220,38)"/><text x="418.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.12%)</title><rect x="416" y="500" width="1" height="15" fill="rgb(243,96,49)"/><text x="419.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.12%)</title><rect x="416" y="516" width="1" height="15" fill="rgb(244,195,38)"/><text x="419.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.12%)</title><rect x="416" y="532" width="1" height="15" fill="rgb(231,159,17)"/><text x="419.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.12%)</title><rect x="416" y="548" width="1" height="15" fill="rgb(215,218,29)"/><text x="419.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="416" y="564" width="1" height="15" fill="rgb(239,170,42)"/><text x="419.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="416" y="580" width="1" height="15" fill="rgb(245,176,6)"/><text x="419.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (4 samples, 0.46%)</title><rect x="415" y="452" width="5" height="15" fill="rgb(221,73,34)"/><text x="418.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (4 samples, 0.46%)</title><rect x="415" y="468" width="5" height="15" fill="rgb(225,45,52)"/><text x="418.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (4 samples, 0.46%)</title><rect x="415" y="484" width="5" height="15" fill="rgb(217,129,52)"/><text x="418.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:496) (2 samples, 0.23%)</title><rect x="417" y="500" width="3" height="15" fill="rgb(223,168,21)"/><text x="420.00" y="510.50"></text></g><g><title>std::__uninitialized_fill_n_a&lt;long*, unsigned long, long, long&gt; (stl_uninitialized.h:358) (1 samples, 0.12%)</title><rect x="419" y="516" width="1" height="15" fill="rgb(231,218,44)"/><text x="422.00" y="526.50"></text></g><g><title>std::uninitialized_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h:247) (1 samples, 0.12%)</title><rect x="419" y="532" width="1" height="15" fill="rgb(223,93,24)"/><text x="422.00" y="542.50"></text></g><g><title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h:220) (1 samples, 0.12%)</title><rect x="419" y="548" width="1" height="15" fill="rgb(218,213,42)"/><text x="422.00" y="558.50"></text></g><g><title>std::fill_n&lt;long*, unsigned long, long&gt; (stl_algobase.h:789) (1 samples, 0.12%)</title><rect x="419" y="564" width="1" height="15" fill="rgb(236,119,1)"/><text x="422.00" y="574.50"></text></g><g><title>std::__fill_n_a&lt;long*, unsigned long, long&gt; (stl_algobase.h:752) (1 samples, 0.12%)</title><rect x="419" y="580" width="1" height="15" fill="rgb(241,191,51)"/><text x="422.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:414) (2 samples, 0.23%)</title><rect x="420" y="452" width="3" height="15" fill="rgb(215,50,12)"/><text x="423.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (3 samples, 0.35%)</title><rect x="423" y="452" width="4" height="15" fill="rgb(240,29,39)"/><text x="426.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.12%)</title><rect x="427" y="500" width="1" height="15" fill="rgb(216,67,43)"/><text x="430.00" y="510.50"></text></g><g><title>0x7fa5a50c42d0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.23%)</title><rect x="428" y="564" width="3" height="15" fill="rgb(253,125,14)"/><text x="431.00" y="574.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (3 samples, 0.35%)</title><rect x="428" y="500" width="4" height="15" fill="rgb(210,48,17)"/><text x="431.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (3 samples, 0.35%)</title><rect x="428" y="516" width="4" height="15" fill="rgb(223,221,8)"/><text x="431.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (3 samples, 0.35%)</title><rect x="428" y="532" width="4" height="15" fill="rgb(207,208,40)"/><text x="431.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (3 samples, 0.35%)</title><rect x="428" y="548" width="4" height="15" fill="rgb(228,4,29)"/><text x="431.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="431" y="564" width="1" height="15" fill="rgb(236,199,5)"/><text x="434.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="431" y="580" width="1" height="15" fill="rgb(218,170,52)"/><text x="434.00" y="590.50"></text></g><g><title>0x7fa5e3f6597c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="432" y="516" width="2" height="15" fill="rgb(213,219,50)"/><text x="435.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.23%)</title><rect x="432" y="500" width="3" height="15" fill="rgb(228,170,24)"/><text x="435.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="434" y="516" width="1" height="15" fill="rgb(225,164,20)"/><text x="437.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (7 samples, 0.81%)</title><rect x="427" y="452" width="9" height="15" fill="rgb(212,156,34)"/><text x="430.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (7 samples, 0.81%)</title><rect x="427" y="468" width="9" height="15" fill="rgb(206,55,20)"/><text x="430.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (7 samples, 0.81%)</title><rect x="427" y="484" width="9" height="15" fill="rgb(225,77,25)"/><text x="430.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.12%)</title><rect x="435" y="500" width="1" height="15" fill="rgb(243,41,7)"/><text x="438.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (2 samples, 0.23%)</title><rect x="436" y="452" width="3" height="15" fill="rgb(228,156,6)"/><text x="439.00" y="462.50"></text></g><g><title>0x7fa5e3f86158 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="439" y="516" width="1" height="15" fill="rgb(229,43,16)"/><text x="442.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (2 samples, 0.23%)</title><rect x="439" y="468" width="3" height="15" fill="rgb(206,21,11)"/><text x="442.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (2 samples, 0.23%)</title><rect x="439" y="484" width="3" height="15" fill="rgb(208,103,51)"/><text x="442.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (2 samples, 0.23%)</title><rect x="439" y="500" width="3" height="15" fill="rgb(208,40,18)"/><text x="442.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="440" y="516" width="2" height="15" fill="rgb(215,171,49)"/><text x="443.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.12%)</title><rect x="440" y="532" width="2" height="15" fill="rgb(207,178,53)"/><text x="443.00" y="542.50"></text></g><g><title>0x7fa5e3f65a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="442" y="484" width="1" height="15" fill="rgb(215,83,34)"/><text x="445.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (2 samples, 0.23%)</title><rect x="442" y="468" width="3" height="15" fill="rgb(215,6,26)"/><text x="445.00" y="478.50"></text></g><g><title>0x7fa5e3f65bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="443" y="484" width="2" height="15" fill="rgb(235,220,23)"/><text x="446.00" y="494.50"></text></g><g><title>0x7fa5e3f6597c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="446" y="548" width="1" height="15" fill="rgb(227,71,41)"/><text x="449.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (7 samples, 0.81%)</title><rect x="439" y="452" width="10" height="15" fill="rgb(244,30,26)"/><text x="442.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (3 samples, 0.35%)</title><rect x="445" y="468" width="4" height="15" fill="rgb(252,175,44)"/><text x="448.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (3 samples, 0.35%)</title><rect x="445" y="484" width="4" height="15" fill="rgb(245,32,32)"/><text x="448.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (3 samples, 0.35%)</title><rect x="445" y="500" width="4" height="15" fill="rgb(236,36,1)"/><text x="448.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (3 samples, 0.35%)</title><rect x="445" y="516" width="4" height="15" fill="rgb(242,68,8)"/><text x="448.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (3 samples, 0.35%)</title><rect x="445" y="532" width="4" height="15" fill="rgb(205,219,42)"/><text x="448.00" y="542.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="447" y="548" width="2" height="15" fill="rgb(253,138,32)"/><text x="450.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (2 samples, 0.23%)</title><rect x="449" y="452" width="2" height="15" fill="rgb(253,210,11)"/><text x="452.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (2 samples, 0.23%)</title><rect x="449" y="468" width="2" height="15" fill="rgb(222,139,23)"/><text x="452.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (2 samples, 0.23%)</title><rect x="449" y="484" width="2" height="15" fill="rgb(230,209,50)"/><text x="452.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (2 samples, 0.23%)</title><rect x="449" y="500" width="2" height="15" fill="rgb(246,175,16)"/><text x="452.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="449" y="516" width="2" height="15" fill="rgb(226,146,16)"/><text x="452.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="449" y="532" width="2" height="15" fill="rgb(227,25,23)"/><text x="452.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (5 samples, 0.58%)</title><rect x="451" y="452" width="7" height="15" fill="rgb(252,49,40)"/><text x="454.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (5 samples, 0.58%)</title><rect x="451" y="468" width="7" height="15" fill="rgb(250,87,22)"/><text x="454.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (4 samples, 0.46%)</title><rect x="453" y="484" width="5" height="15" fill="rgb(222,95,28)"/><text x="456.00" y="494.50"></text></g><g><title>std::abs (cmath:92) (2 samples, 0.23%)</title><rect x="455" y="500" width="3" height="15" fill="rgb(205,143,40)"/><text x="458.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:458) (1 samples, 0.12%)</title><rect x="458" y="452" width="1" height="15" fill="rgb(208,82,15)"/><text x="461.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:461) (1 samples, 0.12%)</title><rect x="459" y="452" width="2" height="15" fill="rgb(228,226,7)"/><text x="462.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (2 samples, 0.23%)</title><rect x="461" y="500" width="3" height="15" fill="rgb(212,163,26)"/><text x="464.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.12%)</title><rect x="464" y="500" width="1" height="15" fill="rgb(226,125,22)"/><text x="467.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.12%)</title><rect x="464" y="516" width="1" height="15" fill="rgb(211,163,14)"/><text x="467.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (8 samples, 0.92%)</title><rect x="465" y="500" width="11" height="15" fill="rgb(227,138,0)"/><text x="468.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (8 samples, 0.92%)</title><rect x="465" y="516" width="11" height="15" fill="rgb(252,124,52)"/><text x="468.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (8 samples, 0.92%)</title><rect x="465" y="532" width="11" height="15" fill="rgb(215,79,4)"/><text x="468.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (8 samples, 0.92%)</title><rect x="465" y="548" width="11" height="15" fill="rgb(241,173,53)"/><text x="468.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.92%)</title><rect x="465" y="564" width="11" height="15" fill="rgb(244,194,10)"/><text x="468.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.92%)</title><rect x="465" y="580" width="11" height="15" fill="rgb(229,153,53)"/><text x="468.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.12%)</title><rect x="476" y="500" width="1" height="15" fill="rgb(227,113,31)"/><text x="479.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.12%)</title><rect x="476" y="516" width="1" height="15" fill="rgb(218,20,2)"/><text x="479.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (1 samples, 0.12%)</title><rect x="477" y="500" width="2" height="15" fill="rgb(214,219,39)"/><text x="480.00" y="510.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (1 samples, 0.12%)</title><rect x="477" y="516" width="2" height="15" fill="rgb(214,164,45)"/><text x="480.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (1 samples, 0.12%)</title><rect x="477" y="532" width="2" height="15" fill="rgb(210,61,47)"/><text x="480.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (1 samples, 0.12%)</title><rect x="477" y="548" width="2" height="15" fill="rgb(249,173,20)"/><text x="480.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (1 samples, 0.12%)</title><rect x="477" y="564" width="2" height="15" fill="rgb(226,84,1)"/><text x="480.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (1 samples, 0.12%)</title><rect x="477" y="580" width="2" height="15" fill="rgb(225,64,16)"/><text x="480.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (1 samples, 0.12%)</title><rect x="477" y="596" width="2" height="15" fill="rgb(219,39,30)"/><text x="480.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.12%)</title><rect x="477" y="612" width="2" height="15" fill="rgb(237,18,12)"/><text x="480.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.12%)</title><rect x="477" y="628" width="2" height="15" fill="rgb(207,200,2)"/><text x="480.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.12%)</title><rect x="479" y="500" width="1" height="15" fill="rgb(208,81,47)"/><text x="482.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.12%)</title><rect x="479" y="516" width="1" height="15" fill="rgb(243,208,30)"/><text x="482.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.12%)</title><rect x="479" y="532" width="1" height="15" fill="rgb(239,111,27)"/><text x="482.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.12%)</title><rect x="479" y="548" width="1" height="15" fill="rgb(220,90,17)"/><text x="482.00" y="558.50"></text></g><g><title>0x7fa5e3f6590e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="480" y="516" width="1" height="15" fill="rgb(211,95,53)"/><text x="483.00" y="526.50"></text></g><g><title>0x7fa5e3f6595e (libc-2.29.so) (2 samples, 0.23%)</title><rect x="481" y="516" width="3" height="15" fill="rgb(210,101,21)"/><text x="484.00" y="526.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="484" y="516" width="1" height="15" fill="rgb(238,221,51)"/><text x="487.00" y="526.50"></text></g><g><title>0x7fa5e3f65bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="485" y="516" width="2" height="15" fill="rgb(250,8,40)"/><text x="488.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (22 samples, 2.53%)</title><rect x="461" y="484" width="30" height="15" fill="rgb(236,142,30)"/><text x="464.00" y="494.50">mu..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (8 samples, 0.92%)</title><rect x="480" y="500" width="11" height="15" fill="rgb(232,55,22)"/><text x="483.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.35%)</title><rect x="487" y="516" width="4" height="15" fill="rgb(230,72,0)"/><text x="490.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (2 samples, 0.23%)</title><rect x="491" y="500" width="2" height="15" fill="rgb(217,114,13)"/><text x="494.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (7 samples, 0.81%)</title><rect x="493" y="500" width="10" height="15" fill="rgb(235,156,34)"/><text x="496.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (7 samples, 0.81%)</title><rect x="493" y="516" width="10" height="15" fill="rgb(250,72,47)"/><text x="496.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (6 samples, 0.69%)</title><rect x="495" y="532" width="8" height="15" fill="rgb(217,70,6)"/><text x="498.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (6 samples, 0.69%)</title><rect x="495" y="548" width="8" height="15" fill="rgb(247,127,17)"/><text x="498.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.69%)</title><rect x="495" y="564" width="8" height="15" fill="rgb(219,195,31)"/><text x="498.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.69%)</title><rect x="495" y="580" width="8" height="15" fill="rgb(250,162,29)"/><text x="498.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.12%)</title><rect x="503" y="500" width="1" height="15" fill="rgb(253,12,21)"/><text x="506.00" y="510.50"></text></g><g><title>0x7fa5e3f85d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="503" y="516" width="1" height="15" fill="rgb(254,196,40)"/><text x="506.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.23%)</title><rect x="504" y="500" width="3" height="15" fill="rgb(237,209,42)"/><text x="507.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="504" y="516" width="3" height="15" fill="rgb(231,15,46)"/><text x="507.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (13 samples, 1.50%)</title><rect x="491" y="484" width="17" height="15" fill="rgb(226,223,16)"/><text x="494.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.12%)</title><rect x="507" y="500" width="1" height="15" fill="rgb(225,21,20)"/><text x="510.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:314) (2 samples, 0.23%)</title><rect x="508" y="484" width="3" height="15" fill="rgb(211,33,31)"/><text x="511.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (2 samples, 0.23%)</title><rect x="508" y="500" width="3" height="15" fill="rgb(225,57,48)"/><text x="511.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (2 samples, 0.23%)</title><rect x="508" y="516" width="3" height="15" fill="rgb(239,105,42)"/><text x="511.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:316) (1 samples, 0.12%)</title><rect x="511" y="484" width="1" height="15" fill="rgb(250,181,35)"/><text x="514.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:323) (1 samples, 0.12%)</title><rect x="512" y="484" width="2" height="15" fill="rgb(229,179,33)"/><text x="515.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:332) (1 samples, 0.12%)</title><rect x="514" y="484" width="1" height="15" fill="rgb(245,57,27)"/><text x="517.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (1 samples, 0.12%)</title><rect x="515" y="484" width="2" height="15" fill="rgb(236,103,38)"/><text x="518.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:334) (3 samples, 0.35%)</title><rect x="517" y="484" width="4" height="15" fill="rgb(231,128,34)"/><text x="520.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:340) (1 samples, 0.12%)</title><rect x="521" y="484" width="1" height="15" fill="rgb(205,90,24)"/><text x="524.00" y="494.50"></text></g><g><title>std::fabs (cmath:265) (1 samples, 0.12%)</title><rect x="521" y="500" width="1" height="15" fill="rgb(214,21,15)"/><text x="524.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (1 samples, 0.12%)</title><rect x="522" y="484" width="1" height="15" fill="rgb(228,84,44)"/><text x="525.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:348) (1 samples, 0.12%)</title><rect x="523" y="484" width="2" height="15" fill="rgb(247,101,7)"/><text x="526.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.12%)</title><rect x="525" y="484" width="1" height="15" fill="rgb(211,193,26)"/><text x="528.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (17 samples, 1.96%)</title><rect x="526" y="484" width="23" height="15" fill="rgb(252,52,21)"/><text x="529.00" y="494.50">m..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (4 samples, 0.46%)</title><rect x="549" y="484" width="6" height="15" fill="rgb(212,27,32)"/><text x="552.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (3 samples, 0.35%)</title><rect x="555" y="484" width="4" height="15" fill="rgb(205,177,6)"/><text x="558.00" y="494.50"></text></g><g><title>0x7fa5e3f65922 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="559" y="500" width="1" height="15" fill="rgb(212,112,0)"/><text x="562.00" y="510.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="560" y="500" width="1" height="15" fill="rgb(252,70,0)"/><text x="563.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (75 samples, 8.64%)</title><rect x="461" y="452" width="102" height="15" fill="rgb(250,43,34)"/><text x="464.00" y="462.50">RuntimeSVMCl..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (75 samples, 8.64%)</title><rect x="461" y="468" width="102" height="15" fill="rgb(246,58,47)"/><text x="464.00" y="478.50">std::vector&lt;..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:358) (3 samples, 0.35%)</title><rect x="559" y="484" width="4" height="15" fill="rgb(206,130,32)"/><text x="562.00" y="494.50"></text></g><g><title>0x7fa5e3f65a38 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="561" y="500" width="2" height="15" fill="rgb(205,170,40)"/><text x="564.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:464) (1 samples, 0.12%)</title><rect x="563" y="452" width="1" height="15" fill="rgb(236,172,11)"/><text x="566.00" y="462.50"></text></g><g><title>std::copy&lt;__gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt; (stl_algobase.h:456) (1 samples, 0.12%)</title><rect x="563" y="468" width="1" height="15" fill="rgb(237,124,10)"/><text x="566.00" y="478.50"></text></g><g><title>std::__copy_move_a2&lt;false, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;float*, std::vector&lt;float, std::allocator&lt;float&gt; &gt; &gt; &gt; (stl_algobase.h:422) (1 samples, 0.12%)</title><rect x="563" y="484" width="1" height="15" fill="rgb(215,110,54)"/><text x="566.00" y="494.50"></text></g><g><title>std::__copy_move_a&lt;false, float*, float*&gt; (stl_algobase.h:386) (1 samples, 0.12%)</title><rect x="563" y="500" width="1" height="15" fill="rgb(230,22,3)"/><text x="566.00" y="510.50"></text></g><g><title>std::__copy_move&lt;false, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (1 samples, 0.12%)</title><rect x="563" y="516" width="1" height="15" fill="rgb(233,148,2)"/><text x="566.00" y="526.50"></text></g><g><title>0x7fa5a50c46c0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.12%)</title><rect x="563" y="532" width="1" height="15" fill="rgb(213,179,29)"/><text x="566.00" y="542.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:469) (1 samples, 0.12%)</title><rect x="564" y="452" width="2" height="15" fill="rgb(241,60,13)"/><text x="567.00" y="462.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h:5549) (1 samples, 0.12%)</title><rect x="564" y="468" width="2" height="15" fill="rgb(247,179,15)"/><text x="567.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h:5523) (1 samples, 0.12%)</title><rect x="564" y="484" width="2" height="15" fill="rgb(214,36,39)"/><text x="567.00" y="494.50"></text></g><g><title>__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;::operator++ (stl_iterator.h:799) (1 samples, 0.12%)</title><rect x="564" y="500" width="2" height="15" fill="rgb(215,113,6)"/><text x="567.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:491) (3 samples, 0.35%)</title><rect x="566" y="452" width="4" height="15" fill="rgb(222,63,15)"/><text x="569.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.23%)</title><rect x="567" y="468" width="3" height="15" fill="rgb(211,22,51)"/><text x="570.00" y="478.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:206) (2 samples, 0.23%)</title><rect x="567" y="484" width="3" height="15" fill="rgb(227,109,38)"/><text x="570.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (200 samples, 23.04%)</title><rect x="299" y="228" width="272" height="15" fill="rgb(245,95,49)"/><text x="302.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_sv..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (200 samples, 23.04%)</title><rect x="299" y="244" width="272" height="15" fill="rgb(227,90,45)"/><text x="302.00" y="254.50">pybind11::cpp_function::dispatcher (..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (200 samples, 23.04%)</title><rect x="299" y="260" width="272" height="15" fill="rgb(231,103,53)"/><text x="302.00" y="270.50">void pybind11::cpp_function::initial..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (198 samples, 22.81%)</title><rect x="302" y="276" width="269" height="15" fill="rgb(210,83,32)"/><text x="305.00" y="286.50">void pybind11::cpp_function::initia..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (198 samples, 22.81%)</title><rect x="302" y="292" width="269" height="15" fill="rgb(231,109,45)"/><text x="305.00" y="302.50">pybind11::detail::argument_loader&lt;R..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (198 samples, 22.81%)</title><rect x="302" y="308" width="269" height="15" fill="rgb(216,110,38)"/><text x="305.00" y="318.50">pybind11::detail::argument_loader&lt;R..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (198 samples, 22.81%)</title><rect x="302" y="324" width="269" height="15" fill="rgb(205,4,30)"/><text x="305.00" y="334.50">pybind11::cpp_function::cpp_functio..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (198 samples, 22.81%)</title><rect x="302" y="340" width="269" height="15" fill="rgb(221,85,18)"/><text x="305.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~arra..</text></g><g><title>pybind11::array::~array (numpy.h:538) (198 samples, 22.81%)</title><rect x="302" y="356" width="269" height="15" fill="rgb(249,192,35)"/><text x="305.00" y="366.50">pybind11::array::~array (numpy.h:53..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (198 samples, 22.81%)</title><rect x="302" y="372" width="269" height="15" fill="rgb(224,218,42)"/><text x="305.00" y="382.50">pybind11::buffer::~buffer (pytypes...</text></g><g><title>pybind11::object::~object (pytypes.h:240) (198 samples, 22.81%)</title><rect x="302" y="388" width="269" height="15" fill="rgb(245,159,39)"/><text x="305.00" y="398.50">pybind11::object::~object (pytypes...</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (198 samples, 22.81%)</title><rect x="302" y="404" width="269" height="15" fill="rgb(244,196,8)"/><text x="305.00" y="414.50">pybind11::handle::dec_ref &amp; (pytype..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (198 samples, 22.81%)</title><rect x="302" y="420" width="269" height="15" fill="rgb(236,201,53)"/><text x="305.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::comput..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (198 samples, 22.81%)</title><rect x="302" y="436" width="269" height="15" fill="rgb(236,191,10)"/><text x="305.00" y="446.50">pybind11::gil_scoped_release::~gil_..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (vector.tcc:98) (1 samples, 0.12%)</title><rect x="570" y="452" width="1" height="15" fill="rgb(211,56,51)"/><text x="573.00" y="462.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:45) (210 samples, 24.19%)</title><rect x="287" y="52" width="285" height="15" fill="rgb(211,219,31)"/><text x="290.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probabil..</text></g><g><title>profile_pyrt (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:44) (210 samples, 24.19%)</title><rect x="287" y="68" width="285" height="15" fill="rgb(224,214,45)"/><text x="290.00" y="78.50">profile_pyrt (bench_SVC_poly_b_cl_prob..</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (210 samples, 24.19%)</title><rect x="287" y="84" width="285" height="15" fill="rgb(235,51,54)"/><text x="290.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_pro..</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (203 samples, 23.39%)</title><rect x="296" y="100" width="276" height="15" fill="rgb(242,138,17)"/><text x="299.00" y="110.50">profile (bench_SVC_poly_b_cl_probabi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (203 samples, 23.39%)</title><rect x="296" y="116" width="276" height="15" fill="rgb(247,153,52)"/><text x="299.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (203 samples, 23.39%)</title><rect x="296" y="132" width="276" height="15" fill="rgb(207,62,52)"/><text x="299.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (203 samples, 23.39%)</title><rect x="296" y="148" width="276" height="15" fill="rgb(227,214,14)"/><text x="299.00" y="158.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (202 samples, 23.27%)</title><rect x="298" y="164" width="274" height="15" fill="rgb(235,64,35)"/><text x="301.00" y="174.50">_run_sequence_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (202 samples, 23.27%)</title><rect x="298" y="180" width="274" height="15" fill="rgb(220,117,37)"/><text x="301.00" y="190.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (201 samples, 23.16%)</title><rect x="299" y="196" width="273" height="15" fill="rgb(217,53,8)"/><text x="302.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (201 samples, 23.16%)</title><rect x="299" y="212" width="273" height="15" fill="rgb(221,208,5)"/><text x="302.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:62) (1 samples, 0.12%)</title><rect x="571" y="228" width="1" height="15" fill="rgb(230,22,21)"/><text x="574.00" y="238.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.12%)</title><rect x="571" y="244" width="1" height="15" fill="rgb(207,33,27)"/><text x="574.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.12%)</title><rect x="571" y="260" width="1" height="15" fill="rgb(235,111,37)"/><text x="574.00" y="270.50"></text></g><g><title>0x7fa5e3f7b734 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="571" y="276" width="1" height="15" fill="rgb(215,133,50)"/><text x="574.00" y="286.50"></text></g><g><title>0x7fa5a3fd5ff9 (?) (1 samples, 0.12%)</title><rect x="572" y="212" width="2" height="15" fill="rgb(252,107,48)"/><text x="575.00" y="222.50"></text></g><g><title>0x7fa5a3fd0ef6 (?) (1 samples, 0.12%)</title><rect x="572" y="228" width="2" height="15" fill="rgb(250,165,5)"/><text x="575.00" y="238.50"></text></g><g><title>0x7fa5a3fc5962 (?) (1 samples, 0.12%)</title><rect x="572" y="244" width="2" height="15" fill="rgb(231,185,22)"/><text x="575.00" y="254.50"></text></g><g><title>0x7fa5a3ff97a7 (?) (1 samples, 0.12%)</title><rect x="572" y="260" width="2" height="15" fill="rgb(232,103,40)"/><text x="575.00" y="270.50"></text></g><g><title>0x7fa5a3ff9379 (?) (1 samples, 0.12%)</title><rect x="572" y="276" width="2" height="15" fill="rgb(243,20,32)"/><text x="575.00" y="286.50"></text></g><g><title>0x7fa5a44578b8 (?) (1 samples, 0.12%)</title><rect x="572" y="292" width="2" height="15" fill="rgb(222,110,15)"/><text x="575.00" y="302.50"></text></g><g><title>0x7fa5a4455c7f (?) (1 samples, 0.12%)</title><rect x="572" y="308" width="2" height="15" fill="rgb(215,169,49)"/><text x="575.00" y="318.50"></text></g><g><title>0x7fa5a446899c (?) (1 samples, 0.12%)</title><rect x="572" y="324" width="2" height="15" fill="rgb(228,34,11)"/><text x="575.00" y="334.50"></text></g><g><title>0x7fa5a416db9e (?) (1 samples, 0.12%)</title><rect x="572" y="340" width="2" height="15" fill="rgb(237,32,19)"/><text x="575.00" y="350.50"></text></g><g><title>powf32x (libm-2.29.so) (1 samples, 0.12%)</title><rect x="572" y="356" width="2" height="15" fill="rgb(253,31,41)"/><text x="575.00" y="366.50"></text></g><g><title>0x7fa5e40cfc10 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="572" y="372" width="2" height="15" fill="rgb(222,87,48)"/><text x="575.00" y="382.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="582" y="356" width="4" height="15" fill="rgb(254,5,8)"/><text x="585.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="585" y="372" width="1" height="15" fill="rgb(231,194,4)"/><text x="588.00" y="382.50"></text></g><g><title>0x7fa5d3a327a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="585" y="388" width="1" height="15" fill="rgb(208,90,42)"/><text x="588.00" y="398.50"></text></g><g><title>0x7fa5e40cfb32 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="586" y="372" width="1" height="15" fill="rgb(226,181,2)"/><text x="589.00" y="382.50"></text></g><g><title>0x7fa5e40cfcd6 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="587" y="372" width="2" height="15" fill="rgb(242,181,43)"/><text x="590.00" y="382.50"></text></g><g><title>0x7fa5e40cfd11 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="589" y="372" width="1" height="15" fill="rgb(252,155,6)"/><text x="592.00" y="382.50"></text></g><g><title>0x7fa5e40cfde8 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="590" y="372" width="1" height="15" fill="rgb(245,5,1)"/><text x="593.00" y="382.50"></text></g><g><title>0x7fa5e40cfe09 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(237,15,52)"/><text x="594.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (6 samples, 0.69%)</title><rect x="586" y="356" width="8" height="15" fill="rgb(215,19,35)"/><text x="589.00" y="366.50"></text></g><g><title>0x7fa5e40cfe0d (libm-2.29.so) (1 samples, 0.12%)</title><rect x="593" y="372" width="1" height="15" fill="rgb(220,34,27)"/><text x="596.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.84%)</title><rect x="574" y="340" width="21" height="15" fill="rgb(253,118,27)"/><text x="577.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="594" y="356" width="1" height="15" fill="rgb(233,144,6)"/><text x="597.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.23%)</title><rect x="595" y="356" width="3" height="15" fill="rgb(207,182,17)"/><text x="598.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="595" y="372" width="3" height="15" fill="rgb(237,216,23)"/><text x="598.00" y="382.50"></text></g><g><title>0x7fa5e3f66b76 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="597" y="388" width="1" height="15" fill="rgb(231,9,34)"/><text x="600.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.19%)</title><rect x="574" y="260" width="26" height="15" fill="rgb(219,110,5)"/><text x="577.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.19%)</title><rect x="574" y="276" width="26" height="15" fill="rgb(208,218,31)"/><text x="577.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.19%)</title><rect x="574" y="292" width="26" height="15" fill="rgb(224,217,6)"/><text x="577.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.19%)</title><rect x="574" y="308" width="26" height="15" fill="rgb(208,159,51)"/><text x="577.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.19%)</title><rect x="574" y="324" width="26" height="15" fill="rgb(212,140,35)"/><text x="577.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.35%)</title><rect x="595" y="340" width="5" height="15" fill="rgb(217,114,35)"/><text x="598.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="598" y="356" width="2" height="15" fill="rgb(240,99,39)"/><text x="601.00" y="366.50"></text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (21 samples, 2.42%)</title><rect x="572" y="100" width="29" height="15" fill="rgb(232,11,46)"/><text x="575.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (21 samples, 2.42%)</title><rect x="572" y="116" width="29" height="15" fill="rgb(213,108,7)"/><text x="575.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (21 samples, 2.42%)</title><rect x="572" y="132" width="29" height="15" fill="rgb(220,12,19)"/><text x="575.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (21 samples, 2.42%)</title><rect x="572" y="148" width="29" height="15" fill="rgb(253,138,36)"/><text x="575.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (21 samples, 2.42%)</title><rect x="572" y="164" width="29" height="15" fill="rgb(220,44,41)"/><text x="575.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (21 samples, 2.42%)</title><rect x="572" y="180" width="29" height="15" fill="rgb(232,208,6)"/><text x="575.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py:136) (21 samples, 2.42%)</title><rect x="572" y="196" width="29" height="15" fill="rgb(211,141,49)"/><text x="575.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.30%)</title><rect x="574" y="212" width="27" height="15" fill="rgb(225,74,36)"/><text x="577.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.30%)</title><rect x="574" y="228" width="27" height="15" fill="rgb(228,223,48)"/><text x="577.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.30%)</title><rect x="574" y="244" width="27" height="15" fill="rgb(228,79,15)"/><text x="577.00" y="254.50">o..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="600" y="260" width="1" height="15" fill="rgb(229,205,33)"/><text x="603.00" y="270.50"></text></g><g><title>0x7fa5e3f64bc0 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="613" y="132" width="3" height="15" fill="rgb(220,86,19)"/><text x="616.00" y="142.50"></text></g><g><title>0x7fa5e3f64bd1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="616" y="132" width="1" height="15" fill="rgb(218,2,50)"/><text x="619.00" y="142.50"></text></g><g><title>0x7fa5e3f64bfd (libc-2.29.so) (1 samples, 0.12%)</title><rect x="617" y="132" width="2" height="15" fill="rgb(235,33,18)"/><text x="620.00" y="142.50"></text></g><g><title>0x7fa5e3f64c10 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="619" y="132" width="1" height="15" fill="rgb(224,194,10)"/><text x="622.00" y="142.50"></text></g><g><title>0x7fa5e3f64c2d (libc-2.29.so) (1 samples, 0.12%)</title><rect x="620" y="132" width="1" height="15" fill="rgb(212,203,27)"/><text x="623.00" y="142.50"></text></g><g><title>0x7fa5e3f64c41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="621" y="132" width="2" height="15" fill="rgb(224,193,51)"/><text x="624.00" y="142.50"></text></g><g><title>0x7fa5e3f65eb0 (libc-2.29.so) (8 samples, 0.92%)</title><rect x="613" y="116" width="11" height="15" fill="rgb(226,212,39)"/><text x="616.00" y="126.50"></text></g><g><title>0x7fa5e3f64c73 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="623" y="132" width="1" height="15" fill="rgb(218,106,48)"/><text x="626.00" y="142.50"></text></g><g><title>0x7fa5e3f64aaf (libc-2.29.so) (1 samples, 0.12%)</title><rect x="623" y="148" width="1" height="15" fill="rgb(222,37,45)"/><text x="626.00" y="158.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="627" y="292" width="1" height="15" fill="rgb(219,8,5)"/><text x="630.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="627" y="308" width="1" height="15" fill="rgb(221,183,8)"/><text x="630.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="628" y="340" width="1" height="15" fill="rgb(213,74,37)"/><text x="631.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="628" y="356" width="1" height="15" fill="rgb(211,77,39)"/><text x="631.00" y="366.50"></text></g><g><title>0x7fa5a3f9c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="720" y="356" width="2" height="15" fill="rgb(235,199,38)"/><text x="723.00" y="366.50"></text></g><g><title>0x7fa5a3f9c960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="722" y="356" width="1" height="15" fill="rgb(215,83,28)"/><text x="725.00" y="366.50"></text></g><g><title>0x7fa5a3f9cce0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="723" y="356" width="3" height="15" fill="rgb(213,76,46)"/><text x="726.00" y="366.50"></text></g><g><title>0x7fa5d3a327a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="726" y="356" width="1" height="15" fill="rgb(217,115,32)"/><text x="729.00" y="366.50"></text></g><g><title>0x7fa5e3f65906 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="727" y="356" width="2" height="15" fill="rgb(248,62,14)"/><text x="730.00" y="366.50"></text></g><g><title>0x7fa5e3f6591e (libc-2.29.so) (1 samples, 0.12%)</title><rect x="729" y="356" width="1" height="15" fill="rgb(205,199,11)"/><text x="732.00" y="366.50"></text></g><g><title>0x7fa5e3f6592c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="730" y="356" width="1" height="15" fill="rgb(234,103,23)"/><text x="733.00" y="366.50"></text></g><g><title>0x7fa5e3f65991 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="731" y="356" width="2" height="15" fill="rgb(247,77,38)"/><text x="734.00" y="366.50"></text></g><g><title>0x7fa5e3f65bd8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="733" y="356" width="1" height="15" fill="rgb(213,80,4)"/><text x="736.00" y="366.50"></text></g><g><title>0x7fa5e3f8612f (libc-2.29.so) (1 samples, 0.12%)</title><rect x="734" y="356" width="1" height="15" fill="rgb(239,49,1)"/><text x="737.00" y="366.50"></text></g><g><title>0x7fa5e40e4e00 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="735" y="356" width="2" height="15" fill="rgb(230,26,12)"/><text x="738.00" y="366.50"></text></g><g><title>0x7fa5e40e4e0a (libm-2.29.so) (1 samples, 0.12%)</title><rect x="737" y="356" width="1" height="15" fill="rgb(218,72,25)"/><text x="740.00" y="366.50"></text></g><g><title>0x7fa5e40e4e1c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="738" y="356" width="2" height="15" fill="rgb(205,229,26)"/><text x="741.00" y="366.50"></text></g><g><title>0x7fa5e40e4e86 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="740" y="356" width="1" height="15" fill="rgb(210,11,34)"/><text x="743.00" y="366.50"></text></g><g><title>0x7fa5e40e4ea6 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="741" y="356" width="3" height="15" fill="rgb(206,92,4)"/><text x="744.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.12%)</title><rect x="744" y="356" width="1" height="15" fill="rgb(207,192,47)"/><text x="747.00" y="366.50"></text></g><g><title>0x7fa5e3f65a41 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="801" y="372" width="1" height="15" fill="rgb(224,180,6)"/><text x="804.00" y="382.50"></text></g><g><title>0x7fa5d3a327a0 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="809" y="388" width="1" height="15" fill="rgb(238,199,32)"/><text x="812.00" y="398.50"></text></g><g><title>0x7fa5e3f6593b (libc-2.29.so) (1 samples, 0.12%)</title><rect x="810" y="388" width="2" height="15" fill="rgb(227,125,4)"/><text x="813.00" y="398.50"></text></g><g><title>0x7fa5e3f6595e (libc-2.29.so) (3 samples, 0.35%)</title><rect x="812" y="388" width="4" height="15" fill="rgb(250,26,19)"/><text x="815.00" y="398.50"></text></g><g><title>0x7fa5e3f65991 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="816" y="388" width="2" height="15" fill="rgb(225,83,31)"/><text x="819.00" y="398.50"></text></g><g><title>0x7fa5e3f65998 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="818" y="388" width="2" height="15" fill="rgb(236,202,16)"/><text x="821.00" y="398.50"></text></g><g><title>0x7fa5e3f65a55 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="820" y="388" width="1" height="15" fill="rgb(248,16,18)"/><text x="823.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.35%)</title><rect x="821" y="388" width="4" height="15" fill="rgb(254,104,41)"/><text x="824.00" y="398.50"></text></g><g><title>0x7fa5d3a31d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="827" y="404" width="1" height="15" fill="rgb(233,48,29)"/><text x="830.00" y="414.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (68 samples, 7.83%)</title><rect x="745" y="356" width="92" height="15" fill="rgb(227,193,50)"/><text x="748.00" y="366.50">onnxruntim..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 3.00%)</title><rect x="802" y="372" width="35" height="15" fill="rgb(232,183,22)"/><text x="805.00" y="382.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.04%)</title><rect x="825" y="388" width="12" height="15" fill="rgb(218,206,32)"/><text x="828.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.81%)</title><rect x="828" y="404" width="9" height="15" fill="rgb(231,64,48)"/><text x="831.00" y="414.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="837" y="356" width="2" height="15" fill="rgb(218,65,21)"/><text x="840.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.35%)</title><rect x="839" y="356" width="4" height="15" fill="rgb(254,142,35)"/><text x="842.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.35%)</title><rect x="839" y="372" width="4" height="15" fill="rgb(240,157,48)"/><text x="842.00" y="382.50"></text></g><g><title>0x7fa5e40cfb20 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="866" y="372" width="3" height="15" fill="rgb(210,157,22)"/><text x="869.00" y="382.50"></text></g><g><title>0x7fa5e40cfb2e (libm-2.29.so) (1 samples, 0.12%)</title><rect x="869" y="372" width="1" height="15" fill="rgb(210,27,15)"/><text x="872.00" y="382.50"></text></g><g><title>0x7fa5e40cfb32 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="870" y="372" width="1" height="15" fill="rgb(245,120,50)"/><text x="873.00" y="382.50"></text></g><g><title>0x7fa5e40cfb40 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="871" y="372" width="3" height="15" fill="rgb(214,142,31)"/><text x="874.00" y="382.50"></text></g><g><title>0x7fa5e40cfb44 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="874" y="372" width="1" height="15" fill="rgb(211,72,52)"/><text x="877.00" y="382.50"></text></g><g><title>0x7fa5e40cfb59 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="875" y="372" width="2" height="15" fill="rgb(238,148,17)"/><text x="878.00" y="382.50"></text></g><g><title>0x7fa5e40cfb78 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="877" y="372" width="1" height="15" fill="rgb(208,112,21)"/><text x="880.00" y="382.50"></text></g><g><title>0x7fa5e40cfb93 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="878" y="372" width="2" height="15" fill="rgb(205,201,32)"/><text x="881.00" y="382.50"></text></g><g><title>0x7fa5e40cfbba (libm-2.29.so) (1 samples, 0.12%)</title><rect x="880" y="372" width="1" height="15" fill="rgb(239,205,40)"/><text x="883.00" y="382.50"></text></g><g><title>0x7fa5e40cfbbe (libm-2.29.so) (1 samples, 0.12%)</title><rect x="881" y="372" width="1" height="15" fill="rgb(247,61,36)"/><text x="884.00" y="382.50"></text></g><g><title>0x7fa5e40cfbdd (libm-2.29.so) (1 samples, 0.12%)</title><rect x="882" y="372" width="2" height="15" fill="rgb(254,229,27)"/><text x="885.00" y="382.50"></text></g><g><title>0x7fa5e40cfbe9 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="884" y="372" width="1" height="15" fill="rgb(251,109,8)"/><text x="887.00" y="382.50"></text></g><g><title>0x7fa5e40cfbf8 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="885" y="372" width="1" height="15" fill="rgb(231,126,6)"/><text x="888.00" y="382.50"></text></g><g><title>0x7fa5e40cfbfc (libm-2.29.so) (3 samples, 0.35%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(248,125,0)"/><text x="889.00" y="382.50"></text></g><g><title>0x7fa5e40cfc00 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="890" y="372" width="2" height="15" fill="rgb(215,166,16)"/><text x="893.00" y="382.50"></text></g><g><title>0x7fa5e40cfc10 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="892" y="372" width="4" height="15" fill="rgb(253,93,20)"/><text x="895.00" y="382.50"></text></g><g><title>0x7fa5e40cfc14 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="896" y="372" width="1" height="15" fill="rgb(247,213,27)"/><text x="899.00" y="382.50"></text></g><g><title>0x7fa5e40cfc25 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="897" y="372" width="2" height="15" fill="rgb(232,10,30)"/><text x="900.00" y="382.50"></text></g><g><title>0x7fa5e40cfc2d (libm-2.29.so) (1 samples, 0.12%)</title><rect x="899" y="372" width="1" height="15" fill="rgb(250,36,7)"/><text x="902.00" y="382.50"></text></g><g><title>0x7fa5e40cfc50 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="900" y="372" width="1" height="15" fill="rgb(215,104,0)"/><text x="903.00" y="382.50"></text></g><g><title>0x7fa5e40cfc66 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="901" y="372" width="3" height="15" fill="rgb(251,28,4)"/><text x="904.00" y="382.50"></text></g><g><title>0x7fa5e40cfc6b (libm-2.29.so) (1 samples, 0.12%)</title><rect x="904" y="372" width="1" height="15" fill="rgb(240,69,24)"/><text x="907.00" y="382.50"></text></g><g><title>0x7fa5e40cfc7c (libm-2.29.so) (1 samples, 0.12%)</title><rect x="905" y="372" width="2" height="15" fill="rgb(205,124,30)"/><text x="908.00" y="382.50"></text></g><g><title>0x7fa5e40cfc90 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="907" y="372" width="4" height="15" fill="rgb(252,160,3)"/><text x="910.00" y="382.50"></text></g><g><title>0x7fa5e40cfc9e (libm-2.29.so) (3 samples, 0.35%)</title><rect x="911" y="372" width="4" height="15" fill="rgb(219,86,14)"/><text x="914.00" y="382.50"></text></g><g><title>0x7fa5e40cfcb5 (libm-2.29.so) (7 samples, 0.81%)</title><rect x="915" y="372" width="9" height="15" fill="rgb(236,111,47)"/><text x="918.00" y="382.50"></text></g><g><title>0x7fa5e40cfcd6 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="924" y="372" width="4" height="15" fill="rgb(209,138,22)"/><text x="927.00" y="382.50"></text></g><g><title>0x7fa5e40cfce4 (libm-2.29.so) (15 samples, 1.73%)</title><rect x="928" y="372" width="21" height="15" fill="rgb(245,214,21)"/><text x="931.00" y="382.50"></text></g><g><title>0x7fa5e40cfcf0 (libm-2.29.so) (7 samples, 0.81%)</title><rect x="949" y="372" width="9" height="15" fill="rgb(240,203,38)"/><text x="952.00" y="382.50"></text></g><g><title>0x7fa5e40cfcf4 (libm-2.29.so) (5 samples, 0.58%)</title><rect x="958" y="372" width="7" height="15" fill="rgb(235,13,12)"/><text x="961.00" y="382.50"></text></g><g><title>0x7fa5e40cfcf8 (libm-2.29.so) (4 samples, 0.46%)</title><rect x="965" y="372" width="6" height="15" fill="rgb(220,60,48)"/><text x="968.00" y="382.50"></text></g><g><title>0x7fa5e40cfd0d (libm-2.29.so) (2 samples, 0.23%)</title><rect x="971" y="372" width="2" height="15" fill="rgb(247,100,42)"/><text x="974.00" y="382.50"></text></g><g><title>0x7fa5e40cfd11 (libm-2.29.so) (5 samples, 0.58%)</title><rect x="973" y="372" width="7" height="15" fill="rgb(205,29,53)"/><text x="976.00" y="382.50"></text></g><g><title>0x7fa5e40cfd19 (libm-2.29.so) (6 samples, 0.69%)</title><rect x="980" y="372" width="8" height="15" fill="rgb(224,141,10)"/><text x="983.00" y="382.50"></text></g><g><title>0x7fa5e40cfd2b (libm-2.29.so) (5 samples, 0.58%)</title><rect x="988" y="372" width="7" height="15" fill="rgb(213,52,4)"/><text x="991.00" y="382.50"></text></g><g><title>0x7fa5e40cfd47 (libm-2.29.so) (4 samples, 0.46%)</title><rect x="995" y="372" width="6" height="15" fill="rgb(243,181,7)"/><text x="998.00" y="382.50"></text></g><g><title>0x7fa5e40cfd67 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="1001" y="372" width="4" height="15" fill="rgb(231,224,49)"/><text x="1004.00" y="382.50"></text></g><g><title>0x7fa5e40cfd92 (libm-2.29.so) (9 samples, 1.04%)</title><rect x="1005" y="372" width="12" height="15" fill="rgb(220,71,54)"/><text x="1008.00" y="382.50"></text></g><g><title>0x7fa5e40cfda2 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1017" y="372" width="1" height="15" fill="rgb(239,102,25)"/><text x="1020.00" y="382.50"></text></g><g><title>0x7fa5e40cfda6 (libm-2.29.so) (2 samples, 0.23%)</title><rect x="1018" y="372" width="3" height="15" fill="rgb(237,100,38)"/><text x="1021.00" y="382.50"></text></g><g><title>0x7fa5e40cfdaa (libm-2.29.so) (4 samples, 0.46%)</title><rect x="1021" y="372" width="5" height="15" fill="rgb(251,138,27)"/><text x="1024.00" y="382.50"></text></g><g><title>0x7fa5e40cfdb6 (libm-2.29.so) (4 samples, 0.46%)</title><rect x="1026" y="372" width="6" height="15" fill="rgb(226,109,11)"/><text x="1029.00" y="382.50"></text></g><g><title>0x7fa5e40cfdc4 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="1032" y="372" width="4" height="15" fill="rgb(221,129,12)"/><text x="1035.00" y="382.50"></text></g><g><title>0x7fa5e40cfdcc (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1036" y="372" width="1" height="15" fill="rgb(214,169,1)"/><text x="1039.00" y="382.50"></text></g><g><title>0x7fa5e40cfdd4 (libm-2.29.so) (4 samples, 0.46%)</title><rect x="1037" y="372" width="6" height="15" fill="rgb(224,37,30)"/><text x="1040.00" y="382.50"></text></g><g><title>0x7fa5e40cfde4 (libm-2.29.so) (1 samples, 0.12%)</title><rect x="1043" y="372" width="1" height="15" fill="rgb(238,161,12)"/><text x="1046.00" y="382.50"></text></g><g><title>0x7fa5e40cfde8 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="1044" y="372" width="4" height="15" fill="rgb(250,174,35)"/><text x="1047.00" y="382.50"></text></g><g><title>0x7fa5e40cfdf0 (libm-2.29.so) (3 samples, 0.35%)</title><rect x="1048" y="372" width="4" height="15" fill="rgb(235,198,32)"/><text x="1051.00" y="382.50"></text></g><g><title>0x7fa5e40cfdf8 (libm-2.29.so) (4 samples, 0.46%)</title><rect x="1052" y="372" width="6" height="15" fill="rgb(218,199,19)"/><text x="1055.00" y="382.50"></text></g><g><title>0x7fa5e40cfe09 (libm-2.29.so) (9 samples, 1.04%)</title><rect x="1058" y="372" width="12" height="15" fill="rgb(228,151,49)"/><text x="1061.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (172 samples, 19.82%)</title><rect x="843" y="356" width="234" height="15" fill="rgb(235,174,18)"/><text x="846.00" y="366.50">powf32x (libm-2.29.so)</text></g><g><title>0x7fa5e40cfe0d (libm-2.29.so) (5 samples, 0.58%)</title><rect x="1070" y="372" width="7" height="15" fill="rgb(237,218,14)"/><text x="1073.00" y="382.50"></text></g><g><title>0x7fa5a3f9c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1083" y="372" width="2" height="15" fill="rgb(207,16,26)"/><text x="1086.00" y="382.50"></text></g><g><title>0x7fa5e3f6592c (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1085" y="372" width="1" height="15" fill="rgb(205,91,14)"/><text x="1088.00" y="382.50"></text></g><g><title>0x7fa5e3f65961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(250,51,3)"/><text x="1089.00" y="382.50"></text></g><g><title>0x7fa5e3f65965 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1088" y="372" width="1" height="15" fill="rgb(253,91,52)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7fa5e3f65971 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1089" y="372" width="1" height="15" fill="rgb(237,207,32)"/><text x="1092.00" y="382.50"></text></g><g><title>0x7fa5e3f65982 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1090" y="372" width="2" height="15" fill="rgb(205,209,20)"/><text x="1093.00" y="382.50"></text></g><g><title>0x7fa5e3f65a53 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1092" y="372" width="1" height="15" fill="rgb(244,209,33)"/><text x="1095.00" y="382.50"></text></g><g><title>0x7fa5e3f65bd4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1093" y="372" width="1" height="15" fill="rgb(207,100,31)"/><text x="1096.00" y="382.50"></text></g><g><title>0x7fa5e3f65be4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1094" y="372" width="2" height="15" fill="rgb(219,81,26)"/><text x="1097.00" y="382.50"></text></g><g><title>0x7fa5e3f65be8 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1096" y="372" width="1" height="15" fill="rgb(212,10,5)"/><text x="1099.00" y="382.50"></text></g><g><title>0x7fa5e3f85d50 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1097" y="372" width="1" height="15" fill="rgb(211,213,32)"/><text x="1100.00" y="382.50"></text></g><g><title>0x7fa5e3f85d97 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1098" y="372" width="2" height="15" fill="rgb(254,148,46)"/><text x="1101.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1100" y="372" width="2" height="15" fill="rgb(219,18,39)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7fa5d3a31d50 (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1107" y="388" width="1" height="15" fill="rgb(219,208,40)"/><text x="1110.00" y="398.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 3.11%)</title><rect x="1077" y="356" width="36" height="15" fill="rgb(213,217,32)"/><text x="1080.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 0.92%)</title><rect x="1102" y="372" width="11" height="15" fill="rgb(212,121,50)"/><text x="1105.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.46%)</title><rect x="1108" y="388" width="5" height="15" fill="rgb(210,117,43)"/><text x="1111.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (360 samples, 41.47%)</title><rect x="629" y="340" width="490" height="15" fill="rgb(229,190,21)"/><text x="632.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/on..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="1113" y="356" width="6" height="15" fill="rgb(234,116,35)"/><text x="1116.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.35%)</title><rect x="1115" y="372" width="4" height="15" fill="rgb(242,39,10)"/><text x="1118.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1116" y="388" width="3" height="15" fill="rgb(227,154,16)"/><text x="1119.00" y="398.50"></text></g><g><title>0x7fa5e3f66b24 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1134" y="388" width="2" height="15" fill="rgb(208,126,42)"/><text x="1137.00" y="398.50"></text></g><g><title>0x7fa5e3f66b49 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1136" y="388" width="3" height="15" fill="rgb(247,129,13)"/><text x="1139.00" y="398.50"></text></g><g><title>0x7fa5e3f66dac (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1139" y="388" width="2" height="15" fill="rgb(251,173,9)"/><text x="1142.00" y="398.50"></text></g><g><title>0x7fa5e3f66db4 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1141" y="388" width="1" height="15" fill="rgb(217,205,39)"/><text x="1144.00" y="398.50"></text></g><g><title>0x7fa5e3f673ce (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1142" y="388" width="1" height="15" fill="rgb(248,90,20)"/><text x="1145.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.61%)</title><rect x="1126" y="356" width="19" height="15" fill="rgb(252,64,26)"/><text x="1129.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.61%)</title><rect x="1126" y="372" width="19" height="15" fill="rgb(219,88,33)"/><text x="1129.00" y="382.50"></text></g><g><title>0x7fa5e3f673d1 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1143" y="388" width="2" height="15" fill="rgb(227,138,1)"/><text x="1146.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1145" y="356" width="2" height="15" fill="rgb(228,30,25)"/><text x="1148.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1147" y="356" width="2" height="15" fill="rgb(216,87,9)"/><text x="1150.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 44.47%)</title><rect x="627" y="260" width="524" height="15" fill="rgb(205,141,37)"/><text x="630.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 44.47%)</title><rect x="627" y="276" width="524" height="15" fill="rgb(211,181,6)"/><text x="630.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind1..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (385 samples, 44.35%)</title><rect x="628" y="292" width="523" height="15" fill="rgb(241,122,53)"/><text x="631.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (385 samples, 44.35%)</title><rect x="628" y="308" width="523" height="15" fill="rgb(239,208,32)"/><text x="631.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybi..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (385 samples, 44.35%)</title><rect x="628" y="324" width="523" height="15" fill="rgb(227,136,14)"/><text x="631.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.76%)</title><rect x="1119" y="340" width="32" height="15" fill="rgb(217,157,21)"/><text x="1122.00" y="350.50">on..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.23%)</title><rect x="1149" y="356" width="2" height="15" fill="rgb(223,79,35)"/><text x="1152.00" y="366.50"></text></g><g><title>0x7fa5a3f9d870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(218,225,40)"/><text x="1169.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.58%)</title><rect x="1168" y="276" width="7" height="15" fill="rgb(208,7,21)"/><text x="1171.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.07%)</title><rect x="1151" y="260" width="25" height="15" fill="rgb(207,46,54)"/><text x="1154.00" y="270.50">p..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1175" y="276" width="1" height="15" fill="rgb(206,125,16)"/><text x="1178.00" y="286.50"></text></g><g><title>0x7fa5e3f65d07 (libc-2.29.so) (3 samples, 0.35%)</title><rect x="1176" y="292" width="4" height="15" fill="rgb(224,178,4)"/><text x="1179.00" y="302.50"></text></g><g><title>0x7fa5e3f65961 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1180" y="308" width="1" height="15" fill="rgb(243,172,42)"/><text x="1183.00" y="318.50"></text></g><g><title>0x7fa5e3f65d02 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1181" y="308" width="2" height="15" fill="rgb(214,22,28)"/><text x="1184.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (411 samples, 47.35%)</title><rect x="627" y="244" width="558" height="15" fill="rgb(215,39,19)"/><text x="630.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.81%)</title><rect x="1176" y="260" width="9" height="15" fill="rgb(216,168,33)"/><text x="1179.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.81%)</title><rect x="1176" y="276" width="9" height="15" fill="rgb(206,141,29)"/><text x="1179.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.46%)</title><rect x="1180" y="292" width="5" height="15" fill="rgb(252,204,25)"/><text x="1183.00" y="302.50"></text></g><g><title>0x7fa5e3f65d07 (libc-2.29.so) (2 samples, 0.23%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(253,115,18)"/><text x="1186.00" y="318.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(238,77,4)"/><text x="1188.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.12%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(248,141,46)"/><text x="1188.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (413 samples, 47.58%)</title><rect x="627" y="132" width="561" height="15" fill="rgb(238,100,45)"/><text x="630.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (413 samples, 47.58%)</title><rect x="627" y="148" width="561" height="15" fill="rgb(232,138,10)"/><text x="630.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (413 samples, 47.58%)</title><rect x="627" y="164" width="561" height="15" fill="rgb(215,0,13)"/><text x="630.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (413 samples, 47.58%)</title><rect x="627" y="180" width="561" height="15" fill="rgb(254,152,53)"/><text x="630.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (413 samples, 47.58%)</title><rect x="627" y="196" width="561" height="15" fill="rgb(239,111,2)"/><text x="630.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (413 samples, 47.58%)</title><rect x="627" y="212" width="561" height="15" fill="rgb(219,25,35)"/><text x="630.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_sta..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (413 samples, 47.58%)</title><rect x="627" y="228" width="561" height="15" fill="rgb(228,205,1)"/><text x="630.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="244" width="1" height="15" fill="rgb(243,199,48)"/><text x="1190.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.12%)</title><rect x="1187" y="260" width="1" height="15" fill="rgb(245,152,10)"/><text x="1190.00" y="270.50"></text></g><g><title>0x7fa5e3f7be89 (libc-2.29.so) (1 samples, 0.12%)</title><rect x="1187" y="276" width="1" height="15" fill="rgb(228,54,11)"/><text x="1190.00" y="286.50"></text></g><g><title>all (868 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,193,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:52) (454 samples, 52.30%)</title><rect x="572" y="52" width="618" height="15" fill="rgb(209,59,37)"/><text x="575.00" y="62.50">&lt;module&gt; (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:51) (454 samples, 52.30%)</title><rect x="572" y="68" width="618" height="15" fill="rgb(240,148,45)"/><text x="575.00" y="78.50">profile_ort (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (454 samples, 52.30%)</title><rect x="572" y="84" width="618" height="15" fill="rgb(213,132,16)"/><text x="575.00" y="94.50">setup_profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (433 samples, 49.88%)</title><rect x="601" y="100" width="589" height="15" fill="rgb(224,177,7)"/><text x="604.00" y="110.50">profile (bench_SVC_poly_b_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (416 samples, 47.93%)</title><rect x="624" y="116" width="566" height="15" fill="rgb(215,208,24)"/><text x="627.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.12%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(215,145,1)"/><text x="1191.00" y="142.50"></text></g></g></svg>