<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1670" onload="init(evt)" viewBox="0 0 1200 1670" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1670" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1653.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1653.00"> </text><g id="frames"><g><title>0x7fa5efcc5a66 (?) (1 samples, 0.41%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(230,93,51)"/><text x="13.00" y="158.50"></text></g><g><title>0x7fa5efcb7579 (?) (1 samples, 0.41%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(226,126,22)"/><text x="13.00" y="174.50"></text></g><g><title>0x7fa5ef5f8713 (?) (1 samples, 0.41%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(222,228,6)"/><text x="13.00" y="190.50"></text></g><g><title>0x7fa5ef5f1884 (?) (1 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(223,77,37)"/><text x="13.00" y="206.50"></text></g><g><title>inner (contextlib.py:73) (1 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(219,227,31)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:31) (2 samples, 0.82%)</title><rect x="10" y="52" width="9" height="15" fill="rgb(225,51,23)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:11) (2 samples, 0.82%)</title><rect x="10" y="68" width="9" height="15" fill="rgb(235,30,13)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:39) (2 samples, 0.82%)</title><rect x="10" y="84" width="9" height="15" fill="rgb(252,149,26)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (2 samples, 0.82%)</title><rect x="10" y="100" width="9" height="15" fill="rgb(247,54,17)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (2 samples, 0.82%)</title><rect x="10" y="116" width="9" height="15" fill="rgb(209,91,2)"/><text x="13.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:81) (2 samples, 0.82%)</title><rect x="10" y="132" width="9" height="15" fill="rgb(251,50,23)"/><text x="13.00" y="142.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.41%)</title><rect x="14" y="148" width="5" height="15" fill="rgb(252,150,3)"/><text x="17.00" y="158.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.41%)</title><rect x="14" y="164" width="5" height="15" fill="rgb(253,144,38)"/><text x="17.00" y="174.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.41%)</title><rect x="14" y="180" width="5" height="15" fill="rgb(245,150,12)"/><text x="17.00" y="190.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.41%)</title><rect x="14" y="196" width="5" height="15" fill="rgb(244,142,33)"/><text x="17.00" y="206.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.41%)</title><rect x="14" y="212" width="5" height="15" fill="rgb(248,218,9)"/><text x="17.00" y="222.50"></text></g><g><title>inner (contextlib.py:73) (1 samples, 0.41%)</title><rect x="14" y="228" width="5" height="15" fill="rgb(245,196,29)"/><text x="17.00" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.41%)</title><rect x="14" y="244" width="5" height="15" fill="rgb(242,131,33)"/><text x="17.00" y="254.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.41%)</title><rect x="14" y="260" width="5" height="15" fill="rgb(252,70,34)"/><text x="17.00" y="270.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4849) (1 samples, 0.41%)</title><rect x="14" y="276" width="5" height="15" fill="rgb(239,138,21)"/><text x="17.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (3 samples, 1.23%)</title><rect x="19" y="164" width="15" height="15" fill="rgb(241,228,29)"/><text x="22.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (3 samples, 1.23%)</title><rect x="19" y="180" width="15" height="15" fill="rgb(236,47,47)"/><text x="22.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (3 samples, 1.23%)</title><rect x="19" y="196" width="15" height="15" fill="rgb(237,184,42)"/><text x="22.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.23%)</title><rect x="19" y="212" width="15" height="15" fill="rgb(213,124,7)"/><text x="22.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (3 samples, 1.23%)</title><rect x="19" y="228" width="15" height="15" fill="rgb(205,147,33)"/><text x="22.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (3 samples, 1.23%)</title><rect x="19" y="244" width="15" height="15" fill="rgb(246,37,37)"/><text x="22.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (3 samples, 1.23%)</title><rect x="19" y="260" width="15" height="15" fill="rgb(227,221,53)"/><text x="22.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="19" y="276" width="15" height="15" fill="rgb(251,194,1)"/><text x="22.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="19" y="292" width="15" height="15" fill="rgb(226,80,32)"/><text x="22.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="19" y="308" width="15" height="15" fill="rgb(231,56,4)"/><text x="22.00" y="318.50"></text></g><g><title>0x7fa5e86d39da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="34" y="244" width="5" height="15" fill="rgb(209,32,5)"/><text x="37.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (3 samples, 1.23%)</title><rect x="34" y="164" width="14" height="15" fill="rgb(217,202,33)"/><text x="37.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.23%)</title><rect x="34" y="180" width="14" height="15" fill="rgb(254,127,28)"/><text x="37.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.23%)</title><rect x="34" y="196" width="14" height="15" fill="rgb(213,159,5)"/><text x="37.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 1.23%)</title><rect x="34" y="212" width="14" height="15" fill="rgb(206,37,4)"/><text x="37.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 1.23%)</title><rect x="34" y="228" width="14" height="15" fill="rgb(219,206,30)"/><text x="37.00" y="238.50"></text></g><g><title>0x7fa5e86d39dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="39" y="244" width="9" height="15" fill="rgb(215,220,31)"/><text x="42.00" y="254.50"></text></g><g><title>0x7fa5e86f4265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="39" y="260" width="9" height="15" fill="rgb(207,169,12)"/><text x="42.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.41%)</title><rect x="43" y="276" width="5" height="15" fill="rgb(216,164,41)"/><text x="46.00" y="286.50"></text></g><g><title>0x7fa5fd5bcc07 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="43" y="292" width="5" height="15" fill="rgb(208,229,48)"/><text x="46.00" y="302.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:18) (7 samples, 2.87%)</title><rect x="19" y="100" width="34" height="15" fill="rgb(244,221,20)"/><text x="22.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 2.87%)</title><rect x="19" y="116" width="34" height="15" fill="rgb(244,72,13)"/><text x="22.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (7 samples, 2.87%)</title><rect x="19" y="132" width="34" height="15" fill="rgb(207,210,48)"/><text x="22.00" y="142.50">&lt;l..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (7 samples, 2.87%)</title><rect x="19" y="148" width="34" height="15" fill="rgb(226,208,21)"/><text x="22.00" y="158.50">pr..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (1 samples, 0.41%)</title><rect x="48" y="164" width="5" height="15" fill="rgb(215,156,7)"/><text x="51.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.41%)</title><rect x="68" y="164" width="4" height="15" fill="rgb(232,156,10)"/><text x="71.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.41%)</title><rect x="72" y="164" width="5" height="15" fill="rgb(233,37,26)"/><text x="75.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.41%)</title><rect x="77" y="180" width="5" height="15" fill="rgb(209,99,42)"/><text x="80.00" y="190.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (4 samples, 1.64%)</title><rect x="68" y="148" width="19" height="15" fill="rgb(228,203,43)"/><text x="71.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.82%)</title><rect x="77" y="164" width="10" height="15" fill="rgb(232,197,33)"/><text x="80.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.41%)</title><rect x="82" y="180" width="5" height="15" fill="rgb(247,223,27)"/><text x="85.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.41%)</title><rect x="82" y="196" width="5" height="15" fill="rgb(235,0,10)"/><text x="85.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.41%)</title><rect x="87" y="148" width="5" height="15" fill="rgb(254,161,34)"/><text x="90.00" y="158.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1646) (1 samples, 0.41%)</title><rect x="92" y="148" width="5" height="15" fill="rgb(252,104,13)"/><text x="95.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.41%)</title><rect x="97" y="212" width="4" height="15" fill="rgb(239,76,2)"/><text x="100.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (2 samples, 0.82%)</title><rect x="97" y="180" width="9" height="15" fill="rgb(251,9,54)"/><text x="100.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.82%)</title><rect x="97" y="196" width="9" height="15" fill="rgb(208,193,51)"/><text x="100.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.41%)</title><rect x="101" y="212" width="5" height="15" fill="rgb(223,0,33)"/><text x="104.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.41%)</title><rect x="101" y="228" width="5" height="15" fill="rgb(205,217,24)"/><text x="104.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.41%)</title><rect x="111" y="196" width="5" height="15" fill="rgb(232,20,46)"/><text x="114.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.41%)</title><rect x="111" y="212" width="5" height="15" fill="rgb(249,35,48)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.82%)</title><rect x="116" y="196" width="10" height="15" fill="rgb(216,97,43)"/><text x="119.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.82%)</title><rect x="130" y="228" width="10" height="15" fill="rgb(236,14,49)"/><text x="133.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.64%)</title><rect x="126" y="196" width="19" height="15" fill="rgb(242,175,9)"/><text x="129.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.23%)</title><rect x="130" y="212" width="15" height="15" fill="rgb(250,174,17)"/><text x="133.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.41%)</title><rect x="140" y="228" width="5" height="15" fill="rgb(228,127,42)"/><text x="143.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.23%)</title><rect x="145" y="196" width="14" height="15" fill="rgb(216,169,23)"/><text x="148.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.41%)</title><rect x="155" y="212" width="4" height="15" fill="rgb(212,229,52)"/><text x="158.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.82%)</title><rect x="159" y="196" width="10" height="15" fill="rgb(249,77,21)"/><text x="162.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.41%)</title><rect x="164" y="212" width="5" height="15" fill="rgb(227,3,0)"/><text x="167.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.41%)</title><rect x="169" y="196" width="5" height="15" fill="rgb(209,218,16)"/><text x="172.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.41%)</title><rect x="169" y="212" width="5" height="15" fill="rgb(238,112,26)"/><text x="172.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.41%)</title><rect x="174" y="196" width="5" height="15" fill="rgb(231,119,19)"/><text x="177.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.41%)</title><rect x="174" y="212" width="5" height="15" fill="rgb(241,214,14)"/><text x="177.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.41%)</title><rect x="174" y="228" width="5" height="15" fill="rgb(209,65,12)"/><text x="177.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (17 samples, 6.97%)</title><rect x="106" y="180" width="82" height="15" fill="rgb(210,128,6)"/><text x="109.00" y="190.50">decision_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.82%)</title><rect x="179" y="196" width="9" height="15" fill="rgb(239,73,51)"/><text x="182.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.41%)</title><rect x="184" y="212" width="4" height="15" fill="rgb(212,209,45)"/><text x="187.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.41%)</title><rect x="188" y="228" width="5" height="15" fill="rgb(231,35,0)"/><text x="191.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.41%)</title><rect x="188" y="244" width="5" height="15" fill="rgb(244,216,16)"/><text x="191.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.41%)</title><rect x="193" y="228" width="5" height="15" fill="rgb(237,51,41)"/><text x="196.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.41%)</title><rect x="193" y="244" width="5" height="15" fill="rgb(246,134,54)"/><text x="196.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.41%)</title><rect x="193" y="260" width="5" height="15" fill="rgb(219,63,40)"/><text x="196.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.41%)</title><rect x="198" y="260" width="5" height="15" fill="rgb(219,210,52)"/><text x="201.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.41%)</title><rect x="198" y="276" width="5" height="15" fill="rgb(241,223,53)"/><text x="201.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1466) (1 samples, 0.41%)</title><rect x="198" y="292" width="5" height="15" fill="rgb(240,227,11)"/><text x="201.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.41%)</title><rect x="203" y="292" width="5" height="15" fill="rgb(236,128,54)"/><text x="206.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.82%)</title><rect x="203" y="260" width="10" height="15" fill="rgb(205,112,8)"/><text x="206.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.82%)</title><rect x="203" y="276" width="10" height="15" fill="rgb(254,167,54)"/><text x="206.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.41%)</title><rect x="208" y="292" width="5" height="15" fill="rgb(211,46,24)"/><text x="211.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.41%)</title><rect x="208" y="308" width="5" height="15" fill="rgb(205,152,1)"/><text x="211.00" y="318.50"></text></g><g><title>0x7fa5fd40ad6f (libc-2.29.so) (1 samples, 0.41%)</title><rect x="208" y="324" width="5" height="15" fill="rgb(216,225,4)"/><text x="211.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.87%)</title><rect x="188" y="212" width="34" height="15" fill="rgb(243,196,11)"/><text x="191.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.05%)</title><rect x="198" y="228" width="24" height="15" fill="rgb(250,219,5)"/><text x="201.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 2.05%)</title><rect x="198" y="244" width="24" height="15" fill="rgb(226,42,53)"/><text x="201.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.82%)</title><rect x="213" y="260" width="9" height="15" fill="rgb(246,181,4)"/><text x="216.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.82%)</title><rect x="213" y="276" width="9" height="15" fill="rgb(234,162,45)"/><text x="216.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.82%)</title><rect x="213" y="292" width="9" height="15" fill="rgb(247,116,49)"/><text x="216.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.82%)</title><rect x="213" y="308" width="9" height="15" fill="rgb(254,52,41)"/><text x="216.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.82%)</title><rect x="213" y="324" width="9" height="15" fill="rgb(251,31,49)"/><text x="216.00" y="334.50"></text></g><g><title>array_add (number.c:330) (8 samples, 3.28%)</title><rect x="188" y="196" width="39" height="15" fill="rgb(215,21,4)"/><text x="191.00" y="206.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.41%)</title><rect x="222" y="212" width="5" height="15" fill="rgb(219,47,39)"/><text x="225.00" y="222.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:470) (1 samples, 0.41%)</title><rect x="222" y="228" width="5" height="15" fill="rgb(209,100,36)"/><text x="225.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.41%)</title><rect x="227" y="196" width="5" height="15" fill="rgb(209,169,17)"/><text x="230.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.41%)</title><rect x="227" y="212" width="5" height="15" fill="rgb(220,99,49)"/><text x="230.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.41%)</title><rect x="227" y="228" width="5" height="15" fill="rgb(210,139,4)"/><text x="230.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.41%)</title><rect x="232" y="196" width="5" height="15" fill="rgb(212,98,35)"/><text x="235.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.41%)</title><rect x="237" y="212" width="5" height="15" fill="rgb(218,218,17)"/><text x="240.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 7.79%)</title><rect x="242" y="212" width="92" height="15" fill="rgb(250,97,27)"/><text x="245.00" y="222.50">dgemm_kern..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.41%)</title><rect x="334" y="244" width="4" height="15" fill="rgb(244,128,19)"/><text x="337.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.41%)</title><rect x="334" y="260" width="4" height="15" fill="rgb(254,117,20)"/><text x="337.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:256) (1 samples, 0.41%)</title><rect x="334" y="276" width="4" height="15" fill="rgb(228,21,52)"/><text x="337.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3003) (1 samples, 0.41%)</title><rect x="338" y="244" width="5" height="15" fill="rgb(253,92,23)"/><text x="341.00" y="254.50"></text></g><g><title>0x7fa5fc60cd70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="338" y="260" width="5" height="15" fill="rgb(214,166,16)"/><text x="341.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (37 samples, 15.16%)</title><rect x="237" y="196" width="179" height="15" fill="rgb(250,93,46)"/><text x="240.00" y="206.50">safe_sparse_dot (sklear..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 6.97%)</title><rect x="334" y="212" width="82" height="15" fill="rgb(226,22,8)"/><text x="337.00" y="222.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 6.97%)</title><rect x="334" y="228" width="82" height="15" fill="rgb(248,80,12)"/><text x="337.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (15 samples, 6.15%)</title><rect x="343" y="244" width="73" height="15" fill="rgb(211,1,36)"/><text x="346.00" y="254.50">PyUFunc_..</text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (15 samples, 6.15%)</title><rect x="343" y="260" width="73" height="15" fill="rgb(229,148,53)"/><text x="346.00" y="270.50">DOUBLE_m..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 6.15%)</title><rect x="343" y="276" width="73" height="15" fill="rgb(244,139,38)"/><text x="346.00" y="286.50">cblas_dg..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 6.15%)</title><rect x="343" y="292" width="73" height="15" fill="rgb(231,67,13)"/><text x="346.00" y="302.50">dgemm_nn..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 5.74%)</title><rect x="348" y="308" width="68" height="15" fill="rgb(207,62,25)"/><text x="351.00" y="318.50">dgemm_o..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (67 samples, 27.46%)</title><rect x="97" y="164" width="324" height="15" fill="rgb(222,87,40)"/><text x="100.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_ba..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (48 samples, 19.67%)</title><rect x="188" y="180" width="233" height="15" fill="rgb(248,141,18)"/><text x="191.00" y="190.50">decision_function (sklearn/lin..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.41%)</title><rect x="416" y="196" width="5" height="15" fill="rgb(209,156,10)"/><text x="419.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.41%)</title><rect x="421" y="212" width="4" height="15" fill="rgb(224,37,14)"/><text x="424.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.41%)</title><rect x="421" y="228" width="4" height="15" fill="rgb(250,216,31)"/><text x="424.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.41%)</title><rect x="421" y="244" width="4" height="15" fill="rgb(210,33,0)"/><text x="424.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.41%)</title><rect x="421" y="260" width="4" height="15" fill="rgb(227,75,45)"/><text x="424.00" y="270.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.41%)</title><rect x="421" y="276" width="4" height="15" fill="rgb(209,100,40)"/><text x="424.00" y="286.50"></text></g><g><title>0x7fa5e86f4254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="425" y="260" width="5" height="15" fill="rgb(229,71,44)"/><text x="428.00" y="270.50"></text></g><g><title>0x7fa5e86b1fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="430" y="276" width="5" height="15" fill="rgb(227,219,51)"/><text x="433.00" y="286.50"></text></g><g><title>0x7fa5fd5bcc07 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="459" y="292" width="5" height="15" fill="rgb(216,152,40)"/><text x="462.00" y="302.50"></text></g><g><title>0x7fa5fd5bcc18 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="464" y="292" width="5" height="15" fill="rgb(243,193,32)"/><text x="467.00" y="302.50"></text></g><g><title>0x7fa5fd5bcc2e (libm-2.29.so) (1 samples, 0.41%)</title><rect x="469" y="292" width="5" height="15" fill="rgb(250,31,17)"/><text x="472.00" y="302.50"></text></g><g><title>0x7fa5e86f4265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 4.51%)</title><rect x="430" y="260" width="53" height="15" fill="rgb(211,51,53)"/><text x="433.00" y="270.50">0x7fa..</text></g><g><title>exp (libm-2.29.so) (10 samples, 4.10%)</title><rect x="435" y="276" width="48" height="15" fill="rgb(232,62,36)"/><text x="438.00" y="286.50">exp ..</text></g><g><title>0x7fa5fd5bcc7b (libm-2.29.so) (2 samples, 0.82%)</title><rect x="474" y="292" width="9" height="15" fill="rgb(213,138,14)"/><text x="477.00" y="302.50"></text></g><g><title>0x7fa5e86f4275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="483" y="260" width="5" height="15" fill="rgb(206,142,27)"/><text x="486.00" y="270.50"></text></g><g><title>0x7fa5e86d39dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.20%)</title><rect x="425" y="244" width="97" height="15" fill="rgb(222,18,18)"/><text x="428.00" y="254.50">0x7fa5e86d3..</text></g><g><title>0x7fa5e86f4279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.87%)</title><rect x="488" y="260" width="34" height="15" fill="rgb(215,32,35)"/><text x="491.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (22 samples, 9.02%)</title><rect x="421" y="164" width="106" height="15" fill="rgb(235,220,46)"/><text x="424.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (22 samples, 9.02%)</title><rect x="421" y="180" width="106" height="15" fill="rgb(224,96,41)"/><text x="424.00" y="190.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (22 samples, 9.02%)</title><rect x="421" y="196" width="106" height="15" fill="rgb(213,229,44)"/><text x="424.00" y="206.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (21 samples, 8.61%)</title><rect x="425" y="212" width="102" height="15" fill="rgb(241,193,4)"/><text x="428.00" y="222.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (21 samples, 8.61%)</title><rect x="425" y="228" width="102" height="15" fill="rgb(218,201,43)"/><text x="428.00" y="238.50">trivial_two_..</text></g><g><title>0x7fa5e86d39e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="522" y="244" width="5" height="15" fill="rgb(206,173,7)"/><text x="525.00" y="254.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.41%)</title><rect x="527" y="180" width="5" height="15" fill="rgb(226,187,20)"/><text x="530.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.41%)</title><rect x="527" y="196" width="5" height="15" fill="rgb(241,212,48)"/><text x="530.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.41%)</title><rect x="527" y="212" width="5" height="15" fill="rgb(221,225,32)"/><text x="530.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.41%)</title><rect x="527" y="228" width="5" height="15" fill="rgb(246,143,50)"/><text x="530.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.41%)</title><rect x="527" y="244" width="5" height="15" fill="rgb(242,53,14)"/><text x="530.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.41%)</title><rect x="537" y="276" width="4" height="15" fill="rgb(243,229,16)"/><text x="540.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.41%)</title><rect x="537" y="292" width="4" height="15" fill="rgb(252,30,32)"/><text x="540.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.41%)</title><rect x="537" y="308" width="4" height="15" fill="rgb(221,228,49)"/><text x="540.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.41%)</title><rect x="537" y="324" width="4" height="15" fill="rgb(227,69,12)"/><text x="540.00" y="334.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="537" y="340" width="4" height="15" fill="rgb(236,110,38)"/><text x="540.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.41%)</title><rect x="541" y="292" width="5" height="15" fill="rgb(222,71,23)"/><text x="544.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1708) (1 samples, 0.41%)</title><rect x="541" y="308" width="5" height="15" fill="rgb(226,117,12)"/><text x="544.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.41%)</title><rect x="546" y="308" width="5" height="15" fill="rgb(205,129,34)"/><text x="549.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2732) (1 samples, 0.41%)</title><rect x="546" y="324" width="5" height="15" fill="rgb(245,69,0)"/><text x="549.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.23%)</title><rect x="541" y="276" width="15" height="15" fill="rgb(233,186,43)"/><text x="544.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (2 samples, 0.82%)</title><rect x="546" y="292" width="10" height="15" fill="rgb(250,99,33)"/><text x="549.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2260) (1 samples, 0.41%)</title><rect x="551" y="308" width="5" height="15" fill="rgb(254,165,26)"/><text x="554.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.41%)</title><rect x="556" y="292" width="5" height="15" fill="rgb(237,175,3)"/><text x="559.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.41%)</title><rect x="561" y="292" width="5" height="15" fill="rgb(216,194,47)"/><text x="564.00" y="302.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (2 samples, 0.82%)</title><rect x="566" y="324" width="9" height="15" fill="rgb(234,187,18)"/><text x="569.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 1.23%)</title><rect x="566" y="308" width="14" height="15" fill="rgb(210,142,25)"/><text x="569.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1668) (1 samples, 0.41%)</title><rect x="575" y="324" width="5" height="15" fill="rgb(206,123,29)"/><text x="578.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.41%)</title><rect x="580" y="308" width="5" height="15" fill="rgb(240,109,44)"/><text x="583.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (12 samples, 4.92%)</title><rect x="532" y="180" width="58" height="15" fill="rgb(210,4,26)"/><text x="535.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (12 samples, 4.92%)</title><rect x="532" y="196" width="58" height="15" fill="rgb(225,6,17)"/><text x="535.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (11 samples, 4.51%)</title><rect x="537" y="212" width="53" height="15" fill="rgb(248,160,21)"/><text x="540.00" y="222.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 4.51%)</title><rect x="537" y="228" width="53" height="15" fill="rgb(213,208,42)"/><text x="540.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (11 samples, 4.51%)</title><rect x="537" y="244" width="53" height="15" fill="rgb(229,180,34)"/><text x="540.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 4.51%)</title><rect x="537" y="260" width="53" height="15" fill="rgb(235,149,7)"/><text x="540.00" y="270.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 2.87%)</title><rect x="556" y="276" width="34" height="15" fill="rgb(253,217,37)"/><text x="559.00" y="286.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (5 samples, 2.05%)</title><rect x="566" y="292" width="24" height="15" fill="rgb(237,89,54)"/><text x="569.00" y="302.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.41%)</title><rect x="585" y="308" width="5" height="15" fill="rgb(239,170,30)"/><text x="588.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.41%)</title><rect x="590" y="228" width="5" height="15" fill="rgb(208,211,29)"/><text x="593.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.41%)</title><rect x="590" y="244" width="5" height="15" fill="rgb(223,47,38)"/><text x="593.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.41%)</title><rect x="590" y="260" width="5" height="15" fill="rgb(210,37,31)"/><text x="593.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.41%)</title><rect x="590" y="276" width="5" height="15" fill="rgb(239,49,47)"/><text x="593.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.41%)</title><rect x="590" y="292" width="5" height="15" fill="rgb(249,202,5)"/><text x="593.00" y="302.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.41%)</title><rect x="595" y="276" width="5" height="15" fill="rgb(218,56,54)"/><text x="598.00" y="286.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.41%)</title><rect x="595" y="292" width="5" height="15" fill="rgb(233,194,44)"/><text x="598.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 2.46%)</title><rect x="595" y="228" width="29" height="15" fill="rgb(221,65,53)"/><text x="598.00" y="238.50">it..</text></g><g><title>DOUBLE_divide (loops.c.src:1755) (6 samples, 2.46%)</title><rect x="595" y="244" width="29" height="15" fill="rgb(242,224,5)"/><text x="598.00" y="254.50">DO..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (6 samples, 2.46%)</title><rect x="595" y="260" width="29" height="15" fill="rgb(232,42,52)"/><text x="598.00" y="270.50">ru..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 2.05%)</title><rect x="600" y="276" width="24" height="15" fill="rgb(215,73,26)"/><text x="603.00" y="286.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 2.05%)</title><rect x="600" y="292" width="24" height="15" fill="rgb(237,105,54)"/><text x="603.00" y="302.50">_..</text></g><g><title>iterator_loop (ufunc_object.c:1584) (1 samples, 0.41%)</title><rect x="624" y="228" width="5" height="15" fill="rgb(212,6,38)"/><text x="627.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:38) (127 samples, 52.05%)</title><rect x="19" y="52" width="614" height="15" fill="rgb(244,120,52)"/><text x="22.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_doub..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:37) (127 samples, 52.05%)</title><rect x="19" y="68" width="614" height="15" fill="rgb(247,215,0)"/><text x="22.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_d..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:29) (127 samples, 52.05%)</title><rect x="19" y="84" width="614" height="15" fill="rgb(224,123,48)"/><text x="22.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:23) (120 samples, 49.18%)</title><rect x="53" y="100" width="580" height="15" fill="rgb(247,213,28)"/><text x="56.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (119 samples, 48.77%)</title><rect x="58" y="116" width="575" height="15" fill="rgb(241,78,2)"/><text x="61.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (117 samples, 47.95%)</title><rect x="68" y="132" width="565" height="15" fill="rgb(248,145,12)"/><text x="71.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (111 samples, 45.49%)</title><rect x="97" y="148" width="536" height="15" fill="rgb(209,182,43)"/><text x="100.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (22 samples, 9.02%)</title><rect x="527" y="164" width="106" height="15" fill="rgb(241,227,1)"/><text x="530.00" y="174.50">_predict_pro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.69%)</title><rect x="590" y="180" width="43" height="15" fill="rgb(233,227,29)"/><text x="593.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 3.69%)</title><rect x="590" y="196" width="43" height="15" fill="rgb(224,212,11)"/><text x="593.00" y="206.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (9 samples, 3.69%)</title><rect x="590" y="212" width="43" height="15" fill="rgb(227,15,9)"/><text x="593.00" y="222.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c:1587) (1 samples, 0.41%)</title><rect x="629" y="228" width="4" height="15" fill="rgb(233,31,32)"/><text x="632.00" y="238.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.41%)</title><rect x="633" y="148" width="5" height="15" fill="rgb(241,184,22)"/><text x="636.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="164" width="5" height="15" fill="rgb(234,30,14)"/><text x="636.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="180" width="5" height="15" fill="rgb(235,221,34)"/><text x="636.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="196" width="5" height="15" fill="rgb(251,227,34)"/><text x="636.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="212" width="5" height="15" fill="rgb(239,91,33)"/><text x="636.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="228" width="5" height="15" fill="rgb(217,32,35)"/><text x="636.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.41%)</title><rect x="633" y="244" width="5" height="15" fill="rgb(216,139,17)"/><text x="636.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="633" y="260" width="5" height="15" fill="rgb(213,205,41)"/><text x="636.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="276" width="5" height="15" fill="rgb(209,80,22)"/><text x="636.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="292" width="5" height="15" fill="rgb(213,86,40)"/><text x="636.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="308" width="5" height="15" fill="rgb(252,74,14)"/><text x="636.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="324" width="5" height="15" fill="rgb(234,25,12)"/><text x="636.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="340" width="5" height="15" fill="rgb(252,132,17)"/><text x="636.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="356" width="5" height="15" fill="rgb(222,154,37)"/><text x="636.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.41%)</title><rect x="633" y="372" width="5" height="15" fill="rgb(208,78,31)"/><text x="636.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="388" width="5" height="15" fill="rgb(215,177,23)"/><text x="636.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="404" width="5" height="15" fill="rgb(227,189,32)"/><text x="636.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="420" width="5" height="15" fill="rgb(252,35,21)"/><text x="636.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="436" width="5" height="15" fill="rgb(237,103,49)"/><text x="636.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="452" width="5" height="15" fill="rgb(250,40,13)"/><text x="636.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:13) (1 samples, 0.41%)</title><rect x="633" y="468" width="5" height="15" fill="rgb(205,40,6)"/><text x="636.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="484" width="5" height="15" fill="rgb(247,213,21)"/><text x="636.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="500" width="5" height="15" fill="rgb(208,38,1)"/><text x="636.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="516" width="5" height="15" fill="rgb(234,20,13)"/><text x="636.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="532" width="5" height="15" fill="rgb(212,6,36)"/><text x="636.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="548" width="5" height="15" fill="rgb(218,120,24)"/><text x="636.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py:6) (1 samples, 0.41%)</title><rect x="633" y="564" width="5" height="15" fill="rgb(219,86,2)"/><text x="636.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="580" width="5" height="15" fill="rgb(218,198,49)"/><text x="636.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="633" y="596" width="5" height="15" fill="rgb(246,72,0)"/><text x="636.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="633" y="612" width="5" height="15" fill="rgb(250,28,54)"/><text x="636.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="633" y="628" width="5" height="15" fill="rgb(209,26,0)"/><text x="636.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="633" y="644" width="5" height="15" fill="rgb(211,123,5)"/><text x="636.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py:13) (1 samples, 0.41%)</title><rect x="633" y="660" width="5" height="15" fill="rgb(244,89,53)"/><text x="636.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="633" y="676" width="5" height="15" fill="rgb(212,3,3)"/><text x="636.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.41%)</title><rect x="633" y="692" width="5" height="15" fill="rgb(238,221,35)"/><text x="636.00" y="702.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.41%)</title><rect x="633" y="708" width="5" height="15" fill="rgb(206,78,7)"/><text x="636.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.41%)</title><rect x="633" y="724" width="5" height="15" fill="rgb(219,211,8)"/><text x="636.00" y="734.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.41%)</title><rect x="633" y="740" width="5" height="15" fill="rgb(235,74,0)"/><text x="636.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.41%)</title><rect x="633" y="756" width="5" height="15" fill="rgb(205,74,9)"/><text x="636.00" y="766.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.41%)</title><rect x="633" y="772" width="5" height="15" fill="rgb(238,104,40)"/><text x="636.00" y="782.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.41%)</title><rect x="633" y="788" width="5" height="15" fill="rgb(210,213,10)"/><text x="636.00" y="798.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.41%)</title><rect x="633" y="804" width="5" height="15" fill="rgb(235,194,18)"/><text x="636.00" y="814.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="633" y="820" width="5" height="15" fill="rgb(239,30,5)"/><text x="636.00" y="830.50"></text></g><g><title>0x7fa5fd400e7e (libc-2.29.so) (1 samples, 0.41%)</title><rect x="633" y="836" width="5" height="15" fill="rgb(248,125,1)"/><text x="636.00" y="846.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.41%)</title><rect x="638" y="964" width="5" height="15" fill="rgb(243,168,49)"/><text x="641.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.41%)</title><rect x="638" y="980" width="5" height="15" fill="rgb(241,113,8)"/><text x="641.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="638" y="996" width="5" height="15" fill="rgb(238,7,1)"/><text x="641.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.41%)</title><rect x="638" y="1012" width="5" height="15" fill="rgb(247,210,1)"/><text x="641.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (2 samples, 0.82%)</title><rect x="638" y="148" width="10" height="15" fill="rgb(234,120,21)"/><text x="641.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="164" width="10" height="15" fill="rgb(251,146,38)"/><text x="641.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="638" y="180" width="10" height="15" fill="rgb(227,7,7)"/><text x="641.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="196" width="10" height="15" fill="rgb(209,149,44)"/><text x="641.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="212" width="10" height="15" fill="rgb(214,30,42)"/><text x="641.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="228" width="10" height="15" fill="rgb(252,116,23)"/><text x="641.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="244" width="10" height="15" fill="rgb(225,181,8)"/><text x="641.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="260" width="10" height="15" fill="rgb(229,170,43)"/><text x="641.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="276" width="10" height="15" fill="rgb(234,20,51)"/><text x="641.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.82%)</title><rect x="638" y="292" width="10" height="15" fill="rgb(223,161,5)"/><text x="641.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="308" width="10" height="15" fill="rgb(253,61,46)"/><text x="641.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="324" width="10" height="15" fill="rgb(212,41,32)"/><text x="641.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="340" width="10" height="15" fill="rgb(210,26,26)"/><text x="641.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="356" width="10" height="15" fill="rgb(245,227,42)"/><text x="641.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="372" width="10" height="15" fill="rgb(244,47,40)"/><text x="641.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.82%)</title><rect x="638" y="388" width="10" height="15" fill="rgb(254,201,24)"/><text x="641.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="404" width="10" height="15" fill="rgb(219,32,50)"/><text x="641.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="420" width="10" height="15" fill="rgb(246,133,39)"/><text x="641.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="436" width="10" height="15" fill="rgb(223,213,36)"/><text x="641.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="452" width="10" height="15" fill="rgb(213,56,21)"/><text x="641.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="468" width="10" height="15" fill="rgb(251,128,52)"/><text x="641.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.82%)</title><rect x="638" y="484" width="10" height="15" fill="rgb(222,213,16)"/><text x="641.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="500" width="10" height="15" fill="rgb(252,91,41)"/><text x="641.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="516" width="10" height="15" fill="rgb(224,45,39)"/><text x="641.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="532" width="10" height="15" fill="rgb(234,20,26)"/><text x="641.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="548" width="10" height="15" fill="rgb(216,111,2)"/><text x="641.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="564" width="10" height="15" fill="rgb(235,137,18)"/><text x="641.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.82%)</title><rect x="638" y="580" width="10" height="15" fill="rgb(250,45,6)"/><text x="641.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="596" width="10" height="15" fill="rgb(229,130,39)"/><text x="641.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="638" y="612" width="10" height="15" fill="rgb(237,40,8)"/><text x="641.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="628" width="10" height="15" fill="rgb(216,52,32)"/><text x="641.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="644" width="10" height="15" fill="rgb(207,35,41)"/><text x="641.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="660" width="10" height="15" fill="rgb(230,47,39)"/><text x="641.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="676" width="10" height="15" fill="rgb(239,156,16)"/><text x="641.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="692" width="10" height="15" fill="rgb(229,108,1)"/><text x="641.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="708" width="10" height="15" fill="rgb(205,158,27)"/><text x="641.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.82%)</title><rect x="638" y="724" width="10" height="15" fill="rgb(236,152,12)"/><text x="641.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="638" y="740" width="10" height="15" fill="rgb(228,81,16)"/><text x="641.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="638" y="756" width="10" height="15" fill="rgb(205,147,51)"/><text x="641.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="638" y="772" width="10" height="15" fill="rgb(205,117,31)"/><text x="641.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="638" y="788" width="10" height="15" fill="rgb(214,98,6)"/><text x="641.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="638" y="804" width="10" height="15" fill="rgb(227,228,7)"/><text x="641.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.82%)</title><rect x="638" y="820" width="10" height="15" fill="rgb(247,103,8)"/><text x="641.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.82%)</title><rect x="638" y="836" width="10" height="15" fill="rgb(222,134,42)"/><text x="641.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.82%)</title><rect x="638" y="852" width="10" height="15" fill="rgb(218,120,34)"/><text x="641.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.82%)</title><rect x="638" y="868" width="10" height="15" fill="rgb(226,138,50)"/><text x="641.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.82%)</title><rect x="638" y="884" width="10" height="15" fill="rgb(215,68,9)"/><text x="641.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.82%)</title><rect x="638" y="900" width="10" height="15" fill="rgb(227,20,17)"/><text x="641.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.82%)</title><rect x="638" y="916" width="10" height="15" fill="rgb(205,182,25)"/><text x="641.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.82%)</title><rect x="638" y="932" width="10" height="15" fill="rgb(233,229,39)"/><text x="641.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.82%)</title><rect x="638" y="948" width="10" height="15" fill="rgb(237,161,7)"/><text x="641.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.41%)</title><rect x="643" y="964" width="5" height="15" fill="rgb(219,194,38)"/><text x="646.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.41%)</title><rect x="643" y="980" width="5" height="15" fill="rgb(208,222,13)"/><text x="646.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.41%)</title><rect x="643" y="996" width="5" height="15" fill="rgb(219,21,26)"/><text x="646.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.41%)</title><rect x="643" y="1012" width="5" height="15" fill="rgb(251,223,5)"/><text x="646.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.41%)</title><rect x="643" y="1028" width="5" height="15" fill="rgb(222,129,33)"/><text x="646.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.41%)</title><rect x="643" y="1044" width="5" height="15" fill="rgb(249,211,40)"/><text x="646.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (1 samples, 0.41%)</title><rect x="648" y="148" width="5" height="15" fill="rgb(210,86,42)"/><text x="651.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="164" width="5" height="15" fill="rgb(237,220,11)"/><text x="651.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="648" y="180" width="5" height="15" fill="rgb(210,139,37)"/><text x="651.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="196" width="5" height="15" fill="rgb(254,205,32)"/><text x="651.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="212" width="5" height="15" fill="rgb(228,62,7)"/><text x="651.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="228" width="5" height="15" fill="rgb(243,141,15)"/><text x="651.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="244" width="5" height="15" fill="rgb(208,19,16)"/><text x="651.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="260" width="5" height="15" fill="rgb(248,128,44)"/><text x="651.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="276" width="5" height="15" fill="rgb(215,49,18)"/><text x="651.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.41%)</title><rect x="648" y="292" width="5" height="15" fill="rgb(227,79,33)"/><text x="651.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="308" width="5" height="15" fill="rgb(239,92,6)"/><text x="651.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="324" width="5" height="15" fill="rgb(248,223,9)"/><text x="651.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="340" width="5" height="15" fill="rgb(231,33,51)"/><text x="651.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="356" width="5" height="15" fill="rgb(217,195,49)"/><text x="651.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="372" width="5" height="15" fill="rgb(209,55,46)"/><text x="651.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.41%)</title><rect x="648" y="388" width="5" height="15" fill="rgb(206,224,20)"/><text x="651.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="404" width="5" height="15" fill="rgb(250,191,13)"/><text x="651.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="420" width="5" height="15" fill="rgb(236,160,2)"/><text x="651.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="436" width="5" height="15" fill="rgb(235,139,27)"/><text x="651.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="452" width="5" height="15" fill="rgb(206,62,22)"/><text x="651.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="468" width="5" height="15" fill="rgb(252,212,26)"/><text x="651.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.41%)</title><rect x="648" y="484" width="5" height="15" fill="rgb(238,5,5)"/><text x="651.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="500" width="5" height="15" fill="rgb(234,191,5)"/><text x="651.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="516" width="5" height="15" fill="rgb(224,71,26)"/><text x="651.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="532" width="5" height="15" fill="rgb(208,27,15)"/><text x="651.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="548" width="5" height="15" fill="rgb(221,80,49)"/><text x="651.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="564" width="5" height="15" fill="rgb(249,131,2)"/><text x="651.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.41%)</title><rect x="648" y="580" width="5" height="15" fill="rgb(225,10,38)"/><text x="651.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="596" width="5" height="15" fill="rgb(205,29,5)"/><text x="651.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="612" width="5" height="15" fill="rgb(244,83,34)"/><text x="651.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="628" width="5" height="15" fill="rgb(224,81,45)"/><text x="651.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="644" width="5" height="15" fill="rgb(230,67,18)"/><text x="651.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="660" width="5" height="15" fill="rgb(235,8,31)"/><text x="651.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.41%)</title><rect x="648" y="676" width="5" height="15" fill="rgb(241,229,0)"/><text x="651.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="692" width="5" height="15" fill="rgb(244,142,5)"/><text x="651.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="708" width="5" height="15" fill="rgb(215,51,46)"/><text x="651.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="724" width="5" height="15" fill="rgb(252,228,21)"/><text x="651.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="740" width="5" height="15" fill="rgb(230,53,4)"/><text x="651.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="756" width="5" height="15" fill="rgb(215,212,50)"/><text x="651.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.41%)</title><rect x="648" y="772" width="5" height="15" fill="rgb(227,12,27)"/><text x="651.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="648" y="788" width="5" height="15" fill="rgb(210,86,45)"/><text x="651.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="804" width="5" height="15" fill="rgb(235,38,53)"/><text x="651.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="820" width="5" height="15" fill="rgb(250,188,18)"/><text x="651.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="836" width="5" height="15" fill="rgb(250,73,42)"/><text x="651.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="852" width="5" height="15" fill="rgb(236,146,1)"/><text x="651.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="868" width="5" height="15" fill="rgb(205,48,17)"/><text x="651.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="884" width="5" height="15" fill="rgb(225,141,13)"/><text x="651.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.41%)</title><rect x="648" y="900" width="5" height="15" fill="rgb(228,181,3)"/><text x="651.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="648" y="916" width="5" height="15" fill="rgb(215,36,3)"/><text x="651.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="932" width="5" height="15" fill="rgb(224,10,22)"/><text x="651.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="948" width="5" height="15" fill="rgb(234,155,1)"/><text x="651.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="964" width="5" height="15" fill="rgb(228,9,7)"/><text x="651.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="980" width="5" height="15" fill="rgb(226,80,42)"/><text x="651.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="996" width="5" height="15" fill="rgb(226,194,35)"/><text x="651.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="1012" width="5" height="15" fill="rgb(246,213,53)"/><text x="651.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.41%)</title><rect x="648" y="1028" width="5" height="15" fill="rgb(228,4,9)"/><text x="651.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="648" y="1044" width="5" height="15" fill="rgb(218,68,30)"/><text x="651.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="1060" width="5" height="15" fill="rgb(224,192,41)"/><text x="651.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="1076" width="5" height="15" fill="rgb(233,20,41)"/><text x="651.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="1092" width="5" height="15" fill="rgb(226,14,25)"/><text x="651.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="1108" width="5" height="15" fill="rgb(222,159,35)"/><text x="651.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="1124" width="5" height="15" fill="rgb(211,25,9)"/><text x="651.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="1140" width="5" height="15" fill="rgb(206,178,31)"/><text x="651.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.41%)</title><rect x="648" y="1156" width="5" height="15" fill="rgb(214,45,48)"/><text x="651.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="1172" width="5" height="15" fill="rgb(217,90,7)"/><text x="651.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="1188" width="5" height="15" fill="rgb(224,127,17)"/><text x="651.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="1204" width="5" height="15" fill="rgb(231,177,37)"/><text x="651.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="1220" width="5" height="15" fill="rgb(208,192,33)"/><text x="651.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="1236" width="5" height="15" fill="rgb(219,170,47)"/><text x="651.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:25) (1 samples, 0.41%)</title><rect x="648" y="1252" width="5" height="15" fill="rgb(216,11,32)"/><text x="651.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="648" y="1268" width="5" height="15" fill="rgb(213,161,46)"/><text x="651.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="648" y="1284" width="5" height="15" fill="rgb(237,135,28)"/><text x="651.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="648" y="1300" width="5" height="15" fill="rgb(231,176,31)"/><text x="651.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="648" y="1316" width="5" height="15" fill="rgb(221,41,21)"/><text x="651.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="648" y="1332" width="5" height="15" fill="rgb(241,18,16)"/><text x="651.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/fitpack2.py:24) (1 samples, 0.41%)</title><rect x="648" y="1348" width="5" height="15" fill="rgb(214,208,12)"/><text x="651.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.41%)</title><rect x="653" y="436" width="5" height="15" fill="rgb(238,107,27)"/><text x="656.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="653" y="452" width="5" height="15" fill="rgb(223,210,1)"/><text x="656.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="653" y="468" width="5" height="15" fill="rgb(231,153,5)"/><text x="656.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="653" y="484" width="5" height="15" fill="rgb(220,119,23)"/><text x="656.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="653" y="500" width="5" height="15" fill="rgb(222,63,19)"/><text x="656.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="653" y="516" width="5" height="15" fill="rgb(245,197,3)"/><text x="656.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.41%)</title><rect x="653" y="532" width="5" height="15" fill="rgb(233,169,44)"/><text x="656.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="653" y="548" width="5" height="15" fill="rgb(243,69,4)"/><text x="656.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="653" y="564" width="5" height="15" fill="rgb(211,120,52)"/><text x="656.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="653" y="580" width="5" height="15" fill="rgb(216,115,20)"/><text x="656.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="653" y="596" width="5" height="15" fill="rgb(212,135,18)"/><text x="656.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="653" y="612" width="5" height="15" fill="rgb(244,46,34)"/><text x="656.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.41%)</title><rect x="653" y="628" width="5" height="15" fill="rgb(245,33,2)"/><text x="656.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="653" y="644" width="5" height="15" fill="rgb(229,95,12)"/><text x="656.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="653" y="660" width="5" height="15" fill="rgb(230,152,33)"/><text x="656.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="653" y="676" width="5" height="15" fill="rgb(213,17,3)"/><text x="656.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="653" y="692" width="5" height="15" fill="rgb(231,11,52)"/><text x="656.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="653" y="708" width="5" height="15" fill="rgb(219,93,27)"/><text x="656.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:11) (1 samples, 0.41%)</title><rect x="653" y="724" width="5" height="15" fill="rgb(225,157,22)"/><text x="656.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="653" y="740" width="5" height="15" fill="rgb(239,69,53)"/><text x="656.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="653" y="756" width="5" height="15" fill="rgb(212,159,46)"/><text x="656.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="653" y="772" width="5" height="15" fill="rgb(248,202,12)"/><text x="656.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="653" y="788" width="5" height="15" fill="rgb(252,88,16)"/><text x="656.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="653" y="804" width="5" height="15" fill="rgb(248,53,36)"/><text x="656.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/html.py:57) (1 samples, 0.41%)</title><rect x="653" y="820" width="5" height="15" fill="rgb(216,24,20)"/><text x="656.00" y="830.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="653" y="836" width="5" height="15" fill="rgb(248,9,36)"/><text x="656.00" y="846.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="653" y="852" width="5" height="15" fill="rgb(215,136,1)"/><text x="656.00" y="862.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.41%)</title><rect x="653" y="868" width="5" height="15" fill="rgb(235,113,37)"/><text x="656.00" y="878.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.41%)</title><rect x="653" y="884" width="5" height="15" fill="rgb(254,109,48)"/><text x="656.00" y="894.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.41%)</title><rect x="653" y="900" width="5" height="15" fill="rgb(206,138,19)"/><text x="656.00" y="910.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.41%)</title><rect x="653" y="916" width="5" height="15" fill="rgb(208,55,26)"/><text x="656.00" y="926.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.41%)</title><rect x="653" y="932" width="5" height="15" fill="rgb(239,59,36)"/><text x="656.00" y="942.50"></text></g><g><title>_optimize_charset (sre_compile.py:340) (1 samples, 0.41%)</title><rect x="653" y="948" width="5" height="15" fill="rgb(247,200,13)"/><text x="656.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.41%)</title><rect x="658" y="1108" width="4" height="15" fill="rgb(223,48,32)"/><text x="661.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="658" y="1124" width="4" height="15" fill="rgb(252,184,3)"/><text x="661.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="658" y="1140" width="4" height="15" fill="rgb(243,183,7)"/><text x="661.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="658" y="1156" width="4" height="15" fill="rgb(248,25,28)"/><text x="661.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="658" y="1172" width="4" height="15" fill="rgb(220,125,49)"/><text x="661.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="658" y="1188" width="4" height="15" fill="rgb(216,42,34)"/><text x="661.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.41%)</title><rect x="658" y="1204" width="4" height="15" fill="rgb(235,222,23)"/><text x="661.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="658" y="1220" width="4" height="15" fill="rgb(234,29,11)"/><text x="661.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="658" y="1236" width="4" height="15" fill="rgb(209,185,31)"/><text x="661.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="658" y="1252" width="4" height="15" fill="rgb(221,60,31)"/><text x="661.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="658" y="1268" width="4" height="15" fill="rgb(237,17,27)"/><text x="661.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="658" y="1284" width="4" height="15" fill="rgb(207,139,23)"/><text x="661.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.41%)</title><rect x="658" y="1300" width="4" height="15" fill="rgb(205,72,1)"/><text x="661.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.41%)</title><rect x="658" y="1316" width="4" height="15" fill="rgb(248,82,30)"/><text x="661.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.41%)</title><rect x="658" y="1332" width="4" height="15" fill="rgb(242,27,10)"/><text x="661.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.41%)</title><rect x="658" y="1348" width="4" height="15" fill="rgb(227,17,26)"/><text x="661.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.41%)</title><rect x="658" y="1364" width="4" height="15" fill="rgb(208,154,54)"/><text x="661.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.41%)</title><rect x="658" y="1380" width="4" height="15" fill="rgb(233,221,28)"/><text x="661.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.41%)</title><rect x="658" y="1396" width="4" height="15" fill="rgb(218,129,4)"/><text x="661.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="658" y="1412" width="4" height="15" fill="rgb(247,57,47)"/><text x="661.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="658" y="1428" width="4" height="15" fill="rgb(236,107,8)"/><text x="661.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.41%)</title><rect x="658" y="1444" width="4" height="15" fill="rgb(216,136,5)"/><text x="661.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.41%)</title><rect x="658" y="1460" width="4" height="15" fill="rgb(208,227,21)"/><text x="661.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="658" y="1476" width="4" height="15" fill="rgb(230,206,12)"/><text x="661.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.41%)</title><rect x="658" y="1492" width="4" height="15" fill="rgb(240,158,20)"/><text x="661.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="658" y="1508" width="4" height="15" fill="rgb(239,77,33)"/><text x="661.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.41%)</title><rect x="658" y="1524" width="4" height="15" fill="rgb(228,220,29)"/><text x="661.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="658" y="1540" width="4" height="15" fill="rgb(246,156,13)"/><text x="661.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.41%)</title><rect x="658" y="1556" width="4" height="15" fill="rgb(235,158,29)"/><text x="661.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="658" y="1572" width="4" height="15" fill="rgb(230,224,7)"/><text x="661.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.41%)</title><rect x="658" y="1588" width="4" height="15" fill="rgb(242,143,24)"/><text x="661.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.41%)</title><rect x="658" y="1604" width="4" height="15" fill="rgb(225,152,3)"/><text x="661.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py:606) (1 samples, 0.41%)</title><rect x="658" y="1620" width="4" height="15" fill="rgb(244,216,32)"/><text x="661.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:4) (7 samples, 2.87%)</title><rect x="633" y="52" width="34" height="15" fill="rgb(247,93,2)"/><text x="636.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.87%)</title><rect x="633" y="68" width="34" height="15" fill="rgb(226,103,13)"/><text x="636.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.87%)</title><rect x="633" y="84" width="34" height="15" fill="rgb(235,171,31)"/><text x="636.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.87%)</title><rect x="633" y="100" width="34" height="15" fill="rgb(227,173,40)"/><text x="636.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.87%)</title><rect x="633" y="116" width="34" height="15" fill="rgb(213,125,9)"/><text x="636.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.87%)</title><rect x="633" y="132" width="34" height="15" fill="rgb(227,186,27)"/><text x="636.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (3 samples, 1.23%)</title><rect x="653" y="148" width="14" height="15" fill="rgb(212,41,50)"/><text x="656.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="653" y="164" width="14" height="15" fill="rgb(253,193,13)"/><text x="656.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="653" y="180" width="14" height="15" fill="rgb(236,136,4)"/><text x="656.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="653" y="196" width="14" height="15" fill="rgb(236,151,42)"/><text x="656.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="653" y="212" width="14" height="15" fill="rgb(230,34,49)"/><text x="656.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="653" y="228" width="14" height="15" fill="rgb(225,107,43)"/><text x="656.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 1.23%)</title><rect x="653" y="244" width="14" height="15" fill="rgb(206,8,3)"/><text x="656.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="653" y="260" width="14" height="15" fill="rgb(228,114,31)"/><text x="656.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="653" y="276" width="14" height="15" fill="rgb(249,36,28)"/><text x="656.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="653" y="292" width="14" height="15" fill="rgb(245,13,0)"/><text x="656.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="653" y="308" width="14" height="15" fill="rgb(233,5,13)"/><text x="656.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="653" y="324" width="14" height="15" fill="rgb(239,72,3)"/><text x="656.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 1.23%)</title><rect x="653" y="340" width="14" height="15" fill="rgb(226,95,8)"/><text x="656.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="653" y="356" width="14" height="15" fill="rgb(220,130,49)"/><text x="656.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="653" y="372" width="14" height="15" fill="rgb(251,93,15)"/><text x="656.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="653" y="388" width="14" height="15" fill="rgb(238,62,34)"/><text x="656.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="653" y="404" width="14" height="15" fill="rgb(206,88,9)"/><text x="656.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="653" y="420" width="14" height="15" fill="rgb(226,170,17)"/><text x="656.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.82%)</title><rect x="658" y="436" width="9" height="15" fill="rgb(224,144,28)"/><text x="661.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="452" width="9" height="15" fill="rgb(224,28,46)"/><text x="661.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="658" y="468" width="9" height="15" fill="rgb(212,87,45)"/><text x="661.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="484" width="9" height="15" fill="rgb(217,165,10)"/><text x="661.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="500" width="9" height="15" fill="rgb(230,32,15)"/><text x="661.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="516" width="9" height="15" fill="rgb(248,73,35)"/><text x="661.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="532" width="9" height="15" fill="rgb(245,147,36)"/><text x="661.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="548" width="9" height="15" fill="rgb(224,44,52)"/><text x="661.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="564" width="9" height="15" fill="rgb(225,116,21)"/><text x="661.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.82%)</title><rect x="658" y="580" width="9" height="15" fill="rgb(221,56,2)"/><text x="661.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="596" width="9" height="15" fill="rgb(219,20,40)"/><text x="661.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="612" width="9" height="15" fill="rgb(235,183,17)"/><text x="661.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="628" width="9" height="15" fill="rgb(208,33,11)"/><text x="661.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="644" width="9" height="15" fill="rgb(243,101,52)"/><text x="661.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="660" width="9" height="15" fill="rgb(250,90,39)"/><text x="661.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.82%)</title><rect x="658" y="676" width="9" height="15" fill="rgb(209,41,28)"/><text x="661.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="692" width="9" height="15" fill="rgb(233,112,12)"/><text x="661.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="708" width="9" height="15" fill="rgb(252,125,32)"/><text x="661.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="724" width="9" height="15" fill="rgb(246,77,32)"/><text x="661.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="740" width="9" height="15" fill="rgb(217,217,42)"/><text x="661.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="756" width="9" height="15" fill="rgb(211,208,25)"/><text x="661.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.82%)</title><rect x="658" y="772" width="9" height="15" fill="rgb(240,51,11)"/><text x="661.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="788" width="9" height="15" fill="rgb(223,206,2)"/><text x="661.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="804" width="9" height="15" fill="rgb(254,176,29)"/><text x="661.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="820" width="9" height="15" fill="rgb(206,216,43)"/><text x="661.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="836" width="9" height="15" fill="rgb(209,212,18)"/><text x="661.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="852" width="9" height="15" fill="rgb(205,137,10)"/><text x="661.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.82%)</title><rect x="658" y="868" width="9" height="15" fill="rgb(228,107,25)"/><text x="661.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="884" width="9" height="15" fill="rgb(232,220,12)"/><text x="661.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="658" y="900" width="9" height="15" fill="rgb(234,7,45)"/><text x="661.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="916" width="9" height="15" fill="rgb(218,23,38)"/><text x="661.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="932" width="9" height="15" fill="rgb(254,93,14)"/><text x="661.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="948" width="9" height="15" fill="rgb(224,139,22)"/><text x="661.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="964" width="9" height="15" fill="rgb(229,134,48)"/><text x="661.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="980" width="9" height="15" fill="rgb(248,99,5)"/><text x="661.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="996" width="9" height="15" fill="rgb(224,152,46)"/><text x="661.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.82%)</title><rect x="658" y="1012" width="9" height="15" fill="rgb(217,92,33)"/><text x="661.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="658" y="1028" width="9" height="15" fill="rgb(249,95,49)"/><text x="661.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="658" y="1044" width="9" height="15" fill="rgb(210,49,43)"/><text x="661.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="658" y="1060" width="9" height="15" fill="rgb(231,25,32)"/><text x="661.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="658" y="1076" width="9" height="15" fill="rgb(215,1,6)"/><text x="661.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="658" y="1092" width="9" height="15" fill="rgb(210,115,24)"/><text x="661.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.41%)</title><rect x="662" y="1108" width="5" height="15" fill="rgb(242,195,27)"/><text x="665.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="662" y="1124" width="5" height="15" fill="rgb(219,176,6)"/><text x="665.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="662" y="1140" width="5" height="15" fill="rgb(247,108,9)"/><text x="665.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="662" y="1156" width="5" height="15" fill="rgb(232,153,7)"/><text x="665.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="662" y="1172" width="5" height="15" fill="rgb(213,228,39)"/><text x="665.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="662" y="1188" width="5" height="15" fill="rgb(253,38,21)"/><text x="665.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="662" y="1204" width="5" height="15" fill="rgb(233,160,26)"/><text x="665.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="662" y="1220" width="5" height="15" fill="rgb(212,161,3)"/><text x="665.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:22) (1 samples, 0.41%)</title><rect x="662" y="1236" width="5" height="15" fill="rgb(251,54,54)"/><text x="665.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="662" y="1252" width="5" height="15" fill="rgb(240,92,54)"/><text x="665.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="662" y="1268" width="5" height="15" fill="rgb(221,178,20)"/><text x="665.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="662" y="1284" width="5" height="15" fill="rgb(237,158,34)"/><text x="665.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.41%)</title><rect x="662" y="1300" width="5" height="15" fill="rgb(242,3,9)"/><text x="665.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.41%)</title><rect x="662" y="1316" width="5" height="15" fill="rgb(209,23,24)"/><text x="665.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.41%)</title><rect x="662" y="1332" width="5" height="15" fill="rgb(222,110,53)"/><text x="665.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.41%)</title><rect x="662" y="1348" width="5" height="15" fill="rgb(246,206,11)"/><text x="665.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.41%)</title><rect x="662" y="1364" width="5" height="15" fill="rgb(244,150,30)"/><text x="665.00" y="1374.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.41%)</title><rect x="662" y="1380" width="5" height="15" fill="rgb(219,47,47)"/><text x="665.00" y="1390.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.41%)</title><rect x="662" y="1396" width="5" height="15" fill="rgb(241,35,53)"/><text x="665.00" y="1406.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:18) (2 samples, 0.82%)</title><rect x="667" y="100" width="10" height="15" fill="rgb(235,156,54)"/><text x="670.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.82%)</title><rect x="667" y="116" width="10" height="15" fill="rgb(216,123,0)"/><text x="670.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.82%)</title><rect x="667" y="132" width="10" height="15" fill="rgb(248,193,23)"/><text x="670.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.82%)</title><rect x="667" y="148" width="10" height="15" fill="rgb(234,87,9)"/><text x="670.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.82%)</title><rect x="667" y="164" width="10" height="15" fill="rgb(245,221,28)"/><text x="670.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.82%)</title><rect x="667" y="180" width="10" height="15" fill="rgb(214,166,4)"/><text x="670.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.41%)</title><rect x="672" y="196" width="5" height="15" fill="rgb(249,216,38)"/><text x="675.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.41%)</title><rect x="672" y="212" width="5" height="15" fill="rgb(241,32,50)"/><text x="675.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (1 samples, 0.41%)</title><rect x="672" y="228" width="5" height="15" fill="rgb(225,96,43)"/><text x="675.00" y="238.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (1 samples, 0.41%)</title><rect x="672" y="244" width="5" height="15" fill="rgb(232,168,51)"/><text x="675.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (1 samples, 0.41%)</title><rect x="672" y="260" width="5" height="15" fill="rgb(229,31,8)"/><text x="675.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.41%)</title><rect x="672" y="276" width="5" height="15" fill="rgb(212,36,40)"/><text x="675.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.41%)</title><rect x="691" y="148" width="5" height="15" fill="rgb(247,113,35)"/><text x="694.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.41%)</title><rect x="706" y="164" width="5" height="15" fill="rgb(212,88,12)"/><text x="709.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.82%)</title><rect x="711" y="180" width="9" height="15" fill="rgb(239,161,33)"/><text x="714.00" y="190.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.41%)</title><rect x="735" y="276" width="5" height="15" fill="rgb(253,35,7)"/><text x="738.00" y="286.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.41%)</title><rect x="735" y="292" width="5" height="15" fill="rgb(224,222,22)"/><text x="738.00" y="302.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.41%)</title><rect x="735" y="308" width="5" height="15" fill="rgb(231,33,42)"/><text x="738.00" y="318.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:362) (1 samples, 0.41%)</title><rect x="735" y="324" width="5" height="15" fill="rgb(212,13,18)"/><text x="738.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.82%)</title><rect x="735" y="212" width="10" height="15" fill="rgb(215,218,5)"/><text x="738.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.82%)</title><rect x="735" y="228" width="10" height="15" fill="rgb(233,177,40)"/><text x="738.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.82%)</title><rect x="735" y="244" width="10" height="15" fill="rgb(249,62,47)"/><text x="738.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.82%)</title><rect x="735" y="260" width="10" height="15" fill="rgb(237,105,36)"/><text x="738.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.41%)</title><rect x="740" y="276" width="5" height="15" fill="rgb(238,192,47)"/><text x="743.00" y="286.50"></text></g><g><title>0x7fa5fc60d2b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="740" y="292" width="5" height="15" fill="rgb(251,190,5)"/><text x="743.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 2.05%)</title><rect x="725" y="196" width="24" height="15" fill="rgb(249,172,26)"/><text x="728.00" y="206.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.41%)</title><rect x="745" y="212" width="4" height="15" fill="rgb(230,126,6)"/><text x="748.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.41%)</title><rect x="745" y="228" width="4" height="15" fill="rgb(235,19,38)"/><text x="748.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.41%)</title><rect x="759" y="324" width="5" height="15" fill="rgb(207,28,4)"/><text x="762.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.41%)</title><rect x="759" y="340" width="5" height="15" fill="rgb(246,204,18)"/><text x="762.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.41%)</title><rect x="764" y="388" width="5" height="15" fill="rgb(230,123,8)"/><text x="767.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.41%)</title><rect x="764" y="404" width="5" height="15" fill="rgb(243,194,2)"/><text x="767.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.82%)</title><rect x="764" y="340" width="10" height="15" fill="rgb(216,126,18)"/><text x="767.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (2 samples, 0.82%)</title><rect x="764" y="356" width="10" height="15" fill="rgb(235,107,29)"/><text x="767.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (2 samples, 0.82%)</title><rect x="764" y="372" width="10" height="15" fill="rgb(233,40,17)"/><text x="767.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.41%)</title><rect x="769" y="388" width="5" height="15" fill="rgb(215,53,37)"/><text x="772.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.41%)</title><rect x="774" y="356" width="4" height="15" fill="rgb(222,14,5)"/><text x="777.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.41%)</title><rect x="774" y="372" width="4" height="15" fill="rgb(251,100,42)"/><text x="777.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.41%)</title><rect x="774" y="388" width="4" height="15" fill="rgb(242,190,36)"/><text x="777.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.41%)</title><rect x="774" y="404" width="4" height="15" fill="rgb(249,46,9)"/><text x="777.00" y="414.50"></text></g><g><title>0x7fa5fd40ad50 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="774" y="420" width="4" height="15" fill="rgb(251,165,52)"/><text x="777.00" y="430.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.41%)</title><rect x="778" y="404" width="5" height="15" fill="rgb(211,202,25)"/><text x="781.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.41%)</title><rect x="778" y="420" width="5" height="15" fill="rgb(246,172,7)"/><text x="781.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:745) (1 samples, 0.41%)</title><rect x="778" y="436" width="5" height="15" fill="rgb(244,53,43)"/><text x="781.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.82%)</title><rect x="778" y="356" width="10" height="15" fill="rgb(249,199,54)"/><text x="781.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.82%)</title><rect x="778" y="372" width="10" height="15" fill="rgb(252,58,28)"/><text x="781.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (2 samples, 0.82%)</title><rect x="778" y="388" width="10" height="15" fill="rgb(249,65,54)"/><text x="781.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3817) (1 samples, 0.41%)</title><rect x="783" y="404" width="5" height="15" fill="rgb(211,105,37)"/><text x="786.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.41%)</title><rect x="788" y="356" width="5" height="15" fill="rgb(250,138,22)"/><text x="791.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.41%)</title><rect x="788" y="372" width="5" height="15" fill="rgb(245,139,30)"/><text x="791.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.41%)</title><rect x="788" y="388" width="5" height="15" fill="rgb(220,154,46)"/><text x="791.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (2 samples, 0.82%)</title><rect x="793" y="372" width="10" height="15" fill="rgb(208,189,12)"/><text x="796.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.41%)</title><rect x="803" y="372" width="4" height="15" fill="rgb(240,189,25)"/><text x="806.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.41%)</title><rect x="807" y="388" width="5" height="15" fill="rgb(207,123,3)"/><text x="810.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.41%)</title><rect x="822" y="404" width="5" height="15" fill="rgb(238,94,47)"/><text x="825.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 1.64%)</title><rect x="812" y="388" width="20" height="15" fill="rgb(226,69,37)"/><text x="815.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.41%)</title><rect x="827" y="404" width="5" height="15" fill="rgb(248,110,28)"/><text x="830.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.41%)</title><rect x="832" y="388" width="4" height="15" fill="rgb(239,85,13)"/><text x="835.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.41%)</title><rect x="836" y="388" width="5" height="15" fill="rgb(240,118,6)"/><text x="839.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.41%)</title><rect x="841" y="388" width="5" height="15" fill="rgb(227,75,40)"/><text x="844.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (9 samples, 3.69%)</title><rect x="807" y="372" width="44" height="15" fill="rgb(217,111,54)"/><text x="810.00" y="382.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.41%)</title><rect x="846" y="388" width="5" height="15" fill="rgb(208,134,28)"/><text x="849.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (20 samples, 8.20%)</title><rect x="759" y="260" width="97" height="15" fill="rgb(229,216,24)"/><text x="762.00" y="270.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c:108) (20 samples, 8.20%)</title><rect x="759" y="276" width="97" height="15" fill="rgb(252,96,50)"/><text x="762.00" y="286.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py:38) (20 samples, 8.20%)</title><rect x="759" y="292" width="97" height="15" fill="rgb(251,109,53)"/><text x="762.00" y="302.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (20 samples, 8.20%)</title><rect x="759" y="308" width="97" height="15" fill="rgb(227,17,27)"/><text x="762.00" y="318.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (19 samples, 7.79%)</title><rect x="764" y="324" width="92" height="15" fill="rgb(217,181,40)"/><text x="767.00" y="334.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (17 samples, 6.97%)</title><rect x="774" y="340" width="82" height="15" fill="rgb(253,43,10)"/><text x="777.00" y="350.50">PyUFunc_R..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (13 samples, 5.33%)</title><rect x="793" y="356" width="63" height="15" fill="rgb(237,213,26)"/><text x="796.00" y="366.50">PyUFun..</text></g><g><title>reduce_loop (ufunc_object.c:3572) (1 samples, 0.41%)</title><rect x="851" y="372" width="5" height="15" fill="rgb(225,89,23)"/><text x="854.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (23 samples, 9.43%)</title><rect x="749" y="244" width="112" height="15" fill="rgb(240,33,19)"/><text x="752.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="856" y="260" width="5" height="15" fill="rgb(225,131,48)"/><text x="859.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.41%)</title><rect x="856" y="276" width="5" height="15" fill="rgb(234,141,8)"/><text x="859.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.41%)</title><rect x="856" y="292" width="5" height="15" fill="rgb(252,219,6)"/><text x="859.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.41%)</title><rect x="856" y="308" width="5" height="15" fill="rgb(222,68,0)"/><text x="859.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src:1985) (1 samples, 0.41%)</title><rect x="856" y="324" width="5" height="15" fill="rgb(212,166,44)"/><text x="859.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src:195) (1 samples, 0.41%)</title><rect x="856" y="340" width="5" height="15" fill="rgb(224,80,22)"/><text x="859.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src:1055) (1 samples, 0.41%)</title><rect x="856" y="356" width="5" height="15" fill="rgb(240,227,30)"/><text x="859.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.23%)</title><rect x="861" y="260" width="14" height="15" fill="rgb(210,37,12)"/><text x="864.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.23%)</title><rect x="861" y="276" width="14" height="15" fill="rgb(238,71,9)"/><text x="864.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 1.23%)</title><rect x="861" y="292" width="14" height="15" fill="rgb(250,83,6)"/><text x="864.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 1.23%)</title><rect x="861" y="308" width="14" height="15" fill="rgb(251,162,11)"/><text x="864.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 1.23%)</title><rect x="861" y="324" width="14" height="15" fill="rgb(228,162,24)"/><text x="864.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 1.23%)</title><rect x="861" y="340" width="14" height="15" fill="rgb(210,28,21)"/><text x="864.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 1.23%)</title><rect x="861" y="356" width="14" height="15" fill="rgb(223,191,13)"/><text x="864.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 1.23%)</title><rect x="861" y="372" width="14" height="15" fill="rgb(250,14,3)"/><text x="864.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (27 samples, 11.07%)</title><rect x="749" y="196" width="131" height="15" fill="rgb(236,218,10)"/><text x="752.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (27 samples, 11.07%)</title><rect x="749" y="212" width="131" height="15" fill="rgb(246,168,48)"/><text x="752.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (27 samples, 11.07%)</title><rect x="749" y="228" width="131" height="15" fill="rgb(225,143,40)"/><text x="752.00" y="238.50">_run (mlprodict/..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (4 samples, 1.64%)</title><rect x="861" y="244" width="19" height="15" fill="rgb(247,10,12)"/><text x="864.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.41%)</title><rect x="875" y="260" width="5" height="15" fill="rgb(215,187,31)"/><text x="878.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.41%)</title><rect x="875" y="276" width="5" height="15" fill="rgb(242,83,27)"/><text x="878.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.23%)</title><rect x="880" y="276" width="15" height="15" fill="rgb(224,164,40)"/><text x="883.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 1.23%)</title><rect x="880" y="292" width="15" height="15" fill="rgb(245,25,35)"/><text x="883.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 1.23%)</title><rect x="880" y="308" width="15" height="15" fill="rgb(245,169,20)"/><text x="883.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 1.23%)</title><rect x="880" y="324" width="15" height="15" fill="rgb(227,137,46)"/><text x="883.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:36) (3 samples, 1.23%)</title><rect x="880" y="340" width="15" height="15" fill="rgb(232,17,0)"/><text x="883.00" y="350.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="880" y="356" width="15" height="15" fill="rgb(223,67,11)"/><text x="883.00" y="366.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="880" y="372" width="15" height="15" fill="rgb(252,67,27)"/><text x="883.00" y="382.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.23%)</title><rect x="880" y="388" width="15" height="15" fill="rgb(222,35,52)"/><text x="883.00" y="398.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.41%)</title><rect x="895" y="276" width="4" height="15" fill="rgb(229,134,6)"/><text x="898.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (19 samples, 7.79%)</title><rect x="880" y="228" width="92" height="15" fill="rgb(207,31,40)"/><text x="883.00" y="238.50">_run (mlpr..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (19 samples, 7.79%)</title><rect x="880" y="244" width="92" height="15" fill="rgb(254,161,22)"/><text x="883.00" y="254.50">numpy_dot_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (19 samples, 7.79%)</title><rect x="880" y="260" width="92" height="15" fill="rgb(248,95,1)"/><text x="883.00" y="270.50">dot (&lt;__ar..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (15 samples, 6.15%)</title><rect x="899" y="276" width="73" height="15" fill="rgb(210,207,52)"/><text x="902.00" y="286.50">dgemm_ke..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.41%)</title><rect x="977" y="260" width="5" height="15" fill="rgb(250,37,44)"/><text x="980.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1081) (1 samples, 0.41%)</title><rect x="977" y="276" width="5" height="15" fill="rgb(208,63,38)"/><text x="980.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (3 samples, 1.23%)</title><rect x="982" y="308" width="14" height="15" fill="rgb(213,163,47)"/><text x="985.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (3 samples, 1.23%)</title><rect x="982" y="324" width="14" height="15" fill="rgb(213,91,49)"/><text x="985.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.23%)</title><rect x="982" y="340" width="14" height="15" fill="rgb(234,169,37)"/><text x="985.00" y="350.50"></text></g><g><title>0x7fa5fd3ebb68 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="991" y="356" width="5" height="15" fill="rgb(230,14,44)"/><text x="994.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.82%)</title><rect x="996" y="340" width="10" height="15" fill="rgb(237,62,36)"/><text x="999.00" y="350.50"></text></g><g><title>0x7fa5fd40ad50 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1011" y="356" width="4" height="15" fill="rgb(217,115,20)"/><text x="1014.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 3.28%)</title><rect x="982" y="276" width="38" height="15" fill="rgb(243,103,54)"/><text x="985.00" y="286.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (8 samples, 3.28%)</title><rect x="982" y="292" width="38" height="15" fill="rgb(218,149,14)"/><text x="985.00" y="302.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 2.05%)</title><rect x="996" y="308" width="24" height="15" fill="rgb(234,36,10)"/><text x="999.00" y="318.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 2.05%)</title><rect x="996" y="324" width="24" height="15" fill="rgb(249,114,44)"/><text x="999.00" y="334.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (3 samples, 1.23%)</title><rect x="1006" y="340" width="14" height="15" fill="rgb(230,20,39)"/><text x="1009.00" y="350.50"></text></g><g><title>0x7fa5fd40ad6a (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1015" y="356" width="5" height="15" fill="rgb(237,87,16)"/><text x="1018.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 4.10%)</title><rect x="977" y="244" width="48" height="15" fill="rgb(245,88,7)"/><text x="980.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 3.69%)</title><rect x="982" y="260" width="43" height="15" fill="rgb(253,165,31)"/><text x="985.00" y="270.50">PyUF..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.41%)</title><rect x="1020" y="276" width="5" height="15" fill="rgb(247,10,53)"/><text x="1023.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.41%)</title><rect x="1020" y="292" width="5" height="15" fill="rgb(212,82,48)"/><text x="1023.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (12 samples, 4.92%)</title><rect x="972" y="228" width="58" height="15" fill="rgb(231,125,28)"/><text x="975.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.41%)</title><rect x="1025" y="244" width="5" height="15" fill="rgb(235,26,0)"/><text x="1028.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.41%)</title><rect x="1025" y="260" width="5" height="15" fill="rgb(249,47,41)"/><text x="1028.00" y="270.50"></text></g><g><title>0x7fa5fd5bcba0 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="1044" y="356" width="5" height="15" fill="rgb(223,137,38)"/><text x="1047.00" y="366.50"></text></g><g><title>0x7fa5fd5bcbd3 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="1049" y="356" width="5" height="15" fill="rgb(223,1,45)"/><text x="1052.00" y="366.50"></text></g><g><title>0x7fa5fd5bcbe7 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="1054" y="356" width="5" height="15" fill="rgb(226,10,43)"/><text x="1057.00" y="366.50"></text></g><g><title>0x7fa5fd5bcbf9 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="1059" y="356" width="5" height="15" fill="rgb(215,98,42)"/><text x="1062.00" y="366.50"></text></g><g><title>0x7fa5fd5bcc18 (libm-2.29.so) (2 samples, 0.82%)</title><rect x="1064" y="356" width="9" height="15" fill="rgb(214,148,40)"/><text x="1067.00" y="366.50"></text></g><g><title>0x7fa5fd5bcc3e (libm-2.29.so) (2 samples, 0.82%)</title><rect x="1073" y="356" width="10" height="15" fill="rgb(227,51,39)"/><text x="1076.00" y="366.50"></text></g><g><title>0x7fa5e86f4265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 4.92%)</title><rect x="1030" y="324" width="58" height="15" fill="rgb(208,45,22)"/><text x="1033.00" y="334.50">0x7fa5..</text></g><g><title>exp (libm-2.29.so) (12 samples, 4.92%)</title><rect x="1030" y="340" width="58" height="15" fill="rgb(232,140,44)"/><text x="1033.00" y="350.50">exp (l..</text></g><g><title>0x7fa5fd5bcc6a (libm-2.29.so) (1 samples, 0.41%)</title><rect x="1083" y="356" width="5" height="15" fill="rgb(218,67,4)"/><text x="1086.00" y="366.50"></text></g><g><title>0x7fa5e86f4275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="1088" y="324" width="5" height="15" fill="rgb(228,159,15)"/><text x="1091.00" y="334.50"></text></g><g><title>0x7fa5e86d39dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 8.20%)</title><rect x="1030" y="308" width="97" height="15" fill="rgb(244,83,23)"/><text x="1033.00" y="318.50">0x7fa5e86d3..</text></g><g><title>0x7fa5e86f4279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.87%)</title><rect x="1093" y="324" width="34" height="15" fill="rgb(224,140,48)"/><text x="1096.00" y="334.50">0x..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (21 samples, 8.61%)</title><rect x="1030" y="228" width="101" height="15" fill="rgb(233,68,13)"/><text x="1033.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (21 samples, 8.61%)</title><rect x="1030" y="244" width="101" height="15" fill="rgb(227,21,19)"/><text x="1033.00" y="254.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (21 samples, 8.61%)</title><rect x="1030" y="260" width="101" height="15" fill="rgb(228,56,50)"/><text x="1033.00" y="270.50">PyUFunc_Gene..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (21 samples, 8.61%)</title><rect x="1030" y="276" width="101" height="15" fill="rgb(207,224,35)"/><text x="1033.00" y="286.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (21 samples, 8.61%)</title><rect x="1030" y="292" width="101" height="15" fill="rgb(232,38,26)"/><text x="1033.00" y="302.50">trivial_two_..</text></g><g><title>0x7fa5e86d39e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="1127" y="308" width="4" height="15" fill="rgb(205,22,1)"/><text x="1130.00" y="318.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.41%)</title><rect x="1136" y="308" width="5" height="15" fill="rgb(226,225,54)"/><text x="1139.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.41%)</title><rect x="1141" y="324" width="5" height="15" fill="rgb(246,208,6)"/><text x="1144.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.41%)</title><rect x="1141" y="340" width="5" height="15" fill="rgb(231,162,29)"/><text x="1144.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.41%)</title><rect x="1141" y="356" width="5" height="15" fill="rgb(212,191,53)"/><text x="1144.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.41%)</title><rect x="1141" y="372" width="5" height="15" fill="rgb(209,108,1)"/><text x="1144.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.41%)</title><rect x="1141" y="388" width="5" height="15" fill="rgb(250,88,53)"/><text x="1144.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.41%)</title><rect x="1141" y="404" width="5" height="15" fill="rgb(218,2,29)"/><text x="1144.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1141" y="420" width="5" height="15" fill="rgb(244,46,20)"/><text x="1144.00" y="430.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.41%)</title><rect x="1146" y="324" width="5" height="15" fill="rgb(240,25,53)"/><text x="1149.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3109) (1 samples, 0.41%)</title><rect x="1146" y="340" width="5" height="15" fill="rgb(231,17,38)"/><text x="1149.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:83) (1 samples, 0.41%)</title><rect x="1151" y="324" width="5" height="15" fill="rgb(214,202,3)"/><text x="1154.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 2.46%)</title><rect x="1131" y="228" width="29" height="15" fill="rgb(239,167,45)"/><text x="1134.00" y="238.50">_r..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 2.46%)</title><rect x="1131" y="244" width="29" height="15" fill="rgb(247,153,36)"/><text x="1134.00" y="254.50">ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.46%)</title><rect x="1131" y="260" width="29" height="15" fill="rgb(205,62,9)"/><text x="1134.00" y="270.50">ar..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 2.46%)</title><rect x="1131" y="276" width="29" height="15" fill="rgb(242,74,45)"/><text x="1134.00" y="286.50">ar..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 2.05%)</title><rect x="1136" y="292" width="24" height="15" fill="rgb(213,80,44)"/><text x="1139.00" y="302.50">_..</text></g><g><title>array_argmax (methods.c:302) (4 samples, 1.64%)</title><rect x="1141" y="308" width="19" height="15" fill="rgb(254,72,39)"/><text x="1144.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.41%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(224,28,33)"/><text x="1159.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.41%)</title><rect x="1156" y="340" width="4" height="15" fill="rgb(246,150,1)"/><text x="1159.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2139) (1 samples, 0.41%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(233,6,14)"/><text x="1159.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (92 samples, 37.70%)</title><rect x="720" y="180" width="445" height="15" fill="rgb(249,16,41)"/><text x="723.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (59 samples, 24.18%)</title><rect x="880" y="196" width="285" height="15" fill="rgb(242,75,20)"/><text x="883.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:3..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (59 samples, 24.18%)</title><rect x="880" y="212" width="285" height="15" fill="rgb(235,71,34)"/><text x="883.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:2..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:61) (1 samples, 0.41%)</title><rect x="1160" y="228" width="5" height="15" fill="rgb(216,40,29)"/><text x="1163.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.41%)</title><rect x="1165" y="180" width="5" height="15" fill="rgb(220,33,6)"/><text x="1168.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.41%)</title><rect x="1170" y="180" width="5" height="15" fill="rgb(213,115,10)"/><text x="1173.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:45) (107 samples, 43.85%)</title><rect x="667" y="52" width="518" height="15" fill="rgb(235,110,52)"/><text x="670.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_10..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:44) (107 samples, 43.85%)</title><rect x="667" y="68" width="518" height="15" fill="rgb(249,178,7)"/><text x="670.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:29) (107 samples, 43.85%)</title><rect x="667" y="84" width="518" height="15" fill="rgb(245,20,39)"/><text x="670.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverlibline..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:23) (105 samples, 43.03%)</title><rect x="677" y="100" width="508" height="15" fill="rgb(216,162,25)"/><text x="680.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (104 samples, 42.62%)</title><rect x="682" y="116" width="503" height="15" fill="rgb(226,3,43)"/><text x="685.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (103 samples, 42.21%)</title><rect x="687" y="132" width="498" height="15" fill="rgb(234,16,5)"/><text x="690.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 41.39%)</title><rect x="696" y="148" width="489" height="15" fill="rgb(229,209,4)"/><text x="699.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (98 samples, 40.16%)</title><rect x="711" y="164" width="474" height="15" fill="rgb(248,180,44)"/><text x="714.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.82%)</title><rect x="1175" y="180" width="10" height="15" fill="rgb(235,69,17)"/><text x="1178.00" y="190.50"></text></g><g><title>all (244 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,105,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:52) (1 samples, 0.41%)</title><rect x="1185" y="52" width="5" height="15" fill="rgb(222,22,40)"/><text x="1188.00" y="62.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:51) (1 samples, 0.41%)</title><rect x="1185" y="68" width="5" height="15" fill="rgb(245,229,42)"/><text x="1188.00" y="78.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_.py:28) (1 samples, 0.41%)</title><rect x="1185" y="84" width="5" height="15" fill="rgb(239,95,41)"/><text x="1188.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.41%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(241,44,31)"/><text x="1188.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.41%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(236,171,45)"/><text x="1188.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.41%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(206,111,51)"/><text x="1188.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.41%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(228,137,38)"/><text x="1188.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.41%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(234,90,25)"/><text x="1188.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(209,57,29)"/><text x="1188.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(207,218,49)"/><text x="1188.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(209,224,29)"/><text x="1188.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(247,8,54)"/><text x="1188.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(211,48,39)"/><text x="1188.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.41%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(238,127,2)"/><text x="1188.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(212,165,45)"/><text x="1188.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(242,226,25)"/><text x="1188.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="1185" y="308" width="5" height="15" fill="rgb(216,127,30)"/><text x="1188.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(213,59,7)"/><text x="1188.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(205,84,8)"/><text x="1188.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.41%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(241,227,10)"/><text x="1188.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(241,127,0)"/><text x="1188.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="1185" y="388" width="5" height="15" fill="rgb(220,30,20)"/><text x="1188.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="1185" y="404" width="5" height="15" fill="rgb(254,9,23)"/><text x="1188.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="1185" y="420" width="5" height="15" fill="rgb(212,189,26)"/><text x="1188.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="1185" y="436" width="5" height="15" fill="rgb(228,62,44)"/><text x="1188.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.41%)</title><rect x="1185" y="452" width="5" height="15" fill="rgb(250,44,32)"/><text x="1188.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="1185" y="468" width="5" height="15" fill="rgb(244,104,54)"/><text x="1188.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="1185" y="484" width="5" height="15" fill="rgb(244,4,44)"/><text x="1188.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.41%)</title><rect x="1185" y="500" width="5" height="15" fill="rgb(221,21,31)"/><text x="1188.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.41%)</title><rect x="1185" y="516" width="5" height="15" fill="rgb(214,65,31)"/><text x="1188.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.41%)</title><rect x="1185" y="532" width="5" height="15" fill="rgb(250,22,42)"/><text x="1188.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="1185" y="548" width="5" height="15" fill="rgb(250,9,39)"/><text x="1188.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="564" width="5" height="15" fill="rgb(251,100,42)"/><text x="1188.00" y="574.50"></text></g><g><title>0x7fa5fd672995 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="580" width="5" height="15" fill="rgb(233,31,51)"/><text x="1188.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="596" width="5" height="15" fill="rgb(227,137,21)"/><text x="1188.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="612" width="5" height="15" fill="rgb(235,214,54)"/><text x="1188.00" y="622.50"></text></g><g><title>0x7fa5fd672258 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="628" width="5" height="15" fill="rgb(212,116,19)"/><text x="1188.00" y="638.50"></text></g><g><title>0x7fa5fd6bfd7a (ld-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="644" width="5" height="15" fill="rgb(229,29,40)"/><text x="1188.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="660" width="5" height="15" fill="rgb(252,91,36)"/><text x="1188.00" y="670.50"></text></g><g><title>0x7fa5fd6c0345 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="676" width="5" height="15" fill="rgb(244,124,17)"/><text x="1188.00" y="686.50"></text></g><g><title>0x7fa5fd6b8fec (ld-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="692" width="5" height="15" fill="rgb(210,219,39)"/><text x="1188.00" y="702.50"></text></g><g><title>0x7fa5fd6b744b (ld-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="708" width="5" height="15" fill="rgb(248,208,10)"/><text x="1188.00" y="718.50"></text></g></g></svg>