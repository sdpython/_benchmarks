<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:28) (1 samples, 0.19%)</title><rect x="10" y="84" width="2" height="15" fill="rgb(245,0,32)"/><text x="13.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.19%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(231,17,52)"/><text x="13.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.19%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(221,101,20)"/><text x="13.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.19%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(232,47,4)"/><text x="13.00" y="142.50"></text></g><g><title>load (_pickle.c:6457) (1 samples, 0.19%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(223,194,5)"/><text x="13.00" y="158.50"></text></g><g><title>load_newobj (_pickle.c:5474) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(206,172,22)"/><text x="13.00" y="174.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (1 samples, 0.19%)</title><rect x="12" y="164" width="2" height="15" fill="rgb(252,8,48)"/><text x="15.00" y="174.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(207,41,43)"/><text x="15.00" y="190.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (1 samples, 0.19%)</title><rect x="12" y="196" width="2" height="15" fill="rgb(241,213,19)"/><text x="15.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="12" y="212" width="2" height="15" fill="rgb(252,145,38)"/><text x="15.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.19%)</title><rect x="12" y="228" width="2" height="15" fill="rgb(231,81,6)"/><text x="15.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (1 samples, 0.19%)</title><rect x="14" y="164" width="2" height="15" fill="rgb(240,183,45)"/><text x="17.00" y="174.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(237,143,36)"/><text x="17.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(218,86,29)"/><text x="17.00" y="206.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(213,83,16)"/><text x="17.00" y="222.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (1 samples, 0.19%)</title><rect x="16" y="180" width="2" height="15" fill="rgb(222,59,38)"/><text x="19.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="16" y="196" width="2" height="15" fill="rgb(243,87,9)"/><text x="19.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="16" y="212" width="2" height="15" fill="rgb(232,41,53)"/><text x="19.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.19%)</title><rect x="16" y="228" width="2" height="15" fill="rgb(226,9,49)"/><text x="19.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.19%)</title><rect x="16" y="244" width="2" height="15" fill="rgb(218,172,14)"/><text x="19.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="16" y="260" width="2" height="15" fill="rgb(235,121,17)"/><text x="19.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="16" y="276" width="2" height="15" fill="rgb(207,178,54)"/><text x="19.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="16" y="292" width="2" height="15" fill="rgb(226,24,40)"/><text x="19.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="16" y="308" width="2" height="15" fill="rgb(223,9,26)"/><text x="19.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="16" y="324" width="2" height="15" fill="rgb(205,197,47)"/><text x="19.00" y="334.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (1 samples, 0.19%)</title><rect x="16" y="340" width="2" height="15" fill="rgb(226,202,20)"/><text x="19.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (1 samples, 0.19%)</title><rect x="16" y="356" width="2" height="15" fill="rgb(214,77,16)"/><text x="19.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (1 samples, 0.19%)</title><rect x="16" y="372" width="2" height="15" fill="rgb(241,198,22)"/><text x="19.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="16" y="388" width="2" height="15" fill="rgb(254,99,10)"/><text x="19.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:804) (1 samples, 0.19%)</title><rect x="16" y="404" width="2" height="15" fill="rgb(244,227,6)"/><text x="19.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="18" y="212" width="3" height="15" fill="rgb(222,214,30)"/><text x="21.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="18" y="228" width="3" height="15" fill="rgb(249,171,50)"/><text x="21.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="18" y="244" width="3" height="15" fill="rgb(209,103,2)"/><text x="21.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="18" y="260" width="3" height="15" fill="rgb(247,108,23)"/><text x="21.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="18" y="276" width="3" height="15" fill="rgb(207,47,1)"/><text x="21.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="18" y="292" width="3" height="15" fill="rgb(210,158,16)"/><text x="21.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="18" y="308" width="3" height="15" fill="rgb(218,167,13)"/><text x="21.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="18" y="324" width="3" height="15" fill="rgb(248,8,14)"/><text x="21.00" y="334.50"></text></g><g><title>array_subtract (number.c:342) (2 samples, 0.38%)</title><rect x="18" y="196" width="5" height="15" fill="rgb(214,137,7)"/><text x="21.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.19%)</title><rect x="21" y="212" width="2" height="15" fill="rgb(226,189,17)"/><text x="24.00" y="222.50"></text></g><g><title>PyArray_Return (scalarapi.c:856) (1 samples, 0.19%)</title><rect x="21" y="228" width="2" height="15" fill="rgb(208,210,21)"/><text x="24.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (4 samples, 0.75%)</title><rect x="16" y="164" width="9" height="15" fill="rgb(229,18,10)"/><text x="19.00" y="174.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (3 samples, 0.57%)</title><rect x="18" y="180" width="7" height="15" fill="rgb(252,93,34)"/><text x="21.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="23" y="196" width="2" height="15" fill="rgb(243,146,52)"/><text x="26.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="23" y="212" width="2" height="15" fill="rgb(238,96,1)"/><text x="26.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="23" y="228" width="2" height="15" fill="rgb(239,37,38)"/><text x="26.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="23" y="244" width="2" height="15" fill="rgb(207,5,8)"/><text x="26.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (1 samples, 0.19%)</title><rect x="23" y="260" width="2" height="15" fill="rgb(245,145,33)"/><text x="26.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="276" width="2" height="15" fill="rgb(240,141,50)"/><text x="26.00" y="286.50"></text></g><g><title>0x7f5a5547bc52 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="292" width="2" height="15" fill="rgb(233,25,31)"/><text x="26.00" y="302.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:18) (7 samples, 1.32%)</title><rect x="12" y="100" width="15" height="15" fill="rgb(219,187,31)"/><text x="15.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 1.32%)</title><rect x="12" y="116" width="15" height="15" fill="rgb(224,211,41)"/><text x="15.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (7 samples, 1.32%)</title><rect x="12" y="132" width="15" height="15" fill="rgb(231,21,26)"/><text x="15.00" y="142.50"></text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (7 samples, 1.32%)</title><rect x="12" y="148" width="15" height="15" fill="rgb(222,136,50)"/><text x="15.00" y="158.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (1 samples, 0.19%)</title><rect x="25" y="164" width="2" height="15" fill="rgb(206,56,43)"/><text x="28.00" y="174.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.19%)</title><rect x="25" y="180" width="2" height="15" fill="rgb(222,173,53)"/><text x="28.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="25" y="196" width="2" height="15" fill="rgb(213,64,7)"/><text x="28.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="25" y="212" width="2" height="15" fill="rgb(239,18,46)"/><text x="28.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.19%)</title><rect x="25" y="228" width="2" height="15" fill="rgb(219,30,28)"/><text x="28.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="25" y="244" width="2" height="15" fill="rgb(222,142,8)"/><text x="28.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="25" y="260" width="2" height="15" fill="rgb(241,2,50)"/><text x="28.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="25" y="276" width="2" height="15" fill="rgb(227,83,49)"/><text x="28.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="25" y="292" width="2" height="15" fill="rgb(215,63,44)"/><text x="28.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.19%)</title><rect x="25" y="308" width="2" height="15" fill="rgb(218,65,45)"/><text x="28.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:93) (1 samples, 0.19%)</title><rect x="30" y="164" width="2" height="15" fill="rgb(249,203,31)"/><text x="33.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.19%)</title><rect x="30" y="180" width="2" height="15" fill="rgb(212,19,9)"/><text x="33.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.19%)</title><rect x="30" y="196" width="2" height="15" fill="rgb(229,159,25)"/><text x="33.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.19%)</title><rect x="30" y="212" width="2" height="15" fill="rgb(217,21,40)"/><text x="33.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.19%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(239,35,9)"/><text x="35.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(233,67,25)"/><text x="35.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.38%)</title><rect x="34" y="212" width="4" height="15" fill="rgb(229,26,21)"/><text x="37.00" y="222.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.19%)</title><rect x="36" y="228" width="2" height="15" fill="rgb(225,112,54)"/><text x="39.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.38%)</title><rect x="38" y="212" width="5" height="15" fill="rgb(206,186,49)"/><text x="41.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.38%)</title><rect x="38" y="228" width="5" height="15" fill="rgb(234,94,38)"/><text x="41.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(223,216,31)"/><text x="44.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.38%)</title><rect x="43" y="212" width="4" height="15" fill="rgb(249,67,6)"/><text x="46.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.38%)</title><rect x="43" y="228" width="4" height="15" fill="rgb(244,39,4)"/><text x="46.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.19%)</title><rect x="52" y="244" width="2" height="15" fill="rgb(233,199,50)"/><text x="55.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.75%)</title><rect x="47" y="212" width="9" height="15" fill="rgb(245,45,16)"/><text x="50.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.75%)</title><rect x="47" y="228" width="9" height="15" fill="rgb(205,121,35)"/><text x="50.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.19%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(235,222,24)"/><text x="57.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(205,134,28)"/><text x="59.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(226,11,19)"/><text x="59.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py:985) (13 samples, 2.45%)</title><rect x="32" y="180" width="29" height="15" fill="rgb(228,219,41)"/><text x="35.00" y="190.50">_c..</text></g><g><title>_check_X (sklearn/naive_bayes.py:473) (13 samples, 2.45%)</title><rect x="32" y="196" width="29" height="15" fill="rgb(214,198,21)"/><text x="35.00" y="206.50">_c..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.19%)</title><rect x="58" y="212" width="3" height="15" fill="rgb(240,102,38)"/><text x="61.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:455) (1 samples, 0.19%)</title><rect x="61" y="212" width="2" height="15" fill="rgb(246,179,24)"/><text x="64.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.19%)</title><rect x="63" y="228" width="2" height="15" fill="rgb(213,181,2)"/><text x="66.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (2 samples, 0.38%)</title><rect x="63" y="212" width="4" height="15" fill="rgb(220,121,32)"/><text x="66.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.19%)</title><rect x="65" y="228" width="2" height="15" fill="rgb(229,116,46)"/><text x="68.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.19%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(232,197,24)"/><text x="68.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.38%)</title><rect x="67" y="212" width="5" height="15" fill="rgb(246,179,9)"/><text x="70.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.38%)</title><rect x="72" y="244" width="4" height="15" fill="rgb(225,185,44)"/><text x="75.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 0.57%)</title><rect x="72" y="212" width="7" height="15" fill="rgb(220,158,29)"/><text x="75.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 0.57%)</title><rect x="72" y="228" width="7" height="15" fill="rgb(217,88,32)"/><text x="75.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.19%)</title><rect x="76" y="244" width="3" height="15" fill="rgb(211,98,16)"/><text x="79.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.19%)</title><rect x="79" y="212" width="2" height="15" fill="rgb(224,144,18)"/><text x="82.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.19%)</title><rect x="79" y="228" width="2" height="15" fill="rgb(253,23,25)"/><text x="82.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.19%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(210,4,17)"/><text x="84.00" y="238.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.19%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(250,119,9)"/><text x="84.00" y="254.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1862) (11 samples, 2.08%)</title><rect x="61" y="196" width="24" height="15" fill="rgb(237,129,49)"/><text x="64.00" y="206.50">b..</text></g><g><title>check_array (sklearn/utils/validation.py:586) (2 samples, 0.38%)</title><rect x="81" y="212" width="4" height="15" fill="rgb(237,133,29)"/><text x="84.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1691) (1 samples, 0.19%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(220,4,28)"/><text x="86.00" y="238.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (1 samples, 0.19%)</title><rect x="83" y="244" width="2" height="15" fill="rgb(218,136,10)"/><text x="86.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(247,42,19)"/><text x="86.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.19%)</title><rect x="83" y="276" width="2" height="15" fill="rgb(230,202,46)"/><text x="86.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.19%)</title><rect x="83" y="292" width="2" height="15" fill="rgb(232,85,46)"/><text x="86.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="83" y="308" width="2" height="15" fill="rgb(214,158,5)"/><text x="86.00" y="318.50"></text></g><g><title>0x7f5a55261a19 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="83" y="324" width="2" height="15" fill="rgb(229,211,50)"/><text x="86.00" y="334.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:736) (1 samples, 0.19%)</title><rect x="83" y="340" width="2" height="15" fill="rgb(205,55,47)"/><text x="86.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="85" y="228" width="2" height="15" fill="rgb(227,160,6)"/><text x="88.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="85" y="244" width="2" height="15" fill="rgb(220,214,35)"/><text x="88.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.19%)</title><rect x="85" y="260" width="2" height="15" fill="rgb(219,125,50)"/><text x="88.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="85" y="276" width="2" height="15" fill="rgb(212,6,52)"/><text x="88.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="85" y="292" width="2" height="15" fill="rgb(212,211,37)"/><text x="88.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="85" y="308" width="2" height="15" fill="rgb(231,184,40)"/><text x="88.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="85" y="324" width="2" height="15" fill="rgb(218,25,15)"/><text x="88.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="85" y="340" width="2" height="15" fill="rgb(253,9,33)"/><text x="88.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="85" y="356" width="2" height="15" fill="rgb(215,31,21)"/><text x="88.00" y="366.50"></text></g><g><title>0x7f5a552ab700 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="85" y="372" width="2" height="15" fill="rgb(243,129,46)"/><text x="88.00" y="382.50"></text></g><g><title>0x7f5a552a8aa4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="85" y="388" width="2" height="15" fill="rgb(231,203,19)"/><text x="88.00" y="398.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1873) (2 samples, 0.38%)</title><rect x="85" y="196" width="5" height="15" fill="rgb(226,107,14)"/><text x="88.00" y="206.50"></text></g><g><title>array_richcompare (arrayobject.c:1504) (2 samples, 0.38%)</title><rect x="85" y="212" width="5" height="15" fill="rgb(241,98,25)"/><text x="88.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.19%)</title><rect x="87" y="228" width="3" height="15" fill="rgb(227,217,12)"/><text x="90.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="87" y="244" width="3" height="15" fill="rgb(245,91,20)"/><text x="90.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="87" y="260" width="3" height="15" fill="rgb(215,228,34)"/><text x="90.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.19%)</title><rect x="87" y="276" width="3" height="15" fill="rgb(250,16,14)"/><text x="90.00" y="286.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1874) (2 samples, 0.38%)</title><rect x="90" y="196" width="4" height="15" fill="rgb(234,183,48)"/><text x="93.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="92" y="212" width="2" height="15" fill="rgb(215,189,4)"/><text x="95.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="92" y="228" width="2" height="15" fill="rgb(228,199,6)"/><text x="95.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="92" y="244" width="2" height="15" fill="rgb(245,145,15)"/><text x="95.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="92" y="260" width="2" height="15" fill="rgb(238,181,37)"/><text x="95.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="92" y="276" width="2" height="15" fill="rgb(207,211,29)"/><text x="95.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="92" y="292" width="2" height="15" fill="rgb(239,158,5)"/><text x="95.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="92" y="308" width="2" height="15" fill="rgb(251,24,5)"/><text x="95.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="92" y="324" width="2" height="15" fill="rgb(223,167,49)"/><text x="95.00" y="334.50"></text></g><g><title>0x7f5a544cb2d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="92" y="340" width="2" height="15" fill="rgb(235,71,26)"/><text x="95.00" y="350.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1272) (1 samples, 0.19%)</title><rect x="94" y="228" width="2" height="15" fill="rgb(217,46,28)"/><text x="97.00" y="238.50"></text></g><g><title>binarize (sklearn/preprocessing/_data.py:1875) (2 samples, 0.38%)</title><rect x="94" y="196" width="5" height="15" fill="rgb(214,71,18)"/><text x="97.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.38%)</title><rect x="94" y="212" width="5" height="15" fill="rgb(215,93,35)"/><text x="97.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1305) (1 samples, 0.19%)</title><rect x="96" y="228" width="3" height="15" fill="rgb(232,129,40)"/><text x="99.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="96" y="244" width="3" height="15" fill="rgb(206,179,22)"/><text x="99.00" y="254.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:94) (32 samples, 6.04%)</title><rect x="32" y="164" width="71" height="15" fill="rgb(212,173,16)"/><text x="35.00" y="174.50">predict_..</text></g><g><title>_check_X (sklearn/naive_bayes.py:987) (19 samples, 3.58%)</title><rect x="61" y="180" width="42" height="15" fill="rgb(208,164,27)"/><text x="64.00" y="190.50">_ch..</text></g><g><title>binarize (sklearn/preprocessing/_data.py:1876) (2 samples, 0.38%)</title><rect x="99" y="196" width="4" height="15" fill="rgb(214,171,29)"/><text x="102.00" y="206.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (2 samples, 0.38%)</title><rect x="99" y="212" width="4" height="15" fill="rgb(244,138,8)"/><text x="102.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1285) (2 samples, 0.38%)</title><rect x="99" y="228" width="4" height="15" fill="rgb(208,65,46)"/><text x="102.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:134) (1 samples, 0.19%)</title><rect x="103" y="196" width="2" height="15" fill="rgb(209,131,36)"/><text x="106.00" y="206.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.38%)</title><rect x="107" y="212" width="5" height="15" fill="rgb(234,136,27)"/><text x="110.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="112" y="212" width="2" height="15" fill="rgb(222,70,18)"/><text x="115.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2982) (1 samples, 0.19%)</title><rect x="114" y="244" width="2" height="15" fill="rgb(210,167,11)"/><text x="117.00" y="254.50"></text></g><g><title>0x7f5a544cc1c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="114" y="260" width="2" height="15" fill="rgb(243,164,16)"/><text x="117.00" y="270.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1020) (7 samples, 1.32%)</title><rect x="103" y="180" width="16" height="15" fill="rgb(206,214,22)"/><text x="106.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (6 samples, 1.13%)</title><rect x="105" y="196" width="14" height="15" fill="rgb(210,210,38)"/><text x="108.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="114" y="212" width="5" height="15" fill="rgb(213,176,43)"/><text x="117.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.38%)</title><rect x="114" y="228" width="5" height="15" fill="rgb(232,76,17)"/><text x="117.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.19%)</title><rect x="116" y="244" width="3" height="15" fill="rgb(208,129,20)"/><text x="119.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:411) (1 samples, 0.19%)</title><rect x="116" y="260" width="3" height="15" fill="rgb(246,189,23)"/><text x="119.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:52) (1 samples, 0.19%)</title><rect x="116" y="276" width="3" height="15" fill="rgb(220,89,7)"/><text x="119.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="119" y="196" width="2" height="15" fill="rgb(222,163,27)"/><text x="122.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="119" y="212" width="2" height="15" fill="rgb(249,99,3)"/><text x="122.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="119" y="228" width="2" height="15" fill="rgb(242,175,53)"/><text x="122.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.19%)</title><rect x="121" y="260" width="2" height="15" fill="rgb(240,29,47)"/><text x="124.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.19%)</title><rect x="121" y="276" width="2" height="15" fill="rgb(205,104,21)"/><text x="124.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.19%)</title><rect x="121" y="292" width="2" height="15" fill="rgb(237,39,45)"/><text x="124.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.19%)</title><rect x="121" y="308" width="2" height="15" fill="rgb(205,128,37)"/><text x="124.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.38%)</title><rect x="121" y="196" width="4" height="15" fill="rgb(239,197,23)"/><text x="124.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.38%)</title><rect x="121" y="212" width="4" height="15" fill="rgb(223,89,9)"/><text x="124.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.38%)</title><rect x="121" y="228" width="4" height="15" fill="rgb(224,26,41)"/><text x="124.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.38%)</title><rect x="121" y="244" width="4" height="15" fill="rgb(213,80,38)"/><text x="124.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="123" y="260" width="2" height="15" fill="rgb(250,114,44)"/><text x="126.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="123" y="276" width="2" height="15" fill="rgb(222,36,19)"/><text x="126.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="123" y="292" width="2" height="15" fill="rgb(230,34,8)"/><text x="126.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="123" y="308" width="2" height="15" fill="rgb(206,164,33)"/><text x="126.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.19%)</title><rect x="123" y="324" width="2" height="15" fill="rgb(244,80,12)"/><text x="126.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.19%)</title><rect x="125" y="212" width="3" height="15" fill="rgb(249,152,12)"/><text x="128.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2005) (1 samples, 0.19%)</title><rect x="125" y="228" width="3" height="15" fill="rgb(212,131,46)"/><text x="128.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="128" y="244" width="2" height="15" fill="rgb(228,56,51)"/><text x="131.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="128" y="260" width="2" height="15" fill="rgb(212,72,1)"/><text x="131.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="128" y="276" width="2" height="15" fill="rgb(221,217,53)"/><text x="131.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(244,30,46)"/><text x="131.00" y="302.50"></text></g><g><title>0x7f5a552c9d67 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(218,163,0)"/><text x="131.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:95) (13 samples, 2.45%)</title><rect x="103" y="164" width="29" height="15" fill="rgb(231,85,15)"/><text x="106.00" y="174.50">pr..</text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py:1021) (6 samples, 1.13%)</title><rect x="119" y="180" width="13" height="15" fill="rgb(250,61,7)"/><text x="122.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="125" y="196" width="7" height="15" fill="rgb(248,11,5)"/><text x="128.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.38%)</title><rect x="128" y="212" width="4" height="15" fill="rgb(230,134,48)"/><text x="131.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.38%)</title><rect x="128" y="228" width="4" height="15" fill="rgb(228,87,35)"/><text x="131.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="130" y="244" width="2" height="15" fill="rgb(212,45,3)"/><text x="133.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="130" y="260" width="2" height="15" fill="rgb(242,154,19)"/><text x="133.00" y="270.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.19%)</title><rect x="130" y="276" width="2" height="15" fill="rgb(214,9,39)"/><text x="133.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="132" y="260" width="2" height="15" fill="rgb(245,132,6)"/><text x="135.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.38%)</title><rect x="132" y="244" width="4" height="15" fill="rgb(230,185,35)"/><text x="135.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.19%)</title><rect x="134" y="260" width="2" height="15" fill="rgb(235,224,12)"/><text x="137.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="136" y="276" width="3" height="15" fill="rgb(234,190,25)"/><text x="139.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="139" y="308" width="2" height="15" fill="rgb(238,4,2)"/><text x="142.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="139" y="324" width="2" height="15" fill="rgb(220,33,45)"/><text x="142.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.19%)</title><rect x="139" y="340" width="2" height="15" fill="rgb(238,110,42)"/><text x="142.00" y="350.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.19%)</title><rect x="139" y="356" width="2" height="15" fill="rgb(246,21,16)"/><text x="142.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:500) (1 samples, 0.19%)</title><rect x="141" y="308" width="2" height="15" fill="rgb(245,75,50)"/><text x="144.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c:351) (1 samples, 0.19%)</title><rect x="141" y="324" width="2" height="15" fill="rgb(244,222,41)"/><text x="144.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.19%)</title><rect x="141" y="340" width="2" height="15" fill="rgb(253,205,40)"/><text x="144.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.19%)</title><rect x="141" y="356" width="2" height="15" fill="rgb(214,70,16)"/><text x="144.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="143" y="308" width="2" height="15" fill="rgb(205,159,26)"/><text x="146.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="143" y="324" width="2" height="15" fill="rgb(227,75,25)"/><text x="146.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1553) (1 samples, 0.19%)</title><rect x="143" y="340" width="2" height="15" fill="rgb(245,115,35)"/><text x="146.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.19%)</title><rect x="145" y="308" width="3" height="15" fill="rgb(212,195,10)"/><text x="148.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.19%)</title><rect x="145" y="324" width="3" height="15" fill="rgb(208,150,31)"/><text x="148.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.19%)</title><rect x="145" y="340" width="3" height="15" fill="rgb(230,220,29)"/><text x="148.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.19%)</title><rect x="148" y="324" width="2" height="15" fill="rgb(227,127,53)"/><text x="151.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (2 samples, 0.38%)</title><rect x="150" y="324" width="4" height="15" fill="rgb(249,89,42)"/><text x="153.00" y="334.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1083) (1 samples, 0.19%)</title><rect x="154" y="372" width="2" height="15" fill="rgb(230,129,30)"/><text x="157.00" y="382.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1113) (1 samples, 0.19%)</title><rect x="156" y="372" width="3" height="15" fill="rgb(243,105,27)"/><text x="159.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.19%)</title><rect x="161" y="388" width="2" height="15" fill="rgb(207,26,24)"/><text x="164.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:812) (1 samples, 0.19%)</title><rect x="163" y="388" width="2" height="15" fill="rgb(209,97,4)"/><text x="166.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.19%)</title><rect x="165" y="404" width="3" height="15" fill="rgb(254,19,16)"/><text x="168.00" y="414.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1857) (9 samples, 1.70%)</title><rect x="154" y="340" width="20" height="15" fill="rgb(216,100,8)"/><text x="157.00" y="350.50"></text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src:195) (9 samples, 1.70%)</title><rect x="154" y="356" width="20" height="15" fill="rgb(206,195,19)"/><text x="157.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src:1117) (7 samples, 1.32%)</title><rect x="159" y="372" width="15" height="15" fill="rgb(239,25,10)"/><text x="162.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (4 samples, 0.75%)</title><rect x="165" y="388" width="9" height="15" fill="rgb(221,69,13)"/><text x="168.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (3 samples, 0.57%)</title><rect x="168" y="404" width="6" height="15" fill="rgb(207,78,29)"/><text x="171.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.57%)</title><rect x="168" y="420" width="6" height="15" fill="rgb(241,227,53)"/><text x="171.00" y="430.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1875) (1 samples, 0.19%)</title><rect x="174" y="340" width="2" height="15" fill="rgb(244,173,23)"/><text x="177.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (3 samples, 0.57%)</title><rect x="179" y="372" width="6" height="15" fill="rgb(247,34,23)"/><text x="182.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.57%)</title><rect x="179" y="388" width="6" height="15" fill="rgb(211,62,52)"/><text x="182.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (2 samples, 0.38%)</title><rect x="185" y="372" width="5" height="15" fill="rgb(224,45,48)"/><text x="188.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:805) (1 samples, 0.19%)</title><rect x="190" y="372" width="2" height="15" fill="rgb(226,207,42)"/><text x="193.00" y="382.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:101) (28 samples, 5.28%)</title><rect x="132" y="180" width="62" height="15" fill="rgb(206,35,54)"/><text x="135.00" y="190.50">logsum..</text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (28 samples, 5.28%)</title><rect x="132" y="196" width="62" height="15" fill="rgb(249,145,8)"/><text x="135.00" y="206.50">amax (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (28 samples, 5.28%)</title><rect x="132" y="212" width="62" height="15" fill="rgb(222,168,50)"/><text x="135.00" y="222.50">array_..</text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (28 samples, 5.28%)</title><rect x="132" y="228" width="62" height="15" fill="rgb(208,172,29)"/><text x="135.00" y="238.50">amax (..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (26 samples, 4.91%)</title><rect x="136" y="244" width="58" height="15" fill="rgb(249,130,25)"/><text x="139.00" y="254.50">_wrapr..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (26 samples, 4.91%)</title><rect x="136" y="260" width="58" height="15" fill="rgb(236,168,5)"/><text x="139.00" y="270.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (25 samples, 4.72%)</title><rect x="139" y="276" width="55" height="15" fill="rgb(229,164,33)"/><text x="142.00" y="286.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (25 samples, 4.72%)</title><rect x="139" y="292" width="55" height="15" fill="rgb(214,139,13)"/><text x="142.00" y="302.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (21 samples, 3.96%)</title><rect x="148" y="308" width="46" height="15" fill="rgb(219,53,37)"/><text x="151.00" y="318.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (18 samples, 3.40%)</title><rect x="154" y="324" width="40" height="15" fill="rgb(245,110,28)"/><text x="157.00" y="334.50">red..</text></g><g><title>DOUBLE_maximum (loops.c.src:1876) (8 samples, 1.51%)</title><rect x="176" y="340" width="18" height="15" fill="rgb(245,14,2)"/><text x="179.00" y="350.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (7 samples, 1.32%)</title><rect x="179" y="356" width="15" height="15" fill="rgb(213,147,43)"/><text x="182.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:806) (1 samples, 0.19%)</title><rect x="192" y="372" width="2" height="15" fill="rgb(220,10,40)"/><text x="195.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.19%)</title><rect x="194" y="212" width="3" height="15" fill="rgb(226,96,50)"/><text x="197.00" y="222.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.19%)</title><rect x="197" y="260" width="2" height="15" fill="rgb(245,130,42)"/><text x="200.00" y="270.50"></text></g><g><title>0x7f5a5547bbe7 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="201" y="292" width="2" height="15" fill="rgb(241,87,36)"/><text x="204.00" y="302.50"></text></g><g><title>0x7f5a5547bc18 (libm-2.29.so) (3 samples, 0.57%)</title><rect x="203" y="292" width="7" height="15" fill="rgb(222,129,7)"/><text x="206.00" y="302.50"></text></g><g><title>0x7f5a5547bc46 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="210" y="292" width="2" height="15" fill="rgb(216,69,3)"/><text x="213.00" y="302.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:112) (9 samples, 1.70%)</title><rect x="194" y="180" width="20" height="15" fill="rgb(218,197,42)"/><text x="197.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 1.70%)</title><rect x="194" y="196" width="20" height="15" fill="rgb(233,23,46)"/><text x="197.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.51%)</title><rect x="197" y="212" width="17" height="15" fill="rgb(245,45,21)"/><text x="200.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 1.51%)</title><rect x="197" y="228" width="17" height="15" fill="rgb(241,151,21)"/><text x="200.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (8 samples, 1.51%)</title><rect x="197" y="244" width="17" height="15" fill="rgb(253,204,2)"/><text x="200.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (7 samples, 1.32%)</title><rect x="199" y="260" width="15" height="15" fill="rgb(221,140,18)"/><text x="202.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (7 samples, 1.32%)</title><rect x="199" y="276" width="15" height="15" fill="rgb(236,177,25)"/><text x="202.00" y="286.50"></text></g><g><title>0x7f5a5547bc7b (libm-2.29.so) (1 samples, 0.19%)</title><rect x="212" y="292" width="2" height="15" fill="rgb(233,214,13)"/><text x="215.00" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.19%)</title><rect x="217" y="196" width="2" height="15" fill="rgb(213,120,17)"/><text x="220.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.19%)</title><rect x="217" y="212" width="2" height="15" fill="rgb(217,209,45)"/><text x="220.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:182) (1 samples, 0.19%)</title><rect x="217" y="228" width="2" height="15" fill="rgb(225,12,46)"/><text x="220.00" y="238.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:115) (3 samples, 0.57%)</title><rect x="214" y="180" width="7" height="15" fill="rgb(228,127,39)"/><text x="217.00" y="190.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py:438) (1 samples, 0.19%)</title><rect x="219" y="196" width="2" height="15" fill="rgb(226,57,20)"/><text x="222.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.19%)</title><rect x="221" y="212" width="2" height="15" fill="rgb(254,136,34)"/><text x="224.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="225" y="372" width="3" height="15" fill="rgb(241,167,25)"/><text x="228.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.19%)</title><rect x="225" y="388" width="3" height="15" fill="rgb(213,74,4)"/><text x="228.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.38%)</title><rect x="225" y="308" width="5" height="15" fill="rgb(253,229,13)"/><text x="228.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.38%)</title><rect x="225" y="324" width="5" height="15" fill="rgb(207,29,37)"/><text x="228.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.38%)</title><rect x="225" y="340" width="5" height="15" fill="rgb(249,25,15)"/><text x="228.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.38%)</title><rect x="225" y="356" width="5" height="15" fill="rgb(208,67,2)"/><text x="228.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="228" y="372" width="2" height="15" fill="rgb(233,167,39)"/><text x="231.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="228" y="388" width="2" height="15" fill="rgb(205,67,39)"/><text x="231.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="228" y="404" width="2" height="15" fill="rgb(216,74,34)"/><text x="231.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="228" y="420" width="2" height="15" fill="rgb(229,140,25)"/><text x="231.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="228" y="436" width="2" height="15" fill="rgb(251,140,14)"/><text x="231.00" y="446.50"></text></g><g><title>0x7f5a552ab1a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="228" y="452" width="2" height="15" fill="rgb(239,156,39)"/><text x="231.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.19%)</title><rect x="230" y="308" width="2" height="15" fill="rgb(208,207,45)"/><text x="233.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.19%)</title><rect x="230" y="324" width="2" height="15" fill="rgb(235,169,3)"/><text x="233.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3144) (1 samples, 0.19%)</title><rect x="230" y="340" width="2" height="15" fill="rgb(206,202,9)"/><text x="233.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.19%)</title><rect x="232" y="324" width="2" height="15" fill="rgb(218,65,38)"/><text x="235.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.19%)</title><rect x="234" y="324" width="3" height="15" fill="rgb(235,145,33)"/><text x="237.00" y="334.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:116) (10 samples, 1.89%)</title><rect x="221" y="180" width="22" height="15" fill="rgb(251,169,23)"/><text x="224.00" y="190.50">l..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (10 samples, 1.89%)</title><rect x="221" y="196" width="22" height="15" fill="rgb(211,114,31)"/><text x="224.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.70%)</title><rect x="223" y="212" width="20" height="15" fill="rgb(235,137,8)"/><text x="226.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 1.70%)</title><rect x="223" y="228" width="20" height="15" fill="rgb(228,135,24)"/><text x="226.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (8 samples, 1.51%)</title><rect x="225" y="244" width="18" height="15" fill="rgb(253,38,21)"/><text x="228.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 1.51%)</title><rect x="225" y="260" width="18" height="15" fill="rgb(248,114,33)"/><text x="228.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (8 samples, 1.51%)</title><rect x="225" y="276" width="18" height="15" fill="rgb(214,16,10)"/><text x="228.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.51%)</title><rect x="225" y="292" width="18" height="15" fill="rgb(205,52,29)"/><text x="228.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (5 samples, 0.94%)</title><rect x="232" y="308" width="11" height="15" fill="rgb(232,151,43)"/><text x="235.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (3 samples, 0.57%)</title><rect x="237" y="324" width="6" height="15" fill="rgb(252,87,34)"/><text x="240.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (2 samples, 0.38%)</title><rect x="239" y="340" width="4" height="15" fill="rgb(210,28,0)"/><text x="242.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="241" y="356" width="2" height="15" fill="rgb(253,55,23)"/><text x="244.00" y="366.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.19%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(238,131,48)"/><text x="249.00" y="222.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4807) (1 samples, 0.19%)</title><rect x="246" y="228" width="2" height="15" fill="rgb(227,99,35)"/><text x="249.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (3 samples, 0.57%)</title><rect x="243" y="196" width="7" height="15" fill="rgb(211,21,10)"/><text x="246.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.19%)</title><rect x="248" y="212" width="2" height="15" fill="rgb(206,148,43)"/><text x="251.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4837) (1 samples, 0.19%)</title><rect x="248" y="228" width="2" height="15" fill="rgb(224,94,22)"/><text x="251.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="250" y="228" width="2" height="15" fill="rgb(254,26,37)"/><text x="253.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(234,21,8)"/><text x="253.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(213,172,27)"/><text x="253.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="250" y="276" width="2" height="15" fill="rgb(217,206,8)"/><text x="253.00" y="286.50"></text></g><g><title>0x7f5a5547bdd0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="252" y="276" width="2" height="15" fill="rgb(227,59,11)"/><text x="255.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="250" y="196" width="7" height="15" fill="rgb(254,143,1)"/><text x="253.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.57%)</title><rect x="250" y="212" width="7" height="15" fill="rgb(224,124,14)"/><text x="253.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.38%)</title><rect x="252" y="228" width="5" height="15" fill="rgb(225,175,3)"/><text x="255.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.38%)</title><rect x="252" y="244" width="5" height="15" fill="rgb(243,141,54)"/><text x="255.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:190) (2 samples, 0.38%)</title><rect x="252" y="260" width="5" height="15" fill="rgb(245,95,50)"/><text x="255.00" y="270.50"></text></g><g><title>0x7f5a5547beee (libm-2.29.so) (1 samples, 0.19%)</title><rect x="254" y="276" width="3" height="15" fill="rgb(216,80,47)"/><text x="257.00" y="286.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:120) (7 samples, 1.32%)</title><rect x="243" y="180" width="16" height="15" fill="rgb(216,36,20)"/><text x="246.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.19%)</title><rect x="257" y="196" width="2" height="15" fill="rgb(247,89,46)"/><text x="260.00" y="206.50"></text></g><g><title>logsumexp (scipy/special/_logsumexp.py:124) (1 samples, 0.19%)</title><rect x="259" y="180" width="2" height="15" fill="rgb(253,18,30)"/><text x="262.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="259" y="196" width="2" height="15" fill="rgb(237,41,37)"/><text x="262.00" y="206.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.19%)</title><rect x="259" y="212" width="2" height="15" fill="rgb(250,93,18)"/><text x="262.00" y="222.50"></text></g><g><title>0x7f5a552ca14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="259" y="228" width="2" height="15" fill="rgb(247,149,22)"/><text x="262.00" y="238.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:97) (59 samples, 11.13%)</title><rect x="132" y="164" width="131" height="15" fill="rgb(231,208,17)"/><text x="135.00" y="174.50">predict_log_prob..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py:94) (1 samples, 0.19%)</title><rect x="261" y="180" width="2" height="15" fill="rgb(218,116,18)"/><text x="264.00" y="190.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py:230) (1 samples, 0.19%)</title><rect x="261" y="196" width="2" height="15" fill="rgb(219,209,8)"/><text x="264.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="261" y="212" width="2" height="15" fill="rgb(241,150,14)"/><text x="264.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.19%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(217,222,6)"/><text x="269.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="266" y="276" width="2" height="15" fill="rgb(219,205,32)"/><text x="269.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.38%)</title><rect x="266" y="244" width="4" height="15" fill="rgb(235,210,28)"/><text x="269.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="268" y="260" width="2" height="15" fill="rgb(218,29,37)"/><text x="271.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="268" y="276" width="2" height="15" fill="rgb(234,145,45)"/><text x="271.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="268" y="292" width="2" height="15" fill="rgb(216,152,19)"/><text x="271.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="268" y="308" width="2" height="15" fill="rgb(224,128,21)"/><text x="271.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="268" y="324" width="2" height="15" fill="rgb(254,26,48)"/><text x="271.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="268" y="340" width="2" height="15" fill="rgb(216,118,34)"/><text x="271.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="268" y="356" width="2" height="15" fill="rgb(247,24,14)"/><text x="271.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="268" y="372" width="2" height="15" fill="rgb(224,0,35)"/><text x="271.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="268" y="388" width="2" height="15" fill="rgb(214,120,19)"/><text x="271.00" y="398.50"></text></g><g><title>array_subtract (number.c:342) (3 samples, 0.57%)</title><rect x="266" y="180" width="6" height="15" fill="rgb(220,44,26)"/><text x="269.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="266" y="196" width="6" height="15" fill="rgb(206,86,41)"/><text x="269.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.57%)</title><rect x="266" y="212" width="6" height="15" fill="rgb(254,113,33)"/><text x="269.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.57%)</title><rect x="266" y="228" width="6" height="15" fill="rgb(214,156,13)"/><text x="269.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="270" y="244" width="2" height="15" fill="rgb(226,200,12)"/><text x="273.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(209,164,6)"/><text x="273.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(246,49,0)"/><text x="273.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="270" y="292" width="2" height="15" fill="rgb(252,153,52)"/><text x="273.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="270" y="308" width="2" height="15" fill="rgb(219,76,53)"/><text x="273.00" y="318.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py:98) (6 samples, 1.13%)</title><rect x="263" y="164" width="14" height="15" fill="rgb(238,184,12)"/><text x="266.00" y="174.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (2 samples, 0.38%)</title><rect x="272" y="180" width="5" height="15" fill="rgb(224,160,22)"/><text x="275.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="274" y="196" width="3" height="15" fill="rgb(215,222,10)"/><text x="277.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:123) (1 samples, 0.19%)</title><rect x="274" y="212" width="3" height="15" fill="rgb(235,148,11)"/><text x="277.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1610) (1 samples, 0.19%)</title><rect x="277" y="196" width="2" height="15" fill="rgb(223,129,51)"/><text x="280.00" y="206.50"></text></g><g><title>PyUFunc_d_d (loops.c.src:188) (1 samples, 0.19%)</title><rect x="279" y="228" width="2" height="15" fill="rgb(218,35,0)"/><text x="282.00" y="238.50"></text></g><g><title>0x7f5a5547bba0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="283" y="260" width="3" height="15" fill="rgb(214,217,30)"/><text x="286.00" y="270.50"></text></g><g><title>0x7f5a5547bbd3 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="286" y="260" width="2" height="15" fill="rgb(215,84,27)"/><text x="289.00" y="270.50"></text></g><g><title>0x7f5a5547bbf9 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="288" y="260" width="2" height="15" fill="rgb(235,48,48)"/><text x="291.00" y="270.50"></text></g><g><title>0x7f5a5547bc07 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="290" y="260" width="4" height="15" fill="rgb(238,68,49)"/><text x="293.00" y="270.50"></text></g><g><title>0x7f5a5547bc2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="294" y="260" width="3" height="15" fill="rgb(236,124,53)"/><text x="297.00" y="270.50"></text></g><g><title>0x7f5a5547bc6a (libm-2.29.so) (1 samples, 0.19%)</title><rect x="297" y="260" width="2" height="15" fill="rgb(229,181,1)"/><text x="300.00" y="270.50"></text></g><g><title>0x7f5a5547bc7b (libm-2.29.so) (1 samples, 0.19%)</title><rect x="299" y="260" width="2" height="15" fill="rgb(248,223,43)"/><text x="302.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:38) (134 samples, 25.28%)</title><rect x="10" y="52" width="298" height="15" fill="rgb(210,114,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl..</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:37) (134 samples, 25.28%)</title><rect x="10" y="68" width="298" height="15" fill="rgb(211,221,30)"/><text x="13.00" y="78.50">profile_skl (bench_BernoulliNB_default_m..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:29) (133 samples, 25.09%)</title><rect x="12" y="84" width="296" height="15" fill="rgb(254,170,28)"/><text x="15.00" y="94.50">setup_profile (bench_BernoulliNB_defaul..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:23) (126 samples, 23.77%)</title><rect x="27" y="100" width="281" height="15" fill="rgb(215,142,8)"/><text x="30.00" y="110.50">profile (bench_BernoulliNB_default_m_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (125 samples, 23.58%)</title><rect x="30" y="116" width="278" height="15" fill="rgb(246,33,45)"/><text x="33.00" y="126.50">time_predict (mlprodict/asv_benchmark..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (125 samples, 23.58%)</title><rect x="30" y="132" width="278" height="15" fill="rgb(243,28,3)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>predict_proba (sklearn/naive_bayes.py:115) (125 samples, 23.58%)</title><rect x="30" y="148" width="278" height="15" fill="rgb(217,193,31)"/><text x="33.00" y="158.50">predict_proba (sklearn/naive_bayes.py..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 2.64%)</title><rect x="277" y="164" width="31" height="15" fill="rgb(236,14,14)"/><text x="280.00" y="174.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.64%)</title><rect x="277" y="180" width="31" height="15" fill="rgb(248,150,41)"/><text x="280.00" y="190.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (13 samples, 2.45%)</title><rect x="279" y="196" width="29" height="15" fill="rgb(251,179,31)"/><text x="282.00" y="206.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (13 samples, 2.45%)</title><rect x="279" y="212" width="29" height="15" fill="rgb(222,142,34)"/><text x="282.00" y="222.50">tr..</text></g><g><title>PyUFunc_d_d (loops.c.src:190) (12 samples, 2.26%)</title><rect x="281" y="228" width="27" height="15" fill="rgb(242,153,28)"/><text x="284.00" y="238.50">P..</text></g><g><title>exp (libm-2.29.so) (11 samples, 2.08%)</title><rect x="283" y="244" width="25" height="15" fill="rgb(221,57,49)"/><text x="286.00" y="254.50">e..</text></g><g><title>0x7f5a5547bc7f (libm-2.29.so) (3 samples, 0.57%)</title><rect x="301" y="260" width="7" height="15" fill="rgb(242,145,0)"/><text x="304.00" y="270.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.19%)</title><rect x="308" y="900" width="2" height="15" fill="rgb(208,190,24)"/><text x="311.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.19%)</title><rect x="308" y="916" width="2" height="15" fill="rgb(248,27,53)"/><text x="311.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.19%)</title><rect x="308" y="932" width="2" height="15" fill="rgb(251,218,16)"/><text x="311.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.19%)</title><rect x="308" y="948" width="2" height="15" fill="rgb(247,140,53)"/><text x="311.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.38%)</title><rect x="308" y="820" width="4" height="15" fill="rgb(225,178,2)"/><text x="311.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.38%)</title><rect x="308" y="836" width="4" height="15" fill="rgb(215,148,42)"/><text x="311.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.38%)</title><rect x="308" y="852" width="4" height="15" fill="rgb(250,8,0)"/><text x="311.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.38%)</title><rect x="308" y="868" width="4" height="15" fill="rgb(233,16,22)"/><text x="311.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.38%)</title><rect x="308" y="884" width="4" height="15" fill="rgb(244,98,13)"/><text x="311.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="310" y="900" width="2" height="15" fill="rgb(237,152,0)"/><text x="313.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="310" y="916" width="2" height="15" fill="rgb(221,94,47)"/><text x="313.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="310" y="932" width="2" height="15" fill="rgb(241,218,47)"/><text x="313.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="310" y="948" width="2" height="15" fill="rgb(246,22,16)"/><text x="313.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.19%)</title><rect x="310" y="964" width="2" height="15" fill="rgb(223,69,26)"/><text x="313.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.19%)</title><rect x="310" y="980" width="2" height="15" fill="rgb(232,194,35)"/><text x="313.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:2) (3 samples, 0.57%)</title><rect x="308" y="148" width="7" height="15" fill="rgb(222,94,13)"/><text x="311.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="164" width="7" height="15" fill="rgb(210,20,36)"/><text x="311.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.57%)</title><rect x="308" y="180" width="7" height="15" fill="rgb(240,84,27)"/><text x="311.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="196" width="7" height="15" fill="rgb(220,169,46)"/><text x="311.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="212" width="7" height="15" fill="rgb(216,126,45)"/><text x="311.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="228" width="7" height="15" fill="rgb(240,229,11)"/><text x="311.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="244" width="7" height="15" fill="rgb(227,29,3)"/><text x="311.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="260" width="7" height="15" fill="rgb(213,62,8)"/><text x="311.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="276" width="7" height="15" fill="rgb(252,143,17)"/><text x="311.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.57%)</title><rect x="308" y="292" width="7" height="15" fill="rgb(206,90,49)"/><text x="311.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="308" width="7" height="15" fill="rgb(206,26,8)"/><text x="311.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="324" width="7" height="15" fill="rgb(244,202,13)"/><text x="311.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="340" width="7" height="15" fill="rgb(254,58,39)"/><text x="311.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="356" width="7" height="15" fill="rgb(219,154,39)"/><text x="311.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="372" width="7" height="15" fill="rgb(226,79,22)"/><text x="311.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.57%)</title><rect x="308" y="388" width="7" height="15" fill="rgb(239,26,11)"/><text x="311.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="404" width="7" height="15" fill="rgb(247,16,15)"/><text x="311.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="420" width="7" height="15" fill="rgb(240,223,37)"/><text x="311.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="436" width="7" height="15" fill="rgb(229,189,2)"/><text x="311.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="452" width="7" height="15" fill="rgb(237,172,0)"/><text x="311.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="468" width="7" height="15" fill="rgb(245,170,51)"/><text x="311.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.57%)</title><rect x="308" y="484" width="7" height="15" fill="rgb(245,92,24)"/><text x="311.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="500" width="7" height="15" fill="rgb(227,118,38)"/><text x="311.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="516" width="7" height="15" fill="rgb(248,31,26)"/><text x="311.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="532" width="7" height="15" fill="rgb(252,71,29)"/><text x="311.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="548" width="7" height="15" fill="rgb(225,29,49)"/><text x="311.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="564" width="7" height="15" fill="rgb(230,224,49)"/><text x="311.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.57%)</title><rect x="308" y="580" width="7" height="15" fill="rgb(229,44,13)"/><text x="311.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="596" width="7" height="15" fill="rgb(216,200,47)"/><text x="311.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.57%)</title><rect x="308" y="612" width="7" height="15" fill="rgb(220,19,24)"/><text x="311.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="628" width="7" height="15" fill="rgb(206,206,0)"/><text x="311.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="644" width="7" height="15" fill="rgb(216,79,3)"/><text x="311.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="660" width="7" height="15" fill="rgb(245,141,38)"/><text x="311.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="676" width="7" height="15" fill="rgb(254,162,19)"/><text x="311.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="692" width="7" height="15" fill="rgb(211,7,32)"/><text x="311.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="708" width="7" height="15" fill="rgb(235,190,31)"/><text x="311.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.57%)</title><rect x="308" y="724" width="7" height="15" fill="rgb(205,16,45)"/><text x="311.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.57%)</title><rect x="308" y="740" width="7" height="15" fill="rgb(213,65,35)"/><text x="311.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.57%)</title><rect x="308" y="756" width="7" height="15" fill="rgb(232,74,46)"/><text x="311.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.57%)</title><rect x="308" y="772" width="7" height="15" fill="rgb(218,216,50)"/><text x="311.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.57%)</title><rect x="308" y="788" width="7" height="15" fill="rgb(207,198,42)"/><text x="311.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.57%)</title><rect x="308" y="804" width="7" height="15" fill="rgb(219,199,8)"/><text x="311.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (1 samples, 0.19%)</title><rect x="312" y="820" width="3" height="15" fill="rgb(250,174,28)"/><text x="315.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.19%)</title><rect x="312" y="836" width="3" height="15" fill="rgb(224,184,40)"/><text x="315.00" y="846.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.19%)</title><rect x="312" y="852" width="3" height="15" fill="rgb(247,165,22)"/><text x="315.00" y="862.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:96) (1 samples, 0.19%)</title><rect x="312" y="868" width="3" height="15" fill="rgb(205,84,4)"/><text x="315.00" y="878.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="315" y="484" width="2" height="15" fill="rgb(212,179,54)"/><text x="318.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="315" y="500" width="2" height="15" fill="rgb(241,35,11)"/><text x="318.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="315" y="516" width="2" height="15" fill="rgb(219,168,34)"/><text x="318.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="315" y="532" width="2" height="15" fill="rgb(236,145,51)"/><text x="318.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="315" y="548" width="2" height="15" fill="rgb(205,0,15)"/><text x="318.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="315" y="564" width="2" height="15" fill="rgb(221,145,45)"/><text x="318.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="315" y="580" width="2" height="15" fill="rgb(215,8,18)"/><text x="318.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="315" y="596" width="2" height="15" fill="rgb(246,79,5)"/><text x="318.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.19%)</title><rect x="315" y="612" width="2" height="15" fill="rgb(211,147,26)"/><text x="318.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="315" y="628" width="2" height="15" fill="rgb(239,62,15)"/><text x="318.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="315" y="644" width="2" height="15" fill="rgb(252,198,44)"/><text x="318.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="315" y="660" width="2" height="15" fill="rgb(205,129,0)"/><text x="318.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="315" y="676" width="2" height="15" fill="rgb(236,45,30)"/><text x="318.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="315" y="692" width="2" height="15" fill="rgb(242,105,52)"/><text x="318.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.19%)</title><rect x="315" y="708" width="2" height="15" fill="rgb(252,155,30)"/><text x="318.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="315" y="724" width="2" height="15" fill="rgb(206,157,49)"/><text x="318.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="315" y="740" width="2" height="15" fill="rgb(232,6,27)"/><text x="318.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="315" y="756" width="2" height="15" fill="rgb(244,195,1)"/><text x="318.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="315" y="772" width="2" height="15" fill="rgb(206,15,7)"/><text x="318.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="315" y="788" width="2" height="15" fill="rgb(232,20,0)"/><text x="318.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:393) (1 samples, 0.19%)</title><rect x="315" y="804" width="2" height="15" fill="rgb(223,58,19)"/><text x="318.00" y="814.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="315" y="820" width="2" height="15" fill="rgb(227,60,37)"/><text x="318.00" y="830.50"></text></g><g><title>0x7f5a552ab8a4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="315" y="836" width="2" height="15" fill="rgb(234,209,43)"/><text x="318.00" y="846.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:4) (2 samples, 0.38%)</title><rect x="315" y="148" width="4" height="15" fill="rgb(221,112,44)"/><text x="318.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="315" y="164" width="4" height="15" fill="rgb(251,137,18)"/><text x="318.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.38%)</title><rect x="315" y="180" width="4" height="15" fill="rgb(233,118,8)"/><text x="318.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="315" y="196" width="4" height="15" fill="rgb(240,13,7)"/><text x="318.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="315" y="212" width="4" height="15" fill="rgb(244,157,47)"/><text x="318.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="315" y="228" width="4" height="15" fill="rgb(240,105,18)"/><text x="318.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="315" y="244" width="4" height="15" fill="rgb(253,173,7)"/><text x="318.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="315" y="260" width="4" height="15" fill="rgb(226,201,24)"/><text x="318.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="315" y="276" width="4" height="15" fill="rgb(219,70,52)"/><text x="318.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.38%)</title><rect x="315" y="292" width="4" height="15" fill="rgb(220,200,7)"/><text x="318.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="315" y="308" width="4" height="15" fill="rgb(246,46,48)"/><text x="318.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="315" y="324" width="4" height="15" fill="rgb(248,105,36)"/><text x="318.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="315" y="340" width="4" height="15" fill="rgb(242,219,50)"/><text x="318.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="315" y="356" width="4" height="15" fill="rgb(240,193,34)"/><text x="318.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="315" y="372" width="4" height="15" fill="rgb(240,106,54)"/><text x="318.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.38%)</title><rect x="315" y="388" width="4" height="15" fill="rgb(209,206,8)"/><text x="318.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="315" y="404" width="4" height="15" fill="rgb(233,148,8)"/><text x="318.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="315" y="420" width="4" height="15" fill="rgb(206,117,39)"/><text x="318.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="315" y="436" width="4" height="15" fill="rgb(234,115,23)"/><text x="318.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="315" y="452" width="4" height="15" fill="rgb(215,63,21)"/><text x="318.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="315" y="468" width="4" height="15" fill="rgb(237,104,37)"/><text x="318.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.19%)</title><rect x="317" y="484" width="2" height="15" fill="rgb(205,34,45)"/><text x="320.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="317" y="500" width="2" height="15" fill="rgb(235,43,31)"/><text x="320.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="317" y="516" width="2" height="15" fill="rgb(206,24,42)"/><text x="320.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="317" y="532" width="2" height="15" fill="rgb(249,176,43)"/><text x="320.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="317" y="548" width="2" height="15" fill="rgb(212,64,36)"/><text x="320.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="317" y="564" width="2" height="15" fill="rgb(224,96,16)"/><text x="320.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.19%)</title><rect x="317" y="580" width="2" height="15" fill="rgb(205,6,18)"/><text x="320.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="317" y="596" width="2" height="15" fill="rgb(253,61,28)"/><text x="320.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="317" y="612" width="2" height="15" fill="rgb(224,52,42)"/><text x="320.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="317" y="628" width="2" height="15" fill="rgb(219,119,0)"/><text x="320.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="317" y="644" width="2" height="15" fill="rgb(242,66,28)"/><text x="320.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="317" y="660" width="2" height="15" fill="rgb(233,5,45)"/><text x="320.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.19%)</title><rect x="317" y="676" width="2" height="15" fill="rgb(228,221,10)"/><text x="320.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="317" y="692" width="2" height="15" fill="rgb(245,43,47)"/><text x="320.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="317" y="708" width="2" height="15" fill="rgb(231,86,31)"/><text x="320.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="317" y="724" width="2" height="15" fill="rgb(243,105,2)"/><text x="320.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="317" y="740" width="2" height="15" fill="rgb(215,117,47)"/><text x="320.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="317" y="756" width="2" height="15" fill="rgb(240,145,53)"/><text x="320.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.19%)</title><rect x="317" y="772" width="2" height="15" fill="rgb(212,80,1)"/><text x="320.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="317" y="788" width="2" height="15" fill="rgb(227,216,44)"/><text x="320.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="317" y="804" width="2" height="15" fill="rgb(212,158,18)"/><text x="320.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="317" y="820" width="2" height="15" fill="rgb(234,49,45)"/><text x="320.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="317" y="836" width="2" height="15" fill="rgb(231,31,4)"/><text x="320.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="317" y="852" width="2" height="15" fill="rgb(244,218,31)"/><text x="320.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.19%)</title><rect x="317" y="868" width="2" height="15" fill="rgb(251,46,5)"/><text x="320.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="317" y="884" width="2" height="15" fill="rgb(250,113,21)"/><text x="320.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="317" y="900" width="2" height="15" fill="rgb(244,144,16)"/><text x="320.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="317" y="916" width="2" height="15" fill="rgb(238,60,38)"/><text x="320.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.19%)</title><rect x="317" y="932" width="2" height="15" fill="rgb(212,2,43)"/><text x="320.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="317" y="948" width="2" height="15" fill="rgb(213,215,42)"/><text x="320.00" y="958.50"></text></g><g><title>0x7f5a40573933 (?) (1 samples, 0.19%)</title><rect x="317" y="964" width="2" height="15" fill="rgb(220,94,15)"/><text x="320.00" y="974.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:25) (1 samples, 0.19%)</title><rect x="319" y="1684" width="2" height="15" fill="rgb(244,19,16)"/><text x="322.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="319" y="1700" width="2" height="15" fill="rgb(220,198,21)"/><text x="322.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="319" y="1716" width="2" height="15" fill="rgb(224,151,39)"/><text x="322.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="319" y="1732" width="2" height="15" fill="rgb(224,203,4)"/><text x="322.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="319" y="1748" width="2" height="15" fill="rgb(217,87,31)"/><text x="322.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="319" y="1764" width="2" height="15" fill="rgb(220,63,27)"/><text x="322.00" y="1774.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_omp.py:542) (1 samples, 0.19%)</title><rect x="319" y="1780" width="2" height="15" fill="rgb(205,129,34)"/><text x="322.00" y="1790.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.19%)</title><rect x="319" y="1796" width="2" height="15" fill="rgb(224,117,21)"/><text x="322.00" y="1806.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.38%)</title><rect x="319" y="1108" width="4" height="15" fill="rgb(230,6,31)"/><text x="322.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1124" width="4" height="15" fill="rgb(242,187,16)"/><text x="322.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1140" width="4" height="15" fill="rgb(233,194,50)"/><text x="322.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1156" width="4" height="15" fill="rgb(251,41,38)"/><text x="322.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1172" width="4" height="15" fill="rgb(219,128,21)"/><text x="322.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1188" width="4" height="15" fill="rgb(249,107,47)"/><text x="322.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (2 samples, 0.38%)</title><rect x="319" y="1204" width="4" height="15" fill="rgb(218,85,26)"/><text x="322.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1220" width="4" height="15" fill="rgb(211,126,2)"/><text x="322.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1236" width="4" height="15" fill="rgb(250,109,17)"/><text x="322.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1252" width="4" height="15" fill="rgb(240,88,41)"/><text x="322.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1268" width="4" height="15" fill="rgb(235,12,25)"/><text x="322.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1284" width="4" height="15" fill="rgb(247,172,36)"/><text x="322.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (2 samples, 0.38%)</title><rect x="319" y="1300" width="4" height="15" fill="rgb(236,106,38)"/><text x="322.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1316" width="4" height="15" fill="rgb(208,181,27)"/><text x="322.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1332" width="4" height="15" fill="rgb(223,71,52)"/><text x="322.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1348" width="4" height="15" fill="rgb(245,217,7)"/><text x="322.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1364" width="4" height="15" fill="rgb(229,136,34)"/><text x="322.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1380" width="4" height="15" fill="rgb(228,65,18)"/><text x="322.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (2 samples, 0.38%)</title><rect x="319" y="1396" width="4" height="15" fill="rgb(220,215,25)"/><text x="322.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1412" width="4" height="15" fill="rgb(221,34,19)"/><text x="322.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1428" width="4" height="15" fill="rgb(226,13,19)"/><text x="322.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1444" width="4" height="15" fill="rgb(251,154,31)"/><text x="322.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1460" width="4" height="15" fill="rgb(219,155,13)"/><text x="322.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1476" width="4" height="15" fill="rgb(246,95,50)"/><text x="322.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (2 samples, 0.38%)</title><rect x="319" y="1492" width="4" height="15" fill="rgb(235,56,3)"/><text x="322.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1508" width="4" height="15" fill="rgb(233,23,40)"/><text x="322.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1524" width="4" height="15" fill="rgb(221,91,54)"/><text x="322.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1540" width="4" height="15" fill="rgb(205,66,47)"/><text x="322.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1556" width="4" height="15" fill="rgb(239,164,38)"/><text x="322.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1572" width="4" height="15" fill="rgb(212,170,4)"/><text x="322.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (2 samples, 0.38%)</title><rect x="319" y="1588" width="4" height="15" fill="rgb(218,209,32)"/><text x="322.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="319" y="1604" width="4" height="15" fill="rgb(228,160,32)"/><text x="322.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="319" y="1620" width="4" height="15" fill="rgb(249,4,30)"/><text x="322.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="319" y="1636" width="4" height="15" fill="rgb(239,168,28)"/><text x="322.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="319" y="1652" width="4" height="15" fill="rgb(233,85,24)"/><text x="322.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="319" y="1668" width="4" height="15" fill="rgb(224,32,54)"/><text x="322.00" y="1678.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:31) (1 samples, 0.19%)</title><rect x="321" y="1684" width="2" height="15" fill="rgb(219,80,8)"/><text x="324.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="321" y="1700" width="2" height="15" fill="rgb(220,36,29)"/><text x="324.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="321" y="1716" width="2" height="15" fill="rgb(218,171,28)"/><text x="324.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="321" y="1732" width="2" height="15" fill="rgb(239,135,39)"/><text x="324.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="321" y="1748" width="2" height="15" fill="rgb(225,124,37)"/><text x="324.00" y="1758.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.19%)</title><rect x="321" y="1764" width="2" height="15" fill="rgb(245,147,27)"/><text x="324.00" y="1774.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.19%)</title><rect x="321" y="1780" width="2" height="15" fill="rgb(227,50,24)"/><text x="324.00" y="1790.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;:53) (1 samples, 0.19%)</title><rect x="321" y="1796" width="2" height="15" fill="rgb(228,181,17)"/><text x="324.00" y="1806.50"></text></g><g><title>root (&lt;template&gt;:138) (1 samples, 0.19%)</title><rect x="323" y="1572" width="3" height="15" fill="rgb(214,14,15)"/><text x="326.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.19%)</title><rect x="323" y="1588" width="3" height="15" fill="rgb(214,119,44)"/><text x="326.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:4) (9 samples, 1.70%)</title><rect x="308" y="52" width="20" height="15" fill="rgb(237,76,17)"/><text x="311.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.70%)</title><rect x="308" y="68" width="20" height="15" fill="rgb(252,161,23)"/><text x="311.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.70%)</title><rect x="308" y="84" width="20" height="15" fill="rgb(231,9,48)"/><text x="311.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.70%)</title><rect x="308" y="100" width="20" height="15" fill="rgb(221,191,26)"/><text x="311.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.70%)</title><rect x="308" y="116" width="20" height="15" fill="rgb(236,119,30)"/><text x="311.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.70%)</title><rect x="308" y="132" width="20" height="15" fill="rgb(207,0,0)"/><text x="311.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py:7) (4 samples, 0.75%)</title><rect x="319" y="148" width="9" height="15" fill="rgb(220,157,36)"/><text x="322.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="164" width="9" height="15" fill="rgb(208,182,1)"/><text x="322.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="180" width="9" height="15" fill="rgb(247,72,13)"/><text x="322.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="196" width="9" height="15" fill="rgb(219,167,15)"/><text x="322.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="212" width="9" height="15" fill="rgb(217,157,52)"/><text x="322.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="228" width="9" height="15" fill="rgb(250,9,51)"/><text x="322.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.75%)</title><rect x="319" y="244" width="9" height="15" fill="rgb(246,225,50)"/><text x="322.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="260" width="9" height="15" fill="rgb(251,55,2)"/><text x="322.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="276" width="9" height="15" fill="rgb(242,131,9)"/><text x="322.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="292" width="9" height="15" fill="rgb(215,203,34)"/><text x="322.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="308" width="9" height="15" fill="rgb(232,189,34)"/><text x="322.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="324" width="9" height="15" fill="rgb(226,27,2)"/><text x="322.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.75%)</title><rect x="319" y="340" width="9" height="15" fill="rgb(209,43,51)"/><text x="322.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="356" width="9" height="15" fill="rgb(231,89,14)"/><text x="322.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="372" width="9" height="15" fill="rgb(218,211,37)"/><text x="322.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="388" width="9" height="15" fill="rgb(254,129,37)"/><text x="322.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="404" width="9" height="15" fill="rgb(210,202,4)"/><text x="322.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="420" width="9" height="15" fill="rgb(245,168,3)"/><text x="322.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 0.75%)</title><rect x="319" y="436" width="9" height="15" fill="rgb(215,130,9)"/><text x="322.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="452" width="9" height="15" fill="rgb(206,154,28)"/><text x="322.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.75%)</title><rect x="319" y="468" width="9" height="15" fill="rgb(220,148,30)"/><text x="322.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="484" width="9" height="15" fill="rgb(230,220,40)"/><text x="322.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="500" width="9" height="15" fill="rgb(218,184,28)"/><text x="322.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="516" width="9" height="15" fill="rgb(246,4,21)"/><text x="322.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="532" width="9" height="15" fill="rgb(216,162,39)"/><text x="322.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="548" width="9" height="15" fill="rgb(240,183,13)"/><text x="322.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="564" width="9" height="15" fill="rgb(232,125,45)"/><text x="322.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 0.75%)</title><rect x="319" y="580" width="9" height="15" fill="rgb(219,128,47)"/><text x="322.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="596" width="9" height="15" fill="rgb(250,161,10)"/><text x="322.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="612" width="9" height="15" fill="rgb(227,147,23)"/><text x="322.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="628" width="9" height="15" fill="rgb(241,175,19)"/><text x="322.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="644" width="9" height="15" fill="rgb(213,96,5)"/><text x="322.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="660" width="9" height="15" fill="rgb(206,95,0)"/><text x="322.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 0.75%)</title><rect x="319" y="676" width="9" height="15" fill="rgb(231,93,27)"/><text x="322.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="692" width="9" height="15" fill="rgb(239,136,28)"/><text x="322.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="708" width="9" height="15" fill="rgb(206,152,23)"/><text x="322.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="724" width="9" height="15" fill="rgb(216,228,41)"/><text x="322.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="740" width="9" height="15" fill="rgb(212,157,19)"/><text x="322.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="756" width="9" height="15" fill="rgb(249,144,32)"/><text x="322.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 0.75%)</title><rect x="319" y="772" width="9" height="15" fill="rgb(246,98,32)"/><text x="322.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="788" width="9" height="15" fill="rgb(217,185,36)"/><text x="322.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="804" width="9" height="15" fill="rgb(209,59,6)"/><text x="322.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="820" width="9" height="15" fill="rgb(208,75,18)"/><text x="322.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="836" width="9" height="15" fill="rgb(242,27,33)"/><text x="322.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="852" width="9" height="15" fill="rgb(209,89,50)"/><text x="322.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 0.75%)</title><rect x="319" y="868" width="9" height="15" fill="rgb(210,22,6)"/><text x="322.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="884" width="9" height="15" fill="rgb(233,20,53)"/><text x="322.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.75%)</title><rect x="319" y="900" width="9" height="15" fill="rgb(249,164,1)"/><text x="322.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="916" width="9" height="15" fill="rgb(218,201,54)"/><text x="322.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="932" width="9" height="15" fill="rgb(214,190,36)"/><text x="322.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="948" width="9" height="15" fill="rgb(236,66,52)"/><text x="322.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="964" width="9" height="15" fill="rgb(208,200,5)"/><text x="322.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="980" width="9" height="15" fill="rgb(244,191,45)"/><text x="322.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="996" width="9" height="15" fill="rgb(219,173,35)"/><text x="322.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 0.75%)</title><rect x="319" y="1012" width="9" height="15" fill="rgb(237,6,3)"/><text x="322.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.75%)</title><rect x="319" y="1028" width="9" height="15" fill="rgb(227,78,1)"/><text x="322.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.75%)</title><rect x="319" y="1044" width="9" height="15" fill="rgb(237,211,25)"/><text x="322.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.75%)</title><rect x="319" y="1060" width="9" height="15" fill="rgb(235,92,46)"/><text x="322.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.75%)</title><rect x="319" y="1076" width="9" height="15" fill="rgb(225,102,1)"/><text x="322.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.75%)</title><rect x="319" y="1092" width="9" height="15" fill="rgb(247,0,17)"/><text x="322.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.38%)</title><rect x="323" y="1108" width="5" height="15" fill="rgb(205,37,12)"/><text x="326.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.38%)</title><rect x="323" y="1124" width="5" height="15" fill="rgb(235,167,13)"/><text x="326.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="323" y="1140" width="5" height="15" fill="rgb(217,16,36)"/><text x="326.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="323" y="1156" width="5" height="15" fill="rgb(248,101,39)"/><text x="326.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="323" y="1172" width="5" height="15" fill="rgb(252,118,27)"/><text x="326.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="323" y="1188" width="5" height="15" fill="rgb(245,65,29)"/><text x="326.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="323" y="1204" width="5" height="15" fill="rgb(239,58,30)"/><text x="326.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="323" y="1220" width="5" height="15" fill="rgb(233,208,42)"/><text x="326.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.38%)</title><rect x="323" y="1236" width="5" height="15" fill="rgb(226,208,20)"/><text x="326.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.38%)</title><rect x="323" y="1252" width="5" height="15" fill="rgb(224,21,21)"/><text x="326.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="323" y="1268" width="5" height="15" fill="rgb(211,157,28)"/><text x="326.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="323" y="1284" width="5" height="15" fill="rgb(230,180,25)"/><text x="326.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="323" y="1300" width="5" height="15" fill="rgb(239,7,3)"/><text x="326.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="323" y="1316" width="5" height="15" fill="rgb(222,58,43)"/><text x="326.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="323" y="1332" width="5" height="15" fill="rgb(223,88,10)"/><text x="326.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="323" y="1348" width="5" height="15" fill="rgb(254,120,17)"/><text x="326.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.38%)</title><rect x="323" y="1364" width="5" height="15" fill="rgb(248,98,53)"/><text x="326.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.38%)</title><rect x="323" y="1380" width="5" height="15" fill="rgb(214,122,15)"/><text x="326.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.38%)</title><rect x="323" y="1396" width="5" height="15" fill="rgb(214,143,15)"/><text x="326.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.38%)</title><rect x="323" y="1412" width="5" height="15" fill="rgb(211,216,10)"/><text x="326.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.38%)</title><rect x="323" y="1428" width="5" height="15" fill="rgb(211,75,9)"/><text x="326.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.38%)</title><rect x="323" y="1444" width="5" height="15" fill="rgb(243,34,45)"/><text x="326.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.38%)</title><rect x="323" y="1460" width="5" height="15" fill="rgb(249,98,31)"/><text x="326.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.38%)</title><rect x="323" y="1476" width="5" height="15" fill="rgb(234,179,2)"/><text x="326.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.38%)</title><rect x="323" y="1492" width="5" height="15" fill="rgb(206,16,29)"/><text x="326.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.38%)</title><rect x="323" y="1508" width="5" height="15" fill="rgb(235,226,32)"/><text x="326.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.38%)</title><rect x="323" y="1524" width="5" height="15" fill="rgb(215,2,45)"/><text x="326.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.38%)</title><rect x="323" y="1540" width="5" height="15" fill="rgb(252,202,49)"/><text x="326.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.38%)</title><rect x="323" y="1556" width="5" height="15" fill="rgb(215,160,5)"/><text x="326.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:94) (1 samples, 0.19%)</title><rect x="326" y="1572" width="2" height="15" fill="rgb(251,85,40)"/><text x="329.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:252) (1 samples, 0.19%)</title><rect x="326" y="1588" width="2" height="15" fill="rgb(222,67,1)"/><text x="329.00" y="1598.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.38%)</title><rect x="328" y="180" width="4" height="15" fill="rgb(243,166,42)"/><text x="331.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.19%)</title><rect x="332" y="212" width="3" height="15" fill="rgb(214,195,15)"/><text x="335.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.19%)</title><rect x="332" y="228" width="3" height="15" fill="rgb(213,10,44)"/><text x="335.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.19%)</title><rect x="332" y="244" width="3" height="15" fill="rgb(214,48,42)"/><text x="335.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:196) (1 samples, 0.19%)</title><rect x="332" y="260" width="3" height="15" fill="rgb(220,180,25)"/><text x="335.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (1 samples, 0.19%)</title><rect x="335" y="212" width="2" height="15" fill="rgb(241,105,48)"/><text x="338.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.19%)</title><rect x="335" y="228" width="2" height="15" fill="rgb(207,105,35)"/><text x="338.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.19%)</title><rect x="335" y="244" width="2" height="15" fill="rgb(244,98,27)"/><text x="338.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.19%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(214,185,24)"/><text x="338.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.19%)</title><rect x="335" y="276" width="2" height="15" fill="rgb(215,134,28)"/><text x="338.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (1 samples, 0.19%)</title><rect x="335" y="292" width="2" height="15" fill="rgb(225,176,8)"/><text x="338.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.19%)</title><rect x="335" y="308" width="2" height="15" fill="rgb(254,26,50)"/><text x="338.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (1 samples, 0.19%)</title><rect x="335" y="324" width="2" height="15" fill="rgb(239,159,7)"/><text x="338.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (3 samples, 0.57%)</title><rect x="332" y="196" width="7" height="15" fill="rgb(225,156,49)"/><text x="335.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="337" y="212" width="2" height="15" fill="rgb(244,142,45)"/><text x="340.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="337" y="228" width="2" height="15" fill="rgb(227,61,11)"/><text x="340.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.19%)</title><rect x="337" y="244" width="2" height="15" fill="rgb(228,203,36)"/><text x="340.00" y="254.50"></text></g><g><title>PyArray_NewLikeArray (ctors.c:1346) (1 samples, 0.19%)</title><rect x="337" y="260" width="2" height="15" fill="rgb(243,184,45)"/><text x="340.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.19%)</title><rect x="339" y="196" width="2" height="15" fill="rgb(218,203,48)"/><text x="342.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="343" y="292" width="3" height="15" fill="rgb(225,147,45)"/><text x="346.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.19%)</title><rect x="343" y="308" width="3" height="15" fill="rgb(209,58,4)"/><text x="346.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.19%)</title><rect x="343" y="324" width="3" height="15" fill="rgb(253,162,45)"/><text x="346.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (3 samples, 0.57%)</title><rect x="341" y="196" width="7" height="15" fill="rgb(225,82,53)"/><text x="344.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.38%)</title><rect x="343" y="212" width="5" height="15" fill="rgb(225,205,25)"/><text x="346.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (2 samples, 0.38%)</title><rect x="343" y="228" width="5" height="15" fill="rgb(206,48,41)"/><text x="346.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.38%)</title><rect x="343" y="244" width="5" height="15" fill="rgb(248,116,46)"/><text x="346.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.38%)</title><rect x="343" y="260" width="5" height="15" fill="rgb(246,16,1)"/><text x="346.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.38%)</title><rect x="343" y="276" width="5" height="15" fill="rgb(209,0,27)"/><text x="346.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="346" y="292" width="2" height="15" fill="rgb(207,61,48)"/><text x="349.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="346" y="308" width="2" height="15" fill="rgb(212,87,46)"/><text x="349.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1848) (1 samples, 0.19%)</title><rect x="346" y="324" width="2" height="15" fill="rgb(209,25,45)"/><text x="349.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (8 samples, 1.51%)</title><rect x="332" y="180" width="18" height="15" fill="rgb(214,149,47)"/><text x="335.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.19%)</title><rect x="348" y="196" width="2" height="15" fill="rgb(225,76,10)"/><text x="351.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.19%)</title><rect x="348" y="212" width="2" height="15" fill="rgb(245,214,54)"/><text x="351.00" y="222.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:18) (11 samples, 2.08%)</title><rect x="328" y="100" width="24" height="15" fill="rgb(225,33,33)"/><text x="331.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (11 samples, 2.08%)</title><rect x="328" y="116" width="24" height="15" fill="rgb(241,218,0)"/><text x="331.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (11 samples, 2.08%)</title><rect x="328" y="132" width="24" height="15" fill="rgb(242,107,5)"/><text x="331.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (11 samples, 2.08%)</title><rect x="328" y="148" width="24" height="15" fill="rgb(252,15,12)"/><text x="331.00" y="158.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (11 samples, 2.08%)</title><rect x="328" y="164" width="24" height="15" fill="rgb(232,69,28)"/><text x="331.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.19%)</title><rect x="350" y="180" width="2" height="15" fill="rgb(253,215,12)"/><text x="353.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.19%)</title><rect x="355" y="164" width="2" height="15" fill="rgb(233,183,37)"/><text x="358.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.19%)</title><rect x="368" y="180" width="2" height="15" fill="rgb(208,193,32)"/><text x="371.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.94%)</title><rect x="370" y="180" width="11" height="15" fill="rgb(228,148,50)"/><text x="373.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.19%)</title><rect x="379" y="196" width="2" height="15" fill="rgb(243,65,29)"/><text x="382.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (1 samples, 0.19%)</title><rect x="395" y="212" width="2" height="15" fill="rgb(214,200,30)"/><text x="398.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.19%)</title><rect x="395" y="228" width="2" height="15" fill="rgb(217,176,9)"/><text x="398.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.19%)</title><rect x="395" y="244" width="2" height="15" fill="rgb(253,204,4)"/><text x="398.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.19%)</title><rect x="395" y="260" width="2" height="15" fill="rgb(246,41,30)"/><text x="398.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.19%)</title><rect x="397" y="244" width="2" height="15" fill="rgb(210,36,41)"/><text x="400.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="397" y="260" width="2" height="15" fill="rgb(211,17,26)"/><text x="400.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.19%)</title><rect x="397" y="276" width="2" height="15" fill="rgb(205,8,7)"/><text x="400.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.19%)</title><rect x="399" y="324" width="2" height="15" fill="rgb(222,139,24)"/><text x="402.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (1 samples, 0.19%)</title><rect x="401" y="340" width="3" height="15" fill="rgb(241,192,35)"/><text x="404.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (2 samples, 0.38%)</title><rect x="401" y="324" width="5" height="15" fill="rgb(208,138,54)"/><text x="404.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.19%)</title><rect x="404" y="340" width="2" height="15" fill="rgb(235,19,13)"/><text x="407.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (1 samples, 0.19%)</title><rect x="404" y="356" width="2" height="15" fill="rgb(245,2,22)"/><text x="407.00" y="366.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (5 samples, 0.94%)</title><rect x="399" y="276" width="11" height="15" fill="rgb(210,197,33)"/><text x="402.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (5 samples, 0.94%)</title><rect x="399" y="292" width="11" height="15" fill="rgb(249,2,27)"/><text x="402.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (5 samples, 0.94%)</title><rect x="399" y="308" width="11" height="15" fill="rgb(209,68,5)"/><text x="402.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (2 samples, 0.38%)</title><rect x="406" y="324" width="4" height="15" fill="rgb(253,138,29)"/><text x="409.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (2 samples, 0.38%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(224,142,7)"/><text x="409.00" y="350.50"></text></g><g><title>discover_dimensions (ctors.c:883) (3 samples, 0.57%)</title><rect x="410" y="292" width="7" height="15" fill="rgb(205,92,39)"/><text x="413.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:679) (1 samples, 0.19%)</title><rect x="417" y="308" width="2" height="15" fill="rgb(235,61,28)"/><text x="420.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (2 samples, 0.38%)</title><rect x="419" y="308" width="5" height="15" fill="rgb(232,123,48)"/><text x="422.00" y="318.50"></text></g><g><title>0x7f5a544cc0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="421" y="324" width="3" height="15" fill="rgb(249,146,26)"/><text x="424.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:699) (2 samples, 0.38%)</title><rect x="424" y="308" width="4" height="15" fill="rgb(247,168,44)"/><text x="427.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:701) (1 samples, 0.19%)</title><rect x="428" y="308" width="2" height="15" fill="rgb(205,67,39)"/><text x="431.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (15 samples, 2.83%)</title><rect x="399" y="260" width="34" height="15" fill="rgb(245,226,13)"/><text x="402.00" y="270.50">Py..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (10 samples, 1.89%)</title><rect x="410" y="276" width="23" height="15" fill="rgb(210,152,0)"/><text x="413.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c:884) (7 samples, 1.32%)</title><rect x="417" y="292" width="16" height="15" fill="rgb(249,98,32)"/><text x="420.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.19%)</title><rect x="430" y="308" width="3" height="15" fill="rgb(247,224,53)"/><text x="433.00" y="318.50"></text></g><g><title>setArrayFromSequence (ctors.c:537) (1 samples, 0.19%)</title><rect x="433" y="292" width="2" height="15" fill="rgb(214,129,14)"/><text x="436.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (2 samples, 0.38%)</title><rect x="435" y="324" width="4" height="15" fill="rgb(252,23,32)"/><text x="438.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (2 samples, 0.38%)</title><rect x="439" y="324" width="5" height="15" fill="rgb(219,22,29)"/><text x="442.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1539) (22 samples, 4.15%)</title><rect x="397" y="228" width="49" height="15" fill="rgb(205,158,54)"/><text x="400.00" y="238.50">arra..</text></g><g><title>prepare_index (mapping.c:516) (21 samples, 3.96%)</title><rect x="399" y="244" width="47" height="15" fill="rgb(249,127,32)"/><text x="402.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (6 samples, 1.13%)</title><rect x="433" y="260" width="13" height="15" fill="rgb(216,173,48)"/><text x="436.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (6 samples, 1.13%)</title><rect x="433" y="276" width="13" height="15" fill="rgb(240,152,29)"/><text x="436.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:550) (5 samples, 0.94%)</title><rect x="435" y="292" width="11" height="15" fill="rgb(244,116,32)"/><text x="438.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (5 samples, 0.94%)</title><rect x="435" y="308" width="11" height="15" fill="rgb(228,189,12)"/><text x="438.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (1 samples, 0.19%)</title><rect x="444" y="324" width="2" height="15" fill="rgb(232,151,48)"/><text x="447.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.19%)</title><rect x="446" y="228" width="2" height="15" fill="rgb(231,212,26)"/><text x="449.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2839) (1 samples, 0.19%)</title><rect x="446" y="244" width="2" height="15" fill="rgb(217,223,46)"/><text x="449.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.19%)</title><rect x="446" y="260" width="2" height="15" fill="rgb(224,2,24)"/><text x="449.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1540) (1 samples, 0.19%)</title><rect x="448" y="244" width="2" height="15" fill="rgb(240,129,1)"/><text x="451.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="448" y="260" width="2" height="15" fill="rgb(238,113,33)"/><text x="451.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (25 samples, 4.72%)</title><rect x="397" y="212" width="56" height="15" fill="rgb(217,149,54)"/><text x="400.00" y="222.50">_run ..</text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.38%)</title><rect x="448" y="228" width="5" height="15" fill="rgb(228,88,36)"/><text x="451.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1572) (1 samples, 0.19%)</title><rect x="450" y="244" width="3" height="15" fill="rgb(238,50,38)"/><text x="453.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.19%)</title><rect x="450" y="260" width="3" height="15" fill="rgb(249,47,45)"/><text x="453.00" y="270.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.38%)</title><rect x="453" y="244" width="4" height="15" fill="rgb(237,164,38)"/><text x="456.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.38%)</title><rect x="453" y="260" width="4" height="15" fill="rgb(226,70,9)"/><text x="456.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.38%)</title><rect x="453" y="276" width="4" height="15" fill="rgb(235,87,48)"/><text x="456.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.38%)</title><rect x="453" y="292" width="4" height="15" fill="rgb(234,175,53)"/><text x="456.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.38%)</title><rect x="453" y="308" width="4" height="15" fill="rgb(222,101,30)"/><text x="456.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.38%)</title><rect x="453" y="324" width="4" height="15" fill="rgb(219,130,17)"/><text x="456.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.38%)</title><rect x="453" y="340" width="4" height="15" fill="rgb(209,97,6)"/><text x="456.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.38%)</title><rect x="453" y="356" width="4" height="15" fill="rgb(253,155,34)"/><text x="456.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.38%)</title><rect x="453" y="372" width="4" height="15" fill="rgb(234,228,36)"/><text x="456.00" y="382.50"></text></g><g><title>0x7f5a552ab21f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="455" y="388" width="2" height="15" fill="rgb(238,88,39)"/><text x="458.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:133) (1 samples, 0.19%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(241,49,11)"/><text x="460.00" y="286.50"></text></g><g><title>0x7f5a552ca124 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="457" y="292" width="2" height="15" fill="rgb(205,154,28)"/><text x="460.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 0.75%)</title><rect x="453" y="212" width="8" height="15" fill="rgb(212,57,40)"/><text x="456.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 0.75%)</title><rect x="453" y="228" width="8" height="15" fill="rgb(242,192,12)"/><text x="456.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.38%)</title><rect x="457" y="244" width="4" height="15" fill="rgb(248,9,52)"/><text x="460.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.38%)</title><rect x="457" y="260" width="4" height="15" fill="rgb(216,221,53)"/><text x="460.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.19%)</title><rect x="459" y="276" width="2" height="15" fill="rgb(250,215,8)"/><text x="462.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="459" y="292" width="2" height="15" fill="rgb(218,180,41)"/><text x="462.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.19%)</title><rect x="461" y="212" width="3" height="15" fill="rgb(245,101,50)"/><text x="464.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.19%)</title><rect x="461" y="228" width="3" height="15" fill="rgb(225,209,50)"/><text x="464.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.19%)</title><rect x="461" y="244" width="3" height="15" fill="rgb(233,181,48)"/><text x="464.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.19%)</title><rect x="461" y="260" width="3" height="15" fill="rgb(205,166,48)"/><text x="464.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.19%)</title><rect x="461" y="276" width="3" height="15" fill="rgb(222,191,21)"/><text x="464.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.19%)</title><rect x="461" y="292" width="3" height="15" fill="rgb(217,162,35)"/><text x="464.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.19%)</title><rect x="466" y="260" width="2" height="15" fill="rgb(206,26,45)"/><text x="469.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.19%)</title><rect x="466" y="276" width="2" height="15" fill="rgb(239,43,22)"/><text x="469.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.19%)</title><rect x="466" y="292" width="2" height="15" fill="rgb(239,173,6)"/><text x="469.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.19%)</title><rect x="466" y="308" width="2" height="15" fill="rgb(213,169,32)"/><text x="469.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:920) (1 samples, 0.19%)</title><rect x="466" y="324" width="2" height="15" fill="rgb(218,116,15)"/><text x="469.00" y="334.50"></text></g><g><title>0x7f5a552c9dbb (libc-2.29.so) (1 samples, 0.19%)</title><rect x="468" y="356" width="2" height="15" fill="rgb(252,62,8)"/><text x="471.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.38%)</title><rect x="468" y="340" width="5" height="15" fill="rgb(233,78,6)"/><text x="471.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.19%)</title><rect x="470" y="356" width="3" height="15" fill="rgb(225,178,23)"/><text x="473.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.57%)</title><rect x="468" y="260" width="7" height="15" fill="rgb(254,189,40)"/><text x="471.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.57%)</title><rect x="468" y="276" width="7" height="15" fill="rgb(236,34,53)"/><text x="471.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.57%)</title><rect x="468" y="292" width="7" height="15" fill="rgb(209,117,20)"/><text x="471.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.57%)</title><rect x="468" y="308" width="7" height="15" fill="rgb(245,185,42)"/><text x="471.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.57%)</title><rect x="468" y="324" width="7" height="15" fill="rgb(217,159,48)"/><text x="471.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1078) (1 samples, 0.19%)</title><rect x="473" y="340" width="2" height="15" fill="rgb(215,154,0)"/><text x="476.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:329) (1 samples, 0.19%)</title><rect x="473" y="356" width="2" height="15" fill="rgb(228,151,26)"/><text x="476.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py:16) (6 samples, 1.13%)</title><rect x="464" y="212" width="13" height="15" fill="rgb(225,75,45)"/><text x="467.00" y="222.50"></text></g><g><title>array_add (number.c:330) (5 samples, 0.94%)</title><rect x="466" y="228" width="11" height="15" fill="rgb(221,80,33)"/><text x="469.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.94%)</title><rect x="466" y="244" width="11" height="15" fill="rgb(215,123,33)"/><text x="469.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.19%)</title><rect x="475" y="260" width="2" height="15" fill="rgb(213,27,53)"/><text x="478.00" y="270.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.19%)</title><rect x="475" y="276" width="2" height="15" fill="rgb(219,149,10)"/><text x="478.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.19%)</title><rect x="475" y="292" width="2" height="15" fill="rgb(254,203,14)"/><text x="478.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (38 samples, 7.17%)</title><rect x="395" y="196" width="84" height="15" fill="rgb(230,101,5)"/><text x="398.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.19%)</title><rect x="477" y="212" width="2" height="15" fill="rgb(242,201,25)"/><text x="480.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.19%)</title><rect x="477" y="228" width="2" height="15" fill="rgb(207,184,34)"/><text x="480.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.19%)</title><rect x="484" y="340" width="2" height="15" fill="rgb(214,120,49)"/><text x="487.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="484" y="356" width="2" height="15" fill="rgb(228,77,19)"/><text x="487.00" y="366.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.19%)</title><rect x="486" y="356" width="2" height="15" fill="rgb(206,220,22)"/><text x="489.00" y="366.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:13) (4 samples, 0.75%)</title><rect x="482" y="260" width="8" height="15" fill="rgb(238,183,38)"/><text x="485.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (3 samples, 0.57%)</title><rect x="484" y="276" width="6" height="15" fill="rgb(230,108,43)"/><text x="487.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.57%)</title><rect x="484" y="292" width="6" height="15" fill="rgb(211,97,12)"/><text x="487.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.57%)</title><rect x="484" y="308" width="6" height="15" fill="rgb(219,29,41)"/><text x="487.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.57%)</title><rect x="484" y="324" width="6" height="15" fill="rgb(229,195,11)"/><text x="487.00" y="334.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.38%)</title><rect x="486" y="340" width="4" height="15" fill="rgb(221,26,19)"/><text x="489.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:139) (1 samples, 0.19%)</title><rect x="488" y="356" width="2" height="15" fill="rgb(222,83,25)"/><text x="491.00" y="366.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py:15) (1 samples, 0.19%)</title><rect x="490" y="260" width="3" height="15" fill="rgb(224,68,1)"/><text x="493.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.19%)</title><rect x="490" y="276" width="3" height="15" fill="rgb(213,39,12)"/><text x="493.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.19%)</title><rect x="490" y="292" width="3" height="15" fill="rgb(244,47,35)"/><text x="493.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.19%)</title><rect x="490" y="308" width="3" height="15" fill="rgb(219,28,49)"/><text x="493.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.19%)</title><rect x="490" y="324" width="3" height="15" fill="rgb(243,200,47)"/><text x="493.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.19%)</title><rect x="490" y="340" width="3" height="15" fill="rgb(227,168,28)"/><text x="493.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.19%)</title><rect x="490" y="356" width="3" height="15" fill="rgb(251,193,40)"/><text x="493.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.19%)</title><rect x="490" y="372" width="3" height="15" fill="rgb(208,149,48)"/><text x="493.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (7 samples, 1.32%)</title><rect x="479" y="196" width="16" height="15" fill="rgb(248,16,36)"/><text x="482.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 1.32%)</title><rect x="479" y="212" width="16" height="15" fill="rgb(214,62,7)"/><text x="482.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:66) (7 samples, 1.32%)</title><rect x="479" y="228" width="16" height="15" fill="rgb(253,73,49)"/><text x="482.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py:38) (6 samples, 1.13%)</title><rect x="482" y="244" width="13" height="15" fill="rgb(248,168,27)"/><text x="485.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="493" y="260" width="2" height="15" fill="rgb(229,2,28)"/><text x="496.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="493" y="276" width="2" height="15" fill="rgb(222,97,37)"/><text x="496.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.19%)</title><rect x="493" y="292" width="2" height="15" fill="rgb(215,38,11)"/><text x="496.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:313) (2 samples, 0.38%)</title><rect x="495" y="196" width="4" height="15" fill="rgb(235,12,47)"/><text x="498.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.19%)</title><rect x="497" y="212" width="2" height="15" fill="rgb(242,29,37)"/><text x="500.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.19%)</title><rect x="497" y="228" width="2" height="15" fill="rgb(240,220,10)"/><text x="500.00" y="238.50"></text></g><g><title>0x7f5a553f51a0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="508" y="340" width="2" height="15" fill="rgb(249,215,17)"/><text x="511.00" y="350.50"></text></g><g><title>0x7f5a55428e0e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="510" y="340" width="3" height="15" fill="rgb(233,178,26)"/><text x="513.00" y="350.50"></text></g><g><title>0x7f5a55428e71 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="513" y="340" width="4" height="15" fill="rgb(231,163,47)"/><text x="516.00" y="350.50"></text></g><g><title>0x7f5a55428e96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="517" y="340" width="2" height="15" fill="rgb(248,64,36)"/><text x="520.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:19) (12 samples, 2.26%)</title><rect x="499" y="228" width="27" height="15" fill="rgb(223,160,31)"/><text x="502.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.26%)</title><rect x="499" y="244" width="27" height="15" fill="rgb(214,6,37)"/><text x="502.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 2.26%)</title><rect x="499" y="260" width="27" height="15" fill="rgb(225,40,27)"/><text x="502.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 2.26%)</title><rect x="499" y="276" width="27" height="15" fill="rgb(217,109,43)"/><text x="502.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 2.26%)</title><rect x="499" y="292" width="27" height="15" fill="rgb(248,134,48)"/><text x="502.00" y="302.50">t..</text></g><g><title>FLOAT_exp (loops.c.src:1602) (12 samples, 2.26%)</title><rect x="499" y="308" width="27" height="15" fill="rgb(225,30,43)"/><text x="502.00" y="318.50">F..</text></g><g><title>expf (libm-2.29.so) (12 samples, 2.26%)</title><rect x="499" y="324" width="27" height="15" fill="rgb(210,137,13)"/><text x="502.00" y="334.50">e..</text></g><g><title>0x7f5a55428ea6 (libm-2.29.so) (3 samples, 0.57%)</title><rect x="519" y="340" width="7" height="15" fill="rgb(232,53,39)"/><text x="522.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py:20) (1 samples, 0.19%)</title><rect x="526" y="228" width="2" height="15" fill="rgb(206,174,11)"/><text x="529.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="526" y="244" width="2" height="15" fill="rgb(252,102,32)"/><text x="529.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="526" y="260" width="2" height="15" fill="rgb(222,51,47)"/><text x="529.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="526" y="276" width="2" height="15" fill="rgb(240,8,39)"/><text x="529.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="526" y="292" width="2" height="15" fill="rgb(237,45,0)"/><text x="529.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.19%)</title><rect x="526" y="308" width="2" height="15" fill="rgb(229,129,7)"/><text x="529.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.19%)</title><rect x="526" y="324" width="2" height="15" fill="rgb(213,217,2)"/><text x="529.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.19%)</title><rect x="526" y="340" width="2" height="15" fill="rgb(209,88,5)"/><text x="529.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py:19) (1 samples, 0.19%)</title><rect x="528" y="228" width="2" height="15" fill="rgb(209,50,4)"/><text x="531.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="528" y="244" width="2" height="15" fill="rgb(216,40,27)"/><text x="531.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="528" y="260" width="2" height="15" fill="rgb(254,167,53)"/><text x="531.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="528" y="276" width="2" height="15" fill="rgb(240,54,9)"/><text x="531.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1332) (1 samples, 0.19%)</title><rect x="528" y="292" width="2" height="15" fill="rgb(248,150,12)"/><text x="531.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1640) (1 samples, 0.19%)</title><rect x="533" y="276" width="2" height="15" fill="rgb(205,0,32)"/><text x="536.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="533" y="292" width="2" height="15" fill="rgb(212,222,23)"/><text x="536.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.19%)</title><rect x="533" y="308" width="2" height="15" fill="rgb(230,106,29)"/><text x="536.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.19%)</title><rect x="533" y="324" width="2" height="15" fill="rgb(248,82,35)"/><text x="536.00" y="334.50"></text></g><g><title>0x7f5a55428e17 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="544" y="340" width="2" height="15" fill="rgb(205,75,7)"/><text x="547.00" y="350.50"></text></g><g><title>0x7f5a55428e7e (libm-2.29.so) (2 samples, 0.38%)</title><rect x="546" y="340" width="5" height="15" fill="rgb(238,181,43)"/><text x="549.00" y="350.50"></text></g><g><title>0x7f5a55428ea2 (libm-2.29.so) (3 samples, 0.57%)</title><rect x="551" y="340" width="6" height="15" fill="rgb(229,94,24)"/><text x="554.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:30) (14 samples, 2.64%)</title><rect x="530" y="228" width="32" height="15" fill="rgb(211,15,10)"/><text x="533.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (13 samples, 2.45%)</title><rect x="533" y="244" width="29" height="15" fill="rgb(227,53,18)"/><text x="536.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 2.45%)</title><rect x="533" y="260" width="29" height="15" fill="rgb(223,160,45)"/><text x="536.00" y="270.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (12 samples, 2.26%)</title><rect x="535" y="276" width="27" height="15" fill="rgb(232,139,19)"/><text x="538.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (12 samples, 2.26%)</title><rect x="535" y="292" width="27" height="15" fill="rgb(246,170,16)"/><text x="538.00" y="302.50">t..</text></g><g><title>FLOAT_exp (loops.c.src:1602) (12 samples, 2.26%)</title><rect x="535" y="308" width="27" height="15" fill="rgb(207,215,5)"/><text x="538.00" y="318.50">F..</text></g><g><title>expf (libm-2.29.so) (12 samples, 2.26%)</title><rect x="535" y="324" width="27" height="15" fill="rgb(252,91,2)"/><text x="538.00" y="334.50">e..</text></g><g><title>0x7f5a55428ea6 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="557" y="340" width="5" height="15" fill="rgb(212,106,48)"/><text x="560.00" y="350.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="566" y="292" width="2" height="15" fill="rgb(248,142,0)"/><text x="569.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.19%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(205,158,14)"/><text x="571.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.19%)</title><rect x="571" y="356" width="2" height="15" fill="rgb(254,69,19)"/><text x="574.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.19%)</title><rect x="571" y="372" width="2" height="15" fill="rgb(254,63,35)"/><text x="574.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.19%)</title><rect x="571" y="388" width="2" height="15" fill="rgb(235,169,52)"/><text x="574.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3789) (1 samples, 0.19%)</title><rect x="571" y="404" width="2" height="15" fill="rgb(244,24,13)"/><text x="574.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="571" y="420" width="2" height="15" fill="rgb(237,160,28)"/><text x="574.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.19%)</title><rect x="573" y="372" width="2" height="15" fill="rgb(214,9,14)"/><text x="576.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (2 samples, 0.38%)</title><rect x="575" y="388" width="4" height="15" fill="rgb(229,31,46)"/><text x="578.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (2 samples, 0.38%)</title><rect x="579" y="388" width="5" height="15" fill="rgb(211,157,7)"/><text x="582.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1662) (1 samples, 0.19%)</title><rect x="582" y="404" width="2" height="15" fill="rgb(221,68,22)"/><text x="585.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:216) (1 samples, 0.19%)</title><rect x="584" y="388" width="2" height="15" fill="rgb(231,139,10)"/><text x="587.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.19%)</title><rect x="586" y="388" width="2" height="15" fill="rgb(214,195,19)"/><text x="589.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 1.32%)</title><rect x="575" y="372" width="16" height="15" fill="rgb(240,137,17)"/><text x="578.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.19%)</title><rect x="588" y="388" width="3" height="15" fill="rgb(247,24,51)"/><text x="591.00" y="398.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (12 samples, 2.26%)</title><rect x="566" y="244" width="27" height="15" fill="rgb(226,99,32)"/><text x="569.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 2.26%)</title><rect x="566" y="260" width="27" height="15" fill="rgb(221,229,20)"/><text x="569.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 2.26%)</title><rect x="566" y="276" width="27" height="15" fill="rgb(228,18,38)"/><text x="569.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 2.08%)</title><rect x="568" y="292" width="25" height="15" fill="rgb(254,219,51)"/><text x="571.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (11 samples, 2.08%)</title><rect x="568" y="308" width="25" height="15" fill="rgb(221,98,19)"/><text x="571.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.89%)</title><rect x="571" y="324" width="22" height="15" fill="rgb(246,130,50)"/><text x="574.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.89%)</title><rect x="571" y="340" width="22" height="15" fill="rgb(224,97,4)"/><text x="574.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (9 samples, 1.70%)</title><rect x="573" y="356" width="20" height="15" fill="rgb(211,176,51)"/><text x="576.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.19%)</title><rect x="591" y="372" width="2" height="15" fill="rgb(213,117,52)"/><text x="594.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py:33) (15 samples, 2.83%)</title><rect x="562" y="228" width="33" height="15" fill="rgb(250,30,51)"/><text x="565.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="593" y="244" width="2" height="15" fill="rgb(241,111,46)"/><text x="596.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="593" y="260" width="2" height="15" fill="rgb(210,136,49)"/><text x="596.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="593" y="276" width="2" height="15" fill="rgb(228,25,31)"/><text x="596.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="593" y="292" width="2" height="15" fill="rgb(226,42,5)"/><text x="596.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src:1602) (1 samples, 0.19%)</title><rect x="593" y="308" width="2" height="15" fill="rgb(232,91,28)"/><text x="596.00" y="318.50"></text></g><g><title>0x7f5a5542ba04 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="593" y="324" width="2" height="15" fill="rgb(229,49,42)"/><text x="596.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.19%)</title><rect x="597" y="292" width="3" height="15" fill="rgb(247,174,7)"/><text x="600.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (46 samples, 8.68%)</title><rect x="499" y="196" width="103" height="15" fill="rgb(218,120,49)"/><text x="502.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (46 samples, 8.68%)</title><rect x="499" y="212" width="103" height="15" fill="rgb(207,110,37)"/><text x="502.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py:29) (3 samples, 0.57%)</title><rect x="595" y="228" width="7" height="15" fill="rgb(240,193,34)"/><text x="598.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (3 samples, 0.57%)</title><rect x="595" y="244" width="7" height="15" fill="rgb(244,53,26)"/><text x="598.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.38%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(220,212,48)"/><text x="600.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (2 samples, 0.38%)</title><rect x="597" y="276" width="5" height="15" fill="rgb(217,145,22)"/><text x="600.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.19%)</title><rect x="600" y="292" width="2" height="15" fill="rgb(241,98,29)"/><text x="603.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="600" y="308" width="2" height="15" fill="rgb(241,70,28)"/><text x="603.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="600" y="324" width="2" height="15" fill="rgb(228,112,32)"/><text x="603.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="600" y="340" width="2" height="15" fill="rgb(219,51,17)"/><text x="603.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.19%)</title><rect x="600" y="356" width="2" height="15" fill="rgb(252,85,15)"/><text x="603.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.19%)</title><rect x="600" y="372" width="2" height="15" fill="rgb(251,7,38)"/><text x="603.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.19%)</title><rect x="600" y="388" width="2" height="15" fill="rgb(240,199,4)"/><text x="603.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="604" y="276" width="2" height="15" fill="rgb(208,77,36)"/><text x="607.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="604" y="292" width="2" height="15" fill="rgb(254,94,44)"/><text x="607.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="604" y="308" width="2" height="15" fill="rgb(253,181,46)"/><text x="607.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.19%)</title><rect x="604" y="324" width="2" height="15" fill="rgb(239,4,37)"/><text x="607.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(206,45,16)"/><text x="609.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(236,6,7)"/><text x="609.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2525) (1 samples, 0.19%)</title><rect x="606" y="308" width="2" height="15" fill="rgb(252,95,33)"/><text x="609.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:981) (1 samples, 0.19%)</title><rect x="608" y="324" width="3" height="15" fill="rgb(254,34,46)"/><text x="611.00" y="334.50"></text></g><g><title>_mm_cmpgt_ps (xmmintrin.h:351) (1 samples, 0.19%)</title><rect x="608" y="340" width="3" height="15" fill="rgb(226,169,14)"/><text x="611.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (5 samples, 0.94%)</title><rect x="602" y="196" width="11" height="15" fill="rgb(254,137,9)"/><text x="605.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py:17) (4 samples, 0.75%)</title><rect x="604" y="212" width="9" height="15" fill="rgb(214,113,20)"/><text x="607.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 0.75%)</title><rect x="604" y="228" width="9" height="15" fill="rgb(234,16,19)"/><text x="607.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.75%)</title><rect x="604" y="244" width="9" height="15" fill="rgb(210,224,37)"/><text x="607.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 0.75%)</title><rect x="604" y="260" width="9" height="15" fill="rgb(250,96,29)"/><text x="607.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.38%)</title><rect x="608" y="276" width="5" height="15" fill="rgb(209,54,3)"/><text x="611.00" y="286.50"></text></g><g><title>FLOAT_greater (loops.c.src:1773) (2 samples, 0.38%)</title><rect x="608" y="292" width="5" height="15" fill="rgb(216,103,16)"/><text x="611.00" y="302.50"></text></g><g><title>run_binary_simd_greater_FLOAT (simd.inc.src:295) (2 samples, 0.38%)</title><rect x="608" y="308" width="5" height="15" fill="rgb(249,7,46)"/><text x="611.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_greater_FLOAT (simd.inc.src:985) (1 samples, 0.19%)</title><rect x="611" y="324" width="2" height="15" fill="rgb(227,135,3)"/><text x="614.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src:794) (1 samples, 0.19%)</title><rect x="611" y="340" width="2" height="15" fill="rgb(230,165,50)"/><text x="614.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.19%)</title><rect x="611" y="356" width="2" height="15" fill="rgb(232,117,26)"/><text x="614.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (2 samples, 0.38%)</title><rect x="613" y="212" width="4" height="15" fill="rgb(252,26,0)"/><text x="616.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.38%)</title><rect x="622" y="228" width="4" height="15" fill="rgb(210,34,53)"/><text x="625.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.19%)</title><rect x="626" y="260" width="2" height="15" fill="rgb(206,36,8)"/><text x="629.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.19%)</title><rect x="626" y="276" width="2" height="15" fill="rgb(225,77,36)"/><text x="629.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:903) (1 samples, 0.19%)</title><rect x="626" y="292" width="2" height="15" fill="rgb(240,191,46)"/><text x="629.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.38%)</title><rect x="628" y="340" width="5" height="15" fill="rgb(249,178,12)"/><text x="631.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.57%)</title><rect x="628" y="292" width="7" height="15" fill="rgb(230,78,39)"/><text x="631.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.57%)</title><rect x="628" y="308" width="7" height="15" fill="rgb(217,182,23)"/><text x="631.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.57%)</title><rect x="628" y="324" width="7" height="15" fill="rgb(208,200,52)"/><text x="631.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="633" y="340" width="2" height="15" fill="rgb(240,21,18)"/><text x="636.00" y="350.50"></text></g><g><title>0x7f5a552c9d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="633" y="356" width="2" height="15" fill="rgb(245,166,21)"/><text x="636.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="635" y="308" width="2" height="15" fill="rgb(247,87,0)"/><text x="638.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="635" y="324" width="2" height="15" fill="rgb(226,46,24)"/><text x="638.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="635" y="340" width="2" height="15" fill="rgb(233,202,51)"/><text x="638.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.19%)</title><rect x="635" y="356" width="2" height="15" fill="rgb(231,143,48)"/><text x="638.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:531) (6 samples, 1.13%)</title><rect x="626" y="228" width="14" height="15" fill="rgb(210,21,20)"/><text x="629.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.13%)</title><rect x="626" y="244" width="14" height="15" fill="rgb(246,145,8)"/><text x="629.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.94%)</title><rect x="628" y="260" width="12" height="15" fill="rgb(239,195,43)"/><text x="631.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.94%)</title><rect x="628" y="276" width="12" height="15" fill="rgb(232,57,21)"/><text x="631.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.38%)</title><rect x="635" y="292" width="5" height="15" fill="rgb(250,62,25)"/><text x="638.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.19%)</title><rect x="637" y="308" width="3" height="15" fill="rgb(245,152,30)"/><text x="640.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.19%)</title><rect x="637" y="324" width="3" height="15" fill="rgb(243,55,28)"/><text x="640.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.19%)</title><rect x="640" y="260" width="2" height="15" fill="rgb(223,58,14)"/><text x="643.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.38%)</title><rect x="640" y="244" width="4" height="15" fill="rgb(220,219,26)"/><text x="643.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:460) (1 samples, 0.19%)</title><rect x="642" y="260" width="2" height="15" fill="rgb(210,15,43)"/><text x="645.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.19%)</title><rect x="644" y="308" width="2" height="15" fill="rgb(254,109,7)"/><text x="647.00" y="318.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.19%)</title><rect x="644" y="324" width="2" height="15" fill="rgb(206,87,16)"/><text x="647.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.38%)</title><rect x="644" y="292" width="4" height="15" fill="rgb(209,206,34)"/><text x="647.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="646" y="308" width="2" height="15" fill="rgb(236,107,24)"/><text x="649.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.19%)</title><rect x="646" y="324" width="2" height="15" fill="rgb(215,192,40)"/><text x="649.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.19%)</title><rect x="646" y="340" width="2" height="15" fill="rgb(220,153,53)"/><text x="649.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="646" y="356" width="2" height="15" fill="rgb(234,166,10)"/><text x="649.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.19%)</title><rect x="646" y="372" width="2" height="15" fill="rgb(235,80,12)"/><text x="649.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.19%)</title><rect x="646" y="388" width="2" height="15" fill="rgb(236,173,43)"/><text x="649.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:535) (5 samples, 0.94%)</title><rect x="640" y="228" width="11" height="15" fill="rgb(226,72,36)"/><text x="643.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.57%)</title><rect x="644" y="244" width="7" height="15" fill="rgb(230,224,50)"/><text x="647.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.57%)</title><rect x="644" y="260" width="7" height="15" fill="rgb(250,128,7)"/><text x="647.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.57%)</title><rect x="644" y="276" width="7" height="15" fill="rgb(226,188,54)"/><text x="647.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.19%)</title><rect x="648" y="292" width="3" height="15" fill="rgb(242,87,10)"/><text x="651.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.19%)</title><rect x="648" y="308" width="3" height="15" fill="rgb(213,126,0)"/><text x="651.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.19%)</title><rect x="648" y="324" width="3" height="15" fill="rgb(214,121,18)"/><text x="651.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="648" y="340" width="3" height="15" fill="rgb(216,185,54)"/><text x="651.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.19%)</title><rect x="651" y="244" width="2" height="15" fill="rgb(232,51,28)"/><text x="654.00" y="254.50"></text></g><g><title>arrayflags_dealloc (flagsobject.c:195) (1 samples, 0.19%)</title><rect x="651" y="260" width="2" height="15" fill="rgb(229,132,6)"/><text x="654.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (1 samples, 0.19%)</title><rect x="653" y="244" width="2" height="15" fill="rgb(238,149,52)"/><text x="656.00" y="254.50"></text></g><g><title>arrayflags_getitem (flagsobject.c:533) (1 samples, 0.19%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(233,227,44)"/><text x="656.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.94%)</title><rect x="655" y="276" width="11" height="15" fill="rgb(228,176,7)"/><text x="658.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 0.94%)</title><rect x="655" y="292" width="11" height="15" fill="rgb(247,49,14)"/><text x="658.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 0.94%)</title><rect x="655" y="308" width="11" height="15" fill="rgb(229,16,50)"/><text x="658.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (5 samples, 0.94%)</title><rect x="655" y="324" width="11" height="15" fill="rgb(228,42,26)"/><text x="658.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (5 samples, 0.94%)</title><rect x="655" y="340" width="11" height="15" fill="rgb(213,2,1)"/><text x="658.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.94%)</title><rect x="655" y="356" width="11" height="15" fill="rgb(242,53,52)"/><text x="658.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.75%)</title><rect x="657" y="372" width="9" height="15" fill="rgb(243,56,21)"/><text x="660.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.75%)</title><rect x="657" y="388" width="9" height="15" fill="rgb(253,218,43)"/><text x="660.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (131 samples, 24.72%)</title><rect x="381" y="180" width="292" height="15" fill="rgb(233,140,45)"/><text x="384.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (27 samples, 5.09%)</title><rect x="613" y="196" width="60" height="15" fill="rgb(221,155,3)"/><text x="616.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (25 samples, 4.72%)</title><rect x="617" y="212" width="56" height="15" fill="rgb(251,49,7)"/><text x="620.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (10 samples, 1.89%)</title><rect x="651" y="228" width="22" height="15" fill="rgb(221,190,15)"/><text x="654.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (8 samples, 1.51%)</title><rect x="655" y="244" width="18" height="15" fill="rgb(232,61,16)"/><text x="658.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (8 samples, 1.51%)</title><rect x="655" y="260" width="18" height="15" fill="rgb(218,25,38)"/><text x="658.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.57%)</title><rect x="666" y="276" width="7" height="15" fill="rgb(213,203,9)"/><text x="669.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.38%)</title><rect x="673" y="180" width="4" height="15" fill="rgb(215,184,0)"/><text x="676.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.57%)</title><rect x="677" y="180" width="7" height="15" fill="rgb(232,216,10)"/><text x="680.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 0.57%)</title><rect x="684" y="180" width="7" height="15" fill="rgb(254,68,42)"/><text x="687.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (151 samples, 28.49%)</title><rect x="357" y="164" width="336" height="15" fill="rgb(247,228,33)"/><text x="360.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.19%)</title><rect x="691" y="180" width="2" height="15" fill="rgb(236,65,39)"/><text x="694.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.38%)</title><rect x="693" y="164" width="4" height="15" fill="rgb(208,106,22)"/><text x="696.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.19%)</title><rect x="695" y="180" width="2" height="15" fill="rgb(210,182,34)"/><text x="698.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="695" y="196" width="2" height="15" fill="rgb(246,6,8)"/><text x="698.00" y="206.50"></text></g><g><title>0x7f5a55387130 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="695" y="212" width="2" height="15" fill="rgb(229,35,37)"/><text x="698.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:45) (167 samples, 31.51%)</title><rect x="328" y="52" width="372" height="15" fill="rgb(205,156,23)"/><text x="331.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12..</text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:44) (167 samples, 31.51%)</title><rect x="328" y="68" width="372" height="15" fill="rgb(245,140,32)"/><text x="331.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1000_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:29) (167 samples, 31.51%)</title><rect x="328" y="84" width="372" height="15" fill="rgb(226,32,40)"/><text x="331.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:23) (156 samples, 29.43%)</title><rect x="352" y="100" width="348" height="15" fill="rgb(211,97,36)"/><text x="355.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_4_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (155 samples, 29.25%)</title><rect x="355" y="116" width="345" height="15" fill="rgb(217,16,50)"/><text x="358.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (155 samples, 29.25%)</title><rect x="355" y="132" width="345" height="15" fill="rgb(244,65,10)"/><text x="358.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (155 samples, 29.25%)</title><rect x="355" y="148" width="345" height="15" fill="rgb(215,110,6)"/><text x="358.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="697" y="164" width="3" height="15" fill="rgb(242,160,36)"/><text x="700.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="697" y="180" width="3" height="15" fill="rgb(210,109,45)"/><text x="700.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="697" y="196" width="3" height="15" fill="rgb(251,188,16)"/><text x="700.00" y="206.50"></text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:28) (1 samples, 0.19%)</title><rect x="700" y="84" width="2" height="15" fill="rgb(212,145,49)"/><text x="703.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="700" y="100" width="2" height="15" fill="rgb(216,221,41)"/><text x="703.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="700" y="116" width="2" height="15" fill="rgb(254,202,32)"/><text x="703.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="700" y="132" width="2" height="15" fill="rgb(213,7,1)"/><text x="703.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="700" y="148" width="2" height="15" fill="rgb(236,153,49)"/><text x="703.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.19%)</title><rect x="700" y="164" width="2" height="15" fill="rgb(206,2,47)"/><text x="703.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.19%)</title><rect x="700" y="180" width="2" height="15" fill="rgb(233,207,17)"/><text x="703.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.19%)</title><rect x="700" y="196" width="2" height="15" fill="rgb(216,77,19)"/><text x="703.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.19%)</title><rect x="700" y="212" width="2" height="15" fill="rgb(243,218,47)"/><text x="703.00" y="222.50"></text></g><g><title>0x7f5a152ecff9 (?) (1 samples, 0.19%)</title><rect x="700" y="228" width="2" height="15" fill="rgb(227,170,30)"/><text x="703.00" y="238.50"></text></g><g><title>0x7f5a152e753d (?) (1 samples, 0.19%)</title><rect x="700" y="244" width="2" height="15" fill="rgb(247,170,12)"/><text x="703.00" y="254.50"></text></g><g><title>0x7f5a153134ec (?) (1 samples, 0.19%)</title><rect x="700" y="260" width="2" height="15" fill="rgb(233,15,47)"/><text x="703.00" y="270.50"></text></g><g><title>0x7f5a15312c3a (?) (1 samples, 0.19%)</title><rect x="700" y="276" width="2" height="15" fill="rgb(206,36,39)"/><text x="703.00" y="286.50"></text></g><g><title>0x7f5a15315974 (?) (1 samples, 0.19%)</title><rect x="700" y="292" width="2" height="15" fill="rgb(208,222,26)"/><text x="703.00" y="302.50"></text></g><g><title>0x7f5a1590ee89 (?) (1 samples, 0.19%)</title><rect x="700" y="308" width="2" height="15" fill="rgb(244,152,13)"/><text x="703.00" y="318.50"></text></g><g><title>0x7f5a1590ecc7 (?) (1 samples, 0.19%)</title><rect x="700" y="324" width="2" height="15" fill="rgb(215,209,52)"/><text x="703.00" y="334.50"></text></g><g><title>0x7f5a158fe438 (?) (1 samples, 0.19%)</title><rect x="700" y="340" width="2" height="15" fill="rgb(252,32,12)"/><text x="703.00" y="350.50"></text></g><g><title>0x7f5a15904317 (?) (1 samples, 0.19%)</title><rect x="700" y="356" width="2" height="15" fill="rgb(240,134,35)"/><text x="703.00" y="366.50"></text></g><g><title>0x7f5a158fcee8 (?) (1 samples, 0.19%)</title><rect x="700" y="372" width="2" height="15" fill="rgb(250,40,20)"/><text x="703.00" y="382.50"></text></g><g><title>0x7f5a15904387 (?) (1 samples, 0.19%)</title><rect x="700" y="388" width="2" height="15" fill="rgb(232,150,6)"/><text x="703.00" y="398.50"></text></g><g><title>0x7f5a158fdc0d (?) (1 samples, 0.19%)</title><rect x="700" y="404" width="2" height="15" fill="rgb(230,145,34)"/><text x="703.00" y="414.50"></text></g><g><title>0x7f5a158420de (?) (1 samples, 0.19%)</title><rect x="700" y="420" width="2" height="15" fill="rgb(253,48,45)"/><text x="703.00" y="430.50"></text></g><g><title>0x7f5a1590fe58 (?) (1 samples, 0.19%)</title><rect x="700" y="436" width="2" height="15" fill="rgb(216,165,40)"/><text x="703.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="700" y="452" width="2" height="15" fill="rgb(225,10,11)"/><text x="703.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="700" y="468" width="2" height="15" fill="rgb(231,87,24)"/><text x="703.00" y="478.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="702" y="340" width="2" height="15" fill="rgb(242,172,24)"/><text x="705.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="702" y="260" width="7" height="15" fill="rgb(240,175,54)"/><text x="705.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="702" y="276" width="7" height="15" fill="rgb(221,12,29)"/><text x="705.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="702" y="292" width="7" height="15" fill="rgb(220,70,0)"/><text x="705.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="702" y="308" width="7" height="15" fill="rgb(213,122,43)"/><text x="705.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="702" y="324" width="7" height="15" fill="rgb(219,182,20)"/><text x="705.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="704" y="340" width="5" height="15" fill="rgb(220,183,21)"/><text x="707.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="706" y="356" width="3" height="15" fill="rgb(205,193,52)"/><text x="709.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="706" y="372" width="3" height="15" fill="rgb(221,63,50)"/><text x="709.00" y="382.50"></text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:18) (4 samples, 0.75%)</title><rect x="702" y="100" width="9" height="15" fill="rgb(249,173,23)"/><text x="705.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.75%)</title><rect x="702" y="116" width="9" height="15" fill="rgb(229,141,1)"/><text x="705.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.75%)</title><rect x="702" y="132" width="9" height="15" fill="rgb(243,80,52)"/><text x="705.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.75%)</title><rect x="702" y="148" width="9" height="15" fill="rgb(232,28,38)"/><text x="705.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.75%)</title><rect x="702" y="164" width="9" height="15" fill="rgb(226,148,42)"/><text x="705.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.75%)</title><rect x="702" y="180" width="9" height="15" fill="rgb(247,86,4)"/><text x="705.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.75%)</title><rect x="702" y="196" width="9" height="15" fill="rgb(253,227,4)"/><text x="705.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="702" y="212" width="9" height="15" fill="rgb(242,29,53)"/><text x="705.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="702" y="228" width="9" height="15" fill="rgb(218,113,52)"/><text x="705.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="702" y="244" width="9" height="15" fill="rgb(238,59,28)"/><text x="705.00" y="254.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="709" y="260" width="2" height="15" fill="rgb(206,130,42)"/><text x="712.00" y="270.50"></text></g><g><title>0x7f5a552a8c14 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="746" y="132" width="3" height="15" fill="rgb(239,61,47)"/><text x="749.00" y="142.50"></text></g><g><title>0x7f5a552a8c36 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="749" y="132" width="2" height="15" fill="rgb(248,204,14)"/><text x="752.00" y="142.50"></text></g><g><title>0x7f5a552a8c49 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="751" y="132" width="2" height="15" fill="rgb(248,183,33)"/><text x="754.00" y="142.50"></text></g><g><title>0x7f5a552a8c5a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="753" y="132" width="2" height="15" fill="rgb(239,103,53)"/><text x="756.00" y="142.50"></text></g><g><title>0x7f5a552a8c73 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="755" y="132" width="3" height="15" fill="rgb(207,43,9)"/><text x="758.00" y="142.50"></text></g><g><title>0x7f5a552a8b0a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="755" y="148" width="3" height="15" fill="rgb(229,193,42)"/><text x="758.00" y="158.50"></text></g><g><title>0x7f5a552a9eb0 (libc-2.29.so) (6 samples, 1.13%)</title><rect x="746" y="116" width="14" height="15" fill="rgb(235,60,21)"/><text x="749.00" y="126.50"></text></g><g><title>0x7f5a552a8ca7 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="758" y="132" width="2" height="15" fill="rgb(230,121,32)"/><text x="761.00" y="142.50"></text></g><g><title>0x7f5a552a8ad1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="758" y="148" width="2" height="15" fill="rgb(227,217,20)"/><text x="761.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.19%)</title><rect x="762" y="148" width="2" height="15" fill="rgb(214,126,24)"/><text x="765.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.19%)</title><rect x="766" y="196" width="3" height="15" fill="rgb(231,190,10)"/><text x="769.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.19%)</title><rect x="766" y="212" width="3" height="15" fill="rgb(221,77,54)"/><text x="769.00" y="222.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="771" y="260" width="2" height="15" fill="rgb(229,41,13)"/><text x="774.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="771" y="276" width="2" height="15" fill="rgb(208,44,24)"/><text x="774.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="775" y="292" width="3" height="15" fill="rgb(244,189,18)"/><text x="778.00" y="302.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="780" y="372" width="9" height="15" fill="rgb(238,141,24)"/><text x="783.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="787" y="388" width="2" height="15" fill="rgb(249,221,47)"/><text x="790.00" y="398.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="780" y="340" width="11" height="15" fill="rgb(249,33,5)"/><text x="783.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="780" y="356" width="11" height="15" fill="rgb(206,142,8)"/><text x="783.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="789" y="372" width="2" height="15" fill="rgb(244,157,5)"/><text x="792.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(233,40,7)"/><text x="792.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="789" y="404" width="2" height="15" fill="rgb(214,139,49)"/><text x="792.00" y="414.50"></text></g><g><title>0x7f5a552ab00a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="789" y="420" width="2" height="15" fill="rgb(243,54,40)"/><text x="792.00" y="430.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.13%)</title><rect x="791" y="340" width="13" height="15" fill="rgb(223,75,14)"/><text x="794.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="793" y="356" width="11" height="15" fill="rgb(244,54,39)"/><text x="796.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="802" y="372" width="2" height="15" fill="rgb(217,193,48)"/><text x="805.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="804" y="340" width="5" height="15" fill="rgb(226,32,4)"/><text x="807.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="809" y="340" width="2" height="15" fill="rgb(238,141,0)"/><text x="812.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="340" width="2" height="15" fill="rgb(251,2,30)"/><text x="814.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="356" width="2" height="15" fill="rgb(218,169,31)"/><text x="814.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="372" width="2" height="15" fill="rgb(228,112,5)"/><text x="814.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="388" width="2" height="15" fill="rgb(238,166,25)"/><text x="814.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="404" width="2" height="15" fill="rgb(220,6,54)"/><text x="814.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="420" width="2" height="15" fill="rgb(224,8,28)"/><text x="814.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="436" width="2" height="15" fill="rgb(209,34,23)"/><text x="814.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="452" width="2" height="15" fill="rgb(219,46,7)"/><text x="814.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="468" width="2" height="15" fill="rgb(224,51,11)"/><text x="814.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="811" y="484" width="2" height="15" fill="rgb(238,158,16)"/><text x="814.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="813" y="340" width="2" height="15" fill="rgb(233,174,50)"/><text x="816.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="813" y="356" width="2" height="15" fill="rgb(233,145,40)"/><text x="816.00" y="366.50"></text></g><g><title>0x7f5a552c9db3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="813" y="372" width="2" height="15" fill="rgb(254,200,45)"/><text x="816.00" y="382.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="815" y="340" width="5" height="15" fill="rgb(247,216,54)"/><text x="818.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="820" y="340" width="2" height="15" fill="rgb(211,72,18)"/><text x="823.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="820" y="356" width="2" height="15" fill="rgb(214,20,40)"/><text x="823.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="820" y="372" width="2" height="15" fill="rgb(248,104,15)"/><text x="823.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="822" y="340" width="2" height="15" fill="rgb(230,71,43)"/><text x="825.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="822" y="356" width="2" height="15" fill="rgb(225,112,9)"/><text x="825.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="822" y="372" width="2" height="15" fill="rgb(252,211,20)"/><text x="825.00" y="382.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="824" y="340" width="5" height="15" fill="rgb(217,86,14)"/><text x="827.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="824" y="356" width="5" height="15" fill="rgb(245,4,54)"/><text x="827.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.38%)</title><rect x="824" y="372" width="5" height="15" fill="rgb(216,111,14)"/><text x="827.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="388" width="2" height="15" fill="rgb(205,173,52)"/><text x="830.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="404" width="2" height="15" fill="rgb(250,57,53)"/><text x="830.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="420" width="2" height="15" fill="rgb(224,54,48)"/><text x="830.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="436" width="2" height="15" fill="rgb(219,61,14)"/><text x="830.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="452" width="2" height="15" fill="rgb(214,138,17)"/><text x="830.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_nocopy_anbn_b0 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.19%)</title><rect x="827" y="468" width="2" height="15" fill="rgb(239,105,7)"/><text x="830.00" y="478.50"></text></g><g><title>0x7f5a152b3ed0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="833" y="356" width="3" height="15" fill="rgb(233,114,47)"/><text x="836.00" y="366.50"></text></g><g><title>0x7f5a55428e00 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="836" y="356" width="2" height="15" fill="rgb(237,61,45)"/><text x="839.00" y="366.50"></text></g><g><title>0x7f5a55428e0e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="838" y="356" width="2" height="15" fill="rgb(240,20,32)"/><text x="841.00" y="366.50"></text></g><g><title>0x7f5a55428e1c (libm-2.29.so) (1 samples, 0.19%)</title><rect x="840" y="356" width="2" height="15" fill="rgb(225,4,24)"/><text x="843.00" y="366.50"></text></g><g><title>0x7f5a55428e7e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="842" y="356" width="2" height="15" fill="rgb(211,218,3)"/><text x="845.00" y="366.50"></text></g><g><title>0x7f5a55428e96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(221,2,49)"/><text x="847.00" y="366.50"></text></g><g><title>0x7f5a55428ea2 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="847" y="356" width="2" height="15" fill="rgb(215,159,11)"/><text x="850.00" y="366.50"></text></g><g><title>0x7f5a5542b960 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="849" y="356" width="2" height="15" fill="rgb(215,176,35)"/><text x="852.00" y="366.50"></text></g><g><title>0x7f5a5542b979 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="851" y="356" width="2" height="15" fill="rgb(220,71,52)"/><text x="854.00" y="366.50"></text></g><g><title>0x7f5a5542b997 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="853" y="356" width="3" height="15" fill="rgb(216,228,47)"/><text x="856.00" y="366.50"></text></g><g><title>0x7f5a5542b9a7 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="856" y="356" width="2" height="15" fill="rgb(251,222,26)"/><text x="859.00" y="366.50"></text></g><g><title>0x7f5a5542b9c8 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="858" y="356" width="2" height="15" fill="rgb(234,171,35)"/><text x="861.00" y="366.50"></text></g><g><title>0x7f5a5542b9d4 (libm-2.29.so) (2 samples, 0.38%)</title><rect x="860" y="356" width="4" height="15" fill="rgb(205,112,4)"/><text x="863.00" y="366.50"></text></g><g><title>0x7f5a5542b9e0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="864" y="356" width="3" height="15" fill="rgb(222,76,26)"/><text x="867.00" y="366.50"></text></g><g><title>0x7f5a5542b9f0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="867" y="356" width="2" height="15" fill="rgb(216,21,8)"/><text x="870.00" y="366.50"></text></g><g><title>0x7f5a5542ba15 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="869" y="356" width="2" height="15" fill="rgb(227,11,4)"/><text x="872.00" y="366.50"></text></g><g><title>0x7f5a5542ba21 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="871" y="356" width="2" height="15" fill="rgb(251,180,28)"/><text x="874.00" y="366.50"></text></g><g><title>0x7f5a552a9d07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="880" y="372" width="2" height="15" fill="rgb(220,124,21)"/><text x="883.00" y="382.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 4.72%)</title><rect x="829" y="340" width="55" height="15" fill="rgb(238,119,42)"/><text x="832.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="873" y="356" width="11" height="15" fill="rgb(214,19,4)"/><text x="876.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="882" y="372" width="2" height="15" fill="rgb(231,77,5)"/><text x="885.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="882" y="388" width="2" height="15" fill="rgb(233,151,52)"/><text x="885.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="882" y="404" width="2" height="15" fill="rgb(253,25,21)"/><text x="885.00" y="414.50"></text></g><g><title>0x7f5a552ab028 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="882" y="420" width="2" height="15" fill="rgb(215,172,19)"/><text x="885.00" y="430.50"></text></g><g><title>0x7f5a552a8b9b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="882" y="436" width="2" height="15" fill="rgb(224,118,35)"/><text x="885.00" y="446.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="884" y="340" width="3" height="15" fill="rgb(224,173,23)"/><text x="887.00" y="350.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="884" y="356" width="3" height="15" fill="rgb(251,116,36)"/><text x="887.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="887" y="340" width="4" height="15" fill="rgb(221,44,17)"/><text x="890.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="887" y="356" width="4" height="15" fill="rgb(237,204,28)"/><text x="890.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="887" y="372" width="4" height="15" fill="rgb(233,92,10)"/><text x="890.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="889" y="388" width="2" height="15" fill="rgb(217,45,21)"/><text x="892.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.64%)</title><rect x="891" y="372" width="31" height="15" fill="rgb(232,64,53)"/><text x="894.00" y="382.50">on..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="911" y="388" width="11" height="15" fill="rgb(240,62,16)"/><text x="914.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.83%)</title><rect x="891" y="340" width="34" height="15" fill="rgb(232,100,11)"/><text x="894.00" y="350.50">on..</text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.83%)</title><rect x="891" y="356" width="34" height="15" fill="rgb(251,97,16)"/><text x="894.00" y="366.50">on..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="922" y="372" width="3" height="15" fill="rgb(221,147,5)"/><text x="925.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="922" y="388" width="3" height="15" fill="rgb(249,76,51)"/><text x="925.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="922" y="404" width="3" height="15" fill="rgb(232,40,6)"/><text x="925.00" y="414.50"></text></g><g><title>0x7f5a552ab005 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="922" y="420" width="3" height="15" fill="rgb(230,66,0)"/><text x="925.00" y="430.50"></text></g><g><title>0x7f5a552aadb4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="994" y="388" width="2" height="15" fill="rgb(218,128,16)"/><text x="997.00" y="398.50"></text></g><g><title>0x7f5a552aadd2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="996" y="388" width="2" height="15" fill="rgb(211,8,12)"/><text x="999.00" y="398.50"></text></g><g><title>0x7f5a552ab050 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="998" y="388" width="2" height="15" fill="rgb(229,3,18)"/><text x="1001.00" y="398.50"></text></g><g><title>0x7f5a552ab07f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1000" y="388" width="2" height="15" fill="rgb(241,65,2)"/><text x="1003.00" y="398.50"></text></g><g><title>0x7f5a552ab368 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="1002" y="388" width="5" height="15" fill="rgb(224,150,30)"/><text x="1005.00" y="398.50"></text></g><g><title>0x7f5a552ab395 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1007" y="388" width="2" height="15" fill="rgb(245,156,17)"/><text x="1010.00" y="398.50"></text></g><g><title>0x7f5a552ab3ae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1009" y="388" width="2" height="15" fill="rgb(205,178,12)"/><text x="1012.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (35 samples, 6.60%)</title><rect x="936" y="356" width="78" height="15" fill="rgb(206,185,47)"/><text x="939.00" y="366.50">operator ..</text></g><g><title>malloc (libc-2.29.so) (31 samples, 5.85%)</title><rect x="945" y="372" width="69" height="15" fill="rgb(218,112,6)"/><text x="948.00" y="382.50">malloc ..</text></g><g><title>0x7f5a552ab3d1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1011" y="388" width="3" height="15" fill="rgb(212,145,8)"/><text x="1014.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1014" y="356" width="2" height="15" fill="rgb(244,200,51)"/><text x="1017.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="1016" y="356" width="9" height="15" fill="rgb(211,22,21)"/><text x="1019.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.38%)</title><rect x="1025" y="356" width="4" height="15" fill="rgb(223,197,37)"/><text x="1028.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 22.45%)</title><rect x="773" y="260" width="265" height="15" fill="rgb(243,113,10)"/><text x="776.00" y="270.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 22.45%)</title><rect x="773" y="276" width="265" height="15" fill="rgb(249,145,5)"/><text x="776.00" y="286.50">onnxruntime::InferenceSession::Run ..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 22.08%)</title><rect x="778" y="292" width="260" height="15" fill="rgb(240,229,48)"/><text x="781.00" y="302.50">onnxruntime::utils::ExecuteGraph (..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 22.08%)</title><rect x="778" y="308" width="260" height="15" fill="rgb(253,28,48)"/><text x="781.00" y="318.50">onnxruntime::utils::ExecuteGraphIm..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 22.08%)</title><rect x="778" y="324" width="260" height="15" fill="rgb(234,59,14)"/><text x="781.00" y="334.50">onnxruntime::SequentialExecutor::E..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 9.62%)</title><rect x="925" y="340" width="113" height="15" fill="rgb(238,82,35)"/><text x="928.00" y="350.50">onnxruntime::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.75%)</title><rect x="1029" y="356" width="9" height="15" fill="rgb(237,200,22)"/><text x="1032.00" y="366.50"></text></g><g><title>0x7f5a152b4570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1098" y="276" width="2" height="15" fill="rgb(233,186,44)"/><text x="1101.00" y="286.50"></text></g><g><title>0x7f5a152b45c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1100" y="276" width="3" height="15" fill="rgb(253,198,24)"/><text x="1103.00" y="286.50"></text></g><g><title>0x7f5a152b4870 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1103" y="276" width="2" height="15" fill="rgb(248,39,32)"/><text x="1106.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.83%)</title><rect x="1105" y="276" width="33" height="15" fill="rgb(246,71,40)"/><text x="1108.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 8.87%)</title><rect x="1038" y="260" width="105" height="15" fill="rgb(215,36,25)"/><text x="1041.00" y="270.50">pybind11::de..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.38%)</title><rect x="1138" y="276" width="5" height="15" fill="rgb(217,103,29)"/><text x="1141.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1143" y="260" width="2" height="15" fill="rgb(241,135,39)"/><text x="1146.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1143" y="276" width="2" height="15" fill="rgb(211,60,13)"/><text x="1146.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="276" width="2" height="15" fill="rgb(253,214,11)"/><text x="1148.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(238,60,19)"/><text x="1148.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="308" width="2" height="15" fill="rgb(236,216,35)"/><text x="1148.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="324" width="2" height="15" fill="rgb(230,212,32)"/><text x="1148.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="340" width="2" height="15" fill="rgb(230,225,27)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="356" width="2" height="15" fill="rgb(231,4,4)"/><text x="1148.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1145" y="372" width="2" height="15" fill="rgb(244,122,9)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f5a552a991e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1152" y="292" width="2" height="15" fill="rgb(234,226,7)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7f5a552a999b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1154" y="292" width="2" height="15" fill="rgb(235,57,46)"/><text x="1157.00" y="302.50"></text></g><g><title>0x7f5a552a99ff (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(207,159,49)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7f5a552a9a51 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1158" y="292" width="3" height="15" fill="rgb(217,153,19)"/><text x="1161.00" y="302.50"></text></g><g><title>0x7f5a552a9d07 (libc-2.29.so) (7 samples, 1.32%)</title><rect x="1161" y="292" width="15" height="15" fill="rgb(219,33,7)"/><text x="1164.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1176" y="292" width="2" height="15" fill="rgb(210,127,9)"/><text x="1179.00" y="302.50"></text></g><g><title>0x7f5a552a992c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1178" y="308" width="3" height="15" fill="rgb(237,196,1)"/><text x="1181.00" y="318.50"></text></g><g><title>0x7f5a552a9d07 (libc-2.29.so) (3 samples, 0.57%)</title><rect x="1181" y="308" width="6" height="15" fill="rgb(216,120,39)"/><text x="1184.00" y="318.50"></text></g><g><title>all (530 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,143,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:52) (220 samples, 41.51%)</title><rect x="700" y="52" width="490" height="15" fill="rgb(242,96,28)"/><text x="703.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:51) (220 samples, 41.51%)</title><rect x="700" y="68" width="490" height="15" fill="rgb(241,73,30)"/><text x="703.00" y="78.50">profile_ort (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:29) (219 samples, 41.32%)</title><rect x="702" y="84" width="488" height="15" fill="rgb(241,5,11)"/><text x="705.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:23) (215 samples, 40.57%)</title><rect x="711" y="100" width="479" height="15" fill="rgb(231,19,40)"/><text x="714.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (193 samples, 36.42%)</title><rect x="760" y="116" width="430" height="15" fill="rgb(215,127,3)"/><text x="763.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (192 samples, 36.23%)</title><rect x="762" y="132" width="428" height="15" fill="rgb(215,95,9)"/><text x="765.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (191 samples, 36.04%)</title><rect x="764" y="148" width="426" height="15" fill="rgb(241,88,26)"/><text x="767.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (191 samples, 36.04%)</title><rect x="764" y="164" width="426" height="15" fill="rgb(238,68,16)"/><text x="767.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (190 samples, 35.85%)</title><rect x="766" y="180" width="424" height="15" fill="rgb(218,198,1)"/><text x="769.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (189 samples, 35.66%)</title><rect x="769" y="196" width="421" height="15" fill="rgb(225,15,38)"/><text x="772.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 35.66%)</title><rect x="769" y="212" width="421" height="15" fill="rgb(207,75,38)"/><text x="772.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 35.66%)</title><rect x="769" y="228" width="421" height="15" fill="rgb(207,14,10)"/><text x="772.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyth..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 35.66%)</title><rect x="769" y="244" width="421" height="15" fill="rgb(240,122,9)"/><text x="772.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;):..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="1145" y="260" width="45" height="15" fill="rgb(205,185,52)"/><text x="1148.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.58%)</title><rect x="1147" y="276" width="43" height="15" fill="rgb(208,47,33)"/><text x="1150.00" y="286.50">onnx..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="1178" y="292" width="12" height="15" fill="rgb(206,18,48)"/><text x="1181.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(253,7,45)"/><text x="1190.00" y="318.50"></text></g></g></svg>