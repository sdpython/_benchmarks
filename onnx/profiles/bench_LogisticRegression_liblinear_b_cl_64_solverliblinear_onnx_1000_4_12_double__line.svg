<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (1 samples, 0.30%)</title><rect x="10" y="148" width="3" height="15" fill="rgb(222,106,16)"/><text x="13.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="10" y="164" width="3" height="15" fill="rgb(226,86,9)"/><text x="13.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.30%)</title><rect x="10" y="180" width="3" height="15" fill="rgb(250,93,21)"/><text x="13.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="10" y="196" width="3" height="15" fill="rgb(242,201,28)"/><text x="13.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.30%)</title><rect x="13" y="180" width="4" height="15" fill="rgb(214,19,38)"/><text x="16.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.30%)</title><rect x="13" y="196" width="4" height="15" fill="rgb(229,3,31)"/><text x="16.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.30%)</title><rect x="13" y="212" width="4" height="15" fill="rgb(215,201,29)"/><text x="16.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.30%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(253,205,8)"/><text x="20.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:674) (1 samples, 0.30%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(228,14,14)"/><text x="20.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:18) (4 samples, 1.20%)</title><rect x="10" y="100" width="14" height="15" fill="rgb(209,229,19)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 1.20%)</title><rect x="10" y="116" width="14" height="15" fill="rgb(239,84,3)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (4 samples, 1.20%)</title><rect x="10" y="132" width="14" height="15" fill="rgb(236,228,15)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.90%)</title><rect x="13" y="148" width="11" height="15" fill="rgb(220,140,36)"/><text x="16.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (3 samples, 0.90%)</title><rect x="13" y="164" width="11" height="15" fill="rgb(221,157,25)"/><text x="16.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (1 samples, 0.30%)</title><rect x="20" y="180" width="4" height="15" fill="rgb(214,20,47)"/><text x="23.00" y="190.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.30%)</title><rect x="20" y="196" width="4" height="15" fill="rgb(209,224,16)"/><text x="23.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(222,214,54)"/><text x="23.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="20" y="228" width="4" height="15" fill="rgb(236,83,10)"/><text x="23.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.30%)</title><rect x="20" y="244" width="4" height="15" fill="rgb(226,86,24)"/><text x="23.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="20" y="260" width="4" height="15" fill="rgb(225,143,11)"/><text x="23.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="20" y="276" width="4" height="15" fill="rgb(233,88,54)"/><text x="23.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(230,14,22)"/><text x="23.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.30%)</title><rect x="20" y="308" width="4" height="15" fill="rgb(224,41,46)"/><text x="23.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.30%)</title><rect x="20" y="324" width="4" height="15" fill="rgb(237,162,48)"/><text x="23.00" y="334.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:22) (1 samples, 0.30%)</title><rect x="24" y="100" width="3" height="15" fill="rgb(205,130,19)"/><text x="27.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.30%)</title><rect x="31" y="164" width="3" height="15" fill="rgb(240,29,47)"/><text x="34.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.60%)</title><rect x="45" y="196" width="7" height="15" fill="rgb(250,119,5)"/><text x="48.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (9 samples, 2.71%)</title><rect x="31" y="148" width="32" height="15" fill="rgb(239,180,0)"/><text x="34.00" y="158.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.41%)</title><rect x="34" y="164" width="29" height="15" fill="rgb(208,136,31)"/><text x="37.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 2.11%)</title><rect x="38" y="180" width="25" height="15" fill="rgb(207,66,43)"/><text x="41.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.90%)</title><rect x="52" y="196" width="11" height="15" fill="rgb(235,81,44)"/><text x="55.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1645) (1 samples, 0.30%)</title><rect x="63" y="148" width="3" height="15" fill="rgb(210,162,37)"/><text x="66.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.30%)</title><rect x="73" y="196" width="4" height="15" fill="rgb(239,109,34)"/><text x="76.00" y="206.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.30%)</title><rect x="73" y="212" width="4" height="15" fill="rgb(222,95,54)"/><text x="76.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (3 samples, 0.90%)</title><rect x="73" y="180" width="11" height="15" fill="rgb(217,123,43)"/><text x="76.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.60%)</title><rect x="77" y="196" width="7" height="15" fill="rgb(239,64,17)"/><text x="80.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.30%)</title><rect x="81" y="212" width="3" height="15" fill="rgb(254,213,1)"/><text x="84.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.30%)</title><rect x="84" y="196" width="4" height="15" fill="rgb(212,132,31)"/><text x="87.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.30%)</title><rect x="88" y="196" width="3" height="15" fill="rgb(225,198,47)"/><text x="91.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.30%)</title><rect x="91" y="212" width="4" height="15" fill="rgb(248,228,16)"/><text x="94.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.60%)</title><rect x="91" y="196" width="7" height="15" fill="rgb(245,182,12)"/><text x="94.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.30%)</title><rect x="95" y="212" width="3" height="15" fill="rgb(223,43,23)"/><text x="98.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.60%)</title><rect x="102" y="228" width="7" height="15" fill="rgb(220,70,33)"/><text x="105.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.20%)</title><rect x="98" y="196" width="15" height="15" fill="rgb(253,64,15)"/><text x="101.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.20%)</title><rect x="98" y="212" width="15" height="15" fill="rgb(221,54,4)"/><text x="101.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.30%)</title><rect x="109" y="228" width="4" height="15" fill="rgb(223,215,9)"/><text x="112.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.60%)</title><rect x="113" y="196" width="7" height="15" fill="rgb(208,112,4)"/><text x="116.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.30%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(238,99,22)"/><text x="119.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1618) (1 samples, 0.30%)</title><rect x="116" y="228" width="4" height="15" fill="rgb(209,115,51)"/><text x="119.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.60%)</title><rect x="120" y="196" width="7" height="15" fill="rgb(239,36,25)"/><text x="123.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.30%)</title><rect x="123" y="212" width="4" height="15" fill="rgb(209,193,41)"/><text x="126.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.30%)</title><rect x="127" y="196" width="3" height="15" fill="rgb(223,44,5)"/><text x="130.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.30%)</title><rect x="127" y="212" width="3" height="15" fill="rgb(226,79,54)"/><text x="130.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:330) (1 samples, 0.30%)</title><rect x="127" y="228" width="3" height="15" fill="rgb(207,153,13)"/><text x="130.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.30%)</title><rect x="130" y="196" width="4" height="15" fill="rgb(221,194,28)"/><text x="133.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.30%)</title><rect x="134" y="196" width="3" height="15" fill="rgb(225,124,34)"/><text x="137.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.30%)</title><rect x="134" y="212" width="3" height="15" fill="rgb(241,105,25)"/><text x="137.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.30%)</title><rect x="134" y="228" width="3" height="15" fill="rgb(234,158,8)"/><text x="137.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 0.90%)</title><rect x="137" y="212" width="11" height="15" fill="rgb(248,93,7)"/><text x="140.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (19 samples, 5.72%)</title><rect x="84" y="180" width="68" height="15" fill="rgb(250,203,24)"/><text x="87.00" y="190.50">decisio..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 1.20%)</title><rect x="137" y="196" width="15" height="15" fill="rgb(214,60,44)"/><text x="140.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.30%)</title><rect x="148" y="212" width="4" height="15" fill="rgb(249,45,5)"/><text x="151.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.30%)</title><rect x="148" y="228" width="4" height="15" fill="rgb(227,183,0)"/><text x="151.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.30%)</title><rect x="148" y="244" width="4" height="15" fill="rgb(212,66,45)"/><text x="151.00" y="254.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.30%)</title><rect x="162" y="196" width="4" height="15" fill="rgb(216,40,38)"/><text x="165.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:341) (1 samples, 0.30%)</title><rect x="162" y="212" width="4" height="15" fill="rgb(228,61,52)"/><text x="165.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c:293) (1 samples, 0.30%)</title><rect x="162" y="228" width="4" height="15" fill="rgb(240,198,19)"/><text x="165.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.30%)</title><rect x="162" y="244" width="4" height="15" fill="rgb(242,215,1)"/><text x="165.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="166" y="212" width="3" height="15" fill="rgb(226,141,2)"/><text x="169.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="166" y="228" width="3" height="15" fill="rgb(216,227,52)"/><text x="169.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="166" y="244" width="3" height="15" fill="rgb(206,63,52)"/><text x="169.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:39) (1 samples, 0.30%)</title><rect x="166" y="260" width="3" height="15" fill="rgb(243,135,5)"/><text x="169.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1621) (1 samples, 0.30%)</title><rect x="169" y="244" width="4" height="15" fill="rgb(243,196,47)"/><text x="172.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="173" y="308" width="4" height="15" fill="rgb(239,23,50)"/><text x="176.00" y="318.50"></text></g><g><title>0x7f54c8b15d50 (libc-2.29.so) (2 samples, 0.60%)</title><rect x="177" y="324" width="7" height="15" fill="rgb(242,52,52)"/><text x="180.00" y="334.50"></text></g><g><title>0x7f54c8b15d6a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="184" y="324" width="3" height="15" fill="rgb(223,96,29)"/><text x="187.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 1.20%)</title><rect x="177" y="308" width="14" height="15" fill="rgb(219,141,44)"/><text x="180.00" y="318.50"></text></g><g><title>0x7f54c8b15d6f (libc-2.29.so) (1 samples, 0.30%)</title><rect x="187" y="324" width="4" height="15" fill="rgb(251,196,37)"/><text x="190.00" y="334.50"></text></g><g><title>0x7f54c8b15d50 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="191" y="324" width="3" height="15" fill="rgb(232,103,19)"/><text x="194.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 2.11%)</title><rect x="173" y="260" width="25" height="15" fill="rgb(232,12,13)"/><text x="176.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 2.11%)</title><rect x="173" y="276" width="25" height="15" fill="rgb(254,214,2)"/><text x="176.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 2.11%)</title><rect x="173" y="292" width="25" height="15" fill="rgb(237,32,2)"/><text x="176.00" y="302.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:996) (2 samples, 0.60%)</title><rect x="191" y="308" width="7" height="15" fill="rgb(229,22,48)"/><text x="194.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.30%)</title><rect x="194" y="324" width="4" height="15" fill="rgb(211,170,43)"/><text x="197.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.30%)</title><rect x="198" y="276" width="3" height="15" fill="rgb(218,161,31)"/><text x="201.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (2 samples, 0.60%)</title><rect x="201" y="308" width="8" height="15" fill="rgb(206,162,42)"/><text x="204.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (2 samples, 0.60%)</title><rect x="201" y="324" width="8" height="15" fill="rgb(249,88,31)"/><text x="204.00" y="334.50"></text></g><g><title>array_add (number.c:330) (13 samples, 3.92%)</title><rect x="166" y="196" width="46" height="15" fill="rgb(232,224,24)"/><text x="169.00" y="206.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.61%)</title><rect x="169" y="212" width="43" height="15" fill="rgb(219,10,37)"/><text x="172.00" y="222.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (12 samples, 3.61%)</title><rect x="169" y="228" width="43" height="15" fill="rgb(251,97,2)"/><text x="172.00" y="238.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 3.31%)</title><rect x="173" y="244" width="39" height="15" fill="rgb(230,169,40)"/><text x="176.00" y="254.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (4 samples, 1.20%)</title><rect x="198" y="260" width="14" height="15" fill="rgb(224,91,34)"/><text x="201.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (3 samples, 0.90%)</title><rect x="201" y="276" width="11" height="15" fill="rgb(246,33,0)"/><text x="204.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (3 samples, 0.90%)</title><rect x="201" y="292" width="11" height="15" fill="rgb(223,63,47)"/><text x="204.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.30%)</title><rect x="209" y="308" width="3" height="15" fill="rgb(206,6,24)"/><text x="212.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.30%)</title><rect x="209" y="324" width="3" height="15" fill="rgb(235,136,40)"/><text x="212.00" y="334.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="216" y="212" width="3" height="15" fill="rgb(205,156,31)"/><text x="219.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="219" y="212" width="11" height="15" fill="rgb(242,118,2)"/><text x="222.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2791) (1 samples, 0.30%)</title><rect x="230" y="244" width="3" height="15" fill="rgb(235,119,1)"/><text x="233.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.30%)</title><rect x="230" y="260" width="3" height="15" fill="rgb(228,46,24)"/><text x="233.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.30%)</title><rect x="233" y="244" width="4" height="15" fill="rgb(209,112,51)"/><text x="236.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:503) (1 samples, 0.30%)</title><rect x="233" y="260" width="4" height="15" fill="rgb(213,1,7)"/><text x="236.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (1 samples, 0.30%)</title><rect x="237" y="244" width="4" height="15" fill="rgb(223,201,33)"/><text x="240.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.30%)</title><rect x="237" y="260" width="4" height="15" fill="rgb(226,46,49)"/><text x="240.00" y="270.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.30%)</title><rect x="237" y="276" width="4" height="15" fill="rgb(206,190,3)"/><text x="240.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (1 samples, 0.30%)</title><rect x="241" y="244" width="3" height="15" fill="rgb(235,129,48)"/><text x="244.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="241" y="260" width="3" height="15" fill="rgb(234,159,49)"/><text x="244.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.30%)</title><rect x="244" y="244" width="4" height="15" fill="rgb(208,104,0)"/><text x="247.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:144) (1 samples, 0.30%)</title><rect x="244" y="260" width="4" height="15" fill="rgb(247,210,3)"/><text x="247.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (11 samples, 3.31%)</title><rect x="212" y="196" width="39" height="15" fill="rgb(218,24,47)"/><text x="215.00" y="206.50">saf..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.81%)</title><rect x="230" y="212" width="21" height="15" fill="rgb(238,131,53)"/><text x="233.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (6 samples, 1.81%)</title><rect x="230" y="228" width="21" height="15" fill="rgb(230,220,43)"/><text x="233.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.30%)</title><rect x="248" y="244" width="3" height="15" fill="rgb(214,151,45)"/><text x="251.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (1 samples, 0.30%)</title><rect x="248" y="260" width="3" height="15" fill="rgb(213,145,16)"/><text x="251.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="248" y="276" width="3" height="15" fill="rgb(231,47,8)"/><text x="251.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="248" y="292" width="3" height="15" fill="rgb(244,60,37)"/><text x="251.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="248" y="308" width="3" height="15" fill="rgb(239,122,26)"/><text x="251.00" y="318.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (29 samples, 8.73%)</title><rect x="152" y="180" width="103" height="15" fill="rgb(208,89,31)"/><text x="155.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.30%)</title><rect x="251" y="196" width="4" height="15" fill="rgb(220,127,53)"/><text x="254.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (52 samples, 15.66%)</title><rect x="73" y="164" width="185" height="15" fill="rgb(233,127,16)"/><text x="76.00" y="174.50">_predict_proba_lr (sklea..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.30%)</title><rect x="255" y="180" width="3" height="15" fill="rgb(228,89,17)"/><text x="258.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.30%)</title><rect x="258" y="196" width="4" height="15" fill="rgb(239,226,12)"/><text x="261.00" y="206.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:310) (1 samples, 0.30%)</title><rect x="258" y="212" width="4" height="15" fill="rgb(230,159,33)"/><text x="261.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="262" y="196" width="3" height="15" fill="rgb(212,120,23)"/><text x="265.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1970) (1 samples, 0.30%)</title><rect x="262" y="212" width="3" height="15" fill="rgb(210,6,44)"/><text x="265.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1791) (1 samples, 0.30%)</title><rect x="262" y="228" width="3" height="15" fill="rgb(251,119,38)"/><text x="265.00" y="238.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.30%)</title><rect x="265" y="260" width="4" height="15" fill="rgb(228,88,36)"/><text x="268.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (2 samples, 0.60%)</title><rect x="265" y="212" width="8" height="15" fill="rgb(216,177,1)"/><text x="268.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.60%)</title><rect x="265" y="228" width="8" height="15" fill="rgb(209,145,1)"/><text x="268.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.60%)</title><rect x="265" y="244" width="8" height="15" fill="rgb(243,229,33)"/><text x="268.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.30%)</title><rect x="269" y="260" width="4" height="15" fill="rgb(205,73,30)"/><text x="272.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="269" y="276" width="4" height="15" fill="rgb(237,62,15)"/><text x="272.00" y="286.50"></text></g><g><title>0x7f54aaefb9dd (?) (1 samples, 0.30%)</title><rect x="273" y="244" width="3" height="15" fill="rgb(246,108,46)"/><text x="276.00" y="254.50"></text></g><g><title>0x7f54aaf1c254 (?) (1 samples, 0.30%)</title><rect x="273" y="260" width="3" height="15" fill="rgb(230,198,47)"/><text x="276.00" y="270.50"></text></g><g><title>0x7f54aaed9fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="283" y="276" width="18" height="15" fill="rgb(245,48,44)"/><text x="286.00" y="286.50"></text></g><g><title>0x7f54ab0259f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="301" y="276" width="4" height="15" fill="rgb(219,64,37)"/><text x="304.00" y="286.50"></text></g><g><title>0x7f54c8c411b0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="315" y="292" width="4" height="15" fill="rgb(237,193,51)"/><text x="318.00" y="302.50"></text></g><g><title>0x7f54c8cc7ba0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="319" y="292" width="3" height="15" fill="rgb(228,82,40)"/><text x="322.00" y="302.50"></text></g><g><title>0x7f54c8cc7bb4 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="322" y="292" width="4" height="15" fill="rgb(224,8,22)"/><text x="325.00" y="302.50"></text></g><g><title>0x7f54c8cc7bd3 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="326" y="292" width="3" height="15" fill="rgb(211,15,44)"/><text x="329.00" y="302.50"></text></g><g><title>0x7f54c8cc7c07 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="329" y="292" width="4" height="15" fill="rgb(221,206,11)"/><text x="332.00" y="302.50"></text></g><g><title>0x7f54c8cc7c3e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="333" y="292" width="3" height="15" fill="rgb(250,8,41)"/><text x="336.00" y="302.50"></text></g><g><title>0x7f54c8cc7c56 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="336" y="292" width="4" height="15" fill="rgb(251,36,45)"/><text x="339.00" y="302.50"></text></g><g><title>0x7f54c8cc7c6a (libm-2.29.so) (3 samples, 0.90%)</title><rect x="340" y="292" width="11" height="15" fill="rgb(223,196,31)"/><text x="343.00" y="302.50"></text></g><g><title>0x7f54aaf1c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 6.63%)</title><rect x="276" y="260" width="78" height="15" fill="rgb(215,82,33)"/><text x="279.00" y="270.50">0x7f54aaf..</text></g><g><title>exp (libm-2.29.so) (14 samples, 4.22%)</title><rect x="305" y="276" width="49" height="15" fill="rgb(214,11,13)"/><text x="308.00" y="286.50">exp ..</text></g><g><title>0x7f54c8cc7c7b (libm-2.29.so) (1 samples, 0.30%)</title><rect x="351" y="292" width="3" height="15" fill="rgb(223,66,24)"/><text x="354.00" y="302.50"></text></g><g><title>0x7f54aaf1c275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="354" y="260" width="4" height="15" fill="rgb(209,205,51)"/><text x="357.00" y="270.50"></text></g><g><title>0x7f54aaefb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (32 samples, 9.64%)</title><rect x="276" y="244" width="114" height="15" fill="rgb(210,22,16)"/><text x="279.00" y="254.50">0x7f54aaefb9dd..</text></g><g><title>0x7f54aaf1c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.71%)</title><rect x="358" y="260" width="32" height="15" fill="rgb(225,1,20)"/><text x="361.00" y="270.50">0x..</text></g><g><title>0x7f54aaf1bef7 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="390" y="260" width="3" height="15" fill="rgb(240,10,30)"/><text x="393.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (39 samples, 11.75%)</title><rect x="258" y="164" width="139" height="15" fill="rgb(213,170,24)"/><text x="261.00" y="174.50">_predict_proba_lr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (39 samples, 11.75%)</title><rect x="258" y="180" width="139" height="15" fill="rgb(252,2,51)"/><text x="261.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (37 samples, 11.14%)</title><rect x="265" y="196" width="132" height="15" fill="rgb(234,8,45)"/><text x="268.00" y="206.50">PyUFunc_GenericF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (35 samples, 10.54%)</title><rect x="273" y="212" width="124" height="15" fill="rgb(233,158,41)"/><text x="276.00" y="222.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (35 samples, 10.54%)</title><rect x="273" y="228" width="124" height="15" fill="rgb(221,2,18)"/><text x="276.00" y="238.50">trivial_two_ope..</text></g><g><title>0x7f54aaf1c13e (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="390" y="244" width="7" height="15" fill="rgb(215,192,35)"/><text x="393.00" y="254.50"></text></g><g><title>PyUFunc_getfperr (ufunc_object.c:110) (1 samples, 0.30%)</title><rect x="393" y="260" width="4" height="15" fill="rgb(230,56,36)"/><text x="396.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.30%)</title><rect x="397" y="164" width="3" height="15" fill="rgb(206,96,40)"/><text x="400.00" y="174.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:50) (1 samples, 0.30%)</title><rect x="408" y="196" width="3" height="15" fill="rgb(249,43,33)"/><text x="411.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.60%)</title><rect x="408" y="180" width="7" height="15" fill="rgb(230,73,40)"/><text x="411.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.30%)</title><rect x="411" y="196" width="4" height="15" fill="rgb(233,205,15)"/><text x="414.00" y="206.50"></text></g><g><title>0x7f54c8b0b730 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="411" y="212" width="4" height="15" fill="rgb(234,132,18)"/><text x="414.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.30%)</title><rect x="415" y="180" width="3" height="15" fill="rgb(221,30,21)"/><text x="418.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.30%)</title><rect x="415" y="196" width="3" height="15" fill="rgb(208,209,25)"/><text x="418.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.30%)</title><rect x="415" y="212" width="3" height="15" fill="rgb(224,129,50)"/><text x="418.00" y="222.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.30%)</title><rect x="418" y="180" width="4" height="15" fill="rgb(249,212,8)"/><text x="421.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.30%)</title><rect x="418" y="196" width="4" height="15" fill="rgb(211,94,34)"/><text x="421.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.30%)</title><rect x="418" y="212" width="4" height="15" fill="rgb(208,43,16)"/><text x="421.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="418" y="228" width="4" height="15" fill="rgb(214,159,19)"/><text x="421.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="418" y="244" width="4" height="15" fill="rgb(206,206,47)"/><text x="421.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.30%)</title><rect x="422" y="228" width="3" height="15" fill="rgb(233,201,38)"/><text x="425.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="422" y="244" width="3" height="15" fill="rgb(250,0,22)"/><text x="425.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.30%)</title><rect x="422" y="260" width="3" height="15" fill="rgb(222,178,46)"/><text x="425.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.30%)</title><rect x="422" y="276" width="3" height="15" fill="rgb(223,181,50)"/><text x="425.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.30%)</title><rect x="422" y="292" width="3" height="15" fill="rgb(243,179,48)"/><text x="425.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.30%)</title><rect x="422" y="308" width="3" height="15" fill="rgb(248,220,14)"/><text x="425.00" y="318.50"></text></g><g><title>0x7f54c8b0be7a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="422" y="324" width="3" height="15" fill="rgb(252,60,8)"/><text x="425.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.30%)</title><rect x="425" y="244" width="4" height="15" fill="rgb(218,12,50)"/><text x="428.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4626) (1 samples, 0.30%)</title><rect x="429" y="244" width="3" height="15" fill="rgb(249,178,33)"/><text x="432.00" y="254.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.30%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(248,199,27)"/><text x="432.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.30%)</title><rect x="432" y="260" width="4" height="15" fill="rgb(211,157,48)"/><text x="435.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.30%)</title><rect x="432" y="276" width="4" height="15" fill="rgb(250,167,50)"/><text x="435.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:502) (1 samples, 0.30%)</title><rect x="432" y="292" width="4" height="15" fill="rgb(206,171,48)"/><text x="435.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.30%)</title><rect x="436" y="324" width="4" height="15" fill="rgb(215,12,41)"/><text x="439.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.30%)</title><rect x="436" y="340" width="4" height="15" fill="rgb(221,49,14)"/><text x="439.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.30%)</title><rect x="436" y="356" width="4" height="15" fill="rgb(247,201,38)"/><text x="439.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:350) (1 samples, 0.30%)</title><rect x="436" y="372" width="4" height="15" fill="rgb(231,193,53)"/><text x="439.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.60%)</title><rect x="436" y="276" width="7" height="15" fill="rgb(251,11,6)"/><text x="439.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.60%)</title><rect x="436" y="292" width="7" height="15" fill="rgb(253,146,11)"/><text x="439.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.60%)</title><rect x="436" y="308" width="7" height="15" fill="rgb(247,166,36)"/><text x="439.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.30%)</title><rect x="440" y="324" width="3" height="15" fill="rgb(231,108,50)"/><text x="443.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:228) (1 samples, 0.30%)</title><rect x="440" y="340" width="3" height="15" fill="rgb(249,115,41)"/><text x="443.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="443" y="292" width="4" height="15" fill="rgb(249,107,54)"/><text x="446.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.30%)</title><rect x="443" y="308" width="4" height="15" fill="rgb(226,30,21)"/><text x="446.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1057) (1 samples, 0.30%)</title><rect x="443" y="324" width="4" height="15" fill="rgb(210,67,42)"/><text x="446.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="447" y="292" width="3" height="15" fill="rgb(220,170,17)"/><text x="450.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.30%)</title><rect x="447" y="308" width="3" height="15" fill="rgb(213,218,4)"/><text x="450.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="450" y="292" width="4" height="15" fill="rgb(254,9,21)"/><text x="453.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3047) (1 samples, 0.30%)</title><rect x="450" y="308" width="4" height="15" fill="rgb(213,36,45)"/><text x="453.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.30%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(220,222,0)"/><text x="457.00" y="302.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1623) (1 samples, 0.30%)</title><rect x="454" y="308" width="3" height="15" fill="rgb(252,124,54)"/><text x="457.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (5 samples, 1.51%)</title><rect x="443" y="276" width="18" height="15" fill="rgb(216,112,22)"/><text x="446.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.30%)</title><rect x="457" y="292" width="4" height="15" fill="rgb(222,225,1)"/><text x="460.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.30%)</title><rect x="457" y="308" width="4" height="15" fill="rgb(254,24,14)"/><text x="460.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.30%)</title><rect x="461" y="292" width="3" height="15" fill="rgb(249,76,34)"/><text x="464.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.30%)</title><rect x="464" y="292" width="4" height="15" fill="rgb(220,144,22)"/><text x="467.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.30%)</title><rect x="468" y="292" width="4" height="15" fill="rgb(215,95,27)"/><text x="471.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (3 samples, 0.90%)</title><rect x="472" y="292" width="10" height="15" fill="rgb(239,199,4)"/><text x="475.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (3 samples, 0.90%)</title><rect x="482" y="308" width="11" height="15" fill="rgb(243,178,27)"/><text x="485.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (6 samples, 1.81%)</title><rect x="493" y="308" width="21" height="15" fill="rgb(235,226,34)"/><text x="496.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 1.20%)</title><rect x="500" y="324" width="14" height="15" fill="rgb(253,28,17)"/><text x="503.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (28 samples, 8.43%)</title><rect x="422" y="180" width="99" height="15" fill="rgb(234,185,5)"/><text x="425.00" y="190.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 8.43%)</title><rect x="422" y="196" width="99" height="15" fill="rgb(215,141,39)"/><text x="425.00" y="206.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py:38) (28 samples, 8.43%)</title><rect x="422" y="212" width="99" height="15" fill="rgb(212,151,20)"/><text x="425.00" y="222.50">_sum (numpy..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (27 samples, 8.13%)</title><rect x="425" y="228" width="96" height="15" fill="rgb(208,195,2)"/><text x="428.00" y="238.50">ufunc_reduc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (25 samples, 7.53%)</title><rect x="432" y="244" width="89" height="15" fill="rgb(238,65,33)"/><text x="435.00" y="254.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (24 samples, 7.23%)</title><rect x="436" y="260" width="85" height="15" fill="rgb(229,57,25)"/><text x="439.00" y="270.50">PyUFunc_Re..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (17 samples, 5.12%)</title><rect x="461" y="276" width="60" height="15" fill="rgb(219,13,51)"/><text x="464.00" y="286.50">PyUFun..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (11 samples, 3.31%)</title><rect x="482" y="292" width="39" height="15" fill="rgb(229,18,13)"/><text x="485.00" y="302.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:216) (2 samples, 0.60%)</title><rect x="514" y="308" width="7" height="15" fill="rgb(218,125,18)"/><text x="517.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="521" y="180" width="4" height="15" fill="rgb(227,56,46)"/><text x="524.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="521" y="196" width="4" height="15" fill="rgb(228,217,46)"/><text x="524.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.30%)</title><rect x="521" y="212" width="4" height="15" fill="rgb(209,130,39)"/><text x="524.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.30%)</title><rect x="521" y="228" width="4" height="15" fill="rgb(207,199,33)"/><text x="524.00" y="238.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.30%)</title><rect x="525" y="276" width="3" height="15" fill="rgb(227,180,41)"/><text x="528.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.30%)</title><rect x="528" y="276" width="4" height="15" fill="rgb(241,202,45)"/><text x="531.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.90%)</title><rect x="532" y="276" width="11" height="15" fill="rgb(209,86,9)"/><text x="535.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.30%)</title><rect x="543" y="292" width="3" height="15" fill="rgb(221,93,7)"/><text x="546.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 2.11%)</title><rect x="525" y="228" width="25" height="15" fill="rgb(229,48,35)"/><text x="528.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 2.11%)</title><rect x="525" y="244" width="25" height="15" fill="rgb(251,40,32)"/><text x="528.00" y="254.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 2.11%)</title><rect x="525" y="260" width="25" height="15" fill="rgb(242,75,26)"/><text x="528.00" y="270.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.60%)</title><rect x="543" y="276" width="7" height="15" fill="rgb(218,14,16)"/><text x="546.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.30%)</title><rect x="546" y="292" width="4" height="15" fill="rgb(213,85,24)"/><text x="549.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (150 samples, 45.18%)</title><rect x="27" y="132" width="533" height="15" fill="rgb(215,128,19)"/><text x="30.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (139 samples, 41.87%)</title><rect x="66" y="148" width="494" height="15" fill="rgb(226,146,30)"/><text x="69.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (45 samples, 13.55%)</title><rect x="400" y="164" width="160" height="15" fill="rgb(231,104,29)"/><text x="403.00" y="174.50">_predict_proba_lr (s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 3.01%)</title><rect x="525" y="180" width="35" height="15" fill="rgb(229,86,13)"/><text x="528.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 3.01%)</title><rect x="525" y="196" width="35" height="15" fill="rgb(220,179,29)"/><text x="528.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 3.01%)</title><rect x="525" y="212" width="35" height="15" fill="rgb(232,160,43)"/><text x="528.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.90%)</title><rect x="550" y="228" width="10" height="15" fill="rgb(252,72,23)"/><text x="553.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.90%)</title><rect x="550" y="244" width="10" height="15" fill="rgb(208,212,26)"/><text x="553.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.90%)</title><rect x="550" y="260" width="10" height="15" fill="rgb(220,218,7)"/><text x="553.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (3 samples, 0.90%)</title><rect x="550" y="276" width="10" height="15" fill="rgb(235,128,40)"/><text x="553.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (3 samples, 0.90%)</title><rect x="550" y="292" width="10" height="15" fill="rgb(212,103,52)"/><text x="553.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:38) (156 samples, 46.99%)</title><rect x="10" y="52" width="554" height="15" fill="rgb(232,43,6)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_10..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:37) (156 samples, 46.99%)</title><rect x="10" y="68" width="554" height="15" fill="rgb(206,101,5)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:29) (156 samples, 46.99%)</title><rect x="10" y="84" width="554" height="15" fill="rgb(205,138,44)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_on..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:23) (151 samples, 45.48%)</title><rect x="27" y="100" width="537" height="15" fill="rgb(222,142,45)"/><text x="30.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (151 samples, 45.48%)</title><rect x="27" y="116" width="537" height="15" fill="rgb(228,86,11)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="560" y="132" width="4" height="15" fill="rgb(242,229,17)"/><text x="563.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:1) (1 samples, 0.30%)</title><rect x="564" y="148" width="4" height="15" fill="rgb(251,20,27)"/><text x="567.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="564" y="164" width="4" height="15" fill="rgb(240,209,1)"/><text x="567.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="564" y="180" width="4" height="15" fill="rgb(223,61,28)"/><text x="567.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="564" y="196" width="4" height="15" fill="rgb(245,75,1)"/><text x="567.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="564" y="212" width="4" height="15" fill="rgb(231,82,30)"/><text x="567.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="228" width="4" height="15" fill="rgb(218,33,1)"/><text x="567.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.30%)</title><rect x="564" y="244" width="4" height="15" fill="rgb(222,125,49)"/><text x="567.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="564" y="260" width="4" height="15" fill="rgb(217,226,46)"/><text x="567.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="276" width="4" height="15" fill="rgb(239,86,28)"/><text x="567.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="564" y="292" width="4" height="15" fill="rgb(244,13,25)"/><text x="567.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="564" y="308" width="4" height="15" fill="rgb(250,9,12)"/><text x="567.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="564" y="324" width="4" height="15" fill="rgb(240,141,26)"/><text x="567.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="564" y="340" width="4" height="15" fill="rgb(212,2,35)"/><text x="567.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="356" width="4" height="15" fill="rgb(249,105,31)"/><text x="567.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.30%)</title><rect x="564" y="372" width="4" height="15" fill="rgb(247,56,14)"/><text x="567.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="564" y="388" width="4" height="15" fill="rgb(249,173,52)"/><text x="567.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="404" width="4" height="15" fill="rgb(249,88,50)"/><text x="567.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="564" y="420" width="4" height="15" fill="rgb(234,229,31)"/><text x="567.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="564" y="436" width="4" height="15" fill="rgb(241,168,39)"/><text x="567.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="564" y="452" width="4" height="15" fill="rgb(227,146,38)"/><text x="567.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="564" y="468" width="4" height="15" fill="rgb(233,217,33)"/><text x="567.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="484" width="4" height="15" fill="rgb(221,160,37)"/><text x="567.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.30%)</title><rect x="564" y="500" width="4" height="15" fill="rgb(252,139,41)"/><text x="567.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="564" y="516" width="4" height="15" fill="rgb(250,182,52)"/><text x="567.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="532" width="4" height="15" fill="rgb(229,144,15)"/><text x="567.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="564" y="548" width="4" height="15" fill="rgb(206,92,10)"/><text x="567.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="564" y="564" width="4" height="15" fill="rgb(234,69,46)"/><text x="567.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="564" y="580" width="4" height="15" fill="rgb(215,152,39)"/><text x="567.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="564" y="596" width="4" height="15" fill="rgb(247,197,6)"/><text x="567.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="564" y="612" width="4" height="15" fill="rgb(230,147,29)"/><text x="567.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:552) (1 samples, 0.30%)</title><rect x="564" y="628" width="4" height="15" fill="rgb(243,70,38)"/><text x="567.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:184) (1 samples, 0.30%)</title><rect x="564" y="644" width="4" height="15" fill="rgb(251,69,17)"/><text x="567.00" y="654.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.30%)</title><rect x="568" y="916" width="3" height="15" fill="rgb(251,21,54)"/><text x="571.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.30%)</title><rect x="568" y="932" width="3" height="15" fill="rgb(223,157,38)"/><text x="571.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="568" y="948" width="3" height="15" fill="rgb(215,79,17)"/><text x="571.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.30%)</title><rect x="568" y="964" width="3" height="15" fill="rgb(206,63,8)"/><text x="571.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.30%)</title><rect x="568" y="980" width="3" height="15" fill="rgb(247,134,7)"/><text x="571.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.30%)</title><rect x="568" y="996" width="3" height="15" fill="rgb(208,46,54)"/><text x="571.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:371) (1 samples, 0.30%)</title><rect x="568" y="1012" width="3" height="15" fill="rgb(233,136,25)"/><text x="571.00" y="1022.50"></text></g><g><title>join (posixpath.py:86) (1 samples, 0.30%)</title><rect x="571" y="932" width="4" height="15" fill="rgb(215,0,9)"/><text x="574.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 0.90%)</title><rect x="568" y="852" width="10" height="15" fill="rgb(211,52,50)"/><text x="571.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 0.90%)</title><rect x="568" y="868" width="10" height="15" fill="rgb(222,117,51)"/><text x="571.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 0.90%)</title><rect x="568" y="884" width="10" height="15" fill="rgb(246,19,21)"/><text x="571.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.90%)</title><rect x="568" y="900" width="10" height="15" fill="rgb(242,204,5)"/><text x="571.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (2 samples, 0.60%)</title><rect x="571" y="916" width="7" height="15" fill="rgb(235,229,53)"/><text x="574.00" y="926.50"></text></g><g><title>join (posixpath.py:92) (1 samples, 0.30%)</title><rect x="575" y="932" width="3" height="15" fill="rgb(206,106,19)"/><text x="578.00" y="942.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.30%)</title><rect x="575" y="948" width="3" height="15" fill="rgb(234,12,32)"/><text x="578.00" y="958.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.30%)</title><rect x="578" y="884" width="4" height="15" fill="rgb(226,223,25)"/><text x="581.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.30%)</title><rect x="578" y="900" width="4" height="15" fill="rgb(226,185,3)"/><text x="581.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.30%)</title><rect x="578" y="916" width="4" height="15" fill="rgb(220,19,20)"/><text x="581.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.30%)</title><rect x="578" y="932" width="4" height="15" fill="rgb(227,191,8)"/><text x="581.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.30%)</title><rect x="578" y="948" width="4" height="15" fill="rgb(227,196,5)"/><text x="581.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.30%)</title><rect x="578" y="964" width="4" height="15" fill="rgb(221,98,2)"/><text x="581.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.30%)</title><rect x="578" y="980" width="4" height="15" fill="rgb(206,82,34)"/><text x="581.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:89) (1 samples, 0.30%)</title><rect x="578" y="996" width="4" height="15" fill="rgb(225,48,43)"/><text x="581.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="578" y="852" width="7" height="15" fill="rgb(236,200,54)"/><text x="581.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="578" y="868" width="7" height="15" fill="rgb(222,208,42)"/><text x="581.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.30%)</title><rect x="582" y="884" width="3" height="15" fill="rgb(226,132,42)"/><text x="585.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.30%)</title><rect x="582" y="900" width="3" height="15" fill="rgb(222,167,20)"/><text x="585.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.30%)</title><rect x="582" y="916" width="3" height="15" fill="rgb(241,32,6)"/><text x="585.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.30%)</title><rect x="585" y="964" width="4" height="15" fill="rgb(247,203,9)"/><text x="588.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.30%)</title><rect x="585" y="980" width="4" height="15" fill="rgb(242,54,48)"/><text x="588.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="585" y="996" width="4" height="15" fill="rgb(246,200,45)"/><text x="588.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="585" y="1012" width="4" height="15" fill="rgb(218,4,33)"/><text x="588.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="585" y="1028" width="4" height="15" fill="rgb(214,115,48)"/><text x="588.00" y="1038.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.60%)</title><rect x="585" y="884" width="7" height="15" fill="rgb(209,220,44)"/><text x="588.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.60%)</title><rect x="585" y="900" width="7" height="15" fill="rgb(254,4,22)"/><text x="588.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.60%)</title><rect x="585" y="916" width="7" height="15" fill="rgb(227,167,3)"/><text x="588.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.60%)</title><rect x="585" y="932" width="7" height="15" fill="rgb(205,182,36)"/><text x="588.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.60%)</title><rect x="585" y="948" width="7" height="15" fill="rgb(234,155,13)"/><text x="588.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.30%)</title><rect x="589" y="964" width="3" height="15" fill="rgb(246,43,20)"/><text x="592.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:2) (8 samples, 2.41%)</title><rect x="568" y="148" width="28" height="15" fill="rgb(239,29,42)"/><text x="571.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="164" width="28" height="15" fill="rgb(241,89,41)"/><text x="571.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.41%)</title><rect x="568" y="180" width="28" height="15" fill="rgb(239,30,4)"/><text x="571.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="196" width="28" height="15" fill="rgb(234,162,18)"/><text x="571.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="212" width="28" height="15" fill="rgb(231,120,14)"/><text x="571.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="228" width="28" height="15" fill="rgb(207,1,35)"/><text x="571.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="244" width="28" height="15" fill="rgb(222,39,42)"/><text x="571.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="260" width="28" height="15" fill="rgb(217,164,11)"/><text x="571.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="276" width="28" height="15" fill="rgb(218,220,25)"/><text x="571.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 2.41%)</title><rect x="568" y="292" width="28" height="15" fill="rgb(252,139,39)"/><text x="571.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="308" width="28" height="15" fill="rgb(214,227,21)"/><text x="571.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="324" width="28" height="15" fill="rgb(229,171,28)"/><text x="571.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="340" width="28" height="15" fill="rgb(240,165,12)"/><text x="571.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="356" width="28" height="15" fill="rgb(211,150,40)"/><text x="571.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="372" width="28" height="15" fill="rgb(252,198,31)"/><text x="571.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 2.41%)</title><rect x="568" y="388" width="28" height="15" fill="rgb(254,172,0)"/><text x="571.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="404" width="28" height="15" fill="rgb(241,106,21)"/><text x="571.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="420" width="28" height="15" fill="rgb(254,188,5)"/><text x="571.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="436" width="28" height="15" fill="rgb(234,132,28)"/><text x="571.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="452" width="28" height="15" fill="rgb(251,77,46)"/><text x="571.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="468" width="28" height="15" fill="rgb(237,57,10)"/><text x="571.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 2.41%)</title><rect x="568" y="484" width="28" height="15" fill="rgb(206,125,42)"/><text x="571.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="500" width="28" height="15" fill="rgb(210,205,29)"/><text x="571.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="516" width="28" height="15" fill="rgb(253,134,44)"/><text x="571.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="532" width="28" height="15" fill="rgb(213,88,49)"/><text x="571.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="548" width="28" height="15" fill="rgb(207,169,14)"/><text x="571.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="564" width="28" height="15" fill="rgb(239,12,7)"/><text x="571.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 2.41%)</title><rect x="568" y="580" width="28" height="15" fill="rgb(230,95,10)"/><text x="571.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="596" width="28" height="15" fill="rgb(208,36,42)"/><text x="571.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.41%)</title><rect x="568" y="612" width="28" height="15" fill="rgb(227,58,37)"/><text x="571.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="628" width="28" height="15" fill="rgb(244,189,7)"/><text x="571.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="644" width="28" height="15" fill="rgb(238,43,40)"/><text x="571.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="660" width="28" height="15" fill="rgb(210,63,10)"/><text x="571.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="676" width="28" height="15" fill="rgb(217,168,21)"/><text x="571.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="692" width="28" height="15" fill="rgb(254,147,48)"/><text x="571.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="708" width="28" height="15" fill="rgb(231,72,25)"/><text x="571.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 2.41%)</title><rect x="568" y="724" width="28" height="15" fill="rgb(239,189,48)"/><text x="571.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.41%)</title><rect x="568" y="740" width="28" height="15" fill="rgb(221,32,13)"/><text x="571.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.41%)</title><rect x="568" y="756" width="28" height="15" fill="rgb(227,24,45)"/><text x="571.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.41%)</title><rect x="568" y="772" width="28" height="15" fill="rgb(254,135,22)"/><text x="571.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.41%)</title><rect x="568" y="788" width="28" height="15" fill="rgb(218,33,48)"/><text x="571.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.41%)</title><rect x="568" y="804" width="28" height="15" fill="rgb(242,142,27)"/><text x="571.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 2.41%)</title><rect x="568" y="820" width="28" height="15" fill="rgb(246,199,36)"/><text x="571.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 2.41%)</title><rect x="568" y="836" width="28" height="15" fill="rgb(205,11,39)"/><text x="571.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.90%)</title><rect x="585" y="852" width="11" height="15" fill="rgb(249,80,31)"/><text x="588.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.90%)</title><rect x="585" y="868" width="11" height="15" fill="rgb(242,82,49)"/><text x="588.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.30%)</title><rect x="592" y="884" width="4" height="15" fill="rgb(244,194,21)"/><text x="595.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="592" y="900" width="4" height="15" fill="rgb(232,92,41)"/><text x="595.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.30%)</title><rect x="592" y="916" width="4" height="15" fill="rgb(207,124,4)"/><text x="595.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.30%)</title><rect x="592" y="932" width="4" height="15" fill="rgb(254,63,52)"/><text x="595.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.30%)</title><rect x="592" y="948" width="4" height="15" fill="rgb(254,35,51)"/><text x="595.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2558) (1 samples, 0.30%)</title><rect x="592" y="964" width="4" height="15" fill="rgb(234,132,2)"/><text x="595.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.30%)</title><rect x="592" y="980" width="4" height="15" fill="rgb(239,44,43)"/><text x="595.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:206) (1 samples, 0.30%)</title><rect x="592" y="996" width="4" height="15" fill="rgb(244,67,48)"/><text x="595.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:11) (1 samples, 0.30%)</title><rect x="596" y="532" width="4" height="15" fill="rgb(249,189,36)"/><text x="599.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="548" width="4" height="15" fill="rgb(235,220,25)"/><text x="599.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="564" width="4" height="15" fill="rgb(210,105,46)"/><text x="599.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="580" width="4" height="15" fill="rgb(227,87,40)"/><text x="599.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="596" width="4" height="15" fill="rgb(206,207,30)"/><text x="599.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="612" width="4" height="15" fill="rgb(235,7,6)"/><text x="599.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.30%)</title><rect x="596" y="628" width="4" height="15" fill="rgb(246,141,26)"/><text x="599.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="644" width="4" height="15" fill="rgb(240,189,11)"/><text x="599.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="660" width="4" height="15" fill="rgb(218,50,38)"/><text x="599.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="676" width="4" height="15" fill="rgb(212,128,14)"/><text x="599.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="692" width="4" height="15" fill="rgb(246,211,45)"/><text x="599.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="708" width="4" height="15" fill="rgb(245,42,7)"/><text x="599.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.30%)</title><rect x="596" y="724" width="4" height="15" fill="rgb(216,4,18)"/><text x="599.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="740" width="4" height="15" fill="rgb(235,197,43)"/><text x="599.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="756" width="4" height="15" fill="rgb(235,87,4)"/><text x="599.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="772" width="4" height="15" fill="rgb(250,174,49)"/><text x="599.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="788" width="4" height="15" fill="rgb(249,63,0)"/><text x="599.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="804" width="4" height="15" fill="rgb(235,96,15)"/><text x="599.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.30%)</title><rect x="596" y="820" width="4" height="15" fill="rgb(226,216,2)"/><text x="599.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="836" width="4" height="15" fill="rgb(250,105,38)"/><text x="599.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="852" width="4" height="15" fill="rgb(236,181,28)"/><text x="599.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="868" width="4" height="15" fill="rgb(222,126,48)"/><text x="599.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="884" width="4" height="15" fill="rgb(254,71,53)"/><text x="599.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="900" width="4" height="15" fill="rgb(236,143,2)"/><text x="599.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.30%)</title><rect x="596" y="916" width="4" height="15" fill="rgb(221,23,48)"/><text x="599.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="932" width="4" height="15" fill="rgb(253,34,37)"/><text x="599.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="948" width="4" height="15" fill="rgb(245,74,52)"/><text x="599.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="964" width="4" height="15" fill="rgb(228,52,45)"/><text x="599.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="980" width="4" height="15" fill="rgb(227,29,19)"/><text x="599.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="996" width="4" height="15" fill="rgb(214,144,38)"/><text x="599.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.30%)</title><rect x="596" y="1012" width="4" height="15" fill="rgb(229,44,23)"/><text x="599.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1028" width="4" height="15" fill="rgb(227,203,51)"/><text x="599.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1044" width="4" height="15" fill="rgb(232,67,25)"/><text x="599.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="1060" width="4" height="15" fill="rgb(239,179,37)"/><text x="599.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="1076" width="4" height="15" fill="rgb(233,120,39)"/><text x="599.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1092" width="4" height="15" fill="rgb(249,48,17)"/><text x="599.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.30%)</title><rect x="596" y="1108" width="4" height="15" fill="rgb(250,215,54)"/><text x="599.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="596" y="1124" width="4" height="15" fill="rgb(235,223,44)"/><text x="599.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1140" width="4" height="15" fill="rgb(221,161,47)"/><text x="599.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1156" width="4" height="15" fill="rgb(240,210,36)"/><text x="599.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1172" width="4" height="15" fill="rgb(235,140,35)"/><text x="599.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="1188" width="4" height="15" fill="rgb(246,150,26)"/><text x="599.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="1204" width="4" height="15" fill="rgb(247,178,31)"/><text x="599.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1220" width="4" height="15" fill="rgb(233,104,27)"/><text x="599.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.30%)</title><rect x="596" y="1236" width="4" height="15" fill="rgb(227,158,37)"/><text x="599.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1252" width="4" height="15" fill="rgb(231,128,25)"/><text x="599.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1268" width="4" height="15" fill="rgb(213,12,45)"/><text x="599.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="1284" width="4" height="15" fill="rgb(219,155,1)"/><text x="599.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="1300" width="4" height="15" fill="rgb(214,91,16)"/><text x="599.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1316" width="4" height="15" fill="rgb(223,213,47)"/><text x="599.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:27) (1 samples, 0.30%)</title><rect x="596" y="1332" width="4" height="15" fill="rgb(238,107,5)"/><text x="599.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="596" y="1348" width="4" height="15" fill="rgb(207,201,13)"/><text x="599.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1364" width="4" height="15" fill="rgb(232,128,8)"/><text x="599.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1380" width="4" height="15" fill="rgb(209,44,54)"/><text x="599.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1396" width="4" height="15" fill="rgb(225,178,14)"/><text x="599.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="1412" width="4" height="15" fill="rgb(218,225,21)"/><text x="599.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="1428" width="4" height="15" fill="rgb(246,124,17)"/><text x="599.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1444" width="4" height="15" fill="rgb(233,217,43)"/><text x="599.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py:91) (1 samples, 0.30%)</title><rect x="596" y="1460" width="4" height="15" fill="rgb(212,56,54)"/><text x="599.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1476" width="4" height="15" fill="rgb(218,40,22)"/><text x="599.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1492" width="4" height="15" fill="rgb(243,223,22)"/><text x="599.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="596" y="1508" width="4" height="15" fill="rgb(244,45,2)"/><text x="599.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="596" y="1524" width="4" height="15" fill="rgb(224,54,5)"/><text x="599.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1540" width="4" height="15" fill="rgb(250,30,53)"/><text x="599.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/quadpack.py:9) (1 samples, 0.30%)</title><rect x="596" y="1556" width="4" height="15" fill="rgb(243,166,28)"/><text x="599.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="596" y="1572" width="4" height="15" fill="rgb(234,214,20)"/><text x="599.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1588" width="4" height="15" fill="rgb(209,189,23)"/><text x="599.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="596" y="1604" width="4" height="15" fill="rgb(251,167,25)"/><text x="599.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="596" y="1620" width="4" height="15" fill="rgb(221,122,7)"/><text x="599.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="596" y="1636" width="4" height="15" fill="rgb(242,197,29)"/><text x="599.00" y="1646.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.30%)</title><rect x="596" y="1652" width="4" height="15" fill="rgb(239,135,24)"/><text x="599.00" y="1662.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.30%)</title><rect x="596" y="1668" width="4" height="15" fill="rgb(251,59,39)"/><text x="599.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="596" y="1684" width="4" height="15" fill="rgb(238,115,30)"/><text x="599.00" y="1694.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1700" width="4" height="15" fill="rgb(223,75,32)"/><text x="599.00" y="1710.50"></text></g><g><title>0x7f54c8d7d995 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1716" width="4" height="15" fill="rgb(221,91,54)"/><text x="599.00" y="1726.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1732" width="4" height="15" fill="rgb(247,188,4)"/><text x="599.00" y="1742.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1748" width="4" height="15" fill="rgb(223,202,28)"/><text x="599.00" y="1758.50"></text></g><g><title>0x7f54c8d7d258 (libdl-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1764" width="4" height="15" fill="rgb(227,14,33)"/><text x="599.00" y="1774.50"></text></g><g><title>0x7f54c8dcad7a (ld-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1780" width="4" height="15" fill="rgb(245,193,50)"/><text x="599.00" y="1790.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1796" width="4" height="15" fill="rgb(251,179,30)"/><text x="599.00" y="1806.50"></text></g><g><title>0x7f54c8dcb345 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1812" width="4" height="15" fill="rgb(245,53,53)"/><text x="599.00" y="1822.50"></text></g><g><title>0x7f54c8dc4001 (ld-2.29.so) (1 samples, 0.30%)</title><rect x="596" y="1828" width="4" height="15" fill="rgb(248,128,11)"/><text x="599.00" y="1838.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.30%)</title><rect x="600" y="964" width="3" height="15" fill="rgb(250,168,5)"/><text x="603.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="600" y="980" width="3" height="15" fill="rgb(227,213,14)"/><text x="603.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="600" y="996" width="3" height="15" fill="rgb(216,149,34)"/><text x="603.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="600" y="1012" width="3" height="15" fill="rgb(251,16,3)"/><text x="603.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="600" y="1028" width="3" height="15" fill="rgb(240,41,3)"/><text x="603.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="600" y="1044" width="3" height="15" fill="rgb(241,120,22)"/><text x="603.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.30%)</title><rect x="600" y="1060" width="3" height="15" fill="rgb(253,21,8)"/><text x="603.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="600" y="1076" width="3" height="15" fill="rgb(208,181,48)"/><text x="603.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="600" y="1092" width="3" height="15" fill="rgb(213,60,42)"/><text x="603.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="600" y="1108" width="3" height="15" fill="rgb(207,143,15)"/><text x="603.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="600" y="1124" width="3" height="15" fill="rgb(242,228,35)"/><text x="603.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="600" y="1140" width="3" height="15" fill="rgb(229,45,25)"/><text x="603.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.30%)</title><rect x="600" y="1156" width="3" height="15" fill="rgb(211,49,2)"/><text x="603.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.30%)</title><rect x="600" y="1172" width="3" height="15" fill="rgb(243,81,54)"/><text x="603.00" y="1182.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.30%)</title><rect x="600" y="1188" width="3" height="15" fill="rgb(225,107,52)"/><text x="603.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.30%)</title><rect x="600" y="1204" width="3" height="15" fill="rgb(218,88,33)"/><text x="603.00" y="1214.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.30%)</title><rect x="600" y="1220" width="3" height="15" fill="rgb(231,112,6)"/><text x="603.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.60%)</title><rect x="600" y="532" width="7" height="15" fill="rgb(240,43,40)"/><text x="603.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="600" y="548" width="7" height="15" fill="rgb(218,160,42)"/><text x="603.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="600" y="564" width="7" height="15" fill="rgb(207,120,48)"/><text x="603.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="600" y="580" width="7" height="15" fill="rgb(207,220,43)"/><text x="603.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="600" y="596" width="7" height="15" fill="rgb(210,218,44)"/><text x="603.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="600" y="612" width="7" height="15" fill="rgb(244,151,27)"/><text x="603.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.60%)</title><rect x="600" y="628" width="7" height="15" fill="rgb(229,149,9)"/><text x="603.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="600" y="644" width="7" height="15" fill="rgb(220,5,50)"/><text x="603.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="600" y="660" width="7" height="15" fill="rgb(245,196,1)"/><text x="603.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="600" y="676" width="7" height="15" fill="rgb(242,70,42)"/><text x="603.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="600" y="692" width="7" height="15" fill="rgb(213,21,13)"/><text x="603.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="600" y="708" width="7" height="15" fill="rgb(214,50,38)"/><text x="603.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.60%)</title><rect x="600" y="724" width="7" height="15" fill="rgb(216,49,48)"/><text x="603.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="600" y="740" width="7" height="15" fill="rgb(205,58,24)"/><text x="603.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.60%)</title><rect x="600" y="756" width="7" height="15" fill="rgb(238,69,6)"/><text x="603.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="600" y="772" width="7" height="15" fill="rgb(232,161,26)"/><text x="603.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="600" y="788" width="7" height="15" fill="rgb(224,48,17)"/><text x="603.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="600" y="804" width="7" height="15" fill="rgb(250,216,41)"/><text x="603.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="600" y="820" width="7" height="15" fill="rgb(225,15,41)"/><text x="603.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="600" y="836" width="7" height="15" fill="rgb(207,164,11)"/><text x="603.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="600" y="852" width="7" height="15" fill="rgb(253,75,42)"/><text x="603.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.60%)</title><rect x="600" y="868" width="7" height="15" fill="rgb(227,171,53)"/><text x="603.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="600" y="884" width="7" height="15" fill="rgb(239,93,38)"/><text x="603.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="600" y="900" width="7" height="15" fill="rgb(206,118,1)"/><text x="603.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="600" y="916" width="7" height="15" fill="rgb(220,181,25)"/><text x="603.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="600" y="932" width="7" height="15" fill="rgb(252,43,0)"/><text x="603.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="600" y="948" width="7" height="15" fill="rgb(244,199,49)"/><text x="603.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.30%)</title><rect x="603" y="964" width="4" height="15" fill="rgb(207,120,14)"/><text x="606.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="980" width="4" height="15" fill="rgb(216,67,40)"/><text x="606.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="996" width="4" height="15" fill="rgb(228,141,16)"/><text x="606.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1012" width="4" height="15" fill="rgb(232,70,11)"/><text x="606.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1028" width="4" height="15" fill="rgb(213,190,31)"/><text x="606.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1044" width="4" height="15" fill="rgb(215,176,33)"/><text x="606.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.30%)</title><rect x="603" y="1060" width="4" height="15" fill="rgb(214,86,49)"/><text x="606.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1076" width="4" height="15" fill="rgb(205,226,16)"/><text x="606.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1092" width="4" height="15" fill="rgb(219,137,15)"/><text x="606.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1108" width="4" height="15" fill="rgb(238,98,32)"/><text x="606.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1124" width="4" height="15" fill="rgb(205,76,34)"/><text x="606.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1140" width="4" height="15" fill="rgb(246,86,13)"/><text x="606.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.30%)</title><rect x="603" y="1156" width="4" height="15" fill="rgb(212,94,15)"/><text x="606.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1172" width="4" height="15" fill="rgb(209,61,2)"/><text x="606.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1188" width="4" height="15" fill="rgb(206,28,43)"/><text x="606.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1204" width="4" height="15" fill="rgb(253,14,20)"/><text x="606.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1220" width="4" height="15" fill="rgb(248,19,53)"/><text x="606.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1236" width="4" height="15" fill="rgb(209,106,23)"/><text x="606.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.30%)</title><rect x="603" y="1252" width="4" height="15" fill="rgb(209,163,23)"/><text x="606.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1268" width="4" height="15" fill="rgb(214,3,5)"/><text x="606.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1284" width="4" height="15" fill="rgb(251,60,8)"/><text x="606.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1300" width="4" height="15" fill="rgb(252,29,48)"/><text x="606.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1316" width="4" height="15" fill="rgb(251,49,46)"/><text x="606.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1332" width="4" height="15" fill="rgb(242,89,7)"/><text x="606.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:11) (1 samples, 0.30%)</title><rect x="603" y="1348" width="4" height="15" fill="rgb(219,211,16)"/><text x="606.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1364" width="4" height="15" fill="rgb(243,128,47)"/><text x="606.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1380" width="4" height="15" fill="rgb(232,30,25)"/><text x="606.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1396" width="4" height="15" fill="rgb(210,5,41)"/><text x="606.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1412" width="4" height="15" fill="rgb(240,134,11)"/><text x="606.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1428" width="4" height="15" fill="rgb(212,80,27)"/><text x="606.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py:11) (1 samples, 0.30%)</title><rect x="603" y="1444" width="4" height="15" fill="rgb(245,157,8)"/><text x="606.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1460" width="4" height="15" fill="rgb(236,173,39)"/><text x="606.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1476" width="4" height="15" fill="rgb(211,148,10)"/><text x="606.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1492" width="4" height="15" fill="rgb(208,87,46)"/><text x="606.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1508" width="4" height="15" fill="rgb(213,92,53)"/><text x="606.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1524" width="4" height="15" fill="rgb(235,16,0)"/><text x="606.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:23) (1 samples, 0.30%)</title><rect x="603" y="1540" width="4" height="15" fill="rgb(207,89,22)"/><text x="606.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1556" width="4" height="15" fill="rgb(248,8,1)"/><text x="606.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1572" width="4" height="15" fill="rgb(223,153,24)"/><text x="606.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1588" width="4" height="15" fill="rgb(246,100,50)"/><text x="606.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1604" width="4" height="15" fill="rgb(221,52,1)"/><text x="606.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1620" width="4" height="15" fill="rgb(246,20,37)"/><text x="606.00" y="1630.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_logistic.py:24) (1 samples, 0.30%)</title><rect x="603" y="1636" width="4" height="15" fill="rgb(217,194,39)"/><text x="606.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1652" width="4" height="15" fill="rgb(250,50,29)"/><text x="606.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="603" y="1668" width="4" height="15" fill="rgb(230,66,3)"/><text x="606.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1684" width="4" height="15" fill="rgb(254,115,36)"/><text x="606.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1700" width="4" height="15" fill="rgb(242,3,27)"/><text x="606.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1716" width="4" height="15" fill="rgb(228,194,34)"/><text x="606.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1732" width="4" height="15" fill="rgb(235,107,0)"/><text x="606.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1748" width="4" height="15" fill="rgb(222,173,2)"/><text x="606.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1764" width="4" height="15" fill="rgb(224,34,8)"/><text x="606.00" y="1774.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py:13) (1 samples, 0.30%)</title><rect x="603" y="1780" width="4" height="15" fill="rgb(243,51,24)"/><text x="606.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1796" width="4" height="15" fill="rgb(245,101,31)"/><text x="606.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1812" width="4" height="15" fill="rgb(226,134,34)"/><text x="606.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="603" y="1828" width="4" height="15" fill="rgb(214,217,41)"/><text x="606.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="603" y="1844" width="4" height="15" fill="rgb(225,78,46)"/><text x="606.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="603" y="1860" width="4" height="15" fill="rgb(209,228,37)"/><text x="606.00" y="1870.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py:4) (1 samples, 0.30%)</title><rect x="603" y="1876" width="4" height="15" fill="rgb(217,48,19)"/><text x="606.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="603" y="1892" width="4" height="15" fill="rgb(211,228,18)"/><text x="606.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="603" y="1908" width="4" height="15" fill="rgb(252,162,2)"/><text x="606.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="603" y="1924" width="4" height="15" fill="rgb(243,40,7)"/><text x="606.00" y="1934.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.30%)</title><rect x="603" y="1940" width="4" height="15" fill="rgb(216,187,20)"/><text x="606.00" y="1950.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:561) (1 samples, 0.30%)</title><rect x="603" y="1956" width="4" height="15" fill="rgb(208,150,39)"/><text x="606.00" y="1966.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:4) (13 samples, 3.92%)</title><rect x="564" y="52" width="46" height="15" fill="rgb(237,149,19)"/><text x="567.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 3.92%)</title><rect x="564" y="68" width="46" height="15" fill="rgb(229,30,8)"/><text x="567.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 3.92%)</title><rect x="564" y="84" width="46" height="15" fill="rgb(220,20,32)"/><text x="567.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 3.92%)</title><rect x="564" y="100" width="46" height="15" fill="rgb(215,228,45)"/><text x="567.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 3.92%)</title><rect x="564" y="116" width="46" height="15" fill="rgb(211,133,46)"/><text x="567.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 3.92%)</title><rect x="564" y="132" width="46" height="15" fill="rgb(209,98,40)"/><text x="567.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py:4) (4 samples, 1.20%)</title><rect x="596" y="148" width="14" height="15" fill="rgb(227,192,16)"/><text x="599.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="596" y="164" width="14" height="15" fill="rgb(206,78,52)"/><text x="599.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.20%)</title><rect x="596" y="180" width="14" height="15" fill="rgb(247,131,36)"/><text x="599.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="596" y="196" width="14" height="15" fill="rgb(250,106,38)"/><text x="599.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="596" y="212" width="14" height="15" fill="rgb(248,70,49)"/><text x="599.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="596" y="228" width="14" height="15" fill="rgb(249,65,1)"/><text x="599.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="596" y="244" width="14" height="15" fill="rgb(209,84,48)"/><text x="599.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="596" y="260" width="14" height="15" fill="rgb(233,51,26)"/><text x="599.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="596" y="276" width="14" height="15" fill="rgb(234,150,22)"/><text x="599.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.20%)</title><rect x="596" y="292" width="14" height="15" fill="rgb(205,155,36)"/><text x="599.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="596" y="308" width="14" height="15" fill="rgb(236,50,18)"/><text x="599.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.20%)</title><rect x="596" y="324" width="14" height="15" fill="rgb(248,1,54)"/><text x="599.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="596" y="340" width="14" height="15" fill="rgb(205,87,19)"/><text x="599.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="596" y="356" width="14" height="15" fill="rgb(210,211,48)"/><text x="599.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="596" y="372" width="14" height="15" fill="rgb(240,194,31)"/><text x="599.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="596" y="388" width="14" height="15" fill="rgb(214,140,33)"/><text x="599.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="596" y="404" width="14" height="15" fill="rgb(213,41,39)"/><text x="599.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="596" y="420" width="14" height="15" fill="rgb(209,214,50)"/><text x="599.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.20%)</title><rect x="596" y="436" width="14" height="15" fill="rgb(234,56,12)"/><text x="599.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.20%)</title><rect x="596" y="452" width="14" height="15" fill="rgb(230,42,53)"/><text x="599.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.20%)</title><rect x="596" y="468" width="14" height="15" fill="rgb(220,84,22)"/><text x="599.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.20%)</title><rect x="596" y="484" width="14" height="15" fill="rgb(228,126,32)"/><text x="599.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.20%)</title><rect x="596" y="500" width="14" height="15" fill="rgb(223,116,14)"/><text x="599.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.20%)</title><rect x="596" y="516" width="14" height="15" fill="rgb(220,193,30)"/><text x="599.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:22) (1 samples, 0.30%)</title><rect x="607" y="532" width="3" height="15" fill="rgb(252,14,17)"/><text x="610.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="607" y="548" width="3" height="15" fill="rgb(237,210,38)"/><text x="610.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="607" y="564" width="3" height="15" fill="rgb(219,153,42)"/><text x="610.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="607" y="580" width="3" height="15" fill="rgb(218,112,15)"/><text x="610.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="607" y="596" width="3" height="15" fill="rgb(250,29,3)"/><text x="610.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="607" y="612" width="3" height="15" fill="rgb(206,86,12)"/><text x="610.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="607" y="628" width="3" height="15" fill="rgb(241,45,17)"/><text x="610.00" y="638.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:167) (1 samples, 0.30%)</title><rect x="610" y="100" width="4" height="15" fill="rgb(214,27,29)"/><text x="613.00" y="110.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:28) (2 samples, 0.60%)</title><rect x="610" y="84" width="7" height="15" fill="rgb(226,211,9)"/><text x="613.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="614" y="100" width="3" height="15" fill="rgb(215,165,27)"/><text x="617.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.30%)</title><rect x="614" y="116" width="3" height="15" fill="rgb(205,189,51)"/><text x="617.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.30%)</title><rect x="614" y="132" width="3" height="15" fill="rgb(213,6,32)"/><text x="617.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.30%)</title><rect x="614" y="148" width="3" height="15" fill="rgb(207,105,42)"/><text x="617.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.30%)</title><rect x="614" y="164" width="3" height="15" fill="rgb(223,147,44)"/><text x="617.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.30%)</title><rect x="614" y="180" width="3" height="15" fill="rgb(246,9,7)"/><text x="617.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.30%)</title><rect x="614" y="196" width="3" height="15" fill="rgb(252,11,28)"/><text x="617.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="614" y="212" width="3" height="15" fill="rgb(228,100,14)"/><text x="617.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="614" y="228" width="3" height="15" fill="rgb(222,144,11)"/><text x="617.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="614" y="244" width="3" height="15" fill="rgb(244,182,22)"/><text x="617.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="614" y="260" width="3" height="15" fill="rgb(206,146,0)"/><text x="617.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="614" y="276" width="3" height="15" fill="rgb(244,100,20)"/><text x="617.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.30%)</title><rect x="614" y="292" width="3" height="15" fill="rgb(219,127,27)"/><text x="617.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="614" y="308" width="3" height="15" fill="rgb(216,92,16)"/><text x="617.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="614" y="324" width="3" height="15" fill="rgb(240,45,53)"/><text x="617.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="614" y="340" width="3" height="15" fill="rgb(252,134,51)"/><text x="617.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="614" y="356" width="3" height="15" fill="rgb(212,72,14)"/><text x="617.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="614" y="372" width="3" height="15" fill="rgb(234,11,37)"/><text x="617.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.30%)</title><rect x="614" y="388" width="3" height="15" fill="rgb(246,158,28)"/><text x="617.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.30%)</title><rect x="614" y="404" width="3" height="15" fill="rgb(219,200,51)"/><text x="617.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="614" y="420" width="3" height="15" fill="rgb(251,20,30)"/><text x="617.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="614" y="436" width="3" height="15" fill="rgb(211,58,32)"/><text x="617.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="614" y="452" width="3" height="15" fill="rgb(240,220,10)"/><text x="617.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:131) (1 samples, 0.30%)</title><rect x="614" y="468" width="3" height="15" fill="rgb(246,192,23)"/><text x="617.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.30%)</title><rect x="614" y="484" width="3" height="15" fill="rgb(247,171,19)"/><text x="617.00" y="494.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:22) (1 samples, 0.30%)</title><rect x="617" y="100" width="4" height="15" fill="rgb(245,162,15)"/><text x="620.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.30%)</title><rect x="621" y="116" width="3" height="15" fill="rgb(205,82,7)"/><text x="624.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.30%)</title><rect x="621" y="132" width="3" height="15" fill="rgb(237,188,38)"/><text x="624.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.30%)</title><rect x="621" y="148" width="3" height="15" fill="rgb(250,120,1)"/><text x="624.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.30%)</title><rect x="621" y="164" width="3" height="15" fill="rgb(247,150,24)"/><text x="624.00" y="174.50"></text></g><g><title>0x7f54c8af5b16 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="621" y="180" width="3" height="15" fill="rgb(209,4,12)"/><text x="624.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.30%)</title><rect x="624" y="116" width="4" height="15" fill="rgb(248,16,20)"/><text x="627.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.30%)</title><rect x="624" y="132" width="4" height="15" fill="rgb(232,225,0)"/><text x="627.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.20%)</title><rect x="646" y="180" width="14" height="15" fill="rgb(206,148,50)"/><text x="649.00" y="190.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.60%)</title><rect x="663" y="244" width="8" height="15" fill="rgb(211,148,37)"/><text x="666.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1246) (2 samples, 0.60%)</title><rect x="663" y="260" width="8" height="15" fill="rgb(207,218,11)"/><text x="666.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.30%)</title><rect x="671" y="276" width="3" height="15" fill="rgb(239,228,28)"/><text x="674.00" y="286.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src:330) (1 samples, 0.30%)</title><rect x="671" y="292" width="3" height="15" fill="rgb(217,224,19)"/><text x="674.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.20%)</title><rect x="663" y="212" width="15" height="15" fill="rgb(214,58,11)"/><text x="666.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 1.20%)</title><rect x="663" y="228" width="15" height="15" fill="rgb(228,157,45)"/><text x="666.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.60%)</title><rect x="671" y="244" width="7" height="15" fill="rgb(254,110,5)"/><text x="674.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.60%)</title><rect x="671" y="260" width="7" height="15" fill="rgb(206,90,33)"/><text x="674.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.30%)</title><rect x="674" y="276" width="4" height="15" fill="rgb(244,167,0)"/><text x="677.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:4061) (1 samples, 0.30%)</title><rect x="674" y="292" width="4" height="15" fill="rgb(251,134,9)"/><text x="677.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (6 samples, 1.81%)</title><rect x="660" y="196" width="21" height="15" fill="rgb(211,90,23)"/><text x="663.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.30%)</title><rect x="678" y="212" width="3" height="15" fill="rgb(251,121,11)"/><text x="681.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:106) (1 samples, 0.30%)</title><rect x="678" y="228" width="3" height="15" fill="rgb(253,41,1)"/><text x="681.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="692" y="260" width="3" height="15" fill="rgb(240,163,6)"/><text x="695.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="692" y="276" width="3" height="15" fill="rgb(242,147,6)"/><text x="695.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.30%)</title><rect x="692" y="292" width="3" height="15" fill="rgb(223,228,48)"/><text x="695.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.30%)</title><rect x="699" y="340" width="4" height="15" fill="rgb(242,132,0)"/><text x="702.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.30%)</title><rect x="699" y="356" width="4" height="15" fill="rgb(234,97,20)"/><text x="702.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:485) (1 samples, 0.30%)</title><rect x="699" y="372" width="4" height="15" fill="rgb(208,21,36)"/><text x="702.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.30%)</title><rect x="703" y="356" width="3" height="15" fill="rgb(217,11,31)"/><text x="706.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.30%)</title><rect x="703" y="372" width="3" height="15" fill="rgb(236,12,49)"/><text x="706.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.30%)</title><rect x="703" y="388" width="3" height="15" fill="rgb(248,214,15)"/><text x="706.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="703" y="404" width="3" height="15" fill="rgb(219,127,15)"/><text x="706.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.30%)</title><rect x="703" y="420" width="3" height="15" fill="rgb(232,66,42)"/><text x="706.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.30%)</title><rect x="703" y="436" width="3" height="15" fill="rgb(223,101,1)"/><text x="706.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.30%)</title><rect x="703" y="452" width="3" height="15" fill="rgb(231,131,52)"/><text x="706.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.30%)</title><rect x="703" y="468" width="3" height="15" fill="rgb(226,84,15)"/><text x="706.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="703" y="484" width="3" height="15" fill="rgb(246,111,43)"/><text x="706.00" y="494.50"></text></g><g><title>0x7f54c8af6d5e (libc-2.29.so) (1 samples, 0.30%)</title><rect x="703" y="500" width="3" height="15" fill="rgb(237,194,15)"/><text x="706.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.30%)</title><rect x="706" y="356" width="4" height="15" fill="rgb(250,204,37)"/><text x="709.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.30%)</title><rect x="706" y="372" width="4" height="15" fill="rgb(228,156,45)"/><text x="709.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.30%)</title><rect x="706" y="388" width="4" height="15" fill="rgb(246,169,9)"/><text x="709.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.30%)</title><rect x="706" y="404" width="4" height="15" fill="rgb(206,29,54)"/><text x="709.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.30%)</title><rect x="706" y="420" width="4" height="15" fill="rgb(218,197,34)"/><text x="709.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:745) (1 samples, 0.30%)</title><rect x="706" y="436" width="4" height="15" fill="rgb(206,216,43)"/><text x="709.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.30%)</title><rect x="710" y="372" width="3" height="15" fill="rgb(253,71,7)"/><text x="713.00" y="382.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.30%)</title><rect x="710" y="388" width="3" height="15" fill="rgb(216,8,46)"/><text x="713.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="713" y="372" width="4" height="15" fill="rgb(210,113,52)"/><text x="716.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.90%)</title><rect x="710" y="356" width="10" height="15" fill="rgb(239,144,17)"/><text x="713.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.30%)</title><rect x="717" y="372" width="3" height="15" fill="rgb(210,35,39)"/><text x="720.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.30%)</title><rect x="717" y="388" width="3" height="15" fill="rgb(226,210,28)"/><text x="720.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="717" y="404" width="3" height="15" fill="rgb(221,148,33)"/><text x="720.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.30%)</title><rect x="720" y="372" width="4" height="15" fill="rgb(213,166,0)"/><text x="723.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.30%)</title><rect x="724" y="372" width="3" height="15" fill="rgb(253,176,26)"/><text x="727.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.30%)</title><rect x="727" y="372" width="4" height="15" fill="rgb(244,180,48)"/><text x="730.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.30%)</title><rect x="731" y="372" width="4" height="15" fill="rgb(232,150,16)"/><text x="734.00" y="382.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.30%)</title><rect x="735" y="388" width="3" height="15" fill="rgb(219,3,35)"/><text x="738.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.30%)</title><rect x="738" y="388" width="4" height="15" fill="rgb(221,74,48)"/><text x="741.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.30%)</title><rect x="752" y="404" width="4" height="15" fill="rgb(218,21,9)"/><text x="755.00" y="414.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (4 samples, 1.20%)</title><rect x="756" y="404" width="14" height="15" fill="rgb(220,123,3)"/><text x="759.00" y="414.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (9 samples, 2.71%)</title><rect x="742" y="388" width="32" height="15" fill="rgb(215,124,41)"/><text x="745.00" y="398.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1721) (1 samples, 0.30%)</title><rect x="770" y="404" width="4" height="15" fill="rgb(241,128,27)"/><text x="773.00" y="414.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:194) (1 samples, 0.30%)</title><rect x="774" y="388" width="3" height="15" fill="rgb(249,181,16)"/><text x="777.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.30%)</title><rect x="777" y="388" width="4" height="15" fill="rgb(238,155,3)"/><text x="780.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.30%)</title><rect x="781" y="388" width="3" height="15" fill="rgb(217,20,10)"/><text x="784.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (1 samples, 0.30%)</title><rect x="784" y="388" width="4" height="15" fill="rgb(214,223,7)"/><text x="787.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (27 samples, 8.13%)</title><rect x="695" y="260" width="96" height="15" fill="rgb(240,127,47)"/><text x="698.00" y="270.50">array_sum (..</text></g><g><title>forward_ndarray_method (methods.c:108) (27 samples, 8.13%)</title><rect x="695" y="276" width="96" height="15" fill="rgb(245,29,29)"/><text x="698.00" y="286.50">forward_nda..</text></g><g><title>_sum (numpy/core/_methods.py:38) (26 samples, 7.83%)</title><rect x="699" y="292" width="92" height="15" fill="rgb(220,152,3)"/><text x="702.00" y="302.50">_sum (nump..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (26 samples, 7.83%)</title><rect x="699" y="308" width="92" height="15" fill="rgb(241,191,40)"/><text x="702.00" y="318.50">ufunc_redu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (26 samples, 7.83%)</title><rect x="699" y="324" width="92" height="15" fill="rgb(236,159,4)"/><text x="702.00" y="334.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (25 samples, 7.53%)</title><rect x="703" y="340" width="88" height="15" fill="rgb(221,171,38)"/><text x="706.00" y="350.50">PyUFunc_Re..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 6.02%)</title><rect x="720" y="356" width="71" height="15" fill="rgb(213,215,7)"/><text x="723.00" y="366.50">PyUFunc_..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (16 samples, 4.82%)</title><rect x="735" y="372" width="56" height="15" fill="rgb(219,24,27)"/><text x="738.00" y="382.50">reduc..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.30%)</title><rect x="788" y="388" width="3" height="15" fill="rgb(228,210,28)"/><text x="791.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="791" y="276" width="4" height="15" fill="rgb(235,11,18)"/><text x="794.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1119) (1 samples, 0.30%)</title><rect x="791" y="292" width="4" height="15" fill="rgb(224,39,41)"/><text x="794.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.30%)</title><rect x="795" y="308" width="4" height="15" fill="rgb(219,51,15)"/><text x="798.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.30%)</title><rect x="795" y="324" width="4" height="15" fill="rgb(237,146,32)"/><text x="798.00" y="334.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (33 samples, 9.94%)</title><rect x="685" y="244" width="117" height="15" fill="rgb(250,150,2)"/><text x="688.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.90%)</title><rect x="791" y="260" width="11" height="15" fill="rgb(232,86,47)"/><text x="794.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (2 samples, 0.60%)</title><rect x="795" y="276" width="7" height="15" fill="rgb(243,98,14)"/><text x="798.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (2 samples, 0.60%)</title><rect x="795" y="292" width="7" height="15" fill="rgb(237,166,1)"/><text x="798.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:806) (1 samples, 0.30%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(235,18,53)"/><text x="802.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.30%)</title><rect x="802" y="260" width="4" height="15" fill="rgb(238,86,41)"/><text x="805.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(207,92,43)"/><text x="805.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.30%)</title><rect x="802" y="292" width="4" height="15" fill="rgb(236,72,6)"/><text x="805.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4713) (1 samples, 0.30%)</title><rect x="806" y="260" width="3" height="15" fill="rgb(254,28,21)"/><text x="809.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="809" y="276" width="4" height="15" fill="rgb(234,140,41)"/><text x="812.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.30%)</title><rect x="809" y="292" width="4" height="15" fill="rgb(223,224,4)"/><text x="812.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.30%)</title><rect x="813" y="292" width="3" height="15" fill="rgb(211,114,5)"/><text x="816.00" y="302.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.30%)</title><rect x="813" y="308" width="3" height="15" fill="rgb(237,185,6)"/><text x="816.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="816" y="324" width="4" height="15" fill="rgb(208,89,36)"/><text x="819.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.30%)</title><rect x="816" y="340" width="4" height="15" fill="rgb(219,161,8)"/><text x="819.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.30%)</title><rect x="816" y="356" width="4" height="15" fill="rgb(228,219,53)"/><text x="819.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.60%)</title><rect x="816" y="308" width="7" height="15" fill="rgb(254,198,50)"/><text x="819.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.30%)</title><rect x="820" y="324" width="3" height="15" fill="rgb(226,122,17)"/><text x="823.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.30%)</title><rect x="820" y="340" width="3" height="15" fill="rgb(207,154,21)"/><text x="823.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.30%)</title><rect x="823" y="356" width="4" height="15" fill="rgb(215,168,44)"/><text x="826.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.60%)</title><rect x="827" y="356" width="7" height="15" fill="rgb(248,142,42)"/><text x="830.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (5 samples, 1.51%)</title><rect x="823" y="308" width="18" height="15" fill="rgb(230,13,18)"/><text x="826.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (5 samples, 1.51%)</title><rect x="823" y="324" width="18" height="15" fill="rgb(236,158,22)"/><text x="826.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (5 samples, 1.51%)</title><rect x="823" y="340" width="18" height="15" fill="rgb(228,52,38)"/><text x="826.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.60%)</title><rect x="834" y="356" width="7" height="15" fill="rgb(218,200,21)"/><text x="837.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.60%)</title><rect x="834" y="372" width="7" height="15" fill="rgb(217,118,13)"/><text x="837.00" y="382.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.30%)</title><rect x="841" y="356" width="4" height="15" fill="rgb(211,60,31)"/><text x="844.00" y="366.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.30%)</title><rect x="841" y="372" width="4" height="15" fill="rgb(213,20,21)"/><text x="844.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (47 samples, 14.16%)</title><rect x="685" y="212" width="167" height="15" fill="rgb(207,155,20)"/><text x="688.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (47 samples, 14.16%)</title><rect x="685" y="228" width="167" height="15" fill="rgb(214,8,31)"/><text x="688.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (14 samples, 4.22%)</title><rect x="802" y="244" width="50" height="15" fill="rgb(214,15,4)"/><text x="805.00" y="254.50">norm_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.61%)</title><rect x="809" y="260" width="43" height="15" fill="rgb(249,171,20)"/><text x="812.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 3.31%)</title><rect x="813" y="276" width="39" height="15" fill="rgb(226,2,17)"/><text x="816.00" y="286.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 3.01%)</title><rect x="816" y="292" width="36" height="15" fill="rgb(212,169,12)"/><text x="819.00" y="302.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (3 samples, 0.90%)</title><rect x="841" y="308" width="11" height="15" fill="rgb(241,14,38)"/><text x="844.00" y="318.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (3 samples, 0.90%)</title><rect x="841" y="324" width="11" height="15" fill="rgb(222,192,27)"/><text x="844.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (3 samples, 0.90%)</title><rect x="841" y="340" width="11" height="15" fill="rgb(250,159,10)"/><text x="844.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (2 samples, 0.60%)</title><rect x="845" y="356" width="7" height="15" fill="rgb(208,152,30)"/><text x="848.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.60%)</title><rect x="845" y="372" width="7" height="15" fill="rgb(234,42,44)"/><text x="848.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (49 samples, 14.76%)</title><rect x="681" y="196" width="174" height="15" fill="rgb(253,126,2)"/><text x="684.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:274) (1 samples, 0.30%)</title><rect x="852" y="212" width="3" height="15" fill="rgb(206,226,39)"/><text x="855.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (1 samples, 0.30%)</title><rect x="855" y="196" width="4" height="15" fill="rgb(238,66,25)"/><text x="858.00" y="206.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:367) (1 samples, 0.30%)</title><rect x="873" y="324" width="4" height="15" fill="rgb(205,40,17)"/><text x="876.00" y="334.50"></text></g><g><title>0x7f54c8b16103 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="873" y="340" width="4" height="15" fill="rgb(212,226,30)"/><text x="876.00" y="350.50"></text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.30%)</title><rect x="877" y="372" width="3" height="15" fill="rgb(227,7,6)"/><text x="880.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.51%)</title><rect x="873" y="276" width="18" height="15" fill="rgb(226,147,39)"/><text x="876.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.51%)</title><rect x="873" y="292" width="18" height="15" fill="rgb(217,62,51)"/><text x="876.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (5 samples, 1.51%)</title><rect x="873" y="308" width="18" height="15" fill="rgb(220,116,34)"/><text x="876.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (4 samples, 1.20%)</title><rect x="877" y="324" width="14" height="15" fill="rgb(253,164,52)"/><text x="880.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:36) (4 samples, 1.20%)</title><rect x="877" y="340" width="14" height="15" fill="rgb(238,214,46)"/><text x="880.00" y="350.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.20%)</title><rect x="877" y="356" width="14" height="15" fill="rgb(248,140,42)"/><text x="880.00" y="366.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.90%)</title><rect x="880" y="372" width="11" height="15" fill="rgb(208,52,30)"/><text x="883.00" y="382.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.60%)</title><rect x="884" y="388" width="7" height="15" fill="rgb(240,30,46)"/><text x="887.00" y="398.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.60%)</title><rect x="891" y="276" width="7" height="15" fill="rgb(244,47,21)"/><text x="894.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (17 samples, 5.12%)</title><rect x="863" y="228" width="60" height="15" fill="rgb(247,132,39)"/><text x="866.00" y="238.50">_run (..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (16 samples, 4.82%)</title><rect x="866" y="244" width="57" height="15" fill="rgb(219,19,43)"/><text x="869.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (14 samples, 4.22%)</title><rect x="873" y="260" width="50" height="15" fill="rgb(209,177,36)"/><text x="876.00" y="270.50">dot (..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 2.11%)</title><rect x="898" y="276" width="25" height="15" fill="rgb(236,44,34)"/><text x="901.00" y="286.50">d..</text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.30%)</title><rect x="934" y="244" width="3" height="15" fill="rgb(211,210,0)"/><text x="937.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.30%)</title><rect x="937" y="260" width="4" height="15" fill="rgb(235,149,12)"/><text x="940.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="941" y="260" width="3" height="15" fill="rgb(238,58,36)"/><text x="944.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="941" y="276" width="3" height="15" fill="rgb(231,129,3)"/><text x="944.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.30%)</title><rect x="944" y="276" width="4" height="15" fill="rgb(250,216,41)"/><text x="947.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.30%)</title><rect x="944" y="292" width="4" height="15" fill="rgb(235,186,34)"/><text x="947.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="948" y="292" width="3" height="15" fill="rgb(205,13,22)"/><text x="951.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.30%)</title><rect x="948" y="308" width="3" height="15" fill="rgb(224,96,31)"/><text x="951.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.30%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(220,162,13)"/><text x="951.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.30%)</title><rect x="951" y="308" width="4" height="15" fill="rgb(209,52,54)"/><text x="954.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.30%)</title><rect x="951" y="324" width="4" height="15" fill="rgb(245,117,14)"/><text x="954.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="951" y="340" width="4" height="15" fill="rgb(211,91,51)"/><text x="954.00" y="350.50"></text></g><g><title>0x7f54c8af6d8a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="951" y="356" width="4" height="15" fill="rgb(236,193,42)"/><text x="954.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (11 samples, 3.31%)</title><rect x="923" y="228" width="39" height="15" fill="rgb(221,85,27)"/><text x="926.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.11%)</title><rect x="937" y="244" width="25" height="15" fill="rgb(211,71,35)"/><text x="940.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.51%)</title><rect x="944" y="260" width="18" height="15" fill="rgb(248,208,7)"/><text x="947.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.20%)</title><rect x="948" y="276" width="14" height="15" fill="rgb(227,59,5)"/><text x="951.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.90%)</title><rect x="951" y="292" width="11" height="15" fill="rgb(227,197,17)"/><text x="954.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="955" y="308" width="7" height="15" fill="rgb(235,185,15)"/><text x="958.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.60%)</title><rect x="955" y="324" width="7" height="15" fill="rgb(221,49,49)"/><text x="958.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.60%)</title><rect x="955" y="340" width="7" height="15" fill="rgb(225,178,33)"/><text x="958.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:45) (1 samples, 0.30%)</title><rect x="962" y="228" width="4" height="15" fill="rgb(245,167,24)"/><text x="965.00" y="238.50"></text></g><g><title>0x7f54c8bd3130 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="962" y="244" width="4" height="15" fill="rgb(225,185,29)"/><text x="965.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="973" y="260" width="3" height="15" fill="rgb(254,12,43)"/><text x="976.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.30%)</title><rect x="973" y="276" width="3" height="15" fill="rgb(239,184,34)"/><text x="976.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.30%)</title><rect x="973" y="292" width="3" height="15" fill="rgb(248,4,23)"/><text x="976.00" y="302.50"></text></g><g><title>0x7f54aaefb9a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="976" y="308" width="4" height="15" fill="rgb(247,200,50)"/><text x="979.00" y="318.50"></text></g><g><title>0x7f54aaefb9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.20%)</title><rect x="980" y="308" width="14" height="15" fill="rgb(230,199,24)"/><text x="983.00" y="318.50"></text></g><g><title>0x7f54aaed9fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="994" y="340" width="4" height="15" fill="rgb(230,85,41)"/><text x="997.00" y="350.50"></text></g><g><title>0x7f54c8c411b0 (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1012" y="356" width="7" height="15" fill="rgb(213,0,36)"/><text x="1015.00" y="366.50"></text></g><g><title>0x7f54c8cc7ba0 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1019" y="356" width="3" height="15" fill="rgb(212,105,54)"/><text x="1022.00" y="366.50"></text></g><g><title>0x7f54c8cc7bb4 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(240,19,28)"/><text x="1025.00" y="366.50"></text></g><g><title>0x7f54c8cc7be7 (libm-2.29.so) (3 samples, 0.90%)</title><rect x="1026" y="356" width="11" height="15" fill="rgb(249,125,33)"/><text x="1029.00" y="366.50"></text></g><g><title>0x7f54c8cc7c07 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1037" y="356" width="3" height="15" fill="rgb(220,128,44)"/><text x="1040.00" y="366.50"></text></g><g><title>0x7f54c8cc7c18 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1040" y="356" width="4" height="15" fill="rgb(222,76,33)"/><text x="1043.00" y="366.50"></text></g><g><title>0x7f54c8cc7c2e (libm-2.29.so) (4 samples, 1.20%)</title><rect x="1044" y="356" width="14" height="15" fill="rgb(236,203,54)"/><text x="1047.00" y="366.50"></text></g><g><title>0x7f54c8cc7c3e (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1058" y="356" width="4" height="15" fill="rgb(215,168,51)"/><text x="1061.00" y="366.50"></text></g><g><title>0x7f54c8cc7c56 (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1062" y="356" width="3" height="15" fill="rgb(212,108,33)"/><text x="1065.00" y="366.50"></text></g><g><title>0x7f54c8cc7c6a (libm-2.29.so) (2 samples, 0.60%)</title><rect x="1065" y="356" width="7" height="15" fill="rgb(205,211,39)"/><text x="1068.00" y="366.50"></text></g><g><title>0x7f54aaf1c265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (23 samples, 6.93%)</title><rect x="994" y="324" width="82" height="15" fill="rgb(208,189,6)"/><text x="997.00" y="334.50">0x7f54aaf..</text></g><g><title>exp (libm-2.29.so) (22 samples, 6.63%)</title><rect x="998" y="340" width="78" height="15" fill="rgb(229,52,54)"/><text x="1001.00" y="350.50">exp (libm..</text></g><g><title>0x7f54c8cc7c7b (libm-2.29.so) (1 samples, 0.30%)</title><rect x="1072" y="356" width="4" height="15" fill="rgb(219,98,13)"/><text x="1075.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (45 samples, 13.55%)</title><rect x="966" y="228" width="160" height="15" fill="rgb(224,34,28)"/><text x="969.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (43 samples, 12.95%)</title><rect x="973" y="244" width="153" height="15" fill="rgb(253,121,45)"/><text x="976.00" y="254.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (42 samples, 12.65%)</title><rect x="976" y="260" width="150" height="15" fill="rgb(249,193,27)"/><text x="979.00" y="270.50">PyUFunc_GenericFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (42 samples, 12.65%)</title><rect x="976" y="276" width="150" height="15" fill="rgb(214,220,26)"/><text x="979.00" y="286.50">execute_legacy_ufun..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (42 samples, 12.65%)</title><rect x="976" y="292" width="150" height="15" fill="rgb(245,178,3)"/><text x="979.00" y="302.50">trivial_two_operand..</text></g><g><title>0x7f54aaefb9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (37 samples, 11.14%)</title><rect x="994" y="308" width="132" height="15" fill="rgb(214,213,0)"/><text x="997.00" y="318.50">0x7f54aaefb9dd (..</text></g><g><title>0x7f54aaf1c279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 4.22%)</title><rect x="1076" y="324" width="50" height="15" fill="rgb(225,74,29)"/><text x="1079.00" y="334.50">0x7f5..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.30%)</title><rect x="1126" y="228" width="3" height="15" fill="rgb(234,180,19)"/><text x="1129.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (2 samples, 0.60%)</title><rect x="1133" y="308" width="7" height="15" fill="rgb(231,153,19)"/><text x="1136.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.30%)</title><rect x="1136" y="324" width="4" height="15" fill="rgb(232,79,3)"/><text x="1139.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (80 samples, 24.10%)</title><rect x="859" y="196" width="284" height="15" fill="rgb(224,229,54)"/><text x="862.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:3..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (80 samples, 24.10%)</title><rect x="859" y="212" width="284" height="15" fill="rgb(253,181,5)"/><text x="862.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:2..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (4 samples, 1.20%)</title><rect x="1129" y="228" width="14" height="15" fill="rgb(235,127,22)"/><text x="1132.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (4 samples, 1.20%)</title><rect x="1129" y="244" width="14" height="15" fill="rgb(229,162,2)"/><text x="1132.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.90%)</title><rect x="1133" y="260" width="10" height="15" fill="rgb(214,149,2)"/><text x="1136.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (3 samples, 0.90%)</title><rect x="1133" y="276" width="10" height="15" fill="rgb(217,132,43)"/><text x="1136.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.90%)</title><rect x="1133" y="292" width="10" height="15" fill="rgb(237,125,54)"/><text x="1136.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.30%)</title><rect x="1140" y="308" width="3" height="15" fill="rgb(214,46,18)"/><text x="1143.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.30%)</title><rect x="1140" y="324" width="3" height="15" fill="rgb(231,138,21)"/><text x="1143.00" y="334.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src:3097) (1 samples, 0.30%)</title><rect x="1140" y="340" width="3" height="15" fill="rgb(232,175,49)"/><text x="1143.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (137 samples, 41.27%)</title><rect x="660" y="180" width="487" height="15" fill="rgb(232,40,35)"/><text x="663.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.30%)</title><rect x="1143" y="196" width="4" height="15" fill="rgb(246,28,9)"/><text x="1146.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.60%)</title><rect x="1147" y="180" width="7" height="15" fill="rgb(244,145,43)"/><text x="1150.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 1.20%)</title><rect x="1154" y="180" width="14" height="15" fill="rgb(232,127,5)"/><text x="1157.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.60%)</title><rect x="1168" y="180" width="7" height="15" fill="rgb(225,140,4)"/><text x="1171.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (156 samples, 46.99%)</title><rect x="628" y="132" width="554" height="15" fill="rgb(224,100,1)"/><text x="631.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (154 samples, 46.39%)</title><rect x="635" y="148" width="547" height="15" fill="rgb(243,185,5)"/><text x="638.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (154 samples, 46.39%)</title><rect x="635" y="164" width="547" height="15" fill="rgb(244,62,33)"/><text x="638.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.60%)</title><rect x="1175" y="180" width="7" height="15" fill="rgb(226,19,3)"/><text x="1178.00" y="190.50"></text></g><g><title>all (332 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(206,114,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:45) (163 samples, 49.10%)</title><rect x="610" y="52" width="580" height="15" fill="rgb(247,117,3)"/><text x="613.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:44) (163 samples, 49.10%)</title><rect x="610" y="68" width="580" height="15" fill="rgb(232,194,15)"/><text x="613.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:29) (161 samples, 48.49%)</title><rect x="617" y="84" width="573" height="15" fill="rgb(231,48,34)"/><text x="620.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_double_.py:23) (160 samples, 48.19%)</title><rect x="621" y="100" width="569" height="15" fill="rgb(248,29,51)"/><text x="624.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (158 samples, 47.59%)</title><rect x="628" y="116" width="562" height="15" fill="rgb(222,221,13)"/><text x="631.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.60%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(244,19,51)"/><text x="1185.00" y="142.50"></text></g><g><title>0x7f54c8bd3f72 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(213,216,4)"/><text x="1189.00" y="158.50"></text></g></g></svg>