<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1798" onload="init(evt)" viewBox="0 0 1200 1798" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1798" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1781.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1781.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(209,201,36)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(206,187,25)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(229,1,9)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(205,69,28)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.15%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(231,47,38)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(230,92,17)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(228,8,8)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(231,103,15)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(249,213,19)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(250,59,35)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(207,173,27)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(212,26,8)"/><text x="13.00" y="974.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(233,104,48)"/><text x="14.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(224,50,53)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(234,47,53)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(221,208,52)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(231,16,2)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(243,47,10)"/><text x="16.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(230,62,34)"/><text x="16.00" y="1022.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(218,137,37)"/><text x="18.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(252,157,10)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(242,90,3)"/><text x="18.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.15%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(247,13,17)"/><text x="20.00" y="974.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(240,110,0)"/><text x="20.00" y="990.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.15%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(238,116,2)"/><text x="20.00" y="1006.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(248,28,20)"/><text x="18.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (3 samples, 0.46%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(214,179,32)"/><text x="18.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.15%)</title><rect x="19" y="964" width="1" height="15" fill="rgb(231,112,46)"/><text x="22.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.15%)</title><rect x="19" y="980" width="1" height="15" fill="rgb(236,80,7)"/><text x="22.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (5 samples, 0.76%)</title><rect x="13" y="868" width="9" height="15" fill="rgb(253,57,42)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (5 samples, 0.76%)</title><rect x="13" y="884" width="9" height="15" fill="rgb(229,196,29)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 0.76%)</title><rect x="13" y="900" width="9" height="15" fill="rgb(212,206,40)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 0.76%)</title><rect x="13" y="916" width="9" height="15" fill="rgb(244,124,46)"/><text x="16.00" y="926.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(242,101,34)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(242,177,54)"/><text x="23.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(210,159,7)"/><text x="23.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(234,186,3)"/><text x="25.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(254,132,32)"/><text x="25.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (9 samples, 1.37%)</title><rect x="10" y="836" width="16" height="15" fill="rgb(227,83,40)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (9 samples, 1.37%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(245,20,47)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(248,172,3)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(247,177,9)"/><text x="25.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(237,137,28)"/><text x="25.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(232,178,49)"/><text x="25.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(240,211,22)"/><text x="25.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(222,54,28)"/><text x="25.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(243,115,44)"/><text x="27.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(248,28,24)"/><text x="27.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.15%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(222,95,34)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (10 samples, 1.53%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(216,29,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(245,51,11)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(206,208,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(248,225,35)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(208,29,16)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(234,17,19)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (10 samples, 1.53%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(219,130,13)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(224,153,52)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(248,164,20)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(239,115,49)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(242,170,2)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(238,190,45)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (10 samples, 1.53%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(210,18,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(241,14,32)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(230,51,11)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(245,129,14)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(212,98,25)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(206,25,23)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (10 samples, 1.53%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(228,165,22)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(206,144,27)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(217,5,17)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(254,52,30)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(242,92,45)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(239,179,18)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(241,31,44)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(251,129,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(218,57,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (10 samples, 1.53%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(218,90,41)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(244,135,43)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(249,30,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(216,36,51)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(244,61,29)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(217,190,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (10 samples, 1.53%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(237,71,34)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(230,36,42)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(225,33,1)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(221,216,38)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(236,154,41)"/><text x="29.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(206,221,30)"/><text x="29.00" y="910.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="28" y="1044" width="1" height="15" fill="rgb(230,208,46)"/><text x="31.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="28" y="1060" width="1" height="15" fill="rgb(213,58,25)"/><text x="31.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="28" y="1076" width="1" height="15" fill="rgb(222,12,42)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.15%)</title><rect x="28" y="1092" width="1" height="15" fill="rgb(251,68,24)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.83%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(208,135,47)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.83%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(251,53,15)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.83%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(233,65,7)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.83%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(232,16,13)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.83%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(242,58,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.83%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(232,143,49)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="292" width="3" height="15" fill="rgb(244,4,49)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="308" width="3" height="15" fill="rgb(249,135,23)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="324" width="3" height="15" fill="rgb(211,121,11)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="340" width="3" height="15" fill="rgb(248,212,12)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="356" width="3" height="15" fill="rgb(228,25,39)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="372" width="3" height="15" fill="rgb(230,150,39)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.31%)</title><rect x="28" y="388" width="3" height="15" fill="rgb(225,70,22)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="404" width="3" height="15" fill="rgb(251,77,8)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="420" width="3" height="15" fill="rgb(207,19,7)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="436" width="3" height="15" fill="rgb(244,115,34)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="452" width="3" height="15" fill="rgb(232,69,46)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="468" width="3" height="15" fill="rgb(254,113,30)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="484" width="3" height="15" fill="rgb(213,27,36)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(246,104,44)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(225,108,8)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(208,174,5)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(233,80,40)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(230,72,6)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.31%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(223,14,7)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(220,226,47)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(233,161,44)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(205,12,52)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(205,110,9)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(226,150,46)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(207,79,37)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(235,205,33)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(249,171,34)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(210,46,26)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(235,188,37)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(227,143,3)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.31%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(245,38,37)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(231,171,26)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(230,76,32)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(226,123,24)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(246,21,14)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(243,196,21)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(223,194,29)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(223,37,42)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.31%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(227,25,48)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(205,184,7)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(251,186,15)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(217,127,34)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(207,69,40)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(246,216,9)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(222,166,50)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(209,211,15)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (2 samples, 0.31%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(225,77,3)"/><text x="31.00" y="1038.50"></text></g><g><title>bernoulli_gen (scipy/stats/_discrete_distns.py) (1 samples, 0.15%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(217,180,40)"/><text x="32.00" y="1054.50"></text></g><g><title>_compile (tokenize.py) (2 samples, 0.31%)</title><rect x="31" y="1396" width="4" height="15" fill="rgb(253,205,1)"/><text x="34.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.31%)</title><rect x="31" y="1412" width="4" height="15" fill="rgb(253,68,11)"/><text x="34.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.31%)</title><rect x="31" y="1428" width="4" height="15" fill="rgb(239,58,51)"/><text x="34.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(213,77,54)"/><text x="36.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(253,99,11)"/><text x="36.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1476" width="2" height="15" fill="rgb(234,200,37)"/><text x="36.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(223,18,21)"/><text x="36.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(226,181,16)"/><text x="36.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(211,14,10)"/><text x="36.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1540" width="2" height="15" fill="rgb(221,110,0)"/><text x="36.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="33" y="1556" width="2" height="15" fill="rgb(237,218,20)"/><text x="36.00" y="1566.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.15%)</title><rect x="33" y="1572" width="2" height="15" fill="rgb(232,229,52)"/><text x="36.00" y="1582.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.15%)</title><rect x="35" y="1396" width="2" height="15" fill="rgb(212,10,28)"/><text x="38.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="35" y="1412" width="2" height="15" fill="rgb(253,66,21)"/><text x="38.00" y="1422.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.15%)</title><rect x="35" y="1428" width="2" height="15" fill="rgb(212,13,11)"/><text x="38.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="484" width="7" height="15" fill="rgb(249,58,52)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="500" width="7" height="15" fill="rgb(234,2,5)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="516" width="7" height="15" fill="rgb(242,75,2)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="532" width="7" height="15" fill="rgb(240,4,13)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="548" width="7" height="15" fill="rgb(235,65,23)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="564" width="7" height="15" fill="rgb(252,1,10)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.61%)</title><rect x="31" y="580" width="7" height="15" fill="rgb(248,18,37)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="596" width="7" height="15" fill="rgb(216,56,15)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="612" width="7" height="15" fill="rgb(241,214,9)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="628" width="7" height="15" fill="rgb(249,47,13)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="644" width="7" height="15" fill="rgb(213,159,3)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="660" width="7" height="15" fill="rgb(206,162,16)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.61%)</title><rect x="31" y="676" width="7" height="15" fill="rgb(246,62,0)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="692" width="7" height="15" fill="rgb(219,70,39)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="708" width="7" height="15" fill="rgb(223,187,25)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="724" width="7" height="15" fill="rgb(244,33,15)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="740" width="7" height="15" fill="rgb(206,133,27)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="756" width="7" height="15" fill="rgb(213,36,48)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.61%)</title><rect x="31" y="772" width="7" height="15" fill="rgb(249,35,34)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="788" width="7" height="15" fill="rgb(220,157,10)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="804" width="7" height="15" fill="rgb(234,141,52)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="820" width="7" height="15" fill="rgb(253,107,10)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="836" width="7" height="15" fill="rgb(236,44,12)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="852" width="7" height="15" fill="rgb(209,149,3)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.61%)</title><rect x="31" y="868" width="7" height="15" fill="rgb(253,214,17)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="884" width="7" height="15" fill="rgb(236,222,30)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="900" width="7" height="15" fill="rgb(215,24,41)"/><text x="34.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="916" width="7" height="15" fill="rgb(222,208,12)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="932" width="7" height="15" fill="rgb(225,133,53)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="948" width="7" height="15" fill="rgb(210,136,45)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="964" width="7" height="15" fill="rgb(213,144,45)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="980" width="7" height="15" fill="rgb(250,212,39)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="996" width="7" height="15" fill="rgb(214,150,28)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.61%)</title><rect x="31" y="1012" width="7" height="15" fill="rgb(247,2,21)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1028" width="7" height="15" fill="rgb(221,107,17)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1044" width="7" height="15" fill="rgb(219,19,1)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1060" width="7" height="15" fill="rgb(238,153,7)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="1076" width="7" height="15" fill="rgb(234,64,47)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1092" width="7" height="15" fill="rgb(253,153,7)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.61%)</title><rect x="31" y="1108" width="7" height="15" fill="rgb(224,110,22)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1124" width="7" height="15" fill="rgb(253,137,42)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1140" width="7" height="15" fill="rgb(216,42,30)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1156" width="7" height="15" fill="rgb(244,66,29)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="1172" width="7" height="15" fill="rgb(252,139,20)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1188" width="7" height="15" fill="rgb(236,169,41)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (4 samples, 0.61%)</title><rect x="31" y="1204" width="7" height="15" fill="rgb(213,13,2)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1220" width="7" height="15" fill="rgb(208,229,13)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1236" width="7" height="15" fill="rgb(254,151,43)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1252" width="7" height="15" fill="rgb(206,166,7)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="31" y="1268" width="7" height="15" fill="rgb(224,64,29)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="31" y="1284" width="7" height="15" fill="rgb(232,110,40)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (4 samples, 0.61%)</title><rect x="31" y="1300" width="7" height="15" fill="rgb(233,130,39)"/><text x="34.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (4 samples, 0.61%)</title><rect x="31" y="1316" width="7" height="15" fill="rgb(252,179,36)"/><text x="34.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (4 samples, 0.61%)</title><rect x="31" y="1332" width="7" height="15" fill="rgb(205,189,32)"/><text x="34.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (4 samples, 0.61%)</title><rect x="31" y="1348" width="7" height="15" fill="rgb(248,94,8)"/><text x="34.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (4 samples, 0.61%)</title><rect x="31" y="1364" width="7" height="15" fill="rgb(229,211,48)"/><text x="34.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (4 samples, 0.61%)</title><rect x="31" y="1380" width="7" height="15" fill="rgb(221,217,0)"/><text x="34.00" y="1390.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.15%)</title><rect x="37" y="1396" width="1" height="15" fill="rgb(220,10,36)"/><text x="40.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="724" width="2" height="15" fill="rgb(218,80,18)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="740" width="2" height="15" fill="rgb(231,21,18)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="756" width="2" height="15" fill="rgb(223,149,23)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="772" width="2" height="15" fill="rgb(236,199,10)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="788" width="2" height="15" fill="rgb(227,178,31)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="804" width="2" height="15" fill="rgb(252,212,19)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="820" width="2" height="15" fill="rgb(218,168,49)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="836" width="2" height="15" fill="rgb(217,27,47)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="852" width="2" height="15" fill="rgb(214,109,22)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="868" width="2" height="15" fill="rgb(236,139,31)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="884" width="2" height="15" fill="rgb(235,177,32)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="900" width="2" height="15" fill="rgb(219,153,27)"/><text x="41.00" y="910.50"></text></g><g><title>0x7fb1aba9e40e (?) (1 samples, 0.15%)</title><rect x="38" y="916" width="2" height="15" fill="rgb(233,0,29)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="932" width="2" height="15" fill="rgb(210,12,38)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="948" width="2" height="15" fill="rgb(215,50,52)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="964" width="2" height="15" fill="rgb(245,124,40)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="980" width="2" height="15" fill="rgb(205,47,52)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="996" width="2" height="15" fill="rgb(252,94,16)"/><text x="41.00" y="1006.50"></text></g><g><title>0x7fb1ab857cd2 (?) (1 samples, 0.15%)</title><rect x="38" y="1012" width="2" height="15" fill="rgb(223,201,39)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1028" width="2" height="15" fill="rgb(251,156,3)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1044" width="2" height="15" fill="rgb(225,168,50)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1060" width="2" height="15" fill="rgb(246,114,48)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1076" width="2" height="15" fill="rgb(224,136,8)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1092" width="2" height="15" fill="rgb(229,14,29)"/><text x="41.00" y="1102.50"></text></g><g><title>0x7fb1aaf4d0e5 (?) (1 samples, 0.15%)</title><rect x="38" y="1108" width="2" height="15" fill="rgb(245,77,6)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1124" width="2" height="15" fill="rgb(240,208,25)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1140" width="2" height="15" fill="rgb(247,115,7)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1156" width="2" height="15" fill="rgb(220,42,28)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1172" width="2" height="15" fill="rgb(254,126,0)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1188" width="2" height="15" fill="rgb(250,206,53)"/><text x="41.00" y="1198.50"></text></g><g><title>0x7fb1aacd1e68 (?) (1 samples, 0.15%)</title><rect x="38" y="1204" width="2" height="15" fill="rgb(249,131,21)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1220" width="2" height="15" fill="rgb(236,201,52)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1236" width="2" height="15" fill="rgb(245,5,48)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1252" width="2" height="15" fill="rgb(206,47,30)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1268" width="2" height="15" fill="rgb(217,165,49)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1284" width="2" height="15" fill="rgb(217,122,23)"/><text x="41.00" y="1294.50"></text></g><g><title>0x7fb1aaa622fb (?) (1 samples, 0.15%)</title><rect x="38" y="1300" width="2" height="15" fill="rgb(231,64,49)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1316" width="2" height="15" fill="rgb(219,115,9)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1332" width="2" height="15" fill="rgb(221,42,28)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1348" width="2" height="15" fill="rgb(215,174,42)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1364" width="2" height="15" fill="rgb(246,44,2)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1380" width="2" height="15" fill="rgb(240,22,32)"/><text x="41.00" y="1390.50"></text></g><g><title>0x7fb1aa84601d (?) (1 samples, 0.15%)</title><rect x="38" y="1396" width="2" height="15" fill="rgb(243,119,33)"/><text x="41.00" y="1406.50"></text></g><g><title>0x7fb1aa844c13 (?) (1 samples, 0.15%)</title><rect x="38" y="1412" width="2" height="15" fill="rgb(212,20,5)"/><text x="41.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1428" width="2" height="15" fill="rgb(235,118,1)"/><text x="41.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1444" width="2" height="15" fill="rgb(245,7,19)"/><text x="41.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1460" width="2" height="15" fill="rgb(239,116,54)"/><text x="41.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1476" width="2" height="15" fill="rgb(221,157,0)"/><text x="41.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1492" width="2" height="15" fill="rgb(211,16,49)"/><text x="41.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1508" width="2" height="15" fill="rgb(215,193,48)"/><text x="41.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1524" width="2" height="15" fill="rgb(210,91,14)"/><text x="41.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1540" width="2" height="15" fill="rgb(244,63,27)"/><text x="41.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/_config/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="1556" width="2" height="15" fill="rgb(241,35,29)"/><text x="41.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1572" width="2" height="15" fill="rgb(215,45,1)"/><text x="41.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1588" width="2" height="15" fill="rgb(218,191,35)"/><text x="41.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1604" width="2" height="15" fill="rgb(211,197,25)"/><text x="41.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1620" width="2" height="15" fill="rgb(237,126,28)"/><text x="41.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1636" width="2" height="15" fill="rgb(246,121,13)"/><text x="41.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="38" y="1652" width="2" height="15" fill="rgb(254,15,8)"/><text x="41.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="38" y="1668" width="2" height="15" fill="rgb(218,99,7)"/><text x="41.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_config/config.py) (1 samples, 0.15%)</title><rect x="38" y="1684" width="2" height="15" fill="rgb(227,95,54)"/><text x="41.00" y="1694.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="1700" width="2" height="15" fill="rgb(215,92,17)"/><text x="41.00" y="1710.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1604" width="2" height="15" fill="rgb(206,99,15)"/><text x="43.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1620" width="2" height="15" fill="rgb(239,97,25)"/><text x="43.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1636" width="2" height="15" fill="rgb(253,184,47)"/><text x="43.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1652" width="2" height="15" fill="rgb(248,185,30)"/><text x="43.00" y="1662.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="40" y="1668" width="2" height="15" fill="rgb(221,122,2)"/><text x="43.00" y="1678.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1684" width="2" height="15" fill="rgb(237,211,28)"/><text x="43.00" y="1694.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1700" width="2" height="15" fill="rgb(219,149,53)"/><text x="43.00" y="1710.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1716" width="2" height="15" fill="rgb(243,182,54)"/><text x="43.00" y="1726.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="40" y="1732" width="2" height="15" fill="rgb(223,67,9)"/><text x="43.00" y="1742.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="40" y="1748" width="2" height="15" fill="rgb(218,113,8)"/><text x="43.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="40" y="1572" width="4" height="15" fill="rgb(233,206,0)"/><text x="43.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py) (2 samples, 0.31%)</title><rect x="40" y="1588" width="4" height="15" fill="rgb(209,157,3)"/><text x="43.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="42" y="1604" width="2" height="15" fill="rgb(207,211,33)"/><text x="45.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="42" y="1620" width="2" height="15" fill="rgb(212,221,33)"/><text x="45.00" y="1630.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.15%)</title><rect x="42" y="1636" width="2" height="15" fill="rgb(213,178,3)"/><text x="45.00" y="1646.50"></text></g><g><title>search (re.py) (1 samples, 0.15%)</title><rect x="42" y="1652" width="2" height="15" fill="rgb(247,170,50)"/><text x="45.00" y="1662.50"></text></g><g><title>_compile (re.py) (1 samples, 0.15%)</title><rect x="42" y="1668" width="2" height="15" fill="rgb(207,89,49)"/><text x="45.00" y="1678.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="42" y="1684" width="2" height="15" fill="rgb(220,60,32)"/><text x="45.00" y="1694.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.15%)</title><rect x="42" y="1700" width="2" height="15" fill="rgb(235,16,15)"/><text x="45.00" y="1710.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="42" y="1716" width="2" height="15" fill="rgb(217,49,20)"/><text x="45.00" y="1726.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 1.22%)</title><rect x="31" y="340" width="15" height="15" fill="rgb(229,149,35)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="356" width="15" height="15" fill="rgb(225,26,39)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="372" width="15" height="15" fill="rgb(234,211,46)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="388" width="15" height="15" fill="rgb(215,207,34)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.22%)</title><rect x="31" y="404" width="15" height="15" fill="rgb(222,16,42)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="420" width="15" height="15" fill="rgb(217,200,51)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 1.22%)</title><rect x="31" y="436" width="15" height="15" fill="rgb(207,116,25)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="452" width="15" height="15" fill="rgb(213,39,15)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.22%)</title><rect x="31" y="468" width="15" height="15" fill="rgb(237,154,54)"/><text x="34.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="484" width="8" height="15" fill="rgb(232,14,15)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="38" y="500" width="8" height="15" fill="rgb(253,16,40)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="516" width="8" height="15" fill="rgb(213,225,24)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.61%)</title><rect x="38" y="532" width="8" height="15" fill="rgb(231,46,29)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="548" width="8" height="15" fill="rgb(235,117,4)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="564" width="8" height="15" fill="rgb(210,192,14)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="580" width="8" height="15" fill="rgb(227,65,19)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="38" y="596" width="8" height="15" fill="rgb(225,110,33)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="612" width="8" height="15" fill="rgb(246,47,40)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.61%)</title><rect x="38" y="628" width="8" height="15" fill="rgb(230,15,35)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="644" width="8" height="15" fill="rgb(222,44,51)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="660" width="8" height="15" fill="rgb(238,218,23)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="676" width="8" height="15" fill="rgb(209,54,7)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.61%)</title><rect x="38" y="692" width="8" height="15" fill="rgb(238,45,26)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.61%)</title><rect x="38" y="708" width="8" height="15" fill="rgb(205,14,25)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.46%)</title><rect x="40" y="724" width="6" height="15" fill="rgb(241,111,54)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="740" width="6" height="15" fill="rgb(248,63,54)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="756" width="6" height="15" fill="rgb(229,125,35)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="772" width="6" height="15" fill="rgb(213,18,44)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="788" width="6" height="15" fill="rgb(249,5,34)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="804" width="6" height="15" fill="rgb(233,174,3)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.46%)</title><rect x="40" y="820" width="6" height="15" fill="rgb(232,86,30)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="836" width="6" height="15" fill="rgb(239,36,1)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="852" width="6" height="15" fill="rgb(237,74,11)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="868" width="6" height="15" fill="rgb(217,162,41)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="884" width="6" height="15" fill="rgb(205,206,49)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="900" width="6" height="15" fill="rgb(250,136,19)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.46%)</title><rect x="40" y="916" width="6" height="15" fill="rgb(245,205,30)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="932" width="6" height="15" fill="rgb(216,173,11)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="948" width="6" height="15" fill="rgb(249,156,50)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="964" width="6" height="15" fill="rgb(254,74,33)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="980" width="6" height="15" fill="rgb(245,9,39)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="996" width="6" height="15" fill="rgb(221,29,45)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.46%)</title><rect x="40" y="1012" width="6" height="15" fill="rgb(237,186,14)"/><text x="43.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1028" width="6" height="15" fill="rgb(246,120,26)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1044" width="6" height="15" fill="rgb(242,178,47)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1060" width="6" height="15" fill="rgb(213,16,46)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1076" width="6" height="15" fill="rgb(240,66,5)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1092" width="6" height="15" fill="rgb(251,224,51)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.46%)</title><rect x="40" y="1108" width="6" height="15" fill="rgb(217,179,39)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1124" width="6" height="15" fill="rgb(238,35,46)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1140" width="6" height="15" fill="rgb(246,140,49)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1156" width="6" height="15" fill="rgb(206,184,18)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1172" width="6" height="15" fill="rgb(216,166,34)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1188" width="6" height="15" fill="rgb(234,107,10)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.46%)</title><rect x="40" y="1204" width="6" height="15" fill="rgb(248,162,3)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1220" width="6" height="15" fill="rgb(237,5,28)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1236" width="6" height="15" fill="rgb(222,82,24)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1252" width="6" height="15" fill="rgb(214,96,26)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1268" width="6" height="15" fill="rgb(244,131,21)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1284" width="6" height="15" fill="rgb(235,106,5)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.46%)</title><rect x="40" y="1300" width="6" height="15" fill="rgb(232,187,16)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1316" width="6" height="15" fill="rgb(248,147,15)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1332" width="6" height="15" fill="rgb(233,12,3)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1348" width="6" height="15" fill="rgb(207,60,28)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1364" width="6" height="15" fill="rgb(231,164,24)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1380" width="6" height="15" fill="rgb(240,218,49)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.46%)</title><rect x="40" y="1396" width="6" height="15" fill="rgb(232,113,23)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1412" width="6" height="15" fill="rgb(220,120,6)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1428" width="6" height="15" fill="rgb(241,119,34)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1444" width="6" height="15" fill="rgb(223,113,20)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1460" width="6" height="15" fill="rgb(246,146,51)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1476" width="6" height="15" fill="rgb(225,8,21)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.46%)</title><rect x="40" y="1492" width="6" height="15" fill="rgb(208,53,18)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1508" width="6" height="15" fill="rgb(228,93,17)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1524" width="6" height="15" fill="rgb(237,95,41)"/><text x="43.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.46%)</title><rect x="40" y="1540" width="6" height="15" fill="rgb(223,106,31)"/><text x="43.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.46%)</title><rect x="40" y="1556" width="6" height="15" fill="rgb(242,77,33)"/><text x="43.00" y="1566.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="1572" width="2" height="15" fill="rgb(241,209,7)"/><text x="47.00" y="1582.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="44" y="1588" width="2" height="15" fill="rgb(247,157,52)"/><text x="47.00" y="1598.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 1.37%)</title><rect x="31" y="244" width="16" height="15" fill="rgb(251,146,16)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.37%)</title><rect x="31" y="260" width="16" height="15" fill="rgb(214,64,8)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.37%)</title><rect x="31" y="276" width="16" height="15" fill="rgb(228,174,48)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.37%)</title><rect x="31" y="292" width="16" height="15" fill="rgb(228,144,52)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.37%)</title><rect x="31" y="308" width="16" height="15" fill="rgb(245,209,47)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.37%)</title><rect x="31" y="324" width="16" height="15" fill="rgb(232,81,45)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.15%)</title><rect x="46" y="340" width="1" height="15" fill="rgb(245,209,50)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="356" width="1" height="15" fill="rgb(208,127,22)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="372" width="1" height="15" fill="rgb(212,24,25)"/><text x="49.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="388" width="1" height="15" fill="rgb(231,17,20)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="404" width="1" height="15" fill="rgb(223,176,24)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="420" width="1" height="15" fill="rgb(210,78,1)"/><text x="49.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="436" width="1" height="15" fill="rgb(213,162,7)"/><text x="49.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="452" width="1" height="15" fill="rgb(210,109,37)"/><text x="49.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="468" width="1" height="15" fill="rgb(253,107,14)"/><text x="49.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.15%)</title><rect x="46" y="484" width="1" height="15" fill="rgb(222,103,38)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="500" width="1" height="15" fill="rgb(250,25,42)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="516" width="1" height="15" fill="rgb(224,101,50)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="532" width="1" height="15" fill="rgb(248,133,11)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="548" width="1" height="15" fill="rgb(210,64,30)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="564" width="1" height="15" fill="rgb(205,85,30)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="46" y="580" width="1" height="15" fill="rgb(247,223,29)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="596" width="1" height="15" fill="rgb(243,222,9)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="612" width="1" height="15" fill="rgb(253,169,39)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="628" width="1" height="15" fill="rgb(210,68,14)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="644" width="1" height="15" fill="rgb(240,140,45)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="660" width="1" height="15" fill="rgb(223,175,51)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.15%)</title><rect x="46" y="676" width="1" height="15" fill="rgb(235,61,6)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="692" width="1" height="15" fill="rgb(238,177,49)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="708" width="1" height="15" fill="rgb(251,146,44)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="724" width="1" height="15" fill="rgb(222,5,43)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="740" width="1" height="15" fill="rgb(216,199,27)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="756" width="1" height="15" fill="rgb(223,216,10)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.15%)</title><rect x="46" y="772" width="1" height="15" fill="rgb(224,39,33)"/><text x="49.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py) (1 samples, 0.15%)</title><rect x="46" y="788" width="1" height="15" fill="rgb(247,52,45)"/><text x="49.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py) (1 samples, 0.15%)</title><rect x="46" y="804" width="1" height="15" fill="rgb(228,169,9)"/><text x="49.00" y="814.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="820" width="1" height="15" fill="rgb(238,165,39)"/><text x="49.00" y="830.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="836" width="1" height="15" fill="rgb(228,156,17)"/><text x="49.00" y="846.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="852" width="1" height="15" fill="rgb(244,105,6)"/><text x="49.00" y="862.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="868" width="1" height="15" fill="rgb(220,123,6)"/><text x="49.00" y="878.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.15%)</title><rect x="46" y="884" width="1" height="15" fill="rgb(229,19,20)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="68" width="39" height="15" fill="rgb(247,207,53)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="84" width="39" height="15" fill="rgb(207,157,34)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="100" width="39" height="15" fill="rgb(227,135,16)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 3.36%)</title><rect x="10" y="116" width="39" height="15" fill="rgb(252,29,28)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="132" width="39" height="15" fill="rgb(207,21,5)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_m_cl.py) (22 samples, 3.36%)</title><rect x="10" y="148" width="39" height="15" fill="rgb(233,109,35)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="164" width="39" height="15" fill="rgb(210,164,22)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.36%)</title><rect x="10" y="180" width="39" height="15" fill="rgb(231,159,7)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="31" y="196" width="18" height="15" fill="rgb(249,179,6)"/><text x="34.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.53%)</title><rect x="31" y="212" width="18" height="15" fill="rgb(222,124,2)"/><text x="34.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.53%)</title><rect x="31" y="228" width="18" height="15" fill="rgb(238,193,13)"/><text x="34.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.15%)</title><rect x="47" y="244" width="2" height="15" fill="rgb(223,140,53)"/><text x="50.00" y="254.50"></text></g><g><title>_register_known_types (numpy/core/getlimits.py) (1 samples, 0.15%)</title><rect x="47" y="260" width="2" height="15" fill="rgb(219,53,51)"/><text x="50.00" y="270.50"></text></g><g><title>__init__ (numpy/core/getlimits.py) (1 samples, 0.15%)</title><rect x="47" y="276" width="2" height="15" fill="rgb(216,103,25)"/><text x="50.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (numpy/core/getlimits.py) (1 samples, 0.15%)</title><rect x="47" y="292" width="2" height="15" fill="rgb(241,152,36)"/><text x="50.00" y="302.50"></text></g><g><title>array_str (strfuncs.c) (1 samples, 0.15%)</title><rect x="47" y="308" width="2" height="15" fill="rgb(237,26,30)"/><text x="50.00" y="318.50"></text></g><g><title>_array_str_implementation (numpy/core/arrayprint.py) (1 samples, 0.15%)</title><rect x="47" y="324" width="2" height="15" fill="rgb(243,142,23)"/><text x="50.00" y="334.50"></text></g><g><title>wrapper (numpy/core/arrayprint.py) (1 samples, 0.15%)</title><rect x="47" y="340" width="2" height="15" fill="rgb(239,183,40)"/><text x="50.00" y="350.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.15%)</title><rect x="47" y="356" width="2" height="15" fill="rgb(209,171,26)"/><text x="50.00" y="366.50"></text></g><g><title>longdoubletype_str (scalartypes.c.src) (1 samples, 0.15%)</title><rect x="47" y="372" width="2" height="15" fill="rgb(237,26,32)"/><text x="50.00" y="382.50"></text></g><g><title>Dragon4_Scientific_LongDouble (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="388" width="2" height="15" fill="rgb(228,220,24)"/><text x="50.00" y="398.50"></text></g><g><title>Dragon4_Scientific_LongDouble_opt (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="404" width="2" height="15" fill="rgb(251,51,18)"/><text x="50.00" y="414.50"></text></g><g><title>Format_floatbits (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="420" width="2" height="15" fill="rgb(253,7,54)"/><text x="50.00" y="430.50"></text></g><g><title>FormatScientific (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="436" width="2" height="15" fill="rgb(220,144,20)"/><text x="50.00" y="446.50"></text></g><g><title>Dragon4 (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="452" width="2" height="15" fill="rgb(230,180,3)"/><text x="50.00" y="462.50"></text></g><g><title>BigInt_Multiply10 (dragon4.c) (1 samples, 0.15%)</title><rect x="47" y="468" width="2" height="15" fill="rgb(251,129,26)"/><text x="50.00" y="478.50"></text></g><g><title>0x7fb1d31f4bc6 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="91" y="132" width="3" height="15" fill="rgb(219,218,29)"/><text x="94.00" y="142.50"></text></g><g><title>0x7fb1d31f4bcc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="94" y="132" width="2" height="15" fill="rgb(212,194,33)"/><text x="97.00" y="142.50"></text></g><g><title>0x7fb1d31f4bdb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="96" y="132" width="2" height="15" fill="rgb(239,60,6)"/><text x="99.00" y="142.50"></text></g><g><title>0x7fb1d31f4bfd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="98" y="132" width="2" height="15" fill="rgb(233,22,10)"/><text x="101.00" y="142.50"></text></g><g><title>0x7fb1d31f4c1c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="100" y="132" width="1" height="15" fill="rgb(232,97,32)"/><text x="103.00" y="142.50"></text></g><g><title>0x7fb1d31f4c36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="101" y="132" width="2" height="15" fill="rgb(237,223,14)"/><text x="104.00" y="142.50"></text></g><g><title>0x7fb1d31f4c41 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="103" y="132" width="2" height="15" fill="rgb(237,60,36)"/><text x="106.00" y="142.50"></text></g><g><title>0x7fb1d31f4c45 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="105" y="132" width="2" height="15" fill="rgb(210,184,51)"/><text x="108.00" y="142.50"></text></g><g><title>0x7fb1d31f4c4d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="107" y="132" width="2" height="15" fill="rgb(215,122,18)"/><text x="110.00" y="142.50"></text></g><g><title>0x7fb1d31f5eb0 (libc-2.29.so) (12 samples, 1.83%)</title><rect x="91" y="116" width="21" height="15" fill="rgb(216,12,46)"/><text x="94.00" y="126.50"></text></g><g><title>0x7fb1d31f4c73 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="109" y="132" width="3" height="15" fill="rgb(237,209,11)"/><text x="112.00" y="142.50"></text></g><g><title>0x7fb1d31f4b0a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="110" y="148" width="2" height="15" fill="rgb(227,97,24)"/><text x="113.00" y="158.50"></text></g><g><title>0x7fb193238ff9 (?) (1 samples, 0.15%)</title><rect x="121" y="212" width="2" height="15" fill="rgb(238,149,22)"/><text x="124.00" y="222.50"></text></g><g><title>0x7fb193233ef6 (?) (1 samples, 0.15%)</title><rect x="121" y="228" width="2" height="15" fill="rgb(207,99,32)"/><text x="124.00" y="238.50"></text></g><g><title>0x7fb193228c99 (?) (1 samples, 0.15%)</title><rect x="121" y="244" width="2" height="15" fill="rgb(220,194,32)"/><text x="124.00" y="254.50"></text></g><g><title>0x7fb193246d21 (?) (1 samples, 0.15%)</title><rect x="121" y="260" width="2" height="15" fill="rgb(232,52,30)"/><text x="124.00" y="270.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="127" y="340" width="3" height="15" fill="rgb(214,222,54)"/><text x="130.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="127" y="356" width="3" height="15" fill="rgb(206,13,17)"/><text x="130.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="127" y="372" width="3" height="15" fill="rgb(216,140,3)"/><text x="130.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="128" y="388" width="2" height="15" fill="rgb(210,84,9)"/><text x="131.00" y="398.50"></text></g><g><title>onnxruntime::ArgMax&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="130" y="340" width="6" height="15" fill="rgb(254,113,52)"/><text x="133.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="132" y="356" width="4" height="15" fill="rgb(244,106,13)"/><text x="135.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="132" y="372" width="4" height="15" fill="rgb(207,18,34)"/><text x="135.00" y="382.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="136" y="340" width="5" height="15" fill="rgb(233,175,47)"/><text x="139.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="139" y="356" width="2" height="15" fill="rgb(228,47,24)"/><text x="142.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="139" y="372" width="2" height="15" fill="rgb(254,78,44)"/><text x="142.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="139" y="388" width="2" height="15" fill="rgb(218,221,5)"/><text x="142.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="139" y="404" width="2" height="15" fill="rgb(219,99,46)"/><text x="142.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="141" y="340" width="2" height="15" fill="rgb(229,14,20)"/><text x="144.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="340" width="2" height="15" fill="rgb(237,166,54)"/><text x="146.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="356" width="2" height="15" fill="rgb(216,218,40)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="372" width="2" height="15" fill="rgb(226,16,44)"/><text x="146.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="388" width="2" height="15" fill="rgb(211,2,15)"/><text x="146.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="404" width="2" height="15" fill="rgb(214,130,42)"/><text x="146.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="420" width="2" height="15" fill="rgb(208,145,54)"/><text x="146.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="436" width="2" height="15" fill="rgb(219,179,31)"/><text x="146.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="452" width="2" height="15" fill="rgb(212,174,42)"/><text x="146.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="468" width="2" height="15" fill="rgb(222,119,30)"/><text x="146.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="143" y="484" width="2" height="15" fill="rgb(215,179,23)"/><text x="146.00" y="494.50"></text></g><g><title>onnxruntime::Exp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.76%)</title><rect x="145" y="340" width="9" height="15" fill="rgb(207,163,5)"/><text x="148.00" y="350.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="154" y="340" width="1" height="15" fill="rgb(254,143,36)"/><text x="157.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="154" y="356" width="1" height="15" fill="rgb(208,134,18)"/><text x="157.00" y="366.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="155" y="340" width="8" height="15" fill="rgb(215,216,14)"/><text x="158.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="155" y="356" width="8" height="15" fill="rgb(222,157,50)"/><text x="158.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.61%)</title><rect x="155" y="372" width="8" height="15" fill="rgb(216,134,50)"/><text x="158.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.61%)</title><rect x="155" y="388" width="8" height="15" fill="rgb(226,66,26)"/><text x="158.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.61%)</title><rect x="155" y="404" width="8" height="15" fill="rgb(228,125,9)"/><text x="158.00" y="414.50"></text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.61%)</title><rect x="155" y="420" width="8" height="15" fill="rgb(246,214,52)"/><text x="158.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (4 samples, 0.61%)</title><rect x="155" y="436" width="8" height="15" fill="rgb(215,179,11)"/><text x="158.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.46%)</title><rect x="157" y="452" width="6" height="15" fill="rgb(223,136,40)"/><text x="160.00" y="462.50"></text></g><g><title>mkl_blas_avx_sgemm_nocopy_anbn_b0 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.46%)</title><rect x="157" y="468" width="6" height="15" fill="rgb(235,229,16)"/><text x="160.00" y="478.50"></text></g><g><title>0x7fb1d3374e12 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="168" y="356" width="2" height="15" fill="rgb(253,219,12)"/><text x="171.00" y="366.50"></text></g><g><title>0x7fb1d3374e1c (libm-2.29.so) (1 samples, 0.15%)</title><rect x="170" y="356" width="2" height="15" fill="rgb(217,17,34)"/><text x="173.00" y="366.50"></text></g><g><title>0x7fb1d3374e62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="172" y="356" width="1" height="15" fill="rgb(254,190,7)"/><text x="175.00" y="366.50"></text></g><g><title>0x7fb1d3374ea6 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="173" y="356" width="2" height="15" fill="rgb(207,27,25)"/><text x="176.00" y="366.50"></text></g><g><title>0x7fb1d33779b9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="175" y="356" width="2" height="15" fill="rgb(250,131,37)"/><text x="178.00" y="366.50"></text></g><g><title>0x7fb1d33779bd (libm-2.29.so) (1 samples, 0.15%)</title><rect x="177" y="356" width="2" height="15" fill="rgb(208,34,21)"/><text x="180.00" y="366.50"></text></g><g><title>0x7fb1d33779c8 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="179" y="356" width="2" height="15" fill="rgb(219,109,17)"/><text x="182.00" y="366.50"></text></g><g><title>0x7fb1d33779e0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="181" y="356" width="1" height="15" fill="rgb(206,78,18)"/><text x="184.00" y="366.50"></text></g><g><title>0x7fb1d33779f0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="182" y="356" width="2" height="15" fill="rgb(211,160,25)"/><text x="185.00" y="366.50"></text></g><g><title>0x7fb1d3377a04 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="184" y="356" width="2" height="15" fill="rgb(234,39,40)"/><text x="187.00" y="366.50"></text></g><g><title>0x7fb1d3377a1d (libm-2.29.so) (2 samples, 0.31%)</title><rect x="186" y="356" width="4" height="15" fill="rgb(246,217,24)"/><text x="189.00" y="366.50"></text></g><g><title>onnxruntime::ReduceLogSumExp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.60%)</title><rect x="163" y="340" width="30" height="15" fill="rgb(252,219,19)"/><text x="166.00" y="350.50">on..</text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="190" y="356" width="3" height="15" fill="rgb(226,210,17)"/><text x="193.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="191" y="372" width="2" height="15" fill="rgb(236,153,51)"/><text x="194.00" y="382.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="193" y="340" width="7" height="15" fill="rgb(248,198,12)"/><text x="196.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="193" y="356" width="7" height="15" fill="rgb(244,92,14)"/><text x="196.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.61%)</title><rect x="193" y="372" width="7" height="15" fill="rgb(220,12,12)"/><text x="196.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="199" y="388" width="1" height="15" fill="rgb(244,168,46)"/><text x="202.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.21%)</title><rect x="200" y="340" width="38" height="15" fill="rgb(210,207,19)"/><text x="203.00" y="350.50">onn..</text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.21%)</title><rect x="200" y="356" width="38" height="15" fill="rgb(233,126,18)"/><text x="203.00" y="366.50">onn..</text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mean_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.818] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.21%)</title><rect x="200" y="372" width="38" height="15" fill="rgb(207,41,19)"/><text x="203.00" y="382.50">onn..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.92%)</title><rect x="227" y="388" width="11" height="15" fill="rgb(224,66,40)"/><text x="230.00" y="398.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="238" y="340" width="2" height="15" fill="rgb(232,216,4)"/><text x="241.00" y="350.50"></text></g><g><title>0x7fb1d31f6b39 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="309" y="388" width="1" height="15" fill="rgb(229,46,30)"/><text x="312.00" y="398.50"></text></g><g><title>0x7fb1d31f6b61 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="310" y="388" width="4" height="15" fill="rgb(253,137,40)"/><text x="313.00" y="398.50"></text></g><g><title>0x7fb1d31f6d36 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="314" y="388" width="4" height="15" fill="rgb(227,111,2)"/><text x="317.00" y="398.50"></text></g><g><title>0x7fb1d31f6d54 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="318" y="388" width="1" height="15" fill="rgb(220,77,24)"/><text x="321.00" y="398.50"></text></g><g><title>0x7fb1d31f6d67 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="319" y="388" width="2" height="15" fill="rgb(253,159,9)"/><text x="322.00" y="398.50"></text></g><g><title>0x7fb1d31f6d8d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="321" y="388" width="2" height="15" fill="rgb(231,136,38)"/><text x="324.00" y="398.50"></text></g><g><title>0x7fb1d31f6db4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="323" y="388" width="2" height="15" fill="rgb(221,222,31)"/><text x="326.00" y="398.50"></text></g><g><title>0x7fb1d31f6dd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="325" y="388" width="2" height="15" fill="rgb(206,60,34)"/><text x="328.00" y="398.50"></text></g><g><title>0x7fb1d31f6f2a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="327" y="388" width="1" height="15" fill="rgb(237,84,19)"/><text x="330.00" y="398.50"></text></g><g><title>0x7fb1d31f7040 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="328" y="388" width="2" height="15" fill="rgb(237,102,25)"/><text x="331.00" y="398.50"></text></g><g><title>0x7fb1d31f7050 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="330" y="388" width="2" height="15" fill="rgb(233,160,7)"/><text x="333.00" y="398.50"></text></g><g><title>0x7fb1d31f7064 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="332" y="388" width="2" height="15" fill="rgb(248,191,8)"/><text x="335.00" y="398.50"></text></g><g><title>0x7fb1d31f708c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="334" y="388" width="2" height="15" fill="rgb(244,226,37)"/><text x="337.00" y="398.50"></text></g><g><title>0x7fb1d31f7384 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="336" y="388" width="3" height="15" fill="rgb(231,103,29)"/><text x="339.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (47 samples, 7.18%)</title><rect x="256" y="356" width="85" height="15" fill="rgb(232,162,32)"/><text x="259.00" y="366.50">operator n..</text></g><g><title>malloc (libc-2.29.so) (45 samples, 6.87%)</title><rect x="260" y="372" width="81" height="15" fill="rgb(243,6,24)"/><text x="263.00" y="382.50">malloc (l..</text></g><g><title>0x7fb1d31f7395 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="339" y="388" width="2" height="15" fill="rgb(250,146,25)"/><text x="342.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.22%)</title><rect x="341" y="356" width="14" height="15" fill="rgb(220,210,26)"/><text x="344.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.46%)</title><rect x="350" y="372" width="5" height="15" fill="rgb(211,128,28)"/><text x="353.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 20.00%)</title><rect x="125" y="260" width="236" height="15" fill="rgb(243,118,6)"/><text x="128.00" y="270.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 20.00%)</title><rect x="125" y="276" width="236" height="15" fill="rgb(238,89,50)"/><text x="128.00" y="286.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 20.00%)</title><rect x="125" y="292" width="236" height="15" fill="rgb(215,199,6)"/><text x="128.00" y="302.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 20.00%)</title><rect x="125" y="308" width="236" height="15" fill="rgb(226,56,17)"/><text x="128.00" y="318.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (130 samples, 19.85%)</title><rect x="127" y="324" width="234" height="15" fill="rgb(227,190,9)"/><text x="130.00" y="334.50">onnxruntime::SequentialExecutor..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (67 samples, 10.23%)</title><rect x="240" y="340" width="121" height="15" fill="rgb(223,40,13)"/><text x="243.00" y="350.50">onnxruntime::ml..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.46%)</title><rect x="355" y="356" width="6" height="15" fill="rgb(244,63,50)"/><text x="358.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="361" y="260" width="3" height="15" fill="rgb(220,224,45)"/><text x="364.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="363" y="276" width="1" height="15" fill="rgb(226,72,19)"/><text x="366.00" y="286.50"></text></g><g><title>0x7fb193200570 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="422" y="276" width="2" height="15" fill="rgb(239,188,22)"/><text x="425.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.60%)</title><rect x="424" y="276" width="30" height="15" fill="rgb(219,56,48)"/><text x="427.00" y="286.50">py..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (51 samples, 7.79%)</title><rect x="364" y="260" width="92" height="15" fill="rgb(225,145,6)"/><text x="367.00" y="270.50">pybind11::..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(210,175,48)"/><text x="457.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="456" y="260" width="2" height="15" fill="rgb(238,229,48)"/><text x="459.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="456" y="276" width="2" height="15" fill="rgb(209,115,25)"/><text x="459.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="458" y="276" width="2" height="15" fill="rgb(215,35,50)"/><text x="461.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="458" y="292" width="2" height="15" fill="rgb(238,69,28)"/><text x="461.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="458" y="308" width="2" height="15" fill="rgb(211,18,13)"/><text x="461.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="458" y="324" width="2" height="15" fill="rgb(211,169,36)"/><text x="461.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="458" y="340" width="2" height="15" fill="rgb(233,76,9)"/><text x="461.00" y="350.50"></text></g><g><title>0x7fb1d31f592c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="463" y="292" width="2" height="15" fill="rgb(213,162,50)"/><text x="466.00" y="302.50"></text></g><g><title>0x7fb1d31f5945 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="465" y="292" width="2" height="15" fill="rgb(232,116,31)"/><text x="468.00" y="302.50"></text></g><g><title>0x7fb1d31f5961 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="467" y="292" width="2" height="15" fill="rgb(230,66,23)"/><text x="470.00" y="302.50"></text></g><g><title>0x7fb1d31f599b (libc-2.29.so) (1 samples, 0.15%)</title><rect x="469" y="292" width="2" height="15" fill="rgb(214,21,31)"/><text x="472.00" y="302.50"></text></g><g><title>0x7fb1d31f59b3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="471" y="292" width="1" height="15" fill="rgb(221,187,39)"/><text x="474.00" y="302.50"></text></g><g><title>0x7fb1d31f59d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="472" y="292" width="2" height="15" fill="rgb(217,32,44)"/><text x="475.00" y="302.50"></text></g><g><title>0x7fb1d31f59ff (libc-2.29.so) (1 samples, 0.15%)</title><rect x="474" y="292" width="2" height="15" fill="rgb(254,157,49)"/><text x="477.00" y="302.50"></text></g><g><title>0x7fb1d31f5d02 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="476" y="292" width="2" height="15" fill="rgb(254,11,45)"/><text x="479.00" y="302.50"></text></g><g><title>0x7fb1d31f5d07 (libc-2.29.so) (4 samples, 0.61%)</title><rect x="478" y="292" width="7" height="15" fill="rgb(205,189,23)"/><text x="481.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.31%)</title><rect x="485" y="292" width="4" height="15" fill="rgb(229,139,12)"/><text x="488.00" y="302.50"></text></g><g><title>0x7fb1932000f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="489" y="308" width="2" height="15" fill="rgb(234,228,23)"/><text x="492.00" y="318.50"></text></g><g><title>0x7fb1d31f59d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="491" y="308" width="1" height="15" fill="rgb(232,213,52)"/><text x="494.00" y="318.50"></text></g><g><title>0x7fb1d31f5a33 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="492" y="308" width="2" height="15" fill="rgb(209,107,2)"/><text x="495.00" y="318.50"></text></g><g><title>0x7fb1d31f5d07 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="494" y="308" width="4" height="15" fill="rgb(205,99,41)"/><text x="497.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="498" y="308" width="2" height="15" fill="rgb(217,130,4)"/><text x="501.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (210 samples, 32.06%)</title><rect x="123" y="244" width="378" height="15" fill="rgb(238,99,16)"/><text x="126.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 3.66%)</title><rect x="458" y="260" width="43" height="15" fill="rgb(222,145,27)"/><text x="461.00" y="270.50">std:..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 3.51%)</title><rect x="460" y="276" width="41" height="15" fill="rgb(244,182,38)"/><text x="463.00" y="286.50">onn..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.07%)</title><rect x="489" y="292" width="12" height="15" fill="rgb(225,92,50)"/><text x="492.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="500" y="308" width="1" height="15" fill="rgb(236,158,12)"/><text x="503.00" y="318.50"></text></g><g><title>run (onnxruntime/capi/session.py) (213 samples, 32.52%)</title><rect x="119" y="196" width="384" height="15" fill="rgb(252,193,46)"/><text x="122.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 32.21%)</title><rect x="123" y="212" width="380" height="15" fill="rgb(240,141,3)"/><text x="126.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (211 samples, 32.21%)</title><rect x="123" y="228" width="380" height="15" fill="rgb(239,209,43)"/><text x="126.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="501" y="244" width="2" height="15" fill="rgb(217,207,28)"/><text x="504.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="501" y="260" width="2" height="15" fill="rgb(233,197,5)"/><text x="504.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="501" y="276" width="2" height="15" fill="rgb(215,27,49)"/><text x="504.00" y="286.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (253 samples, 38.63%)</title><rect x="49" y="68" width="456" height="15" fill="rgb(234,77,40)"/><text x="52.00" y="78.50">profile_ort (bench_BernoulliNB_default_m_cl_1000_4_12_float_.p..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (253 samples, 38.63%)</title><rect x="49" y="84" width="456" height="15" fill="rgb(221,183,49)"/><text x="52.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (253 samples, 38.63%)</title><rect x="49" y="100" width="456" height="15" fill="rgb(245,143,30)"/><text x="52.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 33.28%)</title><rect x="112" y="116" width="393" height="15" fill="rgb(214,50,1)"/><text x="115.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (218 samples, 33.28%)</title><rect x="112" y="132" width="393" height="15" fill="rgb(207,151,35)"/><text x="115.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (218 samples, 33.28%)</title><rect x="112" y="148" width="393" height="15" fill="rgb(221,124,20)"/><text x="115.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (217 samples, 33.13%)</title><rect x="114" y="164" width="391" height="15" fill="rgb(214,68,50)"/><text x="117.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (214 samples, 32.67%)</title><rect x="119" y="180" width="386" height="15" fill="rgb(237,204,47)"/><text x="122.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="503" y="196" width="2" height="15" fill="rgb(212,117,13)"/><text x="506.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.31%)</title><rect x="591" y="196" width="4" height="15" fill="rgb(244,3,29)"/><text x="594.00" y="206.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="624" y="260" width="3" height="15" fill="rgb(232,213,41)"/><text x="627.00" y="270.50"></text></g><g><title>PyArray_ToList (convert.c) (5 samples, 0.76%)</title><rect x="622" y="228" width="9" height="15" fill="rgb(252,227,36)"/><text x="625.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (5 samples, 0.76%)</title><rect x="622" y="244" width="9" height="15" fill="rgb(208,69,3)"/><text x="625.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (2 samples, 0.31%)</title><rect x="627" y="260" width="4" height="15" fill="rgb(237,189,21)"/><text x="630.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="631" y="228" width="2" height="15" fill="rgb(231,158,52)"/><text x="634.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="631" y="244" width="2" height="15" fill="rgb(239,145,17)"/><text x="634.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(217,76,34)"/><text x="634.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.15%)</title><rect x="633" y="244" width="2" height="15" fill="rgb(227,175,1)"/><text x="636.00" y="254.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.15%)</title><rect x="633" y="260" width="2" height="15" fill="rgb(221,108,24)"/><text x="636.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="635" y="244" width="1" height="15" fill="rgb(229,130,27)"/><text x="638.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (5 samples, 0.76%)</title><rect x="636" y="276" width="9" height="15" fill="rgb(235,158,3)"/><text x="639.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (5 samples, 0.76%)</title><rect x="636" y="292" width="9" height="15" fill="rgb(239,103,23)"/><text x="639.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (4 samples, 0.61%)</title><rect x="638" y="308" width="7" height="15" fill="rgb(205,221,5)"/><text x="641.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (4 samples, 0.61%)</title><rect x="638" y="324" width="7" height="15" fill="rgb(243,60,54)"/><text x="641.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (2 samples, 0.31%)</title><rect x="642" y="340" width="3" height="15" fill="rgb(239,43,13)"/><text x="645.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (2 samples, 0.31%)</title><rect x="663" y="340" width="4" height="15" fill="rgb(217,65,44)"/><text x="666.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (2 samples, 0.31%)</title><rect x="663" y="356" width="4" height="15" fill="rgb(220,19,29)"/><text x="666.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (14 samples, 2.14%)</title><rect x="645" y="292" width="26" height="15" fill="rgb(250,151,16)"/><text x="648.00" y="302.50">P..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (14 samples, 2.14%)</title><rect x="645" y="308" width="26" height="15" fill="rgb(240,158,29)"/><text x="648.00" y="318.50">P..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (10 samples, 1.53%)</title><rect x="653" y="324" width="18" height="15" fill="rgb(246,120,50)"/><text x="656.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (2 samples, 0.31%)</title><rect x="667" y="340" width="4" height="15" fill="rgb(223,171,52)"/><text x="670.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="669" y="356" width="2" height="15" fill="rgb(220,160,4)"/><text x="672.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (37 samples, 5.65%)</title><rect x="620" y="212" width="67" height="15" fill="rgb(206,79,2)"/><text x="623.00" y="222.50">_run (m..</text></g><g><title>array_subscript (mapping.c) (30 samples, 4.58%)</title><rect x="633" y="228" width="54" height="15" fill="rgb(252,119,17)"/><text x="636.00" y="238.50">array..</text></g><g><title>prepare_index (mapping.c) (28 samples, 4.27%)</title><rect x="636" y="244" width="51" height="15" fill="rgb(225,16,18)"/><text x="639.00" y="254.50">prepa..</text></g><g><title>PyArray_FromAny (ctors.c) (28 samples, 4.27%)</title><rect x="636" y="260" width="51" height="15" fill="rgb(211,217,37)"/><text x="639.00" y="270.50">PyArr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (23 samples, 3.51%)</title><rect x="645" y="276" width="42" height="15" fill="rgb(222,219,24)"/><text x="648.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c) (9 samples, 1.37%)</title><rect x="671" y="292" width="16" height="15" fill="rgb(241,64,32)"/><text x="674.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (8 samples, 1.22%)</title><rect x="672" y="308" width="15" height="15" fill="rgb(219,117,34)"/><text x="675.00" y="318.50"></text></g><g><title>0x7fb1d24183f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="685" y="324" width="2" height="15" fill="rgb(239,194,11)"/><text x="688.00" y="334.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (3 samples, 0.46%)</title><rect x="687" y="292" width="5" height="15" fill="rgb(228,10,33)"/><text x="690.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.61%)</title><rect x="687" y="260" width="7" height="15" fill="rgb(230,150,7)"/><text x="690.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 0.61%)</title><rect x="687" y="276" width="7" height="15" fill="rgb(220,190,3)"/><text x="690.00" y="286.50"></text></g><g><title>_aligned_contig_cast_float_to_long (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="692" y="292" width="2" height="15" fill="rgb(226,156,24)"/><text x="695.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (6 samples, 0.92%)</title><rect x="687" y="212" width="11" height="15" fill="rgb(211,113,41)"/><text x="690.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (6 samples, 0.92%)</title><rect x="687" y="228" width="11" height="15" fill="rgb(235,87,43)"/><text x="690.00" y="238.50"></text></g><g><title>array_astype (methods.c) (6 samples, 0.92%)</title><rect x="687" y="244" width="11" height="15" fill="rgb(226,133,13)"/><text x="690.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (2 samples, 0.31%)</title><rect x="694" y="260" width="4" height="15" fill="rgb(209,162,52)"/><text x="697.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.31%)</title><rect x="694" y="276" width="4" height="15" fill="rgb(243,106,51)"/><text x="697.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.31%)</title><rect x="694" y="292" width="4" height="15" fill="rgb(211,87,1)"/><text x="697.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.31%)</title><rect x="694" y="308" width="4" height="15" fill="rgb(237,71,28)"/><text x="697.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="696" y="324" width="2" height="15" fill="rgb(244,173,21)"/><text x="699.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="696" y="340" width="2" height="15" fill="rgb(244,200,18)"/><text x="699.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="696" y="356" width="2" height="15" fill="rgb(208,195,18)"/><text x="699.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="696" y="372" width="2" height="15" fill="rgb(209,173,48)"/><text x="699.00" y="382.50"></text></g><g><title>0x7fb1d31f6d67 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="696" y="388" width="2" height="15" fill="rgb(206,215,4)"/><text x="699.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (1 samples, 0.15%)</title><rect x="698" y="212" width="1" height="15" fill="rgb(228,81,26)"/><text x="701.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="698" y="228" width="1" height="15" fill="rgb(239,84,53)"/><text x="701.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="698" y="244" width="1" height="15" fill="rgb(239,29,18)"/><text x="701.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="698" y="260" width="1" height="15" fill="rgb(241,13,51)"/><text x="701.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="698" y="276" width="1" height="15" fill="rgb(223,179,17)"/><text x="701.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="698" y="292" width="1" height="15" fill="rgb(246,226,6)"/><text x="701.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.15%)</title><rect x="698" y="308" width="1" height="15" fill="rgb(230,223,43)"/><text x="701.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (2 samples, 0.31%)</title><rect x="699" y="212" width="4" height="15" fill="rgb(225,178,22)"/><text x="702.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.31%)</title><rect x="699" y="228" width="4" height="15" fill="rgb(209,18,11)"/><text x="702.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="701" y="244" width="2" height="15" fill="rgb(227,48,11)"/><text x="704.00" y="254.50"></text></g><g><title>array_length (mapping.c) (1 samples, 0.15%)</title><rect x="701" y="260" width="2" height="15" fill="rgb(254,162,4)"/><text x="704.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="703" y="276" width="2" height="15" fill="rgb(249,214,48)"/><text x="706.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="703" y="292" width="2" height="15" fill="rgb(246,43,20)"/><text x="706.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="703" y="308" width="2" height="15" fill="rgb(245,0,46)"/><text x="706.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="705" y="292" width="2" height="15" fill="rgb(243,180,8)"/><text x="708.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="705" y="308" width="2" height="15" fill="rgb(222,6,23)"/><text x="708.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="705" y="324" width="2" height="15" fill="rgb(216,35,13)"/><text x="708.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="705" y="340" width="2" height="15" fill="rgb(236,136,45)"/><text x="708.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="705" y="356" width="2" height="15" fill="rgb(229,195,35)"/><text x="708.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="705" y="276" width="3" height="15" fill="rgb(209,155,8)"/><text x="708.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="707" y="292" width="1" height="15" fill="rgb(216,75,38)"/><text x="710.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="707" y="308" width="1" height="15" fill="rgb(250,46,5)"/><text x="710.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="707" y="324" width="1" height="15" fill="rgb(233,112,36)"/><text x="710.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="708" y="324" width="2" height="15" fill="rgb(213,203,29)"/><text x="711.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="708" y="340" width="2" height="15" fill="rgb(230,138,41)"/><text x="711.00" y="350.50"></text></g><g><title>0x7fb1d3215d97 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(230,116,39)"/><text x="719.00" y="366.50"></text></g><g><title>array_add (number.c) (9 samples, 1.37%)</title><rect x="703" y="228" width="16" height="15" fill="rgb(211,51,15)"/><text x="706.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.37%)</title><rect x="703" y="244" width="16" height="15" fill="rgb(226,23,4)"/><text x="706.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.37%)</title><rect x="703" y="260" width="16" height="15" fill="rgb(236,226,54)"/><text x="706.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.92%)</title><rect x="708" y="276" width="11" height="15" fill="rgb(254,215,13)"/><text x="711.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.92%)</title><rect x="708" y="292" width="11" height="15" fill="rgb(227,62,33)"/><text x="711.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 0.92%)</title><rect x="708" y="308" width="11" height="15" fill="rgb(239,164,53)"/><text x="711.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 0.76%)</title><rect x="710" y="324" width="9" height="15" fill="rgb(230,40,52)"/><text x="713.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 0.76%)</title><rect x="710" y="340" width="9" height="15" fill="rgb(222,145,43)"/><text x="713.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="718" y="356" width="1" height="15" fill="rgb(242,37,43)"/><text x="721.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (10 samples, 1.53%)</title><rect x="703" y="212" width="18" height="15" fill="rgb(245,216,4)"/><text x="706.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="719" y="228" width="2" height="15" fill="rgb(232,3,24)"/><text x="722.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="719" y="244" width="2" height="15" fill="rgb(209,170,51)"/><text x="722.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="719" y="260" width="2" height="15" fill="rgb(250,122,13)"/><text x="722.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.15%)</title><rect x="721" y="212" width="2" height="15" fill="rgb(229,225,31)"/><text x="724.00" y="222.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.15%)</title><rect x="734" y="276" width="2" height="15" fill="rgb(249,132,16)"/><text x="737.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.15%)</title><rect x="734" y="292" width="2" height="15" fill="rgb(213,12,9)"/><text x="737.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.15%)</title><rect x="736" y="308" width="1" height="15" fill="rgb(249,135,42)"/><text x="739.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="736" y="324" width="1" height="15" fill="rgb(253,67,38)"/><text x="739.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.15%)</title><rect x="736" y="340" width="1" height="15" fill="rgb(215,68,38)"/><text x="739.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.15%)</title><rect x="736" y="356" width="1" height="15" fill="rgb(234,113,26)"/><text x="739.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="737" y="308" width="2" height="15" fill="rgb(218,188,39)"/><text x="740.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="737" y="324" width="2" height="15" fill="rgb(246,227,48)"/><text x="740.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.15%)</title><rect x="737" y="340" width="2" height="15" fill="rgb(225,89,47)"/><text x="740.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(211,87,15)"/><text x="740.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="737" y="372" width="2" height="15" fill="rgb(205,75,25)"/><text x="740.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="737" y="388" width="2" height="15" fill="rgb(222,22,7)"/><text x="740.00" y="398.50"></text></g><g><title>0x7fb1d3215d67 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="743" y="356" width="2" height="15" fill="rgb(214,160,40)"/><text x="746.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.07%)</title><rect x="734" y="260" width="12" height="15" fill="rgb(227,40,2)"/><text x="737.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.92%)</title><rect x="736" y="276" width="10" height="15" fill="rgb(221,182,0)"/><text x="739.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.92%)</title><rect x="736" y="292" width="10" height="15" fill="rgb(218,147,15)"/><text x="739.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.61%)</title><rect x="739" y="308" width="7" height="15" fill="rgb(218,224,27)"/><text x="742.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.61%)</title><rect x="739" y="324" width="7" height="15" fill="rgb(252,222,2)"/><text x="742.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.61%)</title><rect x="739" y="340" width="7" height="15" fill="rgb(207,135,2)"/><text x="742.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="745" y="356" width="1" height="15" fill="rgb(210,76,16)"/><text x="748.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (12 samples, 1.83%)</title><rect x="727" y="228" width="21" height="15" fill="rgb(226,123,18)"/><text x="730.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.22%)</title><rect x="734" y="244" width="14" height="15" fill="rgb(236,192,7)"/><text x="737.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.15%)</title><rect x="746" y="260" width="2" height="15" fill="rgb(253,97,30)"/><text x="749.00" y="270.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="759" y="372" width="2" height="15" fill="rgb(214,113,25)"/><text x="762.00" y="382.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.46%)</title><rect x="757" y="276" width="6" height="15" fill="rgb(228,49,53)"/><text x="760.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.46%)</title><rect x="757" y="292" width="6" height="15" fill="rgb(227,68,39)"/><text x="760.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.46%)</title><rect x="757" y="308" width="6" height="15" fill="rgb(248,123,0)"/><text x="760.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.31%)</title><rect x="759" y="324" width="4" height="15" fill="rgb(222,96,11)"/><text x="762.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.31%)</title><rect x="759" y="340" width="4" height="15" fill="rgb(226,111,38)"/><text x="762.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (2 samples, 0.31%)</title><rect x="759" y="356" width="4" height="15" fill="rgb(224,209,15)"/><text x="762.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="761" y="372" width="2" height="15" fill="rgb(228,122,43)"/><text x="764.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.15%)</title><rect x="761" y="388" width="2" height="15" fill="rgb(237,128,33)"/><text x="764.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (9 samples, 1.37%)</title><rect x="748" y="228" width="16" height="15" fill="rgb(217,26,31)"/><text x="751.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (7 samples, 1.07%)</title><rect x="752" y="244" width="12" height="15" fill="rgb(212,215,19)"/><text x="755.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (6 samples, 0.92%)</title><rect x="754" y="260" width="10" height="15" fill="rgb(226,164,45)"/><text x="757.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="763" y="276" width="1" height="15" fill="rgb(248,0,20)"/><text x="766.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.15%)</title><rect x="763" y="292" width="1" height="15" fill="rgb(207,35,24)"/><text x="766.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.15%)</title><rect x="763" y="308" width="1" height="15" fill="rgb(234,25,7)"/><text x="766.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.15%)</title><rect x="763" y="324" width="1" height="15" fill="rgb(236,13,15)"/><text x="766.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.31%)</title><rect x="768" y="260" width="4" height="15" fill="rgb(227,1,16)"/><text x="771.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.31%)</title><rect x="768" y="276" width="4" height="15" fill="rgb(217,79,15)"/><text x="771.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.31%)</title><rect x="768" y="292" width="4" height="15" fill="rgb(229,217,44)"/><text x="771.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.15%)</title><rect x="775" y="276" width="2" height="15" fill="rgb(229,10,36)"/><text x="778.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="777" y="292" width="2" height="15" fill="rgb(213,9,28)"/><text x="780.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="777" y="308" width="2" height="15" fill="rgb(212,121,8)"/><text x="780.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.15%)</title><rect x="777" y="324" width="2" height="15" fill="rgb(247,159,41)"/><text x="780.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="777" y="340" width="2" height="15" fill="rgb(208,123,43)"/><text x="780.00" y="350.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="777" y="356" width="2" height="15" fill="rgb(243,68,8)"/><text x="780.00" y="366.50"></text></g><g><title>0x7fb1d24182e0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="779" y="324" width="3" height="15" fill="rgb(229,149,17)"/><text x="782.00" y="334.50"></text></g><g><title>0x7fb1d3374e00 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="784" y="340" width="4" height="15" fill="rgb(213,117,12)"/><text x="787.00" y="350.50"></text></g><g><title>0x7fb1d3374e4e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(232,105,41)"/><text x="791.00" y="350.50"></text></g><g><title>0x7fb1d3374e7e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="790" y="340" width="1" height="15" fill="rgb(253,28,42)"/><text x="793.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.37%)</title><rect x="777" y="276" width="16" height="15" fill="rgb(235,32,4)"/><text x="780.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (8 samples, 1.22%)</title><rect x="779" y="292" width="14" height="15" fill="rgb(243,105,24)"/><text x="782.00" y="302.50"></text></g><g><title>FLOAT_exp (loops.c.src) (8 samples, 1.22%)</title><rect x="779" y="308" width="14" height="15" fill="rgb(229,106,46)"/><text x="782.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (6 samples, 0.92%)</title><rect x="782" y="324" width="11" height="15" fill="rgb(220,196,14)"/><text x="785.00" y="334.50"></text></g><g><title>0x7fb1d3374e96 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="791" y="340" width="2" height="15" fill="rgb(229,39,2)"/><text x="794.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (17 samples, 2.60%)</title><rect x="764" y="228" width="31" height="15" fill="rgb(252,15,17)"/><text x="767.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 2.29%)</title><rect x="768" y="244" width="27" height="15" fill="rgb(241,164,52)"/><text x="771.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 1.98%)</title><rect x="772" y="260" width="23" height="15" fill="rgb(238,1,16)"/><text x="775.00" y="270.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="793" y="276" width="2" height="15" fill="rgb(209,184,44)"/><text x="796.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.15%)</title><rect x="793" y="292" width="2" height="15" fill="rgb(221,144,4)"/><text x="796.00" y="302.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="802" y="324" width="2" height="15" fill="rgb(247,220,35)"/><text x="805.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.15%)</title><rect x="802" y="340" width="2" height="15" fill="rgb(229,139,34)"/><text x="805.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.15%)</title><rect x="802" y="356" width="2" height="15" fill="rgb(226,52,2)"/><text x="805.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.15%)</title><rect x="802" y="372" width="2" height="15" fill="rgb(228,189,19)"/><text x="805.00" y="382.50"></text></g><g><title>0x7fb1d3216103 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="804" y="340" width="4" height="15" fill="rgb(217,152,8)"/><text x="807.00" y="350.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="808" y="340" width="1" height="15" fill="rgb(248,86,8)"/><text x="811.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="808" y="356" width="1" height="15" fill="rgb(211,203,0)"/><text x="811.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.92%)</title><rect x="802" y="276" width="11" height="15" fill="rgb(214,137,30)"/><text x="805.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 0.92%)</title><rect x="802" y="292" width="11" height="15" fill="rgb(239,36,21)"/><text x="805.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (6 samples, 0.92%)</title><rect x="802" y="308" width="11" height="15" fill="rgb(245,126,21)"/><text x="805.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 0.76%)</title><rect x="804" y="324" width="9" height="15" fill="rgb(232,161,8)"/><text x="807.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.31%)</title><rect x="809" y="340" width="4" height="15" fill="rgb(205,40,21)"/><text x="812.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="809" y="356" width="4" height="15" fill="rgb(219,97,43)"/><text x="812.00" y="366.50"></text></g><g><title>sgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="809" y="372" width="4" height="15" fill="rgb(210,76,49)"/><text x="812.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.31%)</title><rect x="809" y="388" width="4" height="15" fill="rgb(223,141,23)"/><text x="812.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.61%)</title><rect x="813" y="276" width="7" height="15" fill="rgb(227,5,3)"/><text x="816.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (19 samples, 2.90%)</title><rect x="795" y="228" width="34" height="15" fill="rgb(207,143,34)"/><text x="798.00" y="238.50">_r..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (18 samples, 2.75%)</title><rect x="797" y="244" width="32" height="15" fill="rgb(252,2,27)"/><text x="800.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (17 samples, 2.60%)</title><rect x="799" y="260" width="30" height="15" fill="rgb(245,225,31)"/><text x="802.00" y="270.50">do..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.76%)</title><rect x="820" y="276" width="9" height="15" fill="rgb(242,51,21)"/><text x="823.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="833" y="244" width="2" height="15" fill="rgb(214,126,5)"/><text x="836.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="833" y="260" width="2" height="15" fill="rgb(207,221,33)"/><text x="836.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="833" y="276" width="2" height="15" fill="rgb(235,180,35)"/><text x="836.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="835" y="388" width="1" height="15" fill="rgb(208,21,50)"/><text x="838.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.31%)</title><rect x="835" y="372" width="3" height="15" fill="rgb(222,101,22)"/><text x="838.00" y="382.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.15%)</title><rect x="836" y="388" width="2" height="15" fill="rgb(246,163,24)"/><text x="839.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.15%)</title><rect x="838" y="372" width="2" height="15" fill="rgb(242,8,4)"/><text x="841.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.15%)</title><rect x="838" y="388" width="2" height="15" fill="rgb(207,203,29)"/><text x="841.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="838" y="404" width="2" height="15" fill="rgb(252,214,40)"/><text x="841.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="838" y="420" width="2" height="15" fill="rgb(215,139,33)"/><text x="841.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="838" y="436" width="2" height="15" fill="rgb(213,39,9)"/><text x="841.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (3 samples, 0.46%)</title><rect x="844" y="388" width="5" height="15" fill="rgb(229,144,19)"/><text x="847.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.31%)</title><rect x="845" y="404" width="4" height="15" fill="rgb(242,42,2)"/><text x="848.00" y="414.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (9 samples, 1.37%)</title><rect x="835" y="244" width="16" height="15" fill="rgb(236,61,7)"/><text x="838.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 1.37%)</title><rect x="835" y="260" width="16" height="15" fill="rgb(212,169,35)"/><text x="838.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (9 samples, 1.37%)</title><rect x="835" y="276" width="16" height="15" fill="rgb(208,198,35)"/><text x="838.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (9 samples, 1.37%)</title><rect x="835" y="292" width="16" height="15" fill="rgb(210,72,37)"/><text x="838.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 1.37%)</title><rect x="835" y="308" width="16" height="15" fill="rgb(240,207,6)"/><text x="838.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.37%)</title><rect x="835" y="324" width="16" height="15" fill="rgb(234,111,15)"/><text x="838.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.37%)</title><rect x="835" y="340" width="16" height="15" fill="rgb(216,80,47)"/><text x="838.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.37%)</title><rect x="835" y="356" width="16" height="15" fill="rgb(243,86,37)"/><text x="838.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 0.92%)</title><rect x="840" y="372" width="11" height="15" fill="rgb(217,193,5)"/><text x="843.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="849" y="388" width="2" height="15" fill="rgb(252,104,5)"/><text x="852.00" y="398.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.15%)</title><rect x="851" y="276" width="2" height="15" fill="rgb(215,214,26)"/><text x="854.00" y="286.50"></text></g><g><title>0x7fb1d3374e00 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="856" y="340" width="2" height="15" fill="rgb(245,71,11)"/><text x="859.00" y="350.50"></text></g><g><title>0x7fb1d3374e0e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="858" y="340" width="2" height="15" fill="rgb(207,127,29)"/><text x="861.00" y="350.50"></text></g><g><title>0x7fb1d3374e17 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="860" y="340" width="2" height="15" fill="rgb(224,201,6)"/><text x="863.00" y="350.50"></text></g><g><title>0x7fb1d3374e71 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="862" y="340" width="1" height="15" fill="rgb(214,217,41)"/><text x="865.00" y="350.50"></text></g><g><title>0x7fb1d3374e92 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="863" y="340" width="2" height="15" fill="rgb(239,158,44)"/><text x="866.00" y="350.50"></text></g><g><title>0x7fb1d3374ea2 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="865" y="340" width="2" height="15" fill="rgb(234,34,41)"/><text x="868.00" y="350.50"></text></g><g><title>FLOAT_exp (loops.c.src) (9 samples, 1.37%)</title><rect x="854" y="308" width="17" height="15" fill="rgb(212,60,25)"/><text x="857.00" y="318.50"></text></g><g><title>expf (libm-2.29.so) (9 samples, 1.37%)</title><rect x="854" y="324" width="17" height="15" fill="rgb(220,143,54)"/><text x="857.00" y="334.50"></text></g><g><title>0x7fb1d3374ea6 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(230,180,31)"/><text x="870.00" y="350.50"></text></g><g><title>0x7fb1d33779e4 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="871" y="324" width="1" height="15" fill="rgb(217,137,3)"/><text x="874.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (12 samples, 1.83%)</title><rect x="853" y="276" width="21" height="15" fill="rgb(238,149,47)"/><text x="856.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (12 samples, 1.83%)</title><rect x="853" y="292" width="21" height="15" fill="rgb(232,17,8)"/><text x="856.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (2 samples, 0.31%)</title><rect x="871" y="308" width="3" height="15" fill="rgb(213,86,45)"/><text x="874.00" y="318.50"></text></g><g><title>0x7fb1d3377a19 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="872" y="324" width="2" height="15" fill="rgb(227,96,34)"/><text x="875.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (26 samples, 3.97%)</title><rect x="829" y="228" width="47" height="15" fill="rgb(230,206,37)"/><text x="832.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.14%)</title><rect x="851" y="244" width="25" height="15" fill="rgb(235,1,15)"/><text x="854.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 2.14%)</title><rect x="851" y="260" width="25" height="15" fill="rgb(206,225,16)"/><text x="854.00" y="270.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="874" y="276" width="2" height="15" fill="rgb(222,47,6)"/><text x="877.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="883" y="324" width="2" height="15" fill="rgb(228,80,7)"/><text x="886.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="883" y="340" width="2" height="15" fill="rgb(249,88,19)"/><text x="886.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.15%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(229,123,51)"/><text x="886.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.15%)</title><rect x="883" y="372" width="2" height="15" fill="rgb(220,196,22)"/><text x="886.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.15%)</title><rect x="883" y="388" width="2" height="15" fill="rgb(217,12,45)"/><text x="886.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.15%)</title><rect x="885" y="372" width="2" height="15" fill="rgb(238,15,30)"/><text x="888.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.15%)</title><rect x="885" y="388" width="2" height="15" fill="rgb(229,143,53)"/><text x="888.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.31%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(228,170,17)"/><text x="888.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="887" y="372" width="2" height="15" fill="rgb(235,152,10)"/><text x="890.00" y="382.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (210 samples, 32.06%)</title><rect x="512" y="164" width="378" height="15" fill="rgb(249,82,50)"/><text x="515.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (201 samples, 30.69%)</title><rect x="528" y="180" width="362" height="15" fill="rgb(249,84,13)"/><text x="531.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (164 samples, 25.04%)</title><rect x="595" y="196" width="295" height="15" fill="rgb(245,194,0)"/><text x="598.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (93 samples, 14.20%)</title><rect x="723" y="212" width="167" height="15" fill="rgb(254,51,32)"/><text x="726.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (8 samples, 1.22%)</title><rect x="876" y="228" width="14" height="15" fill="rgb(248,159,1)"/><text x="879.00" y="238.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (6 samples, 0.92%)</title><rect x="880" y="244" width="10" height="15" fill="rgb(225,151,49)"/><text x="883.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.92%)</title><rect x="880" y="260" width="10" height="15" fill="rgb(212,6,0)"/><text x="883.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (5 samples, 0.76%)</title><rect x="881" y="276" width="9" height="15" fill="rgb(234,221,53)"/><text x="884.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 0.76%)</title><rect x="881" y="292" width="9" height="15" fill="rgb(212,220,10)"/><text x="884.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.61%)</title><rect x="883" y="308" width="7" height="15" fill="rgb(217,65,31)"/><text x="886.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.46%)</title><rect x="885" y="324" width="5" height="15" fill="rgb(226,48,32)"/><text x="888.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.46%)</title><rect x="885" y="340" width="5" height="15" fill="rgb(238,2,21)"/><text x="888.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.15%)</title><rect x="889" y="356" width="1" height="15" fill="rgb(220,57,12)"/><text x="892.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="889" y="372" width="1" height="15" fill="rgb(250,121,3)"/><text x="892.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="889" y="388" width="1" height="15" fill="rgb(224,38,3)"/><text x="892.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (216 samples, 32.98%)</title><rect x="505" y="132" width="389" height="15" fill="rgb(218,148,52)"/><text x="508.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (214 samples, 32.67%)</title><rect x="509" y="148" width="385" height="15" fill="rgb(235,14,13)"/><text x="512.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.31%)</title><rect x="890" y="164" width="4" height="15" fill="rgb(235,116,51)"/><text x="893.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="892" y="180" width="2" height="15" fill="rgb(252,40,4)"/><text x="895.00" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.15%)</title><rect x="892" y="196" width="2" height="15" fill="rgb(243,139,39)"/><text x="895.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.15%)</title><rect x="892" y="212" width="2" height="15" fill="rgb(240,214,15)"/><text x="895.00" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.15%)</title><rect x="892" y="228" width="2" height="15" fill="rgb(205,104,47)"/><text x="895.00" y="238.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="892" y="244" width="2" height="15" fill="rgb(234,196,54)"/><text x="895.00" y="254.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (217 samples, 33.13%)</title><rect x="505" y="68" width="391" height="15" fill="rgb(226,64,7)"/><text x="508.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_m_cl_1000_4_1..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (217 samples, 33.13%)</title><rect x="505" y="84" width="391" height="15" fill="rgb(233,59,44)"/><text x="508.00" y="94.50">setup_profile (bench_BernoulliNB_default_m_cl_1000_4_..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (217 samples, 33.13%)</title><rect x="505" y="100" width="391" height="15" fill="rgb(242,22,34)"/><text x="508.00" y="110.50">profile (bench_BernoulliNB_default_m_cl_1000_4_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (217 samples, 33.13%)</title><rect x="505" y="116" width="391" height="15" fill="rgb(205,117,11)"/><text x="508.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="894" y="132" width="2" height="15" fill="rgb(249,74,43)"/><text x="897.00" y="142.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.15%)</title><rect x="908" y="228" width="2" height="15" fill="rgb(244,207,53)"/><text x="911.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="910" y="228" width="2" height="15" fill="rgb(224,175,32)"/><text x="913.00" y="238.50"></text></g><g><title>0x7fb1d3216120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="916" y="244" width="1" height="15" fill="rgb(253,189,11)"/><text x="919.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.61%)</title><rect x="912" y="228" width="7" height="15" fill="rgb(221,168,28)"/><text x="915.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.15%)</title><rect x="917" y="244" width="2" height="15" fill="rgb(253,115,9)"/><text x="920.00" y="254.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (17 samples, 2.60%)</title><rect x="898" y="196" width="30" height="15" fill="rgb(253,87,0)"/><text x="901.00" y="206.50">_c..</text></g><g><title>check_array (sklearn/utils/validation.py) (16 samples, 2.44%)</title><rect x="899" y="212" width="29" height="15" fill="rgb(225,95,45)"/><text x="902.00" y="222.50">ch..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.76%)</title><rect x="919" y="228" width="9" height="15" fill="rgb(216,76,47)"/><text x="922.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.46%)</title><rect x="923" y="244" width="5" height="15" fill="rgb(220,187,54)"/><text x="926.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="928" y="196" width="2" height="15" fill="rgb(220,91,33)"/><text x="931.00" y="206.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="934" y="244" width="1" height="15" fill="rgb(241,174,23)"/><text x="937.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.46%)</title><rect x="932" y="212" width="5" height="15" fill="rgb(207,150,10)"/><text x="935.00" y="222.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (3 samples, 0.46%)</title><rect x="932" y="228" width="5" height="15" fill="rgb(239,48,19)"/><text x="935.00" y="238.50"></text></g><g><title>npy_memchr (common.h) (1 samples, 0.15%)</title><rect x="935" y="244" width="2" height="15" fill="rgb(241,46,48)"/><text x="938.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="939" y="260" width="2" height="15" fill="rgb(209,135,49)"/><text x="942.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="939" y="276" width="2" height="15" fill="rgb(210,45,17)"/><text x="942.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="941" y="260" width="2" height="15" fill="rgb(207,166,8)"/><text x="944.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.31%)</title><rect x="943" y="260" width="3" height="15" fill="rgb(242,157,37)"/><text x="946.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.31%)</title><rect x="943" y="276" width="3" height="15" fill="rgb(236,32,5)"/><text x="946.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.31%)</title><rect x="943" y="292" width="3" height="15" fill="rgb(219,219,21)"/><text x="946.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (2 samples, 0.31%)</title><rect x="943" y="308" width="3" height="15" fill="rgb(224,170,29)"/><text x="946.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (6 samples, 0.92%)</title><rect x="937" y="212" width="11" height="15" fill="rgb(236,76,46)"/><text x="940.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.92%)</title><rect x="937" y="228" width="11" height="15" fill="rgb(226,164,18)"/><text x="940.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.92%)</title><rect x="937" y="244" width="11" height="15" fill="rgb(233,111,8)"/><text x="940.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="946" y="260" width="2" height="15" fill="rgb(217,32,15)"/><text x="949.00" y="270.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.15%)</title><rect x="950" y="228" width="2" height="15" fill="rgb(227,7,22)"/><text x="953.00" y="238.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.15%)</title><rect x="952" y="244" width="2" height="15" fill="rgb(246,197,47)"/><text x="955.00" y="254.50"></text></g><g><title>PyArray_NewCopy (convert.c) (2 samples, 0.31%)</title><rect x="954" y="244" width="3" height="15" fill="rgb(206,30,27)"/><text x="957.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.31%)</title><rect x="954" y="260" width="3" height="15" fill="rgb(226,133,47)"/><text x="957.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.31%)</title><rect x="954" y="276" width="3" height="15" fill="rgb(237,165,30)"/><text x="957.00" y="286.50"></text></g><g><title>0x7fb1d3215d94 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="955" y="292" width="2" height="15" fill="rgb(233,196,44)"/><text x="958.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.61%)</title><rect x="952" y="228" width="7" height="15" fill="rgb(209,173,19)"/><text x="955.00" y="238.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="957" y="244" width="2" height="15" fill="rgb(215,206,46)"/><text x="960.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.15%)</title><rect x="959" y="228" width="2" height="15" fill="rgb(253,117,16)"/><text x="962.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.15%)</title><rect x="961" y="228" width="2" height="15" fill="rgb(252,132,30)"/><text x="964.00" y="238.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.15%)</title><rect x="961" y="244" width="2" height="15" fill="rgb(231,123,37)"/><text x="964.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 1.37%)</title><rect x="948" y="212" width="16" height="15" fill="rgb(240,82,14)"/><text x="951.00" y="222.50"></text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="963" y="228" width="1" height="15" fill="rgb(209,9,30)"/><text x="966.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (38 samples, 5.80%)</title><rect x="898" y="180" width="68" height="15" fill="rgb(214,212,18)"/><text x="901.00" y="190.50">_check_..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (20 samples, 3.05%)</title><rect x="930" y="196" width="36" height="15" fill="rgb(219,208,29)"/><text x="933.00" y="206.50">bin..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="964" y="212" width="2" height="15" fill="rgb(254,98,39)"/><text x="967.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="964" y="228" width="2" height="15" fill="rgb(251,120,16)"/><text x="967.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.15%)</title><rect x="964" y="244" width="2" height="15" fill="rgb(205,143,28)"/><text x="967.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="964" y="260" width="2" height="15" fill="rgb(228,145,1)"/><text x="967.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="964" y="276" width="2" height="15" fill="rgb(254,208,23)"/><text x="967.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="964" y="292" width="2" height="15" fill="rgb(246,200,17)"/><text x="967.00" y="302.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.15%)</title><rect x="964" y="308" width="2" height="15" fill="rgb(247,80,16)"/><text x="967.00" y="318.50"></text></g><g><title>array_add (number.c) (1 samples, 0.15%)</title><rect x="966" y="196" width="2" height="15" fill="rgb(209,216,40)"/><text x="969.00" y="206.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.15%)</title><rect x="968" y="196" width="2" height="15" fill="rgb(213,226,32)"/><text x="971.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.15%)</title><rect x="968" y="212" width="2" height="15" fill="rgb(234,120,3)"/><text x="971.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.15%)</title><rect x="968" y="228" width="2" height="15" fill="rgb(232,110,24)"/><text x="971.00" y="238.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="968" y="244" width="2" height="15" fill="rgb(224,100,39)"/><text x="971.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.31%)</title><rect x="970" y="260" width="3" height="15" fill="rgb(211,133,29)"/><text x="973.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.31%)</title><rect x="970" y="276" width="3" height="15" fill="rgb(248,162,5)"/><text x="973.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.31%)</title><rect x="970" y="292" width="3" height="15" fill="rgb(236,7,40)"/><text x="973.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.31%)</title><rect x="970" y="308" width="3" height="15" fill="rgb(231,24,7)"/><text x="973.00" y="318.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.31%)</title><rect x="970" y="324" width="3" height="15" fill="rgb(254,105,37)"/><text x="973.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="973" y="308" width="2" height="15" fill="rgb(205,112,14)"/><text x="976.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="973" y="324" width="2" height="15" fill="rgb(240,106,22)"/><text x="976.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="973" y="340" width="2" height="15" fill="rgb(243,139,29)"/><text x="976.00" y="350.50"></text></g><g><title>array_sum (methods.c) (4 samples, 0.61%)</title><rect x="970" y="196" width="7" height="15" fill="rgb(237,135,10)"/><text x="973.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (4 samples, 0.61%)</title><rect x="970" y="212" width="7" height="15" fill="rgb(247,126,52)"/><text x="973.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (4 samples, 0.61%)</title><rect x="970" y="228" width="7" height="15" fill="rgb(216,200,20)"/><text x="973.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.61%)</title><rect x="970" y="244" width="7" height="15" fill="rgb(233,98,52)"/><text x="973.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.31%)</title><rect x="973" y="260" width="4" height="15" fill="rgb(242,142,46)"/><text x="976.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.31%)</title><rect x="973" y="276" width="4" height="15" fill="rgb(213,72,1)"/><text x="976.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.31%)</title><rect x="973" y="292" width="4" height="15" fill="rgb(236,56,15)"/><text x="976.00" y="302.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.15%)</title><rect x="975" y="308" width="2" height="15" fill="rgb(205,31,26)"/><text x="978.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="975" y="324" width="2" height="15" fill="rgb(224,1,35)"/><text x="978.00" y="334.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="979" y="212" width="2" height="15" fill="rgb(242,121,9)"/><text x="982.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.46%)</title><rect x="981" y="212" width="5" height="15" fill="rgb(242,32,51)"/><text x="984.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.15%)</title><rect x="986" y="260" width="2" height="15" fill="rgb(236,162,18)"/><text x="989.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="986" y="276" width="2" height="15" fill="rgb(250,72,23)"/><text x="989.00" y="286.50"></text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="986" y="292" width="2" height="15" fill="rgb(241,172,32)"/><text x="989.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="986" y="308" width="2" height="15" fill="rgb(225,35,50)"/><text x="989.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (7 samples, 1.07%)</title><rect x="977" y="196" width="13" height="15" fill="rgb(223,93,18)"/><text x="980.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.31%)</title><rect x="986" y="212" width="4" height="15" fill="rgb(243,152,7)"/><text x="989.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.31%)</title><rect x="986" y="228" width="4" height="15" fill="rgb(226,229,32)"/><text x="989.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (2 samples, 0.31%)</title><rect x="986" y="244" width="4" height="15" fill="rgb(244,134,28)"/><text x="989.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="988" y="260" width="2" height="15" fill="rgb(229,11,52)"/><text x="991.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="988" y="276" width="2" height="15" fill="rgb(245,36,1)"/><text x="991.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.15%)</title><rect x="988" y="292" width="2" height="15" fill="rgb(235,90,4)"/><text x="991.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.15%)</title><rect x="988" y="308" width="2" height="15" fill="rgb(224,108,24)"/><text x="991.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="990" y="228" width="3" height="15" fill="rgb(210,223,31)"/><text x="993.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.31%)</title><rect x="990" y="244" width="3" height="15" fill="rgb(232,95,47)"/><text x="993.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.15%)</title><rect x="991" y="260" width="2" height="15" fill="rgb(241,178,6)"/><text x="994.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.15%)</title><rect x="991" y="276" width="2" height="15" fill="rgb(245,207,1)"/><text x="994.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(238,196,12)"/><text x="994.00" y="302.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (16 samples, 2.44%)</title><rect x="966" y="180" width="29" height="15" fill="rgb(247,33,41)"/><text x="969.00" y="190.50">_j..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.46%)</title><rect x="990" y="196" width="5" height="15" fill="rgb(230,63,34)"/><text x="993.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.46%)</title><rect x="990" y="212" width="5" height="15" fill="rgb(239,131,18)"/><text x="993.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="993" y="228" width="2" height="15" fill="rgb(250,194,41)"/><text x="996.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="993" y="244" width="2" height="15" fill="rgb(254,127,27)"/><text x="996.00" y="254.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.15%)</title><rect x="995" y="260" width="2" height="15" fill="rgb(232,182,0)"/><text x="998.00" y="270.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="995" y="276" width="2" height="15" fill="rgb(219,125,5)"/><text x="998.00" y="286.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="995" y="292" width="2" height="15" fill="rgb(228,57,21)"/><text x="998.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="995" y="308" width="2" height="15" fill="rgb(240,38,44)"/><text x="998.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="997" y="260" width="2" height="15" fill="rgb(241,61,22)"/><text x="1000.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.15%)</title><rect x="997" y="276" width="2" height="15" fill="rgb(214,211,23)"/><text x="1000.00" y="286.50"></text></g><g><title>array_subtract (number.c) (5 samples, 0.76%)</title><rect x="995" y="180" width="9" height="15" fill="rgb(229,217,9)"/><text x="998.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.76%)</title><rect x="995" y="196" width="9" height="15" fill="rgb(224,181,40)"/><text x="998.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.76%)</title><rect x="995" y="212" width="9" height="15" fill="rgb(233,18,46)"/><text x="998.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.76%)</title><rect x="995" y="228" width="9" height="15" fill="rgb(241,11,22)"/><text x="998.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.76%)</title><rect x="995" y="244" width="9" height="15" fill="rgb(242,187,1)"/><text x="998.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.46%)</title><rect x="999" y="260" width="5" height="15" fill="rgb(233,106,11)"/><text x="1002.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.46%)</title><rect x="999" y="276" width="5" height="15" fill="rgb(221,124,53)"/><text x="1002.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.46%)</title><rect x="999" y="292" width="5" height="15" fill="rgb(222,77,28)"/><text x="1002.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1002" y="308" width="2" height="15" fill="rgb(208,131,51)"/><text x="1005.00" y="318.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (3 samples, 0.46%)</title><rect x="1004" y="180" width="5" height="15" fill="rgb(246,60,23)"/><text x="1007.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.46%)</title><rect x="1004" y="196" width="5" height="15" fill="rgb(253,153,36)"/><text x="1007.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (2 samples, 0.31%)</title><rect x="1006" y="212" width="3" height="15" fill="rgb(230,128,40)"/><text x="1009.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.15%)</title><rect x="1009" y="212" width="2" height="15" fill="rgb(213,83,16)"/><text x="1012.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.31%)</title><rect x="1009" y="180" width="4" height="15" fill="rgb(206,30,45)"/><text x="1012.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.31%)</title><rect x="1009" y="196" width="4" height="15" fill="rgb(216,100,14)"/><text x="1012.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.15%)</title><rect x="1011" y="212" width="2" height="15" fill="rgb(220,71,22)"/><text x="1014.00" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.31%)</title><rect x="1018" y="196" width="4" height="15" fill="rgb(221,50,8)"/><text x="1021.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.31%)</title><rect x="1018" y="212" width="4" height="15" fill="rgb(231,23,17)"/><text x="1021.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1031" y="372" width="2" height="15" fill="rgb(215,216,53)"/><text x="1034.00" y="382.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (2 samples, 0.31%)</title><rect x="1031" y="324" width="4" height="15" fill="rgb(249,142,50)"/><text x="1034.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.31%)</title><rect x="1031" y="340" width="4" height="15" fill="rgb(241,163,51)"/><text x="1034.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.31%)</title><rect x="1031" y="356" width="4" height="15" fill="rgb(225,22,12)"/><text x="1034.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1033" y="372" width="2" height="15" fill="rgb(226,83,0)"/><text x="1036.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (7 samples, 1.07%)</title><rect x="1042" y="356" width="12" height="15" fill="rgb(254,143,40)"/><text x="1045.00" y="366.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (6 samples, 0.92%)</title><rect x="1044" y="372" width="10" height="15" fill="rgb(234,54,3)"/><text x="1047.00" y="382.50"></text></g><g><title>fetestexcept (libm-2.29.so) (6 samples, 0.92%)</title><rect x="1044" y="388" width="10" height="15" fill="rgb(252,38,50)"/><text x="1047.00" y="398.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (2 samples, 0.31%)</title><rect x="1060" y="388" width="3" height="15" fill="rgb(223,34,45)"/><text x="1063.00" y="398.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (21 samples, 3.21%)</title><rect x="1036" y="340" width="38" height="15" fill="rgb(217,229,30)"/><text x="1039.00" y="350.50">DOU..</text></g><g><title>run_unary_reduce_simd_maximum_DOUBLE (simd.inc.src) (11 samples, 1.68%)</title><rect x="1054" y="356" width="20" height="15" fill="rgb(218,28,1)"/><text x="1057.00" y="366.50"></text></g><g><title>sse2_maximum_DOUBLE (simd.inc.src) (10 samples, 1.53%)</title><rect x="1056" y="372" width="18" height="15" fill="rgb(233,154,40)"/><text x="1059.00" y="382.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (6 samples, 0.92%)</title><rect x="1063" y="388" width="11" height="15" fill="rgb(251,75,10)"/><text x="1066.00" y="398.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (5 samples, 0.76%)</title><rect x="1065" y="404" width="9" height="15" fill="rgb(228,114,2)"/><text x="1068.00" y="414.50"></text></g><g><title>fetestexcept (libm-2.29.so) (3 samples, 0.46%)</title><rect x="1069" y="420" width="5" height="15" fill="rgb(216,161,4)"/><text x="1072.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (25 samples, 3.82%)</title><rect x="1031" y="308" width="45" height="15" fill="rgb(223,135,9)"/><text x="1034.00" y="318.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c) (23 samples, 3.51%)</title><rect x="1035" y="324" width="41" height="15" fill="rgb(236,105,23)"/><text x="1038.00" y="334.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.15%)</title><rect x="1074" y="340" width="2" height="15" fill="rgb(237,79,7)"/><text x="1077.00" y="350.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (31 samples, 4.73%)</title><rect x="1022" y="196" width="56" height="15" fill="rgb(241,41,1)"/><text x="1025.00" y="206.50">amax ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (30 samples, 4.58%)</title><rect x="1024" y="212" width="54" height="15" fill="rgb(242,121,44)"/><text x="1027.00" y="222.50">array..</text></g><g><title>amax (numpy/core/fromnumeric.py) (29 samples, 4.43%)</title><rect x="1026" y="228" width="52" height="15" fill="rgb(211,213,44)"/><text x="1029.00" y="238.50">amax ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (28 samples, 4.27%)</title><rect x="1027" y="244" width="51" height="15" fill="rgb(231,23,37)"/><text x="1030.00" y="254.50">_wrap..</text></g><g><title>ufunc_reduce (ufunc_object.c) (26 samples, 3.97%)</title><rect x="1031" y="260" width="47" height="15" fill="rgb(225,137,32)"/><text x="1034.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (26 samples, 3.97%)</title><rect x="1031" y="276" width="47" height="15" fill="rgb(205,128,17)"/><text x="1034.00" y="286.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (26 samples, 3.97%)</title><rect x="1031" y="292" width="47" height="15" fill="rgb(236,65,3)"/><text x="1034.00" y="302.50">PyUF..</text></g><g><title>_get_identity (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1076" y="308" width="2" height="15" fill="rgb(248,169,35)"/><text x="1079.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.15%)</title><rect x="1078" y="212" width="2" height="15" fill="rgb(231,213,36)"/><text x="1081.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.15%)</title><rect x="1078" y="228" width="2" height="15" fill="rgb(233,58,18)"/><text x="1081.00" y="238.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.31%)</title><rect x="1078" y="196" width="3" height="15" fill="rgb(240,179,19)"/><text x="1081.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1080" y="212" width="1" height="15" fill="rgb(226,27,17)"/><text x="1083.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1080" y="228" width="1" height="15" fill="rgb(210,54,46)"/><text x="1083.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="1080" y="244" width="1" height="15" fill="rgb(207,165,52)"/><text x="1083.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1081" y="196" width="2" height="15" fill="rgb(253,117,38)"/><text x="1084.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1081" y="212" width="2" height="15" fill="rgb(225,34,11)"/><text x="1084.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="1081" y="228" width="2" height="15" fill="rgb(219,45,34)"/><text x="1084.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1085" y="276" width="2" height="15" fill="rgb(223,190,28)"/><text x="1088.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1085" y="292" width="2" height="15" fill="rgb(234,160,19)"/><text x="1088.00" y="302.50"></text></g><g><title>array_subtract (number.c) (5 samples, 0.76%)</title><rect x="1083" y="196" width="9" height="15" fill="rgb(227,211,37)"/><text x="1086.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1085" y="212" width="7" height="15" fill="rgb(206,49,38)"/><text x="1088.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1085" y="228" width="7" height="15" fill="rgb(224,65,31)"/><text x="1088.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1085" y="244" width="7" height="15" fill="rgb(212,52,28)"/><text x="1088.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.61%)</title><rect x="1085" y="260" width="7" height="15" fill="rgb(236,46,17)"/><text x="1088.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.46%)</title><rect x="1087" y="276" width="5" height="15" fill="rgb(231,92,19)"/><text x="1090.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.46%)</title><rect x="1087" y="292" width="5" height="15" fill="rgb(211,195,29)"/><text x="1090.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.46%)</title><rect x="1087" y="308" width="5" height="15" fill="rgb(214,105,38)"/><text x="1090.00" y="318.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="1090" y="324" width="2" height="15" fill="rgb(235,68,9)"/><text x="1093.00" y="334.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (4 samples, 0.61%)</title><rect x="1092" y="196" width="7" height="15" fill="rgb(240,208,3)"/><text x="1095.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.61%)</title><rect x="1092" y="212" width="7" height="15" fill="rgb(214,180,28)"/><text x="1095.00" y="222.50"></text></g><g><title>squeeze (numpy/core/fromnumeric.py) (2 samples, 0.31%)</title><rect x="1096" y="228" width="3" height="15" fill="rgb(219,196,4)"/><text x="1099.00" y="238.50"></text></g><g><title>array_squeeze (methods.c) (2 samples, 0.31%)</title><rect x="1096" y="244" width="3" height="15" fill="rgb(247,205,46)"/><text x="1099.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1105" y="324" width="2" height="15" fill="rgb(245,156,35)"/><text x="1108.00" y="334.50"></text></g><g><title>0x7fb1d3216120 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1105" y="340" width="2" height="15" fill="rgb(215,49,49)"/><text x="1108.00" y="350.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.15%)</title><rect x="1107" y="324" width="1" height="15" fill="rgb(238,15,41)"/><text x="1110.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.15%)</title><rect x="1107" y="340" width="1" height="15" fill="rgb(250,195,41)"/><text x="1110.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.46%)</title><rect x="1112" y="340" width="5" height="15" fill="rgb(252,221,3)"/><text x="1115.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.15%)</title><rect x="1116" y="356" width="1" height="15" fill="rgb(239,72,1)"/><text x="1119.00" y="366.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (13 samples, 1.98%)</title><rect x="1099" y="196" width="24" height="15" fill="rgb(215,36,4)"/><text x="1102.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 1.98%)</title><rect x="1099" y="212" width="24" height="15" fill="rgb(242,175,30)"/><text x="1102.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py) (13 samples, 1.98%)</title><rect x="1099" y="228" width="24" height="15" fill="rgb(205,164,18)"/><text x="1102.00" y="238.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (12 samples, 1.83%)</title><rect x="1101" y="244" width="22" height="15" fill="rgb(207,85,31)"/><text x="1104.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 1.53%)</title><rect x="1105" y="260" width="18" height="15" fill="rgb(214,49,8)"/><text x="1108.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 1.53%)</title><rect x="1105" y="276" width="18" height="15" fill="rgb(247,35,11)"/><text x="1108.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.53%)</title><rect x="1105" y="292" width="18" height="15" fill="rgb(211,147,35)"/><text x="1108.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.53%)</title><rect x="1105" y="308" width="18" height="15" fill="rgb(242,184,8)"/><text x="1108.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (8 samples, 1.22%)</title><rect x="1108" y="324" width="15" height="15" fill="rgb(212,112,2)"/><text x="1111.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.46%)</title><rect x="1117" y="340" width="6" height="15" fill="rgb(254,190,45)"/><text x="1120.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1123" y="228" width="2" height="15" fill="rgb(251,11,54)"/><text x="1126.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.31%)</title><rect x="1126" y="244" width="4" height="15" fill="rgb(223,49,13)"/><text x="1129.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.31%)</title><rect x="1126" y="260" width="4" height="15" fill="rgb(224,217,4)"/><text x="1129.00" y="270.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.31%)</title><rect x="1126" y="276" width="4" height="15" fill="rgb(252,78,9)"/><text x="1129.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1128" y="292" width="2" height="15" fill="rgb(207,187,12)"/><text x="1131.00" y="302.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1128" y="308" width="2" height="15" fill="rgb(238,18,21)"/><text x="1131.00" y="318.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.15%)</title><rect x="1128" y="324" width="2" height="15" fill="rgb(221,212,9)"/><text x="1131.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="1130" y="244" width="2" height="15" fill="rgb(250,134,11)"/><text x="1133.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="1130" y="260" width="2" height="15" fill="rgb(225,97,19)"/><text x="1133.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="1130" y="276" width="2" height="15" fill="rgb(240,99,34)"/><text x="1133.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.15%)</title><rect x="1130" y="292" width="2" height="15" fill="rgb(211,181,19)"/><text x="1133.00" y="302.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="1130" y="308" width="2" height="15" fill="rgb(233,13,7)"/><text x="1133.00" y="318.50"></text></g><g><title>0x7fb1d2416b00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1134" y="276" width="1" height="15" fill="rgb(213,93,47)"/><text x="1137.00" y="286.50"></text></g><g><title>0x7fb1d33c7c32 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1139" y="292" width="2" height="15" fill="rgb(247,90,37)"/><text x="1142.00" y="302.50"></text></g><g><title>0x7fb1d33c7c52 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1141" y="292" width="2" height="15" fill="rgb(251,47,14)"/><text x="1144.00" y="302.50"></text></g><g><title>0x7fb1d33c7c6e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1143" y="292" width="1" height="15" fill="rgb(225,121,36)"/><text x="1146.00" y="302.50"></text></g><g><title>exp (libm-2.29.so) (7 samples, 1.07%)</title><rect x="1135" y="276" width="13" height="15" fill="rgb(217,194,42)"/><text x="1138.00" y="286.50"></text></g><g><title>0x7fb1d33c7c7b (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1144" y="292" width="4" height="15" fill="rgb(209,137,29)"/><text x="1147.00" y="302.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1148" y="276" width="2" height="15" fill="rgb(216,146,0)"/><text x="1151.00" y="286.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (11 samples, 1.68%)</title><rect x="1132" y="260" width="20" height="15" fill="rgb(226,7,26)"/><text x="1135.00" y="270.50"></text></g><g><title>npy_exp (npy_math_internal.h.src) (1 samples, 0.15%)</title><rect x="1150" y="276" width="2" height="15" fill="rgb(240,112,23)"/><text x="1153.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (16 samples, 2.44%)</title><rect x="1125" y="228" width="28" height="15" fill="rgb(229,119,20)"/><text x="1128.00" y="238.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (12 samples, 1.83%)</title><rect x="1132" y="244" width="21" height="15" fill="rgb(242,2,1)"/><text x="1135.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="1152" y="260" width="1" height="15" fill="rgb(208,12,45)"/><text x="1155.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1153" y="244" width="2" height="15" fill="rgb(220,50,51)"/><text x="1156.00" y="254.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1153" y="260" width="2" height="15" fill="rgb(236,28,45)"/><text x="1156.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.31%)</title><rect x="1153" y="228" width="4" height="15" fill="rgb(248,28,50)"/><text x="1156.00" y="238.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1155" y="244" width="2" height="15" fill="rgb(248,46,15)"/><text x="1158.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1155" y="260" width="2" height="15" fill="rgb(243,103,4)"/><text x="1158.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1155" y="276" width="2" height="15" fill="rgb(221,205,22)"/><text x="1158.00" y="286.50"></text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (145 samples, 22.14%)</title><rect x="898" y="164" width="261" height="15" fill="rgb(237,155,44)"/><text x="901.00" y="174.50">predict_log_proba (sklearn/naive_b..</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (81 samples, 12.37%)</title><rect x="1013" y="180" width="146" height="15" fill="rgb(207,82,41)"/><text x="1016.00" y="190.50">logsumexp (scipy/s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 3.05%)</title><rect x="1123" y="196" width="36" height="15" fill="rgb(221,141,16)"/><text x="1126.00" y="206.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 3.05%)</title><rect x="1123" y="212" width="36" height="15" fill="rgb(215,186,44)"/><text x="1126.00" y="222.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1157" y="228" width="2" height="15" fill="rgb(247,14,24)"/><text x="1160.00" y="238.50"></text></g><g><title>0x7fb1d33c7ba0 (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1170" y="260" width="3" height="15" fill="rgb(245,50,45)"/><text x="1173.00" y="270.50"></text></g><g><title>0x7fb1d33c7c6a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1173" y="260" width="2" height="15" fill="rgb(249,212,11)"/><text x="1176.00" y="270.50"></text></g><g><title>0x7fb1d33c7c7b (libm-2.29.so) (4 samples, 0.61%)</title><rect x="1175" y="260" width="7" height="15" fill="rgb(212,89,13)"/><text x="1178.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (15 samples, 2.29%)</title><rect x="1159" y="196" width="27" height="15" fill="rgb(209,112,36)"/><text x="1162.00" y="206.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (15 samples, 2.29%)</title><rect x="1159" y="212" width="27" height="15" fill="rgb(211,108,11)"/><text x="1162.00" y="222.50">t..</text></g><g><title>PyUFunc_d_d (loops.c.src) (15 samples, 2.29%)</title><rect x="1159" y="228" width="27" height="15" fill="rgb(219,222,28)"/><text x="1162.00" y="238.50">P..</text></g><g><title>exp (libm-2.29.so) (14 samples, 2.14%)</title><rect x="1161" y="244" width="25" height="15" fill="rgb(248,207,29)"/><text x="1164.00" y="254.50">e..</text></g><g><title>0x7fb1d33c7c7f (libm-2.29.so) (2 samples, 0.31%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(240,35,3)"/><text x="1185.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (654 samples, 99.85%)</title><rect x="10" y="52" width="1178" height="15" fill="rgb(235,229,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (162 samples, 24.73%)</title><rect x="896" y="68" width="292" height="15" fill="rgb(238,127,47)"/><text x="899.00" y="78.50">profile_skl (bench_BernoulliNB_default_..</text></g><g><title>setup_profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (162 samples, 24.73%)</title><rect x="896" y="84" width="292" height="15" fill="rgb(246,166,19)"/><text x="899.00" y="94.50">setup_profile (bench_BernoulliNB_defaul..</text></g><g><title>profile (bench_BernoulliNB_default_m_cl_1000_4_12_float_.py) (162 samples, 24.73%)</title><rect x="896" y="100" width="292" height="15" fill="rgb(216,181,1)"/><text x="899.00" y="110.50">profile (bench_BernoulliNB_default_m_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (162 samples, 24.73%)</title><rect x="896" y="116" width="292" height="15" fill="rgb(208,11,36)"/><text x="899.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (161 samples, 24.58%)</title><rect x="898" y="132" width="290" height="15" fill="rgb(254,36,22)"/><text x="901.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (161 samples, 24.58%)</title><rect x="898" y="148" width="290" height="15" fill="rgb(242,77,33)"/><text x="901.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 2.44%)</title><rect x="1159" y="164" width="29" height="15" fill="rgb(227,110,12)"/><text x="1162.00" y="174.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 2.44%)</title><rect x="1159" y="180" width="29" height="15" fill="rgb(213,103,24)"/><text x="1162.00" y="190.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1186" y="196" width="2" height="15" fill="rgb(230,203,13)"/><text x="1189.00" y="206.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1186" y="212" width="2" height="15" fill="rgb(238,182,35)"/><text x="1189.00" y="222.50"></text></g><g><title>all (655 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(215,65,17)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.15%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(237,126,41)"/><text x="1191.00" y="62.50"></text></g></g></svg>