<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1830" onload="init(evt)" viewBox="0 0 1200 1830" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1830" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1813.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1813.00"> </text><g id="frames"><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(248,198,42)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="868" width="11" height="15" fill="rgb(242,227,0)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="884" width="11" height="15" fill="rgb(207,31,18)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="900" width="11" height="15" fill="rgb(234,154,41)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 1.00%)</title><rect x="10" y="916" width="11" height="15" fill="rgb(223,178,9)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="932" width="11" height="15" fill="rgb(253,204,11)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="948" width="11" height="15" fill="rgb(215,224,28)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="10" y="964" width="11" height="15" fill="rgb(239,90,39)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="13" y="980" width="8" height="15" fill="rgb(250,206,9)"/><text x="16.00" y="990.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.66%)</title><rect x="13" y="996" width="8" height="15" fill="rgb(225,146,37)"/><text x="16.00" y="1006.50"></text></g><g><title>0x7fc10b1caeaa (libc-2.29.so) (1 samples, 0.33%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(243,61,7)"/><text x="20.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(254,150,20)"/><text x="24.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(216,46,46)"/><text x="24.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(251,19,1)"/><text x="24.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(211,140,43)"/><text x="24.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(246,2,41)"/><text x="24.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(213,53,36)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(221,56,17)"/><text x="24.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(223,211,53)"/><text x="24.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="21" y="996" width="4" height="15" fill="rgb(235,148,5)"/><text x="24.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="25" y="900" width="8" height="15" fill="rgb(209,53,27)"/><text x="28.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="916" width="4" height="15" fill="rgb(218,162,33)"/><text x="32.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="29" y="932" width="4" height="15" fill="rgb(242,184,28)"/><text x="32.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="29" y="948" width="4" height="15" fill="rgb(219,100,41)"/><text x="32.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="29" y="964" width="4" height="15" fill="rgb(221,203,43)"/><text x="32.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="29" y="980" width="4" height="15" fill="rgb(227,148,44)"/><text x="32.00" y="990.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.33%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(244,206,15)"/><text x="36.00" y="926.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.33%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(240,179,12)"/><text x="36.00" y="942.50"></text></g><g><title>0x7fc10b1c56d4 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(226,32,11)"/><text x="36.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="196" width="31" height="15" fill="rgb(232,5,48)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="212" width="31" height="15" fill="rgb(219,124,44)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="228" width="31" height="15" fill="rgb(251,196,18)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="244" width="31" height="15" fill="rgb(216,73,4)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="260" width="31" height="15" fill="rgb(217,109,4)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="276" width="31" height="15" fill="rgb(250,90,1)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 2.66%)</title><rect x="10" y="292" width="31" height="15" fill="rgb(249,62,48)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="308" width="31" height="15" fill="rgb(239,150,29)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="324" width="31" height="15" fill="rgb(221,220,23)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="340" width="31" height="15" fill="rgb(237,49,25)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="356" width="31" height="15" fill="rgb(244,181,22)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="372" width="31" height="15" fill="rgb(217,194,26)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 2.66%)</title><rect x="10" y="388" width="31" height="15" fill="rgb(240,104,17)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="404" width="31" height="15" fill="rgb(230,130,32)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="420" width="31" height="15" fill="rgb(209,157,35)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="436" width="31" height="15" fill="rgb(232,103,54)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="452" width="31" height="15" fill="rgb(230,55,8)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="468" width="31" height="15" fill="rgb(237,227,16)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 2.66%)</title><rect x="10" y="484" width="31" height="15" fill="rgb(216,25,20)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="500" width="31" height="15" fill="rgb(223,203,31)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="516" width="31" height="15" fill="rgb(233,180,6)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="532" width="31" height="15" fill="rgb(251,201,3)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="548" width="31" height="15" fill="rgb(227,108,32)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="564" width="31" height="15" fill="rgb(226,141,2)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 2.66%)</title><rect x="10" y="580" width="31" height="15" fill="rgb(239,173,43)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="596" width="31" height="15" fill="rgb(216,179,0)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="612" width="31" height="15" fill="rgb(225,19,28)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="628" width="31" height="15" fill="rgb(254,68,52)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="644" width="31" height="15" fill="rgb(245,83,23)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="660" width="31" height="15" fill="rgb(232,3,16)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="676" width="31" height="15" fill="rgb(215,35,53)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="692" width="31" height="15" fill="rgb(210,83,42)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="708" width="31" height="15" fill="rgb(207,139,31)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 2.66%)</title><rect x="10" y="724" width="31" height="15" fill="rgb(215,213,26)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="740" width="31" height="15" fill="rgb(208,104,43)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="756" width="31" height="15" fill="rgb(208,134,38)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="772" width="31" height="15" fill="rgb(232,49,19)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="10" y="788" width="31" height="15" fill="rgb(244,211,7)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="10" y="804" width="31" height="15" fill="rgb(254,6,49)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 2.66%)</title><rect x="10" y="820" width="31" height="15" fill="rgb(244,76,45)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 2.66%)</title><rect x="10" y="836" width="31" height="15" fill="rgb(226,8,51)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 2.66%)</title><rect x="10" y="852" width="31" height="15" fill="rgb(249,96,12)"/><text x="13.00" y="862.50">_i..</text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.33%)</title><rect x="25" y="868" width="16" height="15" fill="rgb(221,107,29)"/><text x="28.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.33%)</title><rect x="25" y="884" width="16" height="15" fill="rgb(227,86,15)"/><text x="28.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.66%)</title><rect x="33" y="900" width="8" height="15" fill="rgb(250,71,49)"/><text x="36.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(253,188,33)"/><text x="40.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(232,83,23)"/><text x="40.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.33%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(211,101,12)"/><text x="40.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.33%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(209,195,24)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1124" width="4" height="15" fill="rgb(223,101,26)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1140" width="4" height="15" fill="rgb(219,77,11)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1156" width="4" height="15" fill="rgb(224,187,8)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1172" width="4" height="15" fill="rgb(229,189,28)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1188" width="4" height="15" fill="rgb(246,176,21)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.33%)</title><rect x="41" y="1204" width="4" height="15" fill="rgb(236,190,23)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1220" width="4" height="15" fill="rgb(234,43,18)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1236" width="4" height="15" fill="rgb(229,228,32)"/><text x="44.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1252" width="4" height="15" fill="rgb(225,219,9)"/><text x="44.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1268" width="4" height="15" fill="rgb(251,195,22)"/><text x="44.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1284" width="4" height="15" fill="rgb(208,196,5)"/><text x="44.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1300" width="4" height="15" fill="rgb(209,63,4)"/><text x="44.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1316" width="4" height="15" fill="rgb(220,6,19)"/><text x="44.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1332" width="4" height="15" fill="rgb(245,203,15)"/><text x="44.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.33%)</title><rect x="41" y="1348" width="4" height="15" fill="rgb(206,108,14)"/><text x="44.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1364" width="4" height="15" fill="rgb(242,35,53)"/><text x="44.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1380" width="4" height="15" fill="rgb(231,221,28)"/><text x="44.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="41" y="1396" width="4" height="15" fill="rgb(226,12,13)"/><text x="44.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1412" width="4" height="15" fill="rgb(216,68,1)"/><text x="44.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1428" width="4" height="15" fill="rgb(241,126,25)"/><text x="44.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1444" width="4" height="15" fill="rgb(226,92,45)"/><text x="44.00" y="1454.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1460" width="4" height="15" fill="rgb(219,77,45)"/><text x="44.00" y="1470.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1476" width="4" height="15" fill="rgb(207,111,0)"/><text x="44.00" y="1486.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="41" y="1492" width="4" height="15" fill="rgb(249,147,13)"/><text x="44.00" y="1502.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="41" y="1508" width="4" height="15" fill="rgb(252,179,38)"/><text x="44.00" y="1518.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.33%)</title><rect x="41" y="1524" width="4" height="15" fill="rgb(235,17,10)"/><text x="44.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="484" width="8" height="15" fill="rgb(253,166,31)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="500" width="8" height="15" fill="rgb(219,67,51)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="516" width="8" height="15" fill="rgb(231,170,21)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="532" width="8" height="15" fill="rgb(224,42,12)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="548" width="8" height="15" fill="rgb(222,177,29)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="564" width="8" height="15" fill="rgb(244,8,45)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.66%)</title><rect x="41" y="580" width="8" height="15" fill="rgb(232,50,2)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="596" width="8" height="15" fill="rgb(232,96,28)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="612" width="8" height="15" fill="rgb(219,108,35)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="628" width="8" height="15" fill="rgb(229,160,39)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="644" width="8" height="15" fill="rgb(253,84,39)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="660" width="8" height="15" fill="rgb(236,98,0)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.66%)</title><rect x="41" y="676" width="8" height="15" fill="rgb(248,8,2)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="692" width="8" height="15" fill="rgb(214,189,5)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="708" width="8" height="15" fill="rgb(208,52,31)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="724" width="8" height="15" fill="rgb(215,225,31)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="740" width="8" height="15" fill="rgb(238,211,21)"/><text x="44.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="756" width="8" height="15" fill="rgb(213,20,10)"/><text x="44.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.66%)</title><rect x="41" y="772" width="8" height="15" fill="rgb(218,205,44)"/><text x="44.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="788" width="8" height="15" fill="rgb(220,143,7)"/><text x="44.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="804" width="8" height="15" fill="rgb(219,103,42)"/><text x="44.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="820" width="8" height="15" fill="rgb(244,36,18)"/><text x="44.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="836" width="8" height="15" fill="rgb(225,28,37)"/><text x="44.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="852" width="8" height="15" fill="rgb(235,168,24)"/><text x="44.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.66%)</title><rect x="41" y="868" width="8" height="15" fill="rgb(243,222,6)"/><text x="44.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="884" width="8" height="15" fill="rgb(223,123,52)"/><text x="44.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="900" width="8" height="15" fill="rgb(232,32,25)"/><text x="44.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="916" width="8" height="15" fill="rgb(221,129,15)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="932" width="8" height="15" fill="rgb(237,46,10)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="948" width="8" height="15" fill="rgb(205,74,27)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="964" width="8" height="15" fill="rgb(245,207,23)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="980" width="8" height="15" fill="rgb(245,94,5)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="996" width="8" height="15" fill="rgb(214,137,42)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.66%)</title><rect x="41" y="1012" width="8" height="15" fill="rgb(235,151,48)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="1028" width="8" height="15" fill="rgb(222,141,2)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="1044" width="8" height="15" fill="rgb(251,227,41)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="1060" width="8" height="15" fill="rgb(208,157,12)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="41" y="1076" width="8" height="15" fill="rgb(234,21,24)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="41" y="1092" width="8" height="15" fill="rgb(213,191,3)"/><text x="44.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.66%)</title><rect x="41" y="1108" width="8" height="15" fill="rgb(233,111,33)"/><text x="44.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(224,218,28)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(210,93,1)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(205,142,53)"/><text x="48.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(233,197,20)"/><text x="48.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(217,136,5)"/><text x="48.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(205,165,3)"/><text x="48.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(244,95,0)"/><text x="48.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.33%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(237,191,24)"/><text x="48.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(253,91,49)"/><text x="48.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(216,135,41)"/><text x="48.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(250,112,39)"/><text x="48.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(209,209,47)"/><text x="48.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(234,86,49)"/><text x="48.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(242,127,7)"/><text x="48.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(234,185,17)"/><text x="48.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(246,208,54)"/><text x="48.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1460" width="4" height="15" fill="rgb(228,174,20)"/><text x="52.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(243,118,21)"/><text x="52.00" y="1486.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(222,229,53)"/><text x="52.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.66%)</title><rect x="49" y="1108" width="8" height="15" fill="rgb(251,149,50)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1124" width="8" height="15" fill="rgb(254,124,8)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1140" width="8" height="15" fill="rgb(250,14,45)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1156" width="8" height="15" fill="rgb(217,130,0)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="49" y="1172" width="8" height="15" fill="rgb(224,73,24)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1188" width="8" height="15" fill="rgb(240,192,20)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (2 samples, 0.66%)</title><rect x="49" y="1204" width="8" height="15" fill="rgb(243,12,7)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1220" width="8" height="15" fill="rgb(237,182,21)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1236" width="8" height="15" fill="rgb(246,119,26)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1252" width="8" height="15" fill="rgb(223,131,35)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="49" y="1268" width="8" height="15" fill="rgb(217,183,30)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1284" width="8" height="15" fill="rgb(250,125,36)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (2 samples, 0.66%)</title><rect x="49" y="1300" width="8" height="15" fill="rgb(208,121,0)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1316" width="8" height="15" fill="rgb(225,58,38)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1332" width="8" height="15" fill="rgb(228,21,49)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1348" width="8" height="15" fill="rgb(240,78,5)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.66%)</title><rect x="49" y="1364" width="8" height="15" fill="rgb(226,39,27)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1380" width="8" height="15" fill="rgb(206,25,47)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (2 samples, 0.66%)</title><rect x="49" y="1396" width="8" height="15" fill="rgb(219,49,42)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1412" width="8" height="15" fill="rgb(227,225,27)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1428" width="8" height="15" fill="rgb(222,82,49)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="49" y="1444" width="8" height="15" fill="rgb(209,212,3)"/><text x="52.00" y="1454.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1460" width="4" height="15" fill="rgb(247,2,14)"/><text x="56.00" y="1470.50"></text></g><g><title>_new_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(217,47,44)"/><text x="56.00" y="1486.50"></text></g><g><title>0x7fc10b1d51f2 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(223,185,30)"/><text x="56.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.00%)</title><rect x="49" y="1012" width="11" height="15" fill="rgb(226,197,42)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="1028" width="11" height="15" fill="rgb(240,110,17)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="1044" width="11" height="15" fill="rgb(254,14,26)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="1060" width="11" height="15" fill="rgb(221,139,17)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.00%)</title><rect x="49" y="1076" width="11" height="15" fill="rgb(205,28,6)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.00%)</title><rect x="49" y="1092" width="11" height="15" fill="rgb(211,10,33)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.33%)</title><rect x="57" y="1108" width="3" height="15" fill="rgb(206,67,26)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1124" width="3" height="15" fill="rgb(250,25,30)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1140" width="3" height="15" fill="rgb(248,217,23)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1156" width="3" height="15" fill="rgb(206,10,32)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1172" width="3" height="15" fill="rgb(239,101,54)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1188" width="3" height="15" fill="rgb(227,106,25)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1204" width="3" height="15" fill="rgb(252,116,20)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1220" width="3" height="15" fill="rgb(220,10,5)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1236" width="3" height="15" fill="rgb(239,26,16)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1252" width="3" height="15" fill="rgb(243,200,14)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1268" width="3" height="15" fill="rgb(252,228,50)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1284" width="3" height="15" fill="rgb(236,225,41)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.33%)</title><rect x="57" y="1300" width="3" height="15" fill="rgb(218,118,20)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1316" width="3" height="15" fill="rgb(224,116,6)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1332" width="3" height="15" fill="rgb(243,214,8)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1348" width="3" height="15" fill="rgb(243,102,0)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1364" width="3" height="15" fill="rgb(219,164,32)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1380" width="3" height="15" fill="rgb(216,38,40)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1396" width="3" height="15" fill="rgb(211,220,44)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1412" width="3" height="15" fill="rgb(206,196,3)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1428" width="3" height="15" fill="rgb(251,4,38)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1444" width="3" height="15" fill="rgb(240,147,54)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1460" width="3" height="15" fill="rgb(254,81,53)"/><text x="60.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1476" width="3" height="15" fill="rgb(246,11,1)"/><text x="60.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.33%)</title><rect x="57" y="1492" width="3" height="15" fill="rgb(209,206,36)"/><text x="60.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1508" width="3" height="15" fill="rgb(236,187,18)"/><text x="60.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1524" width="3" height="15" fill="rgb(219,177,33)"/><text x="60.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1540" width="3" height="15" fill="rgb(219,208,18)"/><text x="60.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1556" width="3" height="15" fill="rgb(253,18,13)"/><text x="60.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1572" width="3" height="15" fill="rgb(240,74,2)"/><text x="60.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1588" width="3" height="15" fill="rgb(232,132,38)"/><text x="60.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="57" y="1604" width="3" height="15" fill="rgb(253,100,34)"/><text x="60.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="57" y="1620" width="3" height="15" fill="rgb(249,180,51)"/><text x="60.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1636" width="3" height="15" fill="rgb(237,180,15)"/><text x="60.00" y="1646.50"></text></g><g><title>_check_versions (matplotlib/__init__.py) (1 samples, 0.33%)</title><rect x="57" y="1652" width="3" height="15" fill="rgb(213,178,44)"/><text x="60.00" y="1662.50"></text></g><g><title>__lt__ (distutils/version.py) (1 samples, 0.33%)</title><rect x="57" y="1668" width="3" height="15" fill="rgb(247,151,5)"/><text x="60.00" y="1678.50"></text></g><g><title>_cmp (distutils/version.py) (1 samples, 0.33%)</title><rect x="57" y="1684" width="3" height="15" fill="rgb(235,171,54)"/><text x="60.00" y="1694.50"></text></g><g><title>__init__ (distutils/version.py) (1 samples, 0.33%)</title><rect x="57" y="1700" width="3" height="15" fill="rgb(206,228,52)"/><text x="60.00" y="1710.50"></text></g><g><title>parse (distutils/version.py) (1 samples, 0.33%)</title><rect x="57" y="1716" width="3" height="15" fill="rgb(218,50,17)"/><text x="60.00" y="1726.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.33%)</title><rect x="57" y="1732" width="3" height="15" fill="rgb(242,177,18)"/><text x="60.00" y="1742.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.33%)</title><rect x="57" y="1748" width="3" height="15" fill="rgb(229,224,28)"/><text x="60.00" y="1758.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="57" y="1764" width="3" height="15" fill="rgb(209,186,47)"/><text x="60.00" y="1774.50"></text></g><g><title>0x7fc10b1b62a3 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="57" y="1780" width="3" height="15" fill="rgb(227,168,43)"/><text x="60.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="644" width="15" height="15" fill="rgb(220,16,29)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="660" width="15" height="15" fill="rgb(208,135,39)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="676" width="15" height="15" fill="rgb(222,39,28)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="49" y="692" width="15" height="15" fill="rgb(221,215,22)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="708" width="15" height="15" fill="rgb(248,113,11)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.33%)</title><rect x="49" y="724" width="15" height="15" fill="rgb(217,100,7)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="740" width="15" height="15" fill="rgb(207,107,11)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="756" width="15" height="15" fill="rgb(208,146,5)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="772" width="15" height="15" fill="rgb(245,159,34)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="49" y="788" width="15" height="15" fill="rgb(210,149,39)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="804" width="15" height="15" fill="rgb(212,97,18)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.33%)</title><rect x="49" y="820" width="15" height="15" fill="rgb(207,145,30)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="836" width="15" height="15" fill="rgb(225,222,0)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="852" width="15" height="15" fill="rgb(213,26,47)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="868" width="15" height="15" fill="rgb(240,210,51)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="49" y="884" width="15" height="15" fill="rgb(242,212,44)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="900" width="15" height="15" fill="rgb(231,157,0)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.33%)</title><rect x="49" y="916" width="15" height="15" fill="rgb(230,180,11)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="932" width="15" height="15" fill="rgb(232,166,8)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="948" width="15" height="15" fill="rgb(236,108,7)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="964" width="15" height="15" fill="rgb(224,39,16)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.33%)</title><rect x="49" y="980" width="15" height="15" fill="rgb(207,160,15)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.33%)</title><rect x="49" y="996" width="15" height="15" fill="rgb(237,51,17)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.33%)</title><rect x="60" y="1012" width="4" height="15" fill="rgb(214,124,28)"/><text x="63.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.33%)</title><rect x="41" y="340" width="27" height="15" fill="rgb(249,216,13)"/><text x="44.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="356" width="27" height="15" fill="rgb(224,228,30)"/><text x="44.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="372" width="27" height="15" fill="rgb(212,130,33)"/><text x="44.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="388" width="27" height="15" fill="rgb(217,47,22)"/><text x="44.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.33%)</title><rect x="41" y="404" width="27" height="15" fill="rgb(251,18,6)"/><text x="44.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="420" width="27" height="15" fill="rgb(254,134,7)"/><text x="44.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 2.33%)</title><rect x="41" y="436" width="27" height="15" fill="rgb(231,86,42)"/><text x="44.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="452" width="27" height="15" fill="rgb(245,102,39)"/><text x="44.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.33%)</title><rect x="41" y="468" width="27" height="15" fill="rgb(249,73,42)"/><text x="44.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="484" width="19" height="15" fill="rgb(230,97,34)"/><text x="52.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.66%)</title><rect x="49" y="500" width="19" height="15" fill="rgb(229,58,50)"/><text x="52.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="516" width="19" height="15" fill="rgb(250,47,47)"/><text x="52.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.66%)</title><rect x="49" y="532" width="19" height="15" fill="rgb(240,144,39)"/><text x="52.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="548" width="19" height="15" fill="rgb(215,29,23)"/><text x="52.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="564" width="19" height="15" fill="rgb(253,3,32)"/><text x="52.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="580" width="19" height="15" fill="rgb(217,33,13)"/><text x="52.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.66%)</title><rect x="49" y="596" width="19" height="15" fill="rgb(214,134,51)"/><text x="52.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.66%)</title><rect x="49" y="612" width="19" height="15" fill="rgb(210,130,40)"/><text x="52.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.66%)</title><rect x="49" y="628" width="19" height="15" fill="rgb(245,178,2)"/><text x="52.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="644" width="4" height="15" fill="rgb(229,144,15)"/><text x="67.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="660" width="4" height="15" fill="rgb(236,194,13)"/><text x="67.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="676" width="4" height="15" fill="rgb(211,194,49)"/><text x="67.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="692" width="4" height="15" fill="rgb(214,22,47)"/><text x="67.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="708" width="4" height="15" fill="rgb(239,163,35)"/><text x="67.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="64" y="724" width="4" height="15" fill="rgb(217,66,9)"/><text x="67.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="64" y="740" width="4" height="15" fill="rgb(237,162,7)"/><text x="67.00" y="750.50"></text></g><g><title>0x7fc0dfd7644f (?) (1 samples, 0.33%)</title><rect x="64" y="756" width="4" height="15" fill="rgb(233,70,24)"/><text x="67.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.66%)</title><rect x="41" y="244" width="31" height="15" fill="rgb(233,3,48)"/><text x="44.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="41" y="260" width="31" height="15" fill="rgb(216,111,32)"/><text x="44.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="41" y="276" width="31" height="15" fill="rgb(222,109,18)"/><text x="44.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="41" y="292" width="31" height="15" fill="rgb(206,155,46)"/><text x="44.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.66%)</title><rect x="41" y="308" width="31" height="15" fill="rgb(226,219,0)"/><text x="44.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.66%)</title><rect x="41" y="324" width="31" height="15" fill="rgb(224,57,3)"/><text x="44.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.33%)</title><rect x="68" y="340" width="4" height="15" fill="rgb(244,25,47)"/><text x="71.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="356" width="4" height="15" fill="rgb(251,206,37)"/><text x="71.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="372" width="4" height="15" fill="rgb(234,206,6)"/><text x="71.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="388" width="4" height="15" fill="rgb(227,150,39)"/><text x="71.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="404" width="4" height="15" fill="rgb(249,13,38)"/><text x="71.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="420" width="4" height="15" fill="rgb(215,130,29)"/><text x="71.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="436" width="4" height="15" fill="rgb(245,179,41)"/><text x="71.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="452" width="4" height="15" fill="rgb(205,150,29)"/><text x="71.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="468" width="4" height="15" fill="rgb(231,141,19)"/><text x="71.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.33%)</title><rect x="68" y="484" width="4" height="15" fill="rgb(217,82,44)"/><text x="71.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="500" width="4" height="15" fill="rgb(253,78,4)"/><text x="71.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="516" width="4" height="15" fill="rgb(213,152,31)"/><text x="71.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="532" width="4" height="15" fill="rgb(239,9,49)"/><text x="71.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="548" width="4" height="15" fill="rgb(237,86,32)"/><text x="71.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="564" width="4" height="15" fill="rgb(228,11,17)"/><text x="71.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.33%)</title><rect x="68" y="580" width="4" height="15" fill="rgb(244,150,29)"/><text x="71.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="596" width="4" height="15" fill="rgb(239,169,2)"/><text x="71.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="612" width="4" height="15" fill="rgb(215,206,26)"/><text x="71.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="628" width="4" height="15" fill="rgb(206,149,17)"/><text x="71.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="644" width="4" height="15" fill="rgb(207,11,21)"/><text x="71.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="660" width="4" height="15" fill="rgb(218,129,37)"/><text x="71.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="676" width="4" height="15" fill="rgb(248,122,42)"/><text x="71.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="692" width="4" height="15" fill="rgb(210,164,38)"/><text x="71.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="708" width="4" height="15" fill="rgb(246,49,16)"/><text x="71.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.33%)</title><rect x="68" y="724" width="4" height="15" fill="rgb(229,19,23)"/><text x="71.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="740" width="4" height="15" fill="rgb(225,51,23)"/><text x="71.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="756" width="4" height="15" fill="rgb(221,209,23)"/><text x="71.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="772" width="4" height="15" fill="rgb(231,179,24)"/><text x="71.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="788" width="4" height="15" fill="rgb(213,103,34)"/><text x="71.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="804" width="4" height="15" fill="rgb(243,32,22)"/><text x="71.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/encrypted_backup.py) (1 samples, 0.33%)</title><rect x="68" y="820" width="4" height="15" fill="rgb(216,210,49)"/><text x="71.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="836" width="4" height="15" fill="rgb(241,120,10)"/><text x="71.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="852" width="4" height="15" fill="rgb(221,111,48)"/><text x="71.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="68" y="868" width="4" height="15" fill="rgb(223,27,4)"/><text x="71.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="884" width="4" height="15" fill="rgb(243,79,49)"/><text x="71.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="900" width="4" height="15" fill="rgb(247,159,43)"/><text x="71.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="916" width="4" height="15" fill="rgb(216,218,28)"/><text x="71.00" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="68" y="932" width="4" height="15" fill="rgb(227,184,3)"/><text x="71.00" y="942.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.33%)</title><rect x="68" y="948" width="4" height="15" fill="rgb(225,220,12)"/><text x="71.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="68" width="66" height="15" fill="rgb(216,91,24)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="84" width="66" height="15" fill="rgb(233,108,48)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="100" width="66" height="15" fill="rgb(240,58,30)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 5.65%)</title><rect x="10" y="116" width="66" height="15" fill="rgb(207,162,38)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="132" width="66" height="15" fill="rgb(215,207,46)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (17 samples, 5.65%)</title><rect x="10" y="148" width="66" height="15" fill="rgb(216,110,22)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="164" width="66" height="15" fill="rgb(223,111,29)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 5.65%)</title><rect x="10" y="180" width="66" height="15" fill="rgb(250,87,6)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="41" y="196" width="35" height="15" fill="rgb(242,179,30)"/><text x="44.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.99%)</title><rect x="41" y="212" width="35" height="15" fill="rgb(224,196,32)"/><text x="44.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.99%)</title><rect x="41" y="228" width="35" height="15" fill="rgb(249,165,29)"/><text x="44.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="244" width="4" height="15" fill="rgb(230,90,6)"/><text x="75.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="260" width="4" height="15" fill="rgb(241,108,53)"/><text x="75.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="276" width="4" height="15" fill="rgb(236,48,10)"/><text x="75.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="292" width="4" height="15" fill="rgb(213,40,7)"/><text x="75.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="308" width="4" height="15" fill="rgb(222,75,52)"/><text x="75.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="324" width="4" height="15" fill="rgb(241,205,48)"/><text x="75.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_least_angle.py) (1 samples, 0.33%)</title><rect x="72" y="340" width="4" height="15" fill="rgb(251,109,50)"/><text x="75.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(212,71,20)"/><text x="75.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="372" width="4" height="15" fill="rgb(231,210,2)"/><text x="75.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="388" width="4" height="15" fill="rgb(214,92,36)"/><text x="75.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="404" width="4" height="15" fill="rgb(244,26,11)"/><text x="75.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="420" width="4" height="15" fill="rgb(247,78,46)"/><text x="75.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="436" width="4" height="15" fill="rgb(221,192,13)"/><text x="75.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="452" width="4" height="15" fill="rgb(244,205,23)"/><text x="75.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="468" width="4" height="15" fill="rgb(239,147,39)"/><text x="75.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="484" width="4" height="15" fill="rgb(236,89,51)"/><text x="75.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="500" width="4" height="15" fill="rgb(224,124,34)"/><text x="75.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="516" width="4" height="15" fill="rgb(245,91,50)"/><text x="75.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/model_selection/_validation.py) (1 samples, 0.33%)</title><rect x="72" y="532" width="4" height="15" fill="rgb(234,211,37)"/><text x="75.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="548" width="4" height="15" fill="rgb(227,79,32)"/><text x="75.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="564" width="4" height="15" fill="rgb(243,86,16)"/><text x="75.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="580" width="4" height="15" fill="rgb(209,27,51)"/><text x="75.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="596" width="4" height="15" fill="rgb(231,13,21)"/><text x="75.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="612" width="4" height="15" fill="rgb(232,23,50)"/><text x="75.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py) (1 samples, 0.33%)</title><rect x="72" y="628" width="4" height="15" fill="rgb(219,111,54)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="644" width="4" height="15" fill="rgb(251,162,1)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="660" width="4" height="15" fill="rgb(224,34,42)"/><text x="75.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="72" y="676" width="4" height="15" fill="rgb(252,119,34)"/><text x="75.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="692" width="4" height="15" fill="rgb(208,204,24)"/><text x="75.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="708" width="4" height="15" fill="rgb(212,21,29)"/><text x="75.00" y="718.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.33%)</title><rect x="72" y="724" width="4" height="15" fill="rgb(221,155,13)"/><text x="75.00" y="734.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.66%)</title><rect x="80" y="116" width="8" height="15" fill="rgb(233,214,41)"/><text x="83.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="84" y="132" width="4" height="15" fill="rgb(250,25,49)"/><text x="87.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="84" y="148" width="4" height="15" fill="rgb(252,28,33)"/><text x="87.00" y="158.50"></text></g><g><title>0x7fc0cb1e4ff9 (?) (1 samples, 0.33%)</title><rect x="131" y="212" width="4" height="15" fill="rgb(228,178,22)"/><text x="134.00" y="222.50"></text></g><g><title>0x7fc0cb1dfef6 (?) (1 samples, 0.33%)</title><rect x="131" y="228" width="4" height="15" fill="rgb(226,40,36)"/><text x="134.00" y="238.50"></text></g><g><title>0x7fc0cb1d4962 (?) (1 samples, 0.33%)</title><rect x="131" y="244" width="4" height="15" fill="rgb(245,56,52)"/><text x="134.00" y="254.50"></text></g><g><title>0x7fc0cb208824 (?) (1 samples, 0.33%)</title><rect x="131" y="260" width="4" height="15" fill="rgb(216,48,9)"/><text x="134.00" y="270.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="139" y="244" width="4" height="15" fill="rgb(205,10,46)"/><text x="142.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="143" y="260" width="4" height="15" fill="rgb(250,12,26)"/><text x="146.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.33%)</title><rect x="135" y="212" width="16" height="15" fill="rgb(215,172,47)"/><text x="138.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="139" y="228" width="12" height="15" fill="rgb(229,73,25)"/><text x="142.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="143" y="244" width="8" height="15" fill="rgb(209,214,44)"/><text x="146.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="147" y="260" width="4" height="15" fill="rgb(222,124,13)"/><text x="150.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="147" y="276" width="4" height="15" fill="rgb(246,133,4)"/><text x="150.00" y="286.50"></text></g><g><title>0x7fc10b1b491e (libc-2.29.so) (1 samples, 0.33%)</title><rect x="151" y="228" width="4" height="15" fill="rgb(223,72,13)"/><text x="154.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="158" y="292" width="4" height="15" fill="rgb(220,150,28)"/><text x="161.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="158" y="308" width="4" height="15" fill="rgb(206,28,28)"/><text x="161.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="162" y="292" width="4" height="15" fill="rgb(212,73,47)"/><text x="165.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="162" y="308" width="4" height="15" fill="rgb(250,169,51)"/><text x="165.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="162" y="324" width="4" height="15" fill="rgb(214,163,24)"/><text x="165.00" y="334.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="166" y="340" width="4" height="15" fill="rgb(220,134,7)"/><text x="169.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="166" y="356" width="4" height="15" fill="rgb(211,127,30)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="166" y="372" width="4" height="15" fill="rgb(221,40,17)"/><text x="169.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="166" y="388" width="4" height="15" fill="rgb(229,144,19)"/><text x="169.00" y="398.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="174" y="372" width="4" height="15" fill="rgb(213,11,42)"/><text x="177.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="170" y="340" width="12" height="15" fill="rgb(219,98,35)"/><text x="173.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="174" y="356" width="8" height="15" fill="rgb(236,3,51)"/><text x="177.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="178" y="372" width="4" height="15" fill="rgb(215,205,37)"/><text x="181.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="178" y="388" width="4" height="15" fill="rgb(214,138,46)"/><text x="181.00" y="398.50"></text></g><g><title>0x7fc10b1b4a38 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="178" y="404" width="4" height="15" fill="rgb(230,49,30)"/><text x="181.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="182" y="340" width="8" height="15" fill="rgb(222,192,29)"/><text x="185.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="186" y="356" width="4" height="15" fill="rgb(253,28,22)"/><text x="189.00" y="366.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="190" y="340" width="8" height="15" fill="rgb(236,3,26)"/><text x="193.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="340" width="4" height="15" fill="rgb(242,20,31)"/><text x="201.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="356" width="4" height="15" fill="rgb(242,50,14)"/><text x="201.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="372" width="4" height="15" fill="rgb(225,171,52)"/><text x="201.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="388" width="4" height="15" fill="rgb(242,166,47)"/><text x="201.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="404" width="4" height="15" fill="rgb(233,152,16)"/><text x="201.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="420" width="4" height="15" fill="rgb(219,145,54)"/><text x="201.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="436" width="4" height="15" fill="rgb(244,217,47)"/><text x="201.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="452" width="4" height="15" fill="rgb(223,33,51)"/><text x="201.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="198" y="468" width="4" height="15" fill="rgb(206,14,38)"/><text x="201.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="198" y="484" width="4" height="15" fill="rgb(231,78,47)"/><text x="201.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="198" y="500" width="4" height="15" fill="rgb(218,104,7)"/><text x="201.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="202" y="356" width="4" height="15" fill="rgb(221,59,47)"/><text x="205.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="202" y="372" width="4" height="15" fill="rgb(211,132,20)"/><text x="205.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="206" y="356" width="3" height="15" fill="rgb(220,81,18)"/><text x="209.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.65%)</title><rect x="158" y="260" width="55" height="15" fill="rgb(239,109,53)"/><text x="161.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.65%)</title><rect x="158" y="276" width="55" height="15" fill="rgb(254,178,18)"/><text x="161.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.99%)</title><rect x="166" y="292" width="47" height="15" fill="rgb(223,149,29)"/><text x="169.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.99%)</title><rect x="166" y="308" width="47" height="15" fill="rgb(220,121,40)"/><text x="169.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.99%)</title><rect x="166" y="324" width="47" height="15" fill="rgb(249,77,20)"/><text x="169.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.00%)</title><rect x="202" y="340" width="11" height="15" fill="rgb(244,212,49)"/><text x="205.00" y="350.50"></text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="209" y="356" width="4" height="15" fill="rgb(208,56,12)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="213" y="260" width="8" height="15" fill="rgb(205,78,26)"/><text x="216.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.66%)</title><rect x="213" y="276" width="8" height="15" fill="rgb(210,164,16)"/><text x="216.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="217" y="292" width="4" height="15" fill="rgb(231,141,6)"/><text x="220.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="217" y="308" width="4" height="15" fill="rgb(224,202,18)"/><text x="220.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="217" y="324" width="4" height="15" fill="rgb(247,216,40)"/><text x="220.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="217" y="340" width="4" height="15" fill="rgb(205,103,52)"/><text x="220.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="217" y="356" width="4" height="15" fill="rgb(214,30,30)"/><text x="220.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="221" y="260" width="4" height="15" fill="rgb(252,169,4)"/><text x="224.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.33%)</title><rect x="221" y="276" width="4" height="15" fill="rgb(220,165,44)"/><text x="224.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="221" y="292" width="4" height="15" fill="rgb(234,181,54)"/><text x="224.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="221" y="308" width="4" height="15" fill="rgb(232,116,50)"/><text x="224.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="221" y="324" width="4" height="15" fill="rgb(248,86,13)"/><text x="224.00" y="334.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="225" y="260" width="4" height="15" fill="rgb(250,67,20)"/><text x="228.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="225" y="276" width="4" height="15" fill="rgb(228,140,42)"/><text x="228.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="229" y="260" width="4" height="15" fill="rgb(213,88,11)"/><text x="232.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.98%)</title><rect x="155" y="244" width="82" height="15" fill="rgb(227,128,45)"/><text x="158.00" y="254.50">onnxrunti..</text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.925] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="233" y="260" width="4" height="15" fill="rgb(214,223,28)"/><text x="236.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="233" y="276" width="4" height="15" fill="rgb(242,52,18)"/><text x="236.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="233" y="292" width="4" height="15" fill="rgb(221,148,27)"/><text x="236.00" y="302.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (42 samples, 13.95%)</title><rect x="76" y="68" width="165" height="15" fill="rgb(213,18,29)"/><text x="79.00" y="78.50">profile_ort (bench_Lo..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (42 samples, 13.95%)</title><rect x="76" y="84" width="165" height="15" fill="rgb(213,12,34)"/><text x="79.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (42 samples, 13.95%)</title><rect x="76" y="100" width="165" height="15" fill="rgb(230,215,7)"/><text x="79.00" y="110.50">profile (bench_Logist..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 12.96%)</title><rect x="88" y="116" width="153" height="15" fill="rgb(234,183,54)"/><text x="91.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (36 samples, 11.96%)</title><rect x="100" y="132" width="141" height="15" fill="rgb(219,214,23)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (35 samples, 11.63%)</title><rect x="104" y="148" width="137" height="15" fill="rgb(228,201,40)"/><text x="107.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (32 samples, 10.63%)</title><rect x="115" y="164" width="126" height="15" fill="rgb(244,219,39)"/><text x="118.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (29 samples, 9.63%)</title><rect x="127" y="180" width="114" height="15" fill="rgb(254,194,7)"/><text x="130.00" y="190.50">run (mlprodict..</text></g><g><title>run (onnxruntime/capi/session.py) (29 samples, 9.63%)</title><rect x="127" y="196" width="114" height="15" fill="rgb(215,134,33)"/><text x="130.00" y="206.50">run (onnxrunti..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 7.64%)</title><rect x="151" y="212" width="90" height="15" fill="rgb(229,202,17)"/><text x="154.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 7.31%)</title><rect x="155" y="228" width="86" height="15" fill="rgb(236,45,50)"/><text x="158.00" y="238.50">void pybin..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="237" y="244" width="4" height="15" fill="rgb(241,143,30)"/><text x="240.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.33%)</title><rect x="237" y="260" width="4" height="15" fill="rgb(228,70,16)"/><text x="240.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.33%)</title><rect x="237" y="276" width="4" height="15" fill="rgb(231,92,19)"/><text x="240.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="249" y="116" width="4" height="15" fill="rgb(248,43,28)"/><text x="252.00" y="126.50"></text></g><g><title>0x7fc10b1b497c (libc-2.29.so) (1 samples, 0.33%)</title><rect x="249" y="132" width="4" height="15" fill="rgb(213,12,40)"/><text x="252.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.33%)</title><rect x="292" y="180" width="4" height="15" fill="rgb(248,162,1)"/><text x="295.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="292" y="196" width="4" height="15" fill="rgb(214,186,47)"/><text x="295.00" y="206.50"></text></g><g><title>0x7fc10b292e65 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="292" y="212" width="4" height="15" fill="rgb(216,164,35)"/><text x="295.00" y="222.50"></text></g><g><title>0x7fc10b1d5124 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="374" y="196" width="4" height="15" fill="rgb(248,164,44)"/><text x="377.00" y="206.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.33%)</title><rect x="398" y="260" width="4" height="15" fill="rgb(242,220,6)"/><text x="401.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.33%)</title><rect x="398" y="276" width="4" height="15" fill="rgb(230,179,19)"/><text x="401.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="398" y="292" width="4" height="15" fill="rgb(227,60,15)"/><text x="401.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.66%)</title><rect x="398" y="212" width="7" height="15" fill="rgb(247,62,20)"/><text x="401.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.66%)</title><rect x="398" y="228" width="7" height="15" fill="rgb(224,124,35)"/><text x="401.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.66%)</title><rect x="398" y="244" width="7" height="15" fill="rgb(217,50,49)"/><text x="401.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="402" y="260" width="3" height="15" fill="rgb(216,154,47)"/><text x="405.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.33%)</title><rect x="402" y="276" width="3" height="15" fill="rgb(211,44,8)"/><text x="405.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.33%)</title><rect x="402" y="292" width="3" height="15" fill="rgb(217,67,1)"/><text x="405.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (3 samples, 1.00%)</title><rect x="405" y="212" width="12" height="15" fill="rgb(232,39,54)"/><text x="408.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.33%)</title><rect x="413" y="228" width="4" height="15" fill="rgb(245,218,13)"/><text x="416.00" y="238.50"></text></g><g><title>0x7fc10b1cae50 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="456" y="324" width="4" height="15" fill="rgb(234,60,17)"/><text x="459.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (7 samples, 2.33%)</title><rect x="445" y="244" width="27" height="15" fill="rgb(231,154,32)"/><text x="448.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.66%)</title><rect x="452" y="260" width="20" height="15" fill="rgb(217,137,45)"/><text x="455.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (5 samples, 1.66%)</title><rect x="452" y="276" width="20" height="15" fill="rgb(245,45,1)"/><text x="455.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 1.66%)</title><rect x="452" y="292" width="20" height="15" fill="rgb(208,67,9)"/><text x="455.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (4 samples, 1.33%)</title><rect x="456" y="308" width="16" height="15" fill="rgb(248,125,43)"/><text x="459.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 1.00%)</title><rect x="460" y="324" width="12" height="15" fill="rgb(244,170,42)"/><text x="463.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.66%)</title><rect x="464" y="340" width="8" height="15" fill="rgb(253,82,10)"/><text x="467.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.66%)</title><rect x="464" y="356" width="8" height="15" fill="rgb(245,137,39)"/><text x="467.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="468" y="372" width="4" height="15" fill="rgb(218,169,7)"/><text x="471.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.33%)</title><rect x="476" y="276" width="16" height="15" fill="rgb(207,61,48)"/><text x="479.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.00%)</title><rect x="480" y="292" width="12" height="15" fill="rgb(250,78,2)"/><text x="483.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 1.00%)</title><rect x="480" y="308" width="12" height="15" fill="rgb(241,27,26)"/><text x="483.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 1.00%)</title><rect x="480" y="324" width="12" height="15" fill="rgb(218,134,51)"/><text x="483.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.33%)</title><rect x="488" y="340" width="4" height="15" fill="rgb(213,161,23)"/><text x="491.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (8 samples, 2.66%)</title><rect x="472" y="244" width="31" height="15" fill="rgb(236,43,31)"/><text x="475.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 2.33%)</title><rect x="476" y="260" width="27" height="15" fill="rgb(227,226,26)"/><text x="479.00" y="270.50">d..</text></g><g><title>dot (numpy/core/multiarray.py) (3 samples, 1.00%)</title><rect x="492" y="276" width="11" height="15" fill="rgb(245,121,39)"/><text x="495.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="503" y="260" width="4" height="15" fill="rgb(247,20,42)"/><text x="506.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="503" y="276" width="4" height="15" fill="rgb(214,220,49)"/><text x="506.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.33%)</title><rect x="503" y="292" width="4" height="15" fill="rgb(215,121,14)"/><text x="506.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (2 samples, 0.66%)</title><rect x="515" y="276" width="8" height="15" fill="rgb(236,60,3)"/><text x="518.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (2 samples, 0.66%)</title><rect x="515" y="292" width="8" height="15" fill="rgb(210,20,54)"/><text x="518.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.33%)</title><rect x="519" y="308" width="4" height="15" fill="rgb(230,91,3)"/><text x="522.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.33%)</title><rect x="523" y="276" width="4" height="15" fill="rgb(217,197,0)"/><text x="526.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.33%)</title><rect x="527" y="292" width="4" height="15" fill="rgb(213,158,3)"/><text x="530.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.33%)</title><rect x="527" y="308" width="4" height="15" fill="rgb(234,220,31)"/><text x="530.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.33%)</title><rect x="527" y="324" width="4" height="15" fill="rgb(228,99,6)"/><text x="530.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="527" y="340" width="4" height="15" fill="rgb(214,52,7)"/><text x="530.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="531" y="308" width="4" height="15" fill="rgb(218,53,35)"/><text x="534.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.66%)</title><rect x="531" y="292" width="8" height="15" fill="rgb(238,36,35)"/><text x="534.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="535" y="308" width="4" height="15" fill="rgb(249,24,15)"/><text x="538.00" y="318.50"></text></g><g><title>0x7fc10b333e06 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="539" y="356" width="4" height="15" fill="rgb(208,6,14)"/><text x="542.00" y="366.50"></text></g><g><title>0x7fc10b333e2f (libm-2.29.so) (1 samples, 0.33%)</title><rect x="543" y="356" width="4" height="15" fill="rgb(226,34,50)"/><text x="546.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.99%)</title><rect x="527" y="276" width="23" height="15" fill="rgb(205,196,42)"/><text x="530.00" y="286.50">e..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="539" y="292" width="11" height="15" fill="rgb(246,115,10)"/><text x="542.00" y="302.50"></text></g><g><title>0x7fc0f649c33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="539" y="308" width="11" height="15" fill="rgb(221,96,48)"/><text x="542.00" y="318.50"></text></g><g><title>0x7fc0f64be214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.00%)</title><rect x="539" y="324" width="11" height="15" fill="rgb(225,209,42)"/><text x="542.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (3 samples, 1.00%)</title><rect x="539" y="340" width="11" height="15" fill="rgb(233,92,13)"/><text x="542.00" y="350.50"></text></g><g><title>0x7fc10b333e71 (libm-2.29.so) (1 samples, 0.33%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(219,73,30)"/><text x="550.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (33 samples, 10.96%)</title><rect x="425" y="228" width="129" height="15" fill="rgb(233,7,6)"/><text x="428.00" y="238.50">_run (mlprodict/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.32%)</title><rect x="503" y="244" width="51" height="15" fill="rgb(236,27,42)"/><text x="506.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 3.99%)</title><rect x="507" y="260" width="47" height="15" fill="rgb(209,181,1)"/><text x="510.00" y="270.50">PyUF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="550" y="276" width="4" height="15" fill="rgb(245,20,0)"/><text x="553.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="578" y="260" width="4" height="15" fill="rgb(217,121,38)"/><text x="581.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="578" y="276" width="4" height="15" fill="rgb(226,25,39)"/><text x="581.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.00%)</title><rect x="586" y="324" width="12" height="15" fill="rgb(243,188,42)"/><text x="589.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.00%)</title><rect x="586" y="340" width="12" height="15" fill="rgb(236,11,5)"/><text x="589.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.66%)</title><rect x="590" y="356" width="8" height="15" fill="rgb(236,9,39)"/><text x="593.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.66%)</title><rect x="590" y="372" width="8" height="15" fill="rgb(241,53,11)"/><text x="593.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.66%)</title><rect x="590" y="388" width="8" height="15" fill="rgb(214,197,22)"/><text x="593.00" y="398.50"></text></g><g><title>0x7fc10b1cae7a (libc-2.29.so) (1 samples, 0.33%)</title><rect x="594" y="404" width="4" height="15" fill="rgb(251,227,32)"/><text x="597.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 1.00%)</title><rect x="598" y="404" width="11" height="15" fill="rgb(207,37,3)"/><text x="601.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.00%)</title><rect x="598" y="420" width="11" height="15" fill="rgb(252,159,41)"/><text x="601.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="605" y="436" width="4" height="15" fill="rgb(206,109,51)"/><text x="608.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.33%)</title><rect x="605" y="452" width="4" height="15" fill="rgb(224,126,43)"/><text x="608.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="605" y="468" width="4" height="15" fill="rgb(247,129,25)"/><text x="608.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 1.33%)</title><rect x="598" y="372" width="15" height="15" fill="rgb(251,158,11)"/><text x="601.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 1.33%)</title><rect x="598" y="388" width="15" height="15" fill="rgb(212,87,54)"/><text x="601.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.33%)</title><rect x="609" y="404" width="4" height="15" fill="rgb(233,38,27)"/><text x="612.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 1.33%)</title><rect x="613" y="372" width="16" height="15" fill="rgb(253,20,4)"/><text x="616.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (4 samples, 1.33%)</title><rect x="613" y="388" width="16" height="15" fill="rgb(223,46,48)"/><text x="616.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.66%)</title><rect x="621" y="404" width="8" height="15" fill="rgb(245,204,25)"/><text x="624.00" y="414.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="625" y="420" width="4" height="15" fill="rgb(212,127,14)"/><text x="628.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.99%)</title><rect x="598" y="356" width="35" height="15" fill="rgb(231,113,27)"/><text x="601.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="629" y="372" width="4" height="15" fill="rgb(229,205,5)"/><text x="632.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.33%)</title><rect x="629" y="388" width="4" height="15" fill="rgb(215,133,12)"/><text x="632.00" y="398.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.65%)</title><rect x="582" y="260" width="55" height="15" fill="rgb(226,39,19)"/><text x="585.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.65%)</title><rect x="582" y="276" width="55" height="15" fill="rgb(242,78,23)"/><text x="585.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.65%)</title><rect x="582" y="292" width="55" height="15" fill="rgb(241,221,31)"/><text x="585.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 4.32%)</title><rect x="586" y="308" width="51" height="15" fill="rgb(218,162,12)"/><text x="589.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 3.32%)</title><rect x="598" y="324" width="39" height="15" fill="rgb(212,196,33)"/><text x="601.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.32%)</title><rect x="598" y="340" width="39" height="15" fill="rgb(248,70,26)"/><text x="601.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.33%)</title><rect x="633" y="356" width="4" height="15" fill="rgb(213,87,0)"/><text x="636.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="641" y="276" width="4" height="15" fill="rgb(215,152,5)"/><text x="644.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="641" y="292" width="4" height="15" fill="rgb(229,90,23)"/><text x="644.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.33%)</title><rect x="641" y="308" width="4" height="15" fill="rgb(230,165,14)"/><text x="644.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="641" y="324" width="4" height="15" fill="rgb(236,104,53)"/><text x="644.00" y="334.50"></text></g><g><title>0x7fc10b292130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="641" y="340" width="4" height="15" fill="rgb(242,35,40)"/><text x="644.00" y="350.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.33%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(227,11,54)"/><text x="648.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.33%)</title><rect x="649" y="308" width="3" height="15" fill="rgb(237,84,17)"/><text x="652.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="649" y="324" width="3" height="15" fill="rgb(206,56,28)"/><text x="652.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="649" y="340" width="3" height="15" fill="rgb(250,209,48)"/><text x="652.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.66%)</title><rect x="649" y="292" width="7" height="15" fill="rgb(221,89,39)"/><text x="652.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="652" y="308" width="4" height="15" fill="rgb(246,206,7)"/><text x="655.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.33%)</title><rect x="652" y="324" width="4" height="15" fill="rgb(234,103,40)"/><text x="655.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.33%)</title><rect x="652" y="340" width="4" height="15" fill="rgb(249,3,9)"/><text x="655.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.33%)</title><rect x="656" y="308" width="4" height="15" fill="rgb(210,228,5)"/><text x="659.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.66%)</title><rect x="656" y="292" width="8" height="15" fill="rgb(230,104,45)"/><text x="659.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.33%)</title><rect x="660" y="308" width="4" height="15" fill="rgb(253,15,13)"/><text x="663.00" y="318.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.33%)</title><rect x="660" y="324" width="4" height="15" fill="rgb(238,173,13)"/><text x="663.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.99%)</title><rect x="645" y="276" width="23" height="15" fill="rgb(226,181,24)"/><text x="648.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="664" y="292" width="4" height="15" fill="rgb(235,169,8)"/><text x="667.00" y="302.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (105 samples, 34.88%)</title><rect x="260" y="164" width="412" height="15" fill="rgb(235,16,24)"/><text x="263.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (96 samples, 31.89%)</title><rect x="296" y="180" width="376" height="15" fill="rgb(245,215,54)"/><text x="299.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (75 samples, 24.92%)</title><rect x="378" y="196" width="294" height="15" fill="rgb(238,43,7)"/><text x="381.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (65 samples, 21.59%)</title><rect x="417" y="212" width="255" height="15" fill="rgb(248,73,16)"/><text x="420.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (30 samples, 9.97%)</title><rect x="554" y="228" width="118" height="15" fill="rgb(225,164,43)"/><text x="557.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 9.63%)</title><rect x="558" y="244" width="114" height="15" fill="rgb(208,159,54)"/><text x="561.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.99%)</title><rect x="637" y="260" width="35" height="15" fill="rgb(230,89,12)"/><text x="640.00" y="270.50">uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="668" y="276" width="4" height="15" fill="rgb(240,146,16)"/><text x="671.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 35.88%)</title><rect x="253" y="132" width="423" height="15" fill="rgb(233,115,36)"/><text x="256.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (107 samples, 35.55%)</title><rect x="256" y="148" width="420" height="15" fill="rgb(219,143,40)"/><text x="259.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="672" y="164" width="4" height="15" fill="rgb(241,160,20)"/><text x="675.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.33%)</title><rect x="672" y="180" width="4" height="15" fill="rgb(214,224,29)"/><text x="675.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.33%)</title><rect x="672" y="196" width="4" height="15" fill="rgb(237,179,6)"/><text x="675.00" y="206.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (112 samples, 37.21%)</title><rect x="241" y="68" width="439" height="15" fill="rgb(250,153,34)"/><text x="244.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solver..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (112 samples, 37.21%)</title><rect x="241" y="84" width="439" height="15" fill="rgb(237,207,17)"/><text x="244.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (112 samples, 37.21%)</title><rect x="241" y="100" width="439" height="15" fill="rgb(210,147,21)"/><text x="244.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 36.21%)</title><rect x="253" y="116" width="427" height="15" fill="rgb(238,120,47)"/><text x="256.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.33%)</title><rect x="676" y="132" width="4" height="15" fill="rgb(213,191,14)"/><text x="679.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="680" y="116" width="4" height="15" fill="rgb(235,170,19)"/><text x="683.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.33%)</title><rect x="680" y="132" width="4" height="15" fill="rgb(221,190,20)"/><text x="683.00" y="142.50"></text></g><g><title>array_inplace_true_divide (number.c) (1 samples, 0.33%)</title><rect x="719" y="180" width="4" height="15" fill="rgb(218,1,35)"/><text x="722.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.33%)</title><rect x="727" y="196" width="4" height="15" fill="rgb(223,85,53)"/><text x="730.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.33%)</title><rect x="727" y="212" width="4" height="15" fill="rgb(245,198,53)"/><text x="730.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 1.00%)</title><rect x="723" y="180" width="12" height="15" fill="rgb(230,187,30)"/><text x="726.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.33%)</title><rect x="731" y="196" width="4" height="15" fill="rgb(223,58,2)"/><text x="734.00" y="206.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.33%)</title><rect x="731" y="212" width="4" height="15" fill="rgb(231,63,37)"/><text x="734.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="731" y="228" width="4" height="15" fill="rgb(233,124,17)"/><text x="734.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.33%)</title><rect x="747" y="244" width="3" height="15" fill="rgb(231,63,32)"/><text x="750.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="747" y="260" width="3" height="15" fill="rgb(228,170,4)"/><text x="750.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.33%)</title><rect x="747" y="276" width="3" height="15" fill="rgb(229,210,29)"/><text x="750.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.33%)</title><rect x="747" y="292" width="3" height="15" fill="rgb(205,62,47)"/><text x="750.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.33%)</title><rect x="747" y="308" width="3" height="15" fill="rgb(239,25,45)"/><text x="750.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.33%)</title><rect x="762" y="260" width="4" height="15" fill="rgb(219,43,47)"/><text x="765.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="766" y="308" width="4" height="15" fill="rgb(250,205,53)"/><text x="769.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.66%)</title><rect x="766" y="292" width="8" height="15" fill="rgb(237,226,41)"/><text x="769.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.33%)</title><rect x="770" y="308" width="4" height="15" fill="rgb(206,41,26)"/><text x="773.00" y="318.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.33%)</title><rect x="770" y="324" width="4" height="15" fill="rgb(209,224,32)"/><text x="773.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="774" y="292" width="4" height="15" fill="rgb(248,35,1)"/><text x="777.00" y="302.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="778" y="340" width="4" height="15" fill="rgb(236,85,36)"/><text x="781.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.66%)</title><rect x="766" y="276" width="20" height="15" fill="rgb(216,114,18)"/><text x="769.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.66%)</title><rect x="778" y="292" width="8" height="15" fill="rgb(213,197,22)"/><text x="781.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.66%)</title><rect x="778" y="308" width="8" height="15" fill="rgb(232,0,31)"/><text x="781.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.66%)</title><rect x="778" y="324" width="8" height="15" fill="rgb(253,74,52)"/><text x="781.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.33%)</title><rect x="782" y="340" width="4" height="15" fill="rgb(224,103,0)"/><text x="785.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="782" y="356" width="4" height="15" fill="rgb(217,155,10)"/><text x="785.00" y="366.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.65%)</title><rect x="735" y="180" width="55" height="15" fill="rgb(212,204,41)"/><text x="738.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.65%)</title><rect x="735" y="196" width="55" height="15" fill="rgb(245,90,34)"/><text x="738.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 3.99%)</title><rect x="743" y="212" width="47" height="15" fill="rgb(212,38,33)"/><text x="746.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 3.65%)</title><rect x="747" y="228" width="43" height="15" fill="rgb(244,11,21)"/><text x="750.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (10 samples, 3.32%)</title><rect x="750" y="244" width="40" height="15" fill="rgb(249,190,45)"/><text x="753.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 1.99%)</title><rect x="766" y="260" width="24" height="15" fill="rgb(225,138,36)"/><text x="769.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.33%)</title><rect x="786" y="276" width="4" height="15" fill="rgb(209,186,54)"/><text x="789.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="786" y="292" width="4" height="15" fill="rgb(228,131,8)"/><text x="789.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="786" y="308" width="4" height="15" fill="rgb(230,46,44)"/><text x="789.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.33%)</title><rect x="805" y="196" width="4" height="15" fill="rgb(235,149,22)"/><text x="808.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.33%)</title><rect x="805" y="212" width="4" height="15" fill="rgb(228,15,47)"/><text x="808.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.33%)</title><rect x="805" y="228" width="4" height="15" fill="rgb(222,45,36)"/><text x="808.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.33%)</title><rect x="805" y="244" width="4" height="15" fill="rgb(218,10,47)"/><text x="808.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (2 samples, 0.66%)</title><rect x="813" y="212" width="8" height="15" fill="rgb(244,153,24)"/><text x="816.00" y="222.50"></text></g><g><title>can_elide_temp (temp_elide.c) (2 samples, 0.66%)</title><rect x="813" y="228" width="8" height="15" fill="rgb(253,142,49)"/><text x="816.00" y="238.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.33%)</title><rect x="821" y="292" width="4" height="15" fill="rgb(232,122,53)"/><text x="824.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.66%)</title><rect x="821" y="276" width="8" height="15" fill="rgb(236,149,25)"/><text x="824.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.33%)</title><rect x="825" y="292" width="4" height="15" fill="rgb(245,105,0)"/><text x="828.00" y="302.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.33%)</title><rect x="825" y="308" width="4" height="15" fill="rgb(220,29,45)"/><text x="828.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.00%)</title><rect x="821" y="228" width="12" height="15" fill="rgb(235,153,50)"/><text x="824.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="821" y="244" width="12" height="15" fill="rgb(206,111,33)"/><text x="824.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 1.00%)</title><rect x="821" y="260" width="12" height="15" fill="rgb(206,11,28)"/><text x="824.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="829" y="276" width="4" height="15" fill="rgb(232,61,32)"/><text x="832.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.33%)</title><rect x="829" y="292" width="4" height="15" fill="rgb(241,136,12)"/><text x="832.00" y="302.50"></text></g><g><title>array_add (number.c) (7 samples, 2.33%)</title><rect x="809" y="196" width="28" height="15" fill="rgb(240,10,44)"/><text x="812.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.33%)</title><rect x="821" y="212" width="16" height="15" fill="rgb(229,115,54)"/><text x="824.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="833" y="228" width="4" height="15" fill="rgb(243,146,35)"/><text x="836.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="837" y="196" width="4" height="15" fill="rgb(207,217,24)"/><text x="840.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.00%)</title><rect x="872" y="212" width="12" height="15" fill="rgb(214,105,52)"/><text x="875.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.33%)</title><rect x="884" y="212" width="4" height="15" fill="rgb(208,118,51)"/><text x="887.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.33%)</title><rect x="899" y="228" width="4" height="15" fill="rgb(209,68,43)"/><text x="902.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.66%)</title><rect x="903" y="228" width="8" height="15" fill="rgb(249,92,8)"/><text x="906.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 2.33%)</title><rect x="888" y="212" width="27" height="15" fill="rgb(240,209,36)"/><text x="891.00" y="222.50">_..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.33%)</title><rect x="911" y="228" width="4" height="15" fill="rgb(249,194,40)"/><text x="914.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.33%)</title><rect x="915" y="212" width="4" height="15" fill="rgb(205,12,14)"/><text x="918.00" y="222.50"></text></g><g><title>0x7fc10b1cab7f (libc-2.29.so) (1 samples, 0.33%)</title><rect x="935" y="228" width="4" height="15" fill="rgb(207,49,17)"/><text x="938.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.33%)</title><rect x="919" y="212" width="27" height="15" fill="rgb(233,116,54)"/><text x="922.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.66%)</title><rect x="939" y="228" width="7" height="15" fill="rgb(226,162,11)"/><text x="942.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.33%)</title><rect x="943" y="244" width="3" height="15" fill="rgb(215,192,17)"/><text x="946.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.33%)</title><rect x="950" y="228" width="4" height="15" fill="rgb(239,56,1)"/><text x="953.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.33%)</title><rect x="950" y="244" width="4" height="15" fill="rgb(209,179,15)"/><text x="953.00" y="254.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 1.00%)</title><rect x="946" y="212" width="12" height="15" fill="rgb(235,62,6)"/><text x="949.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.33%)</title><rect x="954" y="228" width="4" height="15" fill="rgb(219,215,43)"/><text x="957.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (34 samples, 11.30%)</title><rect x="841" y="196" width="133" height="15" fill="rgb(210,226,34)"/><text x="844.00" y="206.50">check_array (skl..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.33%)</title><rect x="958" y="212" width="16" height="15" fill="rgb(225,198,20)"/><text x="961.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.00%)</title><rect x="962" y="228" width="12" height="15" fill="rgb(250,114,23)"/><text x="965.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 2.33%)</title><rect x="974" y="196" width="27" height="15" fill="rgb(207,206,32)"/><text x="977.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.99%)</title><rect x="978" y="212" width="23" height="15" fill="rgb(231,179,32)"/><text x="981.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.33%)</title><rect x="997" y="228" width="4" height="15" fill="rgb(214,7,54)"/><text x="1000.00" y="238.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.33%)</title><rect x="1005" y="228" width="4" height="15" fill="rgb(240,67,0)"/><text x="1008.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.33%)</title><rect x="1009" y="260" width="4" height="15" fill="rgb(231,155,28)"/><text x="1012.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.33%)</title><rect x="1009" y="276" width="4" height="15" fill="rgb(220,169,21)"/><text x="1012.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="1009" y="292" width="4" height="15" fill="rgb(211,151,36)"/><text x="1012.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.33%)</title><rect x="1009" y="308" width="4" height="15" fill="rgb(249,32,36)"/><text x="1012.00" y="318.50"></text></g><g><title>0x7fc10a3d6d70 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1013" y="324" width="4" height="15" fill="rgb(240,202,16)"/><text x="1016.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.66%)</title><rect x="1017" y="324" width="8" height="15" fill="rgb(250,80,32)"/><text x="1020.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.33%)</title><rect x="1025" y="324" width="4" height="15" fill="rgb(252,203,33)"/><text x="1028.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.66%)</title><rect x="1013" y="276" width="20" height="15" fill="rgb(241,130,28)"/><text x="1016.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 1.66%)</title><rect x="1013" y="292" width="20" height="15" fill="rgb(253,169,15)"/><text x="1016.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.66%)</title><rect x="1013" y="308" width="20" height="15" fill="rgb(230,44,38)"/><text x="1016.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.33%)</title><rect x="1029" y="324" width="4" height="15" fill="rgb(218,117,26)"/><text x="1032.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 2.66%)</title><rect x="1013" y="260" width="31" height="15" fill="rgb(246,8,51)"/><text x="1016.00" y="270.50">Np..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (3 samples, 1.00%)</title><rect x="1033" y="276" width="11" height="15" fill="rgb(232,91,40)"/><text x="1036.00" y="286.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.33%)</title><rect x="1041" y="292" width="3" height="15" fill="rgb(217,211,13)"/><text x="1044.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1044" y="260" width="4" height="15" fill="rgb(217,221,16)"/><text x="1047.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.33%)</title><rect x="1044" y="276" width="4" height="15" fill="rgb(253,184,21)"/><text x="1047.00" y="286.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.33%)</title><rect x="1044" y="292" width="4" height="15" fill="rgb(206,94,51)"/><text x="1047.00" y="302.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.33%)</title><rect x="1048" y="260" width="4" height="15" fill="rgb(233,98,39)"/><text x="1051.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.33%)</title><rect x="1048" y="276" width="4" height="15" fill="rgb(219,138,48)"/><text x="1051.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1052" y="260" width="4" height="15" fill="rgb(238,19,31)"/><text x="1055.00" y="270.50"></text></g><g><title>0x7fc10a3d6820 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1052" y="276" width="4" height="15" fill="rgb(223,154,36)"/><text x="1055.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 4.32%)</title><rect x="1009" y="228" width="51" height="15" fill="rgb(219,190,51)"/><text x="1012.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (13 samples, 4.32%)</title><rect x="1009" y="244" width="51" height="15" fill="rgb(222,13,16)"/><text x="1012.00" y="254.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="1056" y="260" width="4" height="15" fill="rgb(234,223,12)"/><text x="1059.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.33%)</title><rect x="1056" y="276" width="4" height="15" fill="rgb(247,178,24)"/><text x="1059.00" y="286.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (70 samples, 23.26%)</title><rect x="790" y="180" width="274" height="15" fill="rgb(221,65,0)"/><text x="793.00" y="190.50">decision_function (sklearn/linear_mo..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (16 samples, 5.32%)</title><rect x="1001" y="196" width="63" height="15" fill="rgb(209,52,11)"/><text x="1004.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 4.98%)</title><rect x="1005" y="212" width="59" height="15" fill="rgb(236,204,42)"/><text x="1008.00" y="222.50">ufunc_..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1060" y="228" width="4" height="15" fill="rgb(236,79,23)"/><text x="1063.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.66%)</title><rect x="1064" y="196" width="8" height="15" fill="rgb(234,87,4)"/><text x="1067.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.33%)</title><rect x="1068" y="212" width="4" height="15" fill="rgb(251,187,5)"/><text x="1071.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.33%)</title><rect x="1068" y="228" width="4" height="15" fill="rgb(228,174,21)"/><text x="1071.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.33%)</title><rect x="1072" y="212" width="4" height="15" fill="rgb(245,223,34)"/><text x="1075.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1076" y="212" width="4" height="15" fill="rgb(236,5,17)"/><text x="1079.00" y="222.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.66%)</title><rect x="1080" y="276" width="8" height="15" fill="rgb(247,68,19)"/><text x="1083.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="1084" y="292" width="4" height="15" fill="rgb(245,104,49)"/><text x="1087.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.33%)</title><rect x="1084" y="308" width="4" height="15" fill="rgb(246,73,11)"/><text x="1087.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.33%)</title><rect x="1080" y="228" width="15" height="15" fill="rgb(205,78,47)"/><text x="1083.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.33%)</title><rect x="1080" y="244" width="15" height="15" fill="rgb(214,144,23)"/><text x="1083.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (4 samples, 1.33%)</title><rect x="1080" y="260" width="15" height="15" fill="rgb(216,62,37)"/><text x="1083.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.66%)</title><rect x="1088" y="276" width="7" height="15" fill="rgb(235,73,26)"/><text x="1091.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1099" y="260" width="4" height="15" fill="rgb(229,171,21)"/><text x="1102.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1103" y="260" width="4" height="15" fill="rgb(229,142,49)"/><text x="1106.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1107" y="260" width="4" height="15" fill="rgb(219,10,8)"/><text x="1110.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.33%)</title><rect x="1099" y="244" width="16" height="15" fill="rgb(212,24,37)"/><text x="1102.00" y="254.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.33%)</title><rect x="1111" y="260" width="4" height="15" fill="rgb(241,120,33)"/><text x="1114.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.99%)</title><rect x="1095" y="228" width="24" height="15" fill="rgb(227,181,17)"/><text x="1098.00" y="238.50">i..</text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.33%)</title><rect x="1115" y="244" width="4" height="15" fill="rgb(223,77,20)"/><text x="1118.00" y="254.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.33%)</title><rect x="1115" y="260" width="4" height="15" fill="rgb(238,189,4)"/><text x="1118.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 3.65%)</title><rect x="1080" y="212" width="43" height="15" fill="rgb(235,175,31)"/><text x="1083.00" y="222.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1119" y="228" width="4" height="15" fill="rgb(231,216,23)"/><text x="1122.00" y="238.50"></text></g><g><title>0x7fc0f649d9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1119" y="244" width="4" height="15" fill="rgb(237,112,36)"/><text x="1122.00" y="254.50"></text></g><g><title>0x7fc0f64be265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.33%)</title><rect x="1119" y="260" width="4" height="15" fill="rgb(251,2,20)"/><text x="1122.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1119" y="276" width="4" height="15" fill="rgb(239,177,14)"/><text x="1122.00" y="286.50"></text></g><g><title>0x7fc10b386bcb (libm-2.29.so) (1 samples, 0.33%)</title><rect x="1119" y="292" width="4" height="15" fill="rgb(225,101,6)"/><text x="1122.00" y="302.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.33%)</title><rect x="1123" y="228" width="4" height="15" fill="rgb(216,197,41)"/><text x="1126.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 4.98%)</title><rect x="1072" y="196" width="59" height="15" fill="rgb(247,69,24)"/><text x="1075.00" y="206.50">PyUFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.66%)</title><rect x="1123" y="212" width="8" height="15" fill="rgb(228,123,15)"/><text x="1126.00" y="222.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1127" y="228" width="4" height="15" fill="rgb(234,119,9)"/><text x="1130.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (110 samples, 36.54%)</title><rect x="703" y="164" width="432" height="15" fill="rgb(219,143,52)"/><text x="706.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 5.98%)</title><rect x="1064" y="180" width="71" height="15" fill="rgb(247,9,11)"/><text x="1067.00" y="190.50">ufunc_ge..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.33%)</title><rect x="1131" y="196" width="4" height="15" fill="rgb(219,194,15)"/><text x="1134.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 2.33%)</title><rect x="1146" y="180" width="28" height="15" fill="rgb(222,10,47)"/><text x="1149.00" y="190.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.66%)</title><rect x="1166" y="196" width="8" height="15" fill="rgb(206,146,5)"/><text x="1169.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 41.53%)</title><rect x="692" y="132" width="490" height="15" fill="rgb(230,198,40)"/><text x="695.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (124 samples, 41.20%)</title><rect x="696" y="148" width="486" height="15" fill="rgb(253,43,40)"/><text x="699.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 3.99%)</title><rect x="1135" y="164" width="47" height="15" fill="rgb(216,191,6)"/><text x="1138.00" y="174.50">chec..</text></g><g><title>isclass (inspect.py) (2 samples, 0.66%)</title><rect x="1174" y="180" width="8" height="15" fill="rgb(250,228,4)"/><text x="1177.00" y="190.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (129 samples, 42.86%)</title><rect x="680" y="68" width="506" height="15" fill="rgb(208,183,39)"/><text x="683.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (129 samples, 42.86%)</title><rect x="680" y="84" width="506" height="15" fill="rgb(228,216,51)"/><text x="683.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinea..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (129 samples, 42.86%)</title><rect x="680" y="100" width="506" height="15" fill="rgb(224,101,7)"/><text x="683.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (128 samples, 42.52%)</title><rect x="684" y="116" width="502" height="15" fill="rgb(231,201,9)"/><text x="687.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.33%)</title><rect x="1182" y="132" width="4" height="15" fill="rgb(219,163,32)"/><text x="1185.00" y="142.50"></text></g><g><title>0x7fc10b292130 (libc-2.29.so) (1 samples, 0.33%)</title><rect x="1182" y="148" width="4" height="15" fill="rgb(234,194,5)"/><text x="1185.00" y="158.50"></text></g><g><title>all (301 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,9,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (301 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(246,51,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py) (1 samples, 0.33%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(237,41,29)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py) (1 samples, 0.33%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(245,45,29)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(211,147,31)"/><text x="1189.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.33%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(208,219,29)"/><text x="1189.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.33%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(217,44,15)"/><text x="1189.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.33%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(251,198,16)"/><text x="1189.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.33%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(239,121,36)"/><text x="1189.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py) (1 samples, 0.33%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(236,87,47)"/><text x="1189.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py) (1 samples, 0.33%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(252,85,36)"/><text x="1189.00" y="206.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.33%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(213,37,35)"/><text x="1189.00" y="222.50"></text></g></g></svg>