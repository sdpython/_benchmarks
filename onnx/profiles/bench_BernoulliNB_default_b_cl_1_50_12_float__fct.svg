<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(244,118,45)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(223,27,0)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(219,152,42)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(205,59,39)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.23%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(242,166,20)"/><text x="13.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.23%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(217,31,37)"/><text x="13.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(239,155,34)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(241,39,43)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(212,99,28)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(220,134,3)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(214,25,19)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(254,100,32)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(239,103,12)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(248,75,16)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(247,15,36)"/><text x="15.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.23%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(233,177,33)"/><text x="15.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(252,87,7)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(235,122,4)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.69%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(232,197,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(228,185,39)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(205,127,12)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(205,115,18)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(227,216,8)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(218,4,9)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.69%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(234,60,25)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(231,198,14)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(236,105,19)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(221,53,28)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(249,154,34)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(210,49,25)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.69%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(225,162,25)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(254,148,48)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(254,33,31)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(212,130,22)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(234,130,54)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(228,84,42)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(229,7,20)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(211,163,14)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(213,27,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.69%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(229,65,32)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(212,180,31)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(207,101,30)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(206,203,53)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(243,36,25)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(216,155,50)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.69%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(244,46,44)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.69%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(205,225,14)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.69%)</title><rect x="10" y="852" width="8" height="15" fill="rgb(231,197,20)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(224,189,41)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(211,95,11)"/><text x="18.00" y="894.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.23%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(252,51,19)"/><text x="18.00" y="910.50"></text></g><g><title>unicode_lower (python3.7) (1 samples, 0.23%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(209,132,38)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.92%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(209,157,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.92%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(239,51,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.92%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(213,19,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.92%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(241,129,28)"/><text x="13.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="18" y="356" width="2" height="15" fill="rgb(209,76,54)"/><text x="21.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="18" y="372" width="2" height="15" fill="rgb(241,7,27)"/><text x="21.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="18" y="388" width="2" height="15" fill="rgb(253,161,33)"/><text x="21.00" y="398.50"></text></g><g><title>0x7f5c0a6cd203 (?) (1 samples, 0.23%)</title><rect x="18" y="404" width="2" height="15" fill="rgb(220,33,41)"/><text x="21.00" y="414.50"></text></g><g><title>0x7f5c0a6cb344 (?) (1 samples, 0.23%)</title><rect x="18" y="420" width="2" height="15" fill="rgb(246,205,36)"/><text x="21.00" y="430.50"></text></g><g><title>0x7f5c0a6ee137 (?) (1 samples, 0.23%)</title><rect x="18" y="436" width="2" height="15" fill="rgb(244,189,34)"/><text x="21.00" y="446.50"></text></g><g><title>0x7f5c0a6e0fa6 (?) (1 samples, 0.23%)</title><rect x="18" y="452" width="2" height="15" fill="rgb(242,228,30)"/><text x="21.00" y="462.50"></text></g><g><title>0x7f5c0a199d57 (?) (1 samples, 0.23%)</title><rect x="18" y="468" width="2" height="15" fill="rgb(244,210,19)"/><text x="21.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.15%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(227,36,37)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.15%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(207,227,23)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.15%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(236,4,7)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.15%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(236,148,43)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.15%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(226,3,33)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.15%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(227,95,23)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="292" width="3" height="15" fill="rgb(227,173,54)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="308" width="3" height="15" fill="rgb(226,152,18)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="324" width="3" height="15" fill="rgb(245,24,26)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="340" width="3" height="15" fill="rgb(242,90,26)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="356" width="3" height="15" fill="rgb(247,26,15)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="372" width="3" height="15" fill="rgb(212,73,29)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.23%)</title><rect x="20" y="388" width="3" height="15" fill="rgb(248,57,53)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="404" width="3" height="15" fill="rgb(227,54,0)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="420" width="3" height="15" fill="rgb(213,173,23)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="436" width="3" height="15" fill="rgb(222,185,48)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="452" width="3" height="15" fill="rgb(254,11,5)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="468" width="3" height="15" fill="rgb(215,111,1)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="484" width="3" height="15" fill="rgb(241,148,0)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(223,63,45)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(219,182,26)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="532" width="3" height="15" fill="rgb(247,44,51)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="548" width="3" height="15" fill="rgb(211,192,40)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="564" width="3" height="15" fill="rgb(236,155,10)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.23%)</title><rect x="20" y="580" width="3" height="15" fill="rgb(209,74,10)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="596" width="3" height="15" fill="rgb(251,196,51)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="612" width="3" height="15" fill="rgb(254,78,29)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="628" width="3" height="15" fill="rgb(228,181,36)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="644" width="3" height="15" fill="rgb(251,70,29)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="660" width="3" height="15" fill="rgb(221,164,4)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.23%)</title><rect x="20" y="676" width="3" height="15" fill="rgb(226,190,36)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="692" width="3" height="15" fill="rgb(218,164,35)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="708" width="3" height="15" fill="rgb(251,38,31)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="724" width="3" height="15" fill="rgb(243,190,40)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="740" width="3" height="15" fill="rgb(206,68,26)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="756" width="3" height="15" fill="rgb(236,55,38)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.23%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(249,98,12)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="788" width="3" height="15" fill="rgb(223,189,9)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="804" width="3" height="15" fill="rgb(242,99,53)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="820" width="3" height="15" fill="rgb(238,80,31)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="836" width="3" height="15" fill="rgb(215,206,46)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="852" width="3" height="15" fill="rgb(247,23,14)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="868" width="3" height="15" fill="rgb(214,89,17)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="884" width="3" height="15" fill="rgb(220,212,10)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.23%)</title><rect x="20" y="900" width="3" height="15" fill="rgb(253,45,45)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(222,32,20)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(252,32,32)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(231,190,23)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="964" width="3" height="15" fill="rgb(241,164,31)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="980" width="3" height="15" fill="rgb(247,173,38)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="20" y="996" width="3" height="15" fill="rgb(234,220,29)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="20" y="1012" width="3" height="15" fill="rgb(225,162,43)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.23%)</title><rect x="20" y="1028" width="3" height="15" fill="rgb(242,99,1)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="20" y="1044" width="3" height="15" fill="rgb(211,170,50)"/><text x="23.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.23%)</title><rect x="20" y="1060" width="3" height="15" fill="rgb(246,57,26)"/><text x="23.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="484" width="6" height="15" fill="rgb(216,76,50)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="500" width="6" height="15" fill="rgb(250,3,49)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="516" width="6" height="15" fill="rgb(211,208,53)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="532" width="6" height="15" fill="rgb(220,225,21)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="548" width="6" height="15" fill="rgb(241,148,23)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="564" width="6" height="15" fill="rgb(214,186,1)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.46%)</title><rect x="23" y="580" width="6" height="15" fill="rgb(227,155,35)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="596" width="6" height="15" fill="rgb(219,153,28)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="612" width="6" height="15" fill="rgb(244,57,10)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="628" width="6" height="15" fill="rgb(230,134,14)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="644" width="6" height="15" fill="rgb(225,143,51)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="660" width="6" height="15" fill="rgb(216,203,12)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.46%)</title><rect x="23" y="676" width="6" height="15" fill="rgb(238,8,34)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="692" width="6" height="15" fill="rgb(242,223,52)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="708" width="6" height="15" fill="rgb(249,210,46)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="724" width="6" height="15" fill="rgb(230,88,18)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="740" width="6" height="15" fill="rgb(240,96,8)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="756" width="6" height="15" fill="rgb(230,210,46)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.46%)</title><rect x="23" y="772" width="6" height="15" fill="rgb(239,183,14)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="788" width="6" height="15" fill="rgb(249,87,49)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="804" width="6" height="15" fill="rgb(248,227,26)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="820" width="6" height="15" fill="rgb(227,147,23)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="836" width="6" height="15" fill="rgb(246,132,15)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="852" width="6" height="15" fill="rgb(243,174,7)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.46%)</title><rect x="23" y="868" width="6" height="15" fill="rgb(222,184,47)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="884" width="6" height="15" fill="rgb(225,63,43)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="900" width="6" height="15" fill="rgb(253,127,24)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="916" width="6" height="15" fill="rgb(251,111,3)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="932" width="6" height="15" fill="rgb(207,135,36)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="948" width="6" height="15" fill="rgb(219,203,48)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="964" width="6" height="15" fill="rgb(208,227,20)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="980" width="6" height="15" fill="rgb(237,139,48)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="996" width="6" height="15" fill="rgb(221,45,7)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.46%)</title><rect x="23" y="1012" width="6" height="15" fill="rgb(241,4,54)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1028" width="6" height="15" fill="rgb(228,175,1)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1044" width="6" height="15" fill="rgb(221,136,46)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1060" width="6" height="15" fill="rgb(214,56,0)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="1076" width="6" height="15" fill="rgb(254,8,7)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1092" width="6" height="15" fill="rgb(239,30,34)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.46%)</title><rect x="23" y="1108" width="6" height="15" fill="rgb(242,45,6)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1124" width="6" height="15" fill="rgb(232,86,33)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1140" width="6" height="15" fill="rgb(246,163,28)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1156" width="6" height="15" fill="rgb(248,31,35)"/><text x="26.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1172" width="6" height="15" fill="rgb(236,227,42)"/><text x="26.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1188" width="6" height="15" fill="rgb(226,56,13)"/><text x="26.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="1204" width="6" height="15" fill="rgb(212,6,32)"/><text x="26.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1220" width="6" height="15" fill="rgb(249,183,8)"/><text x="26.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.46%)</title><rect x="23" y="1236" width="6" height="15" fill="rgb(224,204,28)"/><text x="26.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1252" width="6" height="15" fill="rgb(229,214,18)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1268" width="6" height="15" fill="rgb(206,173,22)"/><text x="26.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1284" width="6" height="15" fill="rgb(229,185,0)"/><text x="26.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1300" width="6" height="15" fill="rgb(215,24,10)"/><text x="26.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1316" width="6" height="15" fill="rgb(215,126,16)"/><text x="26.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="1332" width="6" height="15" fill="rgb(222,14,24)"/><text x="26.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1348" width="6" height="15" fill="rgb(231,79,6)"/><text x="26.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.46%)</title><rect x="23" y="1364" width="6" height="15" fill="rgb(230,209,31)"/><text x="26.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1380" width="6" height="15" fill="rgb(246,61,45)"/><text x="26.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1396" width="6" height="15" fill="rgb(219,151,2)"/><text x="26.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1412" width="6" height="15" fill="rgb(232,59,25)"/><text x="26.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="23" y="1428" width="6" height="15" fill="rgb(243,152,18)"/><text x="26.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="23" y="1444" width="6" height="15" fill="rgb(219,163,18)"/><text x="26.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.46%)</title><rect x="23" y="1460" width="6" height="15" fill="rgb(232,208,3)"/><text x="26.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.46%)</title><rect x="23" y="1476" width="6" height="15" fill="rgb(254,149,17)"/><text x="26.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.46%)</title><rect x="23" y="1492" width="6" height="15" fill="rgb(218,220,0)"/><text x="26.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.46%)</title><rect x="23" y="1508" width="6" height="15" fill="rgb(205,36,45)"/><text x="26.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.46%)</title><rect x="23" y="1524" width="6" height="15" fill="rgb(229,112,41)"/><text x="26.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.46%)</title><rect x="23" y="1540" width="6" height="15" fill="rgb(246,153,8)"/><text x="26.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.46%)</title><rect x="23" y="1556" width="6" height="15" fill="rgb(213,17,32)"/><text x="26.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.46%)</title><rect x="23" y="1572" width="6" height="15" fill="rgb(234,91,45)"/><text x="26.00" y="1582.50"></text></g><g><title>0x7f5bf2ed440e (?) (1 samples, 0.23%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(231,113,41)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(205,135,43)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(216,151,17)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(220,224,33)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(251,179,20)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(243,162,15)"/><text x="32.00" y="1006.50"></text></g><g><title>0x7f5bf2c8d89c (?) (1 samples, 0.23%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(234,74,26)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(220,189,33)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(210,123,8)"/><text x="32.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(213,192,43)"/><text x="32.00" y="1070.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="1076" width="2" height="15" fill="rgb(221,69,7)"/><text x="32.00" y="1086.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="1092" width="2" height="15" fill="rgb(218,41,13)"/><text x="32.00" y="1102.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(232,46,13)"/><text x="32.00" y="1118.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(236,39,11)"/><text x="32.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.69%)</title><rect x="29" y="724" width="8" height="15" fill="rgb(234,16,14)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="740" width="8" height="15" fill="rgb(240,190,6)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="756" width="8" height="15" fill="rgb(239,72,48)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="772" width="8" height="15" fill="rgb(246,197,6)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="29" y="788" width="8" height="15" fill="rgb(218,181,49)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="804" width="8" height="15" fill="rgb(216,223,9)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.69%)</title><rect x="29" y="820" width="8" height="15" fill="rgb(234,106,54)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="836" width="8" height="15" fill="rgb(242,185,4)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="852" width="8" height="15" fill="rgb(242,192,26)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="868" width="8" height="15" fill="rgb(208,101,29)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.69%)</title><rect x="29" y="884" width="8" height="15" fill="rgb(241,217,1)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="29" y="900" width="8" height="15" fill="rgb(248,224,21)"/><text x="32.00" y="910.50"></text></g><g><title>0x7f5bf2ed440e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="916" width="6" height="15" fill="rgb(235,25,37)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="932" width="6" height="15" fill="rgb(246,2,33)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="948" width="6" height="15" fill="rgb(209,179,52)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="964" width="6" height="15" fill="rgb(250,117,39)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="980" width="6" height="15" fill="rgb(217,25,27)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="996" width="6" height="15" fill="rgb(236,113,25)"/><text x="34.00" y="1006.50"></text></g><g><title>0x7f5bf2c8dcd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1012" width="6" height="15" fill="rgb(246,139,51)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1028" width="6" height="15" fill="rgb(223,29,33)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1044" width="6" height="15" fill="rgb(212,93,52)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1060" width="6" height="15" fill="rgb(232,156,15)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="1076" width="6" height="15" fill="rgb(242,49,7)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1092" width="6" height="15" fill="rgb(231,171,46)"/><text x="34.00" y="1102.50"></text></g><g><title>0x7f5bf23830e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1108" width="6" height="15" fill="rgb(219,51,7)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1124" width="6" height="15" fill="rgb(246,113,45)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1140" width="6" height="15" fill="rgb(249,70,27)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1156" width="6" height="15" fill="rgb(207,158,44)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="1172" width="6" height="15" fill="rgb(213,83,2)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1188" width="6" height="15" fill="rgb(230,85,17)"/><text x="34.00" y="1198.50"></text></g><g><title>0x7f5bf2107e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1204" width="6" height="15" fill="rgb(239,185,46)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1220" width="6" height="15" fill="rgb(226,123,44)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1236" width="6" height="15" fill="rgb(249,71,48)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1252" width="6" height="15" fill="rgb(231,12,30)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="1268" width="6" height="15" fill="rgb(229,157,16)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1284" width="6" height="15" fill="rgb(214,25,46)"/><text x="34.00" y="1294.50"></text></g><g><title>0x7f5bf1e982fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1300" width="6" height="15" fill="rgb(237,217,10)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1316" width="6" height="15" fill="rgb(214,109,12)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1332" width="6" height="15" fill="rgb(237,98,15)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1348" width="6" height="15" fill="rgb(228,21,11)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="1364" width="6" height="15" fill="rgb(220,98,17)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1380" width="6" height="15" fill="rgb(241,185,54)"/><text x="34.00" y="1390.50"></text></g><g><title>0x7f5bf1c7c153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1396" width="6" height="15" fill="rgb(253,50,3)"/><text x="34.00" y="1406.50"></text></g><g><title>0x7f5bf1c7ac13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1412" width="6" height="15" fill="rgb(254,15,7)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1428" width="6" height="15" fill="rgb(240,189,1)"/><text x="34.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1444" width="6" height="15" fill="rgb(254,163,19)"/><text x="34.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1460" width="6" height="15" fill="rgb(225,98,23)"/><text x="34.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="31" y="1476" width="6" height="15" fill="rgb(218,72,25)"/><text x="34.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="31" y="1492" width="6" height="15" fill="rgb(224,196,4)"/><text x="34.00" y="1502.50"></text></g><g><title>0x7f5bf1a17181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1508" width="6" height="15" fill="rgb(254,86,40)"/><text x="34.00" y="1518.50"></text></g><g><title>0x7f5bf1a1a1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1524" width="6" height="15" fill="rgb(224,16,24)"/><text x="34.00" y="1534.50"></text></g><g><title>0x7f5bf1a46167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1540" width="6" height="15" fill="rgb(219,109,32)"/><text x="34.00" y="1550.50"></text></g><g><title>0x7f5bf1a41b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1556" width="6" height="15" fill="rgb(212,150,39)"/><text x="34.00" y="1566.50"></text></g><g><title>0x7f5bf1a2507b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.46%)</title><rect x="31" y="1572" width="6" height="15" fill="rgb(208,63,13)"/><text x="34.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (2 samples, 0.46%)</title><rect x="31" y="1588" width="6" height="15" fill="rgb(206,135,16)"/><text x="34.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (2 samples, 0.46%)</title><rect x="31" y="1604" width="6" height="15" fill="rgb(222,161,7)"/><text x="34.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (2 samples, 0.46%)</title><rect x="31" y="1620" width="6" height="15" fill="rgb(246,101,29)"/><text x="34.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (2 samples, 0.46%)</title><rect x="31" y="1636" width="6" height="15" fill="rgb(253,10,17)"/><text x="34.00" y="1646.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.23%)</title><rect x="34" y="1652" width="3" height="15" fill="rgb(221,160,17)"/><text x="37.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="772" width="2" height="15" fill="rgb(213,210,54)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="788" width="2" height="15" fill="rgb(247,102,8)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="804" width="2" height="15" fill="rgb(206,128,42)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="820" width="2" height="15" fill="rgb(254,158,46)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="836" width="2" height="15" fill="rgb(251,10,28)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="852" width="2" height="15" fill="rgb(242,134,0)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.23%)</title><rect x="37" y="868" width="2" height="15" fill="rgb(243,228,19)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="884" width="2" height="15" fill="rgb(216,3,32)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="900" width="2" height="15" fill="rgb(218,77,23)"/><text x="40.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="916" width="2" height="15" fill="rgb(243,62,21)"/><text x="40.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(251,189,18)"/><text x="40.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="948" width="2" height="15" fill="rgb(243,184,50)"/><text x="40.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.23%)</title><rect x="37" y="964" width="2" height="15" fill="rgb(246,148,50)"/><text x="40.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="980" width="2" height="15" fill="rgb(233,88,20)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="996" width="2" height="15" fill="rgb(243,178,40)"/><text x="40.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(213,97,23)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(223,101,25)"/><text x="40.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(241,6,16)"/><text x="40.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(252,171,0)"/><text x="40.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(214,54,2)"/><text x="40.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/ops/__init__.py) (1 samples, 0.23%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(232,163,42)"/><text x="40.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(252,145,16)"/><text x="40.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(229,184,53)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(233,203,26)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(233,100,5)"/><text x="40.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1172" width="2" height="15" fill="rgb(242,83,1)"/><text x="40.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="1188" width="2" height="15" fill="rgb(219,210,17)"/><text x="40.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1204" width="2" height="15" fill="rgb(237,147,26)"/><text x="40.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/core/ops/missing.py) (1 samples, 0.23%)</title><rect x="37" y="1220" width="2" height="15" fill="rgb(253,68,13)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1236" width="2" height="15" fill="rgb(207,84,6)"/><text x="40.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1252" width="2" height="15" fill="rgb(253,52,25)"/><text x="40.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="37" y="1268" width="2" height="15" fill="rgb(238,54,16)"/><text x="40.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="1284" width="2" height="15" fill="rgb(205,47,4)"/><text x="40.00" y="1294.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="1300" width="2" height="15" fill="rgb(206,155,40)"/><text x="40.00" y="1310.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="37" y="1316" width="2" height="15" fill="rgb(249,83,1)"/><text x="40.00" y="1326.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.23%)</title><rect x="37" y="1332" width="2" height="15" fill="rgb(239,32,14)"/><text x="40.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.23%)</title><rect x="39" y="1012" width="3" height="15" fill="rgb(227,193,11)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1028" width="3" height="15" fill="rgb(238,139,22)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1044" width="3" height="15" fill="rgb(239,121,47)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1060" width="3" height="15" fill="rgb(227,225,14)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="1076" width="3" height="15" fill="rgb(234,34,39)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1092" width="3" height="15" fill="rgb(254,57,2)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.23%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(209,190,9)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(239,226,34)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(217,43,15)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(250,178,23)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(210,64,34)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(207,185,51)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.23%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(246,81,39)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(250,150,17)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(223,87,19)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(229,124,2)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(253,113,11)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(245,128,32)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.23%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(254,203,26)"/><text x="42.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.69%)</title><rect x="37" y="724" width="8" height="15" fill="rgb(247,21,44)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="37" y="740" width="8" height="15" fill="rgb(210,88,21)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.69%)</title><rect x="37" y="756" width="8" height="15" fill="rgb(239,22,8)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="772" width="6" height="15" fill="rgb(219,227,31)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="39" y="788" width="6" height="15" fill="rgb(230,211,21)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="804" width="6" height="15" fill="rgb(208,134,14)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.46%)</title><rect x="39" y="820" width="6" height="15" fill="rgb(252,31,15)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="836" width="6" height="15" fill="rgb(219,163,5)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="852" width="6" height="15" fill="rgb(242,32,1)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="868" width="6" height="15" fill="rgb(251,64,15)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="39" y="884" width="6" height="15" fill="rgb(249,169,22)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="900" width="6" height="15" fill="rgb(225,68,36)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.46%)</title><rect x="39" y="916" width="6" height="15" fill="rgb(253,170,19)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="932" width="6" height="15" fill="rgb(222,168,8)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="948" width="6" height="15" fill="rgb(215,133,21)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="964" width="6" height="15" fill="rgb(234,153,53)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="39" y="980" width="6" height="15" fill="rgb(211,227,39)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="39" y="996" width="6" height="15" fill="rgb(206,198,14)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.23%)</title><rect x="42" y="1012" width="3" height="15" fill="rgb(232,187,23)"/><text x="45.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="1028" width="3" height="15" fill="rgb(233,102,8)"/><text x="45.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="1044" width="3" height="15" fill="rgb(237,43,49)"/><text x="45.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.23%)</title><rect x="42" y="1060" width="3" height="15" fill="rgb(215,173,15)"/><text x="45.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.23%)</title><rect x="42" y="1076" width="3" height="15" fill="rgb(214,171,12)"/><text x="45.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.23%)</title><rect x="42" y="1092" width="3" height="15" fill="rgb(236,121,42)"/><text x="45.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.23%)</title><rect x="42" y="1108" width="3" height="15" fill="rgb(235,209,47)"/><text x="45.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="42" y="1124" width="3" height="15" fill="rgb(230,72,51)"/><text x="45.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.08%)</title><rect x="23" y="436" width="25" height="15" fill="rgb(251,161,47)"/><text x="26.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.08%)</title><rect x="23" y="452" width="25" height="15" fill="rgb(214,123,20)"/><text x="26.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.08%)</title><rect x="23" y="468" width="25" height="15" fill="rgb(210,138,0)"/><text x="26.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="484" width="19" height="15" fill="rgb(236,31,35)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="29" y="500" width="19" height="15" fill="rgb(234,96,43)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="516" width="19" height="15" fill="rgb(249,210,25)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (7 samples, 1.62%)</title><rect x="29" y="532" width="19" height="15" fill="rgb(251,120,36)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="548" width="19" height="15" fill="rgb(209,45,25)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="564" width="19" height="15" fill="rgb(207,101,30)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="580" width="19" height="15" fill="rgb(245,124,12)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="29" y="596" width="19" height="15" fill="rgb(226,163,38)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="612" width="19" height="15" fill="rgb(249,80,30)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (7 samples, 1.62%)</title><rect x="29" y="628" width="19" height="15" fill="rgb(242,2,33)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="644" width="19" height="15" fill="rgb(218,21,53)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="660" width="19" height="15" fill="rgb(241,119,36)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="676" width="19" height="15" fill="rgb(211,101,16)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.62%)</title><rect x="29" y="692" width="19" height="15" fill="rgb(239,207,53)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.62%)</title><rect x="29" y="708" width="19" height="15" fill="rgb(241,80,24)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/config_init.py) (1 samples, 0.23%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(225,58,43)"/><text x="48.00" y="734.50"></text></g><g><title>inner (pandas/_config/config.py) (1 samples, 0.23%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(254,176,29)"/><text x="48.00" y="750.50"></text></g><g><title>register_option (pandas/_config/config.py) (1 samples, 0.23%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(240,171,30)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 2.31%)</title><rect x="23" y="340" width="27" height="15" fill="rgb(241,17,41)"/><text x="26.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.31%)</title><rect x="23" y="356" width="27" height="15" fill="rgb(217,102,41)"/><text x="26.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.31%)</title><rect x="23" y="372" width="27" height="15" fill="rgb(215,52,37)"/><text x="26.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.31%)</title><rect x="23" y="388" width="27" height="15" fill="rgb(214,214,39)"/><text x="26.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.31%)</title><rect x="23" y="404" width="27" height="15" fill="rgb(207,60,29)"/><text x="26.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.31%)</title><rect x="23" y="420" width="27" height="15" fill="rgb(235,156,1)"/><text x="26.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.23%)</title><rect x="48" y="436" width="2" height="15" fill="rgb(244,136,44)"/><text x="51.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="452" width="2" height="15" fill="rgb(227,186,48)"/><text x="51.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="468" width="2" height="15" fill="rgb(221,177,38)"/><text x="51.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="484" width="2" height="15" fill="rgb(237,158,36)"/><text x="51.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="500" width="2" height="15" fill="rgb(220,78,14)"/><text x="51.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="516" width="2" height="15" fill="rgb(208,8,6)"/><text x="51.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py) (1 samples, 0.23%)</title><rect x="48" y="532" width="2" height="15" fill="rgb(245,113,27)"/><text x="51.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="548" width="2" height="15" fill="rgb(225,32,50)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="564" width="2" height="15" fill="rgb(234,17,51)"/><text x="51.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="580" width="2" height="15" fill="rgb(240,60,41)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="596" width="2" height="15" fill="rgb(229,22,25)"/><text x="51.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="612" width="2" height="15" fill="rgb(223,196,39)"/><text x="51.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="48" y="628" width="2" height="15" fill="rgb(209,186,52)"/><text x="51.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="48" y="644" width="2" height="15" fill="rgb(238,134,24)"/><text x="51.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py) (1 samples, 0.23%)</title><rect x="48" y="660" width="2" height="15" fill="rgb(223,65,14)"/><text x="51.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py) (1 samples, 0.23%)</title><rect x="48" y="676" width="2" height="15" fill="rgb(223,204,27)"/><text x="51.00" y="686.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="48" y="692" width="2" height="15" fill="rgb(209,55,10)"/><text x="51.00" y="702.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="48" y="708" width="2" height="15" fill="rgb(242,200,12)"/><text x="51.00" y="718.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="48" y="724" width="2" height="15" fill="rgb(251,157,26)"/><text x="51.00" y="734.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="740" width="2" height="15" fill="rgb(230,67,53)"/><text x="51.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="756" width="2" height="15" fill="rgb(250,55,35)"/><text x="51.00" y="766.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="772" width="2" height="15" fill="rgb(205,184,38)"/><text x="51.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="788" width="2" height="15" fill="rgb(216,79,5)"/><text x="51.00" y="798.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="804" width="2" height="15" fill="rgb(206,104,24)"/><text x="51.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="820" width="2" height="15" fill="rgb(225,199,49)"/><text x="51.00" y="830.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="836" width="2" height="15" fill="rgb(232,67,38)"/><text x="51.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="852" width="2" height="15" fill="rgb(222,56,11)"/><text x="51.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="868" width="2" height="15" fill="rgb(230,57,16)"/><text x="51.00" y="878.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="884" width="2" height="15" fill="rgb(212,73,22)"/><text x="51.00" y="894.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.23%)</title><rect x="48" y="900" width="2" height="15" fill="rgb(237,226,29)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.23%)</title><rect x="50" y="580" width="3" height="15" fill="rgb(222,22,49)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="596" width="3" height="15" fill="rgb(216,14,4)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="612" width="3" height="15" fill="rgb(221,154,9)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="628" width="3" height="15" fill="rgb(220,80,13)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="644" width="3" height="15" fill="rgb(223,111,33)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="660" width="3" height="15" fill="rgb(238,212,46)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.23%)</title><rect x="50" y="676" width="3" height="15" fill="rgb(244,93,10)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="692" width="3" height="15" fill="rgb(212,196,8)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="708" width="3" height="15" fill="rgb(228,189,19)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="724" width="3" height="15" fill="rgb(213,92,9)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="50" y="740" width="3" height="15" fill="rgb(249,147,34)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="50" y="756" width="3" height="15" fill="rgb(231,79,34)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.23%)</title><rect x="50" y="772" width="3" height="15" fill="rgb(239,17,50)"/><text x="53.00" y="782.50"></text></g><g><title>register_check (pycodestyle.py) (1 samples, 0.23%)</title><rect x="50" y="788" width="3" height="15" fill="rgb(252,5,31)"/><text x="53.00" y="798.50"></text></g><g><title>_get_parameters (pycodestyle.py) (1 samples, 0.23%)</title><rect x="50" y="804" width="3" height="15" fill="rgb(232,80,49)"/><text x="53.00" y="814.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.23%)</title><rect x="50" y="820" width="3" height="15" fill="rgb(246,176,48)"/><text x="53.00" y="830.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="50" y="836" width="3" height="15" fill="rgb(227,14,15)"/><text x="53.00" y="846.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.23%)</title><rect x="50" y="852" width="3" height="15" fill="rgb(236,66,15)"/><text x="53.00" y="862.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.23%)</title><rect x="50" y="868" width="3" height="15" fill="rgb(220,9,46)"/><text x="53.00" y="878.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.23%)</title><rect x="50" y="884" width="3" height="15" fill="rgb(214,89,5)"/><text x="53.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="68" width="46" height="15" fill="rgb(230,172,33)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="84" width="46" height="15" fill="rgb(233,120,1)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="100" width="46" height="15" fill="rgb(224,151,43)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 3.93%)</title><rect x="10" y="116" width="46" height="15" fill="rgb(234,67,18)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="132" width="46" height="15" fill="rgb(244,52,12)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/naive_bayes/BernoulliNB/bench_BernoulliNB_default_b_cl.py) (17 samples, 3.93%)</title><rect x="10" y="148" width="46" height="15" fill="rgb(213,50,44)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="164" width="46" height="15" fill="rgb(230,59,27)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 3.93%)</title><rect x="10" y="180" width="46" height="15" fill="rgb(241,80,29)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="196" width="33" height="15" fill="rgb(231,106,17)"/><text x="26.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.77%)</title><rect x="23" y="212" width="33" height="15" fill="rgb(216,94,3)"/><text x="26.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="228" width="33" height="15" fill="rgb(232,19,13)"/><text x="26.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 2.77%)</title><rect x="23" y="244" width="33" height="15" fill="rgb(237,179,33)"/><text x="26.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="260" width="33" height="15" fill="rgb(220,46,48)"/><text x="26.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="276" width="33" height="15" fill="rgb(242,73,7)"/><text x="26.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="292" width="33" height="15" fill="rgb(228,208,19)"/><text x="26.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.77%)</title><rect x="23" y="308" width="33" height="15" fill="rgb(241,83,21)"/><text x="26.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.77%)</title><rect x="23" y="324" width="33" height="15" fill="rgb(248,107,9)"/><text x="26.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.46%)</title><rect x="50" y="340" width="6" height="15" fill="rgb(221,157,22)"/><text x="53.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="356" width="6" height="15" fill="rgb(220,44,53)"/><text x="53.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="372" width="6" height="15" fill="rgb(248,176,50)"/><text x="53.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="388" width="6" height="15" fill="rgb(246,214,10)"/><text x="53.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="404" width="6" height="15" fill="rgb(246,20,3)"/><text x="53.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="420" width="6" height="15" fill="rgb(233,16,36)"/><text x="53.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="436" width="6" height="15" fill="rgb(232,79,39)"/><text x="53.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="50" y="452" width="6" height="15" fill="rgb(252,41,27)"/><text x="53.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="468" width="6" height="15" fill="rgb(239,14,19)"/><text x="53.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.46%)</title><rect x="50" y="484" width="6" height="15" fill="rgb(235,72,41)"/><text x="53.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="500" width="6" height="15" fill="rgb(243,62,29)"/><text x="53.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="516" width="6" height="15" fill="rgb(244,66,0)"/><text x="53.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="532" width="6" height="15" fill="rgb(208,109,44)"/><text x="53.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.46%)</title><rect x="50" y="548" width="6" height="15" fill="rgb(218,1,37)"/><text x="53.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="50" y="564" width="6" height="15" fill="rgb(236,226,13)"/><text x="53.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.23%)</title><rect x="53" y="580" width="3" height="15" fill="rgb(210,170,46)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="596" width="3" height="15" fill="rgb(231,188,44)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="612" width="3" height="15" fill="rgb(243,219,50)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="628" width="3" height="15" fill="rgb(215,130,17)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="644" width="3" height="15" fill="rgb(237,121,26)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="660" width="3" height="15" fill="rgb(215,142,7)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.23%)</title><rect x="53" y="676" width="3" height="15" fill="rgb(226,11,43)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="692" width="3" height="15" fill="rgb(211,118,43)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="708" width="3" height="15" fill="rgb(216,48,51)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="724" width="3" height="15" fill="rgb(214,103,17)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="740" width="3" height="15" fill="rgb(222,116,14)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="756" width="3" height="15" fill="rgb(223,151,51)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.23%)</title><rect x="53" y="772" width="3" height="15" fill="rgb(254,24,34)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="788" width="3" height="15" fill="rgb(239,193,15)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="804" width="3" height="15" fill="rgb(229,96,46)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="820" width="3" height="15" fill="rgb(213,68,22)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="836" width="3" height="15" fill="rgb(225,123,12)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="852" width="3" height="15" fill="rgb(250,136,21)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.23%)</title><rect x="53" y="868" width="3" height="15" fill="rgb(245,142,40)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="884" width="3" height="15" fill="rgb(242,143,19)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="900" width="3" height="15" fill="rgb(227,120,37)"/><text x="56.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="916" width="3" height="15" fill="rgb(209,25,3)"/><text x="56.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="932" width="3" height="15" fill="rgb(233,36,47)"/><text x="56.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="948" width="3" height="15" fill="rgb(225,153,38)"/><text x="56.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.23%)</title><rect x="53" y="964" width="3" height="15" fill="rgb(207,114,30)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="980" width="3" height="15" fill="rgb(222,8,12)"/><text x="56.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="996" width="3" height="15" fill="rgb(212,160,26)"/><text x="56.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1012" width="3" height="15" fill="rgb(241,25,49)"/><text x="56.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="1028" width="3" height="15" fill="rgb(222,18,33)"/><text x="56.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1044" width="3" height="15" fill="rgb(224,153,30)"/><text x="56.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.23%)</title><rect x="53" y="1060" width="3" height="15" fill="rgb(235,120,52)"/><text x="56.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1076" width="3" height="15" fill="rgb(249,44,0)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1092" width="3" height="15" fill="rgb(208,109,49)"/><text x="56.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1108" width="3" height="15" fill="rgb(241,119,3)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1124" width="3" height="15" fill="rgb(228,44,43)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1140" width="3" height="15" fill="rgb(235,57,26)"/><text x="56.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1156" width="3" height="15" fill="rgb(223,104,43)"/><text x="56.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="1172" width="3" height="15" fill="rgb(216,127,34)"/><text x="56.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1188" width="3" height="15" fill="rgb(211,104,2)"/><text x="56.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.23%)</title><rect x="53" y="1204" width="3" height="15" fill="rgb(209,178,6)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1220" width="3" height="15" fill="rgb(248,17,6)"/><text x="56.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1236" width="3" height="15" fill="rgb(213,178,18)"/><text x="56.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1252" width="3" height="15" fill="rgb(217,4,34)"/><text x="56.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="1268" width="3" height="15" fill="rgb(247,56,46)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1284" width="3" height="15" fill="rgb(249,112,34)"/><text x="56.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.23%)</title><rect x="53" y="1300" width="3" height="15" fill="rgb(242,224,4)"/><text x="56.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1316" width="3" height="15" fill="rgb(239,180,54)"/><text x="56.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1332" width="3" height="15" fill="rgb(239,174,6)"/><text x="56.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1348" width="3" height="15" fill="rgb(226,3,42)"/><text x="56.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.23%)</title><rect x="53" y="1364" width="3" height="15" fill="rgb(211,22,32)"/><text x="56.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.23%)</title><rect x="53" y="1380" width="3" height="15" fill="rgb(237,127,43)"/><text x="56.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.23%)</title><rect x="53" y="1396" width="3" height="15" fill="rgb(208,14,43)"/><text x="56.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.23%)</title><rect x="53" y="1412" width="3" height="15" fill="rgb(216,18,22)"/><text x="56.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.23%)</title><rect x="53" y="1428" width="3" height="15" fill="rgb(245,152,14)"/><text x="56.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.23%)</title><rect x="53" y="1444" width="3" height="15" fill="rgb(217,42,44)"/><text x="56.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1460" width="3" height="15" fill="rgb(240,200,31)"/><text x="56.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1476" width="3" height="15" fill="rgb(235,62,33)"/><text x="56.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1492" width="3" height="15" fill="rgb(216,104,47)"/><text x="56.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1508" width="3" height="15" fill="rgb(217,203,36)"/><text x="56.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1524" width="3" height="15" fill="rgb(205,228,4)"/><text x="56.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1540" width="3" height="15" fill="rgb(251,104,7)"/><text x="56.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1556" width="3" height="15" fill="rgb(212,168,2)"/><text x="56.00" y="1566.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.23%)</title><rect x="53" y="1572" width="3" height="15" fill="rgb(238,75,3)"/><text x="56.00" y="1582.50"></text></g><g><title>0x557fc3e18568 (?) (1 samples, 0.23%)</title><rect x="78" y="212" width="2" height="15" fill="rgb(211,91,13)"/><text x="81.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.23%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(246,228,47)"/><text x="81.00" y="238.50"></text></g><g><title>0x7ffc997c2940 ([vdso]) (1 samples, 0.23%)</title><rect x="78" y="244" width="2" height="15" fill="rgb(207,182,49)"/><text x="81.00" y="254.50"></text></g><g><title>0x7f5bda66eff9 (?) (1 samples, 0.23%)</title><rect x="80" y="212" width="3" height="15" fill="rgb(221,139,22)"/><text x="83.00" y="222.50"></text></g><g><title>0x7f5bda669ef6 (?) (1 samples, 0.23%)</title><rect x="80" y="228" width="3" height="15" fill="rgb(219,113,24)"/><text x="83.00" y="238.50"></text></g><g><title>0x7f5bda65e962 (?) (1 samples, 0.23%)</title><rect x="80" y="244" width="3" height="15" fill="rgb(236,133,26)"/><text x="83.00" y="254.50"></text></g><g><title>0x7f5bda6927a7 (?) (1 samples, 0.23%)</title><rect x="80" y="260" width="3" height="15" fill="rgb(242,2,51)"/><text x="83.00" y="270.50"></text></g><g><title>0x7f5bda692379 (?) (1 samples, 0.23%)</title><rect x="80" y="276" width="3" height="15" fill="rgb(234,55,0)"/><text x="83.00" y="286.50"></text></g><g><title>0x7f5bdaaf08b8 (?) (1 samples, 0.23%)</title><rect x="80" y="292" width="3" height="15" fill="rgb(233,202,21)"/><text x="83.00" y="302.50"></text></g><g><title>0x7f5bdaaeec7f (?) (1 samples, 0.23%)</title><rect x="80" y="308" width="3" height="15" fill="rgb(251,209,53)"/><text x="83.00" y="318.50"></text></g><g><title>0x7f5bdab0199c (?) (1 samples, 0.23%)</title><rect x="80" y="324" width="3" height="15" fill="rgb(223,106,4)"/><text x="83.00" y="334.50"></text></g><g><title>0x7f5bda82c2f0 (?) (1 samples, 0.23%)</title><rect x="80" y="340" width="3" height="15" fill="rgb(247,141,27)"/><text x="83.00" y="350.50"></text></g><g><title>0x7f5bdaabdaca (?) (1 samples, 0.23%)</title><rect x="80" y="356" width="3" height="15" fill="rgb(213,207,33)"/><text x="83.00" y="366.50"></text></g><g><title>0x7f5bdaaa7c8d (?) (1 samples, 0.23%)</title><rect x="80" y="372" width="3" height="15" fill="rgb(252,119,37)"/><text x="83.00" y="382.50"></text></g><g><title>0x7f5bdaaa738a (?) (1 samples, 0.23%)</title><rect x="80" y="388" width="3" height="15" fill="rgb(236,102,20)"/><text x="83.00" y="398.50"></text></g><g><title>0x7f5bdaa91780 (?) (1 samples, 0.23%)</title><rect x="80" y="404" width="3" height="15" fill="rgb(253,110,21)"/><text x="83.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.46%)</title><rect x="83" y="212" width="6" height="15" fill="rgb(224,156,44)"/><text x="86.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="86" y="228" width="3" height="15" fill="rgb(224,140,21)"/><text x="89.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="86" y="244" width="3" height="15" fill="rgb(213,120,26)"/><text x="89.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="86" y="260" width="3" height="15" fill="rgb(236,2,48)"/><text x="89.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="86" y="276" width="3" height="15" fill="rgb(245,104,0)"/><text x="89.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="91" y="228" width="3" height="15" fill="rgb(246,155,7)"/><text x="94.00" y="238.50"></text></g><g><title>0x7f5c0a0f7d50 (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="91" y="244" width="3" height="15" fill="rgb(237,37,36)"/><text x="94.00" y="254.50"></text></g><g><title>0x7f5c1a62bd07 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="97" y="260" width="2" height="15" fill="rgb(228,61,52)"/><text x="100.00" y="270.50"></text></g><g><title>0x7f5c1a62bca0 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="102" y="340" width="3" height="15" fill="rgb(213,157,15)"/><text x="105.00" y="350.50"></text></g><g><title>onnxruntime::Add&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="340" width="3" height="15" fill="rgb(216,135,37)"/><text x="108.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Add&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="356" width="3" height="15" fill="rgb(217,85,27)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="372" width="3" height="15" fill="rgb(245,224,17)"/><text x="108.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="388" width="3" height="15" fill="rgb(232,41,26)"/><text x="108.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="404" width="3" height="15" fill="rgb(226,79,14)"/><text x="108.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="420" width="3" height="15" fill="rgb(212,107,4)"/><text x="108.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="436" width="3" height="15" fill="rgb(240,4,13)"/><text x="108.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="105" y="452" width="3" height="15" fill="rgb(216,199,53)"/><text x="108.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="108" y="340" width="5" height="15" fill="rgb(224,12,39)"/><text x="111.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="356" width="3" height="15" fill="rgb(231,153,8)"/><text x="113.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="372" width="3" height="15" fill="rgb(235,56,49)"/><text x="113.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="388" width="3" height="15" fill="rgb(214,20,10)"/><text x="113.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="404" width="3" height="15" fill="rgb(227,167,1)"/><text x="113.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="420" width="3" height="15" fill="rgb(238,124,46)"/><text x="113.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="436" width="3" height="15" fill="rgb(249,135,16)"/><text x="113.00" y="446.50"></text></g><g><title>0x7f5bda6366b0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="110" y="452" width="3" height="15" fill="rgb(208,128,1)"/><text x="113.00" y="462.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="340" width="3" height="15" fill="rgb(248,41,50)"/><text x="116.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="356" width="3" height="15" fill="rgb(250,196,12)"/><text x="116.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="372" width="3" height="15" fill="rgb(251,120,9)"/><text x="116.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="388" width="3" height="15" fill="rgb(233,138,43)"/><text x="116.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="404" width="3" height="15" fill="rgb(229,0,50)"/><text x="116.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="420" width="3" height="15" fill="rgb(235,91,18)"/><text x="116.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="436" width="3" height="15" fill="rgb(250,75,32)"/><text x="116.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="452" width="3" height="15" fill="rgb(242,23,44)"/><text x="116.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="468" width="3" height="15" fill="rgb(228,33,8)"/><text x="116.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="113" y="484" width="3" height="15" fill="rgb(209,65,24)"/><text x="116.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="116" y="340" width="3" height="15" fill="rgb(246,12,49)"/><text x="119.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="116" y="356" width="3" height="15" fill="rgb(219,196,3)"/><text x="119.00" y="366.50"></text></g><g><title>onnxruntime::Greater&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="340" width="2" height="15" fill="rgb(248,5,3)"/><text x="122.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Greater&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="356" width="2" height="15" fill="rgb(241,83,34)"/><text x="122.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="372" width="2" height="15" fill="rgb(217,196,15)"/><text x="122.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="388" width="2" height="15" fill="rgb(247,147,45)"/><text x="122.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="404" width="2" height="15" fill="rgb(249,196,31)"/><text x="122.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="420" width="2" height="15" fill="rgb(251,121,11)"/><text x="122.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="436" width="2" height="15" fill="rgb(213,212,2)"/><text x="122.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="452" width="2" height="15" fill="rgb(230,179,41)"/><text x="122.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="119" y="468" width="2" height="15" fill="rgb(244,208,28)"/><text x="122.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="119" y="484" width="2" height="15" fill="rgb(223,199,6)"/><text x="122.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="119" y="500" width="2" height="15" fill="rgb(241,53,48)"/><text x="122.00" y="510.50"></text></g><g><title>onnxruntime::MatMulComputeHelper::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="121" y="356" width="3" height="15" fill="rgb(244,45,11)"/><text x="124.00" y="366.50"></text></g><g><title>std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;::_M_assign_aux&lt;unsigned long const*&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="121" y="372" width="3" height="15" fill="rgb(252,225,42)"/><text x="124.00" y="382.50"></text></g><g><title>0x7f5c1a64bd97 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="121" y="388" width="3" height="15" fill="rgb(216,165,8)"/><text x="124.00" y="398.50"></text></g><g><title>onnxruntime::MatMul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="121" y="340" width="6" height="15" fill="rgb(240,229,5)"/><text x="124.00" y="350.50"></text></g><g><title>onnxruntime::math::MatMul&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="124" y="356" width="3" height="15" fill="rgb(211,193,21)"/><text x="127.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="124" y="372" width="3" height="15" fill="rgb(253,146,46)"/><text x="127.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="124" y="388" width="3" height="15" fill="rgb(250,105,24)"/><text x="127.00" y="398.50"></text></g><g><title>mkl_blas_errchk_sgemm (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="124" y="404" width="3" height="15" fill="rgb(234,157,34)"/><text x="127.00" y="414.50"></text></g><g><title>mkl_serv_lsame (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.23%)</title><rect x="124" y="420" width="3" height="15" fill="rgb(227,152,50)"/><text x="127.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="127" y="340" width="2" height="15" fill="rgb(217,144,9)"/><text x="130.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="127" y="356" width="2" height="15" fill="rgb(223,199,6)"/><text x="130.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="340" width="3" height="15" fill="rgb(218,12,35)"/><text x="132.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="356" width="3" height="15" fill="rgb(250,37,44)"/><text x="132.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="372" width="3" height="15" fill="rgb(228,180,37)"/><text x="132.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="388" width="3" height="15" fill="rgb(218,69,38)"/><text x="132.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="404" width="3" height="15" fill="rgb(215,35,20)"/><text x="132.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="129" y="420" width="3" height="15" fill="rgb(240,139,35)"/><text x="132.00" y="430.50"></text></g><g><title>0x7f5c1a62b9d3 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="132" y="372" width="3" height="15" fill="rgb(230,46,52)"/><text x="135.00" y="382.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="132" y="340" width="6" height="15" fill="rgb(235,77,52)"/><text x="135.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="132" y="356" width="6" height="15" fill="rgb(251,147,27)"/><text x="135.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="135" y="372" width="3" height="15" fill="rgb(214,166,20)"/><text x="138.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="135" y="388" width="3" height="15" fill="rgb(226,166,39)"/><text x="138.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.46%)</title><rect x="99" y="260" width="41" height="15" fill="rgb(211,112,51)"/><text x="102.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.46%)</title><rect x="99" y="276" width="41" height="15" fill="rgb(215,28,0)"/><text x="102.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.46%)</title><rect x="99" y="292" width="41" height="15" fill="rgb(245,70,10)"/><text x="102.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.46%)</title><rect x="99" y="308" width="41" height="15" fill="rgb(210,195,54)"/><text x="102.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 3.46%)</title><rect x="99" y="324" width="41" height="15" fill="rgb(211,71,32)"/><text x="102.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="138" y="340" width="2" height="15" fill="rgb(238,34,49)"/><text x="141.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="138" y="356" width="2" height="15" fill="rgb(222,4,39)"/><text x="141.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="138" y="372" width="2" height="15" fill="rgb(234,101,47)"/><text x="141.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="138" y="388" width="2" height="15" fill="rgb(230,27,17)"/><text x="141.00" y="398.50"></text></g><g><title>onnxruntime::SequenceType&lt;onnxruntime::TensorSeq&gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.46%)</title><rect x="140" y="260" width="6" height="15" fill="rgb(223,119,9)"/><text x="143.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="146" y="260" width="2" height="15" fill="rgb(223,21,21)"/><text x="149.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.23%)</title><rect x="146" y="276" width="2" height="15" fill="rgb(237,196,41)"/><text x="149.00" y="286.50"></text></g><g><title>0x7f5c1a709151 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="146" y="292" width="2" height="15" fill="rgb(241,179,18)"/><text x="149.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="148" y="260" width="3" height="15" fill="rgb(213,221,51)"/><text x="151.00" y="270.50"></text></g><g><title>profile_ort (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (36 samples, 8.31%)</title><rect x="56" y="68" width="98" height="15" fill="rgb(208,223,27)"/><text x="59.00" y="78.50">profile_ort..</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (36 samples, 8.31%)</title><rect x="56" y="84" width="98" height="15" fill="rgb(216,0,48)"/><text x="59.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (36 samples, 8.31%)</title><rect x="56" y="100" width="98" height="15" fill="rgb(246,197,8)"/><text x="59.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 8.08%)</title><rect x="59" y="116" width="95" height="15" fill="rgb(236,116,3)"/><text x="62.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (35 samples, 8.08%)</title><rect x="59" y="132" width="95" height="15" fill="rgb(239,171,40)"/><text x="62.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (33 samples, 7.62%)</title><rect x="64" y="148" width="90" height="15" fill="rgb(241,181,30)"/><text x="67.00" y="158.50">run (mlpro..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (30 samples, 6.93%)</title><rect x="72" y="164" width="82" height="15" fill="rgb(220,140,44)"/><text x="75.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (29 samples, 6.70%)</title><rect x="75" y="180" width="79" height="15" fill="rgb(228,50,49)"/><text x="78.00" y="190.50">run (mlpr..</text></g><g><title>run (onnxruntime/capi/session.py) (29 samples, 6.70%)</title><rect x="75" y="196" width="79" height="15" fill="rgb(209,21,14)"/><text x="78.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 5.54%)</title><rect x="89" y="212" width="65" height="15" fill="rgb(214,4,4)"/><text x="92.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.08%)</title><rect x="94" y="228" width="60" height="15" fill="rgb(252,110,48)"/><text x="97.00" y="238.50">void p..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.08%)</title><rect x="94" y="244" width="60" height="15" fill="rgb(239,30,47)"/><text x="97.00" y="254.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="151" y="260" width="3" height="15" fill="rgb(219,135,11)"/><text x="154.00" y="270.50"></text></g><g><title>0x7f5c1a64c120 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="364" y="196" width="2" height="15" fill="rgb(246,193,25)"/><text x="367.00" y="206.50"></text></g><g><title>0x7f5c1a64c14e (libc-2.29.so) (1 samples, 0.23%)</title><rect x="366" y="196" width="3" height="15" fill="rgb(245,23,21)"/><text x="369.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (5 samples, 1.15%)</title><rect x="369" y="196" width="14" height="15" fill="rgb(218,114,30)"/><text x="372.00" y="206.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.46%)</title><rect x="418" y="276" width="6" height="15" fill="rgb(230,89,53)"/><text x="421.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.46%)</title><rect x="418" y="292" width="6" height="15" fill="rgb(220,28,28)"/><text x="421.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="421" y="308" width="3" height="15" fill="rgb(237,134,27)"/><text x="424.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="421" y="324" width="3" height="15" fill="rgb(236,26,46)"/><text x="424.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.23%)</title><rect x="424" y="276" width="2" height="15" fill="rgb(233,187,2)"/><text x="427.00" y="286.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c) (1 samples, 0.23%)</title><rect x="424" y="292" width="2" height="15" fill="rgb(223,38,21)"/><text x="427.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.92%)</title><rect x="418" y="260" width="11" height="15" fill="rgb(209,153,23)"/><text x="421.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="426" y="276" width="3" height="15" fill="rgb(213,70,47)"/><text x="429.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.23%)</title><rect x="426" y="292" width="3" height="15" fill="rgb(225,89,12)"/><text x="429.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="426" y="308" width="3" height="15" fill="rgb(228,165,46)"/><text x="429.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (7 samples, 1.62%)</title><rect x="413" y="212" width="19" height="15" fill="rgb(206,25,1)"/><text x="416.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 1.15%)</title><rect x="418" y="228" width="14" height="15" fill="rgb(236,177,6)"/><text x="421.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (5 samples, 1.15%)</title><rect x="418" y="244" width="14" height="15" fill="rgb(234,188,34)"/><text x="421.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(250,69,52)"/><text x="432.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.23%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(231,35,20)"/><text x="432.00" y="286.50"></text></g><g><title>broadcast_strides (array_assign.c) (1 samples, 0.23%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(232,152,37)"/><text x="435.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.69%)</title><rect x="432" y="260" width="8" height="15" fill="rgb(237,58,14)"/><text x="435.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.46%)</title><rect x="435" y="276" width="5" height="15" fill="rgb(242,169,53)"/><text x="438.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="437" y="292" width="3" height="15" fill="rgb(211,146,28)"/><text x="440.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 0.92%)</title><rect x="432" y="212" width="11" height="15" fill="rgb(223,109,6)"/><text x="435.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 0.92%)</title><rect x="432" y="228" width="11" height="15" fill="rgb(235,167,13)"/><text x="435.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 0.92%)</title><rect x="432" y="244" width="11" height="15" fill="rgb(247,175,48)"/><text x="435.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.23%)</title><rect x="440" y="260" width="3" height="15" fill="rgb(231,195,7)"/><text x="443.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.23%)</title><rect x="440" y="276" width="3" height="15" fill="rgb(209,158,14)"/><text x="443.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="440" y="292" width="3" height="15" fill="rgb(237,39,11)"/><text x="443.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="443" y="308" width="3" height="15" fill="rgb(239,149,25)"/><text x="446.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="443" y="324" width="3" height="15" fill="rgb(239,48,28)"/><text x="446.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.23%)</title><rect x="446" y="308" width="2" height="15" fill="rgb(210,126,51)"/><text x="449.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="446" y="324" width="2" height="15" fill="rgb(246,139,6)"/><text x="449.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_greater.py) (3 samples, 0.69%)</title><rect x="443" y="212" width="8" height="15" fill="rgb(207,179,24)"/><text x="446.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.69%)</title><rect x="443" y="228" width="8" height="15" fill="rgb(206,104,8)"/><text x="446.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.69%)</title><rect x="443" y="244" width="8" height="15" fill="rgb(243,162,29)"/><text x="446.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.69%)</title><rect x="443" y="260" width="8" height="15" fill="rgb(226,118,18)"/><text x="446.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.69%)</title><rect x="443" y="276" width="8" height="15" fill="rgb(235,7,20)"/><text x="446.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.69%)</title><rect x="443" y="292" width="8" height="15" fill="rgb(222,81,31)"/><text x="446.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="448" y="308" width="3" height="15" fill="rgb(223,179,10)"/><text x="451.00" y="318.50"></text></g><g><title>0x7f5c1984def0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="454" y="276" width="2" height="15" fill="rgb(210,0,18)"/><text x="457.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.69%)</title><rect x="451" y="212" width="8" height="15" fill="rgb(253,50,12)"/><text x="454.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.46%)</title><rect x="454" y="228" width="5" height="15" fill="rgb(229,207,34)"/><text x="457.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.46%)</title><rect x="454" y="244" width="5" height="15" fill="rgb(228,70,21)"/><text x="457.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.46%)</title><rect x="454" y="260" width="5" height="15" fill="rgb(211,101,10)"/><text x="457.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="456" y="276" width="3" height="15" fill="rgb(231,58,16)"/><text x="459.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.23%)</title><rect x="456" y="292" width="3" height="15" fill="rgb(225,184,9)"/><text x="459.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="462" y="276" width="3" height="15" fill="rgb(232,67,6)"/><text x="465.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.23%)</title><rect x="465" y="276" width="2" height="15" fill="rgb(254,19,1)"/><text x="468.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.23%)</title><rect x="467" y="340" width="3" height="15" fill="rgb(219,102,1)"/><text x="470.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.46%)</title><rect x="467" y="276" width="6" height="15" fill="rgb(233,204,53)"/><text x="470.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (2 samples, 0.46%)</title><rect x="467" y="292" width="6" height="15" fill="rgb(205,134,13)"/><text x="470.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.46%)</title><rect x="467" y="308" width="6" height="15" fill="rgb(234,228,52)"/><text x="470.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.46%)</title><rect x="467" y="324" width="6" height="15" fill="rgb(214,90,11)"/><text x="470.00" y="334.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.23%)</title><rect x="470" y="340" width="3" height="15" fill="rgb(231,157,51)"/><text x="473.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.46%)</title><rect x="473" y="276" width="5" height="15" fill="rgb(227,205,20)"/><text x="476.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="476" y="292" width="2" height="15" fill="rgb(238,201,24)"/><text x="479.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.23%)</title><rect x="476" y="308" width="2" height="15" fill="rgb(222,31,20)"/><text x="479.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="476" y="324" width="2" height="15" fill="rgb(231,11,46)"/><text x="479.00" y="334.50"></text></g><g><title>sse2_binary_scalar1_add_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="476" y="340" width="2" height="15" fill="rgb(234,23,49)"/><text x="479.00" y="350.50"></text></g><g><title>npy_aligned_block_offset (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="476" y="356" width="2" height="15" fill="rgb(248,177,46)"/><text x="479.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (8 samples, 1.85%)</title><rect x="459" y="212" width="22" height="15" fill="rgb(223,202,14)"/><text x="462.00" y="222.50">_..</text></g><g><title>array_add (number.c) (7 samples, 1.62%)</title><rect x="462" y="228" width="19" height="15" fill="rgb(224,130,10)"/><text x="465.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.62%)</title><rect x="462" y="244" width="19" height="15" fill="rgb(227,227,29)"/><text x="465.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.62%)</title><rect x="462" y="260" width="19" height="15" fill="rgb(231,44,16)"/><text x="465.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="478" y="276" width="3" height="15" fill="rgb(213,3,36)"/><text x="481.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.23%)</title><rect x="478" y="292" width="3" height="15" fill="rgb(213,2,22)"/><text x="481.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.46%)</title><rect x="481" y="212" width="5" height="15" fill="rgb(240,143,53)"/><text x="484.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.46%)</title><rect x="481" y="228" width="5" height="15" fill="rgb(240,72,50)"/><text x="484.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="497" y="276" width="3" height="15" fill="rgb(232,103,25)"/><text x="500.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="497" y="292" width="3" height="15" fill="rgb(235,141,8)"/><text x="500.00" y="302.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="500" y="276" width="3" height="15" fill="rgb(227,215,15)"/><text x="503.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="500" y="292" width="3" height="15" fill="rgb(214,192,35)"/><text x="503.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="503" y="292" width="2" height="15" fill="rgb(223,220,39)"/><text x="506.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="503" y="308" width="2" height="15" fill="rgb(220,182,34)"/><text x="506.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.23%)</title><rect x="503" y="324" width="2" height="15" fill="rgb(223,42,50)"/><text x="506.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.23%)</title><rect x="503" y="340" width="2" height="15" fill="rgb(245,142,51)"/><text x="506.00" y="350.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="503" y="356" width="2" height="15" fill="rgb(252,141,9)"/><text x="506.00" y="366.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.23%)</title><rect x="508" y="308" width="3" height="15" fill="rgb(233,155,0)"/><text x="511.00" y="318.50"></text></g><g><title>run_binary_simd_subtract_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="508" y="324" width="3" height="15" fill="rgb(230,38,51)"/><text x="511.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_subtract_FLOAT (simd.inc.src) (1 samples, 0.23%)</title><rect x="508" y="340" width="3" height="15" fill="rgb(221,60,49)"/><text x="511.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="511" y="308" width="3" height="15" fill="rgb(216,207,16)"/><text x="514.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.23%)</title><rect x="511" y="324" width="3" height="15" fill="rgb(254,27,39)"/><text x="514.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.92%)</title><rect x="505" y="292" width="11" height="15" fill="rgb(243,141,28)"/><text x="508.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.23%)</title><rect x="514" y="308" width="2" height="15" fill="rgb(249,74,32)"/><text x="517.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="514" y="324" width="2" height="15" fill="rgb(230,75,5)"/><text x="517.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (11 samples, 2.54%)</title><rect x="489" y="228" width="30" height="15" fill="rgb(244,199,2)"/><text x="492.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.85%)</title><rect x="497" y="244" width="22" height="15" fill="rgb(223,95,34)"/><text x="500.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.85%)</title><rect x="497" y="260" width="22" height="15" fill="rgb(224,91,0)"/><text x="500.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.39%)</title><rect x="503" y="276" width="16" height="15" fill="rgb(250,2,47)"/><text x="506.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="516" y="292" width="3" height="15" fill="rgb(221,19,48)"/><text x="519.00" y="302.50"></text></g><g><title>FLOAT_subtract (loops.c.src) (1 samples, 0.23%)</title><rect x="516" y="308" width="3" height="15" fill="rgb(236,180,31)"/><text x="519.00" y="318.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.23%)</title><rect x="527" y="292" width="3" height="15" fill="rgb(217,146,36)"/><text x="530.00" y="302.50"></text></g><g><title>0x7f5c1a641e50 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="535" y="356" width="3" height="15" fill="rgb(247,222,52)"/><text x="538.00" y="366.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 0.92%)</title><rect x="530" y="308" width="11" height="15" fill="rgb(244,189,27)"/><text x="533.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.69%)</title><rect x="533" y="324" width="8" height="15" fill="rgb(231,69,52)"/><text x="536.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.46%)</title><rect x="535" y="340" width="6" height="15" fill="rgb(224,197,2)"/><text x="538.00" y="350.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.23%)</title><rect x="538" y="356" width="3" height="15" fill="rgb(220,133,45)"/><text x="541.00" y="366.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 1.85%)</title><rect x="522" y="276" width="22" height="15" fill="rgb(208,102,10)"/><text x="525.00" y="286.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 1.15%)</title><rect x="530" y="292" width="14" height="15" fill="rgb(219,44,9)"/><text x="533.00" y="302.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.23%)</title><rect x="541" y="308" width="3" height="15" fill="rgb(228,160,35)"/><text x="544.00" y="318.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.23%)</title><rect x="541" y="324" width="3" height="15" fill="rgb(218,70,39)"/><text x="544.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.23%)</title><rect x="541" y="340" width="3" height="15" fill="rgb(226,72,16)"/><text x="544.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.23%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(254,2,34)"/><text x="544.00" y="366.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.23%)</title><rect x="544" y="276" width="2" height="15" fill="rgb(238,164,30)"/><text x="547.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.23%)</title><rect x="544" y="292" width="2" height="15" fill="rgb(235,131,53)"/><text x="547.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.23%)</title><rect x="544" y="308" width="2" height="15" fill="rgb(241,134,6)"/><text x="547.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.23%)</title><rect x="544" y="324" width="2" height="15" fill="rgb(233,101,22)"/><text x="547.00" y="334.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (12 samples, 2.77%)</title><rect x="522" y="260" width="33" height="15" fill="rgb(253,107,36)"/><text x="525.00" y="270.50">_a..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (3 samples, 0.69%)</title><rect x="546" y="276" width="9" height="15" fill="rgb(206,96,26)"/><text x="549.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.69%)</title><rect x="546" y="292" width="9" height="15" fill="rgb(247,193,45)"/><text x="549.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (3 samples, 0.69%)</title><rect x="546" y="308" width="9" height="15" fill="rgb(211,130,39)"/><text x="549.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (14 samples, 3.23%)</title><rect x="519" y="228" width="38" height="15" fill="rgb(234,167,9)"/><text x="522.00" y="238.50">_ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (14 samples, 3.23%)</title><rect x="519" y="244" width="38" height="15" fill="rgb(220,22,43)"/><text x="522.00" y="254.50">_ru..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="555" y="260" width="2" height="15" fill="rgb(215,76,3)"/><text x="558.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="555" y="276" width="2" height="15" fill="rgb(213,86,41)"/><text x="558.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="555" y="292" width="2" height="15" fill="rgb(238,118,19)"/><text x="558.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="565" y="276" width="3" height="15" fill="rgb(242,25,21)"/><text x="568.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="565" y="292" width="3" height="15" fill="rgb(225,119,38)"/><text x="568.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="565" y="308" width="3" height="15" fill="rgb(248,11,5)"/><text x="568.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.23%)</title><rect x="565" y="324" width="3" height="15" fill="rgb(229,195,16)"/><text x="568.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.23%)</title><rect x="565" y="340" width="3" height="15" fill="rgb(244,37,16)"/><text x="568.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="565" y="356" width="3" height="15" fill="rgb(220,92,12)"/><text x="568.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.23%)</title><rect x="565" y="372" width="3" height="15" fill="rgb(225,180,47)"/><text x="568.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="568" y="276" width="3" height="15" fill="rgb(225,134,0)"/><text x="571.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.23%)</title><rect x="568" y="292" width="3" height="15" fill="rgb(235,37,49)"/><text x="571.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.92%)</title><rect x="563" y="260" width="11" height="15" fill="rgb(225,41,23)"/><text x="566.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="571" y="276" width="3" height="15" fill="rgb(242,67,40)"/><text x="574.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (7 samples, 1.62%)</title><rect x="557" y="228" width="19" height="15" fill="rgb(252,204,3)"/><text x="560.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.15%)</title><rect x="563" y="244" width="13" height="15" fill="rgb(247,225,31)"/><text x="566.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.23%)</title><rect x="574" y="260" width="2" height="15" fill="rgb(211,184,13)"/><text x="577.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.23%)</title><rect x="579" y="260" width="3" height="15" fill="rgb(220,95,50)"/><text x="582.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.23%)</title><rect x="579" y="276" width="3" height="15" fill="rgb(219,59,3)"/><text x="582.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="579" y="292" width="3" height="15" fill="rgb(242,206,18)"/><text x="582.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="579" y="308" width="3" height="15" fill="rgb(213,65,14)"/><text x="582.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="585" y="276" width="2" height="15" fill="rgb(224,101,5)"/><text x="588.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="585" y="292" width="2" height="15" fill="rgb(212,112,29)"/><text x="588.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="587" y="292" width="3" height="15" fill="rgb(219,31,23)"/><text x="590.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="587" y="308" width="3" height="15" fill="rgb(238,205,48)"/><text x="590.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.23%)</title><rect x="587" y="324" width="3" height="15" fill="rgb(212,215,45)"/><text x="590.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.23%)</title><rect x="587" y="340" width="3" height="15" fill="rgb(232,151,39)"/><text x="590.00" y="350.50"></text></g><g><title>euclid (mem_overlap.c) (1 samples, 0.23%)</title><rect x="587" y="356" width="3" height="15" fill="rgb(217,155,33)"/><text x="590.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (6 samples, 1.39%)</title><rect x="576" y="228" width="17" height="15" fill="rgb(206,123,5)"/><text x="579.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.15%)</title><rect x="579" y="244" width="14" height="15" fill="rgb(218,86,9)"/><text x="582.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.92%)</title><rect x="582" y="260" width="11" height="15" fill="rgb(212,46,50)"/><text x="585.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.46%)</title><rect x="587" y="276" width="6" height="15" fill="rgb(250,68,5)"/><text x="590.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="590" y="292" width="3" height="15" fill="rgb(225,165,26)"/><text x="593.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.23%)</title><rect x="590" y="308" width="3" height="15" fill="rgb(208,37,1)"/><text x="593.00" y="318.50"></text></g><g><title>0x7f5c1a7ada15 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="590" y="324" width="3" height="15" fill="rgb(235,72,46)"/><text x="593.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="598" y="260" width="3" height="15" fill="rgb(229,167,52)"/><text x="601.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.23%)</title><rect x="601" y="260" width="3" height="15" fill="rgb(219,133,21)"/><text x="604.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.23%)</title><rect x="601" y="276" width="3" height="15" fill="rgb(251,8,13)"/><text x="604.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.23%)</title><rect x="601" y="292" width="3" height="15" fill="rgb(251,126,43)"/><text x="604.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="601" y="308" width="3" height="15" fill="rgb(222,89,21)"/><text x="604.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.23%)</title><rect x="614" y="340" width="3" height="15" fill="rgb(231,135,28)"/><text x="617.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.23%)</title><rect x="614" y="356" width="3" height="15" fill="rgb(251,178,17)"/><text x="617.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.23%)</title><rect x="614" y="372" width="3" height="15" fill="rgb(211,1,2)"/><text x="617.00" y="382.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (2 samples, 0.46%)</title><rect x="614" y="324" width="6" height="15" fill="rgb(229,225,35)"/><text x="617.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="617" y="340" width="3" height="15" fill="rgb(236,140,32)"/><text x="620.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.23%)</title><rect x="620" y="340" width="3" height="15" fill="rgb(220,215,30)"/><text x="623.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="623" y="340" width="2" height="15" fill="rgb(209,79,0)"/><text x="626.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="623" y="356" width="2" height="15" fill="rgb(253,2,18)"/><text x="626.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="623" y="372" width="2" height="15" fill="rgb(252,151,35)"/><text x="626.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (14 samples, 3.23%)</title><rect x="593" y="228" width="38" height="15" fill="rgb(229,7,19)"/><text x="596.00" y="238.50">_ru..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (14 samples, 3.23%)</title><rect x="593" y="244" width="38" height="15" fill="rgb(209,102,35)"/><text x="596.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (10 samples, 2.31%)</title><rect x="604" y="260" width="27" height="15" fill="rgb(241,130,33)"/><text x="607.00" y="270.50">d..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.85%)</title><rect x="609" y="276" width="22" height="15" fill="rgb(241,12,28)"/><text x="612.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 1.62%)</title><rect x="612" y="292" width="19" height="15" fill="rgb(233,62,2)"/><text x="615.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (7 samples, 1.62%)</title><rect x="612" y="308" width="19" height="15" fill="rgb(222,208,3)"/><text x="615.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 0.92%)</title><rect x="620" y="324" width="11" height="15" fill="rgb(217,116,20)"/><text x="623.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (2 samples, 0.46%)</title><rect x="625" y="340" width="6" height="15" fill="rgb(241,61,17)"/><text x="628.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.46%)</title><rect x="625" y="356" width="6" height="15" fill="rgb(236,134,8)"/><text x="628.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.23%)</title><rect x="628" y="372" width="3" height="15" fill="rgb(230,75,9)"/><text x="631.00" y="382.50"></text></g><g><title>0x7f5c1a64c14a (libc-2.29.so) (1 samples, 0.23%)</title><rect x="647" y="308" width="3" height="15" fill="rgb(207,47,44)"/><text x="650.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.46%)</title><rect x="650" y="356" width="5" height="15" fill="rgb(228,80,21)"/><text x="653.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.46%)</title><rect x="650" y="372" width="5" height="15" fill="rgb(227,190,6)"/><text x="653.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.46%)</title><rect x="650" y="388" width="5" height="15" fill="rgb(251,217,44)"/><text x="653.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.69%)</title><rect x="650" y="324" width="8" height="15" fill="rgb(219,163,17)"/><text x="653.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.69%)</title><rect x="650" y="340" width="8" height="15" fill="rgb(251,112,48)"/><text x="653.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="655" y="356" width="3" height="15" fill="rgb(241,202,40)"/><text x="658.00" y="366.50"></text></g><g><title>0x7f5c1a64c1ff (libc-2.29.so) (1 samples, 0.23%)</title><rect x="658" y="356" width="3" height="15" fill="rgb(244,149,30)"/><text x="661.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.23%)</title><rect x="661" y="388" width="3" height="15" fill="rgb(242,62,15)"/><text x="664.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.23%)</title><rect x="661" y="404" width="3" height="15" fill="rgb(252,171,39)"/><text x="664.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.23%)</title><rect x="661" y="420" width="3" height="15" fill="rgb(230,143,31)"/><text x="664.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.46%)</title><rect x="661" y="372" width="5" height="15" fill="rgb(240,184,42)"/><text x="664.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="664" y="388" width="2" height="15" fill="rgb(237,193,50)"/><text x="667.00" y="398.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.23%)</title><rect x="666" y="404" width="3" height="15" fill="rgb(248,175,40)"/><text x="669.00" y="414.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (12 samples, 2.77%)</title><rect x="639" y="244" width="33" height="15" fill="rgb(231,19,45)"/><text x="642.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 2.77%)</title><rect x="639" y="260" width="33" height="15" fill="rgb(227,158,29)"/><text x="642.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py) (11 samples, 2.54%)</title><rect x="642" y="276" width="30" height="15" fill="rgb(211,220,31)"/><text x="645.00" y="286.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (11 samples, 2.54%)</title><rect x="642" y="292" width="30" height="15" fill="rgb(254,211,29)"/><text x="645.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.85%)</title><rect x="650" y="308" width="22" height="15" fill="rgb(240,95,40)"/><text x="653.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 1.15%)</title><rect x="658" y="324" width="14" height="15" fill="rgb(208,34,38)"/><text x="661.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.15%)</title><rect x="658" y="340" width="14" height="15" fill="rgb(228,97,43)"/><text x="661.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.92%)</title><rect x="661" y="356" width="11" height="15" fill="rgb(210,39,40)"/><text x="664.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.46%)</title><rect x="666" y="372" width="6" height="15" fill="rgb(229,211,13)"/><text x="669.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.46%)</title><rect x="666" y="388" width="6" height="15" fill="rgb(254,106,38)"/><text x="669.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="669" y="404" width="3" height="15" fill="rgb(220,184,1)"/><text x="672.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="669" y="420" width="3" height="15" fill="rgb(233,53,8)"/><text x="672.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.23%)</title><rect x="669" y="436" width="3" height="15" fill="rgb(235,70,28)"/><text x="672.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="669" y="452" width="3" height="15" fill="rgb(209,94,29)"/><text x="672.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(237,37,35)"/><text x="675.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="672" y="292" width="2" height="15" fill="rgb(246,63,31)"/><text x="675.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.23%)</title><rect x="672" y="308" width="2" height="15" fill="rgb(235,33,46)"/><text x="675.00" y="318.50"></text></g><g><title>0x7f5c1a7ad9d4 (libm-2.29.so) (1 samples, 0.23%)</title><rect x="672" y="324" width="2" height="15" fill="rgb(213,206,1)"/><text x="675.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_log_sum_exp.py) (17 samples, 3.93%)</title><rect x="631" y="228" width="46" height="15" fill="rgb(225,160,34)"/><text x="634.00" y="238.50">_run..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.46%)</title><rect x="672" y="244" width="5" height="15" fill="rgb(250,22,39)"/><text x="675.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.46%)</title><rect x="672" y="260" width="5" height="15" fill="rgb(234,76,26)"/><text x="675.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="674" y="276" width="3" height="15" fill="rgb(252,174,5)"/><text x="677.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="674" y="292" width="3" height="15" fill="rgb(211,49,14)"/><text x="677.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="674" y="308" width="3" height="15" fill="rgb(241,110,48)"/><text x="677.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (11 samples, 2.54%)</title><rect x="677" y="228" width="30" height="15" fill="rgb(243,59,32)"/><text x="680.00" y="238.50">_r..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (10 samples, 2.31%)</title><rect x="680" y="244" width="27" height="15" fill="rgb(251,6,39)"/><text x="683.00" y="254.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.08%)</title><rect x="683" y="260" width="24" height="15" fill="rgb(254,102,20)"/><text x="686.00" y="270.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 1.85%)</title><rect x="685" y="276" width="22" height="15" fill="rgb(212,107,22)"/><text x="688.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 0.92%)</title><rect x="696" y="292" width="11" height="15" fill="rgb(213,186,27)"/><text x="699.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.46%)</title><rect x="702" y="308" width="5" height="15" fill="rgb(229,6,9)"/><text x="705.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.46%)</title><rect x="702" y="324" width="5" height="15" fill="rgb(226,52,2)"/><text x="705.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.23%)</title><rect x="704" y="340" width="3" height="15" fill="rgb(210,134,24)"/><text x="707.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.23%)</title><rect x="704" y="356" width="3" height="15" fill="rgb(251,44,54)"/><text x="707.00" y="366.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (204 samples, 47.11%)</title><rect x="154" y="164" width="556" height="15" fill="rgb(211,103,43)"/><text x="157.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (191 samples, 44.11%)</title><rect x="189" y="180" width="521" height="15" fill="rgb(217,94,29)"/><text x="192.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (120 samples, 27.71%)</title><rect x="383" y="196" width="327" height="15" fill="rgb(231,63,13)"/><text x="386.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 18.94%)</title><rect x="486" y="212" width="224" height="15" fill="rgb(236,144,9)"/><text x="489.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.23%)</title><rect x="707" y="228" width="3" height="15" fill="rgb(223,178,21)"/><text x="710.00" y="238.50"></text></g><g><title>profile_pyrt (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (205 samples, 47.34%)</title><rect x="154" y="68" width="559" height="15" fill="rgb(231,98,38)"/><text x="157.00" y="78.50">profile_pyrt (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (205 samples, 47.34%)</title><rect x="154" y="84" width="559" height="15" fill="rgb(246,51,11)"/><text x="157.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (205 samples, 47.34%)</title><rect x="154" y="100" width="559" height="15" fill="rgb(211,73,41)"/><text x="157.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 47.34%)</title><rect x="154" y="116" width="559" height="15" fill="rgb(237,219,6)"/><text x="157.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (205 samples, 47.34%)</title><rect x="154" y="132" width="559" height="15" fill="rgb(218,170,27)"/><text x="157.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (205 samples, 47.34%)</title><rect x="154" y="148" width="559" height="15" fill="rgb(212,134,14)"/><text x="157.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="710" y="164" width="3" height="15" fill="rgb(252,59,6)"/><text x="713.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="710" y="180" width="3" height="15" fill="rgb(227,207,44)"/><text x="713.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="710" y="196" width="3" height="15" fill="rgb(239,215,31)"/><text x="713.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.69%)</title><rect x="751" y="228" width="8" height="15" fill="rgb(219,8,41)"/><text x="754.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.23%)</title><rect x="759" y="228" width="3" height="15" fill="rgb(219,160,31)"/><text x="762.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.39%)</title><rect x="762" y="228" width="16" height="15" fill="rgb(229,18,40)"/><text x="765.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="773" y="244" width="5" height="15" fill="rgb(231,127,26)"/><text x="776.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="778" y="228" width="3" height="15" fill="rgb(243,146,52)"/><text x="781.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.23%)</title><rect x="794" y="244" width="3" height="15" fill="rgb(227,34,19)"/><text x="797.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.85%)</title><rect x="781" y="228" width="22" height="15" fill="rgb(205,178,33)"/><text x="784.00" y="238.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.46%)</title><rect x="797" y="244" width="6" height="15" fill="rgb(221,62,8)"/><text x="800.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.46%)</title><rect x="797" y="260" width="6" height="15" fill="rgb(220,121,35)"/><text x="800.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.23%)</title><rect x="803" y="228" width="2" height="15" fill="rgb(228,163,44)"/><text x="806.00" y="238.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (36 samples, 8.31%)</title><rect x="726" y="196" width="98" height="15" fill="rgb(209,182,17)"/><text x="729.00" y="206.50">_check_X (s..</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 8.31%)</title><rect x="726" y="212" width="98" height="15" fill="rgb(234,123,51)"/><text x="729.00" y="222.50">check_array..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.62%)</title><rect x="805" y="228" width="19" height="15" fill="rgb(241,129,24)"/><text x="808.00" y="238.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.39%)</title><rect x="808" y="244" width="16" height="15" fill="rgb(251,151,50)"/><text x="811.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="827" y="276" width="3" height="15" fill="rgb(251,28,50)"/><text x="830.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.23%)</title><rect x="827" y="292" width="3" height="15" fill="rgb(214,187,7)"/><text x="830.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="827" y="308" width="3" height="15" fill="rgb(206,68,6)"/><text x="830.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="827" y="324" width="3" height="15" fill="rgb(252,37,46)"/><text x="830.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="827" y="340" width="3" height="15" fill="rgb(212,226,31)"/><text x="830.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.46%)</title><rect x="827" y="260" width="6" height="15" fill="rgb(240,131,19)"/><text x="830.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="830" y="276" width="3" height="15" fill="rgb(229,103,6)"/><text x="833.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="830" y="292" width="3" height="15" fill="rgb(243,169,8)"/><text x="833.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="830" y="308" width="3" height="15" fill="rgb(224,31,20)"/><text x="833.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 0.69%)</title><rect x="827" y="212" width="8" height="15" fill="rgb(250,171,29)"/><text x="830.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.69%)</title><rect x="827" y="228" width="8" height="15" fill="rgb(236,172,29)"/><text x="830.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.69%)</title><rect x="827" y="244" width="8" height="15" fill="rgb(216,218,18)"/><text x="830.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="833" y="260" width="2" height="15" fill="rgb(206,41,47)"/><text x="836.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="833" y="276" width="2" height="15" fill="rgb(241,22,20)"/><text x="836.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.23%)</title><rect x="846" y="228" width="3" height="15" fill="rgb(233,31,48)"/><text x="849.00" y="238.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.23%)</title><rect x="849" y="228" width="3" height="15" fill="rgb(231,93,35)"/><text x="852.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.23%)</title><rect x="852" y="228" width="2" height="15" fill="rgb(234,75,15)"/><text x="855.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="854" y="228" width="3" height="15" fill="rgb(239,20,3)"/><text x="857.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.23%)</title><rect x="862" y="244" width="3" height="15" fill="rgb(218,18,19)"/><text x="865.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 1.15%)</title><rect x="857" y="228" width="14" height="15" fill="rgb(240,126,53)"/><text x="860.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.46%)</title><rect x="865" y="244" width="6" height="15" fill="rgb(253,17,2)"/><text x="868.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="871" y="228" width="2" height="15" fill="rgb(224,229,28)"/><text x="874.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.69%)</title><rect x="873" y="228" width="9" height="15" fill="rgb(246,115,21)"/><text x="876.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.23%)</title><rect x="879" y="244" width="3" height="15" fill="rgb(221,133,9)"/><text x="882.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.23%)</title><rect x="882" y="228" width="2" height="15" fill="rgb(214,98,22)"/><text x="885.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.46%)</title><rect x="884" y="228" width="6" height="15" fill="rgb(220,70,7)"/><text x="887.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.23%)</title><rect x="887" y="244" width="3" height="15" fill="rgb(244,183,9)"/><text x="890.00" y="254.50"></text></g><g><title>0x7f5c1a641730 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="887" y="260" width="3" height="15" fill="rgb(246,161,50)"/><text x="890.00" y="270.50"></text></g><g><title>_check_X (sklearn/naive_bayes.py) (61 samples, 14.09%)</title><rect x="726" y="180" width="166" height="15" fill="rgb(247,175,44)"/><text x="729.00" y="190.50">_check_X (sklearn/nai..</text></g><g><title>binarize (sklearn/preprocessing/_data.py) (25 samples, 5.77%)</title><rect x="824" y="196" width="68" height="15" fill="rgb(213,221,4)"/><text x="827.00" y="206.50">binariz..</text></g><g><title>check_array (sklearn/utils/validation.py) (21 samples, 4.85%)</title><rect x="835" y="212" width="57" height="15" fill="rgb(230,186,12)"/><text x="838.00" y="222.50">check_..</text></g><g><title>may_share_memory (&lt;__array_function__ internals&gt;) (1 samples, 0.23%)</title><rect x="890" y="228" width="2" height="15" fill="rgb(231,28,46)"/><text x="893.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.23%)</title><rect x="890" y="244" width="2" height="15" fill="rgb(244,172,54)"/><text x="893.00" y="254.50"></text></g><g><title>array_may_share_memory (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="890" y="260" width="2" height="15" fill="rgb(221,6,43)"/><text x="893.00" y="270.50"></text></g><g><title>array_shares_memory_impl (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="890" y="276" width="2" height="15" fill="rgb(220,144,14)"/><text x="893.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="890" y="292" width="2" height="15" fill="rgb(246,37,39)"/><text x="893.00" y="302.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.23%)</title><rect x="895" y="196" width="3" height="15" fill="rgb(250,75,17)"/><text x="898.00" y="206.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="895" y="212" width="3" height="15" fill="rgb(232,130,5)"/><text x="898.00" y="222.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.23%)</title><rect x="895" y="228" width="3" height="15" fill="rgb(246,22,31)"/><text x="898.00" y="238.50"></text></g><g><title>PyArray_CLEARFLAGS (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="895" y="244" width="3" height="15" fill="rgb(242,138,2)"/><text x="898.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="898" y="244" width="3" height="15" fill="rgb(222,103,23)"/><text x="901.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="901" y="244" width="2" height="15" fill="rgb(218,25,26)"/><text x="904.00" y="254.50"></text></g><g><title>array_add (number.c) (3 samples, 0.69%)</title><rect x="898" y="196" width="8" height="15" fill="rgb(210,205,18)"/><text x="901.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.69%)</title><rect x="898" y="212" width="8" height="15" fill="rgb(232,37,45)"/><text x="901.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.69%)</title><rect x="898" y="228" width="8" height="15" fill="rgb(210,189,42)"/><text x="901.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="903" y="244" width="3" height="15" fill="rgb(226,181,52)"/><text x="906.00" y="254.50"></text></g><g><title>0x7f5c1a62bbdc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="906" y="212" width="3" height="15" fill="rgb(250,203,18)"/><text x="909.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.46%)</title><rect x="906" y="196" width="6" height="15" fill="rgb(206,73,33)"/><text x="909.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="909" y="212" width="3" height="15" fill="rgb(229,144,53)"/><text x="912.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.23%)</title><rect x="909" y="228" width="3" height="15" fill="rgb(242,172,43)"/><text x="912.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.23%)</title><rect x="909" y="244" width="3" height="15" fill="rgb(244,24,8)"/><text x="912.00" y="254.50"></text></g><g><title>0x7f5c1a62bca0 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="909" y="260" width="3" height="15" fill="rgb(227,174,38)"/><text x="912.00" y="270.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (2 samples, 0.46%)</title><rect x="912" y="244" width="5" height="15" fill="rgb(244,93,8)"/><text x="915.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="914" y="260" width="3" height="15" fill="rgb(228,171,54)"/><text x="917.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="914" y="276" width="3" height="15" fill="rgb(205,35,13)"/><text x="917.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.23%)</title><rect x="914" y="292" width="3" height="15" fill="rgb(243,200,8)"/><text x="917.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.23%)</title><rect x="914" y="308" width="3" height="15" fill="rgb(236,125,24)"/><text x="917.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="917" y="244" width="3" height="15" fill="rgb(223,136,30)"/><text x="920.00" y="254.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.23%)</title><rect x="917" y="260" width="3" height="15" fill="rgb(245,115,37)"/><text x="920.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.23%)</title><rect x="917" y="276" width="3" height="15" fill="rgb(246,223,54)"/><text x="920.00" y="286.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="917" y="292" width="3" height="15" fill="rgb(215,55,35)"/><text x="920.00" y="302.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="917" y="308" width="3" height="15" fill="rgb(215,60,35)"/><text x="920.00" y="318.50"></text></g><g><title>array_subtract (number.c) (4 samples, 0.92%)</title><rect x="912" y="196" width="10" height="15" fill="rgb(241,126,16)"/><text x="915.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.92%)</title><rect x="912" y="212" width="10" height="15" fill="rgb(248,10,21)"/><text x="915.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.92%)</title><rect x="912" y="228" width="10" height="15" fill="rgb(233,80,46)"/><text x="915.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="920" y="244" width="2" height="15" fill="rgb(214,128,22)"/><text x="923.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="920" y="260" width="2" height="15" fill="rgb(248,190,48)"/><text x="923.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="920" y="276" width="2" height="15" fill="rgb(252,145,13)"/><text x="923.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="920" y="292" width="2" height="15" fill="rgb(211,86,10)"/><text x="923.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="920" y="308" width="2" height="15" fill="rgb(228,40,31)"/><text x="923.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.23%)</title><rect x="920" y="324" width="2" height="15" fill="rgb(217,134,47)"/><text x="923.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="920" y="340" width="2" height="15" fill="rgb(246,98,42)"/><text x="923.00" y="350.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.23%)</title><rect x="925" y="276" width="3" height="15" fill="rgb(217,76,42)"/><text x="928.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="928" y="308" width="3" height="15" fill="rgb(221,60,4)"/><text x="931.00" y="318.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.23%)</title><rect x="928" y="324" width="3" height="15" fill="rgb(219,102,41)"/><text x="931.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.23%)</title><rect x="931" y="308" width="2" height="15" fill="rgb(239,179,8)"/><text x="934.00" y="318.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.23%)</title><rect x="931" y="324" width="2" height="15" fill="rgb(224,79,8)"/><text x="934.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="931" y="340" width="2" height="15" fill="rgb(240,6,33)"/><text x="934.00" y="350.50"></text></g><g><title>0x7f5c1a5e39fb (libc-2.29.so) (1 samples, 0.23%)</title><rect x="931" y="356" width="2" height="15" fill="rgb(245,51,43)"/><text x="934.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.23%)</title><rect x="933" y="308" width="3" height="15" fill="rgb(227,122,34)"/><text x="936.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="933" y="324" width="3" height="15" fill="rgb(249,1,19)"/><text x="936.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="933" y="340" width="3" height="15" fill="rgb(227,95,11)"/><text x="936.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="933" y="356" width="3" height="15" fill="rgb(230,154,17)"/><text x="936.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.92%)</title><rect x="928" y="292" width="11" height="15" fill="rgb(212,9,29)"/><text x="931.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="936" y="308" width="3" height="15" fill="rgb(241,193,21)"/><text x="939.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.23%)</title><rect x="936" y="324" width="3" height="15" fill="rgb(241,191,51)"/><text x="939.00" y="334.50"></text></g><g><title>array_sum (methods.c) (7 samples, 1.62%)</title><rect x="922" y="196" width="20" height="15" fill="rgb(236,179,9)"/><text x="925.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c) (7 samples, 1.62%)</title><rect x="922" y="212" width="20" height="15" fill="rgb(254,213,22)"/><text x="925.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py) (7 samples, 1.62%)</title><rect x="922" y="228" width="20" height="15" fill="rgb(233,193,5)"/><text x="925.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.62%)</title><rect x="922" y="244" width="20" height="15" fill="rgb(251,48,40)"/><text x="925.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.62%)</title><rect x="922" y="260" width="20" height="15" fill="rgb(246,49,47)"/><text x="925.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.15%)</title><rect x="928" y="276" width="14" height="15" fill="rgb(222,74,6)"/><text x="931.00" y="286.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.23%)</title><rect x="939" y="292" width="3" height="15" fill="rgb(232,195,25)"/><text x="942.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="939" y="308" width="3" height="15" fill="rgb(239,91,14)"/><text x="942.00" y="318.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="939" y="324" width="3" height="15" fill="rgb(230,192,14)"/><text x="942.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="961" y="324" width="2" height="15" fill="rgb(207,113,38)"/><text x="964.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.46%)</title><rect x="961" y="292" width="5" height="15" fill="rgb(230,139,24)"/><text x="964.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.46%)</title><rect x="961" y="308" width="5" height="15" fill="rgb(243,20,16)"/><text x="964.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="963" y="324" width="3" height="15" fill="rgb(217,84,29)"/><text x="966.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.23%)</title><rect x="963" y="340" width="3" height="15" fill="rgb(236,36,38)"/><text x="966.00" y="350.50"></text></g><g><title>0x7f5c1984d710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="966" y="372" width="3" height="15" fill="rgb(210,77,39)"/><text x="969.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.39%)</title><rect x="955" y="260" width="16" height="15" fill="rgb(213,30,11)"/><text x="958.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.15%)</title><rect x="958" y="276" width="13" height="15" fill="rgb(224,148,41)"/><text x="961.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.46%)</title><rect x="966" y="292" width="5" height="15" fill="rgb(254,150,30)"/><text x="969.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.46%)</title><rect x="966" y="308" width="5" height="15" fill="rgb(217,190,10)"/><text x="969.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.46%)</title><rect x="966" y="324" width="5" height="15" fill="rgb(217,215,11)"/><text x="969.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.46%)</title><rect x="966" y="340" width="5" height="15" fill="rgb(207,0,54)"/><text x="969.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.46%)</title><rect x="966" y="356" width="5" height="15" fill="rgb(242,46,27)"/><text x="969.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="969" y="372" width="2" height="15" fill="rgb(241,9,8)"/><text x="972.00" y="382.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="971" y="260" width="3" height="15" fill="rgb(253,68,2)"/><text x="974.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (13 samples, 3.00%)</title><rect x="942" y="196" width="35" height="15" fill="rgb(245,53,7)"/><text x="945.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.31%)</title><rect x="950" y="212" width="27" height="15" fill="rgb(228,103,42)"/><text x="953.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.31%)</title><rect x="950" y="228" width="27" height="15" fill="rgb(236,142,4)"/><text x="953.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (10 samples, 2.31%)</title><rect x="950" y="244" width="27" height="15" fill="rgb(221,58,35)"/><text x="953.00" y="254.50">P..</text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.23%)</title><rect x="974" y="260" width="3" height="15" fill="rgb(225,138,10)"/><text x="977.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.46%)</title><rect x="980" y="244" width="5" height="15" fill="rgb(254,11,14)"/><text x="983.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.46%)</title><rect x="980" y="260" width="5" height="15" fill="rgb(252,134,30)"/><text x="983.00" y="270.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="982" y="276" width="3" height="15" fill="rgb(241,150,8)"/><text x="985.00" y="286.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.23%)</title><rect x="982" y="292" width="3" height="15" fill="rgb(225,98,29)"/><text x="985.00" y="302.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.23%)</title><rect x="982" y="308" width="3" height="15" fill="rgb(251,132,7)"/><text x="985.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="982" y="324" width="3" height="15" fill="rgb(217,179,24)"/><text x="985.00" y="334.50"></text></g><g><title>0x7f5c1a62cd67 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="982" y="340" width="3" height="15" fill="rgb(249,229,46)"/><text x="985.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.69%)</title><rect x="980" y="228" width="8" height="15" fill="rgb(253,157,26)"/><text x="983.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="985" y="244" width="3" height="15" fill="rgb(244,52,51)"/><text x="988.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.23%)</title><rect x="985" y="260" width="3" height="15" fill="rgb(244,176,40)"/><text x="988.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="985" y="276" width="3" height="15" fill="rgb(219,171,18)"/><text x="988.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="988" y="228" width="3" height="15" fill="rgb(211,89,6)"/><text x="991.00" y="238.50"></text></g><g><title>_joint_log_likelihood (sklearn/naive_bayes.py) (37 samples, 8.55%)</title><rect x="892" y="180" width="101" height="15" fill="rgb(234,196,33)"/><text x="895.00" y="190.50">_joint_log_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.39%)</title><rect x="977" y="196" width="16" height="15" fill="rgb(223,49,23)"/><text x="980.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.15%)</title><rect x="980" y="212" width="13" height="15" fill="rgb(222,58,47)"/><text x="983.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.23%)</title><rect x="991" y="228" width="2" height="15" fill="rgb(220,105,8)"/><text x="994.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="993" y="180" width="3" height="15" fill="rgb(208,129,36)"/><text x="996.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="993" y="196" width="3" height="15" fill="rgb(235,48,25)"/><text x="996.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="993" y="212" width="3" height="15" fill="rgb(246,227,47)"/><text x="996.00" y="222.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="996" y="228" width="3" height="15" fill="rgb(245,38,44)"/><text x="999.00" y="238.50"></text></g><g><title>array_subtract (number.c) (2 samples, 0.46%)</title><rect x="996" y="180" width="5" height="15" fill="rgb(245,137,26)"/><text x="999.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.46%)</title><rect x="996" y="196" width="5" height="15" fill="rgb(208,187,44)"/><text x="999.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.46%)</title><rect x="996" y="212" width="5" height="15" fill="rgb(213,224,41)"/><text x="999.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="999" y="228" width="2" height="15" fill="rgb(214,76,34)"/><text x="1002.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="999" y="244" width="2" height="15" fill="rgb(209,143,52)"/><text x="1002.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.23%)</title><rect x="999" y="260" width="2" height="15" fill="rgb(207,5,18)"/><text x="1002.00" y="270.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.23%)</title><rect x="999" y="276" width="2" height="15" fill="rgb(213,27,28)"/><text x="1002.00" y="286.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (3 samples, 0.69%)</title><rect x="1001" y="180" width="9" height="15" fill="rgb(224,24,27)"/><text x="1004.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.46%)</title><rect x="1004" y="196" width="6" height="15" fill="rgb(206,226,46)"/><text x="1007.00" y="206.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (1 samples, 0.23%)</title><rect x="1007" y="212" width="3" height="15" fill="rgb(254,127,28)"/><text x="1010.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.23%)</title><rect x="1023" y="196" width="3" height="15" fill="rgb(229,145,28)"/><text x="1026.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 1.62%)</title><rect x="1010" y="180" width="19" height="15" fill="rgb(213,228,6)"/><text x="1013.00" y="190.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.23%)</title><rect x="1026" y="196" width="3" height="15" fill="rgb(230,8,11)"/><text x="1029.00" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (3 samples, 0.69%)</title><rect x="1056" y="196" width="8" height="15" fill="rgb(245,141,5)"/><text x="1059.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 0.69%)</title><rect x="1056" y="212" width="8" height="15" fill="rgb(222,116,3)"/><text x="1059.00" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.23%)</title><rect x="1061" y="228" width="3" height="15" fill="rgb(220,103,52)"/><text x="1064.00" y="238.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.23%)</title><rect x="1075" y="228" width="3" height="15" fill="rgb(245,84,38)"/><text x="1078.00" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (7 samples, 1.62%)</title><rect x="1064" y="196" width="19" height="15" fill="rgb(221,28,12)"/><text x="1067.00" y="206.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (4 samples, 0.92%)</title><rect x="1072" y="212" width="11" height="15" fill="rgb(222,206,11)"/><text x="1075.00" y="222.50"></text></g><g><title>ufunc_seterr (ufunc_object.c) (2 samples, 0.46%)</title><rect x="1078" y="228" width="5" height="15" fill="rgb(235,189,44)"/><text x="1081.00" y="238.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c) (2 samples, 0.46%)</title><rect x="1078" y="244" width="5" height="15" fill="rgb(226,143,22)"/><text x="1081.00" y="254.50"></text></g><g><title>_extract_pyvals (extobj.c) (2 samples, 0.46%)</title><rect x="1078" y="260" width="5" height="15" fill="rgb(207,0,45)"/><text x="1081.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.23%)</title><rect x="1083" y="212" width="3" height="15" fill="rgb(240,101,16)"/><text x="1086.00" y="222.50"></text></g><g><title>_asarray_validated (scipy/_lib/_util.py) (2 samples, 0.46%)</title><rect x="1083" y="196" width="6" height="15" fill="rgb(231,33,17)"/><text x="1086.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.23%)</title><rect x="1086" y="212" width="3" height="15" fill="rgb(213,6,12)"/><text x="1089.00" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (2 samples, 0.46%)</title><rect x="1089" y="260" width="5" height="15" fill="rgb(206,155,35)"/><text x="1092.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.46%)</title><rect x="1094" y="276" width="6" height="15" fill="rgb(213,122,2)"/><text x="1097.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.46%)</title><rect x="1094" y="292" width="6" height="15" fill="rgb(205,57,51)"/><text x="1097.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.46%)</title><rect x="1094" y="308" width="6" height="15" fill="rgb(245,151,5)"/><text x="1097.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.23%)</title><rect x="1100" y="340" width="2" height="15" fill="rgb(239,53,35)"/><text x="1103.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.46%)</title><rect x="1100" y="324" width="5" height="15" fill="rgb(209,119,12)"/><text x="1103.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1102" y="340" width="3" height="15" fill="rgb(232,220,45)"/><text x="1105.00" y="350.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.23%)</title><rect x="1105" y="356" width="3" height="15" fill="rgb(231,119,31)"/><text x="1108.00" y="366.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(229,96,11)"/><text x="1108.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.46%)</title><rect x="1105" y="340" width="5" height="15" fill="rgb(225,142,12)"/><text x="1108.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.23%)</title><rect x="1108" y="356" width="2" height="15" fill="rgb(220,142,5)"/><text x="1111.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="1108" y="372" width="2" height="15" fill="rgb(250,211,24)"/><text x="1111.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 1.15%)</title><rect x="1100" y="292" width="13" height="15" fill="rgb(250,102,50)"/><text x="1103.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 1.15%)</title><rect x="1100" y="308" width="13" height="15" fill="rgb(228,31,1)"/><text x="1103.00" y="318.50"></text></g><g><title>PyArray_InitializeReduceResult (reduction.c) (3 samples, 0.69%)</title><rect x="1105" y="324" width="8" height="15" fill="rgb(210,3,48)"/><text x="1108.00" y="334.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.23%)</title><rect x="1110" y="340" width="3" height="15" fill="rgb(225,0,46)"/><text x="1113.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="1110" y="356" width="3" height="15" fill="rgb(215,180,26)"/><text x="1113.00" y="366.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (10 samples, 2.31%)</title><rect x="1089" y="196" width="27" height="15" fill="rgb(247,219,3)"/><text x="1092.00" y="206.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 2.31%)</title><rect x="1089" y="212" width="27" height="15" fill="rgb(242,184,7)"/><text x="1092.00" y="222.50">a..</text></g><g><title>amax (numpy/core/fromnumeric.py) (10 samples, 2.31%)</title><rect x="1089" y="228" width="27" height="15" fill="rgb(212,99,48)"/><text x="1092.00" y="238.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (10 samples, 2.31%)</title><rect x="1089" y="244" width="27" height="15" fill="rgb(220,61,28)"/><text x="1092.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.85%)</title><rect x="1094" y="260" width="22" height="15" fill="rgb(227,67,3)"/><text x="1097.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 1.39%)</title><rect x="1100" y="276" width="16" height="15" fill="rgb(207,203,19)"/><text x="1103.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.23%)</title><rect x="1113" y="292" width="3" height="15" fill="rgb(246,30,54)"/><text x="1116.00" y="302.50"></text></g><g><title>0x7f5c1a709134 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1113" y="308" width="3" height="15" fill="rgb(233,95,34)"/><text x="1116.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.23%)</title><rect x="1116" y="212" width="3" height="15" fill="rgb(216,193,24)"/><text x="1119.00" y="222.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.23%)</title><rect x="1116" y="228" width="3" height="15" fill="rgb(245,138,45)"/><text x="1119.00" y="238.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="1116" y="244" width="3" height="15" fill="rgb(237,110,33)"/><text x="1119.00" y="254.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.23%)</title><rect x="1116" y="260" width="3" height="15" fill="rgb(218,4,19)"/><text x="1119.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.46%)</title><rect x="1116" y="196" width="5" height="15" fill="rgb(235,167,21)"/><text x="1119.00" y="206.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.23%)</title><rect x="1119" y="212" width="2" height="15" fill="rgb(225,98,16)"/><text x="1122.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.23%)</title><rect x="1119" y="228" width="2" height="15" fill="rgb(230,91,12)"/><text x="1122.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="1121" y="196" width="3" height="15" fill="rgb(205,68,34)"/><text x="1124.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.23%)</title><rect x="1121" y="212" width="3" height="15" fill="rgb(241,221,42)"/><text x="1124.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.23%)</title><rect x="1121" y="228" width="3" height="15" fill="rgb(219,17,11)"/><text x="1124.00" y="238.50"></text></g><g><title>array_subtract (number.c) (1 samples, 0.23%)</title><rect x="1124" y="196" width="3" height="15" fill="rgb(222,155,49)"/><text x="1127.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1124" y="212" width="3" height="15" fill="rgb(221,3,22)"/><text x="1127.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1124" y="228" width="3" height="15" fill="rgb(206,135,5)"/><text x="1127.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1124" y="244" width="3" height="15" fill="rgb(215,124,43)"/><text x="1127.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1124" y="260" width="3" height="15" fill="rgb(234,107,54)"/><text x="1127.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.23%)</title><rect x="1124" y="276" width="3" height="15" fill="rgb(233,93,16)"/><text x="1127.00" y="286.50"></text></g><g><title>squeeze (&lt;__array_function__ internals&gt;) (1 samples, 0.23%)</title><rect x="1127" y="196" width="3" height="15" fill="rgb(224,107,16)"/><text x="1130.00" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (2 samples, 0.46%)</title><rect x="1140" y="260" width="6" height="15" fill="rgb(219,32,24)"/><text x="1143.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.46%)</title><rect x="1146" y="276" width="5" height="15" fill="rgb(227,45,2)"/><text x="1149.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.46%)</title><rect x="1146" y="292" width="5" height="15" fill="rgb(212,36,45)"/><text x="1149.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.23%)</title><rect x="1149" y="308" width="2" height="15" fill="rgb(246,169,15)"/><text x="1152.00" y="318.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.23%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(234,34,30)"/><text x="1154.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.23%)</title><rect x="1151" y="308" width="3" height="15" fill="rgb(248,24,0)"/><text x="1154.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.23%)</title><rect x="1151" y="324" width="3" height="15" fill="rgb(229,72,8)"/><text x="1154.00" y="334.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (10 samples, 2.31%)</title><rect x="1130" y="196" width="27" height="15" fill="rgb(205,50,6)"/><text x="1133.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.08%)</title><rect x="1132" y="212" width="25" height="15" fill="rgb(246,70,1)"/><text x="1135.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py) (9 samples, 2.08%)</title><rect x="1132" y="228" width="25" height="15" fill="rgb(210,91,31)"/><text x="1135.00" y="238.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (6 samples, 1.39%)</title><rect x="1140" y="244" width="17" height="15" fill="rgb(238,54,43)"/><text x="1143.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 0.92%)</title><rect x="1146" y="260" width="11" height="15" fill="rgb(231,102,46)"/><text x="1149.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.46%)</title><rect x="1151" y="276" width="6" height="15" fill="rgb(219,75,5)"/><text x="1154.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1154" y="292" width="3" height="15" fill="rgb(210,22,32)"/><text x="1157.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.23%)</title><rect x="1154" y="308" width="3" height="15" fill="rgb(237,176,37)"/><text x="1157.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.23%)</title><rect x="1154" y="324" width="3" height="15" fill="rgb(226,7,52)"/><text x="1157.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="1154" y="340" width="3" height="15" fill="rgb(234,200,45)"/><text x="1157.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.23%)</title><rect x="1154" y="356" width="3" height="15" fill="rgb(253,147,54)"/><text x="1157.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.23%)</title><rect x="1154" y="372" width="3" height="15" fill="rgb(235,112,42)"/><text x="1157.00" y="382.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.23%)</title><rect x="1157" y="212" width="3" height="15" fill="rgb(221,112,52)"/><text x="1160.00" y="222.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1160" y="228" width="2" height="15" fill="rgb(241,204,12)"/><text x="1163.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.23%)</title><rect x="1162" y="244" width="3" height="15" fill="rgb(207,172,36)"/><text x="1165.00" y="254.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1162" y="260" width="3" height="15" fill="rgb(213,144,5)"/><text x="1165.00" y="270.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.23%)</title><rect x="1162" y="276" width="3" height="15" fill="rgb(245,187,46)"/><text x="1165.00" y="286.50"></text></g><g><title>0x7f5c1984e4f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="1162" y="292" width="3" height="15" fill="rgb(221,87,47)"/><text x="1165.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.23%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(216,18,8)"/><text x="1168.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.23%)</title><rect x="1165" y="260" width="3" height="15" fill="rgb(246,195,8)"/><text x="1168.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.23%)</title><rect x="1165" y="276" width="3" height="15" fill="rgb(211,209,30)"/><text x="1168.00" y="286.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (2 samples, 0.46%)</title><rect x="1168" y="260" width="5" height="15" fill="rgb(246,159,32)"/><text x="1171.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.15%)</title><rect x="1162" y="228" width="14" height="15" fill="rgb(243,79,1)"/><text x="1165.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.69%)</title><rect x="1168" y="244" width="8" height="15" fill="rgb(235,181,35)"/><text x="1171.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.23%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(231,140,48)"/><text x="1176.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.23%)</title><rect x="1173" y="276" width="3" height="15" fill="rgb(231,12,4)"/><text x="1176.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.23%)</title><rect x="1176" y="228" width="3" height="15" fill="rgb(214,27,54)"/><text x="1179.00" y="238.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (169 samples, 39.03%)</title><rect x="721" y="132" width="460" height="15" fill="rgb(225,57,9)"/><text x="724.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/naive_bayes.py) (169 samples, 39.03%)</title><rect x="721" y="148" width="460" height="15" fill="rgb(211,184,19)"/><text x="724.00" y="158.50">predict_proba (sklearn/naive_bayes.py)</text></g><g><title>predict_log_proba (sklearn/naive_bayes.py) (169 samples, 39.03%)</title><rect x="721" y="164" width="460" height="15" fill="rgb(220,101,43)"/><text x="724.00" y="174.50">predict_log_proba (sklearn/naive_bayes.py)</text></g><g><title>logsumexp (scipy/special/_logsumexp.py) (56 samples, 12.93%)</title><rect x="1029" y="180" width="152" height="15" fill="rgb(229,38,2)"/><text x="1032.00" y="190.50">logsumexp (scipy/sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.08%)</title><rect x="1157" y="196" width="24" height="15" fill="rgb(235,5,31)"/><text x="1160.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.85%)</title><rect x="1160" y="212" width="21" height="15" fill="rgb(219,118,21)"/><text x="1163.00" y="222.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1179" y="228" width="2" height="15" fill="rgb(222,169,2)"/><text x="1182.00" y="238.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.23%)</title><rect x="1179" y="244" width="2" height="15" fill="rgb(207,119,28)"/><text x="1182.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (432 samples, 99.77%)</title><rect x="10" y="52" width="1177" height="15" fill="rgb(236,83,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (174 samples, 40.18%)</title><rect x="713" y="68" width="474" height="15" fill="rgb(236,156,17)"/><text x="716.00" y="78.50">profile_skl (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (174 samples, 40.18%)</title><rect x="713" y="84" width="474" height="15" fill="rgb(249,14,11)"/><text x="716.00" y="94.50">setup_profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py) (174 samples, 40.18%)</title><rect x="713" y="100" width="474" height="15" fill="rgb(252,96,41)"/><text x="716.00" y="110.50">profile (bench_BernoulliNB_default_b_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (174 samples, 40.18%)</title><rect x="713" y="116" width="474" height="15" fill="rgb(237,39,14)"/><text x="716.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.46%)</title><rect x="1181" y="132" width="6" height="15" fill="rgb(218,223,21)"/><text x="1184.00" y="142.50"></text></g><g><title>all (433 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,182,6)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.23%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(251,70,42)"/><text x="1190.00" y="62.50"></text></g></g></svg>