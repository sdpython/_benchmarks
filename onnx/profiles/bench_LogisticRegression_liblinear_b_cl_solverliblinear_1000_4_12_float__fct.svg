<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(218,215,45)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(250,183,19)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(215,97,30)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(248,201,0)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(238,122,37)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(238,137,47)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(223,112,4)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(251,42,24)"/><text x="14.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(209,1,25)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(245,23,12)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.17%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(228,126,38)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(241,40,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(243,132,3)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(223,22,9)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(214,103,29)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(243,20,0)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(232,5,35)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.67%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(205,65,53)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(224,25,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(251,170,31)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(243,148,28)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(234,46,52)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(211,150,16)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.67%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(206,92,14)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(222,42,12)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(214,35,39)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(225,109,51)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(223,14,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(238,39,31)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.67%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(212,156,44)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(240,201,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(249,209,43)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(242,8,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(221,188,51)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(228,169,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(238,217,52)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(216,148,5)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(214,43,31)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(251,47,2)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(229,34,4)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(225,35,18)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(215,41,40)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(222,176,29)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(220,16,30)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(210,173,40)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(243,133,35)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.67%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(230,73,24)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(245,55,48)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(212,152,29)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(253,80,41)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(217,33,22)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(249,129,11)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.34%)</title><rect x="13" y="948" width="4" height="15" fill="rgb(242,165,40)"/><text x="16.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.17%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(246,210,19)"/><text x="18.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.17%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(253,198,31)"/><text x="18.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(236,195,23)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(241,203,1)"/><text x="20.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(208,178,1)"/><text x="20.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(216,42,4)"/><text x="20.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(214,205,36)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(239,206,7)"/><text x="20.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(215,160,49)"/><text x="20.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(239,64,51)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(210,162,35)"/><text x="20.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(219,105,20)"/><text x="20.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(233,112,19)"/><text x="20.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(220,182,47)"/><text x="20.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(235,88,21)"/><text x="20.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.17%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(241,4,2)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(250,86,18)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(235,162,20)"/><text x="20.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(205,117,40)"/><text x="20.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(240,22,29)"/><text x="20.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(209,78,38)"/><text x="20.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.17%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(205,20,17)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(229,182,1)"/><text x="20.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(206,168,1)"/><text x="20.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(229,151,24)"/><text x="20.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(245,13,31)"/><text x="20.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(210,60,12)"/><text x="20.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py) (1 samples, 0.17%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(218,42,49)"/><text x="20.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(246,129,43)"/><text x="20.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(238,111,26)"/><text x="20.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(226,71,32)"/><text x="20.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(254,170,28)"/><text x="20.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(238,225,12)"/><text x="20.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py) (1 samples, 0.17%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(223,192,46)"/><text x="20.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(218,220,0)"/><text x="20.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(225,160,50)"/><text x="20.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(234,226,40)"/><text x="20.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(237,123,26)"/><text x="20.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(207,19,46)"/><text x="20.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/lsq_linear.py) (1 samples, 0.17%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(217,194,54)"/><text x="20.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(249,116,43)"/><text x="20.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(252,94,26)"/><text x="20.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1556" width="2" height="15" fill="rgb(213,133,6)"/><text x="20.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1572" width="2" height="15" fill="rgb(211,143,21)"/><text x="20.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1588" width="2" height="15" fill="rgb(225,151,27)"/><text x="20.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/trf_linear.py) (1 samples, 0.17%)</title><rect x="17" y="1604" width="2" height="15" fill="rgb(225,101,54)"/><text x="20.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="10" y="196" width="11" height="15" fill="rgb(233,170,47)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="10" y="212" width="11" height="15" fill="rgb(205,198,7)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="10" y="228" width="11" height="15" fill="rgb(248,56,39)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="10" y="244" width="11" height="15" fill="rgb(228,155,11)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.01%)</title><rect x="10" y="260" width="11" height="15" fill="rgb(209,50,1)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="10" y="276" width="11" height="15" fill="rgb(211,152,1)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.34%)</title><rect x="17" y="292" width="4" height="15" fill="rgb(238,157,6)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="308" width="4" height="15" fill="rgb(249,194,49)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="324" width="4" height="15" fill="rgb(241,11,33)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="340" width="4" height="15" fill="rgb(215,80,44)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="356" width="4" height="15" fill="rgb(233,133,33)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="372" width="4" height="15" fill="rgb(254,199,48)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.34%)</title><rect x="17" y="388" width="4" height="15" fill="rgb(220,124,23)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="404" width="4" height="15" fill="rgb(222,1,19)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="420" width="4" height="15" fill="rgb(254,215,54)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="436" width="4" height="15" fill="rgb(206,136,48)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="452" width="4" height="15" fill="rgb(239,113,10)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="468" width="4" height="15" fill="rgb(210,21,50)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.34%)</title><rect x="17" y="484" width="4" height="15" fill="rgb(227,155,12)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="500" width="4" height="15" fill="rgb(228,180,49)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="516" width="4" height="15" fill="rgb(231,88,28)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="532" width="4" height="15" fill="rgb(211,8,33)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="548" width="4" height="15" fill="rgb(206,192,7)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="564" width="4" height="15" fill="rgb(221,119,9)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.34%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(243,90,44)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(232,86,22)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(240,33,34)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(223,109,13)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(254,105,22)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(233,210,37)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.34%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(226,161,52)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(242,169,31)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(207,5,33)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(220,101,36)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(224,34,27)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(209,37,40)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.34%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(250,41,18)"/><text x="20.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(243,96,5)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(249,38,3)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(244,210,1)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(253,158,22)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(220,88,16)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(206,58,26)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(208,48,15)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.34%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(221,98,18)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(238,123,11)"/><text x="22.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(239,228,40)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(210,38,40)"/><text x="22.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(243,38,46)"/><text x="22.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(222,34,10)"/><text x="22.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(222,117,14)"/><text x="22.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(220,30,42)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.17%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(219,88,51)"/><text x="22.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(230,19,44)"/><text x="22.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.17%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(236,223,51)"/><text x="22.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.17%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(224,31,32)"/><text x="22.00" y="1086.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.17%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(229,118,11)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.17%)</title><rect x="21" y="724" width="2" height="15" fill="rgb(221,64,54)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="740" width="2" height="15" fill="rgb(216,5,50)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="756" width="2" height="15" fill="rgb(231,41,40)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(232,164,26)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(216,184,39)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(230,61,48)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.17%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(228,53,34)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(235,60,53)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(238,124,25)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(207,229,32)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(212,19,48)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(223,41,54)"/><text x="24.00" y="910.50"></text></g><g><title>0x7fbaa5bb140e (?) (1 samples, 0.17%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(235,198,40)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(222,23,1)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(239,222,42)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(230,164,22)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(231,160,52)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(249,221,34)"/><text x="24.00" y="1006.50"></text></g><g><title>0x7fbaa596acd2 (?) (1 samples, 0.17%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(206,85,31)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(223,181,8)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(226,33,3)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(234,99,28)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(249,28,38)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(230,79,35)"/><text x="24.00" y="1102.50"></text></g><g><title>0x7fbaa50600e5 (?) (1 samples, 0.17%)</title><rect x="21" y="1108" width="2" height="15" fill="rgb(207,16,23)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1124" width="2" height="15" fill="rgb(235,171,8)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1140" width="2" height="15" fill="rgb(254,57,52)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1156" width="2" height="15" fill="rgb(223,14,46)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1172" width="2" height="15" fill="rgb(225,162,40)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1188" width="2" height="15" fill="rgb(207,39,2)"/><text x="24.00" y="1198.50"></text></g><g><title>0x7fbaa4de4e68 (?) (1 samples, 0.17%)</title><rect x="21" y="1204" width="2" height="15" fill="rgb(227,56,2)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1220" width="2" height="15" fill="rgb(233,181,29)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1236" width="2" height="15" fill="rgb(248,200,39)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1252" width="2" height="15" fill="rgb(225,54,9)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="21" y="1268" width="2" height="15" fill="rgb(208,20,35)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="21" y="1284" width="2" height="15" fill="rgb(213,59,31)"/><text x="24.00" y="1294.50"></text></g><g><title>0x7fbaa4b77b74 (?) (1 samples, 0.17%)</title><rect x="21" y="1300" width="2" height="15" fill="rgb(218,203,41)"/><text x="24.00" y="1310.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.17%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(223,167,2)"/><text x="26.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.17%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(224,83,30)"/><text x="26.00" y="1054.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.17%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(247,58,3)"/><text x="26.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(218,5,16)"/><text x="26.00" y="1086.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(249,119,5)"/><text x="26.00" y="1102.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.17%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(244,155,6)"/><text x="26.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.17%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(221,214,7)"/><text x="28.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(226,86,31)"/><text x="28.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(210,69,14)"/><text x="28.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(254,102,49)"/><text x="28.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(216,155,34)"/><text x="28.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(225,53,31)"/><text x="28.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(236,131,6)"/><text x="28.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(229,145,1)"/><text x="28.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.17%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(206,64,25)"/><text x="28.00" y="1262.50"></text></g><g><title>_Window (pandas/core/window.py) (1 samples, 0.17%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(238,213,13)"/><text x="28.00" y="1278.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.17%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(251,29,45)"/><text x="28.00" y="1294.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.17%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(249,106,41)"/><text x="28.00" y="1310.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.17%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(216,50,5)"/><text x="28.00" y="1326.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.67%)</title><rect x="21" y="340" width="8" height="15" fill="rgb(250,185,7)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="356" width="8" height="15" fill="rgb(236,81,32)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="372" width="8" height="15" fill="rgb(248,40,22)"/><text x="24.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="388" width="8" height="15" fill="rgb(209,211,42)"/><text x="24.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="21" y="404" width="8" height="15" fill="rgb(236,38,27)"/><text x="24.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="420" width="8" height="15" fill="rgb(253,85,24)"/><text x="24.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 0.67%)</title><rect x="21" y="436" width="8" height="15" fill="rgb(221,76,33)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="452" width="8" height="15" fill="rgb(242,141,4)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="468" width="8" height="15" fill="rgb(218,89,24)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="484" width="8" height="15" fill="rgb(231,206,41)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="21" y="500" width="8" height="15" fill="rgb(244,186,40)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="516" width="8" height="15" fill="rgb(218,49,33)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.67%)</title><rect x="21" y="532" width="8" height="15" fill="rgb(224,3,4)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="548" width="8" height="15" fill="rgb(238,126,51)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="564" width="8" height="15" fill="rgb(215,83,5)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="580" width="8" height="15" fill="rgb(254,21,2)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="21" y="596" width="8" height="15" fill="rgb(209,38,52)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="612" width="8" height="15" fill="rgb(248,35,31)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.67%)</title><rect x="21" y="628" width="8" height="15" fill="rgb(246,147,20)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="644" width="8" height="15" fill="rgb(218,13,32)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="660" width="8" height="15" fill="rgb(222,20,48)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="676" width="8" height="15" fill="rgb(236,88,3)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.67%)</title><rect x="21" y="692" width="8" height="15" fill="rgb(208,209,16)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.67%)</title><rect x="21" y="708" width="8" height="15" fill="rgb(233,84,9)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.51%)</title><rect x="23" y="724" width="6" height="15" fill="rgb(234,128,39)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="740" width="6" height="15" fill="rgb(222,208,16)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="756" width="6" height="15" fill="rgb(210,38,3)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="772" width="6" height="15" fill="rgb(214,68,45)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="23" y="788" width="6" height="15" fill="rgb(209,65,23)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="804" width="6" height="15" fill="rgb(208,106,7)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.51%)</title><rect x="23" y="820" width="6" height="15" fill="rgb(247,14,49)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="836" width="6" height="15" fill="rgb(228,52,20)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="852" width="6" height="15" fill="rgb(242,194,44)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="868" width="6" height="15" fill="rgb(209,223,44)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="23" y="884" width="6" height="15" fill="rgb(244,43,6)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="900" width="6" height="15" fill="rgb(211,205,29)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.51%)</title><rect x="23" y="916" width="6" height="15" fill="rgb(248,194,31)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="932" width="6" height="15" fill="rgb(231,152,15)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="948" width="6" height="15" fill="rgb(229,180,24)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="964" width="6" height="15" fill="rgb(221,210,15)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.51%)</title><rect x="23" y="980" width="6" height="15" fill="rgb(228,178,8)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.51%)</title><rect x="23" y="996" width="6" height="15" fill="rgb(227,75,28)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.51%)</title><rect x="23" y="1012" width="6" height="15" fill="rgb(242,188,35)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(238,200,37)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(233,152,0)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(215,173,27)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(234,73,43)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(242,202,51)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.34%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(254,139,7)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1124" width="2" height="15" fill="rgb(213,12,19)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1140" width="2" height="15" fill="rgb(252,26,36)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1156" width="2" height="15" fill="rgb(225,67,16)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1172" width="2" height="15" fill="rgb(227,12,39)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1188" width="2" height="15" fill="rgb(206,69,18)"/><text x="30.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.17%)</title><rect x="27" y="1204" width="2" height="15" fill="rgb(222,207,4)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1220" width="2" height="15" fill="rgb(244,179,38)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1236" width="2" height="15" fill="rgb(236,105,39)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1252" width="2" height="15" fill="rgb(222,46,25)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1268" width="2" height="15" fill="rgb(210,144,48)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1284" width="2" height="15" fill="rgb(245,200,31)"/><text x="30.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.17%)</title><rect x="27" y="1300" width="2" height="15" fill="rgb(250,7,7)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1316" width="2" height="15" fill="rgb(230,41,7)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1332" width="2" height="15" fill="rgb(215,80,23)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1348" width="2" height="15" fill="rgb(238,78,27)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1364" width="2" height="15" fill="rgb(207,56,8)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1380" width="2" height="15" fill="rgb(230,222,53)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.17%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(248,109,13)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1412" width="2" height="15" fill="rgb(232,180,30)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1428" width="2" height="15" fill="rgb(247,172,13)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1444" width="2" height="15" fill="rgb(250,128,30)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1460" width="2" height="15" fill="rgb(226,44,4)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1476" width="2" height="15" fill="rgb(238,16,22)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.17%)</title><rect x="27" y="1492" width="2" height="15" fill="rgb(205,227,20)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1508" width="2" height="15" fill="rgb(209,209,53)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1524" width="2" height="15" fill="rgb(235,165,36)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1540" width="2" height="15" fill="rgb(214,195,21)"/><text x="30.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1556" width="2" height="15" fill="rgb(238,166,33)"/><text x="30.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1572" width="2" height="15" fill="rgb(212,68,14)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.17%)</title><rect x="27" y="1588" width="2" height="15" fill="rgb(235,207,17)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1604" width="2" height="15" fill="rgb(225,190,32)"/><text x="30.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1620" width="2" height="15" fill="rgb(215,219,38)"/><text x="30.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1636" width="2" height="15" fill="rgb(206,207,39)"/><text x="30.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(247,213,0)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(243,178,1)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.17%)</title><rect x="27" y="1684" width="2" height="15" fill="rgb(229,96,2)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1700" width="2" height="15" fill="rgb(214,8,52)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1716" width="2" height="15" fill="rgb(243,66,49)"/><text x="30.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1732" width="2" height="15" fill="rgb(247,90,24)"/><text x="30.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1748" width="2" height="15" fill="rgb(230,144,15)"/><text x="30.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1764" width="2" height="15" fill="rgb(240,53,12)"/><text x="30.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.17%)</title><rect x="27" y="1780" width="2" height="15" fill="rgb(222,96,0)"/><text x="30.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1796" width="2" height="15" fill="rgb(240,11,9)"/><text x="30.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1812" width="2" height="15" fill="rgb(246,103,42)"/><text x="30.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1828" width="2" height="15" fill="rgb(207,206,38)"/><text x="30.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="27" y="1844" width="2" height="15" fill="rgb(246,219,37)"/><text x="30.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="27" y="1860" width="2" height="15" fill="rgb(216,227,54)"/><text x="30.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.17%)</title><rect x="27" y="1876" width="2" height="15" fill="rgb(234,10,35)"/><text x="30.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="27" y="1892" width="2" height="15" fill="rgb(254,163,13)"/><text x="30.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="27" y="1908" width="2" height="15" fill="rgb(207,111,15)"/><text x="30.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.17%)</title><rect x="27" y="1924" width="2" height="15" fill="rgb(222,120,46)"/><text x="30.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.17%)</title><rect x="27" y="1940" width="2" height="15" fill="rgb(249,228,44)"/><text x="30.00" y="1950.50"></text></g><g><title>kind (inspect.py) (1 samples, 0.17%)</title><rect x="27" y="1956" width="2" height="15" fill="rgb(228,165,34)"/><text x="30.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.17%)</title><rect x="29" y="580" width="2" height="15" fill="rgb(227,69,7)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="596" width="2" height="15" fill="rgb(212,214,14)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="612" width="2" height="15" fill="rgb(211,114,31)"/><text x="32.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="628" width="2" height="15" fill="rgb(241,213,10)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="644" width="2" height="15" fill="rgb(249,62,11)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="660" width="2" height="15" fill="rgb(205,111,33)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="676" width="2" height="15" fill="rgb(220,30,39)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="692" width="2" height="15" fill="rgb(252,32,4)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="708" width="2" height="15" fill="rgb(251,21,33)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="724" width="2" height="15" fill="rgb(237,84,35)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="740" width="2" height="15" fill="rgb(212,107,30)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="756" width="2" height="15" fill="rgb(220,103,18)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="772" width="2" height="15" fill="rgb(232,96,16)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="788" width="2" height="15" fill="rgb(253,100,38)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="804" width="2" height="15" fill="rgb(205,7,25)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.17%)</title><rect x="29" y="820" width="2" height="15" fill="rgb(207,87,10)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="836" width="2" height="15" fill="rgb(233,127,54)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="852" width="2" height="15" fill="rgb(228,54,43)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="868" width="2" height="15" fill="rgb(245,130,30)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="884" width="2" height="15" fill="rgb(219,15,23)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="900" width="2" height="15" fill="rgb(219,63,50)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.17%)</title><rect x="29" y="916" width="2" height="15" fill="rgb(233,181,26)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="932" width="2" height="15" fill="rgb(240,205,49)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="948" width="2" height="15" fill="rgb(232,180,33)"/><text x="32.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="964" width="2" height="15" fill="rgb(247,175,47)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(229,143,7)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(234,152,21)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1012" width="2" height="15" fill="rgb(228,61,32)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1028" width="2" height="15" fill="rgb(231,48,11)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1044" width="2" height="15" fill="rgb(232,178,32)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.17%)</title><rect x="29" y="1060" width="2" height="15" fill="rgb(252,15,2)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1076" width="2" height="15" fill="rgb(241,107,50)"/><text x="32.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1092" width="2" height="15" fill="rgb(242,64,35)"/><text x="32.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="29" y="1108" width="2" height="15" fill="rgb(227,52,21)"/><text x="32.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1124" width="2" height="15" fill="rgb(230,75,39)"/><text x="32.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1140" width="2" height="15" fill="rgb(244,90,50)"/><text x="32.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="29" y="1156" width="2" height="15" fill="rgb(224,4,12)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="68" width="23" height="15" fill="rgb(223,218,3)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="84" width="23" height="15" fill="rgb(251,105,41)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="100" width="23" height="15" fill="rgb(241,92,39)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.02%)</title><rect x="10" y="116" width="23" height="15" fill="rgb(236,7,47)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="132" width="23" height="15" fill="rgb(238,48,23)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (12 samples, 2.02%)</title><rect x="10" y="148" width="23" height="15" fill="rgb(233,127,54)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="164" width="23" height="15" fill="rgb(216,67,39)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.02%)</title><rect x="10" y="180" width="23" height="15" fill="rgb(233,56,2)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="196" width="12" height="15" fill="rgb(232,74,35)"/><text x="24.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.01%)</title><rect x="21" y="212" width="12" height="15" fill="rgb(231,28,43)"/><text x="24.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="228" width="12" height="15" fill="rgb(213,159,41)"/><text x="24.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.01%)</title><rect x="21" y="244" width="12" height="15" fill="rgb(250,20,51)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="260" width="12" height="15" fill="rgb(233,68,32)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="276" width="12" height="15" fill="rgb(209,149,42)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="292" width="12" height="15" fill="rgb(246,123,33)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.01%)</title><rect x="21" y="308" width="12" height="15" fill="rgb(206,38,29)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.01%)</title><rect x="21" y="324" width="12" height="15" fill="rgb(219,150,12)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.34%)</title><rect x="29" y="340" width="4" height="15" fill="rgb(229,206,53)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="356" width="4" height="15" fill="rgb(222,47,23)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="372" width="4" height="15" fill="rgb(206,138,29)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="388" width="4" height="15" fill="rgb(205,179,33)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="404" width="4" height="15" fill="rgb(232,38,2)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="420" width="4" height="15" fill="rgb(252,158,7)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="436" width="4" height="15" fill="rgb(239,202,17)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="29" y="452" width="4" height="15" fill="rgb(214,161,38)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="468" width="4" height="15" fill="rgb(225,120,39)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.34%)</title><rect x="29" y="484" width="4" height="15" fill="rgb(213,45,46)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="500" width="4" height="15" fill="rgb(235,9,51)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="516" width="4" height="15" fill="rgb(238,82,46)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="532" width="4" height="15" fill="rgb(240,26,48)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.34%)</title><rect x="29" y="548" width="4" height="15" fill="rgb(226,129,41)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.34%)</title><rect x="29" y="564" width="4" height="15" fill="rgb(224,71,34)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.17%)</title><rect x="31" y="580" width="2" height="15" fill="rgb(245,155,6)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="596" width="2" height="15" fill="rgb(214,70,6)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="612" width="2" height="15" fill="rgb(235,124,15)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="628" width="2" height="15" fill="rgb(209,159,22)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="644" width="2" height="15" fill="rgb(228,147,10)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="660" width="2" height="15" fill="rgb(213,204,36)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.17%)</title><rect x="31" y="676" width="2" height="15" fill="rgb(224,107,42)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="692" width="2" height="15" fill="rgb(246,123,52)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="708" width="2" height="15" fill="rgb(246,86,16)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="724" width="2" height="15" fill="rgb(225,207,41)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="740" width="2" height="15" fill="rgb(210,81,35)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="756" width="2" height="15" fill="rgb(245,140,3)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(253,97,8)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(236,213,21)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(220,93,24)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(210,197,26)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(210,193,30)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(254,115,26)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(239,99,39)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(230,187,42)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.17%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(251,203,12)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(254,18,13)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(232,135,54)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(246,63,19)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(219,221,11)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(245,83,44)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.17%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(244,82,42)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(233,14,22)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(226,87,40)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(242,35,45)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(207,227,44)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(215,82,46)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.17%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(207,124,20)"/><text x="34.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(253,79,9)"/><text x="34.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(242,178,30)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(243,204,42)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(251,1,46)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(219,190,16)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(218,192,53)"/><text x="34.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(217,9,22)"/><text x="34.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py) (1 samples, 0.17%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(213,44,42)"/><text x="34.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.17%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(232,142,2)"/><text x="34.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.17%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(214,107,14)"/><text x="34.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(245,119,0)"/><text x="34.00" y="1278.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.17%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(218,211,1)"/><text x="34.00" y="1294.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.17%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(206,188,35)"/><text x="34.00" y="1310.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.17%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(242,153,8)"/><text x="34.00" y="1326.50"></text></g><g><title>0x7fbacea29b9b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="97" y="132" width="2" height="15" fill="rgb(216,200,29)"/><text x="100.00" y="142.50"></text></g><g><title>0x7fbacea29bc6 (libc-2.29.so) (5 samples, 0.84%)</title><rect x="99" y="132" width="10" height="15" fill="rgb(231,150,21)"/><text x="102.00" y="142.50"></text></g><g><title>0x7fbacea29bd1 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="109" y="132" width="2" height="15" fill="rgb(253,85,14)"/><text x="112.00" y="142.50"></text></g><g><title>0x7fbacea29bdf (libc-2.29.so) (1 samples, 0.17%)</title><rect x="111" y="132" width="2" height="15" fill="rgb(226,68,11)"/><text x="114.00" y="142.50"></text></g><g><title>0x7fbacea29c14 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="113" y="132" width="2" height="15" fill="rgb(216,130,33)"/><text x="116.00" y="142.50"></text></g><g><title>0x7fbacea29c1c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="115" y="132" width="2" height="15" fill="rgb(215,29,40)"/><text x="118.00" y="142.50"></text></g><g><title>0x7fbacea29c20 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="117" y="132" width="2" height="15" fill="rgb(241,32,53)"/><text x="120.00" y="142.50"></text></g><g><title>0x7fbacea29c25 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="119" y="132" width="2" height="15" fill="rgb(217,110,8)"/><text x="122.00" y="142.50"></text></g><g><title>0x7fbacea29c28 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="121" y="132" width="2" height="15" fill="rgb(223,184,14)"/><text x="124.00" y="142.50"></text></g><g><title>0x7fbacea29c2d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="123" y="132" width="2" height="15" fill="rgb(228,33,51)"/><text x="126.00" y="142.50"></text></g><g><title>0x7fbacea29c36 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="125" y="132" width="2" height="15" fill="rgb(206,40,52)"/><text x="128.00" y="142.50"></text></g><g><title>0x7fbacea29c3d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="127" y="132" width="2" height="15" fill="rgb(208,9,10)"/><text x="130.00" y="142.50"></text></g><g><title>0x7fbacea29c49 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="129" y="132" width="4" height="15" fill="rgb(254,200,33)"/><text x="132.00" y="142.50"></text></g><g><title>0x7fbacea29c4d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="133" y="132" width="2" height="15" fill="rgb(209,66,48)"/><text x="136.00" y="142.50"></text></g><g><title>0x7fbacea29c5a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="135" y="132" width="2" height="15" fill="rgb(246,153,39)"/><text x="138.00" y="142.50"></text></g><g><title>0x7fbacea2aeb0 (libc-2.29.so) (22 samples, 3.71%)</title><rect x="97" y="116" width="44" height="15" fill="rgb(215,85,45)"/><text x="100.00" y="126.50">0x7f..</text></g><g><title>0x7fbacea29c73 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="137" y="132" width="4" height="15" fill="rgb(206,79,44)"/><text x="140.00" y="142.50"></text></g><g><title>0x7fbacea29aaf (libc-2.29.so) (1 samples, 0.17%)</title><rect x="139" y="148" width="2" height="15" fill="rgb(208,117,44)"/><text x="142.00" y="158.50"></text></g><g><title>0x7fba8ea9aff9 (?) (1 samples, 0.17%)</title><rect x="145" y="212" width="2" height="15" fill="rgb(246,22,16)"/><text x="148.00" y="222.50"></text></g><g><title>0x7fba8ea95ef6 (?) (1 samples, 0.17%)</title><rect x="145" y="228" width="2" height="15" fill="rgb(242,167,47)"/><text x="148.00" y="238.50"></text></g><g><title>0x7fba8ea8a962 (?) (1 samples, 0.17%)</title><rect x="145" y="244" width="2" height="15" fill="rgb(242,13,14)"/><text x="148.00" y="254.50"></text></g><g><title>0x7fba8eabe7a7 (?) (1 samples, 0.17%)</title><rect x="145" y="260" width="2" height="15" fill="rgb(222,226,36)"/><text x="148.00" y="270.50"></text></g><g><title>0x7fba8eabe379 (?) (1 samples, 0.17%)</title><rect x="145" y="276" width="2" height="15" fill="rgb(254,23,30)"/><text x="148.00" y="286.50"></text></g><g><title>0x7fba8ef1c8b8 (?) (1 samples, 0.17%)</title><rect x="145" y="292" width="2" height="15" fill="rgb(249,180,24)"/><text x="148.00" y="302.50"></text></g><g><title>0x7fba8ef1ac7f (?) (1 samples, 0.17%)</title><rect x="145" y="308" width="2" height="15" fill="rgb(244,83,25)"/><text x="148.00" y="318.50"></text></g><g><title>0x7fba8ef2d99c (?) (1 samples, 0.17%)</title><rect x="145" y="324" width="2" height="15" fill="rgb(211,3,13)"/><text x="148.00" y="334.50"></text></g><g><title>0x7fba8ec58450 (?) (1 samples, 0.17%)</title><rect x="145" y="340" width="2" height="15" fill="rgb(244,178,15)"/><text x="148.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="145" y="356" width="2" height="15" fill="rgb(243,123,30)"/><text x="148.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="145" y="372" width="2" height="15" fill="rgb(243,68,52)"/><text x="148.00" y="382.50"></text></g><g><title>0x7fbacea2bd67 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="145" y="388" width="2" height="15" fill="rgb(241,113,44)"/><text x="148.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.51%)</title><rect x="147" y="212" width="6" height="15" fill="rgb(217,186,10)"/><text x="150.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="151" y="228" width="2" height="15" fill="rgb(210,46,2)"/><text x="154.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="151" y="244" width="2" height="15" fill="rgb(226,86,6)"/><text x="154.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="151" y="260" width="2" height="15" fill="rgb(231,156,2)"/><text x="154.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="157" y="292" width="2" height="15" fill="rgb(246,223,25)"/><text x="160.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="157" y="308" width="2" height="15" fill="rgb(211,142,29)"/><text x="160.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="159" y="340" width="2" height="15" fill="rgb(233,43,15)"/><text x="162.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="161" y="340" width="2" height="15" fill="rgb(206,71,16)"/><text x="164.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="161" y="356" width="2" height="15" fill="rgb(234,162,25)"/><text x="164.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="201" y="356" width="4" height="15" fill="rgb(214,72,7)"/><text x="204.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="201" y="372" width="4" height="15" fill="rgb(207,22,32)"/><text x="204.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="201" y="388" width="4" height="15" fill="rgb(206,201,27)"/><text x="204.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="201" y="404" width="4" height="15" fill="rgb(254,99,10)"/><text x="204.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="203" y="420" width="2" height="15" fill="rgb(254,217,4)"/><text x="206.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="203" y="436" width="2" height="15" fill="rgb(254,148,54)"/><text x="206.00" y="446.50"></text></g><g><title>0x7fbacea4ad50 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="218" y="372" width="4" height="15" fill="rgb(224,221,6)"/><text x="221.00" y="382.50"></text></g><g><title>0x7fbaceba9e37 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="222" y="372" width="2" height="15" fill="rgb(243,67,18)"/><text x="225.00" y="382.50"></text></g><g><title>0x7fbaceba9e4e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(207,135,50)"/><text x="227.00" y="382.50"></text></g><g><title>0x7fbaceba9e5f (libm-2.29.so) (1 samples, 0.17%)</title><rect x="226" y="372" width="2" height="15" fill="rgb(205,113,15)"/><text x="229.00" y="382.50"></text></g><g><title>0x7fbaceba9e71 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="228" y="372" width="2" height="15" fill="rgb(242,39,6)"/><text x="231.00" y="382.50"></text></g><g><title>0x7fbaceba9e86 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="230" y="372" width="4" height="15" fill="rgb(216,23,6)"/><text x="233.00" y="382.50"></text></g><g><title>0x7fbaceba9e92 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="234" y="372" width="2" height="15" fill="rgb(234,131,24)"/><text x="237.00" y="382.50"></text></g><g><title>0x7fbaceba9e96 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="236" y="372" width="2" height="15" fill="rgb(208,113,4)"/><text x="239.00" y="382.50"></text></g><g><title>0x7fbaceba9e9e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="238" y="372" width="2" height="15" fill="rgb(217,78,51)"/><text x="241.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 6.91%)</title><rect x="163" y="340" width="81" height="15" fill="rgb(230,225,18)"/><text x="166.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.37%)</title><rect x="205" y="356" width="39" height="15" fill="rgb(238,162,20)"/><text x="208.00" y="366.50">onn..</text></g><g><title>0x7fbaceba9ea2 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="240" y="372" width="4" height="15" fill="rgb(253,119,27)"/><text x="243.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.20%)</title><rect x="244" y="340" width="38" height="15" fill="rgb(247,35,23)"/><text x="247.00" y="350.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.20%)</title><rect x="244" y="356" width="38" height="15" fill="rgb(236,47,1)"/><text x="247.00" y="366.50">onn..</text></g><g><title>0x7fba8ea61930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="310" y="356" width="2" height="15" fill="rgb(242,121,31)"/><text x="313.00" y="366.50"></text></g><g><title>0x7fbabe4f6d50 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="312" y="372" width="2" height="15" fill="rgb(226,164,13)"/><text x="315.00" y="382.50"></text></g><g><title>0x7fbacea2bd27 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="403" y="388" width="2" height="15" fill="rgb(225,190,5)"/><text x="406.00" y="398.50"></text></g><g><title>0x7fbacea2bd36 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="405" y="388" width="2" height="15" fill="rgb(208,92,25)"/><text x="408.00" y="398.50"></text></g><g><title>0x7fbacea2bd8d (libc-2.29.so) (2 samples, 0.34%)</title><rect x="407" y="388" width="4" height="15" fill="rgb(240,123,0)"/><text x="410.00" y="398.50"></text></g><g><title>0x7fbacea2bdb4 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="411" y="388" width="4" height="15" fill="rgb(225,195,26)"/><text x="414.00" y="398.50"></text></g><g><title>0x7fbacea2bdd2 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="415" y="388" width="4" height="15" fill="rgb(224,9,50)"/><text x="418.00" y="398.50"></text></g><g><title>0x7fbacea2bf2a (libc-2.29.so) (1 samples, 0.17%)</title><rect x="419" y="388" width="2" height="15" fill="rgb(245,64,51)"/><text x="422.00" y="398.50"></text></g><g><title>0x7fbacea2bfd2 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="421" y="388" width="2" height="15" fill="rgb(241,193,45)"/><text x="424.00" y="398.50"></text></g><g><title>0x7fbacea2bfdc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="423" y="388" width="4" height="15" fill="rgb(225,217,39)"/><text x="426.00" y="398.50"></text></g><g><title>0x7fbacea2c064 (libc-2.29.so) (2 samples, 0.34%)</title><rect x="427" y="388" width="4" height="15" fill="rgb(234,226,0)"/><text x="430.00" y="398.50"></text></g><g><title>0x7fbacea2c06d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(206,42,50)"/><text x="434.00" y="398.50"></text></g><g><title>0x7fbacea2c07f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="433" y="388" width="2" height="15" fill="rgb(250,140,54)"/><text x="436.00" y="398.50"></text></g><g><title>0x7fbacea2c097 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="435" y="388" width="2" height="15" fill="rgb(251,173,32)"/><text x="438.00" y="398.50"></text></g><g><title>0x7fbacea2c368 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="437" y="388" width="2" height="15" fill="rgb(209,214,29)"/><text x="440.00" y="398.50"></text></g><g><title>0x7fbacea2c384 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="439" y="388" width="2" height="15" fill="rgb(231,143,50)"/><text x="442.00" y="398.50"></text></g><g><title>0x7fbacea2c3ae (libc-2.29.so) (1 samples, 0.17%)</title><rect x="441" y="388" width="2" height="15" fill="rgb(254,70,47)"/><text x="444.00" y="398.50"></text></g><g><title>0x7fbacea2c3d1 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(253,203,49)"/><text x="446.00" y="398.50"></text></g><g><title>0x7fbacea2c3e0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="445" y="388" width="2" height="15" fill="rgb(221,0,43)"/><text x="448.00" y="398.50"></text></g><g><title>0x7fbacea2c3ea (libc-2.29.so) (1 samples, 0.17%)</title><rect x="447" y="388" width="2" height="15" fill="rgb(251,47,5)"/><text x="450.00" y="398.50"></text></g><g><title>0x7fbacea2c3ed (libc-2.29.so) (1 samples, 0.17%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(244,137,4)"/><text x="452.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (71 samples, 11.97%)</title><rect x="312" y="356" width="141" height="15" fill="rgb(219,79,26)"/><text x="315.00" y="366.50">operator new (lib..</text></g><g><title>malloc (libc-2.29.so) (70 samples, 11.80%)</title><rect x="314" y="372" width="139" height="15" fill="rgb(252,218,3)"/><text x="317.00" y="382.50">malloc (libc-2.29..</text></g><g><title>0x7fbacea2c69f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="451" y="388" width="2" height="15" fill="rgb(252,38,45)"/><text x="454.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="453" y="356" width="2" height="15" fill="rgb(236,179,27)"/><text x="456.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.35%)</title><rect x="455" y="356" width="16" height="15" fill="rgb(219,94,45)"/><text x="458.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (4 samples, 0.67%)</title><rect x="471" y="356" width="8" height="15" fill="rgb(209,200,32)"/><text x="474.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 28.16%)</title><rect x="157" y="260" width="332" height="15" fill="rgb(218,138,14)"/><text x="160.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (167 samples, 28.16%)</title><rect x="157" y="276" width="332" height="15" fill="rgb(248,115,12)"/><text x="160.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 27.99%)</title><rect x="159" y="292" width="330" height="15" fill="rgb(228,113,5)"/><text x="162.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 27.99%)</title><rect x="159" y="308" width="330" height="15" fill="rgb(241,39,51)"/><text x="162.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxru..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (166 samples, 27.99%)</title><rect x="159" y="324" width="330" height="15" fill="rgb(235,91,18)"/><text x="162.00" y="334.50">onnxruntime::SequentialExecutor::Execute (on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 17.54%)</title><rect x="282" y="340" width="207" height="15" fill="rgb(245,14,6)"/><text x="285.00" y="350.50">onnxruntime::ml::ZipMapOp::..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.84%)</title><rect x="479" y="356" width="10" height="15" fill="rgb(247,96,15)"/><text x="482.00" y="366.50"></text></g><g><title>0x7fbacea4ad94 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="489" y="276" width="2" height="15" fill="rgb(245,218,14)"/><text x="492.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="489" y="260" width="4" height="15" fill="rgb(221,122,25)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="491" y="276" width="2" height="15" fill="rgb(228,7,38)"/><text x="494.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="491" y="292" width="2" height="15" fill="rgb(243,30,21)"/><text x="494.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="491" y="308" width="2" height="15" fill="rgb(205,21,44)"/><text x="494.00" y="318.50"></text></g><g><title>0x7fba8ea625c0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="626" y="276" width="4" height="15" fill="rgb(247,4,22)"/><text x="629.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.37%)</title><rect x="630" y="276" width="40" height="15" fill="rgb(206,114,29)"/><text x="633.00" y="286.50">pyb..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (92 samples, 15.51%)</title><rect x="493" y="260" width="183" height="15" fill="rgb(238,75,28)"/><text x="496.00" y="270.50">pybind11::detail::map_c..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (3 samples, 0.51%)</title><rect x="670" y="276" width="6" height="15" fill="rgb(229,150,52)"/><text x="673.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="676" y="276" width="2" height="15" fill="rgb(252,36,53)"/><text x="679.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(212,159,50)"/><text x="679.00" y="302.50"></text></g><g><title>0x7fbacea2aa4d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="676" y="308" width="2" height="15" fill="rgb(228,146,53)"/><text x="679.00" y="318.50"></text></g><g><title>0x7fba8ea620f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="682" y="292" width="2" height="15" fill="rgb(208,20,46)"/><text x="685.00" y="302.50"></text></g><g><title>0x7fbabe4f77a0 (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="684" y="292" width="4" height="15" fill="rgb(214,135,16)"/><text x="687.00" y="302.50"></text></g><g><title>0x7fbacea2a961 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="688" y="292" width="2" height="15" fill="rgb(233,33,13)"/><text x="691.00" y="302.50"></text></g><g><title>0x7fbacea2a982 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="690" y="292" width="2" height="15" fill="rgb(244,186,32)"/><text x="693.00" y="302.50"></text></g><g><title>0x7fbacea2a9b3 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="692" y="292" width="2" height="15" fill="rgb(248,174,7)"/><text x="695.00" y="302.50"></text></g><g><title>0x7fbacea2a9b7 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="694" y="292" width="2" height="15" fill="rgb(253,102,19)"/><text x="697.00" y="302.50"></text></g><g><title>0x7fbacea2a9ff (libc-2.29.so) (1 samples, 0.17%)</title><rect x="696" y="292" width="2" height="15" fill="rgb(237,138,26)"/><text x="699.00" y="302.50"></text></g><g><title>0x7fbacea2aa33 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="698" y="292" width="2" height="15" fill="rgb(209,173,52)"/><text x="701.00" y="302.50"></text></g><g><title>0x7fbacea2aa4b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="700" y="292" width="2" height="15" fill="rgb(228,36,17)"/><text x="703.00" y="302.50"></text></g><g><title>0x7fbacea2aa51 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="702" y="292" width="2" height="15" fill="rgb(226,114,37)"/><text x="705.00" y="302.50"></text></g><g><title>0x7fbacea2acf0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="704" y="292" width="2" height="15" fill="rgb(219,6,13)"/><text x="707.00" y="302.50"></text></g><g><title>0x7fbacea2ad02 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="706" y="292" width="2" height="15" fill="rgb(205,112,44)"/><text x="709.00" y="302.50"></text></g><g><title>0x7fbacea2ad07 (libc-2.29.so) (17 samples, 2.87%)</title><rect x="708" y="292" width="34" height="15" fill="rgb(249,70,28)"/><text x="711.00" y="302.50">0x..</text></g><g><title>free (libc-2.29.so) (4 samples, 0.67%)</title><rect x="742" y="292" width="8" height="15" fill="rgb(226,64,17)"/><text x="745.00" y="302.50"></text></g><g><title>0x7fbacea2a961 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="756" y="308" width="2" height="15" fill="rgb(248,206,0)"/><text x="759.00" y="318.50"></text></g><g><title>0x7fbacea2a9b3 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="758" y="308" width="2" height="15" fill="rgb(251,54,16)"/><text x="761.00" y="318.50"></text></g><g><title>0x7fbacea2a9ff (libc-2.29.so) (1 samples, 0.17%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(238,210,21)"/><text x="763.00" y="318.50"></text></g><g><title>0x7fbacea2ad07 (libc-2.29.so) (4 samples, 0.67%)</title><rect x="762" y="308" width="8" height="15" fill="rgb(239,158,14)"/><text x="765.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (310 samples, 52.28%)</title><rect x="155" y="244" width="617" height="15" fill="rgb(244,155,34)"/><text x="158.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Infere..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (48 samples, 8.09%)</title><rect x="676" y="260" width="96" height="15" fill="rgb(227,75,43)"/><text x="679.00" y="270.50">std::vector..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (47 samples, 7.93%)</title><rect x="678" y="276" width="94" height="15" fill="rgb(218,60,42)"/><text x="681.00" y="286.50">onnxruntime..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.85%)</title><rect x="750" y="292" width="22" height="15" fill="rgb(232,202,2)"/><text x="753.00" y="302.50">s..</text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="770" y="308" width="2" height="15" fill="rgb(216,24,40)"/><text x="773.00" y="318.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (373 samples, 62.90%)</title><rect x="33" y="68" width="743" height="15" fill="rgb(245,225,11)"/><text x="36.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (373 samples, 62.90%)</title><rect x="33" y="84" width="743" height="15" fill="rgb(219,120,11)"/><text x="36.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (373 samples, 62.90%)</title><rect x="33" y="100" width="743" height="15" fill="rgb(237,56,14)"/><text x="36.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (319 samples, 53.79%)</title><rect x="141" y="116" width="635" height="15" fill="rgb(220,73,21)"/><text x="144.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (319 samples, 53.79%)</title><rect x="141" y="132" width="635" height="15" fill="rgb(241,151,32)"/><text x="144.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (319 samples, 53.79%)</title><rect x="141" y="148" width="635" height="15" fill="rgb(209,32,19)"/><text x="144.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (319 samples, 53.79%)</title><rect x="141" y="164" width="635" height="15" fill="rgb(228,117,30)"/><text x="144.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (319 samples, 53.79%)</title><rect x="141" y="180" width="635" height="15" fill="rgb(239,88,25)"/><text x="144.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (319 samples, 53.79%)</title><rect x="141" y="196" width="635" height="15" fill="rgb(227,215,46)"/><text x="144.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 52.78%)</title><rect x="153" y="212" width="623" height="15" fill="rgb(248,61,0)"/><text x="156.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (313 samples, 52.78%)</title><rect x="153" y="228" width="623" height="15" fill="rgb(220,227,5)"/><text x="156.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind1..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="772" y="244" width="4" height="15" fill="rgb(233,49,5)"/><text x="775.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="774" y="260" width="2" height="15" fill="rgb(217,202,36)"/><text x="777.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="776" y="116" width="2" height="15" fill="rgb(217,45,7)"/><text x="779.00" y="126.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="776" y="132" width="2" height="15" fill="rgb(217,180,11)"/><text x="779.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.17%)</title><rect x="786" y="180" width="2" height="15" fill="rgb(206,224,51)"/><text x="789.00" y="190.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.17%)</title><rect x="803" y="212" width="2" height="15" fill="rgb(240,45,5)"/><text x="806.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.17%)</title><rect x="803" y="228" width="2" height="15" fill="rgb(243,24,48)"/><text x="806.00" y="238.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.17%)</title><rect x="805" y="212" width="2" height="15" fill="rgb(246,44,12)"/><text x="808.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="805" y="228" width="2" height="15" fill="rgb(212,108,9)"/><text x="808.00" y="238.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.17%)</title><rect x="817" y="260" width="2" height="15" fill="rgb(241,11,10)"/><text x="820.00" y="270.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.51%)</title><rect x="823" y="324" width="6" height="15" fill="rgb(249,137,52)"/><text x="826.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (2 samples, 0.34%)</title><rect x="825" y="340" width="4" height="15" fill="rgb(233,34,50)"/><text x="828.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (8 samples, 1.35%)</title><rect x="817" y="244" width="16" height="15" fill="rgb(213,178,29)"/><text x="820.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.18%)</title><rect x="819" y="260" width="14" height="15" fill="rgb(220,92,9)"/><text x="822.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (6 samples, 1.01%)</title><rect x="821" y="276" width="12" height="15" fill="rgb(231,3,3)"/><text x="824.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.84%)</title><rect x="823" y="292" width="10" height="15" fill="rgb(227,214,54)"/><text x="826.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (5 samples, 0.84%)</title><rect x="823" y="308" width="10" height="15" fill="rgb(239,91,15)"/><text x="826.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (2 samples, 0.34%)</title><rect x="829" y="324" width="4" height="15" fill="rgb(244,2,21)"/><text x="832.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (2 samples, 0.34%)</title><rect x="837" y="340" width="4" height="15" fill="rgb(206,76,0)"/><text x="840.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="837" y="356" width="4" height="15" fill="rgb(211,69,26)"/><text x="840.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="837" y="372" width="4" height="15" fill="rgb(243,154,39)"/><text x="840.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.34%)</title><rect x="837" y="388" width="4" height="15" fill="rgb(218,64,52)"/><text x="840.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.51%)</title><rect x="837" y="276" width="6" height="15" fill="rgb(223,8,4)"/><text x="840.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 0.51%)</title><rect x="837" y="292" width="6" height="15" fill="rgb(212,149,16)"/><text x="840.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 0.51%)</title><rect x="837" y="308" width="6" height="15" fill="rgb(246,209,23)"/><text x="840.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (3 samples, 0.51%)</title><rect x="837" y="324" width="6" height="15" fill="rgb(227,166,37)"/><text x="840.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.17%)</title><rect x="841" y="340" width="2" height="15" fill="rgb(225,21,9)"/><text x="844.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="841" y="356" width="2" height="15" fill="rgb(232,159,35)"/><text x="844.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="841" y="372" width="2" height="15" fill="rgb(236,188,34)"/><text x="844.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.17%)</title><rect x="841" y="388" width="2" height="15" fill="rgb(240,146,18)"/><text x="844.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.17%)</title><rect x="841" y="404" width="2" height="15" fill="rgb(241,9,34)"/><text x="844.00" y="414.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.51%)</title><rect x="843" y="276" width="6" height="15" fill="rgb(241,212,43)"/><text x="846.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (12 samples, 2.02%)</title><rect x="833" y="244" width="24" height="15" fill="rgb(233,150,43)"/><text x="836.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (10 samples, 1.69%)</title><rect x="837" y="260" width="20" height="15" fill="rgb(206,187,39)"/><text x="840.00" y="270.50"></text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.67%)</title><rect x="849" y="276" width="8" height="15" fill="rgb(250,107,30)"/><text x="852.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="857" y="276" width="2" height="15" fill="rgb(232,111,49)"/><text x="860.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.17%)</title><rect x="857" y="292" width="2" height="15" fill="rgb(224,32,54)"/><text x="860.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.17%)</title><rect x="859" y="324" width="2" height="15" fill="rgb(254,226,33)"/><text x="862.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.34%)</title><rect x="859" y="292" width="4" height="15" fill="rgb(239,228,34)"/><text x="862.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.34%)</title><rect x="859" y="308" width="4" height="15" fill="rgb(248,185,54)"/><text x="862.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.17%)</title><rect x="861" y="324" width="2" height="15" fill="rgb(218,188,15)"/><text x="864.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="861" y="340" width="2" height="15" fill="rgb(254,94,14)"/><text x="864.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="861" y="356" width="2" height="15" fill="rgb(207,85,3)"/><text x="864.00" y="366.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="861" y="372" width="2" height="15" fill="rgb(208,155,33)"/><text x="864.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.17%)</title><rect x="863" y="308" width="2" height="15" fill="rgb(247,33,49)"/><text x="866.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="863" y="324" width="2" height="15" fill="rgb(211,73,13)"/><text x="866.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="863" y="340" width="2" height="15" fill="rgb(224,156,52)"/><text x="866.00" y="350.50"></text></g><g><title>npy_blocked_end (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="863" y="356" width="2" height="15" fill="rgb(207,33,43)"/><text x="866.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="865" y="308" width="2" height="15" fill="rgb(236,52,16)"/><text x="868.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.17%)</title><rect x="865" y="324" width="2" height="15" fill="rgb(254,133,6)"/><text x="868.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.34%)</title><rect x="867" y="308" width="4" height="15" fill="rgb(232,94,38)"/><text x="870.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.34%)</title><rect x="867" y="324" width="4" height="15" fill="rgb(244,10,27)"/><text x="870.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="867" y="340" width="4" height="15" fill="rgb(228,124,23)"/><text x="870.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="869" y="356" width="2" height="15" fill="rgb(212,144,13)"/><text x="872.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.84%)</title><rect x="863" y="292" width="10" height="15" fill="rgb(227,26,37)"/><text x="866.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="871" y="308" width="2" height="15" fill="rgb(236,72,43)"/><text x="874.00" y="318.50"></text></g><g><title>0x7fbab9d1233a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="873" y="308" width="2" height="15" fill="rgb(250,54,39)"/><text x="876.00" y="318.50"></text></g><g><title>0x7fbaceb761a0 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="881" y="356" width="2" height="15" fill="rgb(230,57,44)"/><text x="884.00" y="366.50"></text></g><g><title>0x7fbaceba9e0e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(212,200,37)"/><text x="886.00" y="366.50"></text></g><g><title>0x7fbaceba9e17 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="885" y="356" width="2" height="15" fill="rgb(247,229,33)"/><text x="888.00" y="366.50"></text></g><g><title>0x7fbaceba9e4e (libm-2.29.so) (1 samples, 0.17%)</title><rect x="887" y="356" width="2" height="15" fill="rgb(205,143,5)"/><text x="890.00" y="366.50"></text></g><g><title>0x7fbaceba9e62 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="889" y="356" width="2" height="15" fill="rgb(241,0,46)"/><text x="892.00" y="366.50"></text></g><g><title>0x7fbab9d34214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.69%)</title><rect x="875" y="324" width="20" height="15" fill="rgb(226,183,46)"/><text x="878.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (10 samples, 1.69%)</title><rect x="875" y="340" width="20" height="15" fill="rgb(206,182,36)"/><text x="878.00" y="350.50"></text></g><g><title>0x7fbaceba9e7e (libm-2.29.so) (2 samples, 0.34%)</title><rect x="891" y="356" width="4" height="15" fill="rgb(239,15,4)"/><text x="894.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (49 samples, 8.26%)</title><rect x="807" y="228" width="98" height="15" fill="rgb(249,16,0)"/><text x="810.00" y="238.50">_run (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 4.05%)</title><rect x="857" y="244" width="48" height="15" fill="rgb(225,81,28)"/><text x="860.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (24 samples, 4.05%)</title><rect x="857" y="260" width="48" height="15" fill="rgb(224,134,44)"/><text x="860.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (23 samples, 3.88%)</title><rect x="859" y="276" width="46" height="15" fill="rgb(206,47,12)"/><text x="862.00" y="286.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (16 samples, 2.70%)</title><rect x="873" y="292" width="32" height="15" fill="rgb(209,132,2)"/><text x="876.00" y="302.50">tr..</text></g><g><title>0x7fbab9d1233d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.53%)</title><rect x="875" y="308" width="30" height="15" fill="rgb(240,36,11)"/><text x="878.00" y="318.50">0x..</text></g><g><title>0x7fbab9d34228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.84%)</title><rect x="895" y="324" width="10" height="15" fill="rgb(205,133,35)"/><text x="898.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.17%)</title><rect x="917" y="324" width="2" height="15" fill="rgb(239,99,1)"/><text x="920.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.17%)</title><rect x="917" y="340" width="2" height="15" fill="rgb(206,172,39)"/><text x="920.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.17%)</title><rect x="917" y="356" width="2" height="15" fill="rgb(242,176,36)"/><text x="920.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.17%)</title><rect x="917" y="372" width="2" height="15" fill="rgb(251,132,54)"/><text x="920.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.17%)</title><rect x="917" y="388" width="2" height="15" fill="rgb(237,185,49)"/><text x="920.00" y="398.50"></text></g><g><title>0x7fbacdc4bf00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="919" y="372" width="2" height="15" fill="rgb(209,3,42)"/><text x="922.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="921" y="372" width="2" height="15" fill="rgb(253,60,16)"/><text x="924.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.17%)</title><rect x="923" y="372" width="2" height="15" fill="rgb(231,55,23)"/><text x="926.00" y="382.50"></text></g><g><title>0x7fbacea2ae64 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="923" y="388" width="2" height="15" fill="rgb(225,176,48)"/><text x="926.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="925" y="372" width="2" height="15" fill="rgb(220,7,43)"/><text x="928.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="925" y="388" width="2" height="15" fill="rgb(208,151,52)"/><text x="928.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.17%)</title><rect x="925" y="404" width="2" height="15" fill="rgb(219,104,11)"/><text x="928.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="925" y="420" width="2" height="15" fill="rgb(237,166,10)"/><text x="928.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (2 samples, 0.34%)</title><rect x="931" y="388" width="4" height="15" fill="rgb(218,102,15)"/><text x="934.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (1 samples, 0.17%)</title><rect x="933" y="404" width="2" height="15" fill="rgb(242,173,29)"/><text x="936.00" y="414.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.19%)</title><rect x="915" y="260" width="26" height="15" fill="rgb(232,120,49)"/><text x="918.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.19%)</title><rect x="915" y="276" width="26" height="15" fill="rgb(250,39,26)"/><text x="918.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 2.19%)</title><rect x="915" y="292" width="26" height="15" fill="rgb(226,64,45)"/><text x="918.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 2.02%)</title><rect x="917" y="308" width="24" height="15" fill="rgb(205,20,53)"/><text x="920.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.85%)</title><rect x="919" y="324" width="22" height="15" fill="rgb(243,196,38)"/><text x="922.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 1.85%)</title><rect x="919" y="340" width="22" height="15" fill="rgb(215,7,37)"/><text x="922.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 1.85%)</title><rect x="919" y="356" width="22" height="15" fill="rgb(218,18,4)"/><text x="922.00" y="366.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.18%)</title><rect x="927" y="372" width="14" height="15" fill="rgb(243,223,28)"/><text x="930.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.51%)</title><rect x="935" y="388" width="6" height="15" fill="rgb(205,67,34)"/><text x="938.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.34%)</title><rect x="941" y="276" width="4" height="15" fill="rgb(221,15,16)"/><text x="944.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.34%)</title><rect x="941" y="292" width="4" height="15" fill="rgb(237,138,9)"/><text x="944.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.34%)</title><rect x="941" y="308" width="4" height="15" fill="rgb(253,126,29)"/><text x="944.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.34%)</title><rect x="947" y="324" width="4" height="15" fill="rgb(211,96,38)"/><text x="950.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.34%)</title><rect x="947" y="340" width="4" height="15" fill="rgb(231,92,48)"/><text x="950.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.34%)</title><rect x="947" y="356" width="4" height="15" fill="rgb(244,2,0)"/><text x="950.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.34%)</title><rect x="947" y="372" width="4" height="15" fill="rgb(221,222,20)"/><text x="950.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.34%)</title><rect x="951" y="324" width="4" height="15" fill="rgb(216,133,34)"/><text x="954.00" y="334.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.17%)</title><rect x="953" y="340" width="2" height="15" fill="rgb(232,181,16)"/><text x="956.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.35%)</title><rect x="947" y="308" width="16" height="15" fill="rgb(239,60,37)"/><text x="950.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.67%)</title><rect x="955" y="324" width="8" height="15" fill="rgb(230,207,47)"/><text x="958.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.67%)</title><rect x="955" y="340" width="8" height="15" fill="rgb(207,142,30)"/><text x="958.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.67%)</title><rect x="955" y="356" width="8" height="15" fill="rgb(209,3,8)"/><text x="958.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.51%)</title><rect x="957" y="372" width="6" height="15" fill="rgb(240,82,19)"/><text x="960.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 1.69%)</title><rect x="947" y="292" width="20" height="15" fill="rgb(252,187,47)"/><text x="950.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.34%)</title><rect x="963" y="308" width="4" height="15" fill="rgb(247,44,3)"/><text x="966.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.17%)</title><rect x="965" y="324" width="2" height="15" fill="rgb(233,170,21)"/><text x="968.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="965" y="340" width="2" height="15" fill="rgb(220,181,49)"/><text x="968.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.17%)</title><rect x="965" y="356" width="2" height="15" fill="rgb(233,196,36)"/><text x="968.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.17%)</title><rect x="965" y="372" width="2" height="15" fill="rgb(231,59,38)"/><text x="968.00" y="382.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (97 samples, 16.36%)</title><rect x="776" y="68" width="193" height="15" fill="rgb(205,197,11)"/><text x="779.00" y="78.50">profile_pyrt (bench_Logis..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (97 samples, 16.36%)</title><rect x="776" y="84" width="193" height="15" fill="rgb(210,77,47)"/><text x="779.00" y="94.50">setup_profile (bench_Logi..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (97 samples, 16.36%)</title><rect x="776" y="100" width="193" height="15" fill="rgb(215,148,10)"/><text x="779.00" y="110.50">profile (bench_LogisticRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (96 samples, 16.19%)</title><rect x="778" y="116" width="191" height="15" fill="rgb(226,11,54)"/><text x="781.00" y="126.50">time_predict (mlprodict/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (96 samples, 16.19%)</title><rect x="778" y="132" width="191" height="15" fill="rgb(220,207,22)"/><text x="781.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (95 samples, 16.02%)</title><rect x="780" y="148" width="189" height="15" fill="rgb(205,103,35)"/><text x="783.00" y="158.50">run (mlprodict/onnxrt/on..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (95 samples, 16.02%)</title><rect x="780" y="164" width="189" height="15" fill="rgb(235,184,48)"/><text x="783.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (91 samples, 15.35%)</title><rect x="788" y="180" width="181" height="15" fill="rgb(216,134,5)"/><text x="791.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (86 samples, 14.50%)</title><rect x="797" y="196" width="172" height="15" fill="rgb(228,28,43)"/><text x="800.00" y="206.50">run (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (81 samples, 13.66%)</title><rect x="807" y="212" width="162" height="15" fill="rgb(242,108,19)"/><text x="810.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 5.40%)</title><rect x="905" y="228" width="64" height="15" fill="rgb(243,155,27)"/><text x="908.00" y="238.50">_run (m..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (32 samples, 5.40%)</title><rect x="905" y="244" width="64" height="15" fill="rgb(225,121,17)"/><text x="908.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.36%)</title><rect x="941" y="260" width="28" height="15" fill="rgb(223,177,30)"/><text x="944.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (12 samples, 2.02%)</title><rect x="945" y="276" width="24" height="15" fill="rgb(244,154,31)"/><text x="948.00" y="286.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.17%)</title><rect x="967" y="292" width="2" height="15" fill="rgb(248,48,51)"/><text x="970.00" y="302.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.17%)</title><rect x="967" y="308" width="2" height="15" fill="rgb(251,183,5)"/><text x="970.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.17%)</title><rect x="979" y="180" width="2" height="15" fill="rgb(248,132,16)"/><text x="982.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.34%)</title><rect x="981" y="180" width="4" height="15" fill="rgb(210,72,15)"/><text x="984.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.17%)</title><rect x="983" y="196" width="2" height="15" fill="rgb(243,213,0)"/><text x="986.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.34%)</title><rect x="985" y="244" width="4" height="15" fill="rgb(219,180,52)"/><text x="988.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.34%)</title><rect x="985" y="260" width="4" height="15" fill="rgb(207,215,34)"/><text x="988.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.34%)</title><rect x="985" y="276" width="4" height="15" fill="rgb(209,129,34)"/><text x="988.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.34%)</title><rect x="985" y="292" width="4" height="15" fill="rgb(241,220,47)"/><text x="988.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.34%)</title><rect x="985" y="308" width="4" height="15" fill="rgb(251,205,43)"/><text x="988.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.17%)</title><rect x="989" y="292" width="2" height="15" fill="rgb(253,197,4)"/><text x="992.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.17%)</title><rect x="989" y="308" width="2" height="15" fill="rgb(244,37,7)"/><text x="992.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="989" y="324" width="2" height="15" fill="rgb(244,192,53)"/><text x="992.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="989" y="340" width="2" height="15" fill="rgb(218,14,19)"/><text x="992.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="989" y="356" width="2" height="15" fill="rgb(253,94,16)"/><text x="992.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.17%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(209,61,11)"/><text x="994.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="991" y="308" width="2" height="15" fill="rgb(248,200,27)"/><text x="994.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.17%)</title><rect x="991" y="324" width="2" height="15" fill="rgb(206,204,14)"/><text x="994.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.51%)</title><rect x="994" y="308" width="6" height="15" fill="rgb(225,157,44)"/><text x="997.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (3 samples, 0.51%)</title><rect x="994" y="324" width="6" height="15" fill="rgb(211,60,4)"/><text x="997.00" y="334.50"></text></g><g><title>array_sum (methods.c) (9 samples, 1.52%)</title><rect x="985" y="180" width="17" height="15" fill="rgb(233,55,1)"/><text x="988.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 1.52%)</title><rect x="985" y="196" width="17" height="15" fill="rgb(253,27,8)"/><text x="988.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 1.52%)</title><rect x="985" y="212" width="17" height="15" fill="rgb(225,158,22)"/><text x="988.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 1.52%)</title><rect x="985" y="228" width="17" height="15" fill="rgb(219,81,18)"/><text x="988.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.18%)</title><rect x="989" y="244" width="13" height="15" fill="rgb(233,95,43)"/><text x="992.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.18%)</title><rect x="989" y="260" width="13" height="15" fill="rgb(232,91,24)"/><text x="992.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.18%)</title><rect x="989" y="276" width="13" height="15" fill="rgb(250,218,29)"/><text x="992.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (5 samples, 0.84%)</title><rect x="993" y="292" width="9" height="15" fill="rgb(206,22,36)"/><text x="996.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="1000" y="308" width="2" height="15" fill="rgb(228,181,3)"/><text x="1003.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.17%)</title><rect x="1004" y="196" width="2" height="15" fill="rgb(254,109,27)"/><text x="1007.00" y="206.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.17%)</title><rect x="1008" y="276" width="2" height="15" fill="rgb(233,174,13)"/><text x="1011.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="1008" y="292" width="2" height="15" fill="rgb(246,113,8)"/><text x="1011.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.17%)</title><rect x="1008" y="308" width="2" height="15" fill="rgb(207,4,47)"/><text x="1011.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.17%)</title><rect x="1008" y="324" width="2" height="15" fill="rgb(239,228,16)"/><text x="1011.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(209,195,6)"/><text x="1013.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.17%)</title><rect x="1012" y="292" width="2" height="15" fill="rgb(208,57,42)"/><text x="1015.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1012" y="308" width="2" height="15" fill="rgb(253,121,50)"/><text x="1015.00" y="318.50"></text></g><g><title>0x7fbacea2c435 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1012" y="324" width="2" height="15" fill="rgb(220,47,39)"/><text x="1015.00" y="334.50"></text></g><g><title>array_add (number.c) (6 samples, 1.01%)</title><rect x="1006" y="196" width="12" height="15" fill="rgb(244,45,39)"/><text x="1009.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.01%)</title><rect x="1006" y="212" width="12" height="15" fill="rgb(232,229,19)"/><text x="1009.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.01%)</title><rect x="1006" y="228" width="12" height="15" fill="rgb(217,25,8)"/><text x="1009.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.01%)</title><rect x="1006" y="244" width="12" height="15" fill="rgb(228,67,52)"/><text x="1009.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.01%)</title><rect x="1006" y="260" width="12" height="15" fill="rgb(222,107,6)"/><text x="1009.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.51%)</title><rect x="1012" y="276" width="6" height="15" fill="rgb(208,116,49)"/><text x="1015.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.34%)</title><rect x="1014" y="292" width="4" height="15" fill="rgb(212,69,5)"/><text x="1017.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1016" y="308" width="2" height="15" fill="rgb(230,214,0)"/><text x="1019.00" y="318.50"></text></g><g><title>0x7fbacea4ad50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1016" y="324" width="2" height="15" fill="rgb(227,213,20)"/><text x="1019.00" y="334.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.51%)</title><rect x="1026" y="212" width="6" height="15" fill="rgb(208,205,28)"/><text x="1029.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.17%)</title><rect x="1032" y="212" width="2" height="15" fill="rgb(238,13,48)"/><text x="1035.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.34%)</title><rect x="1034" y="212" width="4" height="15" fill="rgb(217,122,11)"/><text x="1037.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.34%)</title><rect x="1038" y="212" width="4" height="15" fill="rgb(226,123,20)"/><text x="1041.00" y="222.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.17%)</title><rect x="1040" y="228" width="2" height="15" fill="rgb(242,151,41)"/><text x="1043.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.17%)</title><rect x="1042" y="212" width="2" height="15" fill="rgb(254,90,53)"/><text x="1045.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.17%)</title><rect x="1042" y="228" width="2" height="15" fill="rgb(237,133,16)"/><text x="1045.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (16 samples, 2.70%)</title><rect x="1018" y="196" width="32" height="15" fill="rgb(234,53,14)"/><text x="1021.00" y="206.50">ch..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.51%)</title><rect x="1044" y="212" width="6" height="15" fill="rgb(233,181,0)"/><text x="1047.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.51%)</title><rect x="1044" y="228" width="6" height="15" fill="rgb(221,100,3)"/><text x="1047.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.01%)</title><rect x="1050" y="196" width="12" height="15" fill="rgb(211,217,46)"/><text x="1053.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.01%)</title><rect x="1050" y="212" width="12" height="15" fill="rgb(236,95,51)"/><text x="1053.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="1060" y="228" width="2" height="15" fill="rgb(239,95,45)"/><text x="1063.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.51%)</title><rect x="1066" y="212" width="6" height="15" fill="rgb(207,173,32)"/><text x="1069.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.01%)</title><rect x="1072" y="212" width="12" height="15" fill="rgb(216,143,26)"/><text x="1075.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.51%)</title><rect x="1086" y="260" width="6" height="15" fill="rgb(240,165,7)"/><text x="1089.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.51%)</title><rect x="1086" y="276" width="6" height="15" fill="rgb(238,88,46)"/><text x="1089.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.51%)</title><rect x="1086" y="292" width="6" height="15" fill="rgb(253,18,45)"/><text x="1089.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.51%)</title><rect x="1086" y="308" width="6" height="15" fill="rgb(240,169,4)"/><text x="1089.00" y="318.50"></text></g><g><title>0x7fbace9e28cc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1092" y="356" width="2" height="15" fill="rgb(238,186,18)"/><text x="1095.00" y="366.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.34%)</title><rect x="1092" y="324" width="4" height="15" fill="rgb(244,197,49)"/><text x="1095.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.34%)</title><rect x="1092" y="340" width="4" height="15" fill="rgb(206,188,27)"/><text x="1095.00" y="350.50"></text></g><g><title>0x7fbacea4ad50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1094" y="356" width="2" height="15" fill="rgb(247,70,46)"/><text x="1097.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1096" y="324" width="2" height="15" fill="rgb(248,18,2)"/><text x="1099.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 0.84%)</title><rect x="1092" y="292" width="10" height="15" fill="rgb(246,98,14)"/><text x="1095.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 0.84%)</title><rect x="1092" y="308" width="10" height="15" fill="rgb(213,96,33)"/><text x="1095.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="1098" y="324" width="4" height="15" fill="rgb(227,216,12)"/><text x="1101.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.01%)</title><rect x="1092" y="260" width="12" height="15" fill="rgb(242,149,16)"/><text x="1095.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (6 samples, 1.01%)</title><rect x="1092" y="276" width="12" height="15" fill="rgb(225,24,6)"/><text x="1095.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1102" y="292" width="2" height="15" fill="rgb(222,193,10)"/><text x="1105.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="1102" y="308" width="2" height="15" fill="rgb(233,4,16)"/><text x="1105.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="1102" y="324" width="2" height="15" fill="rgb(225,19,53)"/><text x="1105.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="1102" y="340" width="2" height="15" fill="rgb(243,38,52)"/><text x="1105.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.17%)</title><rect x="1102" y="356" width="2" height="15" fill="rgb(235,210,0)"/><text x="1105.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.17%)</title><rect x="1102" y="372" width="2" height="15" fill="rgb(219,43,42)"/><text x="1105.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1102" y="388" width="2" height="15" fill="rgb(253,75,26)"/><text x="1105.00" y="398.50"></text></g><g><title>0x7fbacea2bc88 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1102" y="404" width="2" height="15" fill="rgb(215,182,50)"/><text x="1105.00" y="414.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.17%)</title><rect x="1104" y="260" width="2" height="15" fill="rgb(210,154,35)"/><text x="1107.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.17%)</title><rect x="1104" y="276" width="2" height="15" fill="rgb(252,134,50)"/><text x="1107.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1106" y="260" width="2" height="15" fill="rgb(217,209,23)"/><text x="1109.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (54 samples, 9.11%)</title><rect x="1002" y="180" width="108" height="15" fill="rgb(226,107,13)"/><text x="1005.00" y="190.50">decision_func..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (24 samples, 4.05%)</title><rect x="1062" y="196" width="48" height="15" fill="rgb(236,52,52)"/><text x="1065.00" y="206.50">safe..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.19%)</title><rect x="1084" y="212" width="26" height="15" fill="rgb(218,17,8)"/><text x="1087.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.19%)</title><rect x="1084" y="228" width="26" height="15" fill="rgb(223,215,34)"/><text x="1087.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (12 samples, 2.02%)</title><rect x="1086" y="244" width="24" height="15" fill="rgb(220,200,32)"/><text x="1089.00" y="254.50">P..</text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="1108" y="260" width="2" height="15" fill="rgb(243,144,5)"/><text x="1111.00" y="270.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.17%)</title><rect x="1110" y="228" width="2" height="15" fill="rgb(217,152,14)"/><text x="1113.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1110" y="244" width="2" height="15" fill="rgb(220,184,1)"/><text x="1113.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1110" y="260" width="2" height="15" fill="rgb(235,130,40)"/><text x="1113.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1110" y="276" width="2" height="15" fill="rgb(237,119,17)"/><text x="1113.00" y="286.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.17%)</title><rect x="1110" y="292" width="2" height="15" fill="rgb(242,162,1)"/><text x="1113.00" y="302.50"></text></g><g><title>mul_64_64 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="1110" y="308" width="2" height="15" fill="rgb(220,87,54)"/><text x="1113.00" y="318.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.17%)</title><rect x="1110" y="324" width="2" height="15" fill="rgb(238,10,24)"/><text x="1113.00" y="334.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 1.01%)</title><rect x="1112" y="244" width="12" height="15" fill="rgb(211,112,5)"/><text x="1115.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 1.01%)</title><rect x="1112" y="260" width="12" height="15" fill="rgb(213,142,15)"/><text x="1115.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (6 samples, 1.01%)</title><rect x="1112" y="276" width="12" height="15" fill="rgb(238,166,2)"/><text x="1115.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.01%)</title><rect x="1112" y="292" width="12" height="15" fill="rgb(214,141,20)"/><text x="1115.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1124" y="244" width="2" height="15" fill="rgb(228,200,17)"/><text x="1127.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1124" y="260" width="2" height="15" fill="rgb(240,37,13)"/><text x="1127.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.17%)</title><rect x="1124" y="276" width="2" height="15" fill="rgb(228,170,30)"/><text x="1127.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.34%)</title><rect x="1126" y="244" width="4" height="15" fill="rgb(205,126,48)"/><text x="1129.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.34%)</title><rect x="1126" y="260" width="4" height="15" fill="rgb(245,127,32)"/><text x="1129.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.34%)</title><rect x="1126" y="276" width="4" height="15" fill="rgb(223,168,30)"/><text x="1129.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.17%)</title><rect x="1128" y="292" width="2" height="15" fill="rgb(238,218,3)"/><text x="1131.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.69%)</title><rect x="1112" y="228" width="20" height="15" fill="rgb(213,47,47)"/><text x="1115.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.17%)</title><rect x="1130" y="244" width="2" height="15" fill="rgb(232,203,0)"/><text x="1133.00" y="254.50"></text></g><g><title>0x7fbab9d34254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1132" y="260" width="2" height="15" fill="rgb(252,147,29)"/><text x="1135.00" y="270.50"></text></g><g><title>0x7fbacebfcc07 (libm-2.29.so) (3 samples, 0.51%)</title><rect x="1146" y="292" width="6" height="15" fill="rgb(250,218,31)"/><text x="1149.00" y="302.50"></text></g><g><title>0x7fbacebfcc18 (libm-2.29.so) (2 samples, 0.34%)</title><rect x="1152" y="292" width="4" height="15" fill="rgb(235,214,43)"/><text x="1155.00" y="302.50"></text></g><g><title>0x7fbab9d34265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.02%)</title><rect x="1134" y="260" width="24" height="15" fill="rgb(227,93,18)"/><text x="1137.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (8 samples, 1.35%)</title><rect x="1142" y="276" width="16" height="15" fill="rgb(245,108,2)"/><text x="1145.00" y="286.50"></text></g><g><title>0x7fbacebfcc32 (libm-2.29.so) (1 samples, 0.17%)</title><rect x="1156" y="292" width="2" height="15" fill="rgb(248,150,19)"/><text x="1159.00" y="302.50"></text></g><g><title>0x7fbab9d139dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (19 samples, 3.20%)</title><rect x="1132" y="244" width="38" height="15" fill="rgb(205,17,49)"/><text x="1135.00" y="254.50">0x7..</text></g><g><title>0x7fbab9d34279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.01%)</title><rect x="1158" y="260" width="12" height="15" fill="rgb(252,70,11)"/><text x="1161.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (32 samples, 5.40%)</title><rect x="1110" y="212" width="64" height="15" fill="rgb(231,221,48)"/><text x="1113.00" y="222.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (21 samples, 3.54%)</title><rect x="1132" y="228" width="42" height="15" fill="rgb(206,132,19)"/><text x="1135.00" y="238.50">tri..</text></g><g><title>0x7fbab9d139e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="1170" y="244" width="4" height="15" fill="rgb(243,66,25)"/><text x="1173.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (101 samples, 17.03%)</title><rect x="975" y="164" width="201" height="15" fill="rgb(250,163,47)"/><text x="978.00" y="174.50">_predict_proba_lr (sklearn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (33 samples, 5.56%)</title><rect x="1110" y="180" width="66" height="15" fill="rgb(211,81,42)"/><text x="1113.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (33 samples, 5.56%)</title><rect x="1110" y="196" width="66" height="15" fill="rgb(246,184,50)"/><text x="1113.00" y="206.50">PyUFunc..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1174" y="212" width="2" height="15" fill="rgb(233,30,34)"/><text x="1177.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.17%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(247,43,10)"/><text x="1177.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.17%)</title><rect x="1180" y="196" width="2" height="15" fill="rgb(218,13,40)"/><text x="1183.00" y="206.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (110 samples, 18.55%)</title><rect x="969" y="68" width="219" height="15" fill="rgb(206,156,26)"/><text x="972.00" y="78.50">profile_skl (bench_LogisticR..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (110 samples, 18.55%)</title><rect x="969" y="84" width="219" height="15" fill="rgb(225,88,40)"/><text x="972.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (110 samples, 18.55%)</title><rect x="969" y="100" width="219" height="15" fill="rgb(213,15,36)"/><text x="972.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 18.38%)</title><rect x="971" y="116" width="217" height="15" fill="rgb(235,133,5)"/><text x="974.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 18.21%)</title><rect x="973" y="132" width="215" height="15" fill="rgb(248,74,9)"/><text x="976.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (108 samples, 18.21%)</title><rect x="973" y="148" width="215" height="15" fill="rgb(247,77,8)"/><text x="976.00" y="158.50">predict_proba (sklearn/linea..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.01%)</title><rect x="1176" y="164" width="12" height="15" fill="rgb(225,136,32)"/><text x="1179.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 0.84%)</title><rect x="1178" y="180" width="10" height="15" fill="rgb(222,63,1)"/><text x="1181.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.51%)</title><rect x="1182" y="196" width="6" height="15" fill="rgb(241,191,32)"/><text x="1185.00" y="206.50"></text></g><g><title>all (593 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(249,20,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (593 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(216,208,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_.py) (1 samples, 0.17%)</title><rect x="1188" y="68" width="2" height="15" fill="rgb(251,51,20)"/><text x="1191.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py) (1 samples, 0.17%)</title><rect x="1188" y="84" width="2" height="15" fill="rgb(252,46,31)"/><text x="1191.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.17%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(230,160,16)"/><text x="1191.00" y="110.50"></text></g><g><title>fit (sklearn/linear_model/_logistic.py) (1 samples, 0.17%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(222,65,27)"/><text x="1191.00" y="126.50"></text></g><g><title>_fit_liblinear (sklearn/svm/_base.py) (1 samples, 0.17%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(206,83,41)"/><text x="1191.00" y="142.50"></text></g><g><title>0x7fbaa743fc54 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(210,217,8)"/><text x="1191.00" y="158.50"></text></g><g><title>0x7fbaa743c060 (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(207,79,36)"/><text x="1191.00" y="174.50"></text></g><g><title>train (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(205,158,42)"/><text x="1191.00" y="190.50"></text></g><g><title>0x7fbaa744705a (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(247,124,39)"/><text x="1191.00" y="206.50"></text></g><g><title>TRON::tron (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(225,55,31)"/><text x="1191.00" y="222.50"></text></g><g><title>l2r_lr_fun::grad (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(232,66,50)"/><text x="1191.00" y="238.50"></text></g><g><title>l2r_lr_fun::XTv (sklearn/svm/_liblinear.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(237,197,41)"/><text x="1191.00" y="254.50"></text></g></g></svg>