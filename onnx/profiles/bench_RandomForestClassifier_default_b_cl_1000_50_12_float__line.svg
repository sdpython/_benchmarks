<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2134" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2117.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2117.00"> </text><g id="frames"><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:31) (1 samples, 0.17%)</title><rect x="10" y="52" width="1" height="15" fill="rgb(215,199,5)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:11) (1 samples, 0.17%)</title><rect x="10" y="68" width="1" height="15" fill="rgb(251,64,33)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (1 samples, 0.17%)</title><rect x="10" y="84" width="1" height="15" fill="rgb(243,160,28)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.17%)</title><rect x="10" y="100" width="1" height="15" fill="rgb(232,59,7)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.17%)</title><rect x="10" y="116" width="1" height="15" fill="rgb(240,47,47)"/><text x="13.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.17%)</title><rect x="10" y="132" width="1" height="15" fill="rgb(209,109,4)"/><text x="13.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.17%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(221,13,50)"/><text x="13.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.17%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(254,53,54)"/><text x="13.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.17%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(248,144,1)"/><text x="13.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.17%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(214,229,3)"/><text x="13.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(214,94,2)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(213,103,11)"/><text x="13.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.17%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(223,82,44)"/><text x="13.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.17%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(240,192,27)"/><text x="13.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.17%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(220,134,2)"/><text x="13.00" y="286.50"></text></g><g><title>0x7f24d6300b11 (?) (1 samples, 0.17%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(228,157,31)"/><text x="13.00" y="302.50"></text></g><g><title>0x7f24d633210a (?) (1 samples, 0.17%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(244,143,0)"/><text x="13.00" y="318.50"></text></g><g><title>0x7f24d655de60 (?) (1 samples, 0.17%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(243,47,48)"/><text x="13.00" y="334.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:28) (2 samples, 0.34%)</title><rect x="11" y="84" width="4" height="15" fill="rgb(241,155,4)"/><text x="14.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.34%)</title><rect x="11" y="100" width="4" height="15" fill="rgb(253,101,2)"/><text x="14.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.34%)</title><rect x="11" y="116" width="4" height="15" fill="rgb(205,105,38)"/><text x="14.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.34%)</title><rect x="11" y="132" width="4" height="15" fill="rgb(229,201,40)"/><text x="14.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.34%)</title><rect x="11" y="148" width="4" height="15" fill="rgb(249,50,10)"/><text x="14.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.34%)</title><rect x="11" y="164" width="4" height="15" fill="rgb(231,141,36)"/><text x="14.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.34%)</title><rect x="11" y="180" width="4" height="15" fill="rgb(224,149,27)"/><text x="14.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (2 samples, 0.34%)</title><rect x="11" y="196" width="4" height="15" fill="rgb(227,12,4)"/><text x="14.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (2 samples, 0.34%)</title><rect x="11" y="212" width="4" height="15" fill="rgb(238,193,51)"/><text x="14.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.34%)</title><rect x="11" y="228" width="4" height="15" fill="rgb(242,162,8)"/><text x="14.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="11" y="244" width="4" height="15" fill="rgb(251,101,23)"/><text x="14.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (2 samples, 0.34%)</title><rect x="11" y="260" width="4" height="15" fill="rgb(231,150,48)"/><text x="14.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:140) (2 samples, 0.34%)</title><rect x="11" y="276" width="4" height="15" fill="rgb(240,105,50)"/><text x="14.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:140) (1 samples, 0.17%)</title><rect x="13" y="292" width="2" height="15" fill="rgb(232,16,31)"/><text x="16.00" y="302.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:654) (1 samples, 0.17%)</title><rect x="15" y="148" width="2" height="15" fill="rgb(213,18,39)"/><text x="18.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="15" y="164" width="2" height="15" fill="rgb(214,64,15)"/><text x="18.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.17%)</title><rect x="15" y="180" width="2" height="15" fill="rgb(213,130,43)"/><text x="18.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="15" y="196" width="2" height="15" fill="rgb(227,94,9)"/><text x="18.00" y="206.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.17%)</title><rect x="17" y="148" width="2" height="15" fill="rgb(209,188,34)"/><text x="20.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:182) (1 samples, 0.17%)</title><rect x="17" y="164" width="2" height="15" fill="rgb(231,20,11)"/><text x="20.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.17%)</title><rect x="19" y="180" width="2" height="15" fill="rgb(235,93,49)"/><text x="22.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.17%)</title><rect x="21" y="260" width="2" height="15" fill="rgb(216,59,50)"/><text x="24.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.17%)</title><rect x="21" y="276" width="2" height="15" fill="rgb(214,183,34)"/><text x="24.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.17%)</title><rect x="21" y="292" width="2" height="15" fill="rgb(243,209,38)"/><text x="24.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.17%)</title><rect x="21" y="308" width="2" height="15" fill="rgb(226,46,39)"/><text x="24.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.17%)</title><rect x="21" y="324" width="2" height="15" fill="rgb(212,204,15)"/><text x="24.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.17%)</title><rect x="21" y="340" width="2" height="15" fill="rgb(218,21,43)"/><text x="24.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.17%)</title><rect x="21" y="356" width="2" height="15" fill="rgb(212,223,12)"/><text x="24.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.17%)</title><rect x="21" y="372" width="2" height="15" fill="rgb(238,51,1)"/><text x="24.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.17%)</title><rect x="21" y="388" width="2" height="15" fill="rgb(215,208,45)"/><text x="24.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.17%)</title><rect x="21" y="404" width="2" height="15" fill="rgb(229,202,20)"/><text x="24.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.17%)</title><rect x="21" y="420" width="2" height="15" fill="rgb(239,97,15)"/><text x="24.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.17%)</title><rect x="21" y="436" width="2" height="15" fill="rgb(207,73,42)"/><text x="24.00" y="446.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (3 samples, 0.51%)</title><rect x="19" y="164" width="6" height="15" fill="rgb(211,90,32)"/><text x="22.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.34%)</title><rect x="21" y="180" width="4" height="15" fill="rgb(213,90,24)"/><text x="24.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.34%)</title><rect x="21" y="196" width="4" height="15" fill="rgb(216,56,45)"/><text x="24.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.34%)</title><rect x="21" y="212" width="4" height="15" fill="rgb(240,171,9)"/><text x="24.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.34%)</title><rect x="21" y="228" width="4" height="15" fill="rgb(248,110,33)"/><text x="24.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.34%)</title><rect x="21" y="244" width="4" height="15" fill="rgb(221,99,44)"/><text x="24.00" y="254.50"></text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.17%)</title><rect x="23" y="260" width="2" height="15" fill="rgb(208,180,25)"/><text x="26.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.17%)</title><rect x="23" y="276" width="2" height="15" fill="rgb(249,30,12)"/><text x="26.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.17%)</title><rect x="25" y="180" width="2" height="15" fill="rgb(231,111,42)"/><text x="28.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.17%)</title><rect x="27" y="180" width="2" height="15" fill="rgb(228,159,6)"/><text x="30.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (3 samples, 0.51%)</title><rect x="29" y="180" width="6" height="15" fill="rgb(212,1,37)"/><text x="32.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (2 samples, 0.34%)</title><rect x="31" y="196" width="4" height="15" fill="rgb(232,155,43)"/><text x="34.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (1 samples, 0.17%)</title><rect x="33" y="212" width="2" height="15" fill="rgb(244,211,28)"/><text x="36.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.34%)</title><rect x="35" y="180" width="4" height="15" fill="rgb(241,127,37)"/><text x="38.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.17%)</title><rect x="39" y="212" width="2" height="15" fill="rgb(243,201,41)"/><text x="42.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (3 samples, 0.51%)</title><rect x="39" y="196" width="6" height="15" fill="rgb(236,29,45)"/><text x="42.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.34%)</title><rect x="41" y="212" width="4" height="15" fill="rgb(226,226,6)"/><text x="44.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="43" y="228" width="2" height="15" fill="rgb(218,125,39)"/><text x="46.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.51%)</title><rect x="47" y="212" width="6" height="15" fill="rgb(214,37,22)"/><text x="50.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (2 samples, 0.34%)</title><rect x="49" y="228" width="4" height="15" fill="rgb(229,158,54)"/><text x="52.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:120) (1 samples, 0.17%)</title><rect x="53" y="212" width="2" height="15" fill="rgb(225,140,28)"/><text x="56.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.17%)</title><rect x="55" y="212" width="2" height="15" fill="rgb(247,207,18)"/><text x="58.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (10 samples, 1.68%)</title><rect x="39" y="180" width="20" height="15" fill="rgb(233,38,54)"/><text x="42.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 1.18%)</title><rect x="45" y="196" width="14" height="15" fill="rgb(253,42,11)"/><text x="48.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.17%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(233,67,12)"/><text x="60.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.34%)</title><rect x="59" y="196" width="4" height="15" fill="rgb(240,130,5)"/><text x="62.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.17%)</title><rect x="63" y="196" width="2" height="15" fill="rgb(235,54,41)"/><text x="66.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (4 samples, 0.67%)</title><rect x="59" y="180" width="8" height="15" fill="rgb(217,88,41)"/><text x="62.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:249) (1 samples, 0.17%)</title><rect x="65" y="196" width="2" height="15" fill="rgb(240,102,51)"/><text x="68.00" y="206.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.34%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(224,203,37)"/><text x="70.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.17%)</title><rect x="69" y="212" width="2" height="15" fill="rgb(207,51,19)"/><text x="72.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.51%)</title><rect x="67" y="180" width="6" height="15" fill="rgb(232,20,20)"/><text x="70.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.17%)</title><rect x="71" y="196" width="2" height="15" fill="rgb(231,65,36)"/><text x="74.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.17%)</title><rect x="71" y="212" width="2" height="15" fill="rgb(237,92,31)"/><text x="74.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.17%)</title><rect x="75" y="196" width="2" height="15" fill="rgb(253,227,6)"/><text x="78.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.17%)</title><rect x="75" y="212" width="2" height="15" fill="rgb(249,137,38)"/><text x="78.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.17%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(236,161,26)"/><text x="80.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.17%)</title><rect x="77" y="212" width="2" height="15" fill="rgb(244,100,52)"/><text x="80.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.17%)</title><rect x="85" y="260" width="2" height="15" fill="rgb(211,148,4)"/><text x="88.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (2 samples, 0.34%)</title><rect x="85" y="244" width="4" height="15" fill="rgb(249,89,39)"/><text x="88.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:206) (1 samples, 0.17%)</title><rect x="87" y="260" width="2" height="15" fill="rgb(240,66,54)"/><text x="90.00" y="270.50"></text></g><g><title>0x7f24fc8e9120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="87" y="276" width="2" height="15" fill="rgb(245,170,51)"/><text x="90.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.17%)</title><rect x="93" y="260" width="2" height="15" fill="rgb(238,36,3)"/><text x="96.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="97" y="324" width="2" height="15" fill="rgb(238,200,50)"/><text x="100.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.34%)</title><rect x="99" y="324" width="4" height="15" fill="rgb(242,36,19)"/><text x="102.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (5 samples, 0.84%)</title><rect x="95" y="292" width="10" height="15" fill="rgb(218,101,15)"/><text x="98.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 0.84%)</title><rect x="95" y="308" width="10" height="15" fill="rgb(250,154,27)"/><text x="98.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.17%)</title><rect x="103" y="324" width="2" height="15" fill="rgb(234,97,48)"/><text x="106.00" y="334.50"></text></g><g><title>0x7f24d631a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="107" y="356" width="2" height="15" fill="rgb(211,202,37)"/><text x="110.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.17%)</title><rect x="107" y="372" width="2" height="15" fill="rgb(253,0,21)"/><text x="110.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.17%)</title><rect x="107" y="388" width="2" height="15" fill="rgb(215,32,31)"/><text x="110.00" y="398.50"></text></g><g><title>0x7f24d631a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="109" y="356" width="2" height="15" fill="rgb(231,94,54)"/><text x="112.00" y="366.50"></text></g><g><title>0x7f24d62fed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="109" y="372" width="2" height="15" fill="rgb(218,43,3)"/><text x="112.00" y="382.50"></text></g><g><title>0x7f24d62fe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="109" y="388" width="2" height="15" fill="rgb(224,54,41)"/><text x="112.00" y="398.50"></text></g><g><title>0x7f24d62f42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="109" y="404" width="2" height="15" fill="rgb(228,41,12)"/><text x="112.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.17%)</title><rect x="109" y="420" width="2" height="15" fill="rgb(241,217,37)"/><text x="112.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.17%)</title><rect x="109" y="436" width="2" height="15" fill="rgb(239,69,1)"/><text x="112.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.17%)</title><rect x="109" y="452" width="2" height="15" fill="rgb(252,168,17)"/><text x="112.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="109" y="468" width="2" height="15" fill="rgb(250,88,36)"/><text x="112.00" y="478.50"></text></g><g><title>0x7f24d631a511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="111" y="356" width="2" height="15" fill="rgb(211,80,9)"/><text x="114.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.17%)</title><rect x="113" y="372" width="2" height="15" fill="rgb(215,138,6)"/><text x="116.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.17%)</title><rect x="113" y="388" width="2" height="15" fill="rgb(242,7,9)"/><text x="116.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.17%)</title><rect x="113" y="404" width="2" height="15" fill="rgb(205,53,15)"/><text x="116.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.17%)</title><rect x="113" y="420" width="2" height="15" fill="rgb(219,72,10)"/><text x="116.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.17%)</title><rect x="113" y="436" width="2" height="15" fill="rgb(249,148,3)"/><text x="116.00" y="446.50"></text></g><g><title>0x7f24d631a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="113" y="356" width="4" height="15" fill="rgb(212,182,17)"/><text x="116.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.17%)</title><rect x="115" y="372" width="2" height="15" fill="rgb(241,212,52)"/><text x="118.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.17%)</title><rect x="115" y="388" width="2" height="15" fill="rgb(232,57,2)"/><text x="118.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.17%)</title><rect x="115" y="404" width="2" height="15" fill="rgb(236,199,24)"/><text x="118.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.17%)</title><rect x="115" y="420" width="2" height="15" fill="rgb(217,124,11)"/><text x="118.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.17%)</title><rect x="115" y="436" width="2" height="15" fill="rgb(250,165,6)"/><text x="118.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.17%)</title><rect x="115" y="452" width="2" height="15" fill="rgb(219,134,14)"/><text x="118.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="115" y="468" width="2" height="15" fill="rgb(221,175,28)"/><text x="118.00" y="478.50"></text></g><g><title>0x7f24fc8c9dd6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="115" y="484" width="2" height="15" fill="rgb(241,11,49)"/><text x="118.00" y="494.50"></text></g><g><title>0x7f24d631a693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="117" y="356" width="4" height="15" fill="rgb(248,149,3)"/><text x="120.00" y="366.50"></text></g><g><title>0x7f24d631a698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="121" y="356" width="2" height="15" fill="rgb(251,91,0)"/><text x="124.00" y="366.50"></text></g><g><title>0x7f24d631a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="123" y="356" width="2" height="15" fill="rgb(227,131,30)"/><text x="126.00" y="366.50"></text></g><g><title>0x7f24d631a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="125" y="356" width="4" height="15" fill="rgb(240,159,48)"/><text x="128.00" y="366.50"></text></g><g><title>0x7f24d631a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="129" y="356" width="2" height="15" fill="rgb(249,56,28)"/><text x="132.00" y="366.50"></text></g><g><title>0x7f24d631a6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="131" y="356" width="2" height="15" fill="rgb(217,98,51)"/><text x="134.00" y="366.50"></text></g><g><title>0x7f24d631a6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="133" y="356" width="2" height="15" fill="rgb(236,9,5)"/><text x="136.00" y="366.50"></text></g><g><title>0x7f24d630bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.53%)</title><rect x="107" y="324" width="30" height="15" fill="rgb(213,104,5)"/><text x="110.00" y="334.50">0x..</text></g><g><title>0x7f24d631b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.53%)</title><rect x="107" y="340" width="30" height="15" fill="rgb(252,93,49)"/><text x="110.00" y="350.50">0x..</text></g><g><title>0x7f24d631a731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="135" y="356" width="2" height="15" fill="rgb(235,28,42)"/><text x="138.00" y="366.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.17%)</title><rect x="139" y="356" width="2" height="15" fill="rgb(214,162,7)"/><text x="142.00" y="366.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.17%)</title><rect x="141" y="356" width="2" height="15" fill="rgb(231,42,38)"/><text x="144.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.17%)</title><rect x="141" y="372" width="2" height="15" fill="rgb(211,52,18)"/><text x="144.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.17%)</title><rect x="141" y="388" width="2" height="15" fill="rgb(250,145,24)"/><text x="144.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 0.67%)</title><rect x="137" y="340" width="8" height="15" fill="rgb(221,12,37)"/><text x="140.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.17%)</title><rect x="143" y="356" width="2" height="15" fill="rgb(227,118,0)"/><text x="146.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:629) (1 samples, 0.17%)</title><rect x="143" y="372" width="2" height="15" fill="rgb(253,201,53)"/><text x="146.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.17%)</title><rect x="145" y="372" width="2" height="15" fill="rgb(230,12,43)"/><text x="148.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.34%)</title><rect x="145" y="356" width="4" height="15" fill="rgb(224,210,20)"/><text x="148.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.17%)</title><rect x="147" y="372" width="2" height="15" fill="rgb(237,99,12)"/><text x="150.00" y="382.50"></text></g><g><title>0x7f24d630c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.18%)</title><rect x="137" y="324" width="14" height="15" fill="rgb(246,198,4)"/><text x="140.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.51%)</title><rect x="145" y="340" width="6" height="15" fill="rgb(217,109,27)"/><text x="148.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.17%)</title><rect x="149" y="356" width="2" height="15" fill="rgb(253,4,19)"/><text x="152.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.17%)</title><rect x="149" y="372" width="2" height="15" fill="rgb(247,49,23)"/><text x="152.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.17%)</title><rect x="149" y="388" width="2" height="15" fill="rgb(208,178,17)"/><text x="152.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.17%)</title><rect x="149" y="404" width="2" height="15" fill="rgb(243,22,41)"/><text x="152.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.17%)</title><rect x="149" y="420" width="2" height="15" fill="rgb(249,39,13)"/><text x="152.00" y="430.50"></text></g><g><title>0x7f24d630c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="151" y="324" width="4" height="15" fill="rgb(253,146,2)"/><text x="154.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.17%)</title><rect x="153" y="340" width="2" height="15" fill="rgb(242,10,28)"/><text x="156.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.17%)</title><rect x="153" y="356" width="2" height="15" fill="rgb(212,76,41)"/><text x="156.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.17%)</title><rect x="153" y="372" width="2" height="15" fill="rgb(238,43,40)"/><text x="156.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.17%)</title><rect x="153" y="388" width="2" height="15" fill="rgb(241,48,21)"/><text x="156.00" y="398.50"></text></g><g><title>0x7f24fc8c8e60 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="153" y="404" width="2" height="15" fill="rgb(225,49,29)"/><text x="156.00" y="414.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.17%)</title><rect x="155" y="356" width="2" height="15" fill="rgb(223,127,5)"/><text x="158.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.17%)</title><rect x="155" y="372" width="2" height="15" fill="rgb(233,191,28)"/><text x="158.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.17%)</title><rect x="155" y="388" width="2" height="15" fill="rgb(242,222,2)"/><text x="158.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.17%)</title><rect x="155" y="404" width="2" height="15" fill="rgb(250,128,39)"/><text x="158.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (27 samples, 4.55%)</title><rect x="105" y="292" width="53" height="15" fill="rgb(245,211,42)"/><text x="108.00" y="302.50">predi..</text></g><g><title>0x7f24d630cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 4.38%)</title><rect x="107" y="308" width="51" height="15" fill="rgb(244,217,11)"/><text x="110.00" y="318.50">0x7f2..</text></g><g><title>0x7f24d630c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="155" y="324" width="3" height="15" fill="rgb(231,148,21)"/><text x="158.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (2 samples, 0.34%)</title><rect x="155" y="340" width="3" height="15" fill="rgb(252,82,36)"/><text x="158.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.17%)</title><rect x="157" y="356" width="1" height="15" fill="rgb(238,229,43)"/><text x="160.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (1 samples, 0.17%)</title><rect x="158" y="292" width="2" height="15" fill="rgb(243,84,53)"/><text x="161.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.17%)</title><rect x="166" y="308" width="2" height="15" fill="rgb(249,128,15)"/><text x="169.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.17%)</title><rect x="166" y="324" width="2" height="15" fill="rgb(218,188,2)"/><text x="169.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c:219) (1 samples, 0.17%)</title><rect x="166" y="340" width="2" height="15" fill="rgb(205,207,18)"/><text x="169.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.17%)</title><rect x="170" y="356" width="2" height="15" fill="rgb(252,151,29)"/><text x="173.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.17%)</title><rect x="170" y="372" width="2" height="15" fill="rgb(223,64,10)"/><text x="173.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.17%)</title><rect x="170" y="388" width="2" height="15" fill="rgb(207,190,49)"/><text x="173.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.17%)</title><rect x="170" y="404" width="2" height="15" fill="rgb(250,148,24)"/><text x="173.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.17%)</title><rect x="170" y="420" width="2" height="15" fill="rgb(223,227,0)"/><text x="173.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.17%)</title><rect x="170" y="436" width="2" height="15" fill="rgb(251,222,24)"/><text x="173.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.17%)</title><rect x="172" y="372" width="2" height="15" fill="rgb(253,132,41)"/><text x="175.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.17%)</title><rect x="174" y="388" width="2" height="15" fill="rgb(206,223,5)"/><text x="177.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.17%)</title><rect x="174" y="404" width="2" height="15" fill="rgb(205,228,39)"/><text x="177.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.17%)</title><rect x="174" y="420" width="2" height="15" fill="rgb(212,222,7)"/><text x="177.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2190) (1 samples, 0.17%)</title><rect x="174" y="436" width="2" height="15" fill="rgb(247,84,18)"/><text x="177.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.17%)</title><rect x="176" y="404" width="2" height="15" fill="rgb(252,145,29)"/><text x="179.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.17%)</title><rect x="176" y="420" width="2" height="15" fill="rgb(224,110,54)"/><text x="179.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.17%)</title><rect x="176" y="436" width="2" height="15" fill="rgb(223,11,3)"/><text x="179.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="176" y="452" width="2" height="15" fill="rgb(238,214,35)"/><text x="179.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.17%)</title><rect x="176" y="468" width="2" height="15" fill="rgb(253,46,13)"/><text x="179.00" y="478.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.17%)</title><rect x="176" y="484" width="2" height="15" fill="rgb(238,81,49)"/><text x="179.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.17%)</title><rect x="178" y="404" width="2" height="15" fill="rgb(209,29,25)"/><text x="181.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.17%)</title><rect x="178" y="420" width="2" height="15" fill="rgb(245,204,37)"/><text x="181.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.17%)</title><rect x="178" y="436" width="2" height="15" fill="rgb(212,89,42)"/><text x="181.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.17%)</title><rect x="178" y="452" width="2" height="15" fill="rgb(247,218,11)"/><text x="181.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.17%)</title><rect x="180" y="404" width="2" height="15" fill="rgb(210,178,10)"/><text x="183.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.17%)</title><rect x="180" y="420" width="2" height="15" fill="rgb(205,140,41)"/><text x="183.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.17%)</title><rect x="180" y="436" width="2" height="15" fill="rgb(213,78,17)"/><text x="183.00" y="446.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2639) (1 samples, 0.17%)</title><rect x="180" y="452" width="2" height="15" fill="rgb(215,98,5)"/><text x="183.00" y="462.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.17%)</title><rect x="182" y="420" width="2" height="15" fill="rgb(212,64,48)"/><text x="185.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.17%)</title><rect x="184" y="420" width="2" height="15" fill="rgb(206,160,23)"/><text x="187.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3541) (1 samples, 0.17%)</title><rect x="186" y="420" width="2" height="15" fill="rgb(234,10,23)"/><text x="189.00" y="430.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.17%)</title><rect x="192" y="452" width="2" height="15" fill="rgb(250,27,20)"/><text x="195.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.51%)</title><rect x="190" y="436" width="6" height="15" fill="rgb(209,172,6)"/><text x="193.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.17%)</title><rect x="194" y="452" width="2" height="15" fill="rgb(215,40,20)"/><text x="197.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (1 samples, 0.17%)</title><rect x="196" y="436" width="2" height="15" fill="rgb(229,7,27)"/><text x="199.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.17%)</title><rect x="198" y="436" width="2" height="15" fill="rgb(244,146,9)"/><text x="201.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (21 samples, 3.54%)</title><rect x="160" y="292" width="42" height="15" fill="rgb(221,186,4)"/><text x="163.00" y="302.50">pre..</text></g><g><title>array_sum (methods.c:2215) (17 samples, 2.86%)</title><rect x="168" y="308" width="34" height="15" fill="rgb(206,66,41)"/><text x="171.00" y="318.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (17 samples, 2.86%)</title><rect x="168" y="324" width="34" height="15" fill="rgb(210,47,51)"/><text x="171.00" y="334.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (17 samples, 2.86%)</title><rect x="168" y="340" width="34" height="15" fill="rgb(239,78,27)"/><text x="171.00" y="350.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (15 samples, 2.53%)</title><rect x="172" y="356" width="30" height="15" fill="rgb(248,27,7)"/><text x="175.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 2.36%)</title><rect x="174" y="372" width="28" height="15" fill="rgb(230,117,7)"/><text x="177.00" y="382.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (13 samples, 2.19%)</title><rect x="176" y="388" width="26" height="15" fill="rgb(219,60,5)"/><text x="179.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.68%)</title><rect x="182" y="404" width="20" height="15" fill="rgb(232,47,49)"/><text x="185.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 1.18%)</title><rect x="188" y="420" width="14" height="15" fill="rgb(214,11,1)"/><text x="191.00" y="430.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.17%)</title><rect x="200" y="436" width="2" height="15" fill="rgb(221,30,19)"/><text x="203.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.17%)</title><rect x="202" y="308" width="2" height="15" fill="rgb(231,191,37)"/><text x="205.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.17%)</title><rect x="202" y="324" width="2" height="15" fill="rgb(207,79,33)"/><text x="205.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2067) (1 samples, 0.17%)</title><rect x="202" y="340" width="2" height="15" fill="rgb(244,182,36)"/><text x="205.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.17%)</title><rect x="204" y="340" width="2" height="15" fill="rgb(238,12,34)"/><text x="207.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.17%)</title><rect x="204" y="356" width="2" height="15" fill="rgb(233,201,53)"/><text x="207.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.17%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(248,95,36)"/><text x="207.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.17%)</title><rect x="204" y="388" width="2" height="15" fill="rgb(246,123,32)"/><text x="207.00" y="398.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.17%)</title><rect x="204" y="404" width="2" height="15" fill="rgb(209,32,6)"/><text x="207.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.17%)</title><rect x="204" y="420" width="2" height="15" fill="rgb(219,59,45)"/><text x="207.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.17%)</title><rect x="206" y="340" width="2" height="15" fill="rgb(224,48,16)"/><text x="209.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.17%)</title><rect x="206" y="356" width="2" height="15" fill="rgb(237,8,49)"/><text x="209.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.17%)</title><rect x="206" y="372" width="2" height="15" fill="rgb(224,220,9)"/><text x="209.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.17%)</title><rect x="206" y="388" width="2" height="15" fill="rgb(227,87,52)"/><text x="209.00" y="398.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1630) (1 samples, 0.17%)</title><rect x="206" y="404" width="2" height="15" fill="rgb(223,64,28)"/><text x="209.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.17%)</title><rect x="208" y="356" width="2" height="15" fill="rgb(231,190,47)"/><text x="211.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.17%)</title><rect x="208" y="372" width="2" height="15" fill="rgb(223,43,19)"/><text x="211.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.17%)</title><rect x="208" y="388" width="2" height="15" fill="rgb(243,195,37)"/><text x="211.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.17%)</title><rect x="208" y="404" width="2" height="15" fill="rgb(234,59,49)"/><text x="211.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.17%)</title><rect x="208" y="420" width="2" height="15" fill="rgb(221,62,4)"/><text x="211.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.34%)</title><rect x="210" y="372" width="4" height="15" fill="rgb(213,114,20)"/><text x="213.00" y="382.50"></text></g><g><title>DOUBLE_equal (loops.c.src:1773) (2 samples, 0.34%)</title><rect x="210" y="388" width="4" height="15" fill="rgb(219,117,1)"/><text x="213.00" y="398.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src:289) (2 samples, 0.34%)</title><rect x="210" y="404" width="4" height="15" fill="rgb(205,24,15)"/><text x="213.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.01%)</title><rect x="204" y="324" width="12" height="15" fill="rgb(214,9,30)"/><text x="207.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 0.67%)</title><rect x="208" y="340" width="8" height="15" fill="rgb(214,85,35)"/><text x="211.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.51%)</title><rect x="210" y="356" width="6" height="15" fill="rgb(236,110,11)"/><text x="213.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.17%)</title><rect x="214" y="372" width="2" height="15" fill="rgb(241,24,23)"/><text x="217.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="214" y="388" width="2" height="15" fill="rgb(225,148,38)"/><text x="217.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (8 samples, 1.35%)</title><rect x="202" y="292" width="16" height="15" fill="rgb(234,16,40)"/><text x="205.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (7 samples, 1.18%)</title><rect x="204" y="308" width="14" height="15" fill="rgb(241,198,15)"/><text x="207.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.17%)</title><rect x="216" y="324" width="2" height="15" fill="rgb(250,114,38)"/><text x="219.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="216" y="340" width="2" height="15" fill="rgb(212,115,38)"/><text x="219.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.17%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(251,18,0)"/><text x="219.00" y="366.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1341) (1 samples, 0.17%)</title><rect x="220" y="340" width="2" height="15" fill="rgb(213,180,38)"/><text x="223.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.34%)</title><rect x="220" y="324" width="4" height="15" fill="rgb(226,76,25)"/><text x="223.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.17%)</title><rect x="222" y="340" width="2" height="15" fill="rgb(209,200,46)"/><text x="225.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.17%)</title><rect x="222" y="356" width="2" height="15" fill="rgb(230,10,0)"/><text x="225.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.17%)</title><rect x="222" y="372" width="2" height="15" fill="rgb(206,204,21)"/><text x="225.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.17%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(227,96,27)"/><text x="227.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.34%)</title><rect x="224" y="356" width="4" height="15" fill="rgb(236,13,5)"/><text x="227.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.17%)</title><rect x="226" y="372" width="2" height="15" fill="rgb(229,18,52)"/><text x="229.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3039) (1 samples, 0.17%)</title><rect x="226" y="388" width="2" height="15" fill="rgb(225,30,8)"/><text x="229.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.17%)</title><rect x="228" y="404" width="2" height="15" fill="rgb(231,147,35)"/><text x="231.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (1 samples, 0.17%)</title><rect x="230" y="404" width="2" height="15" fill="rgb(242,131,16)"/><text x="233.00" y="414.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.17%)</title><rect x="232" y="404" width="2" height="15" fill="rgb(235,152,0)"/><text x="235.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.34%)</title><rect x="236" y="420" width="4" height="15" fill="rgb(253,43,43)"/><text x="239.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.18%)</title><rect x="228" y="356" width="14" height="15" fill="rgb(209,205,15)"/><text x="231.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 1.18%)</title><rect x="228" y="372" width="14" height="15" fill="rgb(238,110,48)"/><text x="231.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.18%)</title><rect x="228" y="388" width="14" height="15" fill="rgb(208,191,51)"/><text x="231.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.67%)</title><rect x="234" y="404" width="8" height="15" fill="rgb(225,138,21)"/><text x="237.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.17%)</title><rect x="240" y="420" width="2" height="15" fill="rgb(238,11,50)"/><text x="243.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (81 samples, 13.64%)</title><rect x="95" y="276" width="161" height="15" fill="rgb(246,217,30)"/><text x="98.00" y="286.50">_accumulate_predicti..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (19 samples, 3.20%)</title><rect x="218" y="292" width="38" height="15" fill="rgb(213,178,4)"/><text x="221.00" y="302.50">pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (18 samples, 3.03%)</title><rect x="220" y="308" width="36" height="15" fill="rgb(231,7,33)"/><text x="223.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (16 samples, 2.69%)</title><rect x="224" y="324" width="32" height="15" fill="rgb(225,115,53)"/><text x="227.00" y="334.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (16 samples, 2.69%)</title><rect x="224" y="340" width="32" height="15" fill="rgb(222,135,19)"/><text x="227.00" y="350.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (7 samples, 1.18%)</title><rect x="242" y="356" width="14" height="15" fill="rgb(243,157,24)"/><text x="245.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (7 samples, 1.18%)</title><rect x="242" y="372" width="14" height="15" fill="rgb(244,66,46)"/><text x="245.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (7 samples, 1.18%)</title><rect x="242" y="388" width="14" height="15" fill="rgb(231,0,45)"/><text x="245.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (7 samples, 1.18%)</title><rect x="242" y="404" width="14" height="15" fill="rgb(245,89,46)"/><text x="245.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (7 samples, 1.18%)</title><rect x="242" y="420" width="14" height="15" fill="rgb(217,126,42)"/><text x="245.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (3 samples, 0.51%)</title><rect x="256" y="276" width="6" height="15" fill="rgb(251,226,10)"/><text x="259.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.34%)</title><rect x="258" y="292" width="4" height="15" fill="rgb(214,204,2)"/><text x="261.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.17%)</title><rect x="260" y="308" width="2" height="15" fill="rgb(224,76,22)"/><text x="263.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.17%)</title><rect x="262" y="276" width="2" height="15" fill="rgb(250,145,29)"/><text x="265.00" y="286.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (2 samples, 0.34%)</title><rect x="264" y="276" width="4" height="15" fill="rgb(250,146,28)"/><text x="267.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.17%)</title><rect x="266" y="292" width="2" height="15" fill="rgb(221,76,52)"/><text x="269.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.17%)</title><rect x="266" y="308" width="2" height="15" fill="rgb(239,195,8)"/><text x="269.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.17%)</title><rect x="266" y="324" width="2" height="15" fill="rgb(234,53,39)"/><text x="269.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.17%)</title><rect x="266" y="340" width="2" height="15" fill="rgb(226,35,39)"/><text x="269.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.17%)</title><rect x="266" y="356" width="2" height="15" fill="rgb(231,211,39)"/><text x="269.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.17%)</title><rect x="266" y="372" width="2" height="15" fill="rgb(252,188,35)"/><text x="269.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.17%)</title><rect x="266" y="388" width="2" height="15" fill="rgb(225,148,2)"/><text x="269.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.17%)</title><rect x="266" y="404" width="2" height="15" fill="rgb(239,103,23)"/><text x="269.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (88 samples, 14.81%)</title><rect x="95" y="260" width="175" height="15" fill="rgb(245,105,47)"/><text x="98.00" y="270.50">&lt;listcomp&gt; (joblib/par..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.17%)</title><rect x="268" y="276" width="2" height="15" fill="rgb(210,132,40)"/><text x="271.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.17%)</title><rect x="268" y="292" width="2" height="15" fill="rgb(235,101,0)"/><text x="271.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.17%)</title><rect x="268" y="308" width="2" height="15" fill="rgb(238,86,43)"/><text x="271.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.17%)</title><rect x="268" y="324" width="2" height="15" fill="rgb(243,116,6)"/><text x="271.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.17%)</title><rect x="268" y="340" width="2" height="15" fill="rgb(244,48,43)"/><text x="271.00" y="350.50"></text></g><g><title>0x7f24fc8c8dfb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="268" y="356" width="2" height="15" fill="rgb(222,28,47)"/><text x="271.00" y="366.50"></text></g><g><title>0x7f24fc8c7ac7 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="268" y="372" width="2" height="15" fill="rgb(242,92,35)"/><text x="271.00" y="382.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (97 samples, 16.33%)</title><rect x="79" y="196" width="193" height="15" fill="rgb(218,115,38)"/><text x="82.00" y="206.50">_dispatch (joblib/paralle..</text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (96 samples, 16.16%)</title><rect x="81" y="212" width="191" height="15" fill="rgb(252,64,51)"/><text x="84.00" y="222.50">apply_async (joblib/_par..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (95 samples, 15.99%)</title><rect x="83" y="228" width="189" height="15" fill="rgb(251,90,51)"/><text x="86.00" y="238.50">__init__ (joblib/_parall..</text></g><g><title>__call__ (joblib/parallel.py:256) (92 samples, 15.49%)</title><rect x="89" y="244" width="183" height="15" fill="rgb(226,35,5)"/><text x="92.00" y="254.50">__call__ (joblib/parall..</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.17%)</title><rect x="270" y="260" width="2" height="15" fill="rgb(211,217,24)"/><text x="273.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.17%)</title><rect x="270" y="276" width="2" height="15" fill="rgb(238,191,7)"/><text x="273.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (125 samples, 21.04%)</title><rect x="25" y="164" width="249" height="15" fill="rgb(214,88,20)"/><text x="28.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (101 samples, 17.00%)</title><rect x="73" y="180" width="201" height="15" fill="rgb(205,97,34)"/><text x="76.00" y="190.50">dispatch_one_batch (joblib..</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.17%)</title><rect x="272" y="196" width="2" height="15" fill="rgb(214,96,42)"/><text x="275.00" y="206.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:18) (132 samples, 22.22%)</title><rect x="15" y="100" width="263" height="15" fill="rgb(215,59,27)"/><text x="18.00" y="110.50">profile (bench_RandomForestClassifi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (132 samples, 22.22%)</title><rect x="15" y="116" width="263" height="15" fill="rgb(236,135,35)"/><text x="18.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (132 samples, 22.22%)</title><rect x="15" y="132" width="263" height="15" fill="rgb(239,20,33)"/><text x="18.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (130 samples, 21.89%)</title><rect x="19" y="148" width="259" height="15" fill="rgb(235,195,52)"/><text x="22.00" y="158.50">predict_proba (sklearn/ensemble/_f..</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.34%)</title><rect x="274" y="164" width="4" height="15" fill="rgb(209,29,44)"/><text x="277.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (2 samples, 0.34%)</title><rect x="274" y="180" width="4" height="15" fill="rgb(239,39,50)"/><text x="277.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.17%)</title><rect x="278" y="148" width="2" height="15" fill="rgb(207,59,29)"/><text x="281.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.17%)</title><rect x="278" y="164" width="2" height="15" fill="rgb(228,197,42)"/><text x="281.00" y="174.50"></text></g><g><title>__init__ (queue.py:45) (1 samples, 0.17%)</title><rect x="278" y="180" width="2" height="15" fill="rgb(253,183,37)"/><text x="281.00" y="190.50"></text></g><g><title>__init__ (threading.py:227) (1 samples, 0.17%)</title><rect x="278" y="196" width="2" height="15" fill="rgb(252,106,34)"/><text x="281.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.17%)</title><rect x="280" y="180" width="2" height="15" fill="rgb(230,103,14)"/><text x="283.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.17%)</title><rect x="282" y="180" width="2" height="15" fill="rgb(233,85,36)"/><text x="285.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.17%)</title><rect x="288" y="196" width="2" height="15" fill="rgb(235,151,0)"/><text x="291.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.17%)</title><rect x="288" y="212" width="2" height="15" fill="rgb(211,152,42)"/><text x="291.00" y="222.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.34%)</title><rect x="290" y="196" width="4" height="15" fill="rgb(249,27,44)"/><text x="293.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (6 samples, 1.01%)</title><rect x="284" y="180" width="12" height="15" fill="rgb(236,95,27)"/><text x="287.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.17%)</title><rect x="294" y="196" width="2" height="15" fill="rgb(212,33,41)"/><text x="297.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (3 samples, 0.51%)</title><rect x="296" y="180" width="6" height="15" fill="rgb(246,38,35)"/><text x="299.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.17%)</title><rect x="317" y="228" width="2" height="15" fill="rgb(218,100,19)"/><text x="320.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.17%)</title><rect x="319" y="228" width="2" height="15" fill="rgb(227,78,9)"/><text x="322.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.17%)</title><rect x="321" y="228" width="2" height="15" fill="rgb(250,212,50)"/><text x="324.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.17%)</title><rect x="323" y="228" width="2" height="15" fill="rgb(226,5,23)"/><text x="326.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (6 samples, 1.01%)</title><rect x="315" y="212" width="12" height="15" fill="rgb(236,179,36)"/><text x="318.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.17%)</title><rect x="325" y="228" width="2" height="15" fill="rgb(236,155,29)"/><text x="328.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (14 samples, 2.36%)</title><rect x="302" y="180" width="27" height="15" fill="rgb(251,158,1)"/><text x="305.00" y="190.50">d..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (11 samples, 1.85%)</title><rect x="307" y="196" width="22" height="15" fill="rgb(231,171,9)"/><text x="310.00" y="206.50">&lt;..</text></g><g><title>delayed_function (joblib/parallel.py:306) (1 samples, 0.17%)</title><rect x="327" y="212" width="2" height="15" fill="rgb(244,27,54)"/><text x="330.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.17%)</title><rect x="329" y="180" width="2" height="15" fill="rgb(249,169,48)"/><text x="332.00" y="190.50"></text></g><g><title>0x7f24fc8de734 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="329" y="196" width="2" height="15" fill="rgb(237,145,18)"/><text x="332.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.17%)</title><rect x="331" y="180" width="2" height="15" fill="rgb(205,64,48)"/><text x="334.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (5 samples, 0.84%)</title><rect x="333" y="196" width="10" height="15" fill="rgb(241,211,24)"/><text x="336.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.34%)</title><rect x="339" y="212" width="4" height="15" fill="rgb(223,105,7)"/><text x="342.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.17%)</title><rect x="345" y="228" width="2" height="15" fill="rgb(248,177,47)"/><text x="348.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.17%)</title><rect x="349" y="244" width="2" height="15" fill="rgb(238,142,32)"/><text x="352.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 0.67%)</title><rect x="345" y="212" width="8" height="15" fill="rgb(225,81,3)"/><text x="348.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (3 samples, 0.51%)</title><rect x="347" y="228" width="6" height="15" fill="rgb(215,100,1)"/><text x="350.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.17%)</title><rect x="351" y="244" width="2" height="15" fill="rgb(206,122,30)"/><text x="354.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (12 samples, 2.02%)</title><rect x="333" y="180" width="24" height="15" fill="rgb(249,176,27)"/><text x="336.00" y="190.50">d..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 1.18%)</title><rect x="343" y="196" width="14" height="15" fill="rgb(213,10,50)"/><text x="346.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.34%)</title><rect x="353" y="212" width="4" height="15" fill="rgb(220,211,30)"/><text x="356.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.17%)</title><rect x="357" y="180" width="2" height="15" fill="rgb(213,129,13)"/><text x="360.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.17%)</title><rect x="357" y="196" width="2" height="15" fill="rgb(250,33,52)"/><text x="360.00" y="206.50"></text></g><g><title>_is_owned (threading.py:255) (1 samples, 0.17%)</title><rect x="365" y="228" width="2" height="15" fill="rgb(210,154,50)"/><text x="368.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 1.01%)</title><rect x="359" y="180" width="12" height="15" fill="rgb(244,147,7)"/><text x="362.00" y="190.50"></text></g><g><title>put (queue.py:151) (5 samples, 0.84%)</title><rect x="361" y="196" width="10" height="15" fill="rgb(206,189,30)"/><text x="364.00" y="206.50"></text></g><g><title>notify (threading.py:345) (3 samples, 0.51%)</title><rect x="365" y="212" width="6" height="15" fill="rgb(247,72,17)"/><text x="368.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.34%)</title><rect x="367" y="228" width="4" height="15" fill="rgb(230,197,0)"/><text x="370.00" y="238.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.17%)</title><rect x="371" y="196" width="2" height="15" fill="rgb(240,29,25)"/><text x="374.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.17%)</title><rect x="371" y="212" width="2" height="15" fill="rgb(236,150,20)"/><text x="374.00" y="222.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.17%)</title><rect x="373" y="196" width="2" height="15" fill="rgb(252,36,35)"/><text x="376.00" y="206.50"></text></g><g><title>_get (queue.py:217) (1 samples, 0.17%)</title><rect x="373" y="212" width="2" height="15" fill="rgb(247,44,18)"/><text x="376.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.51%)</title><rect x="371" y="180" width="6" height="15" fill="rgb(239,207,43)"/><text x="374.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.17%)</title><rect x="375" y="196" width="2" height="15" fill="rgb(220,143,23)"/><text x="378.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.17%)</title><rect x="377" y="180" width="2" height="15" fill="rgb(231,135,21)"/><text x="380.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.17%)</title><rect x="377" y="196" width="2" height="15" fill="rgb(233,161,7)"/><text x="380.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.17%)</title><rect x="379" y="196" width="2" height="15" fill="rgb(205,205,28)"/><text x="382.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.17%)</title><rect x="381" y="196" width="2" height="15" fill="rgb(226,57,8)"/><text x="384.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.17%)</title><rect x="383" y="196" width="2" height="15" fill="rgb(220,193,12)"/><text x="386.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.17%)</title><rect x="383" y="212" width="2" height="15" fill="rgb(239,50,32)"/><text x="386.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.17%)</title><rect x="389" y="260" width="2" height="15" fill="rgb(236,51,37)"/><text x="392.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.51%)</title><rect x="387" y="244" width="6" height="15" fill="rgb(217,218,34)"/><text x="390.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.17%)</title><rect x="391" y="260" width="2" height="15" fill="rgb(250,5,25)"/><text x="394.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.17%)</title><rect x="401" y="324" width="2" height="15" fill="rgb(243,202,28)"/><text x="404.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 1.35%)</title><rect x="403" y="324" width="16" height="15" fill="rgb(226,54,17)"/><text x="406.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.67%)</title><rect x="411" y="340" width="8" height="15" fill="rgb(251,91,16)"/><text x="414.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (13 samples, 2.19%)</title><rect x="395" y="292" width="26" height="15" fill="rgb(232,77,50)"/><text x="398.00" y="302.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 1.85%)</title><rect x="399" y="308" width="22" height="15" fill="rgb(249,118,52)"/><text x="402.00" y="318.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.17%)</title><rect x="419" y="324" width="2" height="15" fill="rgb(237,87,0)"/><text x="422.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (2 samples, 0.34%)</title><rect x="421" y="292" width="4" height="15" fill="rgb(205,2,25)"/><text x="424.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.17%)</title><rect x="423" y="308" width="2" height="15" fill="rgb(218,138,28)"/><text x="426.00" y="318.50"></text></g><g><title>0x7f24d630cd24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="425" y="308" width="2" height="15" fill="rgb(253,168,22)"/><text x="428.00" y="318.50"></text></g><g><title>0x7f24d630bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="427" y="324" width="2" height="15" fill="rgb(242,97,42)"/><text x="430.00" y="334.50"></text></g><g><title>0x7f24d62fbd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="427" y="340" width="2" height="15" fill="rgb(236,120,17)"/><text x="430.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.17%)</title><rect x="427" y="356" width="2" height="15" fill="rgb(215,12,21)"/><text x="430.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.17%)</title><rect x="427" y="372" width="2" height="15" fill="rgb(248,206,37)"/><text x="430.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.17%)</title><rect x="427" y="388" width="2" height="15" fill="rgb(207,12,1)"/><text x="430.00" y="398.50"></text></g><g><title>0x7f24d630bf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="429" y="324" width="2" height="15" fill="rgb(251,0,5)"/><text x="432.00" y="334.50"></text></g><g><title>0x7f24d631a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="431" y="356" width="2" height="15" fill="rgb(238,41,17)"/><text x="434.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.17%)</title><rect x="431" y="372" width="2" height="15" fill="rgb(239,201,34)"/><text x="434.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.17%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(250,206,12)"/><text x="434.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.17%)</title><rect x="433" y="436" width="2" height="15" fill="rgb(244,133,29)"/><text x="436.00" y="446.50"></text></g><g><title>0x7f24d62fe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="433" y="388" width="4" height="15" fill="rgb(235,10,48)"/><text x="436.00" y="398.50"></text></g><g><title>0x7f24d62f42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="433" y="404" width="4" height="15" fill="rgb(242,126,27)"/><text x="436.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.34%)</title><rect x="433" y="420" width="4" height="15" fill="rgb(221,143,37)"/><text x="436.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.17%)</title><rect x="435" y="436" width="2" height="15" fill="rgb(225,54,50)"/><text x="438.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.17%)</title><rect x="435" y="452" width="2" height="15" fill="rgb(219,21,17)"/><text x="438.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="435" y="468" width="2" height="15" fill="rgb(246,5,54)"/><text x="438.00" y="478.50"></text></g><g><title>0x7f24d62fed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="433" y="372" width="8" height="15" fill="rgb(234,227,20)"/><text x="436.00" y="382.50"></text></g><g><title>0x7f24d62fe6fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="437" y="388" width="4" height="15" fill="rgb(254,193,37)"/><text x="440.00" y="398.50"></text></g><g><title>0x7f24d62f1fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="441" y="388" width="2" height="15" fill="rgb(207,54,22)"/><text x="444.00" y="398.50"></text></g><g><title>0x7f24d62f19fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="441" y="404" width="2" height="15" fill="rgb(227,32,30)"/><text x="444.00" y="414.50"></text></g><g><title>0x7f24d631a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.01%)</title><rect x="433" y="356" width="12" height="15" fill="rgb(231,154,19)"/><text x="436.00" y="366.50"></text></g><g><title>0x7f24d62fee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="441" y="372" width="4" height="15" fill="rgb(249,158,19)"/><text x="444.00" y="382.50"></text></g><g><title>0x7f24d62f22bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="443" y="388" width="2" height="15" fill="rgb(238,117,35)"/><text x="446.00" y="398.50"></text></g><g><title>0x7f24d62f1df8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="443" y="404" width="2" height="15" fill="rgb(222,141,49)"/><text x="446.00" y="414.50"></text></g><g><title>0x7f24d631a511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="445" y="356" width="2" height="15" fill="rgb(247,63,9)"/><text x="448.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.17%)</title><rect x="447" y="372" width="2" height="15" fill="rgb(248,139,43)"/><text x="450.00" y="382.50"></text></g><g><title>0x7f24d631a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="447" y="356" width="4" height="15" fill="rgb(214,224,30)"/><text x="450.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.17%)</title><rect x="449" y="372" width="2" height="15" fill="rgb(219,206,24)"/><text x="452.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.17%)</title><rect x="449" y="388" width="2" height="15" fill="rgb(254,185,4)"/><text x="452.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.17%)</title><rect x="449" y="404" width="2" height="15" fill="rgb(237,27,20)"/><text x="452.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.17%)</title><rect x="449" y="420" width="2" height="15" fill="rgb(208,161,47)"/><text x="452.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.17%)</title><rect x="449" y="436" width="2" height="15" fill="rgb(237,21,27)"/><text x="452.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.17%)</title><rect x="449" y="452" width="2" height="15" fill="rgb(217,31,33)"/><text x="452.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="449" y="468" width="2" height="15" fill="rgb(243,74,20)"/><text x="452.00" y="478.50"></text></g><g><title>0x7f24fc8ca1a3 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="449" y="484" width="2" height="15" fill="rgb(252,166,52)"/><text x="452.00" y="494.50"></text></g><g><title>0x7f24d631a698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="451" y="356" width="1" height="15" fill="rgb(234,115,36)"/><text x="454.00" y="366.50"></text></g><g><title>0x7f24d631a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.01%)</title><rect x="452" y="356" width="12" height="15" fill="rgb(214,77,36)"/><text x="455.00" y="366.50"></text></g><g><title>0x7f24d631a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.84%)</title><rect x="464" y="356" width="10" height="15" fill="rgb(246,37,27)"/><text x="467.00" y="366.50"></text></g><g><title>0x7f24d631a6c2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(209,229,27)"/><text x="477.00" y="366.50"></text></g><g><title>0x7f24d631a6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="476" y="356" width="2" height="15" fill="rgb(216,216,38)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f24d631a6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="478" y="356" width="2" height="15" fill="rgb(234,108,34)"/><text x="481.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="478" y="372" width="2" height="15" fill="rgb(242,219,25)"/><text x="481.00" y="382.50"></text></g><g><title>0x7f24d631a7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="480" y="356" width="4" height="15" fill="rgb(213,207,12)"/><text x="483.00" y="366.50"></text></g><g><title>0x7f24d631abfc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="484" y="356" width="2" height="15" fill="rgb(244,56,11)"/><text x="487.00" y="366.50"></text></g><g><title>0x7f24d62e8bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="484" y="372" width="2" height="15" fill="rgb(236,80,42)"/><text x="487.00" y="382.50"></text></g><g><title>0x7f24d631b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.88%)</title><rect x="431" y="340" width="57" height="15" fill="rgb(213,34,40)"/><text x="434.00" y="350.50">0x7f24..</text></g><g><title>0x7f24d631ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="486" y="356" width="2" height="15" fill="rgb(249,98,6)"/><text x="489.00" y="366.50"></text></g><g><title>0x7f24d62f25f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="486" y="372" width="2" height="15" fill="rgb(244,129,14)"/><text x="489.00" y="382.50"></text></g><g><title>0x7f24d62f22a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="486" y="388" width="2" height="15" fill="rgb(214,62,15)"/><text x="489.00" y="398.50"></text></g><g><title>0x7f24d62ef4d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="488" y="372" width="2" height="15" fill="rgb(226,206,37)"/><text x="491.00" y="382.50"></text></g><g><title>0x7f24d630bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 5.22%)</title><rect x="431" y="324" width="61" height="15" fill="rgb(239,102,7)"/><text x="434.00" y="334.50">0x7f24..</text></g><g><title>0x7f24d631b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="488" y="340" width="4" height="15" fill="rgb(229,58,3)"/><text x="491.00" y="350.50"></text></g><g><title>0x7f24d62f02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="488" y="356" width="4" height="15" fill="rgb(212,141,33)"/><text x="491.00" y="366.50"></text></g><g><title>0x7f24d62ef530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="490" y="372" width="2" height="15" fill="rgb(223,25,3)"/><text x="493.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.17%)</title><rect x="490" y="388" width="2" height="15" fill="rgb(227,45,51)"/><text x="493.00" y="398.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.17%)</title><rect x="492" y="372" width="2" height="15" fill="rgb(209,126,35)"/><text x="495.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.34%)</title><rect x="492" y="356" width="4" height="15" fill="rgb(250,162,30)"/><text x="495.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3961) (1 samples, 0.17%)</title><rect x="494" y="372" width="2" height="15" fill="rgb(209,23,35)"/><text x="497.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.17%)</title><rect x="496" y="356" width="2" height="15" fill="rgb(218,8,24)"/><text x="499.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.17%)</title><rect x="496" y="372" width="2" height="15" fill="rgb(218,186,5)"/><text x="499.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.17%)</title><rect x="498" y="388" width="2" height="15" fill="rgb(207,43,20)"/><text x="501.00" y="398.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:37) (1 samples, 0.17%)</title><rect x="498" y="404" width="2" height="15" fill="rgb(248,11,17)"/><text x="501.00" y="414.50"></text></g><g><title>0x7f24d630c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.84%)</title><rect x="492" y="324" width="10" height="15" fill="rgb(250,16,44)"/><text x="495.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (5 samples, 0.84%)</title><rect x="492" y="340" width="10" height="15" fill="rgb(221,0,2)"/><text x="495.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.34%)</title><rect x="498" y="356" width="4" height="15" fill="rgb(211,6,29)"/><text x="501.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.34%)</title><rect x="498" y="372" width="4" height="15" fill="rgb(215,32,38)"/><text x="501.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.17%)</title><rect x="500" y="388" width="2" height="15" fill="rgb(226,98,14)"/><text x="503.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.17%)</title><rect x="500" y="404" width="2" height="15" fill="rgb(230,189,43)"/><text x="503.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (41 samples, 6.90%)</title><rect x="425" y="292" width="81" height="15" fill="rgb(233,224,38)"/><text x="428.00" y="302.50">predict_p..</text></g><g><title>0x7f24d630cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (40 samples, 6.73%)</title><rect x="427" y="308" width="79" height="15" fill="rgb(225,104,54)"/><text x="430.00" y="318.50">0x7f24d63..</text></g><g><title>0x7f24d630c1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.34%)</title><rect x="502" y="324" width="4" height="15" fill="rgb(239,144,28)"/><text x="505.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (2 samples, 0.34%)</title><rect x="502" y="340" width="4" height="15" fill="rgb(222,151,46)"/><text x="505.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.17%)</title><rect x="508" y="340" width="2" height="15" fill="rgb(226,100,53)"/><text x="511.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (3 samples, 0.51%)</title><rect x="506" y="292" width="6" height="15" fill="rgb(250,148,12)"/><text x="509.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.34%)</title><rect x="508" y="308" width="4" height="15" fill="rgb(206,114,23)"/><text x="511.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.34%)</title><rect x="508" y="324" width="4" height="15" fill="rgb(231,49,15)"/><text x="511.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="510" y="340" width="2" height="15" fill="rgb(250,193,47)"/><text x="513.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.17%)</title><rect x="516" y="308" width="2" height="15" fill="rgb(242,111,32)"/><text x="519.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.17%)</title><rect x="516" y="324" width="2" height="15" fill="rgb(223,102,5)"/><text x="519.00" y="334.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.17%)</title><rect x="518" y="356" width="2" height="15" fill="rgb(231,225,42)"/><text x="521.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.17%)</title><rect x="518" y="372" width="2" height="15" fill="rgb(208,141,53)"/><text x="521.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.17%)</title><rect x="518" y="388" width="2" height="15" fill="rgb(219,83,51)"/><text x="521.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.17%)</title><rect x="518" y="404" width="2" height="15" fill="rgb(210,137,26)"/><text x="521.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.17%)</title><rect x="518" y="420" width="2" height="15" fill="rgb(218,201,25)"/><text x="521.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.17%)</title><rect x="518" y="436" width="2" height="15" fill="rgb(236,76,28)"/><text x="521.00" y="446.50"></text></g><g><title>0x7f24fc9a6151 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="518" y="452" width="2" height="15" fill="rgb(233,134,44)"/><text x="521.00" y="462.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.17%)</title><rect x="520" y="372" width="2" height="15" fill="rgb(207,61,54)"/><text x="523.00" y="382.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.17%)</title><rect x="520" y="388" width="2" height="15" fill="rgb(252,141,10)"/><text x="523.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.17%)</title><rect x="522" y="404" width="2" height="15" fill="rgb(225,140,38)"/><text x="525.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.17%)</title><rect x="522" y="420" width="2" height="15" fill="rgb(221,222,5)"/><text x="525.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2230) (1 samples, 0.17%)</title><rect x="522" y="436" width="2" height="15" fill="rgb(237,201,39)"/><text x="525.00" y="446.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1724) (1 samples, 0.17%)</title><rect x="522" y="452" width="2" height="15" fill="rgb(207,157,51)"/><text x="525.00" y="462.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (2 samples, 0.34%)</title><rect x="522" y="388" width="4" height="15" fill="rgb(209,1,18)"/><text x="525.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3447) (1 samples, 0.17%)</title><rect x="524" y="404" width="2" height="15" fill="rgb(230,97,2)"/><text x="527.00" y="414.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.17%)</title><rect x="524" y="420" width="2" height="15" fill="rgb(227,195,34)"/><text x="527.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.17%)</title><rect x="526" y="436" width="2" height="15" fill="rgb(246,171,45)"/><text x="529.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.17%)</title><rect x="526" y="452" width="2" height="15" fill="rgb(237,185,45)"/><text x="529.00" y="462.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3514) (1 samples, 0.17%)</title><rect x="526" y="468" width="2" height="15" fill="rgb(232,64,8)"/><text x="529.00" y="478.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:752) (1 samples, 0.17%)</title><rect x="526" y="484" width="2" height="15" fill="rgb(233,187,44)"/><text x="529.00" y="494.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.17%)</title><rect x="528" y="452" width="2" height="15" fill="rgb(249,159,37)"/><text x="531.00" y="462.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3877) (1 samples, 0.17%)</title><rect x="528" y="468" width="2" height="15" fill="rgb(246,20,2)"/><text x="531.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 0.67%)</title><rect x="526" y="404" width="8" height="15" fill="rgb(242,107,39)"/><text x="529.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (4 samples, 0.67%)</title><rect x="526" y="420" width="8" height="15" fill="rgb(231,32,13)"/><text x="529.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.51%)</title><rect x="528" y="436" width="6" height="15" fill="rgb(237,155,51)"/><text x="531.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (2 samples, 0.34%)</title><rect x="530" y="452" width="4" height="15" fill="rgb(244,214,30)"/><text x="533.00" y="462.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="532" y="468" width="2" height="15" fill="rgb(249,164,28)"/><text x="535.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:289) (1 samples, 0.17%)</title><rect x="534" y="420" width="2" height="15" fill="rgb(245,168,46)"/><text x="537.00" y="430.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c:2102) (1 samples, 0.17%)</title><rect x="534" y="436" width="2" height="15" fill="rgb(208,13,44)"/><text x="537.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.17%)</title><rect x="536" y="420" width="2" height="15" fill="rgb(224,216,22)"/><text x="539.00" y="430.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1285) (1 samples, 0.17%)</title><rect x="536" y="436" width="2" height="15" fill="rgb(240,9,14)"/><text x="539.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.17%)</title><rect x="538" y="420" width="2" height="15" fill="rgb(240,110,39)"/><text x="541.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3265) (1 samples, 0.17%)</title><rect x="538" y="436" width="2" height="15" fill="rgb(221,147,4)"/><text x="541.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 0.67%)</title><rect x="534" y="404" width="8" height="15" fill="rgb(236,134,30)"/><text x="537.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.17%)</title><rect x="540" y="420" width="2" height="15" fill="rgb(239,78,15)"/><text x="543.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.17%)</title><rect x="540" y="436" width="2" height="15" fill="rgb(239,175,3)"/><text x="543.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="540" y="452" width="2" height="15" fill="rgb(250,101,5)"/><text x="543.00" y="462.50"></text></g><g><title>0x7f24fc8ca6f1 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="540" y="468" width="2" height="15" fill="rgb(244,154,50)"/><text x="543.00" y="478.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.17%)</title><rect x="542" y="404" width="2" height="15" fill="rgb(209,81,12)"/><text x="545.00" y="414.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.17%)</title><rect x="542" y="420" width="2" height="15" fill="rgb(244,91,4)"/><text x="545.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (1 samples, 0.17%)</title><rect x="544" y="420" width="2" height="15" fill="rgb(223,155,3)"/><text x="547.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.17%)</title><rect x="544" y="436" width="2" height="15" fill="rgb(219,33,21)"/><text x="547.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.17%)</title><rect x="546" y="420" width="2" height="15" fill="rgb(225,218,54)"/><text x="549.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (2 samples, 0.34%)</title><rect x="548" y="420" width="4" height="15" fill="rgb(211,209,9)"/><text x="551.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3538) (1 samples, 0.17%)</title><rect x="552" y="420" width="2" height="15" fill="rgb(239,114,10)"/><text x="555.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3559) (1 samples, 0.17%)</title><rect x="554" y="420" width="2" height="15" fill="rgb(219,76,29)"/><text x="557.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (2 samples, 0.34%)</title><rect x="556" y="436" width="4" height="15" fill="rgb(240,130,35)"/><text x="559.00" y="446.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (2 samples, 0.34%)</title><rect x="560" y="436" width="4" height="15" fill="rgb(230,114,13)"/><text x="563.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1663) (1 samples, 0.17%)</title><rect x="566" y="452" width="2" height="15" fill="rgb(244,190,38)"/><text x="569.00" y="462.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (5 samples, 0.84%)</title><rect x="564" y="436" width="10" height="15" fill="rgb(219,2,35)"/><text x="567.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (3 samples, 0.51%)</title><rect x="568" y="452" width="6" height="15" fill="rgb(234,100,17)"/><text x="571.00" y="462.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.17%)</title><rect x="574" y="436" width="2" height="15" fill="rgb(226,158,4)"/><text x="577.00" y="446.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.17%)</title><rect x="576" y="436" width="2" height="15" fill="rgb(231,53,5)"/><text x="579.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (34 samples, 5.72%)</title><rect x="512" y="292" width="68" height="15" fill="rgb(236,91,7)"/><text x="515.00" y="302.50">predict..</text></g><g><title>array_sum (methods.c:2215) (31 samples, 5.22%)</title><rect x="518" y="308" width="62" height="15" fill="rgb(240,44,12)"/><text x="521.00" y="318.50">array_..</text></g><g><title>forward_ndarray_method (methods.c:108) (31 samples, 5.22%)</title><rect x="518" y="324" width="62" height="15" fill="rgb(208,229,24)"/><text x="521.00" y="334.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py:38) (31 samples, 5.22%)</title><rect x="518" y="340" width="62" height="15" fill="rgb(223,31,9)"/><text x="521.00" y="350.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (30 samples, 5.05%)</title><rect x="520" y="356" width="60" height="15" fill="rgb(213,72,49)"/><text x="523.00" y="366.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (29 samples, 4.88%)</title><rect x="522" y="372" width="58" height="15" fill="rgb(228,105,53)"/><text x="525.00" y="382.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (27 samples, 4.55%)</title><rect x="526" y="388" width="54" height="15" fill="rgb(250,49,4)"/><text x="529.00" y="398.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (18 samples, 3.03%)</title><rect x="544" y="404" width="36" height="15" fill="rgb(210,147,6)"/><text x="547.00" y="414.50">PyU..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (12 samples, 2.02%)</title><rect x="556" y="420" width="24" height="15" fill="rgb(247,149,2)"/><text x="559.00" y="430.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.17%)</title><rect x="578" y="436" width="2" height="15" fill="rgb(228,68,3)"/><text x="581.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1845) (1 samples, 0.17%)</title><rect x="580" y="308" width="2" height="15" fill="rgb(236,116,10)"/><text x="583.00" y="318.50"></text></g><g><title>0x7f24fbaea280 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="584" y="324" width="2" height="15" fill="rgb(224,202,44)"/><text x="587.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.17%)</title><rect x="586" y="340" width="2" height="15" fill="rgb(214,158,24)"/><text x="589.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.17%)</title><rect x="586" y="356" width="2" height="15" fill="rgb(232,170,26)"/><text x="589.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.17%)</title><rect x="586" y="372" width="2" height="15" fill="rgb(234,107,13)"/><text x="589.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.17%)</title><rect x="586" y="388" width="2" height="15" fill="rgb(254,132,20)"/><text x="589.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.17%)</title><rect x="586" y="404" width="2" height="15" fill="rgb(205,24,8)"/><text x="589.00" y="414.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:67) (1 samples, 0.17%)</title><rect x="586" y="420" width="2" height="15" fill="rgb(218,102,3)"/><text x="589.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.17%)</title><rect x="588" y="340" width="2" height="15" fill="rgb(209,0,43)"/><text x="591.00" y="350.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1958) (1 samples, 0.17%)</title><rect x="588" y="356" width="2" height="15" fill="rgb(213,58,0)"/><text x="591.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.51%)</title><rect x="586" y="324" width="6" height="15" fill="rgb(214,64,4)"/><text x="589.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.17%)</title><rect x="590" y="340" width="2" height="15" fill="rgb(243,67,43)"/><text x="593.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1723) (1 samples, 0.17%)</title><rect x="590" y="356" width="2" height="15" fill="rgb(216,163,36)"/><text x="593.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (7 samples, 1.18%)</title><rect x="580" y="292" width="14" height="15" fill="rgb(236,157,31)"/><text x="583.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (6 samples, 1.01%)</title><rect x="582" y="308" width="12" height="15" fill="rgb(241,119,24)"/><text x="585.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.17%)</title><rect x="592" y="324" width="2" height="15" fill="rgb(208,111,12)"/><text x="595.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.17%)</title><rect x="594" y="324" width="2" height="15" fill="rgb(222,56,35)"/><text x="597.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1110) (1 samples, 0.17%)</title><rect x="594" y="340" width="2" height="15" fill="rgb(228,201,18)"/><text x="597.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.17%)</title><rect x="596" y="372" width="2" height="15" fill="rgb(252,22,54)"/><text x="599.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.17%)</title><rect x="596" y="388" width="2" height="15" fill="rgb(242,18,20)"/><text x="599.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2790) (1 samples, 0.17%)</title><rect x="598" y="388" width="2" height="15" fill="rgb(248,205,16)"/><text x="601.00" y="398.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c:855) (1 samples, 0.17%)</title><rect x="598" y="404" width="2" height="15" fill="rgb(233,59,29)"/><text x="601.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.51%)</title><rect x="596" y="356" width="5" height="15" fill="rgb(238,96,42)"/><text x="599.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.34%)</title><rect x="598" y="372" width="3" height="15" fill="rgb(225,152,9)"/><text x="601.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.17%)</title><rect x="600" y="388" width="1" height="15" fill="rgb(211,80,9)"/><text x="603.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.17%)</title><rect x="600" y="404" width="1" height="15" fill="rgb(242,44,43)"/><text x="603.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.17%)</title><rect x="600" y="420" width="1" height="15" fill="rgb(242,158,28)"/><text x="603.00" y="430.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:668) (1 samples, 0.17%)</title><rect x="600" y="436" width="1" height="15" fill="rgb(212,189,24)"/><text x="603.00" y="446.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.17%)</title><rect x="601" y="356" width="2" height="15" fill="rgb(210,34,43)"/><text x="604.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2230) (1 samples, 0.17%)</title><rect x="603" y="388" width="2" height="15" fill="rgb(248,134,48)"/><text x="606.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.34%)</title><rect x="605" y="404" width="4" height="15" fill="rgb(243,109,19)"/><text x="608.00" y="414.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.67%)</title><rect x="603" y="356" width="8" height="15" fill="rgb(208,158,49)"/><text x="606.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.67%)</title><rect x="603" y="372" width="8" height="15" fill="rgb(231,221,30)"/><text x="606.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.51%)</title><rect x="605" y="388" width="6" height="15" fill="rgb(222,139,48)"/><text x="608.00" y="398.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.17%)</title><rect x="609" y="404" width="2" height="15" fill="rgb(232,41,41)"/><text x="612.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.17%)</title><rect x="609" y="420" width="2" height="15" fill="rgb(253,28,1)"/><text x="612.00" y="430.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:603) (1 samples, 0.17%)</title><rect x="611" y="404" width="2" height="15" fill="rgb(253,100,33)"/><text x="614.00" y="414.50"></text></g><g><title>_mm_div_pd (emmintrin.h:265) (1 samples, 0.17%)</title><rect x="611" y="420" width="2" height="15" fill="rgb(253,44,22)"/><text x="614.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.36%)</title><rect x="596" y="324" width="27" height="15" fill="rgb(208,161,18)"/><text x="599.00" y="334.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.36%)</title><rect x="596" y="340" width="27" height="15" fill="rgb(209,6,12)"/><text x="599.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (6 samples, 1.01%)</title><rect x="611" y="356" width="12" height="15" fill="rgb(228,110,24)"/><text x="614.00" y="366.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (6 samples, 1.01%)</title><rect x="611" y="372" width="12" height="15" fill="rgb(224,55,24)"/><text x="614.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (6 samples, 1.01%)</title><rect x="611" y="388" width="12" height="15" fill="rgb(235,16,44)"/><text x="614.00" y="398.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 0.84%)</title><rect x="613" y="404" width="10" height="15" fill="rgb(209,136,17)"/><text x="616.00" y="414.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 0.84%)</title><rect x="613" y="420" width="10" height="15" fill="rgb(239,150,30)"/><text x="616.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (116 samples, 19.53%)</title><rect x="395" y="276" width="230" height="15" fill="rgb(233,159,3)"/><text x="398.00" y="286.50">_accumulate_prediction (sklear..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (16 samples, 2.69%)</title><rect x="594" y="292" width="31" height="15" fill="rgb(238,84,20)"/><text x="597.00" y="302.50">pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (16 samples, 2.69%)</title><rect x="594" y="308" width="31" height="15" fill="rgb(218,85,25)"/><text x="597.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.17%)</title><rect x="623" y="324" width="2" height="15" fill="rgb(253,220,7)"/><text x="626.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.34%)</title><rect x="625" y="276" width="4" height="15" fill="rgb(222,41,30)"/><text x="628.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.17%)</title><rect x="627" y="292" width="2" height="15" fill="rgb(250,29,29)"/><text x="630.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.17%)</title><rect x="627" y="308" width="2" height="15" fill="rgb(216,25,30)"/><text x="630.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="627" y="324" width="2" height="15" fill="rgb(215,48,54)"/><text x="630.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.17%)</title><rect x="633" y="324" width="2" height="15" fill="rgb(228,170,40)"/><text x="636.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.17%)</title><rect x="633" y="340" width="2" height="15" fill="rgb(209,69,37)"/><text x="636.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.17%)</title><rect x="633" y="356" width="2" height="15" fill="rgb(244,71,32)"/><text x="636.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.17%)</title><rect x="633" y="372" width="2" height="15" fill="rgb(241,36,3)"/><text x="636.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:451) (1 samples, 0.17%)</title><rect x="633" y="388" width="2" height="15" fill="rgb(210,55,37)"/><text x="636.00" y="398.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.17%)</title><rect x="635" y="388" width="2" height="15" fill="rgb(207,68,31)"/><text x="638.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.17%)</title><rect x="635" y="404" width="2" height="15" fill="rgb(205,37,31)"/><text x="638.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.51%)</title><rect x="633" y="292" width="6" height="15" fill="rgb(249,4,47)"/><text x="636.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.51%)</title><rect x="633" y="308" width="6" height="15" fill="rgb(221,38,32)"/><text x="636.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.34%)</title><rect x="635" y="324" width="4" height="15" fill="rgb(229,227,10)"/><text x="638.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.34%)</title><rect x="635" y="340" width="4" height="15" fill="rgb(229,152,36)"/><text x="638.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.34%)</title><rect x="635" y="356" width="4" height="15" fill="rgb(230,221,0)"/><text x="638.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.34%)</title><rect x="635" y="372" width="4" height="15" fill="rgb(234,69,31)"/><text x="638.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.17%)</title><rect x="637" y="388" width="2" height="15" fill="rgb(217,108,0)"/><text x="640.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.17%)</title><rect x="637" y="404" width="2" height="15" fill="rgb(242,44,30)"/><text x="640.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (6 samples, 1.01%)</title><rect x="629" y="276" width="12" height="15" fill="rgb(212,217,9)"/><text x="632.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.17%)</title><rect x="639" y="292" width="2" height="15" fill="rgb(214,197,52)"/><text x="642.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (125 samples, 21.04%)</title><rect x="395" y="260" width="248" height="15" fill="rgb(245,109,6)"/><text x="398.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:25..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="641" y="276" width="2" height="15" fill="rgb(225,120,40)"/><text x="644.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="641" y="292" width="2" height="15" fill="rgb(234,158,25)"/><text x="644.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="641" y="308" width="2" height="15" fill="rgb(205,45,51)"/><text x="644.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.17%)</title><rect x="647" y="276" width="2" height="15" fill="rgb(246,111,9)"/><text x="650.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (134 samples, 22.56%)</title><rect x="385" y="212" width="266" height="15" fill="rgb(245,144,52)"/><text x="388.00" y="222.50">apply_async (joblib/_parallel_backe..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (133 samples, 22.39%)</title><rect x="387" y="228" width="264" height="15" fill="rgb(231,50,6)"/><text x="390.00" y="238.50">__init__ (joblib/_parallel_backends..</text></g><g><title>__call__ (joblib/parallel.py:256) (130 samples, 21.89%)</title><rect x="393" y="244" width="258" height="15" fill="rgb(232,157,49)"/><text x="396.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (4 samples, 0.67%)</title><rect x="643" y="260" width="8" height="15" fill="rgb(233,82,47)"/><text x="646.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.17%)</title><rect x="649" y="276" width="2" height="15" fill="rgb(229,31,4)"/><text x="652.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.17%)</title><rect x="653" y="228" width="2" height="15" fill="rgb(227,123,34)"/><text x="656.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (137 samples, 23.06%)</title><rect x="385" y="196" width="272" height="15" fill="rgb(234,66,4)"/><text x="388.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (3 samples, 0.51%)</title><rect x="651" y="212" width="6" height="15" fill="rgb(208,181,12)"/><text x="654.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.17%)</title><rect x="655" y="228" width="2" height="15" fill="rgb(210,193,48)"/><text x="658.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (192 samples, 32.32%)</title><rect x="280" y="164" width="381" height="15" fill="rgb(213,142,10)"/><text x="283.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (142 samples, 23.91%)</title><rect x="379" y="180" width="282" height="15" fill="rgb(248,165,51)"/><text x="382.00" y="190.50">dispatch_one_batch (joblib/parallel.p..</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.34%)</title><rect x="657" y="196" width="4" height="15" fill="rgb(223,25,11)"/><text x="660.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:895) (1 samples, 0.17%)</title><rect x="661" y="180" width="2" height="15" fill="rgb(237,103,18)"/><text x="664.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.34%)</title><rect x="661" y="164" width="4" height="15" fill="rgb(250,191,23)"/><text x="664.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.17%)</title><rect x="663" y="180" width="2" height="15" fill="rgb(220,223,8)"/><text x="666.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:38) (330 samples, 55.56%)</title><rect x="11" y="52" width="656" height="15" fill="rgb(238,45,30)"/><text x="14.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:37) (330 samples, 55.56%)</title><rect x="11" y="68" width="656" height="15" fill="rgb(234,40,53)"/><text x="14.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:29) (328 samples, 55.22%)</title><rect x="15" y="84" width="652" height="15" fill="rgb(244,138,37)"/><text x="18.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:23) (196 samples, 33.00%)</title><rect x="278" y="100" width="389" height="15" fill="rgb(225,228,20)"/><text x="281.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (196 samples, 33.00%)</title><rect x="278" y="116" width="389" height="15" fill="rgb(240,225,22)"/><text x="281.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (196 samples, 33.00%)</title><rect x="278" y="132" width="389" height="15" fill="rgb(250,209,2)"/><text x="281.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (195 samples, 32.83%)</title><rect x="280" y="148" width="387" height="15" fill="rgb(246,188,4)"/><text x="283.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:949) (1 samples, 0.17%)</title><rect x="665" y="164" width="2" height="15" fill="rgb(208,63,11)"/><text x="668.00" y="174.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:710) (1 samples, 0.17%)</title><rect x="665" y="180" width="2" height="15" fill="rgb(250,109,19)"/><text x="668.00" y="190.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.17%)</title><rect x="667" y="852" width="2" height="15" fill="rgb(231,28,26)"/><text x="670.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.17%)</title><rect x="667" y="868" width="2" height="15" fill="rgb(229,165,9)"/><text x="670.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.17%)</title><rect x="667" y="884" width="2" height="15" fill="rgb(230,147,34)"/><text x="670.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.17%)</title><rect x="667" y="900" width="2" height="15" fill="rgb(215,12,31)"/><text x="670.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.17%)</title><rect x="667" y="916" width="2" height="15" fill="rgb(240,206,21)"/><text x="670.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.17%)</title><rect x="667" y="932" width="2" height="15" fill="rgb(213,154,54)"/><text x="670.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="667" y="948" width="2" height="15" fill="rgb(212,41,17)"/><text x="670.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.17%)</title><rect x="667" y="964" width="2" height="15" fill="rgb(205,204,34)"/><text x="670.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.17%)</title><rect x="667" y="980" width="2" height="15" fill="rgb(237,14,41)"/><text x="670.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.17%)</title><rect x="667" y="996" width="2" height="15" fill="rgb(244,157,36)"/><text x="670.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.17%)</title><rect x="667" y="1012" width="2" height="15" fill="rgb(239,62,18)"/><text x="670.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.17%)</title><rect x="667" y="1028" width="2" height="15" fill="rgb(221,95,22)"/><text x="670.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.17%)</title><rect x="667" y="1044" width="2" height="15" fill="rgb(233,173,38)"/><text x="670.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.34%)</title><rect x="667" y="820" width="4" height="15" fill="rgb(215,106,39)"/><text x="670.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.34%)</title><rect x="667" y="836" width="4" height="15" fill="rgb(246,83,48)"/><text x="670.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.17%)</title><rect x="669" y="852" width="2" height="15" fill="rgb(208,56,0)"/><text x="672.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.17%)</title><rect x="669" y="868" width="2" height="15" fill="rgb(224,116,54)"/><text x="672.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.17%)</title><rect x="669" y="884" width="2" height="15" fill="rgb(236,36,16)"/><text x="672.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.17%)</title><rect x="669" y="900" width="2" height="15" fill="rgb(235,0,22)"/><text x="672.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.17%)</title><rect x="669" y="916" width="2" height="15" fill="rgb(211,139,4)"/><text x="672.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.17%)</title><rect x="669" y="932" width="2" height="15" fill="rgb(220,180,52)"/><text x="672.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.17%)</title><rect x="669" y="948" width="2" height="15" fill="rgb(226,109,53)"/><text x="672.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (3 samples, 0.51%)</title><rect x="667" y="148" width="6" height="15" fill="rgb(212,11,17)"/><text x="670.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="164" width="6" height="15" fill="rgb(211,58,44)"/><text x="670.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.51%)</title><rect x="667" y="180" width="6" height="15" fill="rgb(232,212,28)"/><text x="670.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="196" width="6" height="15" fill="rgb(216,144,46)"/><text x="670.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="212" width="6" height="15" fill="rgb(216,46,36)"/><text x="670.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="228" width="6" height="15" fill="rgb(225,51,6)"/><text x="670.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="244" width="6" height="15" fill="rgb(205,57,30)"/><text x="670.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="260" width="6" height="15" fill="rgb(223,203,4)"/><text x="670.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="276" width="6" height="15" fill="rgb(239,155,33)"/><text x="670.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.51%)</title><rect x="667" y="292" width="6" height="15" fill="rgb(251,136,28)"/><text x="670.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="308" width="6" height="15" fill="rgb(233,101,26)"/><text x="670.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="324" width="6" height="15" fill="rgb(219,114,29)"/><text x="670.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="340" width="6" height="15" fill="rgb(219,124,46)"/><text x="670.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="356" width="6" height="15" fill="rgb(216,210,25)"/><text x="670.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="372" width="6" height="15" fill="rgb(219,216,18)"/><text x="670.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.51%)</title><rect x="667" y="388" width="6" height="15" fill="rgb(217,94,11)"/><text x="670.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="404" width="6" height="15" fill="rgb(227,206,17)"/><text x="670.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="420" width="6" height="15" fill="rgb(228,2,35)"/><text x="670.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="436" width="6" height="15" fill="rgb(244,190,53)"/><text x="670.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="452" width="6" height="15" fill="rgb(222,152,53)"/><text x="670.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="468" width="6" height="15" fill="rgb(247,113,31)"/><text x="670.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.51%)</title><rect x="667" y="484" width="6" height="15" fill="rgb(243,119,15)"/><text x="670.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="500" width="6" height="15" fill="rgb(232,121,36)"/><text x="670.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="516" width="6" height="15" fill="rgb(234,38,0)"/><text x="670.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="532" width="6" height="15" fill="rgb(245,116,43)"/><text x="670.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="548" width="6" height="15" fill="rgb(224,156,9)"/><text x="670.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="564" width="6" height="15" fill="rgb(232,189,8)"/><text x="670.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.51%)</title><rect x="667" y="580" width="6" height="15" fill="rgb(231,44,30)"/><text x="670.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="596" width="6" height="15" fill="rgb(208,127,22)"/><text x="670.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.51%)</title><rect x="667" y="612" width="6" height="15" fill="rgb(236,95,22)"/><text x="670.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="628" width="6" height="15" fill="rgb(212,172,33)"/><text x="670.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="644" width="6" height="15" fill="rgb(221,124,39)"/><text x="670.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="660" width="6" height="15" fill="rgb(214,60,44)"/><text x="670.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="676" width="6" height="15" fill="rgb(205,121,6)"/><text x="670.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="692" width="6" height="15" fill="rgb(235,70,11)"/><text x="670.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="708" width="6" height="15" fill="rgb(236,114,6)"/><text x="670.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.51%)</title><rect x="667" y="724" width="6" height="15" fill="rgb(239,145,40)"/><text x="670.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="667" y="740" width="6" height="15" fill="rgb(207,9,2)"/><text x="670.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="667" y="756" width="6" height="15" fill="rgb(209,127,33)"/><text x="670.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="667" y="772" width="6" height="15" fill="rgb(209,42,14)"/><text x="670.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="667" y="788" width="6" height="15" fill="rgb(237,33,18)"/><text x="670.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="667" y="804" width="6" height="15" fill="rgb(254,142,27)"/><text x="670.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.17%)</title><rect x="671" y="820" width="2" height="15" fill="rgb(252,199,7)"/><text x="674.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="671" y="836" width="2" height="15" fill="rgb(238,229,13)"/><text x="674.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="671" y="852" width="2" height="15" fill="rgb(215,18,10)"/><text x="674.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="671" y="868" width="2" height="15" fill="rgb(247,63,28)"/><text x="674.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="671" y="884" width="2" height="15" fill="rgb(244,96,6)"/><text x="674.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="671" y="900" width="2" height="15" fill="rgb(218,100,28)"/><text x="674.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.17%)</title><rect x="671" y="916" width="2" height="15" fill="rgb(237,14,15)"/><text x="674.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="671" y="932" width="2" height="15" fill="rgb(220,77,0)"/><text x="674.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="671" y="948" width="2" height="15" fill="rgb(226,161,21)"/><text x="674.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.17%)</title><rect x="671" y="964" width="2" height="15" fill="rgb(226,92,35)"/><text x="674.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.17%)</title><rect x="671" y="980" width="2" height="15" fill="rgb(250,17,50)"/><text x="674.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.17%)</title><rect x="671" y="996" width="2" height="15" fill="rgb(224,30,19)"/><text x="674.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="671" y="1012" width="2" height="15" fill="rgb(248,78,25)"/><text x="674.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="671" y="1028" width="2" height="15" fill="rgb(251,16,11)"/><text x="674.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="671" y="1044" width="2" height="15" fill="rgb(206,176,23)"/><text x="674.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="671" y="1060" width="2" height="15" fill="rgb(218,85,5)"/><text x="674.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="671" y="1076" width="2" height="15" fill="rgb(206,26,50)"/><text x="674.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.17%)</title><rect x="671" y="1092" width="2" height="15" fill="rgb(220,182,8)"/><text x="674.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5586) (1 samples, 0.17%)</title><rect x="671" y="1108" width="2" height="15" fill="rgb(242,11,35)"/><text x="674.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:4255) (1 samples, 0.17%)</title><rect x="671" y="1124" width="2" height="15" fill="rgb(213,18,13)"/><text x="674.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1140" width="2" height="15" fill="rgb(230,84,13)"/><text x="674.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1156" width="2" height="15" fill="rgb(251,229,6)"/><text x="674.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1172" width="2" height="15" fill="rgb(211,104,16)"/><text x="674.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1188" width="2" height="15" fill="rgb(220,76,1)"/><text x="674.00" y="1198.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1204" width="2" height="15" fill="rgb(213,153,49)"/><text x="674.00" y="1214.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1220" width="2" height="15" fill="rgb(213,110,10)"/><text x="674.00" y="1230.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1236" width="2" height="15" fill="rgb(250,18,8)"/><text x="674.00" y="1246.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1252" width="2" height="15" fill="rgb(235,223,49)"/><text x="674.00" y="1262.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1268" width="2" height="15" fill="rgb(223,215,34)"/><text x="674.00" y="1278.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1284" width="2" height="15" fill="rgb(235,54,40)"/><text x="674.00" y="1294.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1300" width="2" height="15" fill="rgb(250,62,22)"/><text x="674.00" y="1310.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1316" width="2" height="15" fill="rgb(207,54,23)"/><text x="674.00" y="1326.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1332" width="2" height="15" fill="rgb(247,124,23)"/><text x="674.00" y="1342.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3747) (1 samples, 0.17%)</title><rect x="671" y="1348" width="2" height="15" fill="rgb(216,30,40)"/><text x="674.00" y="1358.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3294) (1 samples, 0.17%)</title><rect x="671" y="1364" width="2" height="15" fill="rgb(232,12,39)"/><text x="674.00" y="1374.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py:3745) (1 samples, 0.17%)</title><rect x="671" y="1380" width="2" height="15" fill="rgb(223,9,9)"/><text x="674.00" y="1390.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.17%)</title><rect x="671" y="1396" width="2" height="15" fill="rgb(205,25,15)"/><text x="674.00" y="1406.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py:3365) (1 samples, 0.17%)</title><rect x="671" y="1412" width="2" height="15" fill="rgb(222,181,51)"/><text x="674.00" y="1422.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py:1183) (1 samples, 0.17%)</title><rect x="671" y="1428" width="2" height="15" fill="rgb(220,89,34)"/><text x="674.00" y="1438.50"></text></g><g><title>copy (copy.py:74) (1 samples, 0.17%)</title><rect x="671" y="1444" width="2" height="15" fill="rgb(241,199,48)"/><text x="674.00" y="1454.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (1 samples, 0.17%)</title><rect x="673" y="148" width="2" height="15" fill="rgb(235,65,20)"/><text x="676.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="164" width="2" height="15" fill="rgb(240,25,1)"/><text x="676.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="673" y="180" width="2" height="15" fill="rgb(208,151,18)"/><text x="676.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="196" width="2" height="15" fill="rgb(228,106,51)"/><text x="676.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="212" width="2" height="15" fill="rgb(207,22,17)"/><text x="676.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="228" width="2" height="15" fill="rgb(241,226,23)"/><text x="676.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="244" width="2" height="15" fill="rgb(234,139,40)"/><text x="676.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="260" width="2" height="15" fill="rgb(240,81,39)"/><text x="676.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="276" width="2" height="15" fill="rgb(247,76,26)"/><text x="676.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.17%)</title><rect x="673" y="292" width="2" height="15" fill="rgb(245,126,33)"/><text x="676.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="308" width="2" height="15" fill="rgb(251,36,19)"/><text x="676.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="324" width="2" height="15" fill="rgb(210,13,14)"/><text x="676.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="340" width="2" height="15" fill="rgb(235,167,7)"/><text x="676.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="356" width="2" height="15" fill="rgb(215,42,23)"/><text x="676.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="372" width="2" height="15" fill="rgb(218,141,29)"/><text x="676.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.17%)</title><rect x="673" y="388" width="2" height="15" fill="rgb(232,3,32)"/><text x="676.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="404" width="2" height="15" fill="rgb(245,211,5)"/><text x="676.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="420" width="2" height="15" fill="rgb(229,218,19)"/><text x="676.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="436" width="2" height="15" fill="rgb(217,19,21)"/><text x="676.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="452" width="2" height="15" fill="rgb(213,175,10)"/><text x="676.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="468" width="2" height="15" fill="rgb(211,69,2)"/><text x="676.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.17%)</title><rect x="673" y="484" width="2" height="15" fill="rgb(211,6,43)"/><text x="676.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="500" width="2" height="15" fill="rgb(240,55,53)"/><text x="676.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="516" width="2" height="15" fill="rgb(223,123,0)"/><text x="676.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="532" width="2" height="15" fill="rgb(210,102,50)"/><text x="676.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="548" width="2" height="15" fill="rgb(225,73,39)"/><text x="676.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="564" width="2" height="15" fill="rgb(248,202,50)"/><text x="676.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.17%)</title><rect x="673" y="580" width="2" height="15" fill="rgb(246,54,45)"/><text x="676.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="596" width="2" height="15" fill="rgb(235,76,14)"/><text x="676.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="612" width="2" height="15" fill="rgb(213,24,26)"/><text x="676.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="628" width="2" height="15" fill="rgb(218,222,3)"/><text x="676.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="644" width="2" height="15" fill="rgb(226,104,2)"/><text x="676.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="660" width="2" height="15" fill="rgb(227,84,31)"/><text x="676.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.17%)</title><rect x="673" y="676" width="2" height="15" fill="rgb(238,102,42)"/><text x="676.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="692" width="2" height="15" fill="rgb(237,208,44)"/><text x="676.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="708" width="2" height="15" fill="rgb(232,53,45)"/><text x="676.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="724" width="2" height="15" fill="rgb(242,211,20)"/><text x="676.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="740" width="2" height="15" fill="rgb(253,134,29)"/><text x="676.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="756" width="2" height="15" fill="rgb(208,139,54)"/><text x="676.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.17%)</title><rect x="673" y="772" width="2" height="15" fill="rgb(225,225,32)"/><text x="676.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="673" y="788" width="2" height="15" fill="rgb(240,224,32)"/><text x="676.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="804" width="2" height="15" fill="rgb(219,87,41)"/><text x="676.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="820" width="2" height="15" fill="rgb(235,113,36)"/><text x="676.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="836" width="2" height="15" fill="rgb(247,75,29)"/><text x="676.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="852" width="2" height="15" fill="rgb(254,79,34)"/><text x="676.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="868" width="2" height="15" fill="rgb(253,201,3)"/><text x="676.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="884" width="2" height="15" fill="rgb(208,143,53)"/><text x="676.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.17%)</title><rect x="673" y="900" width="2" height="15" fill="rgb(210,121,23)"/><text x="676.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="673" y="916" width="2" height="15" fill="rgb(252,61,50)"/><text x="676.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="932" width="2" height="15" fill="rgb(205,84,36)"/><text x="676.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="673" y="948" width="2" height="15" fill="rgb(221,17,9)"/><text x="676.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="673" y="964" width="2" height="15" fill="rgb(251,37,37)"/><text x="676.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="673" y="980" width="2" height="15" fill="rgb(237,49,47)"/><text x="676.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="673" y="996" width="2" height="15" fill="rgb(208,3,21)"/><text x="676.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="673" y="1012" width="2" height="15" fill="rgb(218,227,0)"/><text x="676.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2717) (1 samples, 0.17%)</title><rect x="673" y="1028" width="2" height="15" fill="rgb(207,145,53)"/><text x="676.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.17%)</title><rect x="673" y="1044" width="2" height="15" fill="rgb(214,3,44)"/><text x="676.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.17%)</title><rect x="673" y="1060" width="2" height="15" fill="rgb(207,49,25)"/><text x="676.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.17%)</title><rect x="673" y="1076" width="2" height="15" fill="rgb(236,172,29)"/><text x="676.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.17%)</title><rect x="675" y="484" width="2" height="15" fill="rgb(249,65,36)"/><text x="678.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="500" width="2" height="15" fill="rgb(237,126,38)"/><text x="678.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="516" width="2" height="15" fill="rgb(221,19,21)"/><text x="678.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="532" width="2" height="15" fill="rgb(213,33,46)"/><text x="678.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="548" width="2" height="15" fill="rgb(229,186,53)"/><text x="678.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="564" width="2" height="15" fill="rgb(246,126,50)"/><text x="678.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.17%)</title><rect x="675" y="580" width="2" height="15" fill="rgb(208,99,49)"/><text x="678.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="596" width="2" height="15" fill="rgb(249,57,7)"/><text x="678.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="612" width="2" height="15" fill="rgb(234,40,3)"/><text x="678.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="628" width="2" height="15" fill="rgb(221,101,37)"/><text x="678.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="644" width="2" height="15" fill="rgb(222,101,31)"/><text x="678.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="660" width="2" height="15" fill="rgb(206,77,0)"/><text x="678.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.17%)</title><rect x="675" y="676" width="2" height="15" fill="rgb(243,184,20)"/><text x="678.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="692" width="2" height="15" fill="rgb(207,225,2)"/><text x="678.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="708" width="2" height="15" fill="rgb(253,195,15)"/><text x="678.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="724" width="2" height="15" fill="rgb(214,11,26)"/><text x="678.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="740" width="2" height="15" fill="rgb(239,158,33)"/><text x="678.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="756" width="2" height="15" fill="rgb(254,186,23)"/><text x="678.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.17%)</title><rect x="675" y="772" width="2" height="15" fill="rgb(237,18,35)"/><text x="678.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="788" width="2" height="15" fill="rgb(234,93,1)"/><text x="678.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="804" width="2" height="15" fill="rgb(251,102,25)"/><text x="678.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="820" width="2" height="15" fill="rgb(214,100,33)"/><text x="678.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="836" width="2" height="15" fill="rgb(213,30,19)"/><text x="678.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="852" width="2" height="15" fill="rgb(247,61,53)"/><text x="678.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.17%)</title><rect x="675" y="868" width="2" height="15" fill="rgb(207,132,18)"/><text x="678.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="884" width="2" height="15" fill="rgb(207,214,45)"/><text x="678.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="900" width="2" height="15" fill="rgb(236,206,53)"/><text x="678.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="916" width="2" height="15" fill="rgb(207,27,29)"/><text x="678.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="932" width="2" height="15" fill="rgb(242,191,25)"/><text x="678.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="948" width="2" height="15" fill="rgb(238,25,29)"/><text x="678.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.17%)</title><rect x="675" y="964" width="2" height="15" fill="rgb(242,223,28)"/><text x="678.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="980" width="2" height="15" fill="rgb(212,60,41)"/><text x="678.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="675" y="996" width="2" height="15" fill="rgb(212,174,39)"/><text x="678.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="675" y="1012" width="2" height="15" fill="rgb(250,169,2)"/><text x="678.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="675" y="1028" width="2" height="15" fill="rgb(210,26,36)"/><text x="678.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="675" y="1044" width="2" height="15" fill="rgb(205,225,15)"/><text x="678.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:51) (1 samples, 0.17%)</title><rect x="675" y="1060" width="2" height="15" fill="rgb(236,13,5)"/><text x="678.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="675" y="1076" width="2" height="15" fill="rgb(230,212,49)"/><text x="678.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.17%)</title><rect x="675" y="1092" width="2" height="15" fill="rgb(212,156,28)"/><text x="678.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.17%)</title><rect x="675" y="1108" width="2" height="15" fill="rgb(228,2,23)"/><text x="678.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.17%)</title><rect x="675" y="1124" width="2" height="15" fill="rgb(222,54,27)"/><text x="678.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.17%)</title><rect x="675" y="1140" width="2" height="15" fill="rgb(242,138,9)"/><text x="678.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.17%)</title><rect x="675" y="1156" width="2" height="15" fill="rgb(208,226,39)"/><text x="678.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.17%)</title><rect x="675" y="1172" width="2" height="15" fill="rgb(232,64,47)"/><text x="678.00" y="1182.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.17%)</title><rect x="675" y="1188" width="2" height="15" fill="rgb(230,99,16)"/><text x="678.00" y="1198.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:379) (1 samples, 0.17%)</title><rect x="675" y="1204" width="2" height="15" fill="rgb(243,199,8)"/><text x="678.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.34%)</title><rect x="675" y="244" width="4" height="15" fill="rgb(217,136,26)"/><text x="678.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="675" y="260" width="4" height="15" fill="rgb(243,107,38)"/><text x="678.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="675" y="276" width="4" height="15" fill="rgb(224,190,53)"/><text x="678.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="675" y="292" width="4" height="15" fill="rgb(244,104,26)"/><text x="678.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="675" y="308" width="4" height="15" fill="rgb(218,57,37)"/><text x="678.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="675" y="324" width="4" height="15" fill="rgb(221,16,52)"/><text x="678.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.34%)</title><rect x="675" y="340" width="4" height="15" fill="rgb(225,220,51)"/><text x="678.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="675" y="356" width="4" height="15" fill="rgb(230,122,32)"/><text x="678.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.34%)</title><rect x="675" y="372" width="4" height="15" fill="rgb(244,135,48)"/><text x="678.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="675" y="388" width="4" height="15" fill="rgb(205,229,46)"/><text x="678.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="675" y="404" width="4" height="15" fill="rgb(233,173,20)"/><text x="678.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="675" y="420" width="4" height="15" fill="rgb(213,104,39)"/><text x="678.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="675" y="436" width="4" height="15" fill="rgb(237,4,14)"/><text x="678.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="675" y="452" width="4" height="15" fill="rgb(246,201,22)"/><text x="678.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="675" y="468" width="4" height="15" fill="rgb(243,48,38)"/><text x="678.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.17%)</title><rect x="677" y="484" width="2" height="15" fill="rgb(210,12,34)"/><text x="680.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="677" y="500" width="2" height="15" fill="rgb(227,183,48)"/><text x="680.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="677" y="516" width="2" height="15" fill="rgb(215,179,5)"/><text x="680.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="677" y="532" width="2" height="15" fill="rgb(226,223,46)"/><text x="680.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="677" y="548" width="2" height="15" fill="rgb(233,80,23)"/><text x="680.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="677" y="564" width="2" height="15" fill="rgb(242,8,33)"/><text x="680.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.17%)</title><rect x="677" y="580" width="2" height="15" fill="rgb(223,208,23)"/><text x="680.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="677" y="596" width="2" height="15" fill="rgb(215,33,15)"/><text x="680.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="677" y="612" width="2" height="15" fill="rgb(248,46,34)"/><text x="680.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="677" y="628" width="2" height="15" fill="rgb(246,80,3)"/><text x="680.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="677" y="644" width="2" height="15" fill="rgb(250,56,8)"/><text x="680.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="677" y="660" width="2" height="15" fill="rgb(242,72,31)"/><text x="680.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.17%)</title><rect x="677" y="676" width="2" height="15" fill="rgb(242,167,20)"/><text x="680.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="677" y="692" width="2" height="15" fill="rgb(231,129,41)"/><text x="680.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="677" y="708" width="2" height="15" fill="rgb(236,101,12)"/><text x="680.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="677" y="724" width="2" height="15" fill="rgb(214,103,11)"/><text x="680.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="677" y="740" width="2" height="15" fill="rgb(254,79,35)"/><text x="680.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="677" y="756" width="2" height="15" fill="rgb(246,221,14)"/><text x="680.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.17%)</title><rect x="677" y="772" width="2" height="15" fill="rgb(228,138,25)"/><text x="680.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="677" y="788" width="2" height="15" fill="rgb(249,3,2)"/><text x="680.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="677" y="804" width="2" height="15" fill="rgb(218,128,35)"/><text x="680.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.17%)</title><rect x="677" y="820" width="2" height="15" fill="rgb(245,78,50)"/><text x="680.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.17%)</title><rect x="677" y="836" width="2" height="15" fill="rgb(220,208,0)"/><text x="680.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="677" y="852" width="2" height="15" fill="rgb(230,156,15)"/><text x="680.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="677" y="868" width="2" height="15" fill="rgb(219,76,49)"/><text x="680.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="677" y="884" width="2" height="15" fill="rgb(220,44,6)"/><text x="680.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:646) (1 samples, 0.17%)</title><rect x="677" y="900" width="2" height="15" fill="rgb(206,81,2)"/><text x="680.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py:166) (1 samples, 0.17%)</title><rect x="677" y="916" width="2" height="15" fill="rgb(210,29,44)"/><text x="680.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py:112) (1 samples, 0.17%)</title><rect x="677" y="932" width="2" height="15" fill="rgb(252,31,49)"/><text x="680.00" y="942.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.17%)</title><rect x="679" y="1460" width="2" height="15" fill="rgb(222,47,33)"/><text x="682.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.17%)</title><rect x="679" y="1476" width="2" height="15" fill="rgb(237,82,1)"/><text x="682.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.17%)</title><rect x="679" y="1492" width="2" height="15" fill="rgb(222,73,46)"/><text x="682.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:14) (1 samples, 0.17%)</title><rect x="679" y="1508" width="2" height="15" fill="rgb(208,155,52)"/><text x="682.00" y="1518.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.17%)</title><rect x="679" y="1524" width="2" height="15" fill="rgb(214,182,22)"/><text x="682.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.34%)</title><rect x="679" y="1236" width="4" height="15" fill="rgb(242,43,21)"/><text x="682.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.34%)</title><rect x="679" y="1252" width="4" height="15" fill="rgb(240,189,50)"/><text x="682.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="679" y="1268" width="4" height="15" fill="rgb(237,197,29)"/><text x="682.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="679" y="1284" width="4" height="15" fill="rgb(244,60,24)"/><text x="682.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="679" y="1300" width="4" height="15" fill="rgb(216,206,35)"/><text x="682.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="679" y="1316" width="4" height="15" fill="rgb(247,218,36)"/><text x="682.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="679" y="1332" width="4" height="15" fill="rgb(238,13,13)"/><text x="682.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="679" y="1348" width="4" height="15" fill="rgb(225,48,35)"/><text x="682.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.34%)</title><rect x="679" y="1364" width="4" height="15" fill="rgb(228,217,29)"/><text x="682.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.34%)</title><rect x="679" y="1380" width="4" height="15" fill="rgb(226,70,8)"/><text x="682.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.34%)</title><rect x="679" y="1396" width="4" height="15" fill="rgb(239,45,11)"/><text x="682.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.34%)</title><rect x="679" y="1412" width="4" height="15" fill="rgb(217,6,51)"/><text x="682.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.34%)</title><rect x="679" y="1428" width="4" height="15" fill="rgb(244,12,23)"/><text x="682.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.34%)</title><rect x="679" y="1444" width="4" height="15" fill="rgb(227,64,46)"/><text x="682.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.17%)</title><rect x="681" y="1460" width="2" height="15" fill="rgb(229,24,51)"/><text x="684.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="681" y="1476" width="2" height="15" fill="rgb(242,168,6)"/><text x="684.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="681" y="1492" width="2" height="15" fill="rgb(245,79,33)"/><text x="684.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="681" y="1508" width="2" height="15" fill="rgb(234,20,34)"/><text x="684.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="681" y="1524" width="2" height="15" fill="rgb(225,168,3)"/><text x="684.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1540" width="2" height="15" fill="rgb(248,194,36)"/><text x="684.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.17%)</title><rect x="681" y="1556" width="2" height="15" fill="rgb(212,204,26)"/><text x="684.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.17%)</title><rect x="681" y="1572" width="2" height="15" fill="rgb(215,168,3)"/><text x="684.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="681" y="1588" width="2" height="15" fill="rgb(223,43,29)"/><text x="684.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="681" y="1604" width="2" height="15" fill="rgb(223,126,42)"/><text x="684.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="681" y="1620" width="2" height="15" fill="rgb(246,221,47)"/><text x="684.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="681" y="1636" width="2" height="15" fill="rgb(208,104,30)"/><text x="684.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1652" width="2" height="15" fill="rgb(219,62,16)"/><text x="684.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.17%)</title><rect x="681" y="1668" width="2" height="15" fill="rgb(249,190,2)"/><text x="684.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="681" y="1684" width="2" height="15" fill="rgb(231,71,40)"/><text x="684.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="681" y="1700" width="2" height="15" fill="rgb(214,9,51)"/><text x="684.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="681" y="1716" width="2" height="15" fill="rgb(247,207,3)"/><text x="684.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="681" y="1732" width="2" height="15" fill="rgb(227,204,31)"/><text x="684.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1748" width="2" height="15" fill="rgb(253,169,12)"/><text x="684.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:15) (1 samples, 0.17%)</title><rect x="681" y="1764" width="2" height="15" fill="rgb(251,52,43)"/><text x="684.00" y="1774.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="681" y="1780" width="2" height="15" fill="rgb(209,1,41)"/><text x="684.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1796" width="2" height="15" fill="rgb(210,30,17)"/><text x="684.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="681" y="1812" width="2" height="15" fill="rgb(240,3,27)"/><text x="684.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="681" y="1828" width="2" height="15" fill="rgb(252,82,28)"/><text x="684.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="681" y="1844" width="2" height="15" fill="rgb(244,116,17)"/><text x="684.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="681" y="1860" width="2" height="15" fill="rgb(236,113,47)"/><text x="684.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1876" width="2" height="15" fill="rgb(248,29,50)"/><text x="684.00" y="1886.50"></text></g><g><title>&lt;module&gt; (jinja2/nodes.py:19) (1 samples, 0.17%)</title><rect x="681" y="1892" width="2" height="15" fill="rgb(217,46,11)"/><text x="684.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="681" y="1908" width="2" height="15" fill="rgb(245,84,2)"/><text x="684.00" y="1918.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="681" y="1924" width="2" height="15" fill="rgb(245,101,12)"/><text x="684.00" y="1934.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="681" y="1940" width="2" height="15" fill="rgb(228,60,46)"/><text x="684.00" y="1950.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="681" y="1956" width="2" height="15" fill="rgb(208,208,15)"/><text x="684.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="681" y="1972" width="2" height="15" fill="rgb(227,80,50)"/><text x="684.00" y="1982.50"></text></g><g><title>&lt;module&gt; (jinja2/utils.py:27) (1 samples, 0.17%)</title><rect x="681" y="1988" width="2" height="15" fill="rgb(206,17,24)"/><text x="684.00" y="1998.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="681" y="2004" width="2" height="15" fill="rgb(238,195,37)"/><text x="684.00" y="2014.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="681" y="2020" width="2" height="15" fill="rgb(250,64,4)"/><text x="684.00" y="2030.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.17%)</title><rect x="681" y="2036" width="2" height="15" fill="rgb(231,94,39)"/><text x="684.00" y="2046.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.17%)</title><rect x="681" y="2052" width="2" height="15" fill="rgb(216,3,17)"/><text x="684.00" y="2062.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="681" y="2068" width="2" height="15" fill="rgb(213,20,21)"/><text x="684.00" y="2078.50"></text></g><g><title>_parse (sre_parse.py:508) (1 samples, 0.17%)</title><rect x="681" y="2084" width="2" height="15" fill="rgb(218,125,11)"/><text x="684.00" y="2094.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:4) (9 samples, 1.52%)</title><rect x="667" y="52" width="18" height="15" fill="rgb(218,89,23)"/><text x="670.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.52%)</title><rect x="667" y="68" width="18" height="15" fill="rgb(245,166,23)"/><text x="670.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.52%)</title><rect x="667" y="84" width="18" height="15" fill="rgb(238,8,45)"/><text x="670.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.52%)</title><rect x="667" y="100" width="18" height="15" fill="rgb(251,60,53)"/><text x="670.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.52%)</title><rect x="667" y="116" width="18" height="15" fill="rgb(221,115,40)"/><text x="670.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.52%)</title><rect x="667" y="132" width="18" height="15" fill="rgb(214,194,43)"/><text x="670.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (5 samples, 0.84%)</title><rect x="675" y="148" width="10" height="15" fill="rgb(229,88,34)"/><text x="678.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.84%)</title><rect x="675" y="164" width="10" height="15" fill="rgb(228,64,33)"/><text x="678.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.84%)</title><rect x="675" y="180" width="10" height="15" fill="rgb(239,92,41)"/><text x="678.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.84%)</title><rect x="675" y="196" width="10" height="15" fill="rgb(239,127,12)"/><text x="678.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.84%)</title><rect x="675" y="212" width="10" height="15" fill="rgb(245,116,11)"/><text x="678.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.84%)</title><rect x="675" y="228" width="10" height="15" fill="rgb(250,189,28)"/><text x="678.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 0.51%)</title><rect x="679" y="244" width="6" height="15" fill="rgb(226,60,31)"/><text x="682.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="260" width="6" height="15" fill="rgb(219,114,45)"/><text x="682.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="276" width="6" height="15" fill="rgb(246,215,7)"/><text x="682.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="292" width="6" height="15" fill="rgb(249,94,23)"/><text x="682.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="308" width="6" height="15" fill="rgb(251,210,40)"/><text x="682.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="324" width="6" height="15" fill="rgb(241,49,43)"/><text x="682.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.51%)</title><rect x="679" y="340" width="6" height="15" fill="rgb(227,10,4)"/><text x="682.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="356" width="6" height="15" fill="rgb(216,146,17)"/><text x="682.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="372" width="6" height="15" fill="rgb(216,130,7)"/><text x="682.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="388" width="6" height="15" fill="rgb(248,10,36)"/><text x="682.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="404" width="6" height="15" fill="rgb(229,173,33)"/><text x="682.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="420" width="6" height="15" fill="rgb(223,29,40)"/><text x="682.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.51%)</title><rect x="679" y="436" width="6" height="15" fill="rgb(237,201,32)"/><text x="682.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="452" width="6" height="15" fill="rgb(226,94,45)"/><text x="682.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.51%)</title><rect x="679" y="468" width="6" height="15" fill="rgb(225,154,35)"/><text x="682.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="484" width="6" height="15" fill="rgb(238,157,17)"/><text x="682.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="500" width="6" height="15" fill="rgb(253,90,52)"/><text x="682.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="516" width="6" height="15" fill="rgb(247,15,21)"/><text x="682.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="532" width="6" height="15" fill="rgb(221,9,50)"/><text x="682.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="548" width="6" height="15" fill="rgb(227,198,36)"/><text x="682.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="564" width="6" height="15" fill="rgb(250,63,42)"/><text x="682.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.51%)</title><rect x="679" y="580" width="6" height="15" fill="rgb(253,65,28)"/><text x="682.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="596" width="6" height="15" fill="rgb(244,220,11)"/><text x="682.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="612" width="6" height="15" fill="rgb(247,4,50)"/><text x="682.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="628" width="6" height="15" fill="rgb(208,96,23)"/><text x="682.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="644" width="6" height="15" fill="rgb(242,92,3)"/><text x="682.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="660" width="6" height="15" fill="rgb(227,123,44)"/><text x="682.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.51%)</title><rect x="679" y="676" width="6" height="15" fill="rgb(209,227,52)"/><text x="682.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="692" width="6" height="15" fill="rgb(207,208,35)"/><text x="682.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="708" width="6" height="15" fill="rgb(206,121,51)"/><text x="682.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="724" width="6" height="15" fill="rgb(239,187,37)"/><text x="682.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="740" width="6" height="15" fill="rgb(216,52,12)"/><text x="682.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="756" width="6" height="15" fill="rgb(213,4,10)"/><text x="682.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.51%)</title><rect x="679" y="772" width="6" height="15" fill="rgb(248,90,50)"/><text x="682.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="788" width="6" height="15" fill="rgb(227,10,14)"/><text x="682.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="804" width="6" height="15" fill="rgb(220,169,8)"/><text x="682.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="820" width="6" height="15" fill="rgb(245,35,18)"/><text x="682.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="836" width="6" height="15" fill="rgb(213,176,48)"/><text x="682.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="852" width="6" height="15" fill="rgb(234,218,49)"/><text x="682.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.51%)</title><rect x="679" y="868" width="6" height="15" fill="rgb(235,60,49)"/><text x="682.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="884" width="6" height="15" fill="rgb(223,119,44)"/><text x="682.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.51%)</title><rect x="679" y="900" width="6" height="15" fill="rgb(246,146,6)"/><text x="682.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="916" width="6" height="15" fill="rgb(219,179,47)"/><text x="682.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="932" width="6" height="15" fill="rgb(225,110,6)"/><text x="682.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="948" width="6" height="15" fill="rgb(239,205,52)"/><text x="682.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="964" width="6" height="15" fill="rgb(216,152,42)"/><text x="682.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="980" width="6" height="15" fill="rgb(210,77,43)"/><text x="682.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="996" width="6" height="15" fill="rgb(238,41,19)"/><text x="682.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.51%)</title><rect x="679" y="1012" width="6" height="15" fill="rgb(253,186,22)"/><text x="682.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="1028" width="6" height="15" fill="rgb(225,147,21)"/><text x="682.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="1044" width="6" height="15" fill="rgb(233,71,7)"/><text x="682.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="1060" width="6" height="15" fill="rgb(225,129,45)"/><text x="682.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="1076" width="6" height="15" fill="rgb(248,173,44)"/><text x="682.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="1092" width="6" height="15" fill="rgb(219,76,45)"/><text x="682.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.51%)</title><rect x="679" y="1108" width="6" height="15" fill="rgb(209,229,2)"/><text x="682.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.51%)</title><rect x="679" y="1124" width="6" height="15" fill="rgb(213,72,26)"/><text x="682.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="1140" width="6" height="15" fill="rgb(241,125,30)"/><text x="682.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.51%)</title><rect x="679" y="1156" width="6" height="15" fill="rgb(231,227,38)"/><text x="682.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.51%)</title><rect x="679" y="1172" width="6" height="15" fill="rgb(206,107,29)"/><text x="682.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.51%)</title><rect x="679" y="1188" width="6" height="15" fill="rgb(234,4,39)"/><text x="682.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.51%)</title><rect x="679" y="1204" width="6" height="15" fill="rgb(237,167,49)"/><text x="682.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.51%)</title><rect x="679" y="1220" width="6" height="15" fill="rgb(242,189,39)"/><text x="682.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:9) (1 samples, 0.17%)</title><rect x="683" y="1236" width="2" height="15" fill="rgb(217,193,53)"/><text x="686.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="683" y="1252" width="2" height="15" fill="rgb(222,125,37)"/><text x="686.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="683" y="1268" width="2" height="15" fill="rgb(223,10,17)"/><text x="686.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="683" y="1284" width="2" height="15" fill="rgb(219,23,48)"/><text x="686.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.17%)</title><rect x="683" y="1300" width="2" height="15" fill="rgb(245,43,3)"/><text x="686.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.17%)</title><rect x="683" y="1316" width="2" height="15" fill="rgb(226,219,2)"/><text x="686.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.17%)</title><rect x="683" y="1332" width="2" height="15" fill="rgb(234,225,26)"/><text x="686.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.17%)</title><rect x="683" y="1348" width="2" height="15" fill="rgb(232,189,28)"/><text x="686.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.17%)</title><rect x="683" y="1364" width="2" height="15" fill="rgb(216,188,43)"/><text x="686.00" y="1374.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.17%)</title><rect x="683" y="1380" width="2" height="15" fill="rgb(245,207,50)"/><text x="686.00" y="1390.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:28) (1 samples, 0.17%)</title><rect x="685" y="84" width="2" height="15" fill="rgb(228,214,43)"/><text x="688.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.17%)</title><rect x="685" y="100" width="2" height="15" fill="rgb(206,135,19)"/><text x="688.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.17%)</title><rect x="685" y="116" width="2" height="15" fill="rgb(250,222,6)"/><text x="688.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.17%)</title><rect x="685" y="132" width="2" height="15" fill="rgb(233,228,19)"/><text x="688.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.17%)</title><rect x="685" y="148" width="2" height="15" fill="rgb(249,199,15)"/><text x="688.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.17%)</title><rect x="685" y="164" width="2" height="15" fill="rgb(230,196,22)"/><text x="688.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.17%)</title><rect x="685" y="180" width="2" height="15" fill="rgb(211,114,48)"/><text x="688.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.17%)</title><rect x="685" y="196" width="2" height="15" fill="rgb(225,120,40)"/><text x="688.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="685" y="212" width="2" height="15" fill="rgb(238,84,54)"/><text x="688.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="685" y="228" width="2" height="15" fill="rgb(228,22,20)"/><text x="688.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="685" y="244" width="2" height="15" fill="rgb(230,147,25)"/><text x="688.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="685" y="260" width="2" height="15" fill="rgb(221,144,13)"/><text x="688.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="685" y="276" width="2" height="15" fill="rgb(250,156,19)"/><text x="688.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.17%)</title><rect x="685" y="292" width="2" height="15" fill="rgb(214,40,45)"/><text x="688.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="685" y="308" width="2" height="15" fill="rgb(226,223,12)"/><text x="688.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="685" y="324" width="2" height="15" fill="rgb(253,17,41)"/><text x="688.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="685" y="340" width="2" height="15" fill="rgb(230,1,14)"/><text x="688.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="685" y="356" width="2" height="15" fill="rgb(240,194,16)"/><text x="688.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="685" y="372" width="2" height="15" fill="rgb(240,109,16)"/><text x="688.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.17%)</title><rect x="685" y="388" width="2" height="15" fill="rgb(240,75,53)"/><text x="688.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="685" y="404" width="2" height="15" fill="rgb(235,34,36)"/><text x="688.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="685" y="420" width="2" height="15" fill="rgb(247,76,53)"/><text x="688.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="685" y="436" width="2" height="15" fill="rgb(230,58,20)"/><text x="688.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="685" y="452" width="2" height="15" fill="rgb(245,217,51)"/><text x="688.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="685" y="468" width="2" height="15" fill="rgb(236,69,14)"/><text x="688.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.17%)</title><rect x="685" y="484" width="2" height="15" fill="rgb(238,173,44)"/><text x="688.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.17%)</title><rect x="685" y="500" width="2" height="15" fill="rgb(237,97,45)"/><text x="688.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.17%)</title><rect x="685" y="516" width="2" height="15" fill="rgb(216,73,49)"/><text x="688.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.17%)</title><rect x="685" y="532" width="2" height="15" fill="rgb(205,141,28)"/><text x="688.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.17%)</title><rect x="685" y="548" width="2" height="15" fill="rgb(240,13,35)"/><text x="688.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.17%)</title><rect x="685" y="564" width="2" height="15" fill="rgb(252,169,12)"/><text x="688.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.17%)</title><rect x="685" y="580" width="2" height="15" fill="rgb(241,34,0)"/><text x="688.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.17%)</title><rect x="685" y="596" width="2" height="15" fill="rgb(229,179,17)"/><text x="688.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.17%)</title><rect x="685" y="612" width="2" height="15" fill="rgb(238,78,36)"/><text x="688.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.17%)</title><rect x="685" y="628" width="2" height="15" fill="rgb(223,75,53)"/><text x="688.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.17%)</title><rect x="685" y="644" width="2" height="15" fill="rgb(217,220,8)"/><text x="688.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1091) (1 samples, 0.17%)</title><rect x="685" y="660" width="2" height="15" fill="rgb(234,193,30)"/><text x="688.00" y="670.50"></text></g><g><title>writeline (jinja2/compiler.py:400) (1 samples, 0.17%)</title><rect x="685" y="676" width="2" height="15" fill="rgb(234,43,33)"/><text x="688.00" y="686.50"></text></g><g><title>write (jinja2/compiler.py:393) (1 samples, 0.17%)</title><rect x="685" y="692" width="2" height="15" fill="rgb(234,15,46)"/><text x="688.00" y="702.50"></text></g><g><title>0x7f24bd566422 (?) (1 samples, 0.17%)</title><rect x="687" y="244" width="2" height="15" fill="rgb(237,69,20)"/><text x="690.00" y="254.50"></text></g><g><title>0x7f24bd56c89e (?) (1 samples, 0.17%)</title><rect x="687" y="260" width="2" height="15" fill="rgb(244,173,46)"/><text x="690.00" y="270.50"></text></g><g><title>0x7f24bd56c74f (?) (1 samples, 0.17%)</title><rect x="687" y="276" width="2" height="15" fill="rgb(216,56,37)"/><text x="690.00" y="286.50"></text></g><g><title>0x7f24bd572a3a (?) (1 samples, 0.17%)</title><rect x="687" y="292" width="2" height="15" fill="rgb(229,160,0)"/><text x="690.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="687" y="308" width="2" height="15" fill="rgb(252,17,53)"/><text x="690.00" y="318.50"></text></g><g><title>0x7f24bd56d78c (?) (1 samples, 0.17%)</title><rect x="687" y="324" width="2" height="15" fill="rgb(211,4,39)"/><text x="690.00" y="334.50"></text></g><g><title>0x7f24bd5593f8 (?) (1 samples, 0.17%)</title><rect x="687" y="340" width="2" height="15" fill="rgb(206,5,17)"/><text x="690.00" y="350.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:513) (1 samples, 0.17%)</title><rect x="689" y="484" width="2" height="15" fill="rgb(245,41,38)"/><text x="692.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:523) (2 samples, 0.34%)</title><rect x="691" y="484" width="4" height="15" fill="rgb(250,225,8)"/><text x="694.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (2 samples, 0.34%)</title><rect x="695" y="532" width="4" height="15" fill="rgb(248,168,34)"/><text x="698.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (12 samples, 2.02%)</title><rect x="695" y="484" width="24" height="15" fill="rgb(245,177,30)"/><text x="698.00" y="494.50">R..</text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (12 samples, 2.02%)</title><rect x="695" y="500" width="24" height="15" fill="rgb(241,39,15)"/><text x="698.00" y="510.50">s..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (12 samples, 2.02%)</title><rect x="695" y="516" width="24" height="15" fill="rgb(241,25,13)"/><text x="698.00" y="526.50">s..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (10 samples, 1.68%)</title><rect x="699" y="532" width="20" height="15" fill="rgb(210,9,17)"/><text x="702.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:617) (1 samples, 0.17%)</title><rect x="719" y="484" width="2" height="15" fill="rgb(253,146,54)"/><text x="722.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (18 samples, 3.03%)</title><rect x="687" y="180" width="36" height="15" fill="rgb(211,198,52)"/><text x="690.00" y="190.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (18 samples, 3.03%)</title><rect x="687" y="196" width="36" height="15" fill="rgb(225,197,40)"/><text x="690.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 3.03%)</title><rect x="687" y="212" width="36" height="15" fill="rgb(238,3,9)"/><text x="690.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (18 samples, 3.03%)</title><rect x="687" y="228" width="36" height="15" fill="rgb(229,148,31)"/><text x="690.00" y="238.50">_ru..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (17 samples, 2.86%)</title><rect x="689" y="244" width="34" height="15" fill="rgb(248,79,43)"/><text x="692.00" y="254.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (17 samples, 2.86%)</title><rect x="689" y="260" width="34" height="15" fill="rgb(217,56,17)"/><text x="692.00" y="270.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 2.86%)</title><rect x="689" y="276" width="34" height="15" fill="rgb(243,174,31)"/><text x="692.00" y="286.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 2.86%)</title><rect x="689" y="292" width="34" height="15" fill="rgb(238,46,53)"/><text x="692.00" y="302.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 2.86%)</title><rect x="689" y="308" width="34" height="15" fill="rgb(250,52,19)"/><text x="692.00" y="318.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 2.86%)</title><rect x="689" y="324" width="34" height="15" fill="rgb(240,14,28)"/><text x="692.00" y="334.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 2.86%)</title><rect x="689" y="340" width="34" height="15" fill="rgb(251,81,50)"/><text x="692.00" y="350.50">py..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 2.86%)</title><rect x="689" y="356" width="34" height="15" fill="rgb(251,91,26)"/><text x="692.00" y="366.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 2.86%)</title><rect x="689" y="372" width="34" height="15" fill="rgb(234,164,24)"/><text x="692.00" y="382.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 2.86%)</title><rect x="689" y="388" width="34" height="15" fill="rgb(250,215,6)"/><text x="692.00" y="398.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 2.86%)</title><rect x="689" y="404" width="34" height="15" fill="rgb(238,7,45)"/><text x="692.00" y="414.50">py..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (17 samples, 2.86%)</title><rect x="689" y="420" width="34" height="15" fill="rgb(205,173,35)"/><text x="692.00" y="430.50">Ru..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (17 samples, 2.86%)</title><rect x="689" y="436" width="34" height="15" fill="rgb(216,185,49)"/><text x="692.00" y="446.50">py..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (17 samples, 2.86%)</title><rect x="689" y="452" width="34" height="15" fill="rgb(234,92,29)"/><text x="692.00" y="462.50">GO..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (17 samples, 2.86%)</title><rect x="689" y="468" width="34" height="15" fill="rgb(238,64,24)"/><text x="692.00" y="478.50">Ru..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:644) (1 samples, 0.17%)</title><rect x="721" y="484" width="2" height="15" fill="rgb(205,55,15)"/><text x="724.00" y="494.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:18) (19 samples, 3.20%)</title><rect x="687" y="100" width="38" height="15" fill="rgb(228,224,38)"/><text x="690.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (19 samples, 3.20%)</title><rect x="687" y="116" width="38" height="15" fill="rgb(218,13,29)"/><text x="690.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (19 samples, 3.20%)</title><rect x="687" y="132" width="38" height="15" fill="rgb(234,207,53)"/><text x="690.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (19 samples, 3.20%)</title><rect x="687" y="148" width="38" height="15" fill="rgb(211,168,54)"/><text x="690.00" y="158.50">run..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (19 samples, 3.20%)</title><rect x="687" y="164" width="38" height="15" fill="rgb(229,68,48)"/><text x="690.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.17%)</title><rect x="723" y="180" width="2" height="15" fill="rgb(247,121,41)"/><text x="726.00" y="190.50"></text></g><g><title>0x7f24c688eab9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="725" y="452" width="2" height="15" fill="rgb(213,93,25)"/><text x="728.00" y="462.50"></text></g><g><title>0x7f24c688fea9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="725" y="468" width="2" height="15" fill="rgb(210,21,12)"/><text x="728.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:523) (1 samples, 0.17%)</title><rect x="727" y="484" width="2" height="15" fill="rgb(253,42,16)"/><text x="730.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.17%)</title><rect x="739" y="500" width="2" height="15" fill="rgb(223,165,22)"/><text x="742.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:525) (8 samples, 1.35%)</title><rect x="729" y="484" width="16" height="15" fill="rgb(235,38,34)"/><text x="732.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (2 samples, 0.34%)</title><rect x="741" y="500" width="4" height="15" fill="rgb(230,14,39)"/><text x="744.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:604) (3 samples, 0.51%)</title><rect x="745" y="484" width="5" height="15" fill="rgb(226,141,20)"/><text x="748.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1669) (1 samples, 0.17%)</title><rect x="750" y="532" width="2" height="15" fill="rgb(235,10,42)"/><text x="753.00" y="542.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1670) (4 samples, 0.67%)</title><rect x="752" y="532" width="8" height="15" fill="rgb(229,71,29)"/><text x="755.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:605) (6 samples, 1.01%)</title><rect x="750" y="484" width="12" height="15" fill="rgb(235,52,53)"/><text x="753.00" y="494.50"></text></g><g><title>std::map&lt;long, long, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_map.h:1105) (6 samples, 1.01%)</title><rect x="750" y="500" width="12" height="15" fill="rgb(246,44,24)"/><text x="753.00" y="510.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::find (stl_tree.h:2334) (6 samples, 1.01%)</title><rect x="750" y="516" width="12" height="15" fill="rgb(206,23,31)"/><text x="753.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, long&gt;, std::_Select1st&lt;std::pair&lt;long const, long&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, long&gt; &gt; &gt;::_M_lower_bound (stl_tree.h:1671) (1 samples, 0.17%)</title><rect x="760" y="532" width="2" height="15" fill="rgb(208,122,13)"/><text x="763.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:606) (1 samples, 0.17%)</title><rect x="762" y="484" width="2" height="15" fill="rgb(246,6,13)"/><text x="765.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:609) (1 samples, 0.17%)</title><rect x="764" y="484" width="2" height="15" fill="rgb(250,218,48)"/><text x="767.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:615) (7 samples, 1.18%)</title><rect x="766" y="484" width="14" height="15" fill="rgb(233,102,39)"/><text x="769.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:856) (1 samples, 0.17%)</title><rect x="780" y="500" width="2" height="15" fill="rgb(223,173,20)"/><text x="783.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:45) (50 samples, 8.42%)</title><rect x="685" y="52" width="99" height="15" fill="rgb(248,89,40)"/><text x="688.00" y="62.50">&lt;module&gt; (b..</text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:44) (50 samples, 8.42%)</title><rect x="685" y="68" width="99" height="15" fill="rgb(242,14,13)"/><text x="688.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:29) (49 samples, 8.25%)</title><rect x="687" y="84" width="97" height="15" fill="rgb(208,74,54)"/><text x="690.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:23) (30 samples, 5.05%)</title><rect x="725" y="100" width="59" height="15" fill="rgb(239,112,38)"/><text x="728.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (30 samples, 5.05%)</title><rect x="725" y="116" width="59" height="15" fill="rgb(215,214,28)"/><text x="728.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (30 samples, 5.05%)</title><rect x="725" y="132" width="59" height="15" fill="rgb(212,163,3)"/><text x="728.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (30 samples, 5.05%)</title><rect x="725" y="148" width="59" height="15" fill="rgb(233,180,20)"/><text x="728.00" y="158.50">run (m..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (30 samples, 5.05%)</title><rect x="725" y="164" width="59" height="15" fill="rgb(246,205,16)"/><text x="728.00" y="174.50">_run_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (30 samples, 5.05%)</title><rect x="725" y="180" width="59" height="15" fill="rgb(206,6,14)"/><text x="728.00" y="190.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (30 samples, 5.05%)</title><rect x="725" y="196" width="59" height="15" fill="rgb(233,147,11)"/><text x="728.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (30 samples, 5.05%)</title><rect x="725" y="212" width="59" height="15" fill="rgb(221,5,47)"/><text x="728.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (30 samples, 5.05%)</title><rect x="725" y="228" width="59" height="15" fill="rgb(206,113,29)"/><text x="728.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (30 samples, 5.05%)</title><rect x="725" y="244" width="59" height="15" fill="rgb(222,4,43)"/><text x="728.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (30 samples, 5.05%)</title><rect x="725" y="260" width="59" height="15" fill="rgb(251,59,41)"/><text x="728.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (30 samples, 5.05%)</title><rect x="725" y="276" width="59" height="15" fill="rgb(244,9,54)"/><text x="728.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (30 samples, 5.05%)</title><rect x="725" y="292" width="59" height="15" fill="rgb(231,87,19)"/><text x="728.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (30 samples, 5.05%)</title><rect x="725" y="308" width="59" height="15" fill="rgb(237,47,8)"/><text x="728.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (30 samples, 5.05%)</title><rect x="725" y="324" width="59" height="15" fill="rgb(246,126,19)"/><text x="728.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (30 samples, 5.05%)</title><rect x="725" y="340" width="59" height="15" fill="rgb(254,201,27)"/><text x="728.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (30 samples, 5.05%)</title><rect x="725" y="356" width="59" height="15" fill="rgb(216,204,33)"/><text x="728.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (30 samples, 5.05%)</title><rect x="725" y="372" width="59" height="15" fill="rgb(246,71,17)"/><text x="728.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (30 samples, 5.05%)</title><rect x="725" y="388" width="59" height="15" fill="rgb(205,85,15)"/><text x="728.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (30 samples, 5.05%)</title><rect x="725" y="404" width="59" height="15" fill="rgb(232,122,44)"/><text x="728.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (30 samples, 5.05%)</title><rect x="725" y="420" width="59" height="15" fill="rgb(249,195,50)"/><text x="728.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (30 samples, 5.05%)</title><rect x="725" y="436" width="59" height="15" fill="rgb(226,53,22)"/><text x="728.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (29 samples, 4.88%)</title><rect x="727" y="452" width="57" height="15" fill="rgb(238,124,35)"/><text x="730.00" y="462.50">GOMP_p..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:427) (29 samples, 4.88%)</title><rect x="727" y="468" width="57" height="15" fill="rgb(223,8,9)"/><text x="730.00" y="478.50">Runtim..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:618) (2 samples, 0.34%)</title><rect x="780" y="484" width="4" height="15" fill="rgb(251,180,21)"/><text x="783.00" y="494.50"></text></g><g><title>std::vector&lt;bool, std::allocator&lt;bool&gt; &gt;::operator[] (stl_bvector.h:857) (1 samples, 0.17%)</title><rect x="782" y="500" width="2" height="15" fill="rgb(210,100,36)"/><text x="785.00" y="510.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.17%)</title><rect x="784" y="116" width="2" height="15" fill="rgb(233,0,25)"/><text x="787.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.17%)</title><rect x="784" y="132" width="2" height="15" fill="rgb(218,107,29)"/><text x="787.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.17%)</title><rect x="784" y="148" width="2" height="15" fill="rgb(244,109,49)"/><text x="787.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.17%)</title><rect x="784" y="164" width="2" height="15" fill="rgb(217,207,40)"/><text x="787.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:1017) (1 samples, 0.17%)</title><rect x="784" y="180" width="2" height="15" fill="rgb(228,101,42)"/><text x="787.00" y="190.50"></text></g><g><title>make_model (onnx/helper.py:113) (1 samples, 0.17%)</title><rect x="784" y="196" width="2" height="15" fill="rgb(239,86,18)"/><text x="787.00" y="206.50"></text></g><g><title>0x7f24eac1d4be (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="212" width="2" height="15" fill="rgb(212,132,42)"/><text x="787.00" y="222.50"></text></g><g><title>google::protobuf::Message::CopyFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="228" width="2" height="15" fill="rgb(211,106,1)"/><text x="787.00" y="238.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="244" width="2" height="15" fill="rgb(235,12,7)"/><text x="787.00" y="254.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="260" width="2" height="15" fill="rgb(205,32,50)"/><text x="787.00" y="270.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="276" width="2" height="15" fill="rgb(253,4,21)"/><text x="787.00" y="286.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="292" width="2" height="15" fill="rgb(208,102,2)"/><text x="787.00" y="302.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="308" width="2" height="15" fill="rgb(249,197,35)"/><text x="787.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::AddInt64 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="324" width="2" height="15" fill="rgb(226,192,17)"/><text x="787.00" y="334.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="340" width="2" height="15" fill="rgb(250,126,52)"/><text x="787.00" y="350.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="784" y="356" width="2" height="15" fill="rgb(234,192,8)"/><text x="787.00" y="366.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:90) (1 samples, 0.17%)</title><rect x="786" y="164" width="2" height="15" fill="rgb(253,229,48)"/><text x="789.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py:264) (1 samples, 0.17%)</title><rect x="786" y="180" width="2" height="15" fill="rgb(211,195,20)"/><text x="789.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:186) (1 samples, 0.17%)</title><rect x="786" y="196" width="2" height="15" fill="rgb(234,4,15)"/><text x="789.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py:162) (1 samples, 0.17%)</title><rect x="786" y="212" width="2" height="15" fill="rgb(250,108,37)"/><text x="789.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py:24) (1 samples, 0.17%)</title><rect x="786" y="228" width="2" height="15" fill="rgb(232,105,53)"/><text x="789.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.17%)</title><rect x="786" y="244" width="2" height="15" fill="rgb(234,126,11)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.17%)</title><rect x="786" y="260" width="2" height="15" fill="rgb(233,156,41)"/><text x="789.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.17%)</title><rect x="786" y="276" width="2" height="15" fill="rgb(227,138,44)"/><text x="789.00" y="286.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.17%)</title><rect x="786" y="292" width="2" height="15" fill="rgb(242,45,17)"/><text x="789.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (1 samples, 0.17%)</title><rect x="786" y="308" width="2" height="15" fill="rgb(225,2,28)"/><text x="789.00" y="318.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:28) (3 samples, 0.51%)</title><rect x="784" y="84" width="6" height="15" fill="rgb(238,119,32)"/><text x="787.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.51%)</title><rect x="784" y="100" width="6" height="15" fill="rgb(238,99,33)"/><text x="787.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.34%)</title><rect x="786" y="116" width="4" height="15" fill="rgb(211,30,24)"/><text x="789.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.34%)</title><rect x="786" y="132" width="4" height="15" fill="rgb(217,80,15)"/><text x="789.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.34%)</title><rect x="786" y="148" width="4" height="15" fill="rgb(244,73,24)"/><text x="789.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.17%)</title><rect x="788" y="164" width="2" height="15" fill="rgb(237,193,42)"/><text x="791.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="788" y="180" width="2" height="15" fill="rgb(239,161,14)"/><text x="791.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="788" y="196" width="2" height="15" fill="rgb(241,116,33)"/><text x="791.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="788" y="212" width="2" height="15" fill="rgb(215,69,39)"/><text x="791.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="788" y="228" width="2" height="15" fill="rgb(244,25,21)"/><text x="791.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="788" y="244" width="2" height="15" fill="rgb(250,163,29)"/><text x="791.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.17%)</title><rect x="788" y="260" width="2" height="15" fill="rgb(210,106,28)"/><text x="791.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="788" y="276" width="2" height="15" fill="rgb(248,14,48)"/><text x="791.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="788" y="292" width="2" height="15" fill="rgb(227,3,28)"/><text x="791.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(225,48,11)"/><text x="791.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(250,126,22)"/><text x="791.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="788" y="340" width="2" height="15" fill="rgb(213,63,28)"/><text x="791.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.17%)</title><rect x="788" y="356" width="2" height="15" fill="rgb(214,168,3)"/><text x="791.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="788" y="372" width="2" height="15" fill="rgb(226,150,46)"/><text x="791.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="788" y="388" width="2" height="15" fill="rgb(248,10,11)"/><text x="791.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="788" y="404" width="2" height="15" fill="rgb(252,100,49)"/><text x="791.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="788" y="420" width="2" height="15" fill="rgb(207,130,21)"/><text x="791.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="788" y="436" width="2" height="15" fill="rgb(218,116,40)"/><text x="791.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.17%)</title><rect x="788" y="452" width="2" height="15" fill="rgb(223,53,42)"/><text x="791.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="788" y="468" width="2" height="15" fill="rgb(247,144,44)"/><text x="791.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="788" y="484" width="2" height="15" fill="rgb(235,30,17)"/><text x="791.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.17%)</title><rect x="788" y="500" width="2" height="15" fill="rgb(250,168,45)"/><text x="791.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.17%)</title><rect x="788" y="516" width="2" height="15" fill="rgb(221,222,34)"/><text x="791.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.17%)</title><rect x="788" y="532" width="2" height="15" fill="rgb(251,71,14)"/><text x="791.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="788" y="548" width="2" height="15" fill="rgb(225,176,32)"/><text x="791.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="564" width="2" height="15" fill="rgb(234,73,22)"/><text x="791.00" y="574.50"></text></g><g><title>0x7f24fcb50995 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="580" width="2" height="15" fill="rgb(221,180,37)"/><text x="791.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="596" width="2" height="15" fill="rgb(217,100,46)"/><text x="791.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="612" width="2" height="15" fill="rgb(253,3,4)"/><text x="791.00" y="622.50"></text></g><g><title>0x7f24fcb50258 (libdl-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="628" width="2" height="15" fill="rgb(248,178,45)"/><text x="791.00" y="638.50"></text></g><g><title>0x7f24fcb9dd7a (ld-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="644" width="2" height="15" fill="rgb(244,92,45)"/><text x="791.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="660" width="2" height="15" fill="rgb(230,43,36)"/><text x="791.00" y="670.50"></text></g><g><title>0x7f24fcb9e345 (ld-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="676" width="2" height="15" fill="rgb(222,70,22)"/><text x="791.00" y="686.50"></text></g><g><title>0x7f24fcb96fec (ld-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="692" width="2" height="15" fill="rgb(211,200,7)"/><text x="791.00" y="702.50"></text></g><g><title>0x7f24fcb9556b (ld-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="708" width="2" height="15" fill="rgb(226,87,24)"/><text x="791.00" y="718.50"></text></g><g><title>0x7f24fcb950fb (ld-2.29.so) (1 samples, 0.17%)</title><rect x="788" y="724" width="2" height="15" fill="rgb(241,168,40)"/><text x="791.00" y="734.50"></text></g><g><title>0x7f24bc886ff9 (?) (1 samples, 0.17%)</title><rect x="792" y="212" width="2" height="15" fill="rgb(215,140,38)"/><text x="795.00" y="222.50"></text></g><g><title>0x7f24bc881ef6 (?) (1 samples, 0.17%)</title><rect x="792" y="228" width="2" height="15" fill="rgb(224,189,8)"/><text x="795.00" y="238.50"></text></g><g><title>0x7f24bc876962 (?) (1 samples, 0.17%)</title><rect x="792" y="244" width="2" height="15" fill="rgb(213,78,23)"/><text x="795.00" y="254.50"></text></g><g><title>0x7f24bc8aa7a7 (?) (1 samples, 0.17%)</title><rect x="792" y="260" width="2" height="15" fill="rgb(211,164,32)"/><text x="795.00" y="270.50"></text></g><g><title>0x7f24bc8aa379 (?) (1 samples, 0.17%)</title><rect x="792" y="276" width="2" height="15" fill="rgb(220,152,4)"/><text x="795.00" y="286.50"></text></g><g><title>0x7f24bcd088b8 (?) (1 samples, 0.17%)</title><rect x="792" y="292" width="2" height="15" fill="rgb(216,188,53)"/><text x="795.00" y="302.50"></text></g><g><title>0x7f24bcd06c7f (?) (1 samples, 0.17%)</title><rect x="792" y="308" width="2" height="15" fill="rgb(239,226,40)"/><text x="795.00" y="318.50"></text></g><g><title>0x7f24bcd1999c (?) (1 samples, 0.17%)</title><rect x="792" y="324" width="2" height="15" fill="rgb(249,31,20)"/><text x="795.00" y="334.50"></text></g><g><title>0x7f24bca3719e (?) (1 samples, 0.17%)</title><rect x="792" y="340" width="2" height="15" fill="rgb(248,76,13)"/><text x="795.00" y="350.50"></text></g><g><title>0x7f24bca34121 (?) (1 samples, 0.17%)</title><rect x="792" y="356" width="2" height="15" fill="rgb(205,173,43)"/><text x="795.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 12.46%)</title><rect x="796" y="356" width="147" height="15" fill="rgb(246,28,9)"/><text x="799.00" y="366.50">onnxruntime::ml::T..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;long, float&gt;&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="941" y="372" width="2" height="15" fill="rgb(219,29,19)"/><text x="944.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="941" y="388" width="2" height="15" fill="rgb(212,98,54)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f24fc8c8a53 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="943" y="372" width="2" height="15" fill="rgb(233,195,51)"/><text x="946.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="260" width="153" height="15" fill="rgb(208,66,34)"/><text x="797.00" y="270.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="276" width="153" height="15" fill="rgb(239,143,41)"/><text x="797.00" y="286.50">onnxruntime::Infere..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="292" width="153" height="15" fill="rgb(208,176,54)"/><text x="797.00" y="302.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="308" width="153" height="15" fill="rgb(221,112,8)"/><text x="797.00" y="318.50">onnxruntime::utils:..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="324" width="153" height="15" fill="rgb(233,39,31)"/><text x="797.00" y="334.50">onnxruntime::Sequen..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 12.96%)</title><rect x="794" y="340" width="153" height="15" fill="rgb(238,227,42)"/><text x="797.00" y="350.50">onnxruntime::ml::Tr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="943" y="356" width="4" height="15" fill="rgb(215,58,0)"/><text x="946.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="945" y="372" width="2" height="15" fill="rgb(247,110,36)"/><text x="948.00" y="382.50"></text></g><g><title>0x7f24fc8c8a55 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="945" y="388" width="2" height="15" fill="rgb(246,128,38)"/><text x="948.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="947" y="260" width="2" height="15" fill="rgb(222,105,7)"/><text x="950.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="947" y="276" width="2" height="15" fill="rgb(254,21,8)"/><text x="950.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (80 samples, 13.47%)</title><rect x="792" y="132" width="159" height="15" fill="rgb(214,118,16)"/><text x="795.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (80 samples, 13.47%)</title><rect x="792" y="148" width="159" height="15" fill="rgb(240,160,13)"/><text x="795.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (80 samples, 13.47%)</title><rect x="792" y="164" width="159" height="15" fill="rgb(226,3,48)"/><text x="795.00" y="174.50">_run_whole_runtime (..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (80 samples, 13.47%)</title><rect x="792" y="180" width="159" height="15" fill="rgb(239,28,1)"/><text x="795.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (80 samples, 13.47%)</title><rect x="792" y="196" width="159" height="15" fill="rgb(219,42,10)"/><text x="795.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (79 samples, 13.30%)</title><rect x="794" y="212" width="157" height="15" fill="rgb(240,95,6)"/><text x="797.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (79 samples, 13.30%)</title><rect x="794" y="228" width="157" height="15" fill="rgb(225,109,41)"/><text x="797.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (79 samples, 13.30%)</title><rect x="794" y="244" width="157" height="15" fill="rgb(212,31,48)"/><text x="797.00" y="254.50">onnxruntime::python:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="949" y="260" width="2" height="15" fill="rgb(216,85,21)"/><text x="952.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="949" y="276" width="2" height="15" fill="rgb(246,225,30)"/><text x="952.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="949" y="292" width="2" height="15" fill="rgb(254,92,24)"/><text x="952.00" y="302.50"></text></g><g><title>0x7f24fc8c8d02 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="949" y="308" width="2" height="15" fill="rgb(234,7,53)"/><text x="952.00" y="318.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:18) (82 samples, 13.80%)</title><rect x="790" y="100" width="163" height="15" fill="rgb(210,197,43)"/><text x="793.00" y="110.50">profile (bench_Random..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (81 samples, 13.64%)</title><rect x="792" y="116" width="161" height="15" fill="rgb(239,140,44)"/><text x="795.00" y="126.50">time_predict (mlprod..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.17%)</title><rect x="951" y="132" width="2" height="15" fill="rgb(238,121,51)"/><text x="954.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.17%)</title><rect x="955" y="196" width="2" height="15" fill="rgb(220,138,4)"/><text x="958.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.17%)</title><rect x="955" y="212" width="2" height="15" fill="rgb(254,118,3)"/><text x="958.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="955" y="228" width="2" height="15" fill="rgb(220,64,43)"/><text x="958.00" y="238.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="955" y="244" width="2" height="15" fill="rgb(225,177,3)"/><text x="958.00" y="254.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 18.18%)</title><rect x="961" y="356" width="215" height="15" fill="rgb(223,157,16)"/><text x="964.00" y="366.50">onnxruntime::ml::TreeEnsembl..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1176" y="356" width="2" height="15" fill="rgb(226,130,2)"/><text x="1179.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (112 samples, 18.86%)</title><rect x="957" y="340" width="223" height="15" fill="rgb(232,182,31)"/><text x="960.00" y="350.50">onnxruntime::ml::TreeEnsemble..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="1178" y="356" width="2" height="15" fill="rgb(206,56,45)"/><text x="1181.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.36%)</title><rect x="957" y="260" width="229" height="15" fill="rgb(242,22,16)"/><text x="960.00" y="270.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.36%)</title><rect x="957" y="276" width="229" height="15" fill="rgb(248,133,4)"/><text x="960.00" y="286.50">onnxruntime::InferenceSession:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.36%)</title><rect x="957" y="292" width="229" height="15" fill="rgb(217,88,52)"/><text x="960.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.36%)</title><rect x="957" y="308" width="229" height="15" fill="rgb(250,32,14)"/><text x="960.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (115 samples, 19.36%)</title><rect x="957" y="324" width="229" height="15" fill="rgb(222,5,16)"/><text x="960.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.51%)</title><rect x="1180" y="340" width="6" height="15" fill="rgb(218,47,6)"/><text x="1183.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.34%)</title><rect x="1182" y="356" width="4" height="15" fill="rgb(234,59,40)"/><text x="1185.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.34%)</title><rect x="1182" y="372" width="4" height="15" fill="rgb(212,183,50)"/><text x="1185.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1186" y="292" width="2" height="15" fill="rgb(251,211,38)"/><text x="1189.00" y="302.50"></text></g><g><title>all (594 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(231,23,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:52) (204 samples, 34.34%)</title><rect x="784" y="52" width="406" height="15" fill="rgb(247,86,40)"/><text x="787.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_100..</text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:51) (204 samples, 34.34%)</title><rect x="784" y="68" width="406" height="15" fill="rgb(211,214,7)"/><text x="787.00" y="78.50">profile_ort (bench_RandomForestClassifier_default_b_cl_..</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:29) (201 samples, 33.84%)</title><rect x="790" y="84" width="400" height="15" fill="rgb(237,123,3)"/><text x="793.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_..</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1000_50_12_float_.py:23) (119 samples, 20.03%)</title><rect x="953" y="100" width="237" height="15" fill="rgb(236,33,35)"/><text x="956.00" y="110.50">profile (bench_RandomForestClas..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (118 samples, 19.87%)</title><rect x="955" y="116" width="235" height="15" fill="rgb(235,188,49)"/><text x="958.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (118 samples, 19.87%)</title><rect x="955" y="132" width="235" height="15" fill="rgb(253,43,23)"/><text x="958.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (118 samples, 19.87%)</title><rect x="955" y="148" width="235" height="15" fill="rgb(224,117,39)"/><text x="958.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (118 samples, 19.87%)</title><rect x="955" y="164" width="235" height="15" fill="rgb(248,191,4)"/><text x="958.00" y="174.50">_run_whole_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (118 samples, 19.87%)</title><rect x="955" y="180" width="235" height="15" fill="rgb(223,118,54)"/><text x="958.00" y="190.50">run (mlprodict/onnxrt/ops_whole..</text></g><g><title>run (onnxruntime/capi/session.py:136) (117 samples, 19.70%)</title><rect x="957" y="196" width="233" height="15" fill="rgb(226,93,12)"/><text x="960.00" y="206.50">run (onnxruntime/capi/session...</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 19.70%)</title><rect x="957" y="212" width="233" height="15" fill="rgb(246,80,29)"/><text x="960.00" y="222.50">pybind11::cpp_function::dispat..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 19.70%)</title><rect x="957" y="228" width="233" height="15" fill="rgb(240,161,43)"/><text x="960.00" y="238.50">void pybind11::cpp_function::i..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 19.70%)</title><rect x="957" y="244" width="233" height="15" fill="rgb(223,191,8)"/><text x="960.00" y="254.50">onnxruntime::python::addObject..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(234,126,38)"/><text x="1189.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.34%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(206,123,43)"/><text x="1189.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(245,161,16)"/><text x="1191.00" y="302.50"></text></g><g><title>0x7f24fc8c897c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(240,102,17)"/><text x="1191.00" y="318.50"></text></g></g></svg>