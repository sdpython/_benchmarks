<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(236,47,10)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(224,156,36)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(247,95,21)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(214,89,34)"/><text x="13.00" y="926.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(209,26,39)"/><text x="15.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(240,208,29)"/><text x="15.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.58%)</title><rect x="12" y="868" width="7" height="15" fill="rgb(212,89,30)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.58%)</title><rect x="12" y="884" width="7" height="15" fill="rgb(233,201,24)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.58%)</title><rect x="12" y="900" width="7" height="15" fill="rgb(224,168,51)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.58%)</title><rect x="12" y="916" width="7" height="15" fill="rgb(227,194,46)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 0.58%)</title><rect x="12" y="932" width="7" height="15" fill="rgb(245,22,20)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(232,147,0)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(248,223,32)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.39%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(221,118,23)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.39%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(245,111,44)"/><text x="17.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.39%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(225,205,34)"/><text x="17.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.39%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(205,164,6)"/><text x="17.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (2 samples, 0.39%)</title><rect x="14" y="1044" width="5" height="15" fill="rgb(228,112,22)"/><text x="17.00" y="1054.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(234,32,9)"/><text x="19.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(216,117,24)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(237,176,11)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(237,142,36)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(210,170,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(207,57,29)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(235,49,17)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.16%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(233,110,15)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(221,211,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.16%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(209,141,36)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(230,133,37)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(213,192,51)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(245,22,33)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.16%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(210,204,26)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.16%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(226,21,14)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.16%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(207,94,37)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.16%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(218,210,25)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.16%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(245,130,36)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.39%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(238,219,46)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(218,71,34)"/><text x="24.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(210,39,5)"/><text x="24.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(205,58,15)"/><text x="24.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(222,11,13)"/><text x="24.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(251,122,5)"/><text x="24.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(242,116,13)"/><text x="24.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(221,200,12)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.35%)</title><rect x="10" y="292" width="15" height="15" fill="rgb(214,121,35)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="308" width="15" height="15" fill="rgb(237,79,23)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="324" width="15" height="15" fill="rgb(210,41,18)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="340" width="15" height="15" fill="rgb(246,37,8)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.35%)</title><rect x="10" y="356" width="15" height="15" fill="rgb(215,124,14)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="372" width="15" height="15" fill="rgb(216,188,5)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.35%)</title><rect x="10" y="388" width="15" height="15" fill="rgb(238,70,2)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="404" width="15" height="15" fill="rgb(216,141,10)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="420" width="15" height="15" fill="rgb(223,75,44)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="436" width="15" height="15" fill="rgb(218,61,31)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.35%)</title><rect x="10" y="452" width="15" height="15" fill="rgb(242,223,24)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="468" width="15" height="15" fill="rgb(230,190,13)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.35%)</title><rect x="10" y="484" width="15" height="15" fill="rgb(242,35,54)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="500" width="15" height="15" fill="rgb(243,10,37)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="516" width="15" height="15" fill="rgb(228,59,25)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="532" width="15" height="15" fill="rgb(218,131,15)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.35%)</title><rect x="10" y="548" width="15" height="15" fill="rgb(252,227,52)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="10" y="564" width="15" height="15" fill="rgb(207,183,45)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.35%)</title><rect x="10" y="580" width="15" height="15" fill="rgb(239,76,46)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="596" width="2" height="15" fill="rgb(206,195,2)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="612" width="2" height="15" fill="rgb(223,87,26)"/><text x="26.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="628" width="2" height="15" fill="rgb(229,49,6)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="644" width="2" height="15" fill="rgb(243,94,27)"/><text x="26.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="660" width="2" height="15" fill="rgb(211,55,17)"/><text x="26.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(205,169,10)"/><text x="26.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(209,53,23)"/><text x="26.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.19%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(243,224,30)"/><text x="26.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(215,186,31)"/><text x="26.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(240,27,24)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(219,53,35)"/><text x="26.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(236,45,40)"/><text x="26.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(245,75,25)"/><text x="26.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(236,43,35)"/><text x="26.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(222,229,53)"/><text x="26.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(212,140,3)"/><text x="26.00" y="846.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(238,60,40)"/><text x="26.00" y="862.50"></text></g><g><title>0x7fac2252e995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(213,219,32)"/><text x="26.00" y="878.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(247,53,54)"/><text x="26.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="900" width="2" height="15" fill="rgb(207,50,45)"/><text x="26.00" y="910.50"></text></g><g><title>0x7fac2252e258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(230,93,31)"/><text x="26.00" y="926.50"></text></g><g><title>0x7fac2257bd7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(228,11,44)"/><text x="26.00" y="942.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(219,0,42)"/><text x="26.00" y="958.50"></text></g><g><title>0x7fac2257c345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(229,73,19)"/><text x="26.00" y="974.50"></text></g><g><title>0x7fac22574fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(243,37,38)"/><text x="26.00" y="990.50"></text></g><g><title>0x7fac22573448 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(229,46,25)"/><text x="26.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="500" width="3" height="15" fill="rgb(219,49,25)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="516" width="3" height="15" fill="rgb(235,159,41)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="532" width="3" height="15" fill="rgb(244,20,40)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="548" width="3" height="15" fill="rgb(235,154,0)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="564" width="3" height="15" fill="rgb(240,93,0)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.19%)</title><rect x="25" y="580" width="3" height="15" fill="rgb(217,114,36)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="596" width="3" height="15" fill="rgb(222,76,41)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="612" width="3" height="15" fill="rgb(209,107,34)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="628" width="3" height="15" fill="rgb(216,92,5)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="644" width="3" height="15" fill="rgb(219,81,10)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="660" width="3" height="15" fill="rgb(243,154,41)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.19%)</title><rect x="25" y="676" width="3" height="15" fill="rgb(238,215,51)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="692" width="3" height="15" fill="rgb(233,200,12)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="708" width="3" height="15" fill="rgb(251,78,44)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="724" width="3" height="15" fill="rgb(243,103,45)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="740" width="3" height="15" fill="rgb(218,173,46)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="756" width="3" height="15" fill="rgb(248,137,28)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.19%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(239,61,40)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(249,64,27)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(208,147,38)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(230,36,36)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(226,184,52)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(218,6,24)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(210,209,46)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(240,35,48)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.19%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(220,168,28)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(220,204,13)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(210,91,2)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(245,25,9)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(239,60,38)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(245,196,23)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(231,68,18)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(238,38,26)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.19%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(233,167,2)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(249,163,44)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(211,209,50)"/><text x="28.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.19%)</title><rect x="25" y="1076" width="3" height="15" fill="rgb(225,140,33)"/><text x="28.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.19%)</title><rect x="25" y="1092" width="3" height="15" fill="rgb(233,153,23)"/><text x="28.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.74%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(216,25,1)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.74%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(233,158,15)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.74%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(236,75,53)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.74%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(219,220,49)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.74%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(232,224,27)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.74%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(215,189,41)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.39%)</title><rect x="25" y="292" width="5" height="15" fill="rgb(225,13,52)"/><text x="28.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="308" width="5" height="15" fill="rgb(232,79,9)"/><text x="28.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="324" width="5" height="15" fill="rgb(222,134,9)"/><text x="28.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="340" width="5" height="15" fill="rgb(226,182,38)"/><text x="28.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="25" y="356" width="5" height="15" fill="rgb(225,40,20)"/><text x="28.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="372" width="5" height="15" fill="rgb(243,189,21)"/><text x="28.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.39%)</title><rect x="25" y="388" width="5" height="15" fill="rgb(248,197,28)"/><text x="28.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="404" width="5" height="15" fill="rgb(208,207,2)"/><text x="28.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="420" width="5" height="15" fill="rgb(224,52,15)"/><text x="28.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="436" width="5" height="15" fill="rgb(253,146,0)"/><text x="28.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="25" y="452" width="5" height="15" fill="rgb(241,35,51)"/><text x="28.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="25" y="468" width="5" height="15" fill="rgb(215,194,42)"/><text x="28.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.39%)</title><rect x="25" y="484" width="5" height="15" fill="rgb(237,61,47)"/><text x="28.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="28" y="500" width="2" height="15" fill="rgb(205,163,20)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="28" y="516" width="2" height="15" fill="rgb(252,174,21)"/><text x="31.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="28" y="532" width="2" height="15" fill="rgb(210,34,34)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="28" y="548" width="2" height="15" fill="rgb(247,1,16)"/><text x="31.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="28" y="564" width="2" height="15" fill="rgb(217,156,14)"/><text x="31.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(228,202,42)"/><text x="31.00" y="590.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(248,190,6)"/><text x="31.00" y="606.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(235,222,2)"/><text x="31.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(220,133,3)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(250,213,42)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(214,174,41)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(224,98,0)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(234,116,14)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(205,177,3)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(253,221,44)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(229,87,33)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(212,89,10)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(219,32,14)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(209,27,9)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(253,45,24)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(205,91,19)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(230,113,45)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(205,188,54)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(245,33,29)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(254,186,45)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.19%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(226,177,2)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(230,142,6)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(234,74,50)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(241,23,21)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(231,16,28)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(251,185,52)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.19%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(237,86,42)"/><text x="33.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(212,207,18)"/><text x="33.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(228,95,50)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(231,119,39)"/><text x="33.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(246,104,47)"/><text x="33.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(218,177,28)"/><text x="33.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(253,79,30)"/><text x="33.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(238,211,32)"/><text x="33.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(248,61,36)"/><text x="33.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(205,218,14)"/><text x="33.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(209,119,44)"/><text x="33.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(254,43,27)"/><text x="33.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(210,113,2)"/><text x="33.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(242,105,30)"/><text x="33.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_dbscan.py) (1 samples, 0.19%)</title><rect x="30" y="1716" width="2" height="15" fill="rgb(211,64,44)"/><text x="33.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1732" width="2" height="15" fill="rgb(207,76,52)"/><text x="33.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1748" width="2" height="15" fill="rgb(211,12,2)"/><text x="33.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1764" width="2" height="15" fill="rgb(244,124,21)"/><text x="33.00" y="1774.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1780" width="2" height="15" fill="rgb(253,62,2)"/><text x="33.00" y="1790.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1796" width="2" height="15" fill="rgb(218,227,41)"/><text x="33.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1812" width="2" height="15" fill="rgb(245,188,36)"/><text x="33.00" y="1822.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1828" width="2" height="15" fill="rgb(208,76,26)"/><text x="33.00" y="1838.50"></text></g><g><title>0x7fac2252e995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1844" width="2" height="15" fill="rgb(246,33,41)"/><text x="33.00" y="1854.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1860" width="2" height="15" fill="rgb(254,107,27)"/><text x="33.00" y="1870.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1876" width="2" height="15" fill="rgb(241,122,41)"/><text x="33.00" y="1886.50"></text></g><g><title>0x7fac2252e258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1892" width="2" height="15" fill="rgb(241,70,33)"/><text x="33.00" y="1902.50"></text></g><g><title>0x7fac2257bd7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1908" width="2" height="15" fill="rgb(240,39,2)"/><text x="33.00" y="1918.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1924" width="2" height="15" fill="rgb(228,201,43)"/><text x="33.00" y="1934.50"></text></g><g><title>0x7fac2257c345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1940" width="2" height="15" fill="rgb(213,44,3)"/><text x="33.00" y="1950.50"></text></g><g><title>0x7fac22574fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1956" width="2" height="15" fill="rgb(248,83,28)"/><text x="33.00" y="1966.50"></text></g><g><title>0x7fac2257377a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1972" width="2" height="15" fill="rgb(226,95,0)"/><text x="33.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="484" width="5" height="15" fill="rgb(224,156,17)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="500" width="5" height="15" fill="rgb(218,30,39)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="516" width="5" height="15" fill="rgb(241,98,37)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="532" width="5" height="15" fill="rgb(221,91,16)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="548" width="5" height="15" fill="rgb(208,198,21)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="564" width="5" height="15" fill="rgb(253,164,51)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.39%)</title><rect x="30" y="580" width="5" height="15" fill="rgb(250,129,47)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="596" width="5" height="15" fill="rgb(231,184,35)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="612" width="5" height="15" fill="rgb(241,145,20)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="628" width="5" height="15" fill="rgb(244,26,47)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="644" width="5" height="15" fill="rgb(252,127,39)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="660" width="5" height="15" fill="rgb(251,62,24)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.39%)</title><rect x="30" y="676" width="5" height="15" fill="rgb(215,112,34)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="692" width="5" height="15" fill="rgb(254,217,35)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="708" width="5" height="15" fill="rgb(249,34,28)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="724" width="5" height="15" fill="rgb(220,1,42)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="740" width="5" height="15" fill="rgb(218,31,25)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="756" width="5" height="15" fill="rgb(231,23,36)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.39%)</title><rect x="30" y="772" width="5" height="15" fill="rgb(249,128,20)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="788" width="5" height="15" fill="rgb(250,127,12)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="804" width="5" height="15" fill="rgb(216,144,15)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="820" width="5" height="15" fill="rgb(211,120,25)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="836" width="5" height="15" fill="rgb(250,11,49)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(237,51,19)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.39%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(231,169,42)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(232,63,9)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(220,63,48)"/><text x="33.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(215,42,1)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(245,193,47)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(205,83,48)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(244,38,6)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(238,173,14)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(222,26,42)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.39%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(209,201,33)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(220,13,33)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(235,178,4)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(247,20,11)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(220,13,23)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="30" y="1092" width="5" height="15" fill="rgb(243,219,33)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.39%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(208,87,37)"/><text x="33.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1124" width="3" height="15" fill="rgb(226,112,23)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1140" width="3" height="15" fill="rgb(243,46,18)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1156" width="3" height="15" fill="rgb(215,220,54)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1172" width="3" height="15" fill="rgb(217,62,14)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1188" width="3" height="15" fill="rgb(214,116,3)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1204" width="3" height="15" fill="rgb(208,32,48)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1220" width="3" height="15" fill="rgb(231,143,27)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="1236" width="3" height="15" fill="rgb(230,116,43)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1252" width="3" height="15" fill="rgb(253,102,24)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1268" width="3" height="15" fill="rgb(246,74,8)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1284" width="3" height="15" fill="rgb(218,126,28)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1300" width="3" height="15" fill="rgb(209,186,19)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1316" width="3" height="15" fill="rgb(235,186,16)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1332" width="3" height="15" fill="rgb(226,181,28)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1348" width="3" height="15" fill="rgb(251,123,18)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.19%)</title><rect x="32" y="1364" width="3" height="15" fill="rgb(247,195,38)"/><text x="35.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1380" width="3" height="15" fill="rgb(221,162,28)"/><text x="35.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1396" width="3" height="15" fill="rgb(214,189,52)"/><text x="35.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1412" width="3" height="15" fill="rgb(227,92,52)"/><text x="35.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1428" width="3" height="15" fill="rgb(234,160,25)"/><text x="35.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1444" width="3" height="15" fill="rgb(253,188,23)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.19%)</title><rect x="32" y="1460" width="3" height="15" fill="rgb(235,178,23)"/><text x="35.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1476" width="3" height="15" fill="rgb(212,149,50)"/><text x="35.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1492" width="3" height="15" fill="rgb(229,99,3)"/><text x="35.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1508" width="3" height="15" fill="rgb(236,169,0)"/><text x="35.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1524" width="3" height="15" fill="rgb(238,100,24)"/><text x="35.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1540" width="3" height="15" fill="rgb(253,124,21)"/><text x="35.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="32" y="1556" width="3" height="15" fill="rgb(251,212,2)"/><text x="35.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.19%)</title><rect x="32" y="1572" width="3" height="15" fill="rgb(252,126,31)"/><text x="35.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(220,23,31)"/><text x="35.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1604" width="3" height="15" fill="rgb(212,161,5)"/><text x="35.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1620" width="3" height="15" fill="rgb(218,227,16)"/><text x="35.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1636" width="3" height="15" fill="rgb(229,49,26)"/><text x="35.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1652" width="3" height="15" fill="rgb(226,60,48)"/><text x="35.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="1668" width="3" height="15" fill="rgb(223,188,8)"/><text x="35.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="1684" width="3" height="15" fill="rgb(235,10,22)"/><text x="35.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1700" width="3" height="15" fill="rgb(238,181,41)"/><text x="35.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1716" width="3" height="15" fill="rgb(215,224,20)"/><text x="35.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1732" width="3" height="15" fill="rgb(221,186,42)"/><text x="35.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1748" width="3" height="15" fill="rgb(206,16,20)"/><text x="35.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1764" width="3" height="15" fill="rgb(239,228,10)"/><text x="35.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 0.19%)</title><rect x="32" y="1780" width="3" height="15" fill="rgb(254,71,30)"/><text x="35.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1796" width="3" height="15" fill="rgb(244,217,34)"/><text x="35.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1812" width="3" height="15" fill="rgb(236,22,10)"/><text x="35.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1828" width="3" height="15" fill="rgb(206,100,42)"/><text x="35.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1844" width="3" height="15" fill="rgb(250,173,43)"/><text x="35.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1860" width="3" height="15" fill="rgb(239,66,33)"/><text x="35.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="1876" width="3" height="15" fill="rgb(222,60,9)"/><text x="35.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1892" width="3" height="15" fill="rgb(244,48,0)"/><text x="35.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1908" width="3" height="15" fill="rgb(222,122,24)"/><text x="35.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1924" width="3" height="15" fill="rgb(210,124,44)"/><text x="35.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="1940" width="3" height="15" fill="rgb(234,191,27)"/><text x="35.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1956" width="3" height="15" fill="rgb(227,33,53)"/><text x="35.00" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 0.19%)</title><rect x="32" y="1972" width="3" height="15" fill="rgb(247,210,0)"/><text x="35.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1988" width="3" height="15" fill="rgb(217,156,11)"/><text x="35.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="2004" width="3" height="15" fill="rgb(234,11,1)"/><text x="35.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="2020" width="3" height="15" fill="rgb(215,132,0)"/><text x="35.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="2036" width="3" height="15" fill="rgb(250,211,34)"/><text x="35.00" y="2046.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="2052" width="3" height="15" fill="rgb(218,95,40)"/><text x="35.00" y="2062.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="2068" width="3" height="15" fill="rgb(228,131,12)"/><text x="35.00" y="2078.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="2084" width="3" height="15" fill="rgb(252,37,35)"/><text x="35.00" y="2094.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="2100" width="3" height="15" fill="rgb(224,193,32)"/><text x="35.00" y="2110.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="2116" width="3" height="15" fill="rgb(231,40,3)"/><text x="35.00" y="2126.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="2132" width="3" height="15" fill="rgb(252,9,17)"/><text x="35.00" y="2142.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="2148" width="3" height="15" fill="rgb(211,60,51)"/><text x="35.00" y="2158.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.19%)</title><rect x="35" y="724" width="2" height="15" fill="rgb(206,220,24)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="740" width="2" height="15" fill="rgb(251,24,5)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="756" width="2" height="15" fill="rgb(222,194,13)"/><text x="38.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="772" width="2" height="15" fill="rgb(245,146,53)"/><text x="38.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="788" width="2" height="15" fill="rgb(245,110,44)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="804" width="2" height="15" fill="rgb(242,156,9)"/><text x="38.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.19%)</title><rect x="35" y="820" width="2" height="15" fill="rgb(229,178,35)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="836" width="2" height="15" fill="rgb(231,124,37)"/><text x="38.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="852" width="2" height="15" fill="rgb(254,99,37)"/><text x="38.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="868" width="2" height="15" fill="rgb(227,211,15)"/><text x="38.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="884" width="2" height="15" fill="rgb(254,212,1)"/><text x="38.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="900" width="2" height="15" fill="rgb(231,215,34)"/><text x="38.00" y="910.50"></text></g><g><title>0x7fabf77d740e (?) (1 samples, 0.19%)</title><rect x="35" y="916" width="2" height="15" fill="rgb(230,199,8)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="932" width="2" height="15" fill="rgb(213,5,54)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="948" width="2" height="15" fill="rgb(246,159,20)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="964" width="2" height="15" fill="rgb(205,51,37)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(236,181,52)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="996" width="2" height="15" fill="rgb(227,173,48)"/><text x="38.00" y="1006.50"></text></g><g><title>0x7fabf7590cd2 (?) (1 samples, 0.19%)</title><rect x="35" y="1012" width="2" height="15" fill="rgb(241,186,21)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1028" width="2" height="15" fill="rgb(231,180,21)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1044" width="2" height="15" fill="rgb(212,181,37)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1060" width="2" height="15" fill="rgb(245,188,4)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1076" width="2" height="15" fill="rgb(234,133,44)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1092" width="2" height="15" fill="rgb(252,183,5)"/><text x="38.00" y="1102.50"></text></g><g><title>0x7fabf6c860e5 (?) (1 samples, 0.19%)</title><rect x="35" y="1108" width="2" height="15" fill="rgb(248,135,15)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1124" width="2" height="15" fill="rgb(211,185,19)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1140" width="2" height="15" fill="rgb(249,201,17)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1156" width="2" height="15" fill="rgb(220,210,12)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1172" width="2" height="15" fill="rgb(249,177,14)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1188" width="2" height="15" fill="rgb(250,77,13)"/><text x="38.00" y="1198.50"></text></g><g><title>0x7fabf6a0ae68 (?) (1 samples, 0.19%)</title><rect x="35" y="1204" width="2" height="15" fill="rgb(229,211,42)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1220" width="2" height="15" fill="rgb(214,174,4)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1236" width="2" height="15" fill="rgb(250,170,51)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1252" width="2" height="15" fill="rgb(207,79,30)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1268" width="2" height="15" fill="rgb(251,204,52)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1284" width="2" height="15" fill="rgb(229,85,39)"/><text x="38.00" y="1294.50"></text></g><g><title>0x7fabf679b2fb (?) (1 samples, 0.19%)</title><rect x="35" y="1300" width="2" height="15" fill="rgb(251,163,11)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1316" width="2" height="15" fill="rgb(205,41,4)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1332" width="2" height="15" fill="rgb(207,162,30)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1348" width="2" height="15" fill="rgb(241,59,14)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1364" width="2" height="15" fill="rgb(251,145,10)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1380" width="2" height="15" fill="rgb(243,215,37)"/><text x="38.00" y="1390.50"></text></g><g><title>0x7fabf657f01d (?) (1 samples, 0.19%)</title><rect x="35" y="1396" width="2" height="15" fill="rgb(242,21,28)"/><text x="38.00" y="1406.50"></text></g><g><title>0x7fabf657dc13 (?) (1 samples, 0.19%)</title><rect x="35" y="1412" width="2" height="15" fill="rgb(227,1,31)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1428" width="2" height="15" fill="rgb(218,4,54)"/><text x="38.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1444" width="2" height="15" fill="rgb(206,222,31)"/><text x="38.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1460" width="2" height="15" fill="rgb(251,182,10)"/><text x="38.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1476" width="2" height="15" fill="rgb(205,18,27)"/><text x="38.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1492" width="2" height="15" fill="rgb(223,4,33)"/><text x="38.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1508" width="2" height="15" fill="rgb(239,29,35)"/><text x="38.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1524" width="2" height="15" fill="rgb(239,35,33)"/><text x="38.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1540" width="2" height="15" fill="rgb(209,66,4)"/><text x="38.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/_config/__init__.py) (1 samples, 0.19%)</title><rect x="35" y="1556" width="2" height="15" fill="rgb(212,44,11)"/><text x="38.00" y="1566.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1572" width="2" height="15" fill="rgb(247,192,6)"/><text x="38.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1588" width="2" height="15" fill="rgb(251,169,44)"/><text x="38.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1604" width="2" height="15" fill="rgb(244,25,24)"/><text x="38.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1620" width="2" height="15" fill="rgb(210,206,4)"/><text x="38.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="35" y="1636" width="2" height="15" fill="rgb(229,46,19)"/><text x="38.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1652" width="2" height="15" fill="rgb(230,46,31)"/><text x="38.00" y="1662.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1668" width="2" height="15" fill="rgb(247,57,54)"/><text x="38.00" y="1678.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="35" y="1684" width="2" height="15" fill="rgb(245,49,41)"/><text x="38.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="772" width="2" height="15" fill="rgb(205,152,43)"/><text x="40.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="788" width="2" height="15" fill="rgb(228,208,16)"/><text x="40.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="804" width="2" height="15" fill="rgb(232,51,3)"/><text x="40.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="820" width="2" height="15" fill="rgb(227,165,12)"/><text x="40.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="37" y="836" width="2" height="15" fill="rgb(210,179,24)"/><text x="40.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="852" width="2" height="15" fill="rgb(228,182,5)"/><text x="40.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.19%)</title><rect x="37" y="868" width="2" height="15" fill="rgb(227,18,30)"/><text x="40.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="884" width="2" height="15" fill="rgb(235,208,21)"/><text x="40.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="900" width="2" height="15" fill="rgb(219,200,49)"/><text x="40.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="916" width="2" height="15" fill="rgb(207,35,49)"/><text x="40.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(227,48,28)"/><text x="40.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="948" width="2" height="15" fill="rgb(213,19,6)"/><text x="40.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.19%)</title><rect x="37" y="964" width="2" height="15" fill="rgb(210,48,35)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="980" width="2" height="15" fill="rgb(206,221,44)"/><text x="40.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="996" width="2" height="15" fill="rgb(245,78,54)"/><text x="40.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(209,162,40)"/><text x="40.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(218,18,36)"/><text x="40.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(212,97,13)"/><text x="40.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.19%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(251,105,5)"/><text x="40.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(252,127,9)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(252,157,29)"/><text x="40.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(233,79,8)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(215,19,31)"/><text x="40.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(250,54,42)"/><text x="40.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(209,187,36)"/><text x="40.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="37" y="1172" width="2" height="15" fill="rgb(247,218,35)"/><text x="40.00" y="1182.50"></text></g><g><title>0x7fabf472326f (pandas/_libs/algos.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="37" y="1188" width="2" height="15" fill="rgb(220,4,13)"/><text x="40.00" y="1198.50"></text></g><g><title>0x7fabf4717008 (pandas/_libs/algos.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="37" y="1204" width="2" height="15" fill="rgb(239,9,19)"/><text x="40.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.97%)</title><rect x="30" y="340" width="11" height="15" fill="rgb(225,6,53)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="356" width="11" height="15" fill="rgb(250,142,20)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="372" width="11" height="15" fill="rgb(213,161,1)"/><text x="33.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="388" width="11" height="15" fill="rgb(250,26,19)"/><text x="33.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.97%)</title><rect x="30" y="404" width="11" height="15" fill="rgb(223,219,3)"/><text x="33.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="420" width="11" height="15" fill="rgb(205,31,12)"/><text x="33.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.97%)</title><rect x="30" y="436" width="11" height="15" fill="rgb(220,51,42)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="452" width="11" height="15" fill="rgb(208,193,13)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="30" y="468" width="11" height="15" fill="rgb(222,9,0)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="484" width="6" height="15" fill="rgb(242,197,39)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.58%)</title><rect x="35" y="500" width="6" height="15" fill="rgb(215,39,5)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="516" width="6" height="15" fill="rgb(208,97,50)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.58%)</title><rect x="35" y="532" width="6" height="15" fill="rgb(228,41,3)"/><text x="38.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="548" width="6" height="15" fill="rgb(212,202,17)"/><text x="38.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="564" width="6" height="15" fill="rgb(233,131,25)"/><text x="38.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="580" width="6" height="15" fill="rgb(235,110,38)"/><text x="38.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.58%)</title><rect x="35" y="596" width="6" height="15" fill="rgb(251,17,30)"/><text x="38.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="612" width="6" height="15" fill="rgb(249,119,1)"/><text x="38.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.58%)</title><rect x="35" y="628" width="6" height="15" fill="rgb(227,63,38)"/><text x="38.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="644" width="6" height="15" fill="rgb(207,59,0)"/><text x="38.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="660" width="6" height="15" fill="rgb(227,49,9)"/><text x="38.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="676" width="6" height="15" fill="rgb(242,101,30)"/><text x="38.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.58%)</title><rect x="35" y="692" width="6" height="15" fill="rgb(221,70,18)"/><text x="38.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="35" y="708" width="6" height="15" fill="rgb(233,208,44)"/><text x="38.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.39%)</title><rect x="37" y="724" width="4" height="15" fill="rgb(228,89,44)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="37" y="740" width="4" height="15" fill="rgb(212,147,13)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="37" y="756" width="4" height="15" fill="rgb(226,7,12)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="772" width="2" height="15" fill="rgb(223,140,11)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="788" width="2" height="15" fill="rgb(223,149,22)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="804" width="2" height="15" fill="rgb(232,148,41)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="820" width="2" height="15" fill="rgb(243,11,6)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="836" width="2" height="15" fill="rgb(248,211,1)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="852" width="2" height="15" fill="rgb(242,52,14)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="868" width="2" height="15" fill="rgb(238,128,47)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="884" width="2" height="15" fill="rgb(212,44,42)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="900" width="2" height="15" fill="rgb(253,140,15)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.19%)</title><rect x="39" y="916" width="2" height="15" fill="rgb(236,50,19)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="932" width="2" height="15" fill="rgb(234,217,49)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="948" width="2" height="15" fill="rgb(229,108,37)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="964" width="2" height="15" fill="rgb(236,163,7)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="980" width="2" height="15" fill="rgb(206,185,38)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="996" width="2" height="15" fill="rgb(227,186,34)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.19%)</title><rect x="39" y="1012" width="2" height="15" fill="rgb(227,112,9)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1028" width="2" height="15" fill="rgb(242,85,41)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1044" width="2" height="15" fill="rgb(224,154,29)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1060" width="2" height="15" fill="rgb(226,79,31)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1076" width="2" height="15" fill="rgb(244,28,9)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1092" width="2" height="15" fill="rgb(233,111,38)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.19%)</title><rect x="39" y="1108" width="2" height="15" fill="rgb(239,66,17)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1124" width="2" height="15" fill="rgb(243,7,12)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1140" width="2" height="15" fill="rgb(242,207,20)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1156" width="2" height="15" fill="rgb(235,165,27)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1172" width="2" height="15" fill="rgb(247,218,43)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1188" width="2" height="15" fill="rgb(244,196,31)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="1204" width="2" height="15" fill="rgb(216,122,23)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1220" width="2" height="15" fill="rgb(213,46,46)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1236" width="2" height="15" fill="rgb(221,168,54)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1252" width="2" height="15" fill="rgb(212,34,9)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1268" width="2" height="15" fill="rgb(222,226,16)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1284" width="2" height="15" fill="rgb(236,60,49)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.19%)</title><rect x="39" y="1300" width="2" height="15" fill="rgb(251,21,2)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1316" width="2" height="15" fill="rgb(240,152,21)"/><text x="42.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1332" width="2" height="15" fill="rgb(222,222,26)"/><text x="42.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1348" width="2" height="15" fill="rgb(222,132,36)"/><text x="42.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1364" width="2" height="15" fill="rgb(216,191,23)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1380" width="2" height="15" fill="rgb(250,19,17)"/><text x="42.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.19%)</title><rect x="39" y="1396" width="2" height="15" fill="rgb(235,220,20)"/><text x="42.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1412" width="2" height="15" fill="rgb(236,85,48)"/><text x="42.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1428" width="2" height="15" fill="rgb(219,180,48)"/><text x="42.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1444" width="2" height="15" fill="rgb(231,200,52)"/><text x="42.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1460" width="2" height="15" fill="rgb(220,143,2)"/><text x="42.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1476" width="2" height="15" fill="rgb(225,13,29)"/><text x="42.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.19%)</title><rect x="39" y="1492" width="2" height="15" fill="rgb(207,102,20)"/><text x="42.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1508" width="2" height="15" fill="rgb(240,21,7)"/><text x="42.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1524" width="2" height="15" fill="rgb(208,100,36)"/><text x="42.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1540" width="2" height="15" fill="rgb(216,117,42)"/><text x="42.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1556" width="2" height="15" fill="rgb(239,169,44)"/><text x="42.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1572" width="2" height="15" fill="rgb(212,162,41)"/><text x="42.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.19%)</title><rect x="39" y="1588" width="2" height="15" fill="rgb(230,208,37)"/><text x="42.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1604" width="2" height="15" fill="rgb(215,109,35)"/><text x="42.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1620" width="2" height="15" fill="rgb(211,27,22)"/><text x="42.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1636" width="2" height="15" fill="rgb(230,128,45)"/><text x="42.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1652" width="2" height="15" fill="rgb(214,212,20)"/><text x="42.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1668" width="2" height="15" fill="rgb(232,174,11)"/><text x="42.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.19%)</title><rect x="39" y="1684" width="2" height="15" fill="rgb(217,213,41)"/><text x="42.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1700" width="2" height="15" fill="rgb(234,70,5)"/><text x="42.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1716" width="2" height="15" fill="rgb(242,179,13)"/><text x="42.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1732" width="2" height="15" fill="rgb(214,67,3)"/><text x="42.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="39" y="1748" width="2" height="15" fill="rgb(237,102,11)"/><text x="42.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="39" y="1764" width="2" height="15" fill="rgb(210,60,16)"/><text x="42.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.19%)</title><rect x="39" y="1780" width="2" height="15" fill="rgb(206,92,26)"/><text x="42.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.19%)</title><rect x="39" y="1796" width="2" height="15" fill="rgb(222,205,10)"/><text x="42.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.19%)</title><rect x="39" y="1812" width="2" height="15" fill="rgb(236,110,51)"/><text x="42.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.19%)</title><rect x="39" y="1828" width="2" height="15" fill="rgb(222,19,40)"/><text x="42.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="628" width="3" height="15" fill="rgb(236,152,34)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="644" width="3" height="15" fill="rgb(252,111,9)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="660" width="3" height="15" fill="rgb(205,31,28)"/><text x="44.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="676" width="3" height="15" fill="rgb(210,41,4)"/><text x="44.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="692" width="3" height="15" fill="rgb(236,170,9)"/><text x="44.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="708" width="3" height="15" fill="rgb(221,118,27)"/><text x="44.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="724" width="3" height="15" fill="rgb(211,44,39)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="740" width="3" height="15" fill="rgb(211,212,51)"/><text x="44.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="756" width="3" height="15" fill="rgb(225,28,27)"/><text x="44.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="772" width="3" height="15" fill="rgb(254,59,21)"/><text x="44.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="788" width="3" height="15" fill="rgb(234,87,31)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="804" width="3" height="15" fill="rgb(224,166,17)"/><text x="44.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.19%)</title><rect x="41" y="820" width="3" height="15" fill="rgb(227,95,32)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="836" width="3" height="15" fill="rgb(235,101,6)"/><text x="44.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="852" width="3" height="15" fill="rgb(236,2,8)"/><text x="44.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="868" width="3" height="15" fill="rgb(253,15,51)"/><text x="44.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="884" width="3" height="15" fill="rgb(244,89,41)"/><text x="44.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="900" width="3" height="15" fill="rgb(249,97,17)"/><text x="44.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.19%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(211,122,34)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(223,214,29)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(231,205,40)"/><text x="44.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="964" width="3" height="15" fill="rgb(239,98,21)"/><text x="44.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="980" width="3" height="15" fill="rgb(245,163,9)"/><text x="44.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="996" width="3" height="15" fill="rgb(217,83,50)"/><text x="44.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1012" width="3" height="15" fill="rgb(223,7,9)"/><text x="44.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1028" width="3" height="15" fill="rgb(217,64,12)"/><text x="44.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1044" width="3" height="15" fill="rgb(249,16,52)"/><text x="44.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="1060" width="3" height="15" fill="rgb(222,63,29)"/><text x="44.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1076" width="3" height="15" fill="rgb(220,159,24)"/><text x="44.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(229,64,1)"/><text x="44.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(213,8,6)"/><text x="44.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1124" width="3" height="15" fill="rgb(233,66,36)"/><text x="44.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1140" width="3" height="15" fill="rgb(238,64,38)"/><text x="44.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.19%)</title><rect x="41" y="1156" width="3" height="15" fill="rgb(212,24,44)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1172" width="3" height="15" fill="rgb(213,218,40)"/><text x="44.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1188" width="3" height="15" fill="rgb(246,17,45)"/><text x="44.00" y="1198.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1204" width="3" height="15" fill="rgb(245,209,38)"/><text x="44.00" y="1214.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1220" width="3" height="15" fill="rgb(231,4,46)"/><text x="44.00" y="1230.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1236" width="3" height="15" fill="rgb(209,49,13)"/><text x="44.00" y="1246.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1252" width="3" height="15" fill="rgb(245,202,45)"/><text x="44.00" y="1262.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1268" width="3" height="15" fill="rgb(240,152,29)"/><text x="44.00" y="1278.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1284" width="3" height="15" fill="rgb(251,169,8)"/><text x="44.00" y="1294.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1300" width="3" height="15" fill="rgb(229,50,42)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="68" width="36" height="15" fill="rgb(250,62,21)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="84" width="36" height="15" fill="rgb(205,80,45)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="100" width="36" height="15" fill="rgb(240,198,21)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 3.09%)</title><rect x="10" y="116" width="36" height="15" fill="rgb(244,112,10)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="132" width="36" height="15" fill="rgb(250,43,21)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (16 samples, 3.09%)</title><rect x="10" y="148" width="36" height="15" fill="rgb(222,60,42)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="164" width="36" height="15" fill="rgb(235,218,19)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.09%)</title><rect x="10" y="180" width="36" height="15" fill="rgb(208,137,54)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="196" width="16" height="15" fill="rgb(212,201,1)"/><text x="33.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.35%)</title><rect x="30" y="212" width="16" height="15" fill="rgb(241,146,7)"/><text x="33.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="228" width="16" height="15" fill="rgb(217,111,45)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.35%)</title><rect x="30" y="244" width="16" height="15" fill="rgb(247,87,32)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="260" width="16" height="15" fill="rgb(235,61,2)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="276" width="16" height="15" fill="rgb(235,155,31)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="292" width="16" height="15" fill="rgb(243,58,32)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.35%)</title><rect x="30" y="308" width="16" height="15" fill="rgb(207,190,37)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.35%)</title><rect x="30" y="324" width="16" height="15" fill="rgb(235,111,39)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.39%)</title><rect x="41" y="340" width="5" height="15" fill="rgb(250,107,50)"/><text x="44.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="356" width="5" height="15" fill="rgb(231,37,1)"/><text x="44.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="372" width="5" height="15" fill="rgb(253,95,1)"/><text x="44.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="388" width="5" height="15" fill="rgb(239,50,17)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="404" width="5" height="15" fill="rgb(227,174,32)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="420" width="5" height="15" fill="rgb(220,98,25)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="436" width="5" height="15" fill="rgb(211,217,27)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="41" y="452" width="5" height="15" fill="rgb(238,165,29)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="468" width="5" height="15" fill="rgb(229,12,49)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.39%)</title><rect x="41" y="484" width="5" height="15" fill="rgb(239,5,40)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="500" width="5" height="15" fill="rgb(245,138,26)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="516" width="5" height="15" fill="rgb(243,141,30)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="532" width="5" height="15" fill="rgb(227,172,13)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="41" y="548" width="5" height="15" fill="rgb(214,90,36)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="564" width="5" height="15" fill="rgb(212,101,39)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.39%)</title><rect x="41" y="580" width="5" height="15" fill="rgb(253,194,42)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="596" width="5" height="15" fill="rgb(216,150,29)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="41" y="612" width="5" height="15" fill="rgb(214,76,28)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="628" width="2" height="15" fill="rgb(231,106,10)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="44" y="644" width="2" height="15" fill="rgb(220,208,22)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="660" width="2" height="15" fill="rgb(238,93,51)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.19%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(235,12,50)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(253,74,34)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(217,218,42)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(218,47,22)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(219,87,20)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(227,107,14)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.19%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(215,121,39)"/><text x="47.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.19%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(236,32,22)"/><text x="47.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.19%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(206,114,0)"/><text x="47.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.19%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(232,27,37)"/><text x="47.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(252,95,52)"/><text x="47.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(206,87,29)"/><text x="47.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(216,216,51)"/><text x="47.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(208,56,33)"/><text x="47.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(236,82,44)"/><text x="47.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(254,26,9)"/><text x="47.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.19%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(221,8,6)"/><text x="47.00" y="942.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="46" y="292" width="2" height="15" fill="rgb(246,146,46)"/><text x="49.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="51" y="340" width="4" height="15" fill="rgb(222,90,8)"/><text x="54.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="51" y="356" width="4" height="15" fill="rgb(232,96,10)"/><text x="54.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="51" y="372" width="4" height="15" fill="rgb(241,10,9)"/><text x="54.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="340" width="2" height="15" fill="rgb(253,115,32)"/><text x="58.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="356" width="2" height="15" fill="rgb(228,132,17)"/><text x="58.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="372" width="2" height="15" fill="rgb(224,167,47)"/><text x="58.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="388" width="2" height="15" fill="rgb(230,152,9)"/><text x="58.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="404" width="2" height="15" fill="rgb(251,155,52)"/><text x="58.00" y="414.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="55" y="420" width="2" height="15" fill="rgb(250,186,37)"/><text x="58.00" y="430.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="57" y="340" width="3" height="15" fill="rgb(222,22,3)"/><text x="60.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="57" y="356" width="3" height="15" fill="rgb(231,126,47)"/><text x="60.00" y="366.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="340" width="2" height="15" fill="rgb(248,160,14)"/><text x="63.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="356" width="2" height="15" fill="rgb(253,106,35)"/><text x="63.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="372" width="2" height="15" fill="rgb(217,149,1)"/><text x="63.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="388" width="2" height="15" fill="rgb(233,157,54)"/><text x="63.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="404" width="2" height="15" fill="rgb(251,178,27)"/><text x="63.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="420" width="2" height="15" fill="rgb(205,139,50)"/><text x="63.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="60" y="436" width="2" height="15" fill="rgb(247,3,42)"/><text x="63.00" y="446.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="340" width="2" height="15" fill="rgb(244,11,49)"/><text x="65.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="356" width="2" height="15" fill="rgb(206,36,5)"/><text x="65.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="372" width="2" height="15" fill="rgb(225,82,34)"/><text x="65.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="388" width="2" height="15" fill="rgb(229,111,51)"/><text x="65.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="404" width="2" height="15" fill="rgb(252,34,31)"/><text x="65.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="420" width="2" height="15" fill="rgb(241,74,15)"/><text x="65.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="62" y="436" width="2" height="15" fill="rgb(208,5,19)"/><text x="65.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="62" y="452" width="2" height="15" fill="rgb(238,27,33)"/><text x="65.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="62" y="468" width="2" height="15" fill="rgb(210,2,10)"/><text x="65.00" y="478.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="340" width="3" height="15" fill="rgb(246,147,7)"/><text x="67.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="356" width="3" height="15" fill="rgb(211,165,15)"/><text x="67.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="372" width="3" height="15" fill="rgb(220,32,2)"/><text x="67.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="388" width="3" height="15" fill="rgb(242,108,51)"/><text x="67.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="64" y="404" width="3" height="15" fill="rgb(222,115,11)"/><text x="67.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="64" y="420" width="3" height="15" fill="rgb(219,163,24)"/><text x="67.00" y="430.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(232,121,4)"/><text x="70.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="356" width="2" height="15" fill="rgb(206,30,6)"/><text x="70.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="372" width="2" height="15" fill="rgb(223,119,9)"/><text x="70.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="388" width="2" height="15" fill="rgb(241,78,50)"/><text x="70.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="404" width="2" height="15" fill="rgb(224,97,27)"/><text x="70.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="420" width="2" height="15" fill="rgb(234,162,47)"/><text x="70.00" y="430.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="436" width="2" height="15" fill="rgb(217,195,10)"/><text x="70.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="452" width="2" height="15" fill="rgb(225,80,18)"/><text x="70.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="356" width="2" height="15" fill="rgb(208,132,10)"/><text x="72.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="372" width="2" height="15" fill="rgb(245,106,37)"/><text x="72.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="388" width="2" height="15" fill="rgb(205,50,50)"/><text x="72.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="404" width="2" height="15" fill="rgb(210,185,28)"/><text x="72.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="420" width="2" height="15" fill="rgb(251,70,47)"/><text x="72.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="436" width="2" height="15" fill="rgb(205,35,19)"/><text x="72.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="452" width="2" height="15" fill="rgb(240,211,12)"/><text x="72.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="468" width="2" height="15" fill="rgb(225,169,40)"/><text x="72.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="69" y="484" width="2" height="15" fill="rgb(237,10,3)"/><text x="72.00" y="494.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (12 samples, 2.32%)</title><rect x="46" y="100" width="27" height="15" fill="rgb(231,7,1)"/><text x="49.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.32%)</title><rect x="46" y="116" width="27" height="15" fill="rgb(229,111,45)"/><text x="49.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.32%)</title><rect x="46" y="132" width="27" height="15" fill="rgb(223,192,22)"/><text x="49.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.32%)</title><rect x="46" y="148" width="27" height="15" fill="rgb(214,78,21)"/><text x="49.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.32%)</title><rect x="46" y="164" width="27" height="15" fill="rgb(249,185,28)"/><text x="49.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (12 samples, 2.32%)</title><rect x="46" y="180" width="27" height="15" fill="rgb(244,72,13)"/><text x="49.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py) (12 samples, 2.32%)</title><rect x="46" y="196" width="27" height="15" fill="rgb(253,2,13)"/><text x="49.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.32%)</title><rect x="46" y="212" width="27" height="15" fill="rgb(229,121,36)"/><text x="49.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.32%)</title><rect x="46" y="228" width="27" height="15" fill="rgb(246,0,43)"/><text x="49.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.32%)</title><rect x="46" y="244" width="27" height="15" fill="rgb(234,190,45)"/><text x="49.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.32%)</title><rect x="46" y="260" width="27" height="15" fill="rgb(217,100,23)"/><text x="49.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 2.32%)</title><rect x="46" y="276" width="27" height="15" fill="rgb(224,175,35)"/><text x="49.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.13%)</title><rect x="48" y="292" width="25" height="15" fill="rgb(237,221,35)"/><text x="51.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.13%)</title><rect x="48" y="308" width="25" height="15" fill="rgb(228,221,14)"/><text x="51.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.13%)</title><rect x="48" y="324" width="25" height="15" fill="rgb(218,222,53)"/><text x="51.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="69" y="340" width="4" height="15" fill="rgb(236,148,36)"/><text x="72.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="71" y="356" width="2" height="15" fill="rgb(221,89,30)"/><text x="74.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="71" y="372" width="2" height="15" fill="rgb(235,138,42)"/><text x="74.00" y="382.50"></text></g><g><title>0x7fabe1f6cf24 (?) (1 samples, 0.19%)</title><rect x="73" y="564" width="3" height="15" fill="rgb(230,118,22)"/><text x="76.00" y="574.50"></text></g><g><title>0x7fabe1f523d9 (?) (1 samples, 0.19%)</title><rect x="73" y="580" width="3" height="15" fill="rgb(218,207,50)"/><text x="76.00" y="590.50"></text></g><g><title>0x7fabe1f69d0f (?) (1 samples, 0.19%)</title><rect x="73" y="596" width="3" height="15" fill="rgb(218,70,32)"/><text x="76.00" y="606.50"></text></g><g><title>0x7fabe1f4827d (?) (1 samples, 0.19%)</title><rect x="73" y="612" width="3" height="15" fill="rgb(223,77,20)"/><text x="76.00" y="622.50"></text></g><g><title>0x7fabe1f614d6 (?) (1 samples, 0.19%)</title><rect x="73" y="628" width="3" height="15" fill="rgb(251,141,33)"/><text x="76.00" y="638.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (14 samples, 2.71%)</title><rect x="46" y="68" width="32" height="15" fill="rgb(235,177,0)"/><text x="49.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (14 samples, 2.71%)</title><rect x="46" y="84" width="32" height="15" fill="rgb(254,187,12)"/><text x="49.00" y="94.50">se..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="73" y="100" width="5" height="15" fill="rgb(209,85,28)"/><text x="76.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="73" y="116" width="5" height="15" fill="rgb(212,165,20)"/><text x="76.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="73" y="132" width="5" height="15" fill="rgb(206,148,53)"/><text x="76.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.39%)</title><rect x="73" y="148" width="5" height="15" fill="rgb(225,128,28)"/><text x="76.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.39%)</title><rect x="73" y="164" width="5" height="15" fill="rgb(212,66,39)"/><text x="76.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="180" width="5" height="15" fill="rgb(237,89,35)"/><text x="76.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="196" width="5" height="15" fill="rgb(229,145,33)"/><text x="76.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="212" width="5" height="15" fill="rgb(251,156,33)"/><text x="76.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="73" y="228" width="5" height="15" fill="rgb(239,3,7)"/><text x="76.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="244" width="5" height="15" fill="rgb(215,70,51)"/><text x="76.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.39%)</title><rect x="73" y="260" width="5" height="15" fill="rgb(213,77,10)"/><text x="76.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="276" width="5" height="15" fill="rgb(238,12,29)"/><text x="76.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="292" width="5" height="15" fill="rgb(237,76,16)"/><text x="76.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="308" width="5" height="15" fill="rgb(205,155,15)"/><text x="76.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="73" y="324" width="5" height="15" fill="rgb(236,34,49)"/><text x="76.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="340" width="5" height="15" fill="rgb(246,89,17)"/><text x="76.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.39%)</title><rect x="73" y="356" width="5" height="15" fill="rgb(233,168,49)"/><text x="76.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="372" width="5" height="15" fill="rgb(233,1,22)"/><text x="76.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="388" width="5" height="15" fill="rgb(210,196,47)"/><text x="76.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="404" width="5" height="15" fill="rgb(228,63,1)"/><text x="76.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="73" y="420" width="5" height="15" fill="rgb(219,67,39)"/><text x="76.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="436" width="5" height="15" fill="rgb(240,103,32)"/><text x="76.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.39%)</title><rect x="73" y="452" width="5" height="15" fill="rgb(240,187,50)"/><text x="76.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="468" width="5" height="15" fill="rgb(218,113,25)"/><text x="76.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="484" width="5" height="15" fill="rgb(234,225,24)"/><text x="76.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="500" width="5" height="15" fill="rgb(245,1,23)"/><text x="76.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="516" width="5" height="15" fill="rgb(207,160,42)"/><text x="76.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.39%)</title><rect x="73" y="532" width="5" height="15" fill="rgb(243,124,39)"/><text x="76.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="73" y="548" width="5" height="15" fill="rgb(215,96,48)"/><text x="76.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="564" width="2" height="15" fill="rgb(239,52,50)"/><text x="79.00" y="574.50"></text></g><g><title>0x7fac2252e995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="580" width="2" height="15" fill="rgb(243,114,45)"/><text x="79.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="596" width="2" height="15" fill="rgb(211,100,8)"/><text x="79.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="612" width="2" height="15" fill="rgb(210,158,18)"/><text x="79.00" y="622.50"></text></g><g><title>0x7fac2252e258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="628" width="2" height="15" fill="rgb(212,7,40)"/><text x="79.00" y="638.50"></text></g><g><title>0x7fac2257bd7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="644" width="2" height="15" fill="rgb(220,147,26)"/><text x="79.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="660" width="2" height="15" fill="rgb(237,176,38)"/><text x="79.00" y="670.50"></text></g><g><title>0x7fac2257c345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="676" width="2" height="15" fill="rgb(218,171,37)"/><text x="79.00" y="686.50"></text></g><g><title>0x7fac22574fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="692" width="2" height="15" fill="rgb(217,211,9)"/><text x="79.00" y="702.50"></text></g><g><title>0x7fac22573494 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="708" width="2" height="15" fill="rgb(244,166,47)"/><text x="79.00" y="718.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.58%)</title><rect x="201" y="196" width="7" height="15" fill="rgb(217,113,27)"/><text x="204.00" y="206.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="229" y="292" width="2" height="15" fill="rgb(236,4,29)"/><text x="232.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.39%)</title><rect x="229" y="212" width="4" height="15" fill="rgb(215,95,7)"/><text x="232.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.39%)</title><rect x="229" y="228" width="4" height="15" fill="rgb(225,198,38)"/><text x="232.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.39%)</title><rect x="229" y="244" width="4" height="15" fill="rgb(215,141,39)"/><text x="232.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.39%)</title><rect x="229" y="260" width="4" height="15" fill="rgb(246,171,28)"/><text x="232.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.39%)</title><rect x="229" y="276" width="4" height="15" fill="rgb(242,92,20)"/><text x="232.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="231" y="292" width="2" height="15" fill="rgb(237,115,1)"/><text x="234.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="231" y="308" width="2" height="15" fill="rgb(221,58,1)"/><text x="234.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.19%)</title><rect x="233" y="212" width="2" height="15" fill="rgb(210,52,4)"/><text x="236.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="233" y="228" width="2" height="15" fill="rgb(205,24,51)"/><text x="236.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="233" y="244" width="2" height="15" fill="rgb(229,84,2)"/><text x="236.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="233" y="260" width="2" height="15" fill="rgb(235,151,11)"/><text x="236.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="233" y="276" width="2" height="15" fill="rgb(235,154,22)"/><text x="236.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="233" y="292" width="2" height="15" fill="rgb(249,79,54)"/><text x="236.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.19%)</title><rect x="233" y="308" width="2" height="15" fill="rgb(225,38,44)"/><text x="236.00" y="318.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="233" y="324" width="2" height="15" fill="rgb(234,222,27)"/><text x="236.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.39%)</title><rect x="245" y="244" width="4" height="15" fill="rgb(241,64,20)"/><text x="248.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.19%)</title><rect x="247" y="260" width="2" height="15" fill="rgb(241,22,7)"/><text x="250.00" y="270.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.19%)</title><rect x="249" y="292" width="2" height="15" fill="rgb(207,156,51)"/><text x="252.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (8 samples, 1.55%)</title><rect x="235" y="212" width="19" height="15" fill="rgb(251,50,50)"/><text x="238.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (7 samples, 1.35%)</title><rect x="238" y="228" width="16" height="15" fill="rgb(235,140,14)"/><text x="241.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.39%)</title><rect x="249" y="244" width="5" height="15" fill="rgb(246,194,0)"/><text x="252.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.39%)</title><rect x="249" y="260" width="5" height="15" fill="rgb(228,211,21)"/><text x="252.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="249" y="276" width="5" height="15" fill="rgb(236,135,1)"/><text x="252.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="251" y="292" width="3" height="15" fill="rgb(219,124,21)"/><text x="254.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="251" y="308" width="3" height="15" fill="rgb(224,217,44)"/><text x="254.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="251" y="324" width="3" height="15" fill="rgb(246,127,10)"/><text x="254.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.19%)</title><rect x="277" y="244" width="2" height="15" fill="rgb(217,227,43)"/><text x="280.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.58%)</title><rect x="281" y="260" width="7" height="15" fill="rgb(205,153,10)"/><text x="284.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="283" y="276" width="5" height="15" fill="rgb(247,23,33)"/><text x="286.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.39%)</title><rect x="283" y="292" width="5" height="15" fill="rgb(248,17,47)"/><text x="286.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="286" y="308" width="2" height="15" fill="rgb(250,189,24)"/><text x="289.00" y="318.50"></text></g><g><title>0x7fac22384151 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="286" y="324" width="2" height="15" fill="rgb(237,89,47)"/><text x="289.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.39%)</title><rect x="290" y="292" width="5" height="15" fill="rgb(214,19,21)"/><text x="293.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.19%)</title><rect x="293" y="308" width="2" height="15" fill="rgb(240,54,5)"/><text x="296.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.19%)</title><rect x="293" y="324" width="2" height="15" fill="rgb(238,152,36)"/><text x="296.00" y="334.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="293" y="340" width="2" height="15" fill="rgb(227,222,38)"/><text x="296.00" y="350.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.58%)</title><rect x="290" y="276" width="7" height="15" fill="rgb(216,93,23)"/><text x="293.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="295" y="292" width="2" height="15" fill="rgb(216,196,12)"/><text x="298.00" y="302.50"></text></g><g><title>FLOAT_multiply (loops.c.src) (1 samples, 0.19%)</title><rect x="299" y="308" width="3" height="15" fill="rgb(236,163,9)"/><text x="302.00" y="318.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="304" y="340" width="2" height="15" fill="rgb(217,14,18)"/><text x="307.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.19%)</title><rect x="304" y="356" width="2" height="15" fill="rgb(253,197,12)"/><text x="307.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="306" y="388" width="2" height="15" fill="rgb(242,167,33)"/><text x="309.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 0.77%)</title><rect x="302" y="324" width="9" height="15" fill="rgb(206,181,46)"/><text x="305.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.39%)</title><rect x="306" y="340" width="5" height="15" fill="rgb(230,63,41)"/><text x="309.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.39%)</title><rect x="306" y="356" width="5" height="15" fill="rgb(239,188,0)"/><text x="309.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.39%)</title><rect x="306" y="372" width="5" height="15" fill="rgb(227,221,41)"/><text x="309.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="308" y="388" width="3" height="15" fill="rgb(243,6,43)"/><text x="311.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="308" y="404" width="3" height="15" fill="rgb(252,109,0)"/><text x="311.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="308" y="420" width="3" height="15" fill="rgb(237,101,18)"/><text x="311.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (4 samples, 0.77%)</title><rect x="311" y="324" width="9" height="15" fill="rgb(253,53,0)"/><text x="314.00" y="334.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.19%)</title><rect x="318" y="340" width="2" height="15" fill="rgb(228,5,16)"/><text x="321.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="320" y="356" width="2" height="15" fill="rgb(213,4,21)"/><text x="323.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (10 samples, 1.93%)</title><rect x="302" y="308" width="22" height="15" fill="rgb(248,163,9)"/><text x="305.00" y="318.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.39%)</title><rect x="320" y="324" width="4" height="15" fill="rgb(211,109,31)"/><text x="323.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.39%)</title><rect x="320" y="340" width="4" height="15" fill="rgb(207,62,25)"/><text x="323.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="322" y="356" width="2" height="15" fill="rgb(238,202,11)"/><text x="325.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.19%)</title><rect x="324" y="308" width="3" height="15" fill="rgb(214,174,5)"/><text x="327.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="324" y="324" width="3" height="15" fill="rgb(245,60,10)"/><text x="327.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="324" y="340" width="3" height="15" fill="rgb(210,94,24)"/><text x="327.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (14 samples, 2.71%)</title><rect x="297" y="276" width="32" height="15" fill="rgb(232,111,44)"/><text x="300.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 2.51%)</title><rect x="299" y="292" width="30" height="15" fill="rgb(213,15,36)"/><text x="302.00" y="302.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="327" y="308" width="2" height="15" fill="rgb(214,12,4)"/><text x="330.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.58%)</title><rect x="329" y="276" width="7" height="15" fill="rgb(247,98,28)"/><text x="332.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.19%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(219,1,45)"/><text x="337.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 4.26%)</title><rect x="288" y="260" width="50" height="15" fill="rgb(237,163,13)"/><text x="291.00" y="270.50">PyUFu..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="336" y="276" width="2" height="15" fill="rgb(237,131,24)"/><text x="339.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (34 samples, 6.58%)</title><rect x="263" y="228" width="77" height="15" fill="rgb(213,42,45)"/><text x="266.00" y="238.50">_run (ml..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 5.22%)</title><rect x="279" y="244" width="61" height="15" fill="rgb(222,96,22)"/><text x="282.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="338" y="260" width="2" height="15" fill="rgb(250,57,32)"/><text x="341.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="343" y="260" width="2" height="15" fill="rgb(254,177,19)"/><text x="346.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="343" y="276" width="2" height="15" fill="rgb(209,9,36)"/><text x="346.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="343" y="292" width="2" height="15" fill="rgb(244,12,41)"/><text x="346.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="345" y="276" width="5" height="15" fill="rgb(254,16,37)"/><text x="348.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="345" y="292" width="5" height="15" fill="rgb(252,157,49)"/><text x="348.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.19%)</title><rect x="347" y="308" width="3" height="15" fill="rgb(205,197,10)"/><text x="350.00" y="318.50"></text></g><g><title>0x7fac22428964 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="347" y="324" width="3" height="15" fill="rgb(231,59,13)"/><text x="350.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.39%)</title><rect x="350" y="276" width="4" height="15" fill="rgb(219,84,29)"/><text x="353.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.39%)</title><rect x="350" y="292" width="4" height="15" fill="rgb(252,18,28)"/><text x="353.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="356" y="308" width="3" height="15" fill="rgb(211,145,5)"/><text x="359.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.35%)</title><rect x="345" y="260" width="16" height="15" fill="rgb(235,117,49)"/><text x="348.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.58%)</title><rect x="354" y="276" width="7" height="15" fill="rgb(218,172,16)"/><text x="357.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="356" y="292" width="5" height="15" fill="rgb(240,164,53)"/><text x="359.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="359" y="308" width="2" height="15" fill="rgb(228,133,20)"/><text x="362.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (10 samples, 1.93%)</title><rect x="340" y="228" width="23" height="15" fill="rgb(232,5,50)"/><text x="343.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.74%)</title><rect x="343" y="244" width="20" height="15" fill="rgb(211,2,41)"/><text x="346.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="361" y="260" width="2" height="15" fill="rgb(243,185,4)"/><text x="364.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.58%)</title><rect x="382" y="324" width="6" height="15" fill="rgb(219,121,35)"/><text x="385.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.58%)</title><rect x="382" y="340" width="6" height="15" fill="rgb(226,41,43)"/><text x="385.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.58%)</title><rect x="382" y="356" width="6" height="15" fill="rgb(247,58,41)"/><text x="385.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.58%)</title><rect x="382" y="372" width="6" height="15" fill="rgb(246,23,3)"/><text x="385.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.58%)</title><rect x="382" y="388" width="6" height="15" fill="rgb(238,181,10)"/><text x="385.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="393" y="372" width="5" height="15" fill="rgb(224,120,54)"/><text x="396.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.39%)</title><rect x="393" y="388" width="5" height="15" fill="rgb(237,82,6)"/><text x="396.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (2 samples, 0.39%)</title><rect x="393" y="404" width="5" height="15" fill="rgb(217,131,12)"/><text x="396.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (2 samples, 0.39%)</title><rect x="393" y="420" width="5" height="15" fill="rgb(214,70,4)"/><text x="396.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (16 samples, 3.09%)</title><rect x="363" y="228" width="37" height="15" fill="rgb(207,122,45)"/><text x="366.00" y="238.50">_ru..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (15 samples, 2.90%)</title><rect x="366" y="244" width="34" height="15" fill="rgb(213,214,43)"/><text x="369.00" y="254.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (14 samples, 2.71%)</title><rect x="368" y="260" width="32" height="15" fill="rgb(241,21,34)"/><text x="371.00" y="270.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py) (12 samples, 2.32%)</title><rect x="372" y="276" width="28" height="15" fill="rgb(217,128,33)"/><text x="375.00" y="286.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (11 samples, 2.13%)</title><rect x="375" y="292" width="25" height="15" fill="rgb(232,77,15)"/><text x="378.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (8 samples, 1.55%)</title><rect x="382" y="308" width="18" height="15" fill="rgb(218,0,36)"/><text x="385.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 0.97%)</title><rect x="388" y="324" width="12" height="15" fill="rgb(218,154,13)"/><text x="391.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.58%)</title><rect x="393" y="340" width="7" height="15" fill="rgb(209,122,41)"/><text x="396.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 0.58%)</title><rect x="393" y="356" width="7" height="15" fill="rgb(239,58,42)"/><text x="396.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="398" y="372" width="2" height="15" fill="rgb(225,16,19)"/><text x="401.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="398" y="388" width="2" height="15" fill="rgb(224,82,44)"/><text x="401.00" y="398.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="398" y="404" width="2" height="15" fill="rgb(225,66,53)"/><text x="401.00" y="414.50"></text></g><g><title>0x7fabe2e04422 (?) (1 samples, 0.19%)</title><rect x="400" y="244" width="2" height="15" fill="rgb(208,178,0)"/><text x="403.00" y="254.50"></text></g><g><title>0x7fabe2e0a89e (?) (1 samples, 0.19%)</title><rect x="400" y="260" width="2" height="15" fill="rgb(249,44,52)"/><text x="403.00" y="270.50"></text></g><g><title>0x7fabe2e0a74f (?) (1 samples, 0.19%)</title><rect x="400" y="276" width="2" height="15" fill="rgb(210,110,10)"/><text x="403.00" y="286.50"></text></g><g><title>0x7fabe2e10a3a (?) (1 samples, 0.19%)</title><rect x="400" y="292" width="2" height="15" fill="rgb(227,216,26)"/><text x="403.00" y="302.50"></text></g><g><title>0x7fabec262cfa (?) (1 samples, 0.19%)</title><rect x="400" y="308" width="2" height="15" fill="rgb(247,132,18)"/><text x="403.00" y="318.50"></text></g><g><title>0x7fabec26bdaa (?) (1 samples, 0.19%)</title><rect x="400" y="324" width="2" height="15" fill="rgb(239,114,51)"/><text x="403.00" y="334.50"></text></g><g><title>0x7fabec26dcf9 (?) (1 samples, 0.19%)</title><rect x="400" y="340" width="2" height="15" fill="rgb(251,68,22)"/><text x="403.00" y="350.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.19%)</title><rect x="402" y="244" width="2" height="15" fill="rgb(220,107,45)"/><text x="405.00" y="254.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.19%)</title><rect x="404" y="436" width="3" height="15" fill="rgb(216,37,33)"/><text x="407.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.19%)</title><rect x="404" y="452" width="3" height="15" fill="rgb(232,41,29)"/><text x="407.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.19%)</title><rect x="404" y="468" width="3" height="15" fill="rgb(238,120,26)"/><text x="407.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.19%)</title><rect x="404" y="484" width="3" height="15" fill="rgb(242,224,1)"/><text x="407.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.19%)</title><rect x="404" y="500" width="3" height="15" fill="rgb(218,121,47)"/><text x="407.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.19%)</title><rect x="404" y="516" width="3" height="15" fill="rgb(220,147,39)"/><text x="407.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.19%)</title><rect x="404" y="532" width="3" height="15" fill="rgb(231,125,24)"/><text x="407.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.19%)</title><rect x="404" y="548" width="3" height="15" fill="rgb(239,59,14)"/><text x="407.00" y="558.50"></text></g><g><title>pybind11::array::c_strides (numpy.h) (1 samples, 0.19%)</title><rect x="404" y="564" width="3" height="15" fill="rgb(231,127,41)"/><text x="407.00" y="574.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h) (1 samples, 0.19%)</title><rect x="404" y="580" width="3" height="15" fill="rgb(233,28,15)"/><text x="407.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 0.19%)</title><rect x="404" y="596" width="3" height="15" fill="rgb(214,163,7)"/><text x="407.00" y="606.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_create_storage (stl_vector.h) (1 samples, 0.19%)</title><rect x="404" y="612" width="3" height="15" fill="rgb(247,31,47)"/><text x="407.00" y="622.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.19%)</title><rect x="404" y="628" width="3" height="15" fill="rgb(230,166,50)"/><text x="407.00" y="638.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.19%)</title><rect x="404" y="644" width="3" height="15" fill="rgb(233,117,28)"/><text x="407.00" y="654.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h) (1 samples, 0.19%)</title><rect x="404" y="660" width="3" height="15" fill="rgb(206,137,11)"/><text x="407.00" y="670.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="404" y="676" width="3" height="15" fill="rgb(249,77,45)"/><text x="407.00" y="686.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="404" y="692" width="3" height="15" fill="rgb(241,110,38)"/><text x="407.00" y="702.50"></text></g><g><title>0x7fabec26dea0 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="407" y="468" width="2" height="15" fill="rgb(220,225,24)"/><text x="410.00" y="478.50"></text></g><g><title>0x7fabec26dea9 (libgomp.so.1.0.0) (8 samples, 1.55%)</title><rect x="409" y="468" width="18" height="15" fill="rgb(252,18,0)"/><text x="412.00" y="478.50"></text></g><g><title>0x7fabec26deab (libgomp.so.1.0.0) (7 samples, 1.35%)</title><rect x="427" y="468" width="16" height="15" fill="rgb(236,222,51)"/><text x="430.00" y="478.50"></text></g><g><title>0x7fabec26cab9 (libgomp.so.1.0.0) (23 samples, 4.45%)</title><rect x="407" y="452" width="52" height="15" fill="rgb(244,127,20)"/><text x="410.00" y="462.50">0x7fa..</text></g><g><title>0x7fabec26dead (libgomp.so.1.0.0) (7 samples, 1.35%)</title><rect x="443" y="468" width="16" height="15" fill="rgb(205,68,50)"/><text x="446.00" y="478.50"></text></g><g><title>0x7fabec26dcf9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="459" y="484" width="2" height="15" fill="rgb(212,15,32)"/><text x="462.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (112 samples, 21.66%)</title><rect x="208" y="196" width="256" height="15" fill="rgb(208,134,22)"/><text x="211.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (92 samples, 17.79%)</title><rect x="254" y="212" width="210" height="15" fill="rgb(212,93,20)"/><text x="257.00" y="222.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (28 samples, 5.42%)</title><rect x="400" y="228" width="64" height="15" fill="rgb(252,11,29)"/><text x="403.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (26 samples, 5.03%)</title><rect x="404" y="244" width="60" height="15" fill="rgb(230,215,32)"/><text x="407.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (26 samples, 5.03%)</title><rect x="404" y="260" width="60" height="15" fill="rgb(239,71,1)"/><text x="407.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (26 samples, 5.03%)</title><rect x="404" y="276" width="60" height="15" fill="rgb(233,18,6)"/><text x="407.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (26 samples, 5.03%)</title><rect x="404" y="292" width="60" height="15" fill="rgb(246,115,23)"/><text x="407.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (26 samples, 5.03%)</title><rect x="404" y="308" width="60" height="15" fill="rgb(227,76,18)"/><text x="407.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (26 samples, 5.03%)</title><rect x="404" y="324" width="60" height="15" fill="rgb(209,10,20)"/><text x="407.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (26 samples, 5.03%)</title><rect x="404" y="340" width="60" height="15" fill="rgb(215,196,8)"/><text x="407.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (26 samples, 5.03%)</title><rect x="404" y="356" width="60" height="15" fill="rgb(241,180,12)"/><text x="407.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (26 samples, 5.03%)</title><rect x="404" y="372" width="60" height="15" fill="rgb(210,147,10)"/><text x="407.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (26 samples, 5.03%)</title><rect x="404" y="388" width="60" height="15" fill="rgb(225,151,28)"/><text x="407.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (26 samples, 5.03%)</title><rect x="404" y="404" width="60" height="15" fill="rgb(209,5,21)"/><text x="407.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (26 samples, 5.03%)</title><rect x="404" y="420" width="60" height="15" fill="rgb(241,66,47)"/><text x="407.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (25 samples, 4.84%)</title><rect x="407" y="436" width="57" height="15" fill="rgb(221,110,8)"/><text x="410.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="459" y="452" width="5" height="15" fill="rgb(225,77,21)"/><text x="462.00" y="462.50"></text></g><g><title>0x7fabec26bdaa (libgomp.so.1.0.0) (2 samples, 0.39%)</title><rect x="459" y="468" width="5" height="15" fill="rgb(221,45,39)"/><text x="462.00" y="478.50"></text></g><g><title>0x7fabec26dcfd (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="461" y="484" width="3" height="15" fill="rgb(222,146,48)"/><text x="464.00" y="494.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="471" y="228" width="2" height="15" fill="rgb(232,100,53)"/><text x="474.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="471" y="244" width="2" height="15" fill="rgb(254,155,3)"/><text x="474.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="471" y="260" width="2" height="15" fill="rgb(232,78,6)"/><text x="474.00" y="270.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.19%)</title><rect x="471" y="276" width="2" height="15" fill="rgb(243,188,26)"/><text x="474.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.19%)</title><rect x="471" y="292" width="2" height="15" fill="rgb(208,102,8)"/><text x="474.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="471" y="308" width="2" height="15" fill="rgb(246,228,53)"/><text x="474.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="471" y="324" width="2" height="15" fill="rgb(246,142,49)"/><text x="474.00" y="334.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.19%)</title><rect x="473" y="228" width="2" height="15" fill="rgb(237,79,51)"/><text x="476.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="489" y="372" width="2" height="15" fill="rgb(246,198,41)"/><text x="492.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="489" y="388" width="2" height="15" fill="rgb(228,178,32)"/><text x="492.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="489" y="404" width="2" height="15" fill="rgb(238,166,32)"/><text x="492.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.39%)</title><rect x="491" y="404" width="5" height="15" fill="rgb(211,195,10)"/><text x="494.00" y="414.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="493" y="420" width="3" height="15" fill="rgb(234,170,39)"/><text x="496.00" y="430.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.19%)</title><rect x="493" y="436" width="3" height="15" fill="rgb(252,165,19)"/><text x="496.00" y="446.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.58%)</title><rect x="491" y="388" width="7" height="15" fill="rgb(210,211,26)"/><text x="494.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="496" y="404" width="2" height="15" fill="rgb(254,17,28)"/><text x="499.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="496" y="420" width="2" height="15" fill="rgb(206,71,50)"/><text x="499.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="498" y="404" width="2" height="15" fill="rgb(230,1,8)"/><text x="501.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="502" y="436" width="3" height="15" fill="rgb(246,206,8)"/><text x="505.00" y="446.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.39%)</title><rect x="505" y="436" width="4" height="15" fill="rgb(233,144,22)"/><text x="508.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.97%)</title><rect x="500" y="420" width="12" height="15" fill="rgb(205,11,32)"/><text x="503.00" y="430.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.19%)</title><rect x="509" y="436" width="3" height="15" fill="rgb(214,166,37)"/><text x="512.00" y="446.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="512" y="420" width="2" height="15" fill="rgb(206,63,19)"/><text x="515.00" y="430.50"></text></g><g><title>_aligned_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="514" y="468" width="2" height="15" fill="rgb(224,61,35)"/><text x="517.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.74%)</title><rect x="498" y="388" width="20" height="15" fill="rgb(220,22,11)"/><text x="501.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.55%)</title><rect x="500" y="404" width="18" height="15" fill="rgb(218,125,7)"/><text x="503.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.39%)</title><rect x="514" y="420" width="4" height="15" fill="rgb(228,117,51)"/><text x="517.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.39%)</title><rect x="514" y="436" width="4" height="15" fill="rgb(226,83,41)"/><text x="517.00" y="446.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.39%)</title><rect x="514" y="452" width="4" height="15" fill="rgb(214,147,24)"/><text x="517.00" y="462.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="516" y="468" width="2" height="15" fill="rgb(253,63,7)"/><text x="519.00" y="478.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="521" y="420" width="2" height="15" fill="rgb(227,74,2)"/><text x="524.00" y="430.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="521" y="436" width="2" height="15" fill="rgb(242,100,52)"/><text x="524.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.39%)</title><rect x="521" y="404" width="4" height="15" fill="rgb(244,50,43)"/><text x="524.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="523" y="420" width="2" height="15" fill="rgb(214,148,7)"/><text x="526.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (18 samples, 3.48%)</title><rect x="487" y="340" width="41" height="15" fill="rgb(234,38,14)"/><text x="490.00" y="350.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 3.29%)</title><rect x="489" y="356" width="39" height="15" fill="rgb(208,22,23)"/><text x="492.00" y="366.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 3.09%)</title><rect x="491" y="372" width="37" height="15" fill="rgb(216,127,21)"/><text x="494.00" y="382.50">PyU..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 0.77%)</title><rect x="518" y="388" width="10" height="15" fill="rgb(252,32,35)"/><text x="521.00" y="398.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.19%)</title><rect x="525" y="404" width="3" height="15" fill="rgb(253,175,46)"/><text x="528.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.39%)</title><rect x="528" y="340" width="4" height="15" fill="rgb(231,162,16)"/><text x="531.00" y="350.50"></text></g><g><title>0x7fac22384151 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(218,90,44)"/><text x="544.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.97%)</title><rect x="544" y="356" width="11" height="15" fill="rgb(208,194,28)"/><text x="547.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="557" y="404" width="3" height="15" fill="rgb(250,15,40)"/><text x="560.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="557" y="420" width="3" height="15" fill="rgb(210,167,46)"/><text x="560.00" y="430.50"></text></g><g><title>0x7fac222bc730 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="566" y="436" width="3" height="15" fill="rgb(254,27,42)"/><text x="569.00" y="446.50"></text></g><g><title>0x7fac222bc757 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="569" y="436" width="2" height="15" fill="rgb(236,78,6)"/><text x="572.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (8 samples, 1.55%)</title><rect x="555" y="356" width="18" height="15" fill="rgb(242,52,28)"/><text x="558.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 1.35%)</title><rect x="557" y="372" width="16" height="15" fill="rgb(231,193,19)"/><text x="560.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 1.35%)</title><rect x="557" y="388" width="16" height="15" fill="rgb(211,24,8)"/><text x="560.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 1.16%)</title><rect x="560" y="404" width="13" height="15" fill="rgb(232,98,34)"/><text x="563.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 1.16%)</title><rect x="560" y="420" width="13" height="15" fill="rgb(214,0,25)"/><text x="563.00" y="430.50"></text></g><g><title>0x7fac222bce89 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="571" y="436" width="2" height="15" fill="rgb(210,162,4)"/><text x="574.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(246,226,54)"/><text x="579.00" y="398.50"></text></g><g><title>0x7fac214c90a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="576" y="404" width="2" height="15" fill="rgb(231,15,41)"/><text x="579.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.16%)</title><rect x="573" y="372" width="14" height="15" fill="rgb(217,156,45)"/><text x="576.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.77%)</title><rect x="578" y="388" width="9" height="15" fill="rgb(238,161,22)"/><text x="581.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="582" y="404" width="5" height="15" fill="rgb(208,221,20)"/><text x="585.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="585" y="420" width="2" height="15" fill="rgb(205,167,23)"/><text x="588.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="587" y="372" width="5" height="15" fill="rgb(238,222,14)"/><text x="590.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.39%)</title><rect x="587" y="388" width="5" height="15" fill="rgb(239,28,41)"/><text x="590.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.39%)</title><rect x="587" y="404" width="5" height="15" fill="rgb(207,50,25)"/><text x="590.00" y="414.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (225 samples, 43.52%)</title><rect x="80" y="164" width="514" height="15" fill="rgb(226,197,47)"/><text x="83.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (221 samples, 42.75%)</title><rect x="89" y="180" width="505" height="15" fill="rgb(245,153,20)"/><text x="92.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (57 samples, 11.03%)</title><rect x="464" y="196" width="130" height="15" fill="rgb(217,119,18)"/><text x="467.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (56 samples, 10.83%)</title><rect x="466" y="212" width="128" height="15" fill="rgb(247,153,35)"/><text x="469.00" y="222.50">_run (mlprodict/..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (52 samples, 10.06%)</title><rect x="475" y="228" width="119" height="15" fill="rgb(245,44,32)"/><text x="478.00" y="238.50">clip (&lt;__array..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (51 samples, 9.86%)</title><rect x="477" y="244" width="117" height="15" fill="rgb(241,133,33)"/><text x="480.00" y="254.50">array_implemen..</text></g><g><title>clip (numpy/core/fromnumeric.py) (51 samples, 9.86%)</title><rect x="477" y="260" width="117" height="15" fill="rgb(251,136,38)"/><text x="480.00" y="270.50">clip (numpy/co..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (49 samples, 9.48%)</title><rect x="482" y="276" width="112" height="15" fill="rgb(244,134,13)"/><text x="485.00" y="286.50">_wrapfunc (nu..</text></g><g><title>array_clip (methods.c) (49 samples, 9.48%)</title><rect x="482" y="292" width="112" height="15" fill="rgb(234,166,23)"/><text x="485.00" y="302.50">array_clip (m..</text></g><g><title>forward_ndarray_method (methods.c) (49 samples, 9.48%)</title><rect x="482" y="308" width="112" height="15" fill="rgb(225,186,2)"/><text x="485.00" y="318.50">forward_ndarr..</text></g><g><title>_clip (numpy/core/_methods.py) (49 samples, 9.48%)</title><rect x="482" y="324" width="112" height="15" fill="rgb(245,146,23)"/><text x="485.00" y="334.50">_clip (numpy/..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (27 samples, 5.22%)</title><rect x="532" y="340" width="62" height="15" fill="rgb(228,92,51)"/><text x="535.00" y="350.50">_clip_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.74%)</title><rect x="573" y="356" width="21" height="15" fill="rgb(205,201,46)"/><text x="576.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="592" y="372" width="2" height="15" fill="rgb(221,163,24)"/><text x="595.00" y="382.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (228 samples, 44.10%)</title><rect x="78" y="100" width="520" height="15" fill="rgb(245,180,17)"/><text x="81.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (228 samples, 44.10%)</title><rect x="78" y="116" width="520" height="15" fill="rgb(211,179,15)"/><text x="81.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (228 samples, 44.10%)</title><rect x="78" y="132" width="520" height="15" fill="rgb(208,159,38)"/><text x="81.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (227 samples, 43.91%)</title><rect x="80" y="148" width="518" height="15" fill="rgb(207,111,19)"/><text x="83.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="594" y="164" width="4" height="15" fill="rgb(250,126,33)"/><text x="597.00" y="174.50"></text></g><g><title>0x7fac222a6a33 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="596" y="180" width="2" height="15" fill="rgb(239,109,45)"/><text x="599.00" y="190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="212" width="3" height="15" fill="rgb(228,145,19)"/><text x="601.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="228" width="3" height="15" fill="rgb(232,113,35)"/><text x="601.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="244" width="3" height="15" fill="rgb(208,78,13)"/><text x="601.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="598" y="260" width="3" height="15" fill="rgb(227,186,9)"/><text x="601.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="276" width="3" height="15" fill="rgb(216,16,19)"/><text x="601.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.19%)</title><rect x="598" y="292" width="3" height="15" fill="rgb(228,203,19)"/><text x="601.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="308" width="3" height="15" fill="rgb(253,159,24)"/><text x="601.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="324" width="3" height="15" fill="rgb(242,49,20)"/><text x="601.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(220,164,11)"/><text x="601.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="598" y="356" width="3" height="15" fill="rgb(217,7,44)"/><text x="601.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="372" width="3" height="15" fill="rgb(252,43,47)"/><text x="601.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.19%)</title><rect x="598" y="388" width="3" height="15" fill="rgb(236,1,21)"/><text x="601.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="404" width="3" height="15" fill="rgb(218,126,14)"/><text x="601.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="420" width="3" height="15" fill="rgb(207,82,4)"/><text x="601.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="436" width="3" height="15" fill="rgb(219,198,12)"/><text x="601.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="598" y="452" width="3" height="15" fill="rgb(205,126,6)"/><text x="601.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="598" y="468" width="3" height="15" fill="rgb(215,197,26)"/><text x="601.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.19%)</title><rect x="598" y="484" width="3" height="15" fill="rgb(229,110,46)"/><text x="601.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.19%)</title><rect x="598" y="500" width="3" height="15" fill="rgb(220,84,47)"/><text x="601.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="516" width="3" height="15" fill="rgb(237,224,41)"/><text x="601.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="532" width="3" height="15" fill="rgb(248,149,35)"/><text x="601.00" y="542.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;, onnx::OpSchema&gt;::cast&lt;std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="548" width="3" height="15" fill="rgb(218,56,24)"/><text x="601.00" y="558.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast [clone .constprop.1337] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="564" width="3" height="15" fill="rgb(243,215,29)"/><text x="601.00" y="574.50"></text></g><g><title>decltype ((new () onnx::OpSchema((move)(*(const_cast&lt;onnx::OpSchema*&gt;({parm#1}))))),(void* (*)(void const*){})) pybind11::detail::type_caster_base&lt;onnx::OpSchema&gt;::make_move_constructor&lt;onnx::OpSchema, void&gt;(onnx::OpSchema const*)::{lambda(void const*)#1}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="580" width="3" height="15" fill="rgb(249,1,51)"/><text x="601.00" y="590.50"></text></g><g><title>onnx::FunctionProto::FunctionProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="596" width="3" height="15" fill="rgb(244,147,51)"/><text x="601.00" y="606.50"></text></g><g><title>onnx::FunctionProto::MergeFrom (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="612" width="3" height="15" fill="rgb(241,221,18)"/><text x="601.00" y="622.50"></text></g><g><title>onnx::NodeProto::MergeFrom (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="628" width="3" height="15" fill="rgb(217,24,25)"/><text x="601.00" y="638.50"></text></g><g><title>google::protobuf::internal::RepeatedPtrFieldBase::MergeFromInnerLoop&lt;google::protobuf::RepeatedPtrField&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::TypeHandler&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="598" y="644" width="3" height="15" fill="rgb(249,87,52)"/><text x="601.00" y="654.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="598" y="660" width="3" height="15" fill="rgb(237,91,14)"/><text x="601.00" y="670.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="598" y="676" width="3" height="15" fill="rgb(248,152,5)"/><text x="601.00" y="686.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="598" y="132" width="5" height="15" fill="rgb(231,62,26)"/><text x="601.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.39%)</title><rect x="598" y="148" width="5" height="15" fill="rgb(220,179,38)"/><text x="601.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.39%)</title><rect x="598" y="164" width="5" height="15" fill="rgb(213,40,20)"/><text x="601.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.39%)</title><rect x="598" y="180" width="5" height="15" fill="rgb(206,137,32)"/><text x="601.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.39%)</title><rect x="598" y="196" width="5" height="15" fill="rgb(228,131,27)"/><text x="601.00" y="206.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.19%)</title><rect x="601" y="212" width="2" height="15" fill="rgb(212,50,37)"/><text x="604.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_mul.py) (1 samples, 0.19%)</title><rect x="601" y="228" width="2" height="15" fill="rgb(218,68,45)"/><text x="604.00" y="238.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.19%)</title><rect x="601" y="244" width="2" height="15" fill="rgb(219,204,53)"/><text x="604.00" y="254.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.19%)</title><rect x="601" y="260" width="2" height="15" fill="rgb(209,97,21)"/><text x="604.00" y="270.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (1 samples, 0.19%)</title><rect x="603" y="196" width="2" height="15" fill="rgb(227,128,25)"/><text x="606.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.19%)</title><rect x="603" y="212" width="2" height="15" fill="rgb(220,177,43)"/><text x="606.00" y="222.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="603" y="228" width="2" height="15" fill="rgb(228,99,25)"/><text x="606.00" y="238.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.19%)</title><rect x="603" y="244" width="2" height="15" fill="rgb(205,138,29)"/><text x="606.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.19%)</title><rect x="603" y="260" width="2" height="15" fill="rgb(213,190,53)"/><text x="606.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.19%)</title><rect x="603" y="276" width="2" height="15" fill="rgb(215,56,25)"/><text x="606.00" y="286.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (232 samples, 44.87%)</title><rect x="78" y="68" width="529" height="15" fill="rgb(231,78,8)"/><text x="81.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (232 samples, 44.87%)</title><rect x="78" y="84" width="529" height="15" fill="rgb(206,19,20)"/><text x="81.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.77%)</title><rect x="598" y="100" width="9" height="15" fill="rgb(215,198,47)"/><text x="601.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.77%)</title><rect x="598" y="116" width="9" height="15" fill="rgb(235,121,27)"/><text x="601.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.39%)</title><rect x="603" y="132" width="4" height="15" fill="rgb(205,111,13)"/><text x="606.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.39%)</title><rect x="603" y="148" width="4" height="15" fill="rgb(238,165,34)"/><text x="606.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.39%)</title><rect x="603" y="164" width="4" height="15" fill="rgb(218,17,49)"/><text x="606.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.39%)</title><rect x="603" y="180" width="4" height="15" fill="rgb(221,115,20)"/><text x="606.00" y="190.50"></text></g><g><title>make_graph (onnx/helper.py) (1 samples, 0.19%)</title><rect x="605" y="196" width="2" height="15" fill="rgb(216,3,6)"/><text x="608.00" y="206.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="212" width="2" height="15" fill="rgb(227,225,51)"/><text x="608.00" y="222.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="228" width="2" height="15" fill="rgb(210,163,14)"/><text x="608.00" y="238.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="244" width="2" height="15" fill="rgb(249,197,5)"/><text x="608.00" y="254.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="260" width="2" height="15" fill="rgb(222,223,10)"/><text x="608.00" y="270.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="276" width="2" height="15" fill="rgb(242,223,24)"/><text x="608.00" y="286.50"></text></g><g><title>0x7fac1069dc63 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="605" y="292" width="2" height="15" fill="rgb(251,33,7)"/><text x="608.00" y="302.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="610" y="196" width="2" height="15" fill="rgb(224,89,45)"/><text x="613.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="610" y="212" width="2" height="15" fill="rgb(227,150,27)"/><text x="613.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="610" y="228" width="2" height="15" fill="rgb(214,207,5)"/><text x="613.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="610" y="244" width="2" height="15" fill="rgb(226,29,4)"/><text x="613.00" y="254.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="610" y="164" width="4" height="15" fill="rgb(248,7,15)"/><text x="613.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (2 samples, 0.39%)</title><rect x="610" y="180" width="4" height="15" fill="rgb(217,97,39)"/><text x="613.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="612" y="196" width="2" height="15" fill="rgb(246,42,5)"/><text x="615.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="612" y="212" width="2" height="15" fill="rgb(244,72,1)"/><text x="615.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="612" y="228" width="2" height="15" fill="rgb(221,28,15)"/><text x="615.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="612" y="244" width="2" height="15" fill="rgb(252,84,18)"/><text x="615.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="612" y="260" width="2" height="15" fill="rgb(216,137,15)"/><text x="615.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="612" y="276" width="2" height="15" fill="rgb(235,53,17)"/><text x="615.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="612" y="292" width="2" height="15" fill="rgb(240,99,4)"/><text x="615.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.19%)</title><rect x="612" y="308" width="2" height="15" fill="rgb(248,172,40)"/><text x="615.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.19%)</title><rect x="612" y="324" width="2" height="15" fill="rgb(224,50,41)"/><text x="615.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.19%)</title><rect x="612" y="340" width="2" height="15" fill="rgb(251,0,53)"/><text x="615.00" y="350.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="612" y="356" width="2" height="15" fill="rgb(214,169,3)"/><text x="615.00" y="366.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.19%)</title><rect x="614" y="164" width="3" height="15" fill="rgb(218,214,18)"/><text x="617.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="614" y="180" width="3" height="15" fill="rgb(238,219,14)"/><text x="617.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="614" y="196" width="3" height="15" fill="rgb(230,166,22)"/><text x="617.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (3 samples, 0.58%)</title><rect x="630" y="212" width="7" height="15" fill="rgb(225,212,37)"/><text x="633.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.19%)</title><rect x="635" y="228" width="2" height="15" fill="rgb(225,187,8)"/><text x="638.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.19%)</title><rect x="635" y="244" width="2" height="15" fill="rgb(228,3,14)"/><text x="638.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="639" y="228" width="3" height="15" fill="rgb(233,208,44)"/><text x="642.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="639" y="244" width="3" height="15" fill="rgb(250,120,35)"/><text x="642.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.58%)</title><rect x="637" y="212" width="7" height="15" fill="rgb(253,92,48)"/><text x="640.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="642" y="228" width="2" height="15" fill="rgb(205,156,30)"/><text x="645.00" y="238.50"></text></g><g><title>0x7fac222a6991 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="642" y="244" width="2" height="15" fill="rgb(224,158,41)"/><text x="645.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.19%)</title><rect x="644" y="228" width="2" height="15" fill="rgb(223,19,17)"/><text x="647.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="646" y="244" width="3" height="15" fill="rgb(253,205,31)"/><text x="649.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="646" y="260" width="3" height="15" fill="rgb(209,4,32)"/><text x="649.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="646" y="276" width="3" height="15" fill="rgb(224,63,2)"/><text x="649.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="646" y="292" width="3" height="15" fill="rgb(242,96,37)"/><text x="649.00" y="302.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.19%)</title><rect x="646" y="308" width="3" height="15" fill="rgb(248,200,36)"/><text x="649.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="649" y="276" width="2" height="15" fill="rgb(225,173,31)"/><text x="652.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="649" y="292" width="2" height="15" fill="rgb(210,221,13)"/><text x="652.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.19%)</title><rect x="649" y="308" width="2" height="15" fill="rgb(233,34,36)"/><text x="652.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="649" y="260" width="4" height="15" fill="rgb(253,227,54)"/><text x="652.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="651" y="276" width="2" height="15" fill="rgb(206,54,38)"/><text x="654.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="651" y="292" width="2" height="15" fill="rgb(241,189,27)"/><text x="654.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.19%)</title><rect x="651" y="308" width="2" height="15" fill="rgb(208,199,50)"/><text x="654.00" y="318.50"></text></g><g><title>type_num_unsigned_to_signed (convert_datatype.c) (1 samples, 0.19%)</title><rect x="651" y="324" width="2" height="15" fill="rgb(237,114,29)"/><text x="654.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(219,115,50)"/><text x="656.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="653" y="276" width="2" height="15" fill="rgb(229,23,13)"/><text x="656.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.19%)</title><rect x="653" y="292" width="2" height="15" fill="rgb(245,199,47)"/><text x="656.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="653" y="308" width="2" height="15" fill="rgb(208,107,24)"/><text x="656.00" y="318.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.19%)</title><rect x="653" y="324" width="2" height="15" fill="rgb(252,87,36)"/><text x="656.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="655" y="260" width="3" height="15" fill="rgb(217,205,0)"/><text x="658.00" y="270.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="655" y="276" width="3" height="15" fill="rgb(230,24,30)"/><text x="658.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.39%)</title><rect x="658" y="260" width="4" height="15" fill="rgb(214,7,53)"/><text x="661.00" y="270.50"></text></g><g><title>array_multiply (number.c) (9 samples, 1.74%)</title><rect x="644" y="212" width="21" height="15" fill="rgb(244,44,30)"/><text x="647.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.55%)</title><rect x="646" y="228" width="19" height="15" fill="rgb(222,26,7)"/><text x="649.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.35%)</title><rect x="649" y="244" width="16" height="15" fill="rgb(221,187,42)"/><text x="652.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(215,70,14)"/><text x="665.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(206,84,19)"/><text x="665.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="665" y="212" width="2" height="15" fill="rgb(229,44,32)"/><text x="668.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.19%)</title><rect x="665" y="228" width="2" height="15" fill="rgb(229,126,18)"/><text x="668.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="665" y="244" width="2" height="15" fill="rgb(245,227,13)"/><text x="668.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="665" y="260" width="2" height="15" fill="rgb(208,53,14)"/><text x="668.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="665" y="276" width="2" height="15" fill="rgb(252,12,30)"/><text x="668.00" y="286.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="665" y="292" width="2" height="15" fill="rgb(239,15,21)"/><text x="668.00" y="302.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="665" y="308" width="2" height="15" fill="rgb(246,223,51)"/><text x="668.00" y="318.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 0.19%)</title><rect x="667" y="292" width="2" height="15" fill="rgb(208,62,29)"/><text x="670.00" y="302.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 0.19%)</title><rect x="667" y="308" width="2" height="15" fill="rgb(219,130,7)"/><text x="670.00" y="318.50"></text></g><g><title>sse2_binary_scalar2_subtract_DOUBLE (simd.inc.src) (1 samples, 0.19%)</title><rect x="667" y="324" width="2" height="15" fill="rgb(248,207,54)"/><text x="670.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.39%)</title><rect x="669" y="308" width="5" height="15" fill="rgb(239,16,34)"/><text x="672.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.58%)</title><rect x="669" y="292" width="7" height="15" fill="rgb(235,62,36)"/><text x="672.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.19%)</title><rect x="674" y="308" width="2" height="15" fill="rgb(232,144,41)"/><text x="677.00" y="318.50"></text></g><g><title>array_subtract (number.c) (5 samples, 0.97%)</title><rect x="667" y="212" width="11" height="15" fill="rgb(227,227,9)"/><text x="670.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.97%)</title><rect x="667" y="228" width="11" height="15" fill="rgb(250,113,33)"/><text x="670.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.97%)</title><rect x="667" y="244" width="11" height="15" fill="rgb(232,33,33)"/><text x="670.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.97%)</title><rect x="667" y="260" width="11" height="15" fill="rgb(210,41,39)"/><text x="670.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.97%)</title><rect x="667" y="276" width="11" height="15" fill="rgb(248,48,19)"/><text x="670.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="676" y="292" width="2" height="15" fill="rgb(236,166,11)"/><text x="679.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="676" y="308" width="2" height="15" fill="rgb(218,102,35)"/><text x="679.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="683" y="276" width="4" height="15" fill="rgb(254,114,18)"/><text x="686.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="683" y="292" width="4" height="15" fill="rgb(254,198,36)"/><text x="686.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.39%)</title><rect x="683" y="308" width="4" height="15" fill="rgb(227,58,23)"/><text x="686.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.39%)</title><rect x="683" y="324" width="4" height="15" fill="rgb(213,43,4)"/><text x="686.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.39%)</title><rect x="683" y="340" width="4" height="15" fill="rgb(212,93,50)"/><text x="686.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="690" y="340" width="2" height="15" fill="rgb(215,179,54)"/><text x="693.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="690" y="324" width="4" height="15" fill="rgb(210,112,46)"/><text x="693.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="692" y="340" width="2" height="15" fill="rgb(247,168,39)"/><text x="695.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="694" y="324" width="3" height="15" fill="rgb(251,57,52)"/><text x="697.00" y="334.50"></text></g><g><title>array_sum (methods.c) (9 samples, 1.74%)</title><rect x="678" y="212" width="21" height="15" fill="rgb(233,180,27)"/><text x="681.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 1.74%)</title><rect x="678" y="228" width="21" height="15" fill="rgb(234,44,52)"/><text x="681.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 1.74%)</title><rect x="678" y="244" width="21" height="15" fill="rgb(230,131,46)"/><text x="681.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.35%)</title><rect x="683" y="260" width="16" height="15" fill="rgb(220,59,22)"/><text x="686.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (5 samples, 0.97%)</title><rect x="687" y="276" width="12" height="15" fill="rgb(231,27,51)"/><text x="690.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.77%)</title><rect x="690" y="292" width="9" height="15" fill="rgb(235,172,24)"/><text x="693.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.77%)</title><rect x="690" y="308" width="9" height="15" fill="rgb(240,79,4)"/><text x="693.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="697" y="324" width="2" height="15" fill="rgb(247,40,39)"/><text x="700.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="697" y="340" width="2" height="15" fill="rgb(212,109,18)"/><text x="700.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="697" y="356" width="2" height="15" fill="rgb(222,166,54)"/><text x="700.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="697" y="372" width="2" height="15" fill="rgb(236,197,8)"/><text x="700.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="726" y="388" width="2" height="15" fill="rgb(233,35,39)"/><text x="729.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="726" y="404" width="2" height="15" fill="rgb(248,169,37)"/><text x="729.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="726" y="420" width="2" height="15" fill="rgb(234,99,46)"/><text x="729.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.58%)</title><rect x="726" y="356" width="7" height="15" fill="rgb(224,139,21)"/><text x="729.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.58%)</title><rect x="726" y="372" width="7" height="15" fill="rgb(226,73,42)"/><text x="729.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.39%)</title><rect x="728" y="388" width="5" height="15" fill="rgb(248,183,22)"/><text x="731.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="731" y="404" width="2" height="15" fill="rgb(218,74,52)"/><text x="734.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="733" y="372" width="5" height="15" fill="rgb(226,65,11)"/><text x="736.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.39%)</title><rect x="733" y="388" width="5" height="15" fill="rgb(250,115,27)"/><text x="736.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="735" y="404" width="3" height="15" fill="rgb(239,99,48)"/><text x="738.00" y="414.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="735" y="420" width="3" height="15" fill="rgb(246,227,17)"/><text x="738.00" y="430.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="735" y="436" width="3" height="15" fill="rgb(228,15,12)"/><text x="738.00" y="446.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="738" y="388" width="2" height="15" fill="rgb(222,207,54)"/><text x="741.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="738" y="372" width="4" height="15" fill="rgb(213,129,53)"/><text x="741.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.19%)</title><rect x="740" y="388" width="2" height="15" fill="rgb(214,84,2)"/><text x="743.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="740" y="404" width="2" height="15" fill="rgb(224,63,22)"/><text x="743.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.19%)</title><rect x="740" y="420" width="2" height="15" fill="rgb(225,44,0)"/><text x="743.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="742" y="388" width="2" height="15" fill="rgb(220,155,37)"/><text x="745.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="742" y="404" width="2" height="15" fill="rgb(242,180,39)"/><text x="745.00" y="414.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.19%)</title><rect x="742" y="420" width="2" height="15" fill="rgb(251,195,33)"/><text x="745.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.35%)</title><rect x="733" y="356" width="16" height="15" fill="rgb(208,188,51)"/><text x="736.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.58%)</title><rect x="742" y="372" width="7" height="15" fill="rgb(233,50,46)"/><text x="745.00" y="382.50"></text></g><g><title>_set_out_array (ufunc_object.c) (2 samples, 0.39%)</title><rect x="744" y="388" width="5" height="15" fill="rgb(254,19,20)"/><text x="747.00" y="398.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (2 samples, 0.39%)</title><rect x="744" y="404" width="5" height="15" fill="rgb(222,126,16)"/><text x="747.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (12 samples, 2.32%)</title><rect x="724" y="324" width="27" height="15" fill="rgb(240,215,17)"/><text x="727.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.13%)</title><rect x="726" y="340" width="25" height="15" fill="rgb(218,22,36)"/><text x="729.00" y="350.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="749" y="356" width="2" height="15" fill="rgb(249,190,44)"/><text x="752.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="749" y="372" width="2" height="15" fill="rgb(223,210,4)"/><text x="752.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="749" y="388" width="2" height="15" fill="rgb(244,182,20)"/><text x="752.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="751" y="324" width="3" height="15" fill="rgb(228,181,41)"/><text x="754.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.58%)</title><rect x="772" y="340" width="7" height="15" fill="rgb(244,32,28)"/><text x="775.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="801" y="388" width="3" height="15" fill="rgb(216,171,42)"/><text x="804.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.39%)</title><rect x="806" y="452" width="5" height="15" fill="rgb(209,17,21)"/><text x="809.00" y="462.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.58%)</title><rect x="806" y="420" width="7" height="15" fill="rgb(245,107,33)"/><text x="809.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.58%)</title><rect x="806" y="436" width="7" height="15" fill="rgb(246,176,35)"/><text x="809.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="811" y="452" width="2" height="15" fill="rgb(224,88,28)"/><text x="814.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="811" y="468" width="2" height="15" fill="rgb(223,176,17)"/><text x="814.00" y="478.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (16 samples, 3.09%)</title><rect x="779" y="340" width="36" height="15" fill="rgb(234,134,39)"/><text x="782.00" y="350.50">ndi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 2.32%)</title><rect x="788" y="356" width="27" height="15" fill="rgb(229,124,16)"/><text x="791.00" y="366.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (10 samples, 1.93%)</title><rect x="792" y="372" width="23" height="15" fill="rgb(205,138,32)"/><text x="795.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.97%)</title><rect x="804" y="388" width="11" height="15" fill="rgb(240,10,2)"/><text x="807.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.77%)</title><rect x="806" y="404" width="9" height="15" fill="rgb(231,74,0)"/><text x="809.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="813" y="420" width="2" height="15" fill="rgb(209,183,15)"/><text x="816.00" y="430.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="815" y="388" width="2" height="15" fill="rgb(230,3,46)"/><text x="818.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="815" y="404" width="2" height="15" fill="rgb(244,197,3)"/><text x="818.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="815" y="420" width="2" height="15" fill="rgb(234,56,30)"/><text x="818.00" y="430.50"></text></g><g><title>0x7fac222bce76 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="815" y="436" width="2" height="15" fill="rgb(207,195,2)"/><text x="818.00" y="446.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.39%)</title><rect x="815" y="356" width="5" height="15" fill="rgb(239,160,26)"/><text x="818.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.39%)</title><rect x="815" y="372" width="5" height="15" fill="rgb(253,1,11)"/><text x="818.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="817" y="388" width="3" height="15" fill="rgb(250,195,47)"/><text x="820.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.39%)</title><rect x="820" y="372" width="4" height="15" fill="rgb(218,84,12)"/><text x="823.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.39%)</title><rect x="820" y="388" width="4" height="15" fill="rgb(240,192,46)"/><text x="823.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="822" y="404" width="2" height="15" fill="rgb(241,218,53)"/><text x="825.00" y="414.50"></text></g><g><title>0x7fac222c6d97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="829" y="420" width="2" height="15" fill="rgb(251,13,6)"/><text x="832.00" y="430.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.39%)</title><rect x="829" y="404" width="4" height="15" fill="rgb(238,17,4)"/><text x="832.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="831" y="420" width="2" height="15" fill="rgb(207,221,42)"/><text x="834.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="831" y="436" width="2" height="15" fill="rgb(216,60,39)"/><text x="834.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="831" y="452" width="2" height="15" fill="rgb(206,26,28)"/><text x="834.00" y="462.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (8 samples, 1.55%)</title><rect x="824" y="372" width="19" height="15" fill="rgb(227,45,26)"/><text x="827.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (6 samples, 1.16%)</title><rect x="829" y="388" width="14" height="15" fill="rgb(227,63,16)"/><text x="832.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (4 samples, 0.77%)</title><rect x="833" y="404" width="10" height="15" fill="rgb(216,229,29)"/><text x="836.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="840" y="420" width="3" height="15" fill="rgb(215,47,10)"/><text x="843.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (2 samples, 0.39%)</title><rect x="849" y="420" width="5" height="15" fill="rgb(245,177,2)"/><text x="852.00" y="430.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (67 samples, 12.96%)</title><rect x="703" y="244" width="153" height="15" fill="rgb(217,125,6)"/><text x="706.00" y="254.50">clip (numpy/core/fr..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (66 samples, 12.77%)</title><rect x="706" y="260" width="150" height="15" fill="rgb(238,105,4)"/><text x="709.00" y="270.50">_wrapfunc (numpy/co..</text></g><g><title>array_clip (methods.c) (64 samples, 12.38%)</title><rect x="710" y="276" width="146" height="15" fill="rgb(210,184,22)"/><text x="713.00" y="286.50">array_clip (method..</text></g><g><title>forward_ndarray_method (methods.c) (64 samples, 12.38%)</title><rect x="710" y="292" width="146" height="15" fill="rgb(232,17,53)"/><text x="713.00" y="302.50">forward_ndarray_me..</text></g><g><title>_clip (numpy/core/_methods.py) (64 samples, 12.38%)</title><rect x="710" y="308" width="146" height="15" fill="rgb(214,19,22)"/><text x="713.00" y="318.50">_clip (numpy/core/..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (45 samples, 8.70%)</title><rect x="754" y="324" width="102" height="15" fill="rgb(244,26,0)"/><text x="757.00" y="334.50">_clip_dep_is..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 3.48%)</title><rect x="815" y="340" width="41" height="15" fill="rgb(243,207,43)"/><text x="818.00" y="350.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 3.09%)</title><rect x="820" y="356" width="36" height="15" fill="rgb(215,68,50)"/><text x="823.00" y="366.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (6 samples, 1.16%)</title><rect x="843" y="372" width="13" height="15" fill="rgb(228,41,29)"/><text x="846.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (4 samples, 0.77%)</title><rect x="847" y="388" width="9" height="15" fill="rgb(213,92,43)"/><text x="850.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (3 samples, 0.58%)</title><rect x="849" y="404" width="7" height="15" fill="rgb(224,74,32)"/><text x="852.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="854" y="420" width="2" height="15" fill="rgb(223,24,8)"/><text x="857.00" y="430.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (74 samples, 14.31%)</title><rect x="699" y="212" width="169" height="15" fill="rgb(208,215,24)"/><text x="702.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (74 samples, 14.31%)</title><rect x="699" y="228" width="169" height="15" fill="rgb(225,218,20)"/><text x="702.00" y="238.50">array_implement_array..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (5 samples, 0.97%)</title><rect x="856" y="244" width="12" height="15" fill="rgb(250,39,27)"/><text x="859.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (5 samples, 0.97%)</title><rect x="856" y="260" width="12" height="15" fill="rgb(247,155,30)"/><text x="859.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.97%)</title><rect x="856" y="276" width="12" height="15" fill="rgb(240,205,17)"/><text x="859.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.97%)</title><rect x="856" y="292" width="12" height="15" fill="rgb(238,110,49)"/><text x="859.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="865" y="308" width="3" height="15" fill="rgb(238,89,45)"/><text x="868.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="884" y="292" width="2" height="15" fill="rgb(215,83,3)"/><text x="887.00" y="302.50"></text></g><g><title>0x7fabfbce9f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="884" y="244" width="4" height="15" fill="rgb(254,229,25)"/><text x="887.00" y="254.50"></text></g><g><title>0x7fabfbcd9d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="884" y="260" width="4" height="15" fill="rgb(206,89,51)"/><text x="887.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.39%)</title><rect x="884" y="276" width="4" height="15" fill="rgb(229,217,35)"/><text x="887.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="886" y="292" width="2" height="15" fill="rgb(220,10,43)"/><text x="889.00" y="302.50"></text></g><g><title>0x7fabfbce9f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="888" y="244" width="3" height="15" fill="rgb(241,9,42)"/><text x="891.00" y="254.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.19%)</title><rect x="895" y="356" width="2" height="15" fill="rgb(237,150,26)"/><text x="898.00" y="366.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="897" y="356" width="3" height="15" fill="rgb(248,148,52)"/><text x="900.00" y="366.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.19%)</title><rect x="900" y="372" width="2" height="15" fill="rgb(222,37,16)"/><text x="903.00" y="382.50"></text></g><g><title>0x7fac222b56c2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="900" y="388" width="2" height="15" fill="rgb(248,14,24)"/><text x="903.00" y="398.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.19%)</title><rect x="902" y="388" width="2" height="15" fill="rgb(211,89,21)"/><text x="905.00" y="398.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.19%)</title><rect x="902" y="404" width="2" height="15" fill="rgb(231,209,15)"/><text x="905.00" y="414.50"></text></g><g><title>0x7fabfbcdc666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.35%)</title><rect x="891" y="308" width="15" height="15" fill="rgb(237,26,0)"/><text x="894.00" y="318.50"></text></g><g><title>0x7fabfbcd22fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.35%)</title><rect x="891" y="324" width="15" height="15" fill="rgb(217,213,26)"/><text x="894.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (6 samples, 1.16%)</title><rect x="893" y="340" width="13" height="15" fill="rgb(227,84,33)"/><text x="896.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.58%)</title><rect x="900" y="356" width="6" height="15" fill="rgb(229,227,51)"/><text x="903.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.39%)</title><rect x="902" y="372" width="4" height="15" fill="rgb(239,35,45)"/><text x="905.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="904" y="388" width="2" height="15" fill="rgb(237,113,33)"/><text x="907.00" y="398.50"></text></g><g><title>0x7fabfbcdcd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.55%)</title><rect x="891" y="292" width="18" height="15" fill="rgb(222,141,32)"/><text x="894.00" y="302.50"></text></g><g><title>0x7fabfbcdc6fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="906" y="308" width="3" height="15" fill="rgb(211,40,10)"/><text x="909.00" y="318.50"></text></g><g><title>0x7fabfbccff44 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="909" y="308" width="2" height="15" fill="rgb(242,197,35)"/><text x="912.00" y="318.50"></text></g><g><title>0x7fabfbccf92e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="911" y="324" width="2" height="15" fill="rgb(208,222,14)"/><text x="914.00" y="334.50"></text></g><g><title>0x7fabfbcf82df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.13%)</title><rect x="891" y="276" width="25" height="15" fill="rgb(232,131,33)"/><text x="894.00" y="286.50">0..</text></g><g><title>0x7fabfbcdce72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.58%)</title><rect x="909" y="292" width="7" height="15" fill="rgb(208,151,38)"/><text x="912.00" y="302.50"></text></g><g><title>0x7fabfbcd02bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="911" y="308" width="5" height="15" fill="rgb(228,79,10)"/><text x="914.00" y="318.50"></text></g><g><title>0x7fabfbccfdad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="913" y="324" width="3" height="15" fill="rgb(247,211,48)"/><text x="916.00" y="334.50"></text></g><g><title>0x7fabfbcf8456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="916" y="276" width="2" height="15" fill="rgb(231,203,12)"/><text x="919.00" y="286.50"></text></g><g><title>0x7fac222bc734 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="922" y="308" width="3" height="15" fill="rgb(252,216,11)"/><text x="925.00" y="318.50"></text></g><g><title>0x7fabfbcf8592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.77%)</title><rect x="918" y="276" width="9" height="15" fill="rgb(223,21,7)"/><text x="921.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 0.77%)</title><rect x="918" y="292" width="9" height="15" fill="rgb(235,224,15)"/><text x="921.00" y="302.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.19%)</title><rect x="925" y="308" width="2" height="15" fill="rgb(248,126,38)"/><text x="928.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.19%)</title><rect x="925" y="324" width="2" height="15" fill="rgb(234,29,12)"/><text x="928.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="925" y="340" width="2" height="15" fill="rgb(207,155,51)"/><text x="928.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="925" y="356" width="2" height="15" fill="rgb(235,145,23)"/><text x="928.00" y="366.50"></text></g><g><title>0x7fabfbcf8644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="927" y="276" width="2" height="15" fill="rgb(207,141,15)"/><text x="930.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="927" y="292" width="2" height="15" fill="rgb(229,190,36)"/><text x="930.00" y="302.50"></text></g><g><title>0x7fabfbcf9405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 3.68%)</title><rect x="891" y="260" width="43" height="15" fill="rgb(219,36,0)"/><text x="894.00" y="270.50">0x7f..</text></g><g><title>0x7fabfbcf8c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="929" y="276" width="5" height="15" fill="rgb(228,189,0)"/><text x="932.00" y="286.50"></text></g><g><title>0x7fabfbcd0529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="929" y="292" width="5" height="15" fill="rgb(215,61,30)"/><text x="932.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.39%)</title><rect x="929" y="308" width="5" height="15" fill="rgb(242,98,36)"/><text x="932.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.39%)</title><rect x="929" y="324" width="5" height="15" fill="rgb(215,129,53)"/><text x="932.00" y="334.50"></text></g><g><title>0x7fabfbce9fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 3.87%)</title><rect x="891" y="244" width="45" height="15" fill="rgb(210,132,25)"/><text x="894.00" y="254.50">0x7f..</text></g><g><title>0x7fabfbcf9540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="934" y="260" width="2" height="15" fill="rgb(229,127,47)"/><text x="937.00" y="270.50"></text></g><g><title>0x7fabfbcce178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="934" y="276" width="2" height="15" fill="rgb(207,102,33)"/><text x="937.00" y="286.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.39%)</title><rect x="943" y="276" width="5" height="15" fill="rgb(225,128,11)"/><text x="946.00" y="286.50"></text></g><g><title>0x7fabfbcea05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.16%)</title><rect x="936" y="244" width="14" height="15" fill="rgb(235,159,6)"/><text x="939.00" y="254.50"></text></g><g><title>array_take (methods.c) (6 samples, 1.16%)</title><rect x="936" y="260" width="14" height="15" fill="rgb(212,71,40)"/><text x="939.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.19%)</title><rect x="948" y="276" width="2" height="15" fill="rgb(216,143,3)"/><text x="951.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.19%)</title><rect x="948" y="292" width="2" height="15" fill="rgb(217,75,34)"/><text x="951.00" y="302.50"></text></g><g><title>0x7fabfbcea13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="950" y="244" width="2" height="15" fill="rgb(215,198,30)"/><text x="953.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="950" y="260" width="2" height="15" fill="rgb(244,195,42)"/><text x="953.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="950" y="276" width="2" height="15" fill="rgb(208,62,53)"/><text x="953.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="950" y="292" width="2" height="15" fill="rgb(220,48,21)"/><text x="953.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.39%)</title><rect x="952" y="276" width="5" height="15" fill="rgb(229,222,42)"/><text x="955.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.39%)</title><rect x="952" y="292" width="5" height="15" fill="rgb(231,183,33)"/><text x="955.00" y="302.50"></text></g><g><title>0x7fabfbcea328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.77%)</title><rect x="952" y="244" width="9" height="15" fill="rgb(216,2,6)"/><text x="955.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.77%)</title><rect x="952" y="260" width="9" height="15" fill="rgb(240,38,36)"/><text x="955.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.39%)</title><rect x="957" y="276" width="4" height="15" fill="rgb(223,130,9)"/><text x="960.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.39%)</title><rect x="957" y="292" width="4" height="15" fill="rgb(212,205,27)"/><text x="960.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="959" y="308" width="2" height="15" fill="rgb(232,179,40)"/><text x="962.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.19%)</title><rect x="959" y="324" width="2" height="15" fill="rgb(241,47,4)"/><text x="962.00" y="334.50"></text></g><g><title>0x7fabfbcead2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (35 samples, 6.77%)</title><rect x="884" y="228" width="80" height="15" fill="rgb(253,192,51)"/><text x="887.00" y="238.50">0x7fabfbc..</text></g><g><title>0x7fabfbcea577 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="961" y="244" width="3" height="15" fill="rgb(230,134,13)"/><text x="964.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.58%)</title><rect x="991" y="260" width="7" height="15" fill="rgb(215,3,10)"/><text x="994.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.19%)</title><rect x="998" y="260" width="2" height="15" fill="rgb(231,12,10)"/><text x="1001.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1009" y="276" width="5" height="15" fill="rgb(210,116,37)"/><text x="1012.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 1.55%)</title><rect x="1000" y="260" width="18" height="15" fill="rgb(238,105,53)"/><text x="1003.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.39%)</title><rect x="1014" y="276" width="4" height="15" fill="rgb(228,151,16)"/><text x="1017.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1018" y="260" width="3" height="15" fill="rgb(211,83,36)"/><text x="1021.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.35%)</title><rect x="1021" y="260" width="16" height="15" fill="rgb(234,222,33)"/><text x="1024.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.19%)</title><rect x="1034" y="276" width="3" height="15" fill="rgb(227,77,52)"/><text x="1037.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.77%)</title><rect x="1037" y="260" width="9" height="15" fill="rgb(205,200,0)"/><text x="1040.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.39%)</title><rect x="1041" y="276" width="5" height="15" fill="rgb(218,207,50)"/><text x="1044.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="1043" y="292" width="3" height="15" fill="rgb(254,146,30)"/><text x="1046.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (43 samples, 8.32%)</title><rect x="964" y="228" width="98" height="15" fill="rgb(214,39,1)"/><text x="967.00" y="238.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py) (43 samples, 8.32%)</title><rect x="964" y="244" width="98" height="15" fill="rgb(216,79,52)"/><text x="967.00" y="254.50">check_array..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.35%)</title><rect x="1046" y="260" width="16" height="15" fill="rgb(230,88,36)"/><text x="1049.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.16%)</title><rect x="1048" y="276" width="14" height="15" fill="rgb(216,209,5)"/><text x="1051.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1062" y="228" width="2" height="15" fill="rgb(208,140,5)"/><text x="1065.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1062" y="244" width="2" height="15" fill="rgb(211,80,9)"/><text x="1065.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.58%)</title><rect x="1064" y="276" width="7" height="15" fill="rgb(218,18,31)"/><text x="1067.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1066" y="292" width="5" height="15" fill="rgb(211,1,46)"/><text x="1069.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.19%)</title><rect x="1069" y="308" width="2" height="15" fill="rgb(218,115,21)"/><text x="1072.00" y="318.50"></text></g><g><title>run_binary_simd_equal_DOUBLE (simd.inc.src) (1 samples, 0.19%)</title><rect x="1069" y="324" width="2" height="15" fill="rgb(209,49,40)"/><text x="1072.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.77%)</title><rect x="1064" y="260" width="9" height="15" fill="rgb(231,21,37)"/><text x="1067.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1071" y="276" width="2" height="15" fill="rgb(219,34,12)"/><text x="1074.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="1071" y="292" width="2" height="15" fill="rgb(226,74,33)"/><text x="1074.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="1071" y="308" width="2" height="15" fill="rgb(222,39,49)"/><text x="1074.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="1071" y="324" width="2" height="15" fill="rgb(244,185,33)"/><text x="1074.00" y="334.50"></text></g><g><title>array_richcompare (arrayobject.c) (5 samples, 0.97%)</title><rect x="1064" y="228" width="11" height="15" fill="rgb(247,187,16)"/><text x="1067.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.97%)</title><rect x="1064" y="244" width="11" height="15" fill="rgb(230,229,30)"/><text x="1067.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1073" y="260" width="2" height="15" fill="rgb(212,35,49)"/><text x="1076.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1073" y="276" width="2" height="15" fill="rgb(228,158,30)"/><text x="1076.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1073" y="292" width="2" height="15" fill="rgb(210,121,12)"/><text x="1076.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1075" y="228" width="3" height="15" fill="rgb(252,189,37)"/><text x="1078.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.19%)</title><rect x="1075" y="244" width="3" height="15" fill="rgb(252,93,1)"/><text x="1078.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="1075" y="260" width="3" height="15" fill="rgb(218,160,36)"/><text x="1078.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="1085" y="292" width="2" height="15" fill="rgb(245,33,24)"/><text x="1088.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="1085" y="308" width="2" height="15" fill="rgb(246,91,21)"/><text x="1088.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="1085" y="324" width="2" height="15" fill="rgb(247,212,1)"/><text x="1088.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="1085" y="340" width="2" height="15" fill="rgb(238,12,32)"/><text x="1088.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="1085" y="356" width="2" height="15" fill="rgb(248,166,14)"/><text x="1088.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1089" y="356" width="2" height="15" fill="rgb(252,10,45)"/><text x="1092.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1091" y="356" width="3" height="15" fill="rgb(233,170,41)"/><text x="1094.00" y="366.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="1094" y="356" width="2" height="15" fill="rgb(207,117,29)"/><text x="1097.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.77%)</title><rect x="1089" y="340" width="9" height="15" fill="rgb(223,188,46)"/><text x="1092.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1096" y="356" width="2" height="15" fill="rgb(245,129,9)"/><text x="1099.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 0.58%)</title><rect x="1098" y="340" width="7" height="15" fill="rgb(223,91,44)"/><text x="1101.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.58%)</title><rect x="1098" y="356" width="7" height="15" fill="rgb(245,3,22)"/><text x="1101.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (3 samples, 0.58%)</title><rect x="1098" y="372" width="7" height="15" fill="rgb(218,129,37)"/><text x="1101.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (2 samples, 0.39%)</title><rect x="1100" y="388" width="5" height="15" fill="rgb(240,140,37)"/><text x="1103.00" y="398.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.51%)</title><rect x="1078" y="228" width="29" height="15" fill="rgb(235,100,17)"/><text x="1081.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.51%)</title><rect x="1078" y="244" width="29" height="15" fill="rgb(212,31,24)"/><text x="1081.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 2.13%)</title><rect x="1082" y="260" width="25" height="15" fill="rgb(228,33,7)"/><text x="1085.00" y="270.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 1.93%)</title><rect x="1085" y="276" width="22" height="15" fill="rgb(238,26,18)"/><text x="1088.00" y="286.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 1.74%)</title><rect x="1087" y="292" width="20" height="15" fill="rgb(213,197,52)"/><text x="1090.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.55%)</title><rect x="1089" y="308" width="18" height="15" fill="rgb(232,5,32)"/><text x="1092.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.55%)</title><rect x="1089" y="324" width="18" height="15" fill="rgb(239,217,22)"/><text x="1092.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1105" y="340" width="2" height="15" fill="rgb(228,5,30)"/><text x="1108.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1105" y="356" width="2" height="15" fill="rgb(240,45,1)"/><text x="1108.00" y="366.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1105" y="372" width="2" height="15" fill="rgb(244,162,24)"/><text x="1108.00" y="382.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.58%)</title><rect x="1128" y="260" width="7" height="15" fill="rgb(238,162,28)"/><text x="1131.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 2.32%)</title><rect x="1116" y="244" width="28" height="15" fill="rgb(246,214,20)"/><text x="1119.00" y="254.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 0.77%)</title><rect x="1135" y="260" width="9" height="15" fill="rgb(209,227,9)"/><text x="1138.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 3.29%)</title><rect x="1107" y="228" width="39" height="15" fill="rgb(249,218,50)"/><text x="1110.00" y="238.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.19%)</title><rect x="1144" y="244" width="2" height="15" fill="rgb(212,182,0)"/><text x="1147.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="1146" y="308" width="2" height="15" fill="rgb(250,136,22)"/><text x="1149.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1146" y="260" width="5" height="15" fill="rgb(228,213,28)"/><text x="1149.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1146" y="276" width="5" height="15" fill="rgb(220,4,35)"/><text x="1149.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.39%)</title><rect x="1146" y="292" width="5" height="15" fill="rgb(225,45,29)"/><text x="1149.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1148" y="308" width="3" height="15" fill="rgb(245,198,9)"/><text x="1151.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1148" y="324" width="3" height="15" fill="rgb(213,188,51)"/><text x="1151.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1148" y="340" width="3" height="15" fill="rgb(254,198,11)"/><text x="1151.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1148" y="356" width="3" height="15" fill="rgb(217,154,18)"/><text x="1151.00" y="366.50"></text></g><g><title>npy_is_aligned (common.h) (1 samples, 0.19%)</title><rect x="1148" y="372" width="3" height="15" fill="rgb(238,213,54)"/><text x="1151.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (126 samples, 24.37%)</title><rect x="868" y="212" width="287" height="15" fill="rgb(221,134,16)"/><text x="871.00" y="222.50">predict_proba (sklearn/tree/_classes.p..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.77%)</title><rect x="1146" y="228" width="9" height="15" fill="rgb(206,69,29)"/><text x="1149.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.77%)</title><rect x="1146" y="244" width="9" height="15" fill="rgb(235,154,32)"/><text x="1149.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.39%)</title><rect x="1151" y="260" width="4" height="15" fill="rgb(229,135,48)"/><text x="1154.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1158" y="244" width="2" height="15" fill="rgb(251,69,0)"/><text x="1161.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1160" y="260" width="2" height="15" fill="rgb(248,50,15)"/><text x="1163.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1160" y="276" width="2" height="15" fill="rgb(251,77,28)"/><text x="1163.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1160" y="292" width="2" height="15" fill="rgb(238,198,22)"/><text x="1163.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1160" y="244" width="4" height="15" fill="rgb(249,179,27)"/><text x="1163.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1162" y="260" width="2" height="15" fill="rgb(227,227,31)"/><text x="1165.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.19%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(254,122,26)"/><text x="1165.00" y="286.50"></text></g><g><title>log (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1162" y="292" width="2" height="15" fill="rgb(207,181,50)"/><text x="1165.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (240 samples, 46.42%)</title><rect x="619" y="196" width="548" height="15" fill="rgb(229,222,9)"/><text x="622.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.97%)</title><rect x="1155" y="212" width="12" height="15" fill="rgb(205,185,33)"/><text x="1158.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.77%)</title><rect x="1158" y="228" width="9" height="15" fill="rgb(245,35,47)"/><text x="1161.00" y="238.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1164" y="244" width="3" height="15" fill="rgb(234,24,16)"/><text x="1167.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1164" y="260" width="3" height="15" fill="rgb(225,228,53)"/><text x="1167.00" y="270.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1164" y="276" width="3" height="15" fill="rgb(215,69,38)"/><text x="1167.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (241 samples, 46.62%)</title><rect x="619" y="180" width="550" height="15" fill="rgb(207,10,38)"/><text x="622.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1167" y="196" width="2" height="15" fill="rgb(219,198,47)"/><text x="1170.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(233,53,26)"/><text x="1170.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(245,203,28)"/><text x="1170.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(205,65,46)"/><text x="1170.00" y="254.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(230,142,20)"/><text x="1172.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.39%)</title><rect x="1169" y="196" width="5" height="15" fill="rgb(252,86,9)"/><text x="1172.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1171" y="212" width="3" height="15" fill="rgb(248,68,37)"/><text x="1174.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="1174" y="212" width="2" height="15" fill="rgb(240,99,54)"/><text x="1177.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(248,225,39)"/><text x="1177.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(230,200,40)"/><text x="1177.00" y="254.50"></text></g><g><title>array_add (number.c) (3 samples, 0.58%)</title><rect x="1174" y="180" width="6" height="15" fill="rgb(206,40,14)"/><text x="1177.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.58%)</title><rect x="1174" y="196" width="6" height="15" fill="rgb(216,208,45)"/><text x="1177.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.39%)</title><rect x="1176" y="212" width="4" height="15" fill="rgb(225,194,3)"/><text x="1179.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1178" y="228" width="2" height="15" fill="rgb(239,85,34)"/><text x="1181.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1178" y="244" width="2" height="15" fill="rgb(206,28,28)"/><text x="1181.00" y="254.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (252 samples, 48.74%)</title><rect x="607" y="68" width="576" height="15" fill="rgb(211,109,19)"/><text x="610.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (252 samples, 48.74%)</title><rect x="607" y="84" width="576" height="15" fill="rgb(230,222,16)"/><text x="610.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (252 samples, 48.74%)</title><rect x="607" y="100" width="576" height="15" fill="rgb(246,78,29)"/><text x="610.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (251 samples, 48.55%)</title><rect x="610" y="116" width="573" height="15" fill="rgb(248,155,22)"/><text x="613.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (251 samples, 48.55%)</title><rect x="610" y="132" width="573" height="15" fill="rgb(209,186,17)"/><text x="613.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (251 samples, 48.55%)</title><rect x="610" y="148" width="573" height="15" fill="rgb(254,58,34)"/><text x="613.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (248 samples, 47.97%)</title><rect x="617" y="164" width="566" height="15" fill="rgb(245,149,32)"/><text x="620.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1180" y="180" width="3" height="15" fill="rgb(225,132,16)"/><text x="1183.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1180" y="196" width="3" height="15" fill="rgb(205,152,28)"/><text x="1183.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1180" y="212" width="3" height="15" fill="rgb(240,98,26)"/><text x="1183.00" y="222.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="1183" y="116" width="2" height="15" fill="rgb(238,126,50)"/><text x="1186.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.19%)</title><rect x="1183" y="132" width="2" height="15" fill="rgb(216,183,37)"/><text x="1186.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="1183" y="148" width="2" height="15" fill="rgb(222,216,51)"/><text x="1186.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="1183" y="164" width="2" height="15" fill="rgb(240,70,13)"/><text x="1186.00" y="174.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.19%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(217,181,26)"/><text x="1188.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.19%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(212,151,37)"/><text x="1188.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.19%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(239,22,31)"/><text x="1188.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.19%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(252,162,1)"/><text x="1188.00" y="238.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.19%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(210,158,45)"/><text x="1188.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.19%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(241,21,35)"/><text x="1188.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.19%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(210,166,19)"/><text x="1188.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.19%)</title><rect x="1185" y="292" width="2" height="15" fill="rgb(232,194,42)"/><text x="1188.00" y="302.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.19%)</title><rect x="1185" y="308" width="2" height="15" fill="rgb(244,43,28)"/><text x="1188.00" y="318.50"></text></g><g><title>all (517 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,126,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (517 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(220,150,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (3 samples, 0.58%)</title><rect x="1183" y="68" width="7" height="15" fill="rgb(213,43,26)"/><text x="1186.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (3 samples, 0.58%)</title><rect x="1183" y="84" width="7" height="15" fill="rgb(243,51,3)"/><text x="1186.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.58%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(235,99,34)"/><text x="1186.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(252,195,48)"/><text x="1188.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(223,151,39)"/><text x="1188.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(231,26,0)"/><text x="1188.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.39%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(208,112,40)"/><text x="1188.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.19%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(251,199,50)"/><text x="1190.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.19%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(224,135,27)"/><text x="1190.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(246,4,8)"/><text x="1190.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(229,27,23)"/><text x="1190.00" y="238.50"></text></g></g></svg>