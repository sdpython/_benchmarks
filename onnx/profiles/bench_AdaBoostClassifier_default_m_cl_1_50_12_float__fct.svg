<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(244,23,11)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(235,139,52)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(218,64,19)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(216,95,10)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(244,126,13)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(213,96,34)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(227,103,26)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(215,96,35)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(215,229,37)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(218,16,39)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(238,179,22)"/><text x="13.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(209,11,17)"/><text x="13.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="1060" width="2" height="15" fill="rgb(222,103,14)"/><text x="13.00" y="1070.50"></text></g><g><title>0x7f20a078a6d9 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="1076" width="2" height="15" fill="rgb(238,48,52)"/><text x="13.00" y="1086.50"></text></g><g><title>0x7f20a07f9d97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="1092" width="2" height="15" fill="rgb(221,227,2)"/><text x="13.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(232,135,1)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(206,151,31)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(215,158,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(254,214,28)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(233,88,3)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(229,12,20)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.38%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(221,106,15)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(249,181,16)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(217,139,14)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(240,94,14)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(229,158,24)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(211,199,44)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.38%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(235,172,38)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(242,214,2)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(252,4,36)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(205,48,14)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(236,6,5)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(229,196,19)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.38%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(248,186,30)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(234,129,18)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(219,10,53)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(205,154,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(241,143,28)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(210,42,9)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(235,17,14)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(224,187,52)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(234,140,18)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(213,136,17)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(236,94,29)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(214,58,30)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(211,182,18)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(239,47,35)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(239,75,8)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(225,145,24)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(205,36,18)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(242,2,28)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(249,189,24)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="884" width="2" height="15" fill="rgb(215,167,20)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(211,170,6)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(208,61,24)"/><text x="15.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(241,72,35)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(219,22,24)"/><text x="15.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(250,32,21)"/><text x="15.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(213,41,4)"/><text x="15.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.19%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(227,79,49)"/><text x="15.00" y="1006.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="14" y="532" width="2" height="15" fill="rgb(222,179,1)"/><text x="17.00" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="14" y="548" width="2" height="15" fill="rgb(244,185,13)"/><text x="17.00" y="558.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="14" y="564" width="2" height="15" fill="rgb(212,86,31)"/><text x="17.00" y="574.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="14" y="580" width="2" height="15" fill="rgb(243,199,17)"/><text x="17.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(221,99,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(252,131,17)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(249,60,9)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(226,103,3)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(224,153,47)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(205,45,48)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="292" width="4" height="15" fill="rgb(232,37,29)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="308" width="4" height="15" fill="rgb(233,77,29)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="324" width="4" height="15" fill="rgb(213,185,12)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="340" width="4" height="15" fill="rgb(240,109,43)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="14" y="356" width="4" height="15" fill="rgb(211,219,13)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="372" width="4" height="15" fill="rgb(223,42,28)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.38%)</title><rect x="14" y="388" width="4" height="15" fill="rgb(212,65,37)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="404" width="4" height="15" fill="rgb(234,229,34)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="420" width="4" height="15" fill="rgb(239,46,20)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="436" width="4" height="15" fill="rgb(212,70,25)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="14" y="452" width="4" height="15" fill="rgb(225,28,19)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="468" width="4" height="15" fill="rgb(212,151,44)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.38%)</title><rect x="14" y="484" width="4" height="15" fill="rgb(211,50,36)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="500" width="4" height="15" fill="rgb(230,222,44)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="14" y="516" width="4" height="15" fill="rgb(238,37,52)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(229,17,45)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(246,153,54)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(230,177,22)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.19%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(217,136,20)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(240,58,1)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(234,121,50)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(229,17,43)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(233,101,52)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(229,95,39)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.19%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(248,229,54)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(209,186,33)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(254,171,42)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(227,152,38)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(233,47,25)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(228,2,5)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.19%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(248,221,32)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(243,200,25)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(214,84,2)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(225,159,49)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(207,189,18)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(213,91,23)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(214,107,27)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(244,175,37)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.19%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(214,115,28)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(237,219,24)"/><text x="19.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(254,101,20)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(254,206,16)"/><text x="19.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(253,179,8)"/><text x="19.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(226,119,25)"/><text x="19.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(240,189,52)"/><text x="19.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(230,104,44)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.19%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(252,48,15)"/><text x="19.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(216,58,3)"/><text x="19.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(231,108,29)"/><text x="19.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.19%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(206,0,33)"/><text x="19.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py) (1 samples, 0.19%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(244,185,19)"/><text x="19.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1252" width="3" height="15" fill="rgb(253,188,10)"/><text x="21.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1268" width="3" height="15" fill="rgb(213,103,54)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1284" width="3" height="15" fill="rgb(232,166,13)"/><text x="21.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1300" width="3" height="15" fill="rgb(208,9,35)"/><text x="21.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1316" width="3" height="15" fill="rgb(216,109,14)"/><text x="21.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1332" width="3" height="15" fill="rgb(248,113,51)"/><text x="21.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.19%)</title><rect x="18" y="1348" width="3" height="15" fill="rgb(249,40,25)"/><text x="21.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1364" width="3" height="15" fill="rgb(254,90,33)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1380" width="3" height="15" fill="rgb(238,169,48)"/><text x="21.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="18" y="1396" width="3" height="15" fill="rgb(227,97,40)"/><text x="21.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1412" width="3" height="15" fill="rgb(212,200,9)"/><text x="21.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1428" width="3" height="15" fill="rgb(225,205,27)"/><text x="21.00" y="1438.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="1444" width="3" height="15" fill="rgb(209,171,18)"/><text x="21.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1124" width="5" height="15" fill="rgb(205,69,24)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1140" width="5" height="15" fill="rgb(218,78,24)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1156" width="5" height="15" fill="rgb(229,2,34)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="18" y="1172" width="5" height="15" fill="rgb(207,160,23)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1188" width="5" height="15" fill="rgb(243,97,22)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.38%)</title><rect x="18" y="1204" width="5" height="15" fill="rgb(224,208,2)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1220" width="5" height="15" fill="rgb(238,58,33)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="18" y="1236" width="5" height="15" fill="rgb(233,208,30)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="21" y="1252" width="2" height="15" fill="rgb(230,87,26)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="21" y="1268" width="2" height="15" fill="rgb(222,145,46)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="21" y="1284" width="2" height="15" fill="rgb(241,148,7)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.19%)</title><rect x="21" y="1300" width="2" height="15" fill="rgb(246,102,15)"/><text x="24.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.19%)</title><rect x="21" y="1316" width="2" height="15" fill="rgb(231,61,1)"/><text x="24.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.19%)</title><rect x="21" y="1332" width="2" height="15" fill="rgb(225,62,27)"/><text x="24.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.19%)</title><rect x="21" y="1348" width="2" height="15" fill="rgb(241,158,28)"/><text x="24.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.19%)</title><rect x="21" y="1364" width="2" height="15" fill="rgb(237,185,9)"/><text x="24.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.19%)</title><rect x="21" y="1380" width="2" height="15" fill="rgb(230,207,5)"/><text x="24.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.19%)</title><rect x="21" y="1396" width="2" height="15" fill="rgb(221,194,50)"/><text x="24.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.19%)</title><rect x="21" y="1412" width="2" height="15" fill="rgb(240,1,6)"/><text x="24.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.19%)</title><rect x="21" y="1428" width="2" height="15" fill="rgb(218,37,35)"/><text x="24.00" y="1438.50"></text></g><g><title>__get__ (types.py) (1 samples, 0.19%)</title><rect x="21" y="1444" width="2" height="15" fill="rgb(208,53,39)"/><text x="24.00" y="1454.50"></text></g><g><title>value (enum.py) (1 samples, 0.19%)</title><rect x="21" y="1460" width="2" height="15" fill="rgb(213,21,36)"/><text x="24.00" y="1470.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="23" y="1588" width="2" height="15" fill="rgb(207,94,10)"/><text x="26.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="23" y="1604" width="2" height="15" fill="rgb(220,64,45)"/><text x="26.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="23" y="1620" width="2" height="15" fill="rgb(214,71,50)"/><text x="26.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="23" y="1636" width="2" height="15" fill="rgb(215,201,6)"/><text x="26.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="23" y="1652" width="2" height="15" fill="rgb(218,82,41)"/><text x="26.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.19%)</title><rect x="23" y="1668" width="2" height="15" fill="rgb(205,67,44)"/><text x="26.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="23" y="1684" width="2" height="15" fill="rgb(223,127,17)"/><text x="26.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="23" y="1700" width="2" height="15" fill="rgb(231,187,6)"/><text x="26.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.19%)</title><rect x="23" y="1716" width="2" height="15" fill="rgb(217,191,42)"/><text x="26.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.19%)</title><rect x="23" y="1732" width="2" height="15" fill="rgb(245,129,23)"/><text x="26.00" y="1742.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.19%)</title><rect x="23" y="1748" width="2" height="15" fill="rgb(241,99,10)"/><text x="26.00" y="1758.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.19%)</title><rect x="23" y="1764" width="2" height="15" fill="rgb(252,191,51)"/><text x="26.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="484" width="9" height="15" fill="rgb(213,12,53)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="500" width="9" height="15" fill="rgb(236,121,18)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="516" width="9" height="15" fill="rgb(254,183,47)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="532" width="9" height="15" fill="rgb(213,91,36)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="548" width="9" height="15" fill="rgb(227,5,32)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="564" width="9" height="15" fill="rgb(205,85,36)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.76%)</title><rect x="18" y="580" width="9" height="15" fill="rgb(221,71,27)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="596" width="9" height="15" fill="rgb(249,139,24)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="612" width="9" height="15" fill="rgb(242,26,47)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="628" width="9" height="15" fill="rgb(218,12,11)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="644" width="9" height="15" fill="rgb(221,82,7)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="660" width="9" height="15" fill="rgb(220,3,45)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.76%)</title><rect x="18" y="676" width="9" height="15" fill="rgb(247,32,29)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="692" width="9" height="15" fill="rgb(215,16,53)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="708" width="9" height="15" fill="rgb(226,68,20)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="724" width="9" height="15" fill="rgb(225,38,33)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="740" width="9" height="15" fill="rgb(246,217,14)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="756" width="9" height="15" fill="rgb(254,89,8)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.76%)</title><rect x="18" y="772" width="9" height="15" fill="rgb(218,157,1)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="788" width="9" height="15" fill="rgb(231,132,0)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="804" width="9" height="15" fill="rgb(243,62,22)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="820" width="9" height="15" fill="rgb(250,225,27)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="836" width="9" height="15" fill="rgb(232,18,35)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="852" width="9" height="15" fill="rgb(254,161,6)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.76%)</title><rect x="18" y="868" width="9" height="15" fill="rgb(234,8,11)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="884" width="9" height="15" fill="rgb(217,189,26)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="900" width="9" height="15" fill="rgb(220,89,34)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="916" width="9" height="15" fill="rgb(209,203,35)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="932" width="9" height="15" fill="rgb(227,27,26)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="948" width="9" height="15" fill="rgb(247,12,2)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="964" width="9" height="15" fill="rgb(250,218,25)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="980" width="9" height="15" fill="rgb(225,117,30)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="996" width="9" height="15" fill="rgb(247,180,34)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.76%)</title><rect x="18" y="1012" width="9" height="15" fill="rgb(238,61,16)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="1028" width="9" height="15" fill="rgb(221,42,38)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="1044" width="9" height="15" fill="rgb(211,72,27)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="1060" width="9" height="15" fill="rgb(240,101,18)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.76%)</title><rect x="18" y="1076" width="9" height="15" fill="rgb(205,10,21)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="18" y="1092" width="9" height="15" fill="rgb(230,223,21)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.76%)</title><rect x="18" y="1108" width="9" height="15" fill="rgb(229,210,28)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1124" width="4" height="15" fill="rgb(249,25,28)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1140" width="4" height="15" fill="rgb(206,135,24)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1156" width="4" height="15" fill="rgb(246,211,2)"/><text x="26.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1172" width="4" height="15" fill="rgb(234,229,37)"/><text x="26.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1188" width="4" height="15" fill="rgb(205,51,43)"/><text x="26.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="23" y="1204" width="4" height="15" fill="rgb(222,227,40)"/><text x="26.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1220" width="4" height="15" fill="rgb(226,210,39)"/><text x="26.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.38%)</title><rect x="23" y="1236" width="4" height="15" fill="rgb(217,202,1)"/><text x="26.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1252" width="4" height="15" fill="rgb(207,87,29)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1268" width="4" height="15" fill="rgb(231,207,38)"/><text x="26.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1284" width="4" height="15" fill="rgb(237,58,2)"/><text x="26.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1300" width="4" height="15" fill="rgb(245,91,4)"/><text x="26.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1316" width="4" height="15" fill="rgb(221,142,35)"/><text x="26.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="23" y="1332" width="4" height="15" fill="rgb(225,183,41)"/><text x="26.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1348" width="4" height="15" fill="rgb(205,167,28)"/><text x="26.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.38%)</title><rect x="23" y="1364" width="4" height="15" fill="rgb(227,156,27)"/><text x="26.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1380" width="4" height="15" fill="rgb(246,175,17)"/><text x="26.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1396" width="4" height="15" fill="rgb(230,177,50)"/><text x="26.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1412" width="4" height="15" fill="rgb(218,217,39)"/><text x="26.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="23" y="1428" width="4" height="15" fill="rgb(235,161,29)"/><text x="26.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1444" width="4" height="15" fill="rgb(243,59,50)"/><text x="26.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.38%)</title><rect x="23" y="1460" width="4" height="15" fill="rgb(227,113,37)"/><text x="26.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1476" width="4" height="15" fill="rgb(236,123,15)"/><text x="26.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1492" width="4" height="15" fill="rgb(209,34,5)"/><text x="26.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1508" width="4" height="15" fill="rgb(214,20,40)"/><text x="26.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="23" y="1524" width="4" height="15" fill="rgb(243,95,51)"/><text x="26.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="23" y="1540" width="4" height="15" fill="rgb(213,88,28)"/><text x="26.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.38%)</title><rect x="23" y="1556" width="4" height="15" fill="rgb(245,19,32)"/><text x="26.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.38%)</title><rect x="23" y="1572" width="4" height="15" fill="rgb(217,6,45)"/><text x="26.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(210,177,54)"/><text x="28.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(212,172,24)"/><text x="28.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(252,111,42)"/><text x="28.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(251,39,33)"/><text x="28.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(210,105,1)"/><text x="28.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.19%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(231,59,16)"/><text x="28.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1684" width="2" height="15" fill="rgb(245,169,45)"/><text x="28.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1700" width="2" height="15" fill="rgb(213,225,3)"/><text x="28.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1716" width="2" height="15" fill="rgb(227,195,45)"/><text x="28.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1732" width="2" height="15" fill="rgb(217,229,36)"/><text x="28.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1748" width="2" height="15" fill="rgb(208,144,26)"/><text x="28.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.19%)</title><rect x="25" y="1764" width="2" height="15" fill="rgb(252,130,51)"/><text x="28.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1780" width="2" height="15" fill="rgb(214,199,38)"/><text x="28.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1796" width="2" height="15" fill="rgb(213,27,52)"/><text x="28.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1812" width="2" height="15" fill="rgb(231,79,44)"/><text x="28.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1828" width="2" height="15" fill="rgb(223,78,38)"/><text x="28.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1844" width="2" height="15" fill="rgb(225,8,2)"/><text x="28.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py) (1 samples, 0.19%)</title><rect x="25" y="1860" width="2" height="15" fill="rgb(242,38,37)"/><text x="28.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1876" width="2" height="15" fill="rgb(253,44,44)"/><text x="28.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1892" width="2" height="15" fill="rgb(235,74,39)"/><text x="28.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1908" width="2" height="15" fill="rgb(230,139,21)"/><text x="28.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="1924" width="2" height="15" fill="rgb(239,222,46)"/><text x="28.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1940" width="2" height="15" fill="rgb(219,112,14)"/><text x="28.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/filters.py) (1 samples, 0.19%)</title><rect x="25" y="1956" width="2" height="15" fill="rgb(229,206,38)"/><text x="28.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1972" width="2" height="15" fill="rgb(210,59,14)"/><text x="28.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="1988" width="2" height="15" fill="rgb(213,138,39)"/><text x="28.00" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2004" width="2" height="15" fill="rgb(213,76,36)"/><text x="28.00" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="2020" width="2" height="15" fill="rgb(220,71,42)"/><text x="28.00" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2036" width="2" height="15" fill="rgb(246,172,13)"/><text x="28.00" y="2046.50"></text></g><g><title>&lt;module&gt; (jinja2/runtime.py) (1 samples, 0.19%)</title><rect x="25" y="2052" width="2" height="15" fill="rgb(248,186,23)"/><text x="28.00" y="2062.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2068" width="2" height="15" fill="rgb(248,82,44)"/><text x="28.00" y="2078.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2084" width="2" height="15" fill="rgb(205,142,51)"/><text x="28.00" y="2094.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2100" width="2" height="15" fill="rgb(217,3,50)"/><text x="28.00" y="2110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="25" y="2116" width="2" height="15" fill="rgb(249,82,39)"/><text x="28.00" y="2126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="25" y="2132" width="2" height="15" fill="rgb(254,4,45)"/><text x="28.00" y="2142.50"></text></g><g><title>&lt;module&gt; (jinja2/exceptions.py) (1 samples, 0.19%)</title><rect x="25" y="2148" width="2" height="15" fill="rgb(236,123,6)"/><text x="28.00" y="2158.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="772" width="3" height="15" fill="rgb(231,178,43)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="788" width="3" height="15" fill="rgb(222,163,0)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="804" width="3" height="15" fill="rgb(236,201,40)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="820" width="3" height="15" fill="rgb(221,222,50)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(234,131,15)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(241,9,27)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.19%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(223,140,29)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(220,174,18)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(247,188,15)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(243,192,34)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(211,110,17)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(252,189,32)"/><text x="30.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.19%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(247,26,5)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(215,222,23)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(245,157,13)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(229,83,47)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(216,228,18)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(239,169,6)"/><text x="30.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.19%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(216,195,43)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(241,98,16)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(211,45,18)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(251,34,10)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(238,115,1)"/><text x="30.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(233,200,30)"/><text x="30.00" y="1150.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(244,140,4)"/><text x="30.00" y="1166.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(242,7,5)"/><text x="30.00" y="1182.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(223,50,11)"/><text x="30.00" y="1198.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(218,125,0)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="68" width="22" height="15" fill="rgb(238,197,24)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="84" width="22" height="15" fill="rgb(206,223,2)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="100" width="22" height="15" fill="rgb(251,164,31)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="116" width="22" height="15" fill="rgb(220,63,51)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="132" width="22" height="15" fill="rgb(236,29,3)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_m_cl.py) (10 samples, 1.89%)</title><rect x="10" y="148" width="22" height="15" fill="rgb(252,120,2)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="164" width="22" height="15" fill="rgb(220,120,16)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="180" width="22" height="15" fill="rgb(247,11,17)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="196" width="14" height="15" fill="rgb(206,19,5)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.14%)</title><rect x="18" y="212" width="14" height="15" fill="rgb(221,179,53)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="228" width="14" height="15" fill="rgb(227,24,7)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.14%)</title><rect x="18" y="244" width="14" height="15" fill="rgb(244,182,1)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="260" width="14" height="15" fill="rgb(251,96,43)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="276" width="14" height="15" fill="rgb(221,64,28)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="292" width="14" height="15" fill="rgb(237,172,28)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.14%)</title><rect x="18" y="308" width="14" height="15" fill="rgb(208,131,40)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="324" width="14" height="15" fill="rgb(237,190,12)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.14%)</title><rect x="18" y="340" width="14" height="15" fill="rgb(224,170,26)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="356" width="14" height="15" fill="rgb(209,213,2)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="372" width="14" height="15" fill="rgb(235,61,21)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="388" width="14" height="15" fill="rgb(216,74,47)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.14%)</title><rect x="18" y="404" width="14" height="15" fill="rgb(235,83,2)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="420" width="14" height="15" fill="rgb(229,36,53)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.14%)</title><rect x="18" y="436" width="14" height="15" fill="rgb(224,220,34)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="452" width="14" height="15" fill="rgb(237,182,20)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.14%)</title><rect x="18" y="468" width="14" height="15" fill="rgb(247,74,23)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="484" width="5" height="15" fill="rgb(226,101,33)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="27" y="500" width="5" height="15" fill="rgb(242,18,10)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="516" width="5" height="15" fill="rgb(231,170,17)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.38%)</title><rect x="27" y="532" width="5" height="15" fill="rgb(250,215,42)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="548" width="5" height="15" fill="rgb(241,139,25)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="564" width="5" height="15" fill="rgb(225,156,6)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="580" width="5" height="15" fill="rgb(217,118,37)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="27" y="596" width="5" height="15" fill="rgb(218,168,48)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="612" width="5" height="15" fill="rgb(227,187,46)"/><text x="30.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.38%)</title><rect x="27" y="628" width="5" height="15" fill="rgb(207,206,22)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="644" width="5" height="15" fill="rgb(247,134,50)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="660" width="5" height="15" fill="rgb(234,209,15)"/><text x="30.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="676" width="5" height="15" fill="rgb(249,23,20)"/><text x="30.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="27" y="692" width="5" height="15" fill="rgb(244,61,4)"/><text x="30.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="708" width="5" height="15" fill="rgb(250,144,3)"/><text x="30.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.38%)</title><rect x="27" y="724" width="5" height="15" fill="rgb(231,36,34)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="740" width="5" height="15" fill="rgb(232,17,46)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="27" y="756" width="5" height="15" fill="rgb(222,14,36)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="772" width="2" height="15" fill="rgb(247,149,3)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="788" width="2" height="15" fill="rgb(215,26,6)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="804" width="2" height="15" fill="rgb(217,15,2)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="820" width="2" height="15" fill="rgb(248,32,30)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(225,113,25)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(232,21,33)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(246,122,6)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(251,85,17)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(210,219,19)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.19%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(241,138,54)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(216,90,32)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(211,17,2)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(219,118,0)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(236,161,42)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(232,222,23)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.19%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(224,3,44)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(232,71,20)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(250,167,8)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1060" width="2" height="15" fill="rgb(212,150,47)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1076" width="2" height="15" fill="rgb(235,163,9)"/><text x="33.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1092" width="2" height="15" fill="rgb(219,112,48)"/><text x="33.00" y="1102.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="1108" width="2" height="15" fill="rgb(252,202,4)"/><text x="33.00" y="1118.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(227,60,41)"/><text x="33.00" y="1134.50"></text></g><g><title>0x7f2060497ff9 (?) (1 samples, 0.19%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(222,169,41)"/><text x="35.00" y="222.50"></text></g><g><title>0x7f2060492ef6 (?) (1 samples, 0.19%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(209,85,10)"/><text x="35.00" y="238.50"></text></g><g><title>0x7f2060487962 (?) (1 samples, 0.19%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(232,146,24)"/><text x="35.00" y="254.50"></text></g><g><title>0x7f20604bb7a7 (?) (1 samples, 0.19%)</title><rect x="32" y="260" width="2" height="15" fill="rgb(226,37,50)"/><text x="35.00" y="270.50"></text></g><g><title>0x7f20604bb379 (?) (1 samples, 0.19%)</title><rect x="32" y="276" width="2" height="15" fill="rgb(232,19,7)"/><text x="35.00" y="286.50"></text></g><g><title>0x7f20609198b8 (?) (1 samples, 0.19%)</title><rect x="32" y="292" width="2" height="15" fill="rgb(243,137,43)"/><text x="35.00" y="302.50"></text></g><g><title>0x7f2060917c7f (?) (1 samples, 0.19%)</title><rect x="32" y="308" width="2" height="15" fill="rgb(207,65,17)"/><text x="35.00" y="318.50"></text></g><g><title>0x7f206092a3b2 (?) (1 samples, 0.19%)</title><rect x="32" y="324" width="2" height="15" fill="rgb(249,196,23)"/><text x="35.00" y="334.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(231,198,17)"/><text x="39.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(219,70,4)"/><text x="39.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="36" y="372" width="3" height="15" fill="rgb(209,117,20)"/><text x="39.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="36" y="388" width="3" height="15" fill="rgb(209,130,14)"/><text x="39.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="404" width="3" height="15" fill="rgb(248,140,14)"/><text x="39.00" y="414.50"></text></g><g><title>0x7f20a07db00a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="36" y="420" width="3" height="15" fill="rgb(252,173,40)"/><text x="39.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="39" y="340" width="2" height="15" fill="rgb(207,174,20)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="39" y="356" width="2" height="15" fill="rgb(235,142,17)"/><text x="42.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="39" y="372" width="2" height="15" fill="rgb(234,138,47)"/><text x="42.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="39" y="388" width="2" height="15" fill="rgb(244,145,20)"/><text x="42.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="39" y="404" width="2" height="15" fill="rgb(250,114,26)"/><text x="42.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="39" y="420" width="2" height="15" fill="rgb(234,226,21)"/><text x="42.00" y="430.50"></text></g><g><title>0x7f20a07db028 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="39" y="436" width="2" height="15" fill="rgb(224,147,10)"/><text x="42.00" y="446.50"></text></g><g><title>0x7f20a07d8c3d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="39" y="452" width="2" height="15" fill="rgb(218,188,14)"/><text x="42.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="41" y="340" width="2" height="15" fill="rgb(226,226,8)"/><text x="44.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="41" y="356" width="2" height="15" fill="rgb(214,96,24)"/><text x="44.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="41" y="372" width="2" height="15" fill="rgb(235,34,30)"/><text x="44.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="41" y="388" width="2" height="15" fill="rgb(227,37,45)"/><text x="44.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="41" y="404" width="2" height="15" fill="rgb(208,9,10)"/><text x="44.00" y="414.50"></text></g><g><title>0x7f20a07d9906 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="41" y="420" width="2" height="15" fill="rgb(237,90,38)"/><text x="44.00" y="430.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="43" y="340" width="2" height="15" fill="rgb(253,146,13)"/><text x="46.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="43" y="356" width="2" height="15" fill="rgb(206,70,29)"/><text x="46.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="43" y="372" width="2" height="15" fill="rgb(225,13,14)"/><text x="46.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="43" y="388" width="2" height="15" fill="rgb(254,18,29)"/><text x="46.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="43" y="404" width="2" height="15" fill="rgb(217,22,20)"/><text x="46.00" y="414.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="340" width="2" height="15" fill="rgb(226,44,40)"/><text x="48.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="356" width="2" height="15" fill="rgb(217,79,49)"/><text x="48.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="372" width="2" height="15" fill="rgb(206,183,41)"/><text x="48.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="388" width="2" height="15" fill="rgb(227,181,38)"/><text x="48.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="404" width="2" height="15" fill="rgb(228,61,0)"/><text x="48.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="420" width="2" height="15" fill="rgb(243,29,6)"/><text x="48.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="436" width="2" height="15" fill="rgb(214,137,46)"/><text x="48.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="452" width="2" height="15" fill="rgb(225,168,43)"/><text x="48.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="468" width="2" height="15" fill="rgb(241,229,43)"/><text x="48.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="484" width="2" height="15" fill="rgb(242,137,22)"/><text x="48.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="45" y="500" width="2" height="15" fill="rgb(254,5,38)"/><text x="48.00" y="510.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="47" y="340" width="3" height="15" fill="rgb(238,214,11)"/><text x="50.00" y="350.50"></text></g><g><title>0x7f20a07f9d67 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="47" y="356" width="3" height="15" fill="rgb(212,47,26)"/><text x="50.00" y="366.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="50" y="340" width="2" height="15" fill="rgb(229,229,3)"/><text x="53.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="50" y="356" width="2" height="15" fill="rgb(222,229,3)"/><text x="53.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="50" y="372" width="2" height="15" fill="rgb(227,70,46)"/><text x="53.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="50" y="388" width="2" height="15" fill="rgb(220,125,27)"/><text x="53.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="50" y="404" width="2" height="15" fill="rgb(232,57,4)"/><text x="53.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="52" y="372" width="2" height="15" fill="rgb(225,56,3)"/><text x="55.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="54" y="372" width="2" height="15" fill="rgb(219,222,0)"/><text x="57.00" y="382.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (12 samples, 2.27%)</title><rect x="32" y="68" width="27" height="15" fill="rgb(215,174,7)"/><text x="35.00" y="78.50">p..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (12 samples, 2.27%)</title><rect x="32" y="84" width="27" height="15" fill="rgb(216,197,44)"/><text x="35.00" y="94.50">s..</text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (12 samples, 2.27%)</title><rect x="32" y="100" width="27" height="15" fill="rgb(208,222,7)"/><text x="35.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.27%)</title><rect x="32" y="116" width="27" height="15" fill="rgb(223,87,39)"/><text x="35.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.27%)</title><rect x="32" y="132" width="27" height="15" fill="rgb(235,14,1)"/><text x="35.00" y="142.50">&lt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.27%)</title><rect x="32" y="148" width="27" height="15" fill="rgb(205,170,30)"/><text x="35.00" y="158.50">r..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (12 samples, 2.27%)</title><rect x="32" y="164" width="27" height="15" fill="rgb(219,86,9)"/><text x="35.00" y="174.50">_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (12 samples, 2.27%)</title><rect x="32" y="180" width="27" height="15" fill="rgb(238,67,42)"/><text x="35.00" y="190.50">r..</text></g><g><title>run (onnxruntime/capi/session.py) (12 samples, 2.27%)</title><rect x="32" y="196" width="27" height="15" fill="rgb(250,100,51)"/><text x="35.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="212" width="25" height="15" fill="rgb(216,165,37)"/><text x="37.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="228" width="25" height="15" fill="rgb(235,40,52)"/><text x="37.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="244" width="25" height="15" fill="rgb(213,91,29)"/><text x="37.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="260" width="25" height="15" fill="rgb(225,74,5)"/><text x="37.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="276" width="25" height="15" fill="rgb(226,2,26)"/><text x="37.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="292" width="25" height="15" fill="rgb(222,64,54)"/><text x="37.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="308" width="25" height="15" fill="rgb(216,43,51)"/><text x="37.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.08%)</title><rect x="34" y="324" width="25" height="15" fill="rgb(228,35,1)"/><text x="37.00" y="334.50">o..</text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="52" y="340" width="7" height="15" fill="rgb(235,74,49)"/><text x="55.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.57%)</title><rect x="52" y="356" width="7" height="15" fill="rgb(207,23,16)"/><text x="55.00" y="366.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="56" y="372" width="3" height="15" fill="rgb(212,149,12)"/><text x="59.00" y="382.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="81" y="180" width="2" height="15" fill="rgb(206,146,41)"/><text x="84.00" y="190.50"></text></g><g><title>0x7f20a07db028 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="81" y="196" width="2" height="15" fill="rgb(206,191,14)"/><text x="84.00" y="206.50"></text></g><g><title>0x7f20a07d8bc6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(242,109,2)"/><text x="84.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.38%)</title><rect x="184" y="196" width="4" height="15" fill="rgb(252,27,5)"/><text x="187.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (2 samples, 0.38%)</title><rect x="197" y="212" width="5" height="15" fill="rgb(240,162,51)"/><text x="200.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.38%)</title><rect x="197" y="228" width="5" height="15" fill="rgb(224,77,13)"/><text x="200.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.38%)</title><rect x="197" y="244" width="5" height="15" fill="rgb(245,76,22)"/><text x="200.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.38%)</title><rect x="197" y="260" width="5" height="15" fill="rgb(219,208,40)"/><text x="200.00" y="270.50"></text></g><g><title>0x7f20a07db028 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="197" y="276" width="5" height="15" fill="rgb(212,111,39)"/><text x="200.00" y="286.50"></text></g><g><title>0x7f20a07d8bc6 (libc-2.29.so) (2 samples, 0.38%)</title><rect x="197" y="292" width="5" height="15" fill="rgb(238,111,48)"/><text x="200.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="206" y="244" width="2" height="15" fill="rgb(210,10,46)"/><text x="209.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.19%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(218,150,14)"/><text x="209.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="208" y="292" width="3" height="15" fill="rgb(216,71,36)"/><text x="211.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 0.95%)</title><rect x="202" y="212" width="11" height="15" fill="rgb(224,220,3)"/><text x="205.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.76%)</title><rect x="204" y="228" width="9" height="15" fill="rgb(205,175,45)"/><text x="207.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.38%)</title><rect x="208" y="244" width="5" height="15" fill="rgb(220,150,35)"/><text x="211.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.38%)</title><rect x="208" y="260" width="5" height="15" fill="rgb(227,129,31)"/><text x="211.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="208" y="276" width="5" height="15" fill="rgb(247,64,9)"/><text x="211.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="211" y="292" width="2" height="15" fill="rgb(247,191,23)"/><text x="214.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="211" y="308" width="2" height="15" fill="rgb(220,63,11)"/><text x="214.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="211" y="324" width="2" height="15" fill="rgb(211,179,46)"/><text x="214.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_sum.py) (1 samples, 0.19%)</title><rect x="213" y="212" width="2" height="15" fill="rgb(232,16,1)"/><text x="216.00" y="222.50"></text></g><g><title>array_add (number.c) (1 samples, 0.19%)</title><rect x="213" y="228" width="2" height="15" fill="rgb(207,128,17)"/><text x="216.00" y="238.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.19%)</title><rect x="215" y="212" width="2" height="15" fill="rgb(230,210,3)"/><text x="218.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 0.57%)</title><rect x="217" y="212" width="7" height="15" fill="rgb(251,149,38)"/><text x="220.00" y="222.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.19%)</title><rect x="244" y="244" width="2" height="15" fill="rgb(223,51,26)"/><text x="247.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="251" y="260" width="2" height="15" fill="rgb(215,153,12)"/><text x="254.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="251" y="276" width="2" height="15" fill="rgb(223,57,33)"/><text x="254.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="251" y="292" width="2" height="15" fill="rgb(251,39,19)"/><text x="254.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="253" y="276" width="5" height="15" fill="rgb(223,164,54)"/><text x="256.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="255" y="292" width="3" height="15" fill="rgb(248,193,3)"/><text x="258.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="258" y="276" width="2" height="15" fill="rgb(236,94,33)"/><text x="261.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="258" y="292" width="2" height="15" fill="rgb(226,4,22)"/><text x="261.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="258" y="308" width="2" height="15" fill="rgb(247,2,18)"/><text x="261.00" y="318.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.19%)</title><rect x="258" y="324" width="2" height="15" fill="rgb(235,183,52)"/><text x="261.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.19%)</title><rect x="258" y="340" width="2" height="15" fill="rgb(223,152,20)"/><text x="261.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="262" y="340" width="2" height="15" fill="rgb(233,25,28)"/><text x="265.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.19%)</title><rect x="262" y="356" width="2" height="15" fill="rgb(215,221,0)"/><text x="265.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.38%)</title><rect x="262" y="324" width="5" height="15" fill="rgb(226,215,22)"/><text x="265.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.19%)</title><rect x="264" y="340" width="3" height="15" fill="rgb(220,164,2)"/><text x="267.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="264" y="356" width="3" height="15" fill="rgb(251,220,31)"/><text x="267.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="264" y="372" width="3" height="15" fill="rgb(207,209,11)"/><text x="267.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="264" y="388" width="3" height="15" fill="rgb(231,26,5)"/><text x="267.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="264" y="404" width="3" height="15" fill="rgb(207,110,44)"/><text x="267.00" y="414.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="264" y="420" width="3" height="15" fill="rgb(210,45,47)"/><text x="267.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="267" y="324" width="2" height="15" fill="rgb(241,26,40)"/><text x="270.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.76%)</title><rect x="262" y="308" width="9" height="15" fill="rgb(242,81,31)"/><text x="265.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="269" y="324" width="2" height="15" fill="rgb(210,112,38)"/><text x="272.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="269" y="340" width="2" height="15" fill="rgb(224,29,8)"/><text x="272.00" y="350.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="269" y="356" width="2" height="15" fill="rgb(219,160,42)"/><text x="272.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="271" y="324" width="2" height="15" fill="rgb(213,2,6)"/><text x="274.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.33%)</title><rect x="260" y="276" width="15" height="15" fill="rgb(233,173,53)"/><text x="263.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.33%)</title><rect x="260" y="292" width="15" height="15" fill="rgb(233,97,15)"/><text x="263.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.38%)</title><rect x="271" y="308" width="4" height="15" fill="rgb(227,17,19)"/><text x="274.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="273" y="324" width="2" height="15" fill="rgb(228,33,47)"/><text x="276.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.08%)</title><rect x="253" y="260" width="25" height="15" fill="rgb(235,90,52)"/><text x="256.00" y="270.50">P..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="275" y="276" width="3" height="15" fill="rgb(251,93,18)"/><text x="278.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="275" y="292" width="3" height="15" fill="rgb(236,54,34)"/><text x="278.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="275" y="308" width="3" height="15" fill="rgb(237,41,17)"/><text x="278.00" y="318.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="278" y="260" width="2" height="15" fill="rgb(222,103,21)"/><text x="281.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (23 samples, 4.36%)</title><rect x="231" y="228" width="51" height="15" fill="rgb(251,202,15)"/><text x="234.00" y="238.50">_run ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 3.03%)</title><rect x="246" y="244" width="36" height="15" fill="rgb(225,116,20)"/><text x="249.00" y="254.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="280" y="260" width="2" height="15" fill="rgb(209,159,23)"/><text x="283.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="289" y="260" width="2" height="15" fill="rgb(219,37,45)"/><text x="292.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="289" y="276" width="2" height="15" fill="rgb(240,199,10)"/><text x="292.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="289" y="292" width="2" height="15" fill="rgb(211,220,21)"/><text x="292.00" y="302.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.19%)</title><rect x="293" y="356" width="3" height="15" fill="rgb(238,172,38)"/><text x="296.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.19%)</title><rect x="293" y="372" width="3" height="15" fill="rgb(247,32,6)"/><text x="296.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (3 samples, 0.57%)</title><rect x="291" y="340" width="7" height="15" fill="rgb(235,92,26)"/><text x="294.00" y="350.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.19%)</title><rect x="296" y="356" width="2" height="15" fill="rgb(219,39,28)"/><text x="299.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.19%)</title><rect x="296" y="372" width="2" height="15" fill="rgb(249,124,39)"/><text x="299.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.76%)</title><rect x="291" y="292" width="9" height="15" fill="rgb(228,124,47)"/><text x="294.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 0.76%)</title><rect x="291" y="308" width="9" height="15" fill="rgb(249,71,40)"/><text x="294.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (4 samples, 0.76%)</title><rect x="291" y="324" width="9" height="15" fill="rgb(220,97,10)"/><text x="294.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="298" y="340" width="2" height="15" fill="rgb(218,96,32)"/><text x="301.00" y="350.50"></text></g><g><title>0x7f20a07dab12 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="298" y="356" width="2" height="15" fill="rgb(239,104,11)"/><text x="301.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.95%)</title><rect x="291" y="276" width="11" height="15" fill="rgb(210,172,3)"/><text x="294.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="300" y="292" width="2" height="15" fill="rgb(241,156,29)"/><text x="303.00" y="302.50"></text></g><g><title>FLOAT_log (loops.c.src) (1 samples, 0.19%)</title><rect x="300" y="308" width="2" height="15" fill="rgb(247,17,49)"/><text x="303.00" y="318.50"></text></g><g><title>0x7f20a095b964 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="300" y="324" width="2" height="15" fill="rgb(229,140,9)"/><text x="303.00" y="334.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="305" y="308" width="2" height="15" fill="rgb(233,196,30)"/><text x="308.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="305" y="324" width="2" height="15" fill="rgb(252,183,3)"/><text x="308.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="305" y="340" width="2" height="15" fill="rgb(209,66,31)"/><text x="308.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="305" y="356" width="2" height="15" fill="rgb(215,69,33)"/><text x="308.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.57%)</title><rect x="302" y="276" width="7" height="15" fill="rgb(244,115,7)"/><text x="305.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="305" y="292" width="4" height="15" fill="rgb(215,8,28)"/><text x="308.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="307" y="308" width="2" height="15" fill="rgb(245,106,36)"/><text x="310.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (13 samples, 2.46%)</title><rect x="282" y="228" width="29" height="15" fill="rgb(252,106,31)"/><text x="285.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.89%)</title><rect x="289" y="244" width="22" height="15" fill="rgb(245,106,52)"/><text x="292.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.70%)</title><rect x="291" y="260" width="20" height="15" fill="rgb(222,38,1)"/><text x="294.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="309" y="276" width="2" height="15" fill="rgb(237,186,54)"/><text x="312.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="313" y="244" width="3" height="15" fill="rgb(236,201,13)"/><text x="316.00" y="254.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="313" y="260" width="3" height="15" fill="rgb(227,133,32)"/><text x="316.00" y="270.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="313" y="276" width="3" height="15" fill="rgb(241,98,54)"/><text x="316.00" y="286.50"></text></g><g><title>0x7f20a07fa12b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="331" y="308" width="3" height="15" fill="rgb(240,56,29)"/><text x="334.00" y="318.50"></text></g><g><title>0x7f20a07fa14a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="336" y="388" width="2" height="15" fill="rgb(224,118,5)"/><text x="339.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.38%)</title><rect x="338" y="388" width="4" height="15" fill="rgb(207,59,10)"/><text x="341.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.14%)</title><rect x="334" y="372" width="13" height="15" fill="rgb(222,10,42)"/><text x="337.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.38%)</title><rect x="342" y="388" width="5" height="15" fill="rgb(206,70,32)"/><text x="345.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.38%)</title><rect x="347" y="372" width="4" height="15" fill="rgb(238,137,40)"/><text x="350.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="349" y="388" width="2" height="15" fill="rgb(243,37,29)"/><text x="352.00" y="398.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.19%)</title><rect x="351" y="372" width="3" height="15" fill="rgb(225,137,51)"/><text x="354.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.19%)</title><rect x="351" y="388" width="3" height="15" fill="rgb(229,97,35)"/><text x="354.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="351" y="404" width="3" height="15" fill="rgb(244,201,11)"/><text x="354.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="351" y="420" width="3" height="15" fill="rgb(208,96,45)"/><text x="354.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="351" y="436" width="3" height="15" fill="rgb(244,118,30)"/><text x="354.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="351" y="452" width="3" height="15" fill="rgb(220,10,24)"/><text x="354.00" y="462.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.19%)</title><rect x="351" y="468" width="3" height="15" fill="rgb(249,106,10)"/><text x="354.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="351" y="484" width="3" height="15" fill="rgb(211,48,2)"/><text x="354.00" y="494.50"></text></g><g><title>0x7f20a07db2e8 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="351" y="500" width="3" height="15" fill="rgb(211,163,36)"/><text x="354.00" y="510.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (10 samples, 1.89%)</title><rect x="334" y="356" width="22" height="15" fill="rgb(214,100,48)"/><text x="337.00" y="366.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="354" y="372" width="2" height="15" fill="rgb(235,177,14)"/><text x="357.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="354" y="388" width="2" height="15" fill="rgb(241,64,38)"/><text x="357.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="354" y="404" width="2" height="15" fill="rgb(252,29,32)"/><text x="357.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="354" y="420" width="2" height="15" fill="rgb(207,219,0)"/><text x="357.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (21 samples, 3.98%)</title><rect x="311" y="228" width="47" height="15" fill="rgb(236,218,51)"/><text x="314.00" y="238.50">_run..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (19 samples, 3.60%)</title><rect x="316" y="244" width="42" height="15" fill="rgb(223,159,39)"/><text x="319.00" y="254.50">sum..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (18 samples, 3.41%)</title><rect x="318" y="260" width="40" height="15" fill="rgb(223,7,16)"/><text x="321.00" y="270.50">arr..</text></g><g><title>sum (numpy/core/fromnumeric.py) (17 samples, 3.22%)</title><rect x="320" y="276" width="38" height="15" fill="rgb(209,201,40)"/><text x="323.00" y="286.50">sum..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (13 samples, 2.46%)</title><rect x="329" y="292" width="29" height="15" fill="rgb(251,82,33)"/><text x="332.00" y="302.50">_w..</text></g><g><title>ufunc_reduce (ufunc_object.c) (11 samples, 2.08%)</title><rect x="334" y="308" width="24" height="15" fill="rgb(210,21,42)"/><text x="337.00" y="318.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.08%)</title><rect x="334" y="324" width="24" height="15" fill="rgb(237,46,23)"/><text x="337.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 2.08%)</title><rect x="334" y="340" width="24" height="15" fill="rgb(247,5,19)"/><text x="337.00" y="350.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.19%)</title><rect x="356" y="356" width="2" height="15" fill="rgb(231,156,34)"/><text x="359.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="356" y="372" width="2" height="15" fill="rgb(222,51,5)"/><text x="359.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="356" y="388" width="2" height="15" fill="rgb(243,27,29)"/><text x="359.00" y="398.50"></text></g><g><title>0x7f2061337422 (?) (1 samples, 0.19%)</title><rect x="360" y="244" width="3" height="15" fill="rgb(248,219,13)"/><text x="363.00" y="254.50"></text></g><g><title>0x7f206133d89e (?) (1 samples, 0.19%)</title><rect x="360" y="260" width="3" height="15" fill="rgb(210,52,15)"/><text x="363.00" y="270.50"></text></g><g><title>0x7f206133d74f (?) (1 samples, 0.19%)</title><rect x="360" y="276" width="3" height="15" fill="rgb(250,178,39)"/><text x="363.00" y="286.50"></text></g><g><title>0x7f2061343a3a (?) (1 samples, 0.19%)</title><rect x="360" y="292" width="3" height="15" fill="rgb(231,69,52)"/><text x="363.00" y="302.50"></text></g><g><title>0x7f206a79fab9 (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="360" y="308" width="3" height="15" fill="rgb(210,115,41)"/><text x="363.00" y="318.50"></text></g><g><title>0x7f206a7a0ead (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="360" y="324" width="3" height="15" fill="rgb(235,216,7)"/><text x="363.00" y="334.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.19%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(239,228,40)"/><text x="366.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.19%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(241,207,6)"/><text x="366.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.19%)</title><rect x="363" y="324" width="2" height="15" fill="rgb(209,80,14)"/><text x="366.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.19%)</title><rect x="363" y="340" width="2" height="15" fill="rgb(248,43,31)"/><text x="366.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleClassifierFloat, void&gt;::type_caster (cast.h) (1 samples, 0.19%)</title><rect x="363" y="356" width="2" height="15" fill="rgb(234,10,22)"/><text x="366.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.19%)</title><rect x="363" y="372" width="2" height="15" fill="rgb(245,155,31)"/><text x="366.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleClassifierFloat&gt;::type_caster_base (cast.h) (1 samples, 0.19%)</title><rect x="363" y="388" width="2" height="15" fill="rgb(234,125,38)"/><text x="366.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.19%)</title><rect x="363" y="404" width="2" height="15" fill="rgb(219,100,41)"/><text x="366.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::any_container&lt;long, void&gt; (common.h) (1 samples, 0.19%)</title><rect x="363" y="420" width="2" height="15" fill="rgb(205,131,10)"/><text x="366.00" y="430.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::any_container&lt;long const*, void&gt; (common.h) (1 samples, 0.19%)</title><rect x="363" y="436" width="2" height="15" fill="rgb(232,197,4)"/><text x="366.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector&lt;long const*, void&gt; (stl_vector.h) (1 samples, 0.19%)</title><rect x="363" y="452" width="2" height="15" fill="rgb(219,196,22)"/><text x="366.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_initialize_dispatch&lt;long const*&gt; (stl_vector.h) (1 samples, 0.19%)</title><rect x="363" y="468" width="2" height="15" fill="rgb(213,187,19)"/><text x="366.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_initialize&lt;long const*&gt; (stl_vector.h) (1 samples, 0.19%)</title><rect x="363" y="484" width="2" height="15" fill="rgb(210,138,6)"/><text x="366.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="363" y="500" width="2" height="15" fill="rgb(235,117,25)"/><text x="366.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="363" y="516" width="2" height="15" fill="rgb(216,181,13)"/><text x="366.00" y="526.50"></text></g><g><title>0x7f206a7a0ea0 (libgomp.so.1.0.0) (3 samples, 0.57%)</title><rect x="365" y="468" width="7" height="15" fill="rgb(225,60,47)"/><text x="368.00" y="478.50"></text></g><g><title>0x7f206a7a0ea9 (libgomp.so.1.0.0) (8 samples, 1.52%)</title><rect x="372" y="468" width="17" height="15" fill="rgb(244,26,11)"/><text x="375.00" y="478.50"></text></g><g><title>0x7f206a7a0eab (libgomp.so.1.0.0) (5 samples, 0.95%)</title><rect x="389" y="468" width="12" height="15" fill="rgb(241,177,10)"/><text x="392.00" y="478.50"></text></g><g><title>0x7f206a79fab9 (libgomp.so.1.0.0) (25 samples, 4.73%)</title><rect x="365" y="452" width="56" height="15" fill="rgb(243,8,46)"/><text x="368.00" y="462.50">0x7f2..</text></g><g><title>0x7f206a7a0ead (libgomp.so.1.0.0) (9 samples, 1.70%)</title><rect x="401" y="468" width="20" height="15" fill="rgb(247,132,29)"/><text x="404.00" y="478.50"></text></g><g><title>0x7f206a7a0cfb (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="421" y="484" width="2" height="15" fill="rgb(225,46,27)"/><text x="424.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (106 samples, 20.08%)</title><rect x="188" y="196" width="237" height="15" fill="rgb(210,13,14)"/><text x="191.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (90 samples, 17.05%)</title><rect x="224" y="212" width="201" height="15" fill="rgb(236,106,16)"/><text x="227.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (30 samples, 5.68%)</title><rect x="358" y="228" width="67" height="15" fill="rgb(213,36,13)"/><text x="361.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (28 samples, 5.30%)</title><rect x="363" y="244" width="62" height="15" fill="rgb(216,88,32)"/><text x="366.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (28 samples, 5.30%)</title><rect x="363" y="260" width="62" height="15" fill="rgb(228,197,2)"/><text x="366.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (28 samples, 5.30%)</title><rect x="363" y="276" width="62" height="15" fill="rgb(221,157,24)"/><text x="366.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (27 samples, 5.11%)</title><rect x="365" y="292" width="60" height="15" fill="rgb(232,103,24)"/><text x="368.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (27 samples, 5.11%)</title><rect x="365" y="308" width="60" height="15" fill="rgb(253,57,0)"/><text x="368.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (27 samples, 5.11%)</title><rect x="365" y="324" width="60" height="15" fill="rgb(250,200,22)"/><text x="368.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (27 samples, 5.11%)</title><rect x="365" y="340" width="60" height="15" fill="rgb(217,14,25)"/><text x="368.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (27 samples, 5.11%)</title><rect x="365" y="356" width="60" height="15" fill="rgb(245,121,23)"/><text x="368.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (27 samples, 5.11%)</title><rect x="365" y="372" width="60" height="15" fill="rgb(249,14,54)"/><text x="368.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (27 samples, 5.11%)</title><rect x="365" y="388" width="60" height="15" fill="rgb(225,111,23)"/><text x="368.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (27 samples, 5.11%)</title><rect x="365" y="404" width="60" height="15" fill="rgb(236,128,39)"/><text x="368.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (27 samples, 5.11%)</title><rect x="365" y="420" width="60" height="15" fill="rgb(245,172,7)"/><text x="368.00" y="430.50">Runtim..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (27 samples, 5.11%)</title><rect x="365" y="436" width="60" height="15" fill="rgb(228,38,4)"/><text x="368.00" y="446.50">pybind..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.38%)</title><rect x="421" y="452" width="4" height="15" fill="rgb(213,96,26)"/><text x="424.00" y="462.50"></text></g><g><title>0x7f206a79edaa (libgomp.so.1.0.0) (2 samples, 0.38%)</title><rect x="421" y="468" width="4" height="15" fill="rgb(240,187,8)"/><text x="424.00" y="478.50"></text></g><g><title>0x7f206a7a0cfd (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="423" y="484" width="2" height="15" fill="rgb(220,88,14)"/><text x="426.00" y="494.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="454" y="452" width="2" height="15" fill="rgb(215,115,48)"/><text x="457.00" y="462.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="454" y="388" width="5" height="15" fill="rgb(206,13,1)"/><text x="457.00" y="398.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="454" y="404" width="5" height="15" fill="rgb(254,42,25)"/><text x="457.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (2 samples, 0.38%)</title><rect x="454" y="420" width="5" height="15" fill="rgb(226,79,31)"/><text x="457.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 0.38%)</title><rect x="454" y="436" width="5" height="15" fill="rgb(212,150,16)"/><text x="457.00" y="446.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="456" y="452" width="3" height="15" fill="rgb(217,110,52)"/><text x="459.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="456" y="468" width="3" height="15" fill="rgb(224,152,33)"/><text x="459.00" y="478.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="459" y="388" width="2" height="15" fill="rgb(229,223,3)"/><text x="462.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="463" y="436" width="2" height="15" fill="rgb(226,117,19)"/><text x="466.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.57%)</title><rect x="461" y="420" width="7" height="15" fill="rgb(218,80,18)"/><text x="464.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.19%)</title><rect x="465" y="436" width="3" height="15" fill="rgb(224,168,48)"/><text x="468.00" y="446.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.19%)</title><rect x="468" y="420" width="2" height="15" fill="rgb(206,91,5)"/><text x="471.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="468" y="436" width="2" height="15" fill="rgb(211,117,17)"/><text x="471.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="468" y="452" width="2" height="15" fill="rgb(248,84,43)"/><text x="471.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.95%)</title><rect x="461" y="388" width="11" height="15" fill="rgb(231,32,21)"/><text x="464.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.95%)</title><rect x="461" y="404" width="11" height="15" fill="rgb(223,75,30)"/><text x="464.00" y="414.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="470" y="420" width="2" height="15" fill="rgb(236,184,27)"/><text x="473.00" y="430.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="470" y="436" width="2" height="15" fill="rgb(248,147,51)"/><text x="473.00" y="446.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (12 samples, 2.27%)</title><rect x="450" y="340" width="27" height="15" fill="rgb(231,228,45)"/><text x="453.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.08%)</title><rect x="452" y="356" width="25" height="15" fill="rgb(235,69,10)"/><text x="455.00" y="366.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.89%)</title><rect x="454" y="372" width="23" height="15" fill="rgb(235,194,47)"/><text x="457.00" y="382.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.38%)</title><rect x="472" y="388" width="5" height="15" fill="rgb(213,40,47)"/><text x="475.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.38%)</title><rect x="472" y="404" width="5" height="15" fill="rgb(245,137,20)"/><text x="475.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="474" y="420" width="3" height="15" fill="rgb(212,156,26)"/><text x="477.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="474" y="436" width="3" height="15" fill="rgb(213,95,45)"/><text x="477.00" y="446.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.19%)</title><rect x="486" y="356" width="2" height="15" fill="rgb(239,150,37)"/><text x="489.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (6 samples, 1.14%)</title><rect x="477" y="340" width="13" height="15" fill="rgb(244,223,45)"/><text x="480.00" y="350.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.19%)</title><rect x="488" y="356" width="2" height="15" fill="rgb(250,88,11)"/><text x="491.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.76%)</title><rect x="501" y="356" width="9" height="15" fill="rgb(229,43,24)"/><text x="504.00" y="366.50"></text></g><g><title>0x7f20a07efe82 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="508" y="372" width="2" height="15" fill="rgb(221,145,50)"/><text x="511.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (5 samples, 0.95%)</title><rect x="519" y="404" width="11" height="15" fill="rgb(241,105,0)"/><text x="522.00" y="414.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.57%)</title><rect x="524" y="420" width="6" height="15" fill="rgb(243,213,6)"/><text x="527.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.57%)</title><rect x="524" y="436" width="6" height="15" fill="rgb(206,7,36)"/><text x="527.00" y="446.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 2.08%)</title><rect x="510" y="356" width="25" height="15" fill="rgb(245,140,6)"/><text x="513.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (11 samples, 2.08%)</title><rect x="510" y="372" width="25" height="15" fill="rgb(239,33,24)"/><text x="513.00" y="382.50">a..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (10 samples, 1.89%)</title><rect x="512" y="388" width="23" height="15" fill="rgb(219,8,32)"/><text x="515.00" y="398.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.38%)</title><rect x="530" y="404" width="5" height="15" fill="rgb(247,175,39)"/><text x="533.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.38%)</title><rect x="530" y="420" width="5" height="15" fill="rgb(237,214,28)"/><text x="533.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.19%)</title><rect x="532" y="436" width="3" height="15" fill="rgb(254,77,39)"/><text x="535.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="532" y="452" width="3" height="15" fill="rgb(249,92,6)"/><text x="535.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="532" y="468" width="3" height="15" fill="rgb(208,223,15)"/><text x="535.00" y="478.50"></text></g><g><title>PyArray_Return (scalarapi.c) (2 samples, 0.38%)</title><rect x="535" y="372" width="4" height="15" fill="rgb(243,174,21)"/><text x="538.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="535" y="388" width="4" height="15" fill="rgb(240,100,40)"/><text x="538.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="537" y="404" width="2" height="15" fill="rgb(231,87,50)"/><text x="540.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="539" y="372" width="2" height="15" fill="rgb(243,5,22)"/><text x="542.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="539" y="388" width="2" height="15" fill="rgb(207,170,39)"/><text x="542.00" y="398.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.19%)</title><rect x="544" y="388" width="2" height="15" fill="rgb(239,214,20)"/><text x="547.00" y="398.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.19%)</title><rect x="544" y="404" width="2" height="15" fill="rgb(227,186,25)"/><text x="547.00" y="414.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="546" y="388" width="2" height="15" fill="rgb(248,86,34)"/><text x="549.00" y="398.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="548" y="404" width="2" height="15" fill="rgb(208,112,1)"/><text x="551.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="548" y="388" width="5" height="15" fill="rgb(237,212,47)"/><text x="551.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="550" y="404" width="3" height="15" fill="rgb(216,66,41)"/><text x="553.00" y="414.50"></text></g><g><title>DOUBLE_isnan (loops.c.src) (1 samples, 0.19%)</title><rect x="550" y="420" width="3" height="15" fill="rgb(235,140,47)"/><text x="553.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (2 samples, 0.38%)</title><rect x="557" y="420" width="5" height="15" fill="rgb(221,161,1)"/><text x="560.00" y="430.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="559" y="436" width="3" height="15" fill="rgb(213,158,40)"/><text x="562.00" y="446.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="559" y="452" width="3" height="15" fill="rgb(215,93,54)"/><text x="562.00" y="462.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="559" y="468" width="3" height="15" fill="rgb(233,8,6)"/><text x="562.00" y="478.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (226 samples, 42.80%)</title><rect x="59" y="164" width="505" height="15" fill="rgb(230,99,32)"/><text x="62.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (215 samples, 40.72%)</title><rect x="83" y="180" width="481" height="15" fill="rgb(206,222,47)"/><text x="86.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (62 samples, 11.74%)</title><rect x="425" y="196" width="139" height="15" fill="rgb(239,221,52)"/><text x="428.00" y="206.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (62 samples, 11.74%)</title><rect x="425" y="212" width="139" height="15" fill="rgb(227,171,13)"/><text x="428.00" y="222.50">_run (mlprodict/o..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (59 samples, 11.17%)</title><rect x="432" y="228" width="132" height="15" fill="rgb(222,57,53)"/><text x="435.00" y="238.50">clip (&lt;__array_f..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (59 samples, 11.17%)</title><rect x="432" y="244" width="132" height="15" fill="rgb(242,147,32)"/><text x="435.00" y="254.50">array_implement_..</text></g><g><title>clip (numpy/core/fromnumeric.py) (58 samples, 10.98%)</title><rect x="434" y="260" width="130" height="15" fill="rgb(249,197,13)"/><text x="437.00" y="270.50">clip (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (57 samples, 10.80%)</title><rect x="436" y="276" width="128" height="15" fill="rgb(238,150,26)"/><text x="439.00" y="286.50">_wrapfunc (numpy..</text></g><g><title>array_clip (methods.c) (56 samples, 10.61%)</title><rect x="439" y="292" width="125" height="15" fill="rgb(243,32,8)"/><text x="442.00" y="302.50">array_clip (met..</text></g><g><title>forward_ndarray_method (methods.c) (56 samples, 10.61%)</title><rect x="439" y="308" width="125" height="15" fill="rgb(235,32,12)"/><text x="442.00" y="318.50">forward_ndarray..</text></g><g><title>_clip (numpy/core/_methods.py) (55 samples, 10.42%)</title><rect x="441" y="324" width="123" height="15" fill="rgb(245,212,1)"/><text x="444.00" y="334.50">_clip (numpy/co..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (33 samples, 6.25%)</title><rect x="490" y="340" width="74" height="15" fill="rgb(240,158,30)"/><text x="493.00" y="350.50">_clip_de..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.46%)</title><rect x="535" y="356" width="29" height="15" fill="rgb(230,98,44)"/><text x="538.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.89%)</title><rect x="541" y="372" width="23" height="15" fill="rgb(245,118,29)"/><text x="544.00" y="382.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (5 samples, 0.95%)</title><rect x="553" y="388" width="11" height="15" fill="rgb(220,158,51)"/><text x="556.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (4 samples, 0.76%)</title><rect x="555" y="404" width="9" height="15" fill="rgb(254,162,29)"/><text x="558.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="562" y="420" width="2" height="15" fill="rgb(253,55,24)"/><text x="565.00" y="430.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (227 samples, 42.99%)</title><rect x="59" y="100" width="507" height="15" fill="rgb(235,165,15)"/><text x="62.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 42.99%)</title><rect x="59" y="116" width="507" height="15" fill="rgb(216,90,50)"/><text x="62.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (227 samples, 42.99%)</title><rect x="59" y="132" width="507" height="15" fill="rgb(240,48,15)"/><text x="62.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (227 samples, 42.99%)</title><rect x="59" y="148" width="507" height="15" fill="rgb(209,57,50)"/><text x="62.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="564" y="164" width="2" height="15" fill="rgb(235,106,36)"/><text x="567.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="564" y="180" width="2" height="15" fill="rgb(215,134,11)"/><text x="567.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="564" y="196" width="2" height="15" fill="rgb(208,3,8)"/><text x="567.00" y="206.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (228 samples, 43.18%)</title><rect x="59" y="68" width="509" height="15" fill="rgb(207,188,32)"/><text x="62.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (228 samples, 43.18%)</title><rect x="59" y="84" width="509" height="15" fill="rgb(229,168,2)"/><text x="62.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.p..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="566" y="100" width="2" height="15" fill="rgb(231,225,40)"/><text x="569.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="566" y="116" width="2" height="15" fill="rgb(225,19,12)"/><text x="569.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="566" y="132" width="2" height="15" fill="rgb(208,228,35)"/><text x="569.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="566" y="148" width="2" height="15" fill="rgb(229,142,25)"/><text x="569.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="566" y="164" width="2" height="15" fill="rgb(234,27,29)"/><text x="569.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.19%)</title><rect x="566" y="180" width="2" height="15" fill="rgb(226,28,0)"/><text x="569.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.19%)</title><rect x="566" y="196" width="2" height="15" fill="rgb(252,13,31)"/><text x="569.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="212" width="2" height="15" fill="rgb(233,48,5)"/><text x="569.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="228" width="2" height="15" fill="rgb(225,86,46)"/><text x="569.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="244" width="2" height="15" fill="rgb(232,112,7)"/><text x="569.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="566" y="260" width="2" height="15" fill="rgb(222,130,50)"/><text x="569.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="276" width="2" height="15" fill="rgb(215,221,20)"/><text x="569.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.19%)</title><rect x="566" y="292" width="2" height="15" fill="rgb(245,152,34)"/><text x="569.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="308" width="2" height="15" fill="rgb(231,225,52)"/><text x="569.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="324" width="2" height="15" fill="rgb(226,154,50)"/><text x="569.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="340" width="2" height="15" fill="rgb(233,195,29)"/><text x="569.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="566" y="356" width="2" height="15" fill="rgb(207,69,10)"/><text x="569.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="372" width="2" height="15" fill="rgb(207,176,20)"/><text x="569.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.19%)</title><rect x="566" y="388" width="2" height="15" fill="rgb(243,68,24)"/><text x="569.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="404" width="2" height="15" fill="rgb(247,179,29)"/><text x="569.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="420" width="2" height="15" fill="rgb(226,35,30)"/><text x="569.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="436" width="2" height="15" fill="rgb(206,224,34)"/><text x="569.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="566" y="452" width="2" height="15" fill="rgb(217,78,19)"/><text x="569.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="566" y="468" width="2" height="15" fill="rgb(212,75,5)"/><text x="569.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="566" y="484" width="2" height="15" fill="rgb(226,158,39)"/><text x="569.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.19%)</title><rect x="566" y="500" width="2" height="15" fill="rgb(247,223,47)"/><text x="569.00" y="510.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.19%)</title><rect x="566" y="516" width="2" height="15" fill="rgb(251,207,20)"/><text x="569.00" y="526.50"></text></g><g><title>sub (re.py) (1 samples, 0.19%)</title><rect x="566" y="532" width="2" height="15" fill="rgb(242,208,3)"/><text x="569.00" y="542.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.19%)</title><rect x="566" y="548" width="2" height="15" fill="rgb(218,210,11)"/><text x="569.00" y="558.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.19%)</title><rect x="566" y="564" width="2" height="15" fill="rgb(206,152,46)"/><text x="569.00" y="574.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="566" y="580" width="2" height="15" fill="rgb(219,63,28)"/><text x="569.00" y="590.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="570" y="196" width="3" height="15" fill="rgb(249,10,30)"/><text x="573.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="570" y="212" width="3" height="15" fill="rgb(251,79,50)"/><text x="573.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="570" y="228" width="3" height="15" fill="rgb(239,144,38)"/><text x="573.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="570" y="244" width="3" height="15" fill="rgb(220,100,35)"/><text x="573.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="570" y="260" width="3" height="15" fill="rgb(232,4,50)"/><text x="573.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="570" y="276" width="3" height="15" fill="rgb(247,145,18)"/><text x="573.00" y="286.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.38%)</title><rect x="570" y="164" width="5" height="15" fill="rgb(213,8,19)"/><text x="573.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (2 samples, 0.38%)</title><rect x="570" y="180" width="5" height="15" fill="rgb(239,17,37)"/><text x="573.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="573" y="196" width="2" height="15" fill="rgb(229,61,15)"/><text x="576.00" y="206.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="573" y="212" width="2" height="15" fill="rgb(220,133,37)"/><text x="576.00" y="222.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.19%)</title><rect x="573" y="228" width="2" height="15" fill="rgb(243,116,19)"/><text x="576.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.38%)</title><rect x="575" y="164" width="4" height="15" fill="rgb(249,19,9)"/><text x="578.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="575" y="180" width="4" height="15" fill="rgb(245,111,8)"/><text x="578.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="577" y="196" width="2" height="15" fill="rgb(245,63,16)"/><text x="580.00" y="206.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (2 samples, 0.38%)</title><rect x="624" y="212" width="5" height="15" fill="rgb(225,71,12)"/><text x="627.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="629" y="228" width="2" height="15" fill="rgb(217,194,34)"/><text x="632.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="629" y="244" width="2" height="15" fill="rgb(244,56,16)"/><text x="632.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="629" y="212" width="4" height="15" fill="rgb(216,40,39)"/><text x="632.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="631" y="228" width="2" height="15" fill="rgb(240,153,19)"/><text x="634.00" y="238.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="631" y="244" width="2" height="15" fill="rgb(253,132,25)"/><text x="634.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.19%)</title><rect x="631" y="260" width="2" height="15" fill="rgb(247,47,50)"/><text x="634.00" y="270.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="637" y="260" width="3" height="15" fill="rgb(228,33,15)"/><text x="640.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="640" y="276" width="2" height="15" fill="rgb(219,38,43)"/><text x="643.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="640" y="292" width="2" height="15" fill="rgb(205,227,37)"/><text x="643.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="640" y="260" width="4" height="15" fill="rgb(238,132,16)"/><text x="643.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="642" y="276" width="2" height="15" fill="rgb(219,137,41)"/><text x="645.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="642" y="292" width="2" height="15" fill="rgb(217,19,8)"/><text x="645.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.19%)</title><rect x="642" y="308" width="2" height="15" fill="rgb(213,128,4)"/><text x="645.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="642" y="324" width="2" height="15" fill="rgb(220,87,1)"/><text x="645.00" y="334.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="644" y="260" width="2" height="15" fill="rgb(222,131,18)"/><text x="647.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="646" y="260" width="3" height="15" fill="rgb(218,127,37)"/><text x="649.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="646" y="276" width="3" height="15" fill="rgb(237,203,11)"/><text x="649.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.19%)</title><rect x="646" y="292" width="3" height="15" fill="rgb(227,74,24)"/><text x="649.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="649" y="260" width="2" height="15" fill="rgb(215,7,37)"/><text x="652.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="649" y="276" width="2" height="15" fill="rgb(217,187,45)"/><text x="652.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="649" y="292" width="2" height="15" fill="rgb(232,226,22)"/><text x="652.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="649" y="308" width="2" height="15" fill="rgb(219,68,8)"/><text x="652.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="649" y="324" width="2" height="15" fill="rgb(250,31,52)"/><text x="652.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="649" y="340" width="2" height="15" fill="rgb(225,51,43)"/><text x="652.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="651" y="260" width="2" height="15" fill="rgb(250,155,36)"/><text x="654.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 1.89%)</title><rect x="633" y="244" width="22" height="15" fill="rgb(212,126,36)"/><text x="636.00" y="254.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(253,197,5)"/><text x="656.00" y="270.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="655" y="244" width="3" height="15" fill="rgb(236,82,23)"/><text x="658.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="658" y="244" width="2" height="15" fill="rgb(236,5,7)"/><text x="661.00" y="254.50"></text></g><g><title>array_multiply (number.c) (13 samples, 2.46%)</title><rect x="633" y="212" width="29" height="15" fill="rgb(239,164,47)"/><text x="636.00" y="222.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 2.46%)</title><rect x="633" y="228" width="29" height="15" fill="rgb(212,25,34)"/><text x="636.00" y="238.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="660" y="244" width="2" height="15" fill="rgb(241,102,24)"/><text x="663.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="660" y="260" width="2" height="15" fill="rgb(236,118,48)"/><text x="663.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="662" y="212" width="2" height="15" fill="rgb(221,174,35)"/><text x="665.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.19%)</title><rect x="662" y="228" width="2" height="15" fill="rgb(208,120,3)"/><text x="665.00" y="238.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="667" y="276" width="2" height="15" fill="rgb(231,58,22)"/><text x="670.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.38%)</title><rect x="667" y="244" width="4" height="15" fill="rgb(208,142,34)"/><text x="670.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="667" y="260" width="4" height="15" fill="rgb(213,14,40)"/><text x="670.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="669" y="276" width="2" height="15" fill="rgb(212,71,40)"/><text x="672.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="669" y="292" width="2" height="15" fill="rgb(252,147,5)"/><text x="672.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="669" y="308" width="2" height="15" fill="rgb(237,45,46)"/><text x="672.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="669" y="324" width="2" height="15" fill="rgb(254,170,50)"/><text x="672.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="669" y="340" width="2" height="15" fill="rgb(229,179,37)"/><text x="672.00" y="350.50"></text></g><g><title>array_subtract (number.c) (5 samples, 0.95%)</title><rect x="664" y="212" width="11" height="15" fill="rgb(212,215,35)"/><text x="667.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.76%)</title><rect x="667" y="228" width="8" height="15" fill="rgb(233,126,2)"/><text x="670.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.38%)</title><rect x="671" y="244" width="4" height="15" fill="rgb(225,69,47)"/><text x="674.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="682" y="324" width="2" height="15" fill="rgb(206,63,37)"/><text x="685.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="682" y="340" width="2" height="15" fill="rgb(227,75,5)"/><text x="685.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="682" y="356" width="2" height="15" fill="rgb(212,73,47)"/><text x="685.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="682" y="372" width="2" height="15" fill="rgb(234,71,1)"/><text x="685.00" y="382.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.19%)</title><rect x="684" y="324" width="3" height="15" fill="rgb(217,186,22)"/><text x="687.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 0.95%)</title><rect x="680" y="308" width="11" height="15" fill="rgb(248,225,24)"/><text x="683.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.38%)</title><rect x="687" y="324" width="4" height="15" fill="rgb(221,158,19)"/><text x="690.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.38%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(227,141,28)"/><text x="690.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.38%)</title><rect x="687" y="356" width="4" height="15" fill="rgb(254,211,49)"/><text x="690.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="691" y="324" width="2" height="15" fill="rgb(243,71,42)"/><text x="694.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="691" y="340" width="2" height="15" fill="rgb(231,36,47)"/><text x="694.00" y="350.50"></text></g><g><title>array_sum (methods.c) (9 samples, 1.70%)</title><rect x="675" y="212" width="21" height="15" fill="rgb(244,47,1)"/><text x="678.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c) (9 samples, 1.70%)</title><rect x="675" y="228" width="21" height="15" fill="rgb(241,17,49)"/><text x="678.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py) (9 samples, 1.70%)</title><rect x="675" y="244" width="21" height="15" fill="rgb(225,41,4)"/><text x="678.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (7 samples, 1.33%)</title><rect x="680" y="260" width="16" height="15" fill="rgb(220,167,36)"/><text x="683.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.33%)</title><rect x="680" y="276" width="16" height="15" fill="rgb(205,128,20)"/><text x="683.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.33%)</title><rect x="680" y="292" width="16" height="15" fill="rgb(251,159,24)"/><text x="683.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.38%)</title><rect x="691" y="308" width="5" height="15" fill="rgb(233,180,51)"/><text x="694.00" y="318.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.19%)</title><rect x="693" y="324" width="3" height="15" fill="rgb(215,127,19)"/><text x="696.00" y="334.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="702" y="228" width="3" height="15" fill="rgb(226,58,30)"/><text x="705.00" y="238.50"></text></g><g><title>0x7f20a07fa144 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="722" y="324" width="3" height="15" fill="rgb(229,62,18)"/><text x="725.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="725" y="356" width="2" height="15" fill="rgb(210,138,35)"/><text x="728.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="725" y="372" width="2" height="15" fill="rgb(205,216,0)"/><text x="728.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="725" y="388" width="2" height="15" fill="rgb(254,108,36)"/><text x="728.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="725" y="404" width="2" height="15" fill="rgb(233,172,14)"/><text x="728.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="725" y="420" width="2" height="15" fill="rgb(234,23,41)"/><text x="728.00" y="430.50"></text></g><g><title>0x7f209f9fbb90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="725" y="436" width="2" height="15" fill="rgb(213,173,5)"/><text x="728.00" y="446.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.19%)</title><rect x="727" y="372" width="2" height="15" fill="rgb(222,51,18)"/><text x="730.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.19%)</title><rect x="727" y="388" width="2" height="15" fill="rgb(250,24,16)"/><text x="730.00" y="398.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.19%)</title><rect x="729" y="372" width="2" height="15" fill="rgb(242,48,25)"/><text x="732.00" y="382.50"></text></g><g><title>get_global_ext_obj (extobj.c) (1 samples, 0.19%)</title><rect x="729" y="388" width="2" height="15" fill="rgb(222,142,9)"/><text x="732.00" y="398.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.19%)</title><rect x="731" y="420" width="3" height="15" fill="rgb(207,52,51)"/><text x="734.00" y="430.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.19%)</title><rect x="731" y="436" width="3" height="15" fill="rgb(218,215,51)"/><text x="734.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="731" y="372" width="5" height="15" fill="rgb(237,81,50)"/><text x="734.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.38%)</title><rect x="731" y="388" width="5" height="15" fill="rgb(247,158,41)"/><text x="734.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.38%)</title><rect x="731" y="404" width="5" height="15" fill="rgb(230,177,36)"/><text x="734.00" y="414.50"></text></g><g><title>strides_to_terms (mem_overlap.c) (1 samples, 0.19%)</title><rect x="734" y="420" width="2" height="15" fill="rgb(224,93,27)"/><text x="737.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="736" y="388" width="2" height="15" fill="rgb(237,175,51)"/><text x="739.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="736" y="404" width="2" height="15" fill="rgb(215,217,23)"/><text x="739.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="736" y="420" width="2" height="15" fill="rgb(211,28,27)"/><text x="739.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="736" y="436" width="2" height="15" fill="rgb(253,173,28)"/><text x="739.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="736" y="452" width="2" height="15" fill="rgb(211,21,13)"/><text x="739.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="736" y="468" width="2" height="15" fill="rgb(228,10,45)"/><text x="739.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (7 samples, 1.33%)</title><rect x="725" y="324" width="15" height="15" fill="rgb(207,27,38)"/><text x="728.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.33%)</title><rect x="725" y="340" width="15" height="15" fill="rgb(235,195,39)"/><text x="728.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.14%)</title><rect x="727" y="356" width="13" height="15" fill="rgb(210,68,38)"/><text x="730.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.38%)</title><rect x="736" y="372" width="4" height="15" fill="rgb(238,12,46)"/><text x="739.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.19%)</title><rect x="738" y="388" width="2" height="15" fill="rgb(243,192,18)"/><text x="741.00" y="398.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="740" y="324" width="3" height="15" fill="rgb(240,223,11)"/><text x="743.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="754" y="340" width="6" height="15" fill="rgb(242,62,2)"/><text x="757.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="767" y="372" width="2" height="15" fill="rgb(220,34,11)"/><text x="770.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="767" y="388" width="2" height="15" fill="rgb(241,25,0)"/><text x="770.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="767" y="404" width="2" height="15" fill="rgb(227,163,36)"/><text x="770.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="767" y="420" width="2" height="15" fill="rgb(248,205,20)"/><text x="770.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="778" y="468" width="3" height="15" fill="rgb(242,166,3)"/><text x="781.00" y="478.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="778" y="484" width="3" height="15" fill="rgb(252,195,50)"/><text x="781.00" y="494.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="778" y="500" width="3" height="15" fill="rgb(209,35,19)"/><text x="781.00" y="510.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.89%)</title><rect x="760" y="340" width="23" height="15" fill="rgb(254,39,1)"/><text x="763.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.52%)</title><rect x="765" y="356" width="18" height="15" fill="rgb(221,161,26)"/><text x="768.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (6 samples, 1.14%)</title><rect x="769" y="372" width="14" height="15" fill="rgb(238,137,10)"/><text x="772.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.76%)</title><rect x="774" y="388" width="9" height="15" fill="rgb(210,171,7)"/><text x="777.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.57%)</title><rect x="776" y="404" width="7" height="15" fill="rgb(238,143,50)"/><text x="779.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.38%)</title><rect x="778" y="420" width="5" height="15" fill="rgb(223,74,51)"/><text x="781.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.38%)</title><rect x="778" y="436" width="5" height="15" fill="rgb(237,95,27)"/><text x="781.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="778" y="452" width="5" height="15" fill="rgb(254,190,51)"/><text x="781.00" y="462.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="781" y="468" width="2" height="15" fill="rgb(232,39,1)"/><text x="784.00" y="478.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (6 samples, 1.14%)</title><rect x="785" y="356" width="13" height="15" fill="rgb(254,102,41)"/><text x="788.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (6 samples, 1.14%)</title><rect x="785" y="372" width="13" height="15" fill="rgb(212,187,2)"/><text x="788.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 0.95%)</title><rect x="787" y="388" width="11" height="15" fill="rgb(233,145,40)"/><text x="790.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.95%)</title><rect x="787" y="404" width="11" height="15" fill="rgb(208,31,24)"/><text x="790.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.95%)</title><rect x="787" y="420" width="11" height="15" fill="rgb(231,177,26)"/><text x="790.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="796" y="436" width="2" height="15" fill="rgb(228,155,37)"/><text x="799.00" y="446.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (2 samples, 0.38%)</title><rect x="805" y="372" width="5" height="15" fill="rgb(211,65,28)"/><text x="808.00" y="382.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.19%)</title><rect x="807" y="388" width="3" height="15" fill="rgb(229,76,18)"/><text x="810.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="810" y="372" width="4" height="15" fill="rgb(229,145,0)"/><text x="813.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.38%)</title><rect x="810" y="388" width="4" height="15" fill="rgb(237,12,9)"/><text x="813.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.38%)</title><rect x="810" y="404" width="4" height="15" fill="rgb(205,154,12)"/><text x="813.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="814" y="372" width="2" height="15" fill="rgb(205,45,5)"/><text x="817.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.70%)</title><rect x="798" y="356" width="21" height="15" fill="rgb(252,214,34)"/><text x="801.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="816" y="372" width="3" height="15" fill="rgb(206,47,2)"/><text x="819.00" y="382.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="819" y="356" width="2" height="15" fill="rgb(239,153,23)"/><text x="822.00" y="366.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (53 samples, 10.04%)</title><rect x="705" y="244" width="118" height="15" fill="rgb(227,82,0)"/><text x="708.00" y="254.50">clip (numpy/co..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (51 samples, 9.66%)</title><rect x="709" y="260" width="114" height="15" fill="rgb(247,74,51)"/><text x="712.00" y="270.50">_wrapfunc (num..</text></g><g><title>array_clip (methods.c) (49 samples, 9.28%)</title><rect x="713" y="276" width="110" height="15" fill="rgb(236,43,7)"/><text x="716.00" y="286.50">array_clip (m..</text></g><g><title>forward_ndarray_method (methods.c) (49 samples, 9.28%)</title><rect x="713" y="292" width="110" height="15" fill="rgb(223,154,53)"/><text x="716.00" y="302.50">forward_ndarr..</text></g><g><title>_clip (numpy/core/_methods.py) (48 samples, 9.09%)</title><rect x="716" y="308" width="107" height="15" fill="rgb(245,51,49)"/><text x="719.00" y="318.50">_clip (numpy/..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (36 samples, 6.82%)</title><rect x="743" y="324" width="80" height="15" fill="rgb(247,223,22)"/><text x="746.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 3.41%)</title><rect x="783" y="340" width="40" height="15" fill="rgb(248,213,36)"/><text x="786.00" y="350.50">ufu..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="821" y="356" width="2" height="15" fill="rgb(220,163,48)"/><text x="824.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="821" y="372" width="2" height="15" fill="rgb(224,16,31)"/><text x="824.00" y="382.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (59 samples, 11.17%)</title><rect x="696" y="212" width="131" height="15" fill="rgb(221,218,30)"/><text x="699.00" y="222.50">clip (&lt;__array_f..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (55 samples, 10.42%)</title><rect x="705" y="228" width="122" height="15" fill="rgb(234,81,12)"/><text x="708.00" y="238.50">array_implement..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.38%)</title><rect x="823" y="244" width="4" height="15" fill="rgb(242,151,39)"/><text x="826.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.38%)</title><rect x="823" y="260" width="4" height="15" fill="rgb(228,142,38)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.38%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(246,81,22)"/><text x="826.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.38%)</title><rect x="823" y="292" width="4" height="15" fill="rgb(248,217,1)"/><text x="826.00" y="302.50"></text></g><g><title>0x7f20a08b7134 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="825" y="308" width="2" height="15" fill="rgb(236,80,44)"/><text x="828.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="845" y="308" width="3" height="15" fill="rgb(249,50,5)"/><text x="848.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="845" y="324" width="3" height="15" fill="rgb(208,130,50)"/><text x="848.00" y="334.50"></text></g><g><title>0x7f207a21cf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="845" y="244" width="5" height="15" fill="rgb(245,183,23)"/><text x="848.00" y="254.50"></text></g><g><title>0x7f207a20cd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="845" y="260" width="5" height="15" fill="rgb(232,134,36)"/><text x="848.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.38%)</title><rect x="845" y="276" width="5" height="15" fill="rgb(221,199,8)"/><text x="848.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="845" y="292" width="5" height="15" fill="rgb(246,74,54)"/><text x="848.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="848" y="308" width="2" height="15" fill="rgb(209,37,4)"/><text x="851.00" y="318.50"></text></g><g><title>0x7f207a22b225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="850" y="276" width="4" height="15" fill="rgb(221,119,30)"/><text x="853.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.38%)</title><rect x="850" y="292" width="4" height="15" fill="rgb(211,219,40)"/><text x="853.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.19%)</title><rect x="852" y="308" width="2" height="15" fill="rgb(219,191,12)"/><text x="855.00" y="318.50"></text></g><g><title>0x7f20a07d9bc0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="857" y="388" width="2" height="15" fill="rgb(228,97,40)"/><text x="860.00" y="398.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.38%)</title><rect x="857" y="372" width="4" height="15" fill="rgb(206,166,53)"/><text x="860.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="859" y="388" width="2" height="15" fill="rgb(216,126,33)"/><text x="862.00" y="398.50"></text></g><g><title>0x7f207a20fd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="854" y="292" width="11" height="15" fill="rgb(228,204,25)"/><text x="857.00" y="302.50"></text></g><g><title>0x7f207a20f666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="854" y="308" width="11" height="15" fill="rgb(209,32,27)"/><text x="857.00" y="318.50"></text></g><g><title>0x7f207a2052fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.76%)</title><rect x="857" y="324" width="8" height="15" fill="rgb(223,163,47)"/><text x="860.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.76%)</title><rect x="857" y="340" width="8" height="15" fill="rgb(210,130,31)"/><text x="860.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.76%)</title><rect x="857" y="356" width="8" height="15" fill="rgb(236,195,0)"/><text x="860.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.38%)</title><rect x="861" y="372" width="4" height="15" fill="rgb(223,188,3)"/><text x="864.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.38%)</title><rect x="861" y="388" width="4" height="15" fill="rgb(243,120,12)"/><text x="864.00" y="398.50"></text></g><g><title>0x7f207a202fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="865" y="308" width="3" height="15" fill="rgb(205,90,47)"/><text x="868.00" y="318.50"></text></g><g><title>0x7f207a202902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="865" y="324" width="3" height="15" fill="rgb(225,116,15)"/><text x="868.00" y="334.50"></text></g><g><title>0x7f207a22b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.33%)</title><rect x="854" y="276" width="16" height="15" fill="rgb(234,169,40)"/><text x="857.00" y="286.50"></text></g><g><title>0x7f207a20fe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="865" y="292" width="5" height="15" fill="rgb(228,140,37)"/><text x="868.00" y="302.50"></text></g><g><title>0x7f207a2032bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="868" y="308" width="2" height="15" fill="rgb(223,87,47)"/><text x="871.00" y="318.50"></text></g><g><title>0x7f207a202dfd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="868" y="324" width="2" height="15" fill="rgb(254,85,6)"/><text x="871.00" y="334.50"></text></g><g><title>0x7f207a22b53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="870" y="276" width="2" height="15" fill="rgb(213,79,35)"/><text x="873.00" y="286.50"></text></g><g><title>0x7f20a07ef730 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="874" y="308" width="3" height="15" fill="rgb(240,196,50)"/><text x="877.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="877" y="356" width="2" height="15" fill="rgb(208,148,28)"/><text x="880.00" y="366.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.38%)</title><rect x="877" y="308" width="4" height="15" fill="rgb(229,21,8)"/><text x="880.00" y="318.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.38%)</title><rect x="877" y="324" width="4" height="15" fill="rgb(251,73,47)"/><text x="880.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="877" y="340" width="4" height="15" fill="rgb(251,206,14)"/><text x="880.00" y="350.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.19%)</title><rect x="879" y="356" width="2" height="15" fill="rgb(244,152,48)"/><text x="882.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="879" y="372" width="2" height="15" fill="rgb(251,40,2)"/><text x="882.00" y="382.50"></text></g><g><title>0x7f207a22c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.84%)</title><rect x="850" y="260" width="33" height="15" fill="rgb(224,105,0)"/><text x="853.00" y="270.50">0x..</text></g><g><title>0x7f207a22b592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="872" y="276" width="11" height="15" fill="rgb(245,58,52)"/><text x="875.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 0.95%)</title><rect x="872" y="292" width="11" height="15" fill="rgb(253,195,45)"/><text x="875.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="881" y="308" width="2" height="15" fill="rgb(216,88,51)"/><text x="884.00" y="318.50"></text></g><g><title>0x7f20a08b7154 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="881" y="324" width="2" height="15" fill="rgb(207,130,37)"/><text x="884.00" y="334.50"></text></g><g><title>0x7f207a21cfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.22%)</title><rect x="850" y="244" width="38" height="15" fill="rgb(250,27,40)"/><text x="853.00" y="254.50">0x7..</text></g><g><title>0x7f207a22c540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="883" y="260" width="5" height="15" fill="rgb(237,86,32)"/><text x="886.00" y="270.50"></text></g><g><title>0x7f207a2012f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="883" y="276" width="5" height="15" fill="rgb(252,210,23)"/><text x="886.00" y="286.50"></text></g><g><title>0x7f207a200530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="883" y="292" width="5" height="15" fill="rgb(237,222,43)"/><text x="886.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.38%)</title><rect x="883" y="308" width="5" height="15" fill="rgb(252,44,21)"/><text x="886.00" y="318.50"></text></g><g><title>0x7f207a21cfb2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="888" y="244" width="2" height="15" fill="rgb(238,145,8)"/><text x="891.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.38%)</title><rect x="890" y="276" width="5" height="15" fill="rgb(232,24,28)"/><text x="893.00" y="286.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="897" y="292" width="2" height="15" fill="rgb(247,133,42)"/><text x="900.00" y="302.50"></text></g><g><title>0x7f207a21d05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.95%)</title><rect x="890" y="244" width="11" height="15" fill="rgb(212,78,26)"/><text x="893.00" y="254.50"></text></g><g><title>array_take (methods.c) (5 samples, 0.95%)</title><rect x="890" y="260" width="11" height="15" fill="rgb(242,170,23)"/><text x="893.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.57%)</title><rect x="895" y="276" width="6" height="15" fill="rgb(210,186,20)"/><text x="898.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.19%)</title><rect x="899" y="292" width="2" height="15" fill="rgb(214,21,10)"/><text x="902.00" y="302.50"></text></g><g><title>0x7f207a21d13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="901" y="244" width="2" height="15" fill="rgb(219,136,12)"/><text x="904.00" y="254.50"></text></g><g><title>0x7f209f9fc9c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="901" y="260" width="2" height="15" fill="rgb(243,187,44)"/><text x="904.00" y="270.50"></text></g><g><title>0x7f207a21d163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="903" y="244" width="3" height="15" fill="rgb(250,63,24)"/><text x="906.00" y="254.50"></text></g><g><title>0x7f207a21d18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="906" y="244" width="2" height="15" fill="rgb(231,150,1)"/><text x="909.00" y="254.50"></text></g><g><title>0x7f207a21dd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 5.49%)</title><rect x="845" y="228" width="65" height="15" fill="rgb(235,199,21)"/><text x="848.00" y="238.50">0x7f207..</text></g><g><title>0x7f207a21d328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="908" y="244" width="2" height="15" fill="rgb(221,153,35)"/><text x="911.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.19%)</title><rect x="908" y="260" width="2" height="15" fill="rgb(236,100,21)"/><text x="911.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.19%)</title><rect x="908" y="276" width="2" height="15" fill="rgb(223,167,43)"/><text x="911.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.19%)</title><rect x="908" y="292" width="2" height="15" fill="rgb(216,14,28)"/><text x="911.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="908" y="308" width="2" height="15" fill="rgb(214,73,33)"/><text x="911.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.19%)</title><rect x="908" y="324" width="2" height="15" fill="rgb(240,205,30)"/><text x="911.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.19%)</title><rect x="912" y="244" width="3" height="15" fill="rgb(231,139,40)"/><text x="915.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 0.95%)</title><rect x="953" y="260" width="11" height="15" fill="rgb(208,104,2)"/><text x="956.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.38%)</title><rect x="964" y="260" width="4" height="15" fill="rgb(221,37,39)"/><text x="967.00" y="270.50"></text></g><g><title>0x7f20a07efe50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="982" y="276" width="2" height="15" fill="rgb(222,56,9)"/><text x="985.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="984" y="276" width="2" height="15" fill="rgb(231,104,24)"/><text x="987.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 1.70%)</title><rect x="968" y="260" width="20" height="15" fill="rgb(206,85,16)"/><text x="971.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.19%)</title><rect x="986" y="276" width="2" height="15" fill="rgb(215,2,53)"/><text x="989.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.38%)</title><rect x="988" y="260" width="5" height="15" fill="rgb(216,90,44)"/><text x="991.00" y="270.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.19%)</title><rect x="991" y="276" width="2" height="15" fill="rgb(217,143,45)"/><text x="994.00" y="286.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="991" y="292" width="2" height="15" fill="rgb(217,58,14)"/><text x="994.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 2.84%)</title><rect x="993" y="260" width="33" height="15" fill="rgb(219,162,26)"/><text x="996.00" y="270.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.57%)</title><rect x="1020" y="276" width="6" height="15" fill="rgb(227,44,53)"/><text x="1023.00" y="286.50"></text></g><g><title>0x7f20a08b7df0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1031" y="308" width="2" height="15" fill="rgb(217,109,19)"/><text x="1034.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.76%)</title><rect x="1026" y="260" width="9" height="15" fill="rgb(225,74,14)"/><text x="1029.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.76%)</title><rect x="1026" y="276" width="9" height="15" fill="rgb(209,20,46)"/><text x="1029.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (3 samples, 0.57%)</title><rect x="1029" y="292" width="6" height="15" fill="rgb(206,96,9)"/><text x="1032.00" y="302.50"></text></g><g><title>0x7f20a08b7df6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1033" y="308" width="2" height="15" fill="rgb(243,168,11)"/><text x="1036.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (58 samples, 10.98%)</title><rect x="915" y="244" width="129" height="15" fill="rgb(220,117,35)"/><text x="918.00" y="254.50">check_array (skl..</text></g><g><title>simplefilter (warnings.py) (4 samples, 0.76%)</title><rect x="1035" y="260" width="9" height="15" fill="rgb(208,169,49)"/><text x="1038.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.57%)</title><rect x="1038" y="276" width="6" height="15" fill="rgb(245,90,31)"/><text x="1041.00" y="286.50"></text></g><g><title>0x7f20a07efe7a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1042" y="292" width="2" height="15" fill="rgb(231,72,26)"/><text x="1045.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (61 samples, 11.55%)</title><rect x="910" y="228" width="136" height="15" fill="rgb(246,52,51)"/><text x="913.00" y="238.50">_validate_X_predi..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.19%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(241,27,25)"/><text x="1047.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="1046" y="244" width="3" height="15" fill="rgb(212,210,3)"/><text x="1049.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1046" y="260" width="3" height="15" fill="rgb(237,211,47)"/><text x="1049.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1046" y="276" width="3" height="15" fill="rgb(205,222,8)"/><text x="1049.00" y="286.50"></text></g><g><title>array_assign_subscript (mapping.c) (2 samples, 0.38%)</title><rect x="1046" y="228" width="5" height="15" fill="rgb(229,1,15)"/><text x="1049.00" y="238.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1049" y="244" width="2" height="15" fill="rgb(206,12,47)"/><text x="1052.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.19%)</title><rect x="1049" y="260" width="2" height="15" fill="rgb(241,216,3)"/><text x="1052.00" y="270.50"></text></g><g><title>count_nonzero_bytes_384 (item_selection.c) (1 samples, 0.19%)</title><rect x="1049" y="276" width="2" height="15" fill="rgb(228,106,38)"/><text x="1052.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1051" y="228" width="2" height="15" fill="rgb(210,118,24)"/><text x="1054.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1051" y="244" width="2" height="15" fill="rgb(229,87,4)"/><text x="1054.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1051" y="260" width="2" height="15" fill="rgb(209,3,42)"/><text x="1054.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1058" y="276" width="2" height="15" fill="rgb(238,216,48)"/><text x="1061.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1058" y="292" width="2" height="15" fill="rgb(237,120,40)"/><text x="1061.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1058" y="308" width="2" height="15" fill="rgb(248,114,52)"/><text x="1061.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1058" y="324" width="2" height="15" fill="rgb(227,113,12)"/><text x="1061.00" y="334.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1060" y="276" width="2" height="15" fill="rgb(219,65,25)"/><text x="1063.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1062" y="276" width="5" height="15" fill="rgb(212,142,23)"/><text x="1065.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1064" y="292" width="3" height="15" fill="rgb(226,89,47)"/><text x="1067.00" y="302.50"></text></g><g><title>DOUBLE_equal (loops.c.src) (1 samples, 0.19%)</title><rect x="1064" y="308" width="3" height="15" fill="rgb(218,36,34)"/><text x="1067.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1069" y="308" width="2" height="15" fill="rgb(232,156,41)"/><text x="1072.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.33%)</title><rect x="1058" y="260" width="15" height="15" fill="rgb(224,137,37)"/><text x="1061.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1067" y="276" width="6" height="15" fill="rgb(229,47,28)"/><text x="1070.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.38%)</title><rect x="1069" y="292" width="4" height="15" fill="rgb(238,82,22)"/><text x="1072.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="1071" y="308" width="2" height="15" fill="rgb(209,175,20)"/><text x="1074.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="1071" y="324" width="2" height="15" fill="rgb(212,175,31)"/><text x="1074.00" y="334.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="1071" y="340" width="2" height="15" fill="rgb(221,117,24)"/><text x="1074.00" y="350.50"></text></g><g><title>array_richcompare (arrayobject.c) (10 samples, 1.89%)</title><rect x="1053" y="228" width="23" height="15" fill="rgb(237,164,5)"/><text x="1056.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.70%)</title><rect x="1055" y="244" width="21" height="15" fill="rgb(242,108,33)"/><text x="1058.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1073" y="260" width="3" height="15" fill="rgb(250,102,38)"/><text x="1076.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1073" y="276" width="3" height="15" fill="rgb(214,104,40)"/><text x="1076.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1073" y="292" width="3" height="15" fill="rgb(233,86,10)"/><text x="1076.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.19%)</title><rect x="1078" y="244" width="2" height="15" fill="rgb(240,176,2)"/><text x="1081.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="1078" y="260" width="2" height="15" fill="rgb(229,21,41)"/><text x="1081.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1078" y="276" width="2" height="15" fill="rgb(236,110,47)"/><text x="1081.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1078" y="292" width="2" height="15" fill="rgb(222,137,6)"/><text x="1081.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1078" y="308" width="2" height="15" fill="rgb(229,17,0)"/><text x="1081.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.57%)</title><rect x="1076" y="228" width="6" height="15" fill="rgb(205,196,4)"/><text x="1079.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.19%)</title><rect x="1080" y="244" width="2" height="15" fill="rgb(213,122,33)"/><text x="1083.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.76%)</title><rect x="1091" y="292" width="9" height="15" fill="rgb(227,213,15)"/><text x="1094.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.76%)</title><rect x="1091" y="308" width="9" height="15" fill="rgb(221,106,24)"/><text x="1094.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 0.76%)</title><rect x="1091" y="324" width="9" height="15" fill="rgb(240,193,19)"/><text x="1094.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.76%)</title><rect x="1091" y="340" width="9" height="15" fill="rgb(207,59,53)"/><text x="1094.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.76%)</title><rect x="1091" y="356" width="9" height="15" fill="rgb(220,105,51)"/><text x="1094.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.38%)</title><rect x="1096" y="372" width="4" height="15" fill="rgb(254,214,48)"/><text x="1099.00" y="382.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1105" y="372" width="2" height="15" fill="rgb(249,22,45)"/><text x="1108.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="1105" y="340" width="4" height="15" fill="rgb(240,112,31)"/><text x="1108.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.38%)</title><rect x="1105" y="356" width="4" height="15" fill="rgb(244,125,7)"/><text x="1108.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1107" y="372" width="2" height="15" fill="rgb(244,52,13)"/><text x="1110.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1109" y="404" width="2" height="15" fill="rgb(214,76,36)"/><text x="1112.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1109" y="420" width="2" height="15" fill="rgb(206,8,53)"/><text x="1112.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.38%)</title><rect x="1109" y="372" width="5" height="15" fill="rgb(222,46,52)"/><text x="1112.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="1109" y="388" width="5" height="15" fill="rgb(222,209,54)"/><text x="1112.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1111" y="404" width="3" height="15" fill="rgb(219,17,16)"/><text x="1114.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (4 samples, 0.76%)</title><rect x="1109" y="340" width="9" height="15" fill="rgb(210,173,22)"/><text x="1112.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (4 samples, 0.76%)</title><rect x="1109" y="356" width="9" height="15" fill="rgb(254,28,27)"/><text x="1112.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.38%)</title><rect x="1114" y="372" width="4" height="15" fill="rgb(231,87,23)"/><text x="1117.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.33%)</title><rect x="1105" y="324" width="15" height="15" fill="rgb(213,183,43)"/><text x="1108.00" y="334.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1118" y="340" width="2" height="15" fill="rgb(231,75,35)"/><text x="1121.00" y="350.50"></text></g><g><title>0x7f209f9fcc90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1118" y="356" width="2" height="15" fill="rgb(235,168,43)"/><text x="1121.00" y="366.50"></text></g><g><title>array_sum (methods.c) (19 samples, 3.60%)</title><rect x="1082" y="228" width="43" height="15" fill="rgb(222,135,26)"/><text x="1085.00" y="238.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 3.41%)</title><rect x="1084" y="244" width="41" height="15" fill="rgb(218,74,29)"/><text x="1087.00" y="254.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (17 samples, 3.22%)</title><rect x="1087" y="260" width="38" height="15" fill="rgb(244,144,51)"/><text x="1090.00" y="270.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 2.84%)</title><rect x="1091" y="276" width="34" height="15" fill="rgb(211,50,19)"/><text x="1094.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 2.08%)</title><rect x="1100" y="292" width="25" height="15" fill="rgb(240,85,0)"/><text x="1103.00" y="302.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 1.89%)</title><rect x="1102" y="308" width="23" height="15" fill="rgb(222,89,1)"/><text x="1105.00" y="318.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1120" y="324" width="5" height="15" fill="rgb(226,212,29)"/><text x="1123.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1122" y="340" width="3" height="15" fill="rgb(219,229,42)"/><text x="1125.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.76%)</title><rect x="1140" y="260" width="9" height="15" fill="rgb(246,9,8)"/><text x="1143.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 1.52%)</title><rect x="1134" y="244" width="18" height="15" fill="rgb(241,84,30)"/><text x="1137.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.19%)</title><rect x="1149" y="260" width="3" height="15" fill="rgb(254,90,27)"/><text x="1152.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 2.46%)</title><rect x="1125" y="228" width="29" height="15" fill="rgb(253,2,43)"/><text x="1128.00" y="238.50">ch..</text></g><g><title>isclass (inspect.py) (1 samples, 0.19%)</title><rect x="1152" y="244" width="2" height="15" fill="rgb(227,190,11)"/><text x="1155.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="1154" y="308" width="2" height="15" fill="rgb(231,208,18)"/><text x="1157.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1154" y="260" width="4" height="15" fill="rgb(214,27,45)"/><text x="1157.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1154" y="276" width="4" height="15" fill="rgb(226,60,12)"/><text x="1157.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="1154" y="292" width="4" height="15" fill="rgb(222,218,38)"/><text x="1157.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1156" y="308" width="2" height="15" fill="rgb(213,96,42)"/><text x="1159.00" y="318.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1158" y="260" width="2" height="15" fill="rgb(222,227,29)"/><text x="1161.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (150 samples, 28.41%)</title><rect x="827" y="212" width="336" height="15" fill="rgb(249,117,29)"/><text x="830.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.76%)</title><rect x="1154" y="228" width="9" height="15" fill="rgb(215,180,45)"/><text x="1157.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.76%)</title><rect x="1154" y="244" width="9" height="15" fill="rgb(225,93,13)"/><text x="1157.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1160" y="260" width="3" height="15" fill="rgb(254,106,19)"/><text x="1163.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (262 samples, 49.62%)</title><rect x="579" y="180" width="586" height="15" fill="rgb(231,145,19)"/><text x="582.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (261 samples, 49.43%)</title><rect x="582" y="196" width="583" height="15" fill="rgb(253,3,52)"/><text x="585.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1163" y="212" width="2" height="15" fill="rgb(246,133,12)"/><text x="1166.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1163" y="228" width="2" height="15" fill="rgb(210,133,40)"/><text x="1166.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1163" y="244" width="2" height="15" fill="rgb(220,0,47)"/><text x="1166.00" y="254.50"></text></g><g><title>0x7f209f9fb280 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1165" y="196" width="2" height="15" fill="rgb(236,65,14)"/><text x="1168.00" y="206.50"></text></g><g><title>array_add (number.c) (2 samples, 0.38%)</title><rect x="1165" y="180" width="4" height="15" fill="rgb(237,203,51)"/><text x="1168.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1167" y="196" width="2" height="15" fill="rgb(225,42,51)"/><text x="1170.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(226,19,38)"/><text x="1170.00" y="222.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(224,175,40)"/><text x="1170.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(235,67,22)"/><text x="1170.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(236,191,37)"/><text x="1172.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.38%)</title><rect x="1169" y="196" width="5" height="15" fill="rgb(251,31,41)"/><text x="1172.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.38%)</title><rect x="1169" y="212" width="5" height="15" fill="rgb(224,105,13)"/><text x="1172.00" y="222.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.19%)</title><rect x="1174" y="180" width="2" height="15" fill="rgb(230,116,48)"/><text x="1177.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.19%)</title><rect x="1174" y="196" width="2" height="15" fill="rgb(213,93,17)"/><text x="1177.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="1174" y="212" width="2" height="15" fill="rgb(225,6,21)"/><text x="1177.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1174" y="228" width="2" height="15" fill="rgb(228,201,26)"/><text x="1177.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1174" y="244" width="2" height="15" fill="rgb(228,134,38)"/><text x="1177.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1174" y="260" width="2" height="15" fill="rgb(218,71,48)"/><text x="1177.00" y="270.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1174" y="276" width="2" height="15" fill="rgb(224,54,42)"/><text x="1177.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1174" y="292" width="2" height="15" fill="rgb(211,22,9)"/><text x="1177.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1174" y="308" width="2" height="15" fill="rgb(249,56,15)"/><text x="1177.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1174" y="324" width="2" height="15" fill="rgb(223,115,39)"/><text x="1177.00" y="334.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (273 samples, 51.70%)</title><rect x="568" y="100" width="610" height="15" fill="rgb(240,95,23)"/><text x="571.00" y="110.50">profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 51.52%)</title><rect x="570" y="116" width="608" height="15" fill="rgb(208,204,25)"/><text x="573.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (272 samples, 51.52%)</title><rect x="570" y="132" width="608" height="15" fill="rgb(238,55,44)"/><text x="573.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (272 samples, 51.52%)</title><rect x="570" y="148" width="608" height="15" fill="rgb(211,51,14)"/><text x="573.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (268 samples, 50.76%)</title><rect x="579" y="164" width="599" height="15" fill="rgb(209,29,19)"/><text x="582.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1176" y="180" width="2" height="15" fill="rgb(222,4,22)"/><text x="1179.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(253,56,41)"/><text x="1179.00" y="206.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(248,6,20)"/><text x="1179.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="1176" y="228" width="2" height="15" fill="rgb(230,139,51)"/><text x="1179.00" y="238.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(220,171,54)"/><text x="1179.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(244,111,13)"/><text x="1179.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1176" y="276" width="2" height="15" fill="rgb(248,210,3)"/><text x="1179.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1176" y="292" width="2" height="15" fill="rgb(220,204,13)"/><text x="1179.00" y="302.50"></text></g><g><title>0x7f209583d390 (?) (1 samples, 0.19%)</title><rect x="1178" y="116" width="3" height="15" fill="rgb(250,162,49)"/><text x="1181.00" y="126.50"></text></g><g><title>0x7f2095831978 (?) (1 samples, 0.19%)</title><rect x="1178" y="132" width="3" height="15" fill="rgb(228,87,8)"/><text x="1181.00" y="142.50"></text></g><g><title>0x7f207a21c7af (?) (1 samples, 0.19%)</title><rect x="1178" y="148" width="3" height="15" fill="rgb(235,117,10)"/><text x="1181.00" y="158.50"></text></g><g><title>0x7f207a2011e5 (?) (1 samples, 0.19%)</title><rect x="1178" y="164" width="3" height="15" fill="rgb(210,210,11)"/><text x="1181.00" y="174.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="1178" y="180" width="3" height="15" fill="rgb(245,150,42)"/><text x="1181.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="1178" y="196" width="3" height="15" fill="rgb(227,214,41)"/><text x="1181.00" y="206.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.38%)</title><rect x="1181" y="180" width="4" height="15" fill="rgb(229,140,48)"/><text x="1184.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (2 samples, 0.38%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(208,15,18)"/><text x="1184.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.38%)</title><rect x="1181" y="212" width="4" height="15" fill="rgb(217,102,35)"/><text x="1184.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.19%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(226,108,8)"/><text x="1186.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(232,162,38)"/><text x="1186.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(210,155,24)"/><text x="1186.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="276" width="2" height="15" fill="rgb(218,36,26)"/><text x="1186.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(236,153,52)"/><text x="1186.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(249,102,49)"/><text x="1186.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::FieldSize (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="324" width="2" height="15" fill="rgb(243,53,28)"/><text x="1186.00" y="334.50"></text></g><g><title>google::protobuf::Reflection::GetRaw&lt;google::protobuf::RepeatedField&lt;long&gt; &gt; (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(206,157,26)"/><text x="1186.00" y="350.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="356" width="2" height="15" fill="rgb(209,206,50)"/><text x="1186.00" y="366.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffsetNonOneof (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="372" width="2" height="15" fill="rgb(215,77,16)"/><text x="1186.00" y="382.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.57%)</title><rect x="1181" y="116" width="6" height="15" fill="rgb(228,203,15)"/><text x="1184.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.57%)</title><rect x="1181" y="132" width="6" height="15" fill="rgb(228,126,48)"/><text x="1184.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (3 samples, 0.57%)</title><rect x="1181" y="148" width="6" height="15" fill="rgb(224,66,15)"/><text x="1184.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (3 samples, 0.57%)</title><rect x="1181" y="164" width="6" height="15" fill="rgb(252,152,39)"/><text x="1184.00" y="174.50"></text></g><g><title>parse_sklearn_model (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(209,92,37)"/><text x="1188.00" y="190.50"></text></g><g><title>parse_sklearn (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(220,9,43)"/><text x="1188.00" y="206.50"></text></g><g><title>_parse_sklearn_classifier (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(210,100,20)"/><text x="1188.00" y="222.50"></text></g><g><title>_parse_sklearn_simple_model (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(212,160,6)"/><text x="1188.00" y="238.50"></text></g><g><title>declare_local_operator (skl2onnx/common/_topology.py) (1 samples, 0.19%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(237,200,5)"/><text x="1188.00" y="254.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.19%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(235,74,24)"/><text x="1188.00" y="270.50"></text></g><g><title>all (528 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,201,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (528 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(223,225,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (278 samples, 52.65%)</title><rect x="568" y="68" width="622" height="15" fill="rgb(253,181,7)"/><text x="571.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py) (278 samples, 52.65%)</title><rect x="568" y="84" width="622" height="15" fill="rgb(254,51,19)"/><text x="571.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_m_cl_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.95%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(217,55,15)"/><text x="1181.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.19%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(227,65,30)"/><text x="1190.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.19%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(247,21,0)"/><text x="1190.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(251,56,47)"/><text x="1190.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(206,218,3)"/><text x="1190.00" y="174.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(251,207,15)"/><text x="1190.00" y="190.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(252,141,41)"/><text x="1190.00" y="206.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(243,102,50)"/><text x="1190.00" y="222.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(209,166,28)"/><text x="1190.00" y="238.50"></text></g></g></svg>