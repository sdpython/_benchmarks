<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(251,132,2)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(231,7,6)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(229,147,14)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(209,183,35)"/><text x="13.00" y="926.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.22%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(217,172,4)"/><text x="13.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(225,133,8)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(241,79,7)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(249,193,31)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(229,208,34)"/><text x="15.00" y="926.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.22%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(218,75,18)"/><text x="15.00" y="942.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(241,178,41)"/><text x="15.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(248,191,45)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(250,197,1)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(238,180,35)"/><text x="18.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(221,55,40)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(233,152,54)"/><text x="18.00" y="974.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.22%)</title><rect x="17" y="916" width="3" height="15" fill="rgb(223,206,44)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.12%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(207,101,34)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(232,196,45)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(238,159,18)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(225,193,42)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(236,225,45)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(225,85,26)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.12%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(247,217,23)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(228,197,8)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(206,187,11)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(206,174,28)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(252,154,52)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(214,71,53)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.12%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(228,154,7)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(230,85,5)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(230,217,15)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(252,194,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(228,99,45)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(251,118,18)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.12%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(223,229,6)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(217,55,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(212,191,53)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(209,95,8)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(246,69,37)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(211,119,10)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(249,137,12)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(235,1,35)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(240,61,23)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.12%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(227,44,21)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(217,15,26)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(236,53,54)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(245,44,4)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(235,5,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(240,80,36)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.12%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(236,204,47)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.12%)</title><rect x="10" y="836" width="13" height="15" fill="rgb(214,133,1)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.12%)</title><rect x="10" y="852" width="13" height="15" fill="rgb(217,164,13)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.67%)</title><rect x="15" y="868" width="8" height="15" fill="rgb(251,94,37)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.67%)</title><rect x="15" y="884" width="8" height="15" fill="rgb(219,80,52)"/><text x="18.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.45%)</title><rect x="17" y="900" width="6" height="15" fill="rgb(252,190,51)"/><text x="20.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="20" y="916" width="3" height="15" fill="rgb(251,109,27)"/><text x="23.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="932" width="3" height="15" fill="rgb(221,37,51)"/><text x="23.00" y="942.50"></text></g><g><title>0x7fb8c1c91237 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="948" width="3" height="15" fill="rgb(246,130,12)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="916" width="2" height="15" fill="rgb(252,38,54)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="932" width="2" height="15" fill="rgb(229,191,24)"/><text x="26.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="948" width="2" height="15" fill="rgb(251,223,16)"/><text x="26.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="964" width="2" height="15" fill="rgb(230,130,7)"/><text x="26.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="980" width="2" height="15" fill="rgb(241,0,1)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="23" y="996" width="2" height="15" fill="rgb(220,74,46)"/><text x="26.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1012" width="2" height="15" fill="rgb(251,163,38)"/><text x="26.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1028" width="2" height="15" fill="rgb(251,27,13)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1044" width="2" height="15" fill="rgb(253,122,16)"/><text x="26.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1060" width="2" height="15" fill="rgb(252,188,22)"/><text x="26.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1076" width="2" height="15" fill="rgb(224,5,40)"/><text x="26.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1092" width="2" height="15" fill="rgb(222,141,54)"/><text x="26.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1108" width="2" height="15" fill="rgb(223,213,10)"/><text x="26.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.22%)</title><rect x="23" y="1124" width="2" height="15" fill="rgb(244,161,24)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1140" width="2" height="15" fill="rgb(214,158,54)"/><text x="26.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1156" width="2" height="15" fill="rgb(236,202,11)"/><text x="26.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1172" width="2" height="15" fill="rgb(244,169,27)"/><text x="26.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1188" width="2" height="15" fill="rgb(254,174,20)"/><text x="26.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1204" width="2" height="15" fill="rgb(242,159,5)"/><text x="26.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.22%)</title><rect x="23" y="1220" width="2" height="15" fill="rgb(209,196,8)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1236" width="2" height="15" fill="rgb(207,157,27)"/><text x="26.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1252" width="2" height="15" fill="rgb(205,14,9)"/><text x="26.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1268" width="2" height="15" fill="rgb(247,76,39)"/><text x="26.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1284" width="2" height="15" fill="rgb(216,37,21)"/><text x="26.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1300" width="2" height="15" fill="rgb(205,23,23)"/><text x="26.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.22%)</title><rect x="23" y="1316" width="2" height="15" fill="rgb(253,103,21)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1332" width="2" height="15" fill="rgb(228,39,8)"/><text x="26.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1348" width="2" height="15" fill="rgb(244,91,24)"/><text x="26.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1364" width="2" height="15" fill="rgb(210,209,50)"/><text x="26.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1380" width="2" height="15" fill="rgb(226,72,16)"/><text x="26.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1396" width="2" height="15" fill="rgb(223,185,48)"/><text x="26.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.22%)</title><rect x="23" y="1412" width="2" height="15" fill="rgb(227,67,13)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1428" width="2" height="15" fill="rgb(221,81,18)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1444" width="2" height="15" fill="rgb(212,227,16)"/><text x="26.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1460" width="2" height="15" fill="rgb(247,38,23)"/><text x="26.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1476" width="2" height="15" fill="rgb(247,219,30)"/><text x="26.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1492" width="2" height="15" fill="rgb(208,138,22)"/><text x="26.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/equality_constrained_sqp.py) (1 samples, 0.22%)</title><rect x="23" y="1508" width="2" height="15" fill="rgb(238,32,8)"/><text x="26.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1524" width="2" height="15" fill="rgb(241,209,17)"/><text x="26.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1540" width="2" height="15" fill="rgb(224,167,8)"/><text x="26.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1556" width="2" height="15" fill="rgb(250,127,7)"/><text x="26.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1572" width="2" height="15" fill="rgb(220,207,21)"/><text x="26.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1588" width="2" height="15" fill="rgb(239,161,15)"/><text x="26.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/projections.py) (1 samples, 0.22%)</title><rect x="23" y="1604" width="2" height="15" fill="rgb(229,37,8)"/><text x="26.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1620" width="2" height="15" fill="rgb(219,23,20)"/><text x="26.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1636" width="2" height="15" fill="rgb(221,182,4)"/><text x="26.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1652" width="2" height="15" fill="rgb(206,215,11)"/><text x="26.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1668" width="2" height="15" fill="rgb(251,29,7)"/><text x="26.00" y="1678.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1684" width="2" height="15" fill="rgb(228,18,40)"/><text x="26.00" y="1694.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="23" y="1700" width="2" height="15" fill="rgb(220,195,7)"/><text x="26.00" y="1710.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1716" width="2" height="15" fill="rgb(252,44,24)"/><text x="26.00" y="1726.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="23" y="1732" width="2" height="15" fill="rgb(253,131,45)"/><text x="26.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="500" width="5" height="15" fill="rgb(209,153,46)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="516" width="5" height="15" fill="rgb(251,218,49)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="532" width="5" height="15" fill="rgb(212,40,11)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="548" width="5" height="15" fill="rgb(210,0,37)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="564" width="5" height="15" fill="rgb(245,19,14)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.45%)</title><rect x="23" y="580" width="5" height="15" fill="rgb(250,122,53)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="596" width="5" height="15" fill="rgb(234,30,18)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="612" width="5" height="15" fill="rgb(227,66,3)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="628" width="5" height="15" fill="rgb(226,210,11)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="644" width="5" height="15" fill="rgb(245,23,14)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="660" width="5" height="15" fill="rgb(248,206,2)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.45%)</title><rect x="23" y="676" width="5" height="15" fill="rgb(245,109,5)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="692" width="5" height="15" fill="rgb(251,205,43)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="708" width="5" height="15" fill="rgb(229,33,46)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="724" width="5" height="15" fill="rgb(246,152,10)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="740" width="5" height="15" fill="rgb(224,64,45)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="756" width="5" height="15" fill="rgb(211,73,4)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.45%)</title><rect x="23" y="772" width="5" height="15" fill="rgb(228,11,49)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="788" width="5" height="15" fill="rgb(222,110,49)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="804" width="5" height="15" fill="rgb(218,123,46)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="820" width="5" height="15" fill="rgb(238,23,54)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="836" width="5" height="15" fill="rgb(237,31,26)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="852" width="5" height="15" fill="rgb(224,27,33)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="23" y="868" width="5" height="15" fill="rgb(226,81,15)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="23" y="884" width="5" height="15" fill="rgb(223,94,4)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.45%)</title><rect x="23" y="900" width="5" height="15" fill="rgb(233,86,36)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(220,118,18)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(230,172,50)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(205,211,47)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(215,196,21)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(250,110,10)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(243,91,13)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(222,68,38)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.22%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(251,206,28)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(247,172,39)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.22%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(220,108,27)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.79%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(235,112,27)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.79%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(205,159,45)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.79%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(211,49,46)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.79%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(239,13,32)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.79%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(220,6,27)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.79%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(207,155,21)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.67%)</title><rect x="23" y="292" width="8" height="15" fill="rgb(205,8,19)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="308" width="8" height="15" fill="rgb(220,131,2)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="324" width="8" height="15" fill="rgb(218,147,5)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="340" width="8" height="15" fill="rgb(234,75,36)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="23" y="356" width="8" height="15" fill="rgb(246,201,53)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="372" width="8" height="15" fill="rgb(235,109,33)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.67%)</title><rect x="23" y="388" width="8" height="15" fill="rgb(244,80,4)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="404" width="8" height="15" fill="rgb(254,140,4)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="420" width="8" height="15" fill="rgb(231,127,13)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="436" width="8" height="15" fill="rgb(207,150,7)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="23" y="452" width="8" height="15" fill="rgb(245,28,39)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="23" y="468" width="8" height="15" fill="rgb(206,39,46)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.67%)</title><rect x="23" y="484" width="8" height="15" fill="rgb(217,179,4)"/><text x="26.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(246,219,22)"/><text x="31.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(248,125,7)"/><text x="31.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(225,218,38)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(244,100,48)"/><text x="31.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(232,221,30)"/><text x="31.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(209,106,33)"/><text x="31.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(233,47,45)"/><text x="31.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.22%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(232,101,44)"/><text x="31.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(224,82,46)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(229,25,18)"/><text x="31.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(215,120,20)"/><text x="31.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(214,23,10)"/><text x="31.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(234,174,29)"/><text x="31.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.22%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(220,16,12)"/><text x="31.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(225,19,24)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(212,166,40)"/><text x="31.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(250,135,2)"/><text x="31.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(228,66,2)"/><text x="31.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(218,123,48)"/><text x="31.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.22%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(231,57,24)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(253,115,37)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(211,214,37)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(253,220,54)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(219,220,37)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(227,13,31)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.22%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(215,31,52)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(217,44,14)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(246,181,43)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(246,119,13)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(245,227,0)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(221,137,0)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(240,200,51)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(240,47,6)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.22%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(208,219,2)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(224,169,14)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(240,223,5)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(238,76,7)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(248,227,17)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(241,69,22)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.22%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(236,195,0)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(245,33,24)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(209,27,18)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(246,90,19)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(222,225,22)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(247,229,0)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.22%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(236,141,36)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(228,63,16)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(207,18,11)"/><text x="34.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(235,220,41)"/><text x="34.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(250,70,42)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(208,86,18)"/><text x="34.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(243,188,38)"/><text x="34.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(229,69,7)"/><text x="34.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(208,0,33)"/><text x="34.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.22%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(223,229,24)"/><text x="34.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(240,107,11)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(235,42,1)"/><text x="34.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(210,185,28)"/><text x="34.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(231,196,5)"/><text x="34.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(233,12,48)"/><text x="34.00" y="1438.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/topology.py) (1 samples, 0.22%)</title><rect x="31" y="1444" width="2" height="15" fill="rgb(252,224,40)"/><text x="34.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1460" width="2" height="15" fill="rgb(210,122,22)"/><text x="34.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1476" width="2" height="15" fill="rgb(217,121,5)"/><text x="34.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="31" y="1492" width="2" height="15" fill="rgb(253,70,3)"/><text x="34.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1508" width="2" height="15" fill="rgb(242,141,45)"/><text x="34.00" y="1518.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1524" width="2" height="15" fill="rgb(225,8,44)"/><text x="34.00" y="1534.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="31" y="1540" width="2" height="15" fill="rgb(253,124,10)"/><text x="34.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="484" width="5" height="15" fill="rgb(245,37,36)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="500" width="5" height="15" fill="rgb(217,81,31)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="516" width="5" height="15" fill="rgb(216,41,35)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="532" width="5" height="15" fill="rgb(209,205,5)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="548" width="5" height="15" fill="rgb(216,134,8)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="564" width="5" height="15" fill="rgb(241,88,22)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.45%)</title><rect x="31" y="580" width="5" height="15" fill="rgb(244,78,13)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="596" width="5" height="15" fill="rgb(240,128,34)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="612" width="5" height="15" fill="rgb(218,23,34)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="628" width="5" height="15" fill="rgb(250,203,47)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="644" width="5" height="15" fill="rgb(242,104,3)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="660" width="5" height="15" fill="rgb(251,112,34)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.45%)</title><rect x="31" y="676" width="5" height="15" fill="rgb(214,78,22)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="692" width="5" height="15" fill="rgb(233,123,2)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="708" width="5" height="15" fill="rgb(240,28,50)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="724" width="5" height="15" fill="rgb(212,209,35)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="740" width="5" height="15" fill="rgb(244,125,30)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="756" width="5" height="15" fill="rgb(242,150,25)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.45%)</title><rect x="31" y="772" width="5" height="15" fill="rgb(250,19,0)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="788" width="5" height="15" fill="rgb(222,115,50)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="804" width="5" height="15" fill="rgb(237,221,33)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(233,102,31)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(237,44,45)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(234,168,31)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.45%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(220,149,14)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="884" width="5" height="15" fill="rgb(238,69,17)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="900" width="5" height="15" fill="rgb(231,110,33)"/><text x="34.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(242,124,31)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(240,175,0)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(221,96,12)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(254,51,8)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(243,125,54)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(250,225,44)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(225,164,37)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(217,219,44)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(228,114,27)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(215,181,0)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(245,1,13)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(213,221,47)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.45%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(217,11,3)"/><text x="34.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1124" width="3" height="15" fill="rgb(234,8,32)"/><text x="36.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1140" width="3" height="15" fill="rgb(228,153,42)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1156" width="3" height="15" fill="rgb(220,93,47)"/><text x="36.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1172" width="3" height="15" fill="rgb(223,42,49)"/><text x="36.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1188" width="3" height="15" fill="rgb(227,101,28)"/><text x="36.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1204" width="3" height="15" fill="rgb(239,23,48)"/><text x="36.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1220" width="3" height="15" fill="rgb(208,166,28)"/><text x="36.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.22%)</title><rect x="33" y="1236" width="3" height="15" fill="rgb(223,143,13)"/><text x="36.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1252" width="3" height="15" fill="rgb(217,108,53)"/><text x="36.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1268" width="3" height="15" fill="rgb(237,178,8)"/><text x="36.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1284" width="3" height="15" fill="rgb(216,159,54)"/><text x="36.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1300" width="3" height="15" fill="rgb(245,73,15)"/><text x="36.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1316" width="3" height="15" fill="rgb(229,65,46)"/><text x="36.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1332" width="3" height="15" fill="rgb(219,190,9)"/><text x="36.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1348" width="3" height="15" fill="rgb(218,162,10)"/><text x="36.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.22%)</title><rect x="33" y="1364" width="3" height="15" fill="rgb(246,128,50)"/><text x="36.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1380" width="3" height="15" fill="rgb(253,146,16)"/><text x="36.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1396" width="3" height="15" fill="rgb(219,216,45)"/><text x="36.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1412" width="3" height="15" fill="rgb(207,223,36)"/><text x="36.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1428" width="3" height="15" fill="rgb(237,6,32)"/><text x="36.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1444" width="3" height="15" fill="rgb(251,208,47)"/><text x="36.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="33" y="1460" width="3" height="15" fill="rgb(236,74,48)"/><text x="36.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="33" y="1476" width="3" height="15" fill="rgb(216,124,18)"/><text x="36.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="33" y="1492" width="3" height="15" fill="rgb(207,215,22)"/><text x="36.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(225,172,37)"/><text x="36.00" y="1518.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(242,114,41)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(252,123,39)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(243,89,40)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(242,91,43)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(205,179,15)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(232,2,43)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(222,210,10)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(209,180,20)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(210,222,11)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(248,160,23)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(243,176,20)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(218,220,12)"/><text x="39.00" y="910.50"></text></g><g><title>0x7fb898dd840e (?) (1 samples, 0.22%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(218,115,42)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(221,153,54)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(236,159,43)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(207,66,21)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(219,84,40)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(244,65,43)"/><text x="39.00" y="1006.50"></text></g><g><title>0x7fb898b91cd2 (?) (1 samples, 0.22%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(207,199,14)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(225,56,43)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(238,140,5)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(206,82,45)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(224,186,23)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(237,102,32)"/><text x="39.00" y="1102.50"></text></g><g><title>0x7fb8982870e5 (?) (1 samples, 0.22%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(250,88,3)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(241,162,6)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(206,77,45)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(214,202,30)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(243,228,46)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(219,185,13)"/><text x="39.00" y="1198.50"></text></g><g><title>0x7fb89800be68 (?) (1 samples, 0.22%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(246,206,20)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(232,115,10)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(235,155,18)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(217,14,10)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(217,137,44)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(243,36,44)"/><text x="39.00" y="1294.50"></text></g><g><title>0x7fb897d9c2fb (?) (1 samples, 0.22%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(211,6,19)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(246,207,41)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(213,1,1)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(235,38,4)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(214,209,33)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(225,184,26)"/><text x="39.00" y="1390.50"></text></g><g><title>0x7fb897b80153 (?) (1 samples, 0.22%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(223,161,43)"/><text x="39.00" y="1406.50"></text></g><g><title>0x7fb897b7ec13 (?) (1 samples, 0.22%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(217,35,11)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(228,223,45)"/><text x="39.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(238,77,52)"/><text x="39.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(220,227,44)"/><text x="39.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(219,68,0)"/><text x="39.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(246,141,36)"/><text x="39.00" y="1502.50"></text></g><g><title>0x7fb8978db181 (?) (1 samples, 0.22%)</title><rect x="36" y="1508" width="3" height="15" fill="rgb(248,41,28)"/><text x="39.00" y="1518.50"></text></g><g><title>0x7fb8978de1c9 (?) (1 samples, 0.22%)</title><rect x="36" y="1524" width="3" height="15" fill="rgb(253,224,42)"/><text x="39.00" y="1534.50"></text></g><g><title>0x7fb89790a167 (?) (1 samples, 0.22%)</title><rect x="36" y="1540" width="3" height="15" fill="rgb(222,96,5)"/><text x="39.00" y="1550.50"></text></g><g><title>0x7fb897905b64 (?) (1 samples, 0.22%)</title><rect x="36" y="1556" width="3" height="15" fill="rgb(226,51,3)"/><text x="39.00" y="1566.50"></text></g><g><title>0x7fb8978e907b (?) (1 samples, 0.22%)</title><rect x="36" y="1572" width="3" height="15" fill="rgb(232,112,23)"/><text x="39.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.22%)</title><rect x="36" y="1588" width="3" height="15" fill="rgb(210,29,51)"/><text x="39.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="1604" width="3" height="15" fill="rgb(219,62,37)"/><text x="39.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="1620" width="3" height="15" fill="rgb(209,200,31)"/><text x="39.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="36" y="1636" width="3" height="15" fill="rgb(224,104,54)"/><text x="39.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.22%)</title><rect x="36" y="1652" width="3" height="15" fill="rgb(252,39,4)"/><text x="39.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1092" width="2" height="15" fill="rgb(234,159,13)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.22%)</title><rect x="39" y="1108" width="2" height="15" fill="rgb(223,84,1)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1124" width="2" height="15" fill="rgb(240,88,38)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1140" width="2" height="15" fill="rgb(233,86,22)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1156" width="2" height="15" fill="rgb(209,213,15)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1172" width="2" height="15" fill="rgb(246,184,52)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1188" width="2" height="15" fill="rgb(242,34,41)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.22%)</title><rect x="39" y="1204" width="2" height="15" fill="rgb(233,210,37)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1220" width="2" height="15" fill="rgb(221,65,6)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1236" width="2" height="15" fill="rgb(251,214,30)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1252" width="2" height="15" fill="rgb(232,151,15)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1268" width="2" height="15" fill="rgb(241,71,20)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1284" width="2" height="15" fill="rgb(239,1,32)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.22%)</title><rect x="39" y="1300" width="2" height="15" fill="rgb(207,37,40)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1316" width="2" height="15" fill="rgb(218,102,33)"/><text x="42.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1332" width="2" height="15" fill="rgb(214,135,24)"/><text x="42.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1348" width="2" height="15" fill="rgb(221,85,15)"/><text x="42.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1364" width="2" height="15" fill="rgb(248,135,15)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1380" width="2" height="15" fill="rgb(211,153,49)"/><text x="42.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="39" y="1396" width="2" height="15" fill="rgb(225,85,20)"/><text x="42.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1412" width="2" height="15" fill="rgb(239,90,50)"/><text x="42.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1428" width="2" height="15" fill="rgb(227,165,0)"/><text x="42.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1444" width="2" height="15" fill="rgb(232,31,5)"/><text x="42.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1460" width="2" height="15" fill="rgb(243,178,37)"/><text x="42.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1476" width="2" height="15" fill="rgb(224,88,49)"/><text x="42.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.22%)</title><rect x="39" y="1492" width="2" height="15" fill="rgb(243,78,18)"/><text x="42.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1508" width="2" height="15" fill="rgb(212,93,1)"/><text x="42.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1524" width="2" height="15" fill="rgb(247,74,17)"/><text x="42.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1540" width="2" height="15" fill="rgb(209,5,14)"/><text x="42.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1556" width="2" height="15" fill="rgb(218,121,10)"/><text x="42.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1572" width="2" height="15" fill="rgb(215,32,49)"/><text x="42.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1588" width="2" height="15" fill="rgb(242,2,1)"/><text x="42.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1604" width="2" height="15" fill="rgb(208,164,5)"/><text x="42.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1620" width="2" height="15" fill="rgb(206,176,22)"/><text x="42.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="39" y="1636" width="2" height="15" fill="rgb(222,117,31)"/><text x="42.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1652" width="2" height="15" fill="rgb(220,191,3)"/><text x="42.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1668" width="2" height="15" fill="rgb(215,24,34)"/><text x="42.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1684" width="2" height="15" fill="rgb(205,17,45)"/><text x="42.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1700" width="2" height="15" fill="rgb(239,173,26)"/><text x="42.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1716" width="2" height="15" fill="rgb(252,123,43)"/><text x="42.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1732" width="2" height="15" fill="rgb(220,99,42)"/><text x="42.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1748" width="2" height="15" fill="rgb(236,138,50)"/><text x="42.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.22%)</title><rect x="39" y="1764" width="2" height="15" fill="rgb(254,3,8)"/><text x="42.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1780" width="2" height="15" fill="rgb(242,79,2)"/><text x="42.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1796" width="2" height="15" fill="rgb(214,197,53)"/><text x="42.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1812" width="2" height="15" fill="rgb(232,171,25)"/><text x="42.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1828" width="2" height="15" fill="rgb(233,93,0)"/><text x="42.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1844" width="2" height="15" fill="rgb(239,56,14)"/><text x="42.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.22%)</title><rect x="39" y="1860" width="2" height="15" fill="rgb(236,108,21)"/><text x="42.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1876" width="2" height="15" fill="rgb(207,133,15)"/><text x="42.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1892" width="2" height="15" fill="rgb(208,56,42)"/><text x="42.00" y="1902.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="39" y="1908" width="2" height="15" fill="rgb(253,220,30)"/><text x="42.00" y="1918.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1924" width="2" height="15" fill="rgb(222,185,2)"/><text x="42.00" y="1934.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1940" width="2" height="15" fill="rgb(214,57,43)"/><text x="42.00" y="1950.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1956" width="2" height="15" fill="rgb(220,61,5)"/><text x="42.00" y="1966.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="39" y="1972" width="2" height="15" fill="rgb(249,172,37)"/><text x="42.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.12%)</title><rect x="31" y="340" width="13" height="15" fill="rgb(242,202,44)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="356" width="13" height="15" fill="rgb(211,29,33)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="372" width="13" height="15" fill="rgb(251,165,41)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="388" width="13" height="15" fill="rgb(210,182,22)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.12%)</title><rect x="31" y="404" width="13" height="15" fill="rgb(222,114,5)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="420" width="13" height="15" fill="rgb(244,123,13)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.12%)</title><rect x="31" y="436" width="13" height="15" fill="rgb(235,101,48)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="452" width="13" height="15" fill="rgb(212,113,22)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.12%)</title><rect x="31" y="468" width="13" height="15" fill="rgb(205,19,0)"/><text x="34.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="484" width="8" height="15" fill="rgb(213,75,30)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="36" y="500" width="8" height="15" fill="rgb(211,104,23)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="516" width="8" height="15" fill="rgb(207,124,40)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.67%)</title><rect x="36" y="532" width="8" height="15" fill="rgb(235,5,36)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="548" width="8" height="15" fill="rgb(231,87,15)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="564" width="8" height="15" fill="rgb(240,118,5)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="580" width="8" height="15" fill="rgb(222,135,39)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="36" y="596" width="8" height="15" fill="rgb(222,71,37)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="612" width="8" height="15" fill="rgb(206,101,9)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.67%)</title><rect x="36" y="628" width="8" height="15" fill="rgb(225,115,29)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="644" width="8" height="15" fill="rgb(212,119,35)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="660" width="8" height="15" fill="rgb(252,50,35)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="676" width="8" height="15" fill="rgb(236,140,31)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.67%)</title><rect x="36" y="692" width="8" height="15" fill="rgb(224,144,33)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.67%)</title><rect x="36" y="708" width="8" height="15" fill="rgb(238,55,52)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.45%)</title><rect x="39" y="724" width="5" height="15" fill="rgb(210,47,15)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="740" width="5" height="15" fill="rgb(251,187,42)"/><text x="42.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="756" width="5" height="15" fill="rgb(248,192,18)"/><text x="42.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="772" width="5" height="15" fill="rgb(214,181,28)"/><text x="42.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="39" y="788" width="5" height="15" fill="rgb(213,96,33)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="804" width="5" height="15" fill="rgb(210,169,24)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.45%)</title><rect x="39" y="820" width="5" height="15" fill="rgb(207,199,32)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="836" width="5" height="15" fill="rgb(216,171,1)"/><text x="42.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="852" width="5" height="15" fill="rgb(250,13,28)"/><text x="42.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="868" width="5" height="15" fill="rgb(208,29,17)"/><text x="42.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="39" y="884" width="5" height="15" fill="rgb(250,60,2)"/><text x="42.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="900" width="5" height="15" fill="rgb(231,215,2)"/><text x="42.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.45%)</title><rect x="39" y="916" width="5" height="15" fill="rgb(222,86,48)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="932" width="5" height="15" fill="rgb(249,54,44)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="948" width="5" height="15" fill="rgb(221,133,35)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="964" width="5" height="15" fill="rgb(217,156,18)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="39" y="980" width="5" height="15" fill="rgb(236,56,41)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="996" width="5" height="15" fill="rgb(222,88,50)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.45%)</title><rect x="39" y="1012" width="5" height="15" fill="rgb(212,131,52)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="1028" width="5" height="15" fill="rgb(210,143,53)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="1044" width="5" height="15" fill="rgb(241,130,22)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="39" y="1060" width="5" height="15" fill="rgb(216,208,33)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="39" y="1076" width="5" height="15" fill="rgb(223,56,25)"/><text x="42.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1092" width="3" height="15" fill="rgb(249,26,46)"/><text x="44.00" y="1102.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="41" y="1108" width="3" height="15" fill="rgb(229,220,8)"/><text x="44.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.34%)</title><rect x="31" y="244" width="15" height="15" fill="rgb(233,113,44)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.34%)</title><rect x="31" y="260" width="15" height="15" fill="rgb(250,30,52)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.34%)</title><rect x="31" y="276" width="15" height="15" fill="rgb(216,53,31)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.34%)</title><rect x="31" y="292" width="15" height="15" fill="rgb(242,177,10)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.34%)</title><rect x="31" y="308" width="15" height="15" fill="rgb(252,114,25)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.34%)</title><rect x="31" y="324" width="15" height="15" fill="rgb(224,83,29)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.22%)</title><rect x="44" y="340" width="2" height="15" fill="rgb(220,186,4)"/><text x="47.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="356" width="2" height="15" fill="rgb(227,31,45)"/><text x="47.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="372" width="2" height="15" fill="rgb(237,210,15)"/><text x="47.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="388" width="2" height="15" fill="rgb(241,203,6)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="404" width="2" height="15" fill="rgb(249,35,46)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="420" width="2" height="15" fill="rgb(237,102,37)"/><text x="47.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="436" width="2" height="15" fill="rgb(243,43,34)"/><text x="47.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="452" width="2" height="15" fill="rgb(222,16,49)"/><text x="47.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="468" width="2" height="15" fill="rgb(212,177,17)"/><text x="47.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.22%)</title><rect x="44" y="484" width="2" height="15" fill="rgb(248,100,45)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="500" width="2" height="15" fill="rgb(224,36,22)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="516" width="2" height="15" fill="rgb(229,21,18)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="532" width="2" height="15" fill="rgb(232,19,47)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="548" width="2" height="15" fill="rgb(229,223,12)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="564" width="2" height="15" fill="rgb(223,119,15)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.22%)</title><rect x="44" y="580" width="2" height="15" fill="rgb(239,210,26)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="596" width="2" height="15" fill="rgb(223,203,47)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="612" width="2" height="15" fill="rgb(240,125,52)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="628" width="2" height="15" fill="rgb(253,83,3)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="644" width="2" height="15" fill="rgb(210,160,36)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="660" width="2" height="15" fill="rgb(223,123,30)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.22%)</title><rect x="44" y="676" width="2" height="15" fill="rgb(214,181,26)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="692" width="2" height="15" fill="rgb(233,155,27)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="708" width="2" height="15" fill="rgb(223,150,42)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="724" width="2" height="15" fill="rgb(253,62,34)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="740" width="2" height="15" fill="rgb(253,47,9)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="756" width="2" height="15" fill="rgb(224,63,17)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.22%)</title><rect x="44" y="772" width="2" height="15" fill="rgb(241,196,38)"/><text x="47.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(242,152,36)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(207,0,5)"/><text x="47.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(225,120,29)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(225,143,35)"/><text x="47.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(249,50,38)"/><text x="47.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(213,97,48)"/><text x="47.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(244,57,7)"/><text x="47.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.22%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(243,196,47)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(251,142,28)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(238,5,47)"/><text x="47.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(239,18,24)"/><text x="47.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(238,141,11)"/><text x="47.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(245,62,13)"/><text x="47.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.22%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(220,164,45)"/><text x="47.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1012" width="2" height="15" fill="rgb(228,119,33)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1028" width="2" height="15" fill="rgb(249,131,48)"/><text x="47.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1044" width="2" height="15" fill="rgb(239,223,36)"/><text x="47.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1060" width="2" height="15" fill="rgb(247,218,45)"/><text x="47.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1076" width="2" height="15" fill="rgb(238,145,14)"/><text x="47.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.22%)</title><rect x="44" y="1092" width="2" height="15" fill="rgb(237,223,38)"/><text x="47.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1108" width="2" height="15" fill="rgb(229,44,51)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1124" width="2" height="15" fill="rgb(228,98,19)"/><text x="47.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1140" width="2" height="15" fill="rgb(251,106,9)"/><text x="47.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1156" width="2" height="15" fill="rgb(215,2,54)"/><text x="47.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1172" width="2" height="15" fill="rgb(251,8,31)"/><text x="47.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py) (1 samples, 0.22%)</title><rect x="44" y="1188" width="2" height="15" fill="rgb(249,69,24)"/><text x="47.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1204" width="2" height="15" fill="rgb(214,54,2)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1220" width="2" height="15" fill="rgb(247,27,9)"/><text x="47.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1236" width="2" height="15" fill="rgb(229,11,26)"/><text x="47.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="44" y="1252" width="2" height="15" fill="rgb(233,73,30)"/><text x="47.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="44" y="1268" width="2" height="15" fill="rgb(252,115,7)"/><text x="47.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x509.py) (1 samples, 0.22%)</title><rect x="44" y="1284" width="2" height="15" fill="rgb(228,53,11)"/><text x="47.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.22%)</title><rect x="44" y="1300" width="2" height="15" fill="rgb(222,228,45)"/><text x="47.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.22%)</title><rect x="44" y="1316" width="2" height="15" fill="rgb(231,25,0)"/><text x="47.00" y="1326.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.22%)</title><rect x="44" y="1332" width="2" height="15" fill="rgb(229,44,41)"/><text x="47.00" y="1342.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.22%)</title><rect x="44" y="1348" width="2" height="15" fill="rgb(225,41,42)"/><text x="47.00" y="1358.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.22%)</title><rect x="44" y="1364" width="2" height="15" fill="rgb(252,6,10)"/><text x="47.00" y="1374.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.22%)</title><rect x="44" y="1380" width="2" height="15" fill="rgb(218,12,23)"/><text x="47.00" y="1390.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.22%)</title><rect x="44" y="1396" width="2" height="15" fill="rgb(223,208,19)"/><text x="47.00" y="1406.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.22%)</title><rect x="44" y="1412" width="2" height="15" fill="rgb(206,156,29)"/><text x="47.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="68" width="39" height="15" fill="rgb(232,193,48)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="84" width="39" height="15" fill="rgb(224,172,52)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="100" width="39" height="15" fill="rgb(216,106,53)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.36%)</title><rect x="10" y="116" width="39" height="15" fill="rgb(208,78,45)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="132" width="39" height="15" fill="rgb(231,15,38)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear.py) (15 samples, 3.36%)</title><rect x="10" y="148" width="39" height="15" fill="rgb(205,200,36)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="164" width="39" height="15" fill="rgb(243,81,38)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.36%)</title><rect x="10" y="180" width="39" height="15" fill="rgb(211,153,32)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="31" y="196" width="18" height="15" fill="rgb(225,163,15)"/><text x="34.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.57%)</title><rect x="31" y="212" width="18" height="15" fill="rgb(207,201,21)"/><text x="34.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.57%)</title><rect x="31" y="228" width="18" height="15" fill="rgb(206,179,22)"/><text x="34.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.22%)</title><rect x="46" y="244" width="3" height="15" fill="rgb(209,35,47)"/><text x="49.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="260" width="3" height="15" fill="rgb(246,15,0)"/><text x="49.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="276" width="3" height="15" fill="rgb(242,156,26)"/><text x="49.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="292" width="3" height="15" fill="rgb(230,216,12)"/><text x="49.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="308" width="3" height="15" fill="rgb(234,101,14)"/><text x="49.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="324" width="3" height="15" fill="rgb(223,100,24)"/><text x="49.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.22%)</title><rect x="46" y="340" width="3" height="15" fill="rgb(218,16,30)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="356" width="3" height="15" fill="rgb(228,115,53)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="372" width="3" height="15" fill="rgb(230,199,27)"/><text x="49.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="388" width="3" height="15" fill="rgb(226,96,50)"/><text x="49.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="404" width="3" height="15" fill="rgb(234,47,26)"/><text x="49.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="420" width="3" height="15" fill="rgb(216,20,21)"/><text x="49.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.22%)</title><rect x="46" y="436" width="3" height="15" fill="rgb(208,137,16)"/><text x="49.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="452" width="3" height="15" fill="rgb(245,181,8)"/><text x="49.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="468" width="3" height="15" fill="rgb(210,175,29)"/><text x="49.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="46" y="484" width="3" height="15" fill="rgb(209,93,27)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="500" width="3" height="15" fill="rgb(225,107,12)"/><text x="49.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="516" width="3" height="15" fill="rgb(243,158,20)"/><text x="49.00" y="526.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="46" y="532" width="3" height="15" fill="rgb(251,137,16)"/><text x="49.00" y="542.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="49" y="116" width="3" height="15" fill="rgb(218,44,30)"/><text x="52.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.22%)</title><rect x="49" y="132" width="3" height="15" fill="rgb(245,202,12)"/><text x="52.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.22%)</title><rect x="49" y="148" width="3" height="15" fill="rgb(208,69,20)"/><text x="52.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.22%)</title><rect x="49" y="164" width="3" height="15" fill="rgb(233,59,19)"/><text x="52.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="49" y="180" width="3" height="15" fill="rgb(244,103,52)"/><text x="52.00" y="190.50"></text></g><g><title>0x7fb881cc1ff9 (?) (1 samples, 0.22%)</title><rect x="81" y="212" width="2" height="15" fill="rgb(232,208,34)"/><text x="84.00" y="222.50"></text></g><g><title>0x7fb881cbcef6 (?) (1 samples, 0.22%)</title><rect x="81" y="228" width="2" height="15" fill="rgb(217,135,8)"/><text x="84.00" y="238.50"></text></g><g><title>0x7fb881cb22cc (?) (1 samples, 0.22%)</title><rect x="81" y="244" width="2" height="15" fill="rgb(233,125,31)"/><text x="84.00" y="254.50"></text></g><g><title>0x7fb881ccf2e2 (?) (1 samples, 0.22%)</title><rect x="81" y="260" width="2" height="15" fill="rgb(216,121,5)"/><text x="84.00" y="270.50"></text></g><g><title>0x7fb8c1c71d94 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="81" y="276" width="2" height="15" fill="rgb(233,49,15)"/><text x="84.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.67%)</title><rect x="83" y="212" width="8" height="15" fill="rgb(219,72,26)"/><text x="86.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="83" y="228" width="8" height="15" fill="rgb(206,42,47)"/><text x="86.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="86" y="244" width="5" height="15" fill="rgb(243,108,39)"/><text x="89.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="86" y="260" width="5" height="15" fill="rgb(213,167,31)"/><text x="89.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="86" y="276" width="5" height="15" fill="rgb(238,116,17)"/><text x="89.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="89" y="292" width="2" height="15" fill="rgb(207,85,33)"/><text x="92.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="91" y="260" width="3" height="15" fill="rgb(224,165,18)"/><text x="94.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="97" y="292" width="2" height="15" fill="rgb(252,139,45)"/><text x="100.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="97" y="308" width="2" height="15" fill="rgb(238,14,26)"/><text x="100.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="99" y="292" width="3" height="15" fill="rgb(251,73,28)"/><text x="102.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="99" y="308" width="3" height="15" fill="rgb(206,165,18)"/><text x="102.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="99" y="324" width="3" height="15" fill="rgb(235,2,8)"/><text x="102.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="99" y="340" width="3" height="15" fill="rgb(205,7,27)"/><text x="102.00" y="350.50"></text></g><g><title>0x7fb8c1c52f49 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="99" y="356" width="3" height="15" fill="rgb(235,13,26)"/><text x="102.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="340" width="2" height="15" fill="rgb(253,65,34)"/><text x="108.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="356" width="2" height="15" fill="rgb(222,161,22)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="372" width="2" height="15" fill="rgb(230,220,7)"/><text x="108.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="105" y="388" width="2" height="15" fill="rgb(211,16,18)"/><text x="108.00" y="398.50"></text></g><g><title>0x7fb8c1c606a2 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="105" y="404" width="2" height="15" fill="rgb(210,108,23)"/><text x="108.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceAllocate (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="371" y="452" width="3" height="15" fill="rgb(232,81,29)"/><text x="374.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="366" y="356" width="10" height="15" fill="rgb(248,93,44)"/><text x="369.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="366" y="372" width="10" height="15" fill="rgb(226,166,32)"/><text x="369.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="366" y="388" width="10" height="15" fill="rgb(215,111,14)"/><text x="369.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="369" y="404" width="7" height="15" fill="rgb(218,11,7)"/><text x="372.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="369" y="420" width="7" height="15" fill="rgb(222,101,25)"/><text x="372.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="369" y="436" width="7" height="15" fill="rgb(218,181,34)"/><text x="372.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="374" y="452" width="2" height="15" fill="rgb(244,73,54)"/><text x="377.00" y="462.50"></text></g><g><title>0x7fb881c88850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="408" y="372" width="5" height="15" fill="rgb(210,84,31)"/><text x="411.00" y="382.50"></text></g><g><title>0x7fb8c1c71d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="413" y="372" width="3" height="15" fill="rgb(217,78,21)"/><text x="416.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 3.58%)</title><rect x="376" y="356" width="43" height="15" fill="rgb(253,229,12)"/><text x="379.00" y="366.50">onnx..</text></g><g><title>0x7fb8c1c71d97 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="416" y="372" width="3" height="15" fill="rgb(218,57,27)"/><text x="419.00" y="382.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 26.85%)</title><rect x="105" y="324" width="316" height="15" fill="rgb(229,5,13)"/><text x="108.00" y="334.50">onnxruntime::SequentialExecutor::Execute (..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 26.62%)</title><rect x="107" y="340" width="314" height="15" fill="rgb(244,101,37)"/><text x="110.00" y="350.50">onnxruntime::ml::LinearClassifier&lt;float&gt;::..</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="419" y="356" width="2" height="15" fill="rgb(246,18,30)"/><text x="422.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (125 samples, 27.96%)</title><rect x="94" y="260" width="330" height="15" fill="rgb(247,170,42)"/><text x="97.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (124 samples, 27.74%)</title><rect x="97" y="276" width="327" height="15" fill="rgb(224,184,32)"/><text x="100.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 27.29%)</title><rect x="102" y="292" width="322" height="15" fill="rgb(253,19,39)"/><text x="105.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 27.07%)</title><rect x="105" y="308" width="319" height="15" fill="rgb(236,188,32)"/><text x="108.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxr..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="421" y="324" width="3" height="15" fill="rgb(244,110,32)"/><text x="424.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="421" y="340" width="3" height="15" fill="rgb(248,188,24)"/><text x="424.00" y="350.50"></text></g><g><title>0x7fb8c1c52e19 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="421" y="356" width="3" height="15" fill="rgb(253,151,45)"/><text x="424.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="427" y="276" width="2" height="15" fill="rgb(248,103,50)"/><text x="430.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(210,99,8)"/><text x="432.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(217,9,23)"/><text x="432.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(234,50,0)"/><text x="432.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(238,161,4)"/><text x="432.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.89%)</title><rect x="424" y="260" width="11" height="15" fill="rgb(240,100,2)"/><text x="427.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="432" y="276" width="3" height="15" fill="rgb(213,175,1)"/><text x="435.00" y="286.50"></text></g><g><title>0x7fb8c1c71d94 (libc-2.29.so) (4 samples, 0.89%)</title><rect x="435" y="276" width="10" height="15" fill="rgb(240,188,53)"/><text x="438.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.34%)</title><rect x="435" y="260" width="15" height="15" fill="rgb(233,158,11)"/><text x="438.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.45%)</title><rect x="445" y="276" width="5" height="15" fill="rgb(211,210,50)"/><text x="448.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="445" y="292" width="5" height="15" fill="rgb(237,6,31)"/><text x="448.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="448" y="308" width="2" height="15" fill="rgb(230,206,22)"/><text x="451.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="448" y="324" width="2" height="15" fill="rgb(243,37,33)"/><text x="451.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.22%)</title><rect x="448" y="340" width="2" height="15" fill="rgb(248,152,29)"/><text x="451.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="448" y="356" width="2" height="15" fill="rgb(219,186,2)"/><text x="451.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (139 samples, 31.10%)</title><rect x="91" y="244" width="367" height="15" fill="rgb(206,129,6)"/><text x="94.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="450" y="260" width="8" height="15" fill="rgb(236,73,28)"/><text x="453.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="276" width="2" height="15" fill="rgb(212,17,35)"/><text x="459.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="292" width="2" height="15" fill="rgb(248,41,52)"/><text x="459.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="308" width="2" height="15" fill="rgb(253,195,11)"/><text x="459.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="324" width="2" height="15" fill="rgb(237,119,19)"/><text x="459.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="340" width="2" height="15" fill="rgb(236,154,41)"/><text x="459.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="356" width="2" height="15" fill="rgb(247,120,5)"/><text x="459.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="456" y="372" width="2" height="15" fill="rgb(245,102,14)"/><text x="459.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.67%)</title><rect x="458" y="244" width="8" height="15" fill="rgb(249,211,54)"/><text x="461.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.45%)</title><rect x="461" y="260" width="5" height="15" fill="rgb(248,56,2)"/><text x="464.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="464" y="276" width="2" height="15" fill="rgb(245,164,6)"/><text x="467.00" y="286.50"></text></g><g><title>0x7fb8c1c71d50 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="464" y="292" width="2" height="15" fill="rgb(220,56,16)"/><text x="467.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (157 samples, 35.12%)</title><rect x="54" y="132" width="415" height="15" fill="rgb(230,227,11)"/><text x="57.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (154 samples, 34.45%)</title><rect x="62" y="148" width="407" height="15" fill="rgb(250,36,46)"/><text x="65.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (154 samples, 34.45%)</title><rect x="62" y="164" width="407" height="15" fill="rgb(235,206,30)"/><text x="65.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (152 samples, 34.00%)</title><rect x="68" y="180" width="401" height="15" fill="rgb(216,166,20)"/><text x="71.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (150 samples, 33.56%)</title><rect x="73" y="196" width="396" height="15" fill="rgb(212,194,20)"/><text x="76.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 31.99%)</title><rect x="91" y="212" width="378" height="15" fill="rgb(205,134,44)"/><text x="94.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 31.99%)</title><rect x="91" y="228" width="378" height="15" fill="rgb(222,74,11)"/><text x="94.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="466" y="244" width="3" height="15" fill="rgb(241,153,20)"/><text x="469.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (160 samples, 35.79%)</title><rect x="49" y="68" width="422" height="15" fill="rgb(251,120,20)"/><text x="52.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_dec_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (160 samples, 35.79%)</title><rect x="49" y="84" width="422" height="15" fill="rgb(228,119,53)"/><text x="52.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (160 samples, 35.79%)</title><rect x="49" y="100" width="422" height="15" fill="rgb(240,180,43)"/><text x="52.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (159 samples, 35.57%)</title><rect x="52" y="116" width="419" height="15" fill="rgb(238,8,53)"/><text x="55.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="469" y="132" width="2" height="15" fill="rgb(234,161,25)"/><text x="472.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="503" y="180" width="3" height="15" fill="rgb(215,197,37)"/><text x="506.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="530" y="196" width="2" height="15" fill="rgb(252,29,34)"/><text x="533.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.45%)</title><rect x="545" y="212" width="6" height="15" fill="rgb(230,26,18)"/><text x="548.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.22%)</title><rect x="548" y="228" width="3" height="15" fill="rgb(224,91,32)"/><text x="551.00" y="238.50"></text></g><g><title>0x7fb8c1d2fff4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="567" y="292" width="2" height="15" fill="rgb(205,94,29)"/><text x="570.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (12 samples, 2.68%)</title><rect x="580" y="324" width="31" height="15" fill="rgb(219,192,32)"/><text x="583.00" y="334.50">Py..</text></g><g><title>FLOAT_argmax (arraytypes.c.src) (10 samples, 2.24%)</title><rect x="585" y="340" width="26" height="15" fill="rgb(240,55,50)"/><text x="588.00" y="350.50">F..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (20 samples, 4.47%)</title><rect x="564" y="244" width="53" height="15" fill="rgb(216,198,16)"/><text x="567.00" y="254.50">argma..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (19 samples, 4.25%)</title><rect x="567" y="260" width="50" height="15" fill="rgb(243,8,1)"/><text x="570.00" y="270.50">array..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (19 samples, 4.25%)</title><rect x="567" y="276" width="50" height="15" fill="rgb(226,203,5)"/><text x="570.00" y="286.50">argma..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (18 samples, 4.03%)</title><rect x="569" y="292" width="48" height="15" fill="rgb(253,13,21)"/><text x="572.00" y="302.50">_wra..</text></g><g><title>array_argmax (methods.c) (15 samples, 3.36%)</title><rect x="577" y="308" width="40" height="15" fill="rgb(239,7,26)"/><text x="580.00" y="318.50">arr..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.45%)</title><rect x="611" y="324" width="6" height="15" fill="rgb(230,197,11)"/><text x="614.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.22%)</title><rect x="630" y="340" width="2" height="15" fill="rgb(211,95,1)"/><text x="633.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.34%)</title><rect x="625" y="276" width="15" height="15" fill="rgb(234,10,39)"/><text x="628.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (6 samples, 1.34%)</title><rect x="625" y="292" width="15" height="15" fill="rgb(238,109,39)"/><text x="628.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.12%)</title><rect x="627" y="308" width="13" height="15" fill="rgb(222,53,15)"/><text x="630.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (5 samples, 1.12%)</title><rect x="627" y="324" width="13" height="15" fill="rgb(220,26,0)"/><text x="630.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (3 samples, 0.67%)</title><rect x="632" y="340" width="8" height="15" fill="rgb(212,97,33)"/><text x="635.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="632" y="356" width="8" height="15" fill="rgb(241,168,2)"/><text x="635.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="632" y="372" width="8" height="15" fill="rgb(242,20,2)"/><text x="635.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="635" y="388" width="5" height="15" fill="rgb(238,209,49)"/><text x="638.00" y="398.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.89%)</title><rect x="640" y="276" width="11" height="15" fill="rgb(236,206,18)"/><text x="643.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (31 samples, 6.94%)</title><rect x="617" y="244" width="81" height="15" fill="rgb(243,104,29)"/><text x="620.00" y="254.50">numpy_dot..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (29 samples, 6.49%)</title><rect x="622" y="260" width="76" height="15" fill="rgb(246,205,47)"/><text x="625.00" y="270.50">dot (&lt;__..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (18 samples, 4.03%)</title><rect x="651" y="276" width="47" height="15" fill="rgb(253,134,12)"/><text x="654.00" y="286.50">sgem..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.22%)</title><rect x="698" y="260" width="3" height="15" fill="rgb(242,177,51)"/><text x="701.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.22%)</title><rect x="698" y="276" width="3" height="15" fill="rgb(209,119,20)"/><text x="701.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.22%)</title><rect x="698" y="292" width="3" height="15" fill="rgb(238,30,30)"/><text x="701.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="704" y="276" width="2" height="15" fill="rgb(249,169,39)"/><text x="707.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="704" y="292" width="2" height="15" fill="rgb(225,173,2)"/><text x="707.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="709" y="308" width="3" height="15" fill="rgb(254,50,34)"/><text x="712.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="709" y="324" width="3" height="15" fill="rgb(251,186,6)"/><text x="712.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.22%)</title><rect x="709" y="340" width="3" height="15" fill="rgb(211,157,24)"/><text x="712.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="712" y="308" width="2" height="15" fill="rgb(242,193,48)"/><text x="715.00" y="318.50"></text></g><g><title>0x7fb8c1c51df0 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="712" y="324" width="2" height="15" fill="rgb(213,113,41)"/><text x="715.00" y="334.50"></text></g><g><title>0x7fb8c1c71d50 (libc-2.29.so) (3 samples, 0.67%)</title><rect x="741" y="356" width="8" height="15" fill="rgb(233,65,25)"/><text x="744.00" y="366.50"></text></g><g><title>0x7fb8c1c71d97 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="749" y="356" width="2" height="15" fill="rgb(231,55,2)"/><text x="752.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (19 samples, 4.25%)</title><rect x="706" y="276" width="51" height="15" fill="rgb(239,186,20)"/><text x="709.00" y="286.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c) (19 samples, 4.25%)</title><rect x="706" y="292" width="51" height="15" fill="rgb(239,175,29)"/><text x="709.00" y="302.50">itera..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (16 samples, 3.58%)</title><rect x="714" y="308" width="43" height="15" fill="rgb(244,32,32)"/><text x="717.00" y="318.50">NpyI..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (16 samples, 3.58%)</title><rect x="714" y="324" width="43" height="15" fill="rgb(236,207,9)"/><text x="717.00" y="334.50">npyi..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (16 samples, 3.58%)</title><rect x="714" y="340" width="43" height="15" fill="rgb(246,226,13)"/><text x="717.00" y="350.50">PyAr..</text></g><g><title>0x7fb8c1c71dbb (libc-2.29.so) (2 samples, 0.45%)</title><rect x="751" y="356" width="6" height="15" fill="rgb(241,18,25)"/><text x="754.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (22 samples, 4.92%)</title><rect x="701" y="260" width="58" height="15" fill="rgb(250,98,45)"/><text x="704.00" y="270.50">PyUFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="757" y="276" width="2" height="15" fill="rgb(222,32,45)"/><text x="760.00" y="286.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.22%)</title><rect x="757" y="292" width="2" height="15" fill="rgb(244,93,14)"/><text x="760.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.22%)</title><rect x="757" y="308" width="2" height="15" fill="rgb(214,160,33)"/><text x="760.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (107 samples, 23.94%)</title><rect x="479" y="132" width="283" height="15" fill="rgb(226,10,12)"/><text x="482.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/com..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (107 samples, 23.94%)</title><rect x="479" y="148" width="283" height="15" fill="rgb(211,106,32)"/><text x="482.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (103 samples, 23.04%)</title><rect x="490" y="164" width="272" height="15" fill="rgb(240,114,23)"/><text x="493.00" y="174.50">_run_sequence_runtime (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (97 samples, 21.70%)</title><rect x="506" y="180" width="256" height="15" fill="rgb(216,147,2)"/><text x="509.00" y="190.50">run (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (87 samples, 19.46%)</title><rect x="532" y="196" width="230" height="15" fill="rgb(212,142,36)"/><text x="535.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (80 samples, 17.90%)</title><rect x="551" y="212" width="211" height="15" fill="rgb(236,63,12)"/><text x="554.00" y="222.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (79 samples, 17.67%)</title><rect x="553" y="228" width="209" height="15" fill="rgb(251,15,22)"/><text x="556.00" y="238.50">_run (mlprodict/onnxrt/ops_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (24 samples, 5.37%)</title><rect x="698" y="244" width="64" height="15" fill="rgb(213,53,22)"/><text x="701.00" y="254.50">ufunc_g..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="759" y="260" width="3" height="15" fill="rgb(223,77,40)"/><text x="762.00" y="270.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (111 samples, 24.83%)</title><rect x="471" y="100" width="293" height="15" fill="rgb(242,15,31)"/><text x="474.00" y="110.50">profile (bench_LogisticRegression_libli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 24.38%)</title><rect x="477" y="116" width="287" height="15" fill="rgb(217,73,28)"/><text x="480.00" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.22%)</title><rect x="762" y="132" width="2" height="15" fill="rgb(222,99,42)"/><text x="765.00" y="142.50"></text></g><g><title>0x7fb8c1d2ff76 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="762" y="148" width="2" height="15" fill="rgb(232,100,35)"/><text x="765.00" y="158.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="764" y="452" width="3" height="15" fill="rgb(241,204,35)"/><text x="767.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="764" y="468" width="3" height="15" fill="rgb(217,121,23)"/><text x="767.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.22%)</title><rect x="764" y="484" width="3" height="15" fill="rgb(215,157,49)"/><text x="767.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.22%)</title><rect x="764" y="500" width="3" height="15" fill="rgb(220,112,41)"/><text x="767.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="764" y="516" width="3" height="15" fill="rgb(207,189,5)"/><text x="767.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="764" y="532" width="3" height="15" fill="rgb(225,35,44)"/><text x="767.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="764" y="548" width="3" height="15" fill="rgb(226,82,8)"/><text x="767.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="764" y="564" width="3" height="15" fill="rgb(240,193,39)"/><text x="767.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="580" width="3" height="15" fill="rgb(236,151,20)"/><text x="767.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="596" width="3" height="15" fill="rgb(211,4,13)"/><text x="767.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="612" width="3" height="15" fill="rgb(208,49,6)"/><text x="767.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="628" width="3" height="15" fill="rgb(210,112,5)"/><text x="767.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="644" width="3" height="15" fill="rgb(232,119,45)"/><text x="767.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="660" width="3" height="15" fill="rgb(253,140,31)"/><text x="767.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="676" width="3" height="15" fill="rgb(254,204,32)"/><text x="767.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="692" width="3" height="15" fill="rgb(246,24,23)"/><text x="767.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="708" width="3" height="15" fill="rgb(231,71,12)"/><text x="767.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="724" width="3" height="15" fill="rgb(212,124,33)"/><text x="767.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="740" width="3" height="15" fill="rgb(235,98,26)"/><text x="767.00" y="750.50"></text></g><g><title>visit_If (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="756" width="3" height="15" fill="rgb(209,18,38)"/><text x="767.00" y="766.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="772" width="3" height="15" fill="rgb(254,228,39)"/><text x="767.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="788" width="3" height="15" fill="rgb(221,109,14)"/><text x="767.00" y="798.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="804" width="3" height="15" fill="rgb(251,150,22)"/><text x="767.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="820" width="3" height="15" fill="rgb(220,35,26)"/><text x="767.00" y="830.50"></text></g><g><title>new_func (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="764" y="836" width="3" height="15" fill="rgb(219,182,36)"/><text x="767.00" y="846.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="764" y="852" width="3" height="15" fill="rgb(212,85,22)"/><text x="767.00" y="862.50"></text></g><g><title>fold (jinja2/optimizer.py) (1 samples, 0.22%)</title><rect x="764" y="868" width="3" height="15" fill="rgb(242,57,29)"/><text x="767.00" y="878.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (113 samples, 25.28%)</title><rect x="471" y="68" width="299" height="15" fill="rgb(209,27,43)"/><text x="474.00" y="78.50">profile_pyrt (bench_LogisticRegression_l..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (113 samples, 25.28%)</title><rect x="471" y="84" width="299" height="15" fill="rgb(209,193,49)"/><text x="474.00" y="94.50">setup_profile (bench_LogisticRegression_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="764" y="100" width="6" height="15" fill="rgb(254,128,9)"/><text x="767.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="764" y="116" width="6" height="15" fill="rgb(249,165,5)"/><text x="767.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.45%)</title><rect x="764" y="132" width="6" height="15" fill="rgb(225,115,8)"/><text x="767.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.45%)</title><rect x="764" y="148" width="6" height="15" fill="rgb(227,110,51)"/><text x="767.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.45%)</title><rect x="764" y="164" width="6" height="15" fill="rgb(210,197,6)"/><text x="767.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.45%)</title><rect x="764" y="180" width="6" height="15" fill="rgb(213,128,32)"/><text x="767.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.45%)</title><rect x="764" y="196" width="6" height="15" fill="rgb(212,186,52)"/><text x="767.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="212" width="6" height="15" fill="rgb(216,5,35)"/><text x="767.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="228" width="6" height="15" fill="rgb(208,116,42)"/><text x="767.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="244" width="6" height="15" fill="rgb(249,224,5)"/><text x="767.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="764" y="260" width="6" height="15" fill="rgb(248,114,25)"/><text x="767.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="276" width="6" height="15" fill="rgb(214,83,46)"/><text x="767.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.45%)</title><rect x="764" y="292" width="6" height="15" fill="rgb(221,141,46)"/><text x="767.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="308" width="6" height="15" fill="rgb(219,41,7)"/><text x="767.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="324" width="6" height="15" fill="rgb(211,109,23)"/><text x="767.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="340" width="6" height="15" fill="rgb(217,84,39)"/><text x="767.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.45%)</title><rect x="764" y="356" width="6" height="15" fill="rgb(210,73,27)"/><text x="767.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="372" width="6" height="15" fill="rgb(253,219,16)"/><text x="767.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.45%)</title><rect x="764" y="388" width="6" height="15" fill="rgb(207,52,27)"/><text x="767.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="404" width="6" height="15" fill="rgb(254,169,38)"/><text x="767.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="420" width="6" height="15" fill="rgb(217,138,46)"/><text x="767.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="764" y="436" width="6" height="15" fill="rgb(227,13,3)"/><text x="767.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="767" y="452" width="3" height="15" fill="rgb(207,107,14)"/><text x="770.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="767" y="468" width="3" height="15" fill="rgb(250,68,51)"/><text x="770.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="767" y="484" width="3" height="15" fill="rgb(242,201,22)"/><text x="770.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="767" y="500" width="3" height="15" fill="rgb(225,149,38)"/><text x="770.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="767" y="516" width="3" height="15" fill="rgb(244,118,13)"/><text x="770.00" y="526.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="767" y="532" width="3" height="15" fill="rgb(243,7,41)"/><text x="770.00" y="542.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.45%)</title><rect x="783" y="164" width="5" height="15" fill="rgb(226,132,27)"/><text x="786.00" y="174.50"></text></g><g><title>0x7fb8c1c72120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="786" y="180" width="2" height="15" fill="rgb(207,219,22)"/><text x="789.00" y="190.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="788" y="212" width="3" height="15" fill="rgb(224,81,16)"/><text x="791.00" y="222.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="788" y="228" width="3" height="15" fill="rgb(232,34,34)"/><text x="791.00" y="238.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.22%)</title><rect x="788" y="244" width="3" height="15" fill="rgb(222,48,0)"/><text x="791.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c) (2 samples, 0.45%)</title><rect x="788" y="164" width="6" height="15" fill="rgb(251,103,14)"/><text x="791.00" y="174.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.45%)</title><rect x="788" y="180" width="6" height="15" fill="rgb(222,130,7)"/><text x="791.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.45%)</title><rect x="788" y="196" width="6" height="15" fill="rgb(254,39,32)"/><text x="791.00" y="206.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.22%)</title><rect x="791" y="212" width="3" height="15" fill="rgb(218,93,5)"/><text x="794.00" y="222.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="791" y="228" width="3" height="15" fill="rgb(252,147,13)"/><text x="794.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="796" y="228" width="3" height="15" fill="rgb(208,90,43)"/><text x="799.00" y="238.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.22%)</title><rect x="796" y="244" width="3" height="15" fill="rgb(216,173,38)"/><text x="799.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.45%)</title><rect x="796" y="212" width="5" height="15" fill="rgb(222,43,14)"/><text x="799.00" y="222.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="799" y="228" width="2" height="15" fill="rgb(234,152,26)"/><text x="802.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="799" y="244" width="2" height="15" fill="rgb(219,149,26)"/><text x="802.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.89%)</title><rect x="804" y="244" width="11" height="15" fill="rgb(225,129,17)"/><text x="807.00" y="254.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 0.89%)</title><rect x="804" y="260" width="11" height="15" fill="rgb(234,128,27)"/><text x="807.00" y="270.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.67%)</title><rect x="807" y="276" width="8" height="15" fill="rgb(214,156,53)"/><text x="810.00" y="286.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.45%)</title><rect x="809" y="292" width="6" height="15" fill="rgb(250,152,32)"/><text x="812.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.22%)</title><rect x="817" y="260" width="3" height="15" fill="rgb(239,8,1)"/><text x="820.00" y="270.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="817" y="276" width="3" height="15" fill="rgb(230,17,18)"/><text x="820.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.22%)</title><rect x="820" y="260" width="3" height="15" fill="rgb(214,173,43)"/><text x="823.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.89%)</title><rect x="815" y="244" width="10" height="15" fill="rgb(239,139,26)"/><text x="818.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="823" y="260" width="2" height="15" fill="rgb(236,123,18)"/><text x="826.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.22%)</title><rect x="823" y="276" width="2" height="15" fill="rgb(229,166,29)"/><text x="826.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="823" y="292" width="2" height="15" fill="rgb(234,115,17)"/><text x="826.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.22%)</title><rect x="823" y="308" width="2" height="15" fill="rgb(213,7,19)"/><text x="826.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="825" y="244" width="3" height="15" fill="rgb(246,194,40)"/><text x="828.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="825" y="260" width="3" height="15" fill="rgb(213,45,6)"/><text x="828.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="828" y="260" width="2" height="15" fill="rgb(224,226,24)"/><text x="831.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="828" y="276" width="2" height="15" fill="rgb(252,181,39)"/><text x="831.00" y="286.50"></text></g><g><title>0x7fb8c1c53435 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="828" y="292" width="2" height="15" fill="rgb(223,39,38)"/><text x="831.00" y="302.50"></text></g><g><title>0x7fb8c1c71d50 (libc-2.29.so) (2 samples, 0.45%)</title><rect x="846" y="292" width="6" height="15" fill="rgb(223,24,16)"/><text x="849.00" y="302.50"></text></g><g><title>0x7fb8c1c71d62 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="852" y="292" width="2" height="15" fill="rgb(225,52,1)"/><text x="855.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (22 samples, 4.92%)</title><rect x="801" y="212" width="59" height="15" fill="rgb(250,166,51)"/><text x="804.00" y="222.50">execut..</text></g><g><title>iterator_loop (ufunc_object.c) (22 samples, 4.92%)</title><rect x="801" y="228" width="59" height="15" fill="rgb(221,109,8)"/><text x="804.00" y="238.50">iterat..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (12 samples, 2.68%)</title><rect x="828" y="244" width="32" height="15" fill="rgb(238,82,36)"/><text x="831.00" y="254.50">Np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (11 samples, 2.46%)</title><rect x="830" y="260" width="30" height="15" fill="rgb(242,202,29)"/><text x="833.00" y="270.50">np..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (10 samples, 2.24%)</title><rect x="833" y="276" width="27" height="15" fill="rgb(249,55,47)"/><text x="836.00" y="286.50">P..</text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (2 samples, 0.45%)</title><rect x="854" y="292" width="6" height="15" fill="rgb(212,120,10)"/><text x="857.00" y="302.50"></text></g><g><title>array_add (number.c) (26 samples, 5.82%)</title><rect x="794" y="164" width="68" height="15" fill="rgb(220,26,49)"/><text x="797.00" y="174.50">array_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (26 samples, 5.82%)</title><rect x="794" y="180" width="68" height="15" fill="rgb(247,227,27)"/><text x="797.00" y="190.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (26 samples, 5.82%)</title><rect x="794" y="196" width="68" height="15" fill="rgb(206,170,36)"/><text x="797.00" y="206.50">PyUFunc..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="860" y="212" width="2" height="15" fill="rgb(240,93,52)"/><text x="863.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.67%)</title><rect x="920" y="180" width="8" height="15" fill="rgb(238,201,20)"/><text x="923.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.45%)</title><rect x="928" y="180" width="5" height="15" fill="rgb(217,207,13)"/><text x="931.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.89%)</title><rect x="933" y="196" width="11" height="15" fill="rgb(254,76,23)"/><text x="936.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.22%)</title><rect x="944" y="196" width="3" height="15" fill="rgb(212,63,37)"/><text x="947.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.45%)</title><rect x="947" y="196" width="5" height="15" fill="rgb(237,175,53)"/><text x="950.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 1.79%)</title><rect x="933" y="180" width="22" height="15" fill="rgb(250,135,36)"/><text x="936.00" y="190.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="952" y="196" width="3" height="15" fill="rgb(247,217,43)"/><text x="955.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.22%)</title><rect x="955" y="180" width="2" height="15" fill="rgb(208,228,18)"/><text x="958.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.57%)</title><rect x="957" y="180" width="19" height="15" fill="rgb(225,176,37)"/><text x="960.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.22%)</title><rect x="973" y="196" width="3" height="15" fill="rgb(237,96,7)"/><text x="976.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 0.67%)</title><rect x="976" y="180" width="8" height="15" fill="rgb(251,23,46)"/><text x="979.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.67%)</title><rect x="984" y="196" width="8" height="15" fill="rgb(240,223,47)"/><text x="987.00" y="206.50"></text></g><g><title>0x7fb8c1c67730 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="989" y="212" width="3" height="15" fill="rgb(250,60,10)"/><text x="992.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (5 samples, 1.12%)</title><rect x="984" y="180" width="13" height="15" fill="rgb(247,63,2)"/><text x="987.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.45%)</title><rect x="992" y="196" width="5" height="15" fill="rgb(222,78,37)"/><text x="995.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (58 samples, 12.98%)</title><rect x="862" y="164" width="153" height="15" fill="rgb(237,23,23)"/><text x="865.00" y="174.50">check_array (sklear..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.57%)</title><rect x="997" y="180" width="18" height="15" fill="rgb(242,171,14)"/><text x="1000.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.34%)</title><rect x="999" y="196" width="16" height="15" fill="rgb(231,125,22)"/><text x="1002.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.22%)</title><rect x="1042" y="196" width="2" height="15" fill="rgb(227,189,29)"/><text x="1045.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 1.79%)</title><rect x="1026" y="180" width="21" height="15" fill="rgb(250,80,49)"/><text x="1029.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="1044" y="196" width="3" height="15" fill="rgb(253,219,14)"/><text x="1047.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 3.58%)</title><rect x="1015" y="164" width="43" height="15" fill="rgb(211,33,25)"/><text x="1018.00" y="174.50">chec..</text></g><g><title>isclass (inspect.py) (4 samples, 0.89%)</title><rect x="1047" y="180" width="11" height="15" fill="rgb(224,51,18)"/><text x="1050.00" y="190.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.45%)</title><rect x="1068" y="180" width="5" height="15" fill="rgb(223,182,22)"/><text x="1071.00" y="190.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.91%)</title><rect x="1073" y="180" width="35" height="15" fill="rgb(251,133,46)"/><text x="1076.00" y="190.50">dg..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.22%)</title><rect x="1108" y="180" width="2" height="15" fill="rgb(205,99,41)"/><text x="1111.00" y="190.50"></text></g><g><title>0x7fb8c1c51902 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1126" y="228" width="3" height="15" fill="rgb(243,35,2)"/><text x="1129.00" y="238.50"></text></g><g><title>DOUBLE_matmul_matrixmatrix (matmul.c.src) (1 samples, 0.22%)</title><rect x="1129" y="244" width="2" height="15" fill="rgb(233,170,3)"/><text x="1132.00" y="254.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1134" y="260" width="3" height="15" fill="rgb(213,48,54)"/><text x="1137.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1134" y="276" width="3" height="15" fill="rgb(244,188,17)"/><text x="1137.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (7 samples, 1.57%)</title><rect x="1129" y="228" width="18" height="15" fill="rgb(254,40,24)"/><text x="1132.00" y="238.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.34%)</title><rect x="1131" y="244" width="16" height="15" fill="rgb(223,49,1)"/><text x="1134.00" y="254.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.89%)</title><rect x="1137" y="260" width="10" height="15" fill="rgb(239,146,10)"/><text x="1140.00" y="270.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.67%)</title><rect x="1139" y="276" width="8" height="15" fill="rgb(216,110,20)"/><text x="1142.00" y="286.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.22%)</title><rect x="1150" y="276" width="3" height="15" fill="rgb(225,38,7)"/><text x="1153.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1150" y="292" width="3" height="15" fill="rgb(213,101,45)"/><text x="1153.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (3 samples, 0.67%)</title><rect x="1153" y="292" width="7" height="15" fill="rgb(246,82,48)"/><text x="1156.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="1160" y="292" width="3" height="15" fill="rgb(216,123,20)"/><text x="1163.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(221,5,36)"/><text x="1166.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 1.57%)</title><rect x="1150" y="260" width="18" height="15" fill="rgb(224,108,35)"/><text x="1153.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 1.34%)</title><rect x="1153" y="276" width="15" height="15" fill="rgb(240,116,14)"/><text x="1156.00" y="286.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(251,24,37)"/><text x="1169.00" y="302.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(220,44,23)"/><text x="1169.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (9 samples, 2.01%)</title><rect x="1150" y="244" width="24" height="15" fill="rgb(247,13,5)"/><text x="1153.00" y="254.50">n..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.45%)</title><rect x="1168" y="260" width="6" height="15" fill="rgb(237,185,9)"/><text x="1171.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="1171" y="276" width="3" height="15" fill="rgb(229,176,5)"/><text x="1174.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="1171" y="292" width="3" height="15" fill="rgb(235,78,52)"/><text x="1174.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="1171" y="308" width="3" height="15" fill="rgb(229,168,31)"/><text x="1174.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (12 samples, 2.68%)</title><rect x="1147" y="228" width="32" height="15" fill="rgb(221,61,15)"/><text x="1150.00" y="238.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.45%)</title><rect x="1174" y="244" width="5" height="15" fill="rgb(223,143,53)"/><text x="1177.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (1 samples, 0.22%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(251,55,28)"/><text x="1182.00" y="238.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.22%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(246,108,5)"/><text x="1182.00" y="254.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1182" y="228" width="2" height="15" fill="rgb(229,24,4)"/><text x="1185.00" y="238.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (157 samples, 35.12%)</title><rect x="772" y="132" width="415" height="15" fill="rgb(209,171,54)"/><text x="775.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>decision_function (sklearn/linear_model/_base.py) (156 samples, 34.90%)</title><rect x="775" y="148" width="412" height="15" fill="rgb(243,43,22)"/><text x="778.00" y="158.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (49 samples, 10.96%)</title><rect x="1058" y="164" width="129" height="15" fill="rgb(208,118,42)"/><text x="1061.00" y="174.50">safe_sparse_dot ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (29 samples, 6.49%)</title><rect x="1110" y="180" width="77" height="15" fill="rgb(225,41,8)"/><text x="1113.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (28 samples, 6.26%)</title><rect x="1113" y="196" width="74" height="15" fill="rgb(250,46,49)"/><text x="1116.00" y="206.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (27 samples, 6.04%)</title><rect x="1116" y="212" width="71" height="15" fill="rgb(224,229,13)"/><text x="1119.00" y="222.50">PyUFunc_..</text></g><g><title>_initialize_variable_parts (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1184" y="228" width="3" height="15" fill="rgb(227,203,22)"/><text x="1187.00" y="238.50"></text></g><g><title>0x7fb8c1c7212f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1184" y="244" width="3" height="15" fill="rgb(210,39,42)"/><text x="1187.00" y="254.50"></text></g><g><title>all (447 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,71,11)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (447 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(215,48,47)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (159 samples, 35.57%)</title><rect x="770" y="68" width="420" height="15" fill="rgb(213,34,3)"/><text x="773.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_dec_b_cl_..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (159 samples, 35.57%)</title><rect x="770" y="84" width="420" height="15" fill="rgb(211,169,21)"/><text x="773.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_dec_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_solverliblinear_1000_4_12_float_raw_score.py) (159 samples, 35.57%)</title><rect x="770" y="100" width="420" height="15" fill="rgb(234,96,2)"/><text x="773.00" y="110.50">profile (bench_LogisticRegression_liblinear_dec_b_cl_dec_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 35.35%)</title><rect x="772" y="116" width="418" height="15" fill="rgb(229,132,16)"/><text x="775.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(228,110,48)"/><text x="1190.00" y="142.50"></text></g></g></svg>