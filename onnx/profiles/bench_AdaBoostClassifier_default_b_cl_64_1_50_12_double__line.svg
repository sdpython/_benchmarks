<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.37%)</title><rect x="10" y="100" width="4" height="15" fill="rgb(235,71,10)"/><text x="13.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.37%)</title><rect x="10" y="116" width="4" height="15" fill="rgb(222,172,32)"/><text x="13.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.37%)</title><rect x="10" y="132" width="4" height="15" fill="rgb(247,207,11)"/><text x="13.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:244) (1 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(242,189,45)"/><text x="13.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(223,77,27)"/><text x="13.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1604) (1 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(242,211,36)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.37%)</title><rect x="14" y="212" width="4" height="15" fill="rgb(208,60,14)"/><text x="17.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.37%)</title><rect x="14" y="228" width="4" height="15" fill="rgb(210,1,41)"/><text x="17.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.37%)</title><rect x="14" y="244" width="4" height="15" fill="rgb(217,209,28)"/><text x="17.00" y="254.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:507) (2 samples, 0.73%)</title><rect x="14" y="164" width="8" height="15" fill="rgb(244,3,17)"/><text x="17.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.73%)</title><rect x="14" y="180" width="8" height="15" fill="rgb(218,195,13)"/><text x="17.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py:150) (2 samples, 0.73%)</title><rect x="14" y="196" width="8" height="15" fill="rgb(252,112,34)"/><text x="17.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.37%)</title><rect x="18" y="212" width="4" height="15" fill="rgb(215,161,44)"/><text x="21.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:63) (1 samples, 0.37%)</title><rect x="18" y="228" width="4" height="15" fill="rgb(223,225,49)"/><text x="21.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.37%)</title><rect x="18" y="244" width="4" height="15" fill="rgb(212,229,42)"/><text x="21.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.37%)</title><rect x="18" y="260" width="4" height="15" fill="rgb(254,150,4)"/><text x="21.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1703) (1 samples, 0.37%)</title><rect x="18" y="276" width="4" height="15" fill="rgb(254,27,1)"/><text x="21.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.37%)</title><rect x="18" y="292" width="4" height="15" fill="rgb(241,223,11)"/><text x="21.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.37%)</title><rect x="18" y="308" width="4" height="15" fill="rgb(213,76,26)"/><text x="21.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.37%)</title><rect x="18" y="324" width="4" height="15" fill="rgb(208,77,16)"/><text x="21.00" y="334.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.37%)</title><rect x="18" y="340" width="4" height="15" fill="rgb(217,21,0)"/><text x="21.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:31) (4 samples, 1.47%)</title><rect x="10" y="52" width="17" height="15" fill="rgb(219,76,43)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:11) (4 samples, 1.47%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(222,4,35)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:39) (4 samples, 1.47%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(211,131,24)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 1.10%)</title><rect x="14" y="100" width="13" height="15" fill="rgb(249,23,21)"/><text x="17.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:438) (3 samples, 1.10%)</title><rect x="14" y="116" width="13" height="15" fill="rgb(247,159,10)"/><text x="17.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 1.10%)</title><rect x="14" y="132" width="13" height="15" fill="rgb(218,223,17)"/><text x="17.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:497) (3 samples, 1.10%)</title><rect x="14" y="148" width="13" height="15" fill="rgb(212,174,50)"/><text x="17.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py:509) (1 samples, 0.37%)</title><rect x="22" y="164" width="5" height="15" fill="rgb(228,48,30)"/><text x="25.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.37%)</title><rect x="22" y="180" width="5" height="15" fill="rgb(214,198,4)"/><text x="25.00" y="190.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.37%)</title><rect x="22" y="196" width="5" height="15" fill="rgb(233,194,51)"/><text x="25.00" y="206.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.37%)</title><rect x="22" y="212" width="5" height="15" fill="rgb(211,28,33)"/><text x="25.00" y="222.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.37%)</title><rect x="22" y="228" width="5" height="15" fill="rgb(229,36,20)"/><text x="25.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.37%)</title><rect x="22" y="244" width="5" height="15" fill="rgb(219,111,17)"/><text x="25.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.37%)</title><rect x="22" y="260" width="5" height="15" fill="rgb(248,150,37)"/><text x="25.00" y="270.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.37%)</title><rect x="22" y="276" width="5" height="15" fill="rgb(240,93,44)"/><text x="25.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="22" y="292" width="5" height="15" fill="rgb(212,82,3)"/><text x="25.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.37%)</title><rect x="22" y="308" width="5" height="15" fill="rgb(209,85,29)"/><text x="25.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.37%)</title><rect x="22" y="324" width="5" height="15" fill="rgb(236,171,36)"/><text x="25.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="22" y="340" width="5" height="15" fill="rgb(231,107,18)"/><text x="25.00" y="350.50"></text></g><g><title>0x7f98555902a3 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="22" y="356" width="5" height="15" fill="rgb(222,181,34)"/><text x="25.00" y="366.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:28) (1 samples, 0.37%)</title><rect x="27" y="84" width="4" height="15" fill="rgb(238,217,42)"/><text x="30.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="27" y="100" width="4" height="15" fill="rgb(218,157,46)"/><text x="30.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.37%)</title><rect x="27" y="116" width="4" height="15" fill="rgb(238,157,28)"/><text x="30.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (1 samples, 0.37%)</title><rect x="27" y="132" width="4" height="15" fill="rgb(217,109,48)"/><text x="30.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.37%)</title><rect x="27" y="148" width="4" height="15" fill="rgb(216,20,39)"/><text x="30.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.37%)</title><rect x="27" y="164" width="4" height="15" fill="rgb(223,8,43)"/><text x="30.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.37%)</title><rect x="27" y="180" width="4" height="15" fill="rgb(218,103,36)"/><text x="30.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.37%)</title><rect x="27" y="196" width="4" height="15" fill="rgb(230,187,45)"/><text x="30.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:85) (1 samples, 0.37%)</title><rect x="27" y="212" width="4" height="15" fill="rgb(215,210,10)"/><text x="30.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py:416) (1 samples, 0.37%)</title><rect x="27" y="228" width="4" height="15" fill="rgb(252,205,30)"/><text x="30.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py:36) (1 samples, 0.37%)</title><rect x="27" y="244" width="4" height="15" fill="rgb(243,141,31)"/><text x="30.00" y="254.50"></text></g><g><title>_create_name_or_use_existing_one (onnxconverter_common/onnx_ops.py:16) (1 samples, 0.37%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(237,138,39)"/><text x="30.00" y="270.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py:328) (1 samples, 0.37%)</title><rect x="27" y="276" width="4" height="15" fill="rgb(249,200,50)"/><text x="30.00" y="286.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py:508) (1 samples, 0.37%)</title><rect x="27" y="292" width="4" height="15" fill="rgb(240,85,20)"/><text x="30.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.37%)</title><rect x="31" y="180" width="4" height="15" fill="rgb(245,112,42)"/><text x="34.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (2 samples, 0.73%)</title><rect x="31" y="148" width="9" height="15" fill="rgb(206,87,30)"/><text x="34.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (2 samples, 0.73%)</title><rect x="31" y="164" width="9" height="15" fill="rgb(253,112,45)"/><text x="34.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.37%)</title><rect x="35" y="180" width="5" height="15" fill="rgb(216,64,46)"/><text x="38.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.37%)</title><rect x="35" y="196" width="5" height="15" fill="rgb(231,179,33)"/><text x="38.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.37%)</title><rect x="35" y="212" width="5" height="15" fill="rgb(237,213,8)"/><text x="38.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.37%)</title><rect x="35" y="228" width="5" height="15" fill="rgb(230,49,21)"/><text x="38.00" y="238.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (3 samples, 1.10%)</title><rect x="40" y="212" width="13" height="15" fill="rgb(212,219,8)"/><text x="43.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 1.10%)</title><rect x="40" y="228" width="13" height="15" fill="rgb(220,95,21)"/><text x="43.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.37%)</title><rect x="48" y="244" width="5" height="15" fill="rgb(231,123,54)"/><text x="51.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="48" y="260" width="5" height="15" fill="rgb(252,59,18)"/><text x="51.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.37%)</title><rect x="57" y="244" width="4" height="15" fill="rgb(218,1,37)"/><text x="60.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.73%)</title><rect x="61" y="276" width="9" height="15" fill="rgb(217,162,21)"/><text x="64.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 1.10%)</title><rect x="61" y="244" width="13" height="15" fill="rgb(251,133,31)"/><text x="64.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.10%)</title><rect x="61" y="260" width="13" height="15" fill="rgb(236,187,2)"/><text x="64.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.37%)</title><rect x="70" y="276" width="4" height="15" fill="rgb(206,130,22)"/><text x="73.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.37%)</title><rect x="74" y="244" width="5" height="15" fill="rgb(224,109,38)"/><text x="77.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.37%)</title><rect x="79" y="276" width="4" height="15" fill="rgb(228,8,12)"/><text x="82.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="79" y="292" width="4" height="15" fill="rgb(241,128,7)"/><text x="82.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.73%)</title><rect x="79" y="244" width="8" height="15" fill="rgb(254,197,31)"/><text x="82.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.73%)</title><rect x="79" y="260" width="8" height="15" fill="rgb(213,148,50)"/><text x="82.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.37%)</title><rect x="83" y="276" width="4" height="15" fill="rgb(206,164,15)"/><text x="86.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.37%)</title><rect x="83" y="292" width="4" height="15" fill="rgb(238,77,39)"/><text x="86.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.37%)</title><rect x="83" y="308" width="4" height="15" fill="rgb(226,129,26)"/><text x="86.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.37%)</title><rect x="83" y="324" width="4" height="15" fill="rgb(245,90,14)"/><text x="86.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="83" y="340" width="4" height="15" fill="rgb(231,115,29)"/><text x="86.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.37%)</title><rect x="83" y="356" width="4" height="15" fill="rgb(235,101,43)"/><text x="86.00" y="366.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.37%)</title><rect x="87" y="244" width="5" height="15" fill="rgb(220,86,19)"/><text x="90.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.37%)</title><rect x="92" y="244" width="4" height="15" fill="rgb(212,77,42)"/><text x="95.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.37%)</title><rect x="92" y="260" width="4" height="15" fill="rgb(244,199,29)"/><text x="95.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.37%)</title><rect x="96" y="244" width="4" height="15" fill="rgb(225,3,50)"/><text x="99.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.37%)</title><rect x="96" y="260" width="4" height="15" fill="rgb(224,83,10)"/><text x="99.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.37%)</title><rect x="96" y="276" width="4" height="15" fill="rgb(226,33,49)"/><text x="99.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.73%)</title><rect x="100" y="260" width="9" height="15" fill="rgb(209,52,4)"/><text x="103.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (16 samples, 5.86%)</title><rect x="53" y="228" width="69" height="15" fill="rgb(212,218,43)"/><text x="56.00" y="238.50">_valida..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 1.83%)</title><rect x="100" y="244" width="22" height="15" fill="rgb(224,218,0)"/><text x="103.00" y="254.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.10%)</title><rect x="109" y="260" width="13" height="15" fill="rgb(214,76,42)"/><text x="112.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.73%)</title><rect x="113" y="276" width="9" height="15" fill="rgb(217,229,34)"/><text x="116.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.37%)</title><rect x="118" y="292" width="4" height="15" fill="rgb(224,177,41)"/><text x="121.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (17 samples, 6.23%)</title><rect x="53" y="212" width="73" height="15" fill="rgb(208,211,3)"/><text x="56.00" y="222.50">predict_..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.37%)</title><rect x="122" y="228" width="4" height="15" fill="rgb(244,143,24)"/><text x="125.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:748) (1 samples, 0.37%)</title><rect x="126" y="340" width="5" height="15" fill="rgb(231,160,15)"/><text x="129.00" y="350.50"></text></g><g><title>0x7f982efd1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="244" width="9" height="15" fill="rgb(239,38,42)"/><text x="129.00" y="254.50"></text></g><g><title>0x7f982efe1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="260" width="9" height="15" fill="rgb(227,41,53)"/><text x="129.00" y="270.50"></text></g><g><title>0x7f982efe02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="276" width="9" height="15" fill="rgb(220,216,54)"/><text x="129.00" y="286.50"></text></g><g><title>0x7f982efc4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="292" width="9" height="15" fill="rgb(242,174,19)"/><text x="129.00" y="302.50"></text></g><g><title>0x7f982efc4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="308" width="9" height="15" fill="rgb(253,212,2)"/><text x="129.00" y="318.50"></text></g><g><title>0x7f982efba2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="126" y="324" width="9" height="15" fill="rgb(240,69,1)"/><text x="129.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.37%)</title><rect x="131" y="340" width="4" height="15" fill="rgb(243,72,3)"/><text x="134.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.37%)</title><rect x="131" y="356" width="4" height="15" fill="rgb(233,125,39)"/><text x="134.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (4 samples, 1.47%)</title><rect x="126" y="212" width="17" height="15" fill="rgb(241,146,40)"/><text x="129.00" y="222.50"></text></g><g><title>0x7f982efd2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.47%)</title><rect x="126" y="228" width="17" height="15" fill="rgb(237,37,6)"/><text x="129.00" y="238.50"></text></g><g><title>0x7f982efd205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="135" y="244" width="8" height="15" fill="rgb(251,183,48)"/><text x="138.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.37%)</title><rect x="139" y="260" width="4" height="15" fill="rgb(228,153,4)"/><text x="142.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.37%)</title><rect x="139" y="276" width="4" height="15" fill="rgb(226,172,53)"/><text x="142.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.37%)</title><rect x="143" y="212" width="5" height="15" fill="rgb(210,19,4)"/><text x="146.00" y="222.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.37%)</title><rect x="148" y="324" width="4" height="15" fill="rgb(250,186,36)"/><text x="151.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.37%)</title><rect x="148" y="340" width="4" height="15" fill="rgb(219,173,19)"/><text x="151.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="148" y="356" width="4" height="15" fill="rgb(208,50,47)"/><text x="151.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.37%)</title><rect x="148" y="372" width="4" height="15" fill="rgb(240,57,47)"/><text x="151.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.37%)</title><rect x="148" y="388" width="4" height="15" fill="rgb(238,188,6)"/><text x="151.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (2 samples, 0.73%)</title><rect x="148" y="212" width="8" height="15" fill="rgb(227,19,19)"/><text x="151.00" y="222.50"></text></g><g><title>array_sum (methods.c:2215) (2 samples, 0.73%)</title><rect x="148" y="228" width="8" height="15" fill="rgb(242,129,40)"/><text x="151.00" y="238.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (2 samples, 0.73%)</title><rect x="148" y="244" width="8" height="15" fill="rgb(246,154,6)"/><text x="151.00" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (2 samples, 0.73%)</title><rect x="148" y="260" width="8" height="15" fill="rgb(213,130,30)"/><text x="151.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.73%)</title><rect x="148" y="276" width="8" height="15" fill="rgb(251,174,11)"/><text x="151.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.73%)</title><rect x="148" y="292" width="8" height="15" fill="rgb(205,186,48)"/><text x="151.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.73%)</title><rect x="148" y="308" width="8" height="15" fill="rgb(242,18,3)"/><text x="151.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="152" y="324" width="4" height="15" fill="rgb(253,57,18)"/><text x="155.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.37%)</title><rect x="152" y="340" width="4" height="15" fill="rgb(252,118,37)"/><text x="155.00" y="350.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1698) (1 samples, 0.37%)</title><rect x="152" y="356" width="4" height="15" fill="rgb(216,136,20)"/><text x="155.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="156" y="260" width="5" height="15" fill="rgb(252,54,38)"/><text x="159.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="156" y="276" width="5" height="15" fill="rgb(234,101,13)"/><text x="159.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.37%)</title><rect x="156" y="292" width="5" height="15" fill="rgb(235,32,50)"/><text x="159.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (2 samples, 0.73%)</title><rect x="156" y="212" width="9" height="15" fill="rgb(254,139,33)"/><text x="159.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.73%)</title><rect x="156" y="228" width="9" height="15" fill="rgb(218,52,26)"/><text x="159.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="156" y="244" width="9" height="15" fill="rgb(214,171,51)"/><text x="159.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.37%)</title><rect x="161" y="260" width="4" height="15" fill="rgb(234,105,15)"/><text x="164.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1948) (1 samples, 0.37%)</title><rect x="161" y="276" width="4" height="15" fill="rgb(232,25,29)"/><text x="164.00" y="286.50"></text></g><g><title>array_inplace_true_divide (number.c:839) (1 samples, 0.37%)</title><rect x="169" y="228" width="5" height="15" fill="rgb(244,193,31)"/><text x="172.00" y="238.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (32 samples, 11.72%)</title><rect x="40" y="196" width="138" height="15" fill="rgb(218,225,1)"/><text x="43.00" y="206.50">_samme_proba (skl..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (3 samples, 1.10%)</title><rect x="165" y="212" width="13" height="15" fill="rgb(254,111,43)"/><text x="168.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="174" y="228" width="4" height="15" fill="rgb(251,190,50)"/><text x="177.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="174" y="244" width="4" height="15" fill="rgb(244,212,35)"/><text x="177.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.37%)</title><rect x="182" y="228" width="5" height="15" fill="rgb(248,229,47)"/><text x="185.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.37%)</title><rect x="182" y="244" width="5" height="15" fill="rgb(225,20,31)"/><text x="185.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.37%)</title><rect x="182" y="260" width="5" height="15" fill="rgb(244,146,50)"/><text x="185.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.37%)</title><rect x="182" y="276" width="5" height="15" fill="rgb(229,29,20)"/><text x="185.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.37%)</title><rect x="182" y="292" width="5" height="15" fill="rgb(254,149,10)"/><text x="185.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.37%)</title><rect x="187" y="260" width="4" height="15" fill="rgb(237,124,31)"/><text x="190.00" y="270.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.37%)</title><rect x="195" y="324" width="5" height="15" fill="rgb(248,100,0)"/><text x="198.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.37%)</title><rect x="195" y="340" width="5" height="15" fill="rgb(212,113,13)"/><text x="198.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (1 samples, 0.37%)</title><rect x="200" y="324" width="4" height="15" fill="rgb(215,41,24)"/><text x="203.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (1 samples, 0.37%)</title><rect x="200" y="340" width="4" height="15" fill="rgb(207,151,11)"/><text x="203.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.73%)</title><rect x="208" y="340" width="9" height="15" fill="rgb(217,130,47)"/><text x="211.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.73%)</title><rect x="208" y="356" width="9" height="15" fill="rgb(210,178,16)"/><text x="211.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.73%)</title><rect x="208" y="372" width="9" height="15" fill="rgb(230,121,15)"/><text x="211.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.73%)</title><rect x="208" y="388" width="9" height="15" fill="rgb(207,34,45)"/><text x="211.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.73%)</title><rect x="208" y="404" width="9" height="15" fill="rgb(244,99,53)"/><text x="211.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.73%)</title><rect x="208" y="420" width="9" height="15" fill="rgb(207,179,20)"/><text x="211.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="217" y="356" width="4" height="15" fill="rgb(205,20,39)"/><text x="220.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="217" y="372" width="4" height="15" fill="rgb(216,187,21)"/><text x="220.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.37%)</title><rect x="217" y="388" width="4" height="15" fill="rgb(243,78,5)"/><text x="220.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.37%)</title><rect x="217" y="404" width="4" height="15" fill="rgb(208,191,25)"/><text x="220.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="217" y="420" width="4" height="15" fill="rgb(216,14,43)"/><text x="220.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.37%)</title><rect x="217" y="436" width="4" height="15" fill="rgb(247,45,47)"/><text x="220.00" y="446.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.37%)</title><rect x="217" y="452" width="4" height="15" fill="rgb(205,157,38)"/><text x="220.00" y="462.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.37%)</title><rect x="217" y="468" width="4" height="15" fill="rgb(241,66,0)"/><text x="220.00" y="478.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (7 samples, 2.56%)</title><rect x="195" y="308" width="31" height="15" fill="rgb(249,130,43)"/><text x="198.00" y="318.50">_c..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.83%)</title><rect x="204" y="324" width="22" height="15" fill="rgb(226,145,36)"/><text x="207.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="217" y="340" width="9" height="15" fill="rgb(246,99,19)"/><text x="220.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="221" y="356" width="5" height="15" fill="rgb(253,206,0)"/><text x="224.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.37%)</title><rect x="221" y="372" width="5" height="15" fill="rgb(237,14,33)"/><text x="224.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1649) (1 samples, 0.37%)</title><rect x="221" y="388" width="5" height="15" fill="rgb(242,26,8)"/><text x="224.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.37%)</title><rect x="226" y="324" width="4" height="15" fill="rgb(235,140,13)"/><text x="229.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (2 samples, 0.73%)</title><rect x="226" y="308" width="8" height="15" fill="rgb(229,42,3)"/><text x="229.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (1 samples, 0.37%)</title><rect x="230" y="324" width="4" height="15" fill="rgb(250,89,16)"/><text x="233.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="230" y="340" width="4" height="15" fill="rgb(254,224,52)"/><text x="233.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="230" y="356" width="4" height="15" fill="rgb(214,180,43)"/><text x="233.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="230" y="372" width="4" height="15" fill="rgb(222,187,50)"/><text x="233.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.37%)</title><rect x="230" y="388" width="4" height="15" fill="rgb(224,70,54)"/><text x="233.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.37%)</title><rect x="230" y="404" width="4" height="15" fill="rgb(212,147,19)"/><text x="233.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="234" y="356" width="5" height="15" fill="rgb(242,125,16)"/><text x="237.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="234" y="372" width="5" height="15" fill="rgb(252,103,23)"/><text x="237.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.37%)</title><rect x="234" y="388" width="5" height="15" fill="rgb(234,28,25)"/><text x="237.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.37%)</title><rect x="234" y="404" width="5" height="15" fill="rgb(244,169,0)"/><text x="237.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="234" y="420" width="5" height="15" fill="rgb(227,131,15)"/><text x="237.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.37%)</title><rect x="234" y="436" width="5" height="15" fill="rgb(213,185,46)"/><text x="237.00" y="446.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.37%)</title><rect x="234" y="452" width="5" height="15" fill="rgb(252,227,17)"/><text x="237.00" y="462.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (15 samples, 5.49%)</title><rect x="178" y="196" width="65" height="15" fill="rgb(219,63,53)"/><text x="181.00" y="206.50">_samme_..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (15 samples, 5.49%)</title><rect x="178" y="212" width="65" height="15" fill="rgb(226,163,15)"/><text x="181.00" y="222.50">clip (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (13 samples, 4.76%)</title><rect x="187" y="228" width="56" height="15" fill="rgb(243,28,43)"/><text x="190.00" y="238.50">array..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (13 samples, 4.76%)</title><rect x="187" y="244" width="56" height="15" fill="rgb(254,17,21)"/><text x="190.00" y="254.50">clip ..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (12 samples, 4.40%)</title><rect x="191" y="260" width="52" height="15" fill="rgb(210,154,4)"/><text x="194.00" y="270.50">_wrap..</text></g><g><title>array_clip (methods.c:2381) (11 samples, 4.03%)</title><rect x="195" y="276" width="48" height="15" fill="rgb(250,18,1)"/><text x="198.00" y="286.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 4.03%)</title><rect x="195" y="292" width="48" height="15" fill="rgb(254,163,13)"/><text x="198.00" y="302.50">forw..</text></g><g><title>_clip (numpy/core/_methods.py:129) (2 samples, 0.73%)</title><rect x="234" y="308" width="9" height="15" fill="rgb(233,176,40)"/><text x="237.00" y="318.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (2 samples, 0.73%)</title><rect x="234" y="324" width="9" height="15" fill="rgb(246,114,37)"/><text x="237.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="234" y="340" width="9" height="15" fill="rgb(253,192,50)"/><text x="237.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="239" y="356" width="4" height="15" fill="rgb(245,76,23)"/><text x="242.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.37%)</title><rect x="239" y="372" width="4" height="15" fill="rgb(242,170,34)"/><text x="242.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.37%)</title><rect x="239" y="388" width="4" height="15" fill="rgb(249,228,43)"/><text x="242.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.37%)</title><rect x="239" y="404" width="4" height="15" fill="rgb(234,97,24)"/><text x="242.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.37%)</title><rect x="239" y="420" width="4" height="15" fill="rgb(211,149,36)"/><text x="242.00" y="430.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (1 samples, 0.37%)</title><rect x="243" y="196" width="4" height="15" fill="rgb(246,219,3)"/><text x="246.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="243" y="212" width="4" height="15" fill="rgb(213,86,11)"/><text x="246.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.37%)</title><rect x="243" y="228" width="4" height="15" fill="rgb(212,202,54)"/><text x="246.00" y="238.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:312) (1 samples, 0.37%)</title><rect x="243" y="244" width="4" height="15" fill="rgb(224,221,21)"/><text x="246.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="252" y="228" width="4" height="15" fill="rgb(244,43,25)"/><text x="255.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.37%)</title><rect x="252" y="244" width="4" height="15" fill="rgb(241,63,5)"/><text x="255.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.37%)</title><rect x="252" y="260" width="4" height="15" fill="rgb(250,41,35)"/><text x="255.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.37%)</title><rect x="252" y="276" width="4" height="15" fill="rgb(228,224,0)"/><text x="255.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.37%)</title><rect x="252" y="292" width="4" height="15" fill="rgb(225,33,21)"/><text x="255.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.73%)</title><rect x="252" y="212" width="8" height="15" fill="rgb(224,89,10)"/><text x="255.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.37%)</title><rect x="256" y="228" width="4" height="15" fill="rgb(237,224,19)"/><text x="259.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="256" y="244" width="4" height="15" fill="rgb(234,136,25)"/><text x="259.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="256" y="260" width="4" height="15" fill="rgb(218,179,10)"/><text x="259.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="256" y="276" width="4" height="15" fill="rgb(209,28,46)"/><text x="259.00" y="286.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4601) (1 samples, 0.37%)</title><rect x="260" y="276" width="5" height="15" fill="rgb(220,24,19)"/><text x="263.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.37%)</title><rect x="265" y="292" width="4" height="15" fill="rgb(206,202,34)"/><text x="268.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.37%)</title><rect x="265" y="308" width="4" height="15" fill="rgb(221,154,43)"/><text x="268.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.37%)</title><rect x="265" y="324" width="4" height="15" fill="rgb(221,3,20)"/><text x="268.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2098) (1 samples, 0.37%)</title><rect x="265" y="340" width="4" height="15" fill="rgb(246,49,27)"/><text x="268.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.37%)</title><rect x="265" y="356" width="4" height="15" fill="rgb(250,212,9)"/><text x="268.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.37%)</title><rect x="269" y="308" width="4" height="15" fill="rgb(205,173,26)"/><text x="272.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.37%)</title><rect x="269" y="324" width="4" height="15" fill="rgb(206,65,40)"/><text x="272.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.37%)</title><rect x="269" y="340" width="4" height="15" fill="rgb(223,161,51)"/><text x="272.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="269" y="356" width="4" height="15" fill="rgb(249,4,54)"/><text x="272.00" y="366.50"></text></g><g><title>0x7f9855546a19 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="269" y="372" width="4" height="15" fill="rgb(252,33,40)"/><text x="272.00" y="382.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c:735) (1 samples, 0.37%)</title><rect x="269" y="388" width="4" height="15" fill="rgb(207,148,19)"/><text x="272.00" y="398.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (7 samples, 2.56%)</title><rect x="247" y="196" width="30" height="15" fill="rgb(230,62,47)"/><text x="250.00" y="206.50">_s..</text></g><g><title>array_sum (methods.c:2215) (4 samples, 1.47%)</title><rect x="260" y="212" width="17" height="15" fill="rgb(245,229,10)"/><text x="263.00" y="222.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (4 samples, 1.47%)</title><rect x="260" y="228" width="17" height="15" fill="rgb(228,75,1)"/><text x="263.00" y="238.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (4 samples, 1.47%)</title><rect x="260" y="244" width="17" height="15" fill="rgb(242,8,25)"/><text x="263.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.47%)</title><rect x="260" y="260" width="17" height="15" fill="rgb(248,139,39)"/><text x="263.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.10%)</title><rect x="265" y="276" width="12" height="15" fill="rgb(223,141,2)"/><text x="268.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.73%)</title><rect x="269" y="292" width="8" height="15" fill="rgb(246,85,24)"/><text x="272.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="273" y="308" width="4" height="15" fill="rgb(218,206,9)"/><text x="276.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="273" y="324" width="4" height="15" fill="rgb(230,47,10)"/><text x="276.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (56 samples, 20.51%)</title><rect x="40" y="180" width="242" height="15" fill="rgb(218,119,18)"/><text x="43.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_wei..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.37%)</title><rect x="277" y="196" width="5" height="15" fill="rgb(254,95,39)"/><text x="280.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="277" y="212" width="5" height="15" fill="rgb(206,155,37)"/><text x="280.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="277" y="228" width="5" height="15" fill="rgb(250,225,41)"/><text x="280.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="277" y="244" width="5" height="15" fill="rgb(212,96,38)"/><text x="280.00" y="254.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:18) (59 samples, 21.61%)</title><rect x="31" y="100" width="255" height="15" fill="rgb(217,98,38)"/><text x="34.00" y="110.50">profile (bench_AdaBoostClassifier_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (59 samples, 21.61%)</title><rect x="31" y="116" width="255" height="15" fill="rgb(246,148,30)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (59 samples, 21.61%)</title><rect x="31" y="132" width="255" height="15" fill="rgb(248,3,25)"/><text x="34.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (57 samples, 20.88%)</title><rect x="40" y="148" width="246" height="15" fill="rgb(229,55,54)"/><text x="43.00" y="158.50">predict_proba (sklearn/ensemble/..</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (57 samples, 20.88%)</title><rect x="40" y="164" width="246" height="15" fill="rgb(237,114,14)"/><text x="43.00" y="174.50">decision_function (sklearn/ensem..</text></g><g><title>array_add (number.c:330) (1 samples, 0.37%)</title><rect x="282" y="180" width="4" height="15" fill="rgb(205,40,48)"/><text x="285.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="282" y="196" width="4" height="15" fill="rgb(213,158,30)"/><text x="285.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="282" y="212" width="4" height="15" fill="rgb(226,12,24)"/><text x="285.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1676) (1 samples, 0.37%)</title><rect x="282" y="228" width="4" height="15" fill="rgb(207,100,21)"/><text x="285.00" y="238.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:801) (1 samples, 0.37%)</title><rect x="286" y="148" width="4" height="15" fill="rgb(237,203,28)"/><text x="289.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (1 samples, 0.37%)</title><rect x="286" y="164" width="4" height="15" fill="rgb(211,11,52)"/><text x="289.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.37%)</title><rect x="286" y="180" width="4" height="15" fill="rgb(228,23,3)"/><text x="289.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.37%)</title><rect x="286" y="196" width="4" height="15" fill="rgb(229,211,15)"/><text x="289.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.10%)</title><rect x="299" y="212" width="13" height="15" fill="rgb(250,221,12)"/><text x="302.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.10%)</title><rect x="299" y="228" width="13" height="15" fill="rgb(222,122,41)"/><text x="302.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (3 samples, 1.10%)</title><rect x="299" y="244" width="13" height="15" fill="rgb(208,181,53)"/><text x="302.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="312" y="228" width="4" height="15" fill="rgb(226,89,14)"/><text x="315.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="312" y="244" width="4" height="15" fill="rgb(208,67,51)"/><text x="315.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="312" y="260" width="4" height="15" fill="rgb(212,136,33)"/><text x="315.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (2 samples, 0.73%)</title><rect x="312" y="212" width="9" height="15" fill="rgb(253,135,32)"/><text x="315.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:540) (1 samples, 0.37%)</title><rect x="316" y="228" width="5" height="15" fill="rgb(237,100,2)"/><text x="319.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (2 samples, 0.73%)</title><rect x="329" y="228" width="9" height="15" fill="rgb(246,205,2)"/><text x="332.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.83%)</title><rect x="360" y="260" width="21" height="15" fill="rgb(213,214,26)"/><text x="363.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 4.03%)</title><rect x="342" y="244" width="48" height="15" fill="rgb(251,160,10)"/><text x="345.00" y="254.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.73%)</title><rect x="381" y="260" width="9" height="15" fill="rgb(241,222,1)"/><text x="384.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (17 samples, 6.23%)</title><rect x="321" y="212" width="73" height="15" fill="rgb(247,107,40)"/><text x="324.00" y="222.50">predict_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 4.76%)</title><rect x="338" y="228" width="56" height="15" fill="rgb(234,179,37)"/><text x="341.00" y="238.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.37%)</title><rect x="390" y="244" width="4" height="15" fill="rgb(251,218,8)"/><text x="393.00" y="254.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="390" y="260" width="4" height="15" fill="rgb(248,22,4)"/><text x="393.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.37%)</title><rect x="399" y="244" width="4" height="15" fill="rgb(232,58,47)"/><text x="402.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.37%)</title><rect x="399" y="260" width="4" height="15" fill="rgb(234,204,26)"/><text x="402.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.37%)</title><rect x="407" y="260" width="4" height="15" fill="rgb(225,71,47)"/><text x="410.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.10%)</title><rect x="403" y="244" width="13" height="15" fill="rgb(214,20,46)"/><text x="406.00" y="254.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.37%)</title><rect x="411" y="260" width="5" height="15" fill="rgb(254,19,2)"/><text x="414.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.37%)</title><rect x="416" y="260" width="4" height="15" fill="rgb(213,22,48)"/><text x="419.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.47%)</title><rect x="416" y="244" width="17" height="15" fill="rgb(252,87,42)"/><text x="419.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.10%)</title><rect x="420" y="260" width="13" height="15" fill="rgb(243,72,49)"/><text x="423.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 1.10%)</title><rect x="420" y="276" width="13" height="15" fill="rgb(221,114,53)"/><text x="423.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.37%)</title><rect x="437" y="260" width="5" height="15" fill="rgb(233,126,51)"/><text x="440.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 1.10%)</title><rect x="433" y="244" width="13" height="15" fill="rgb(236,112,39)"/><text x="436.00" y="254.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.37%)</title><rect x="442" y="260" width="4" height="15" fill="rgb(225,47,29)"/><text x="445.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.37%)</title><rect x="442" y="276" width="4" height="15" fill="rgb(227,191,30)"/><text x="445.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.37%)</title><rect x="442" y="292" width="4" height="15" fill="rgb(242,111,11)"/><text x="445.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.37%)</title><rect x="442" y="308" width="4" height="15" fill="rgb(253,1,49)"/><text x="445.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.37%)</title><rect x="455" y="292" width="4" height="15" fill="rgb(207,113,23)"/><text x="458.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.37%)</title><rect x="455" y="308" width="4" height="15" fill="rgb(229,203,35)"/><text x="458.00" y="318.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.10%)</title><rect x="450" y="276" width="13" height="15" fill="rgb(233,109,51)"/><text x="453.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="459" y="292" width="4" height="15" fill="rgb(224,128,38)"/><text x="462.00" y="302.50"></text></g><g><title>0x7f985566c130 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="459" y="308" width="4" height="15" fill="rgb(237,37,5)"/><text x="462.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.37%)</title><rect x="463" y="388" width="5" height="15" fill="rgb(227,185,3)"/><text x="466.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.37%)</title><rect x="463" y="404" width="5" height="15" fill="rgb(218,7,54)"/><text x="466.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.37%)</title><rect x="468" y="404" width="4" height="15" fill="rgb(241,22,10)"/><text x="471.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (3 samples, 1.10%)</title><rect x="463" y="324" width="13" height="15" fill="rgb(213,56,42)"/><text x="466.00" y="334.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (3 samples, 1.10%)</title><rect x="463" y="340" width="13" height="15" fill="rgb(239,208,52)"/><text x="466.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (3 samples, 1.10%)</title><rect x="463" y="356" width="13" height="15" fill="rgb(217,42,10)"/><text x="466.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (3 samples, 1.10%)</title><rect x="463" y="372" width="13" height="15" fill="rgb(239,199,19)"/><text x="466.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (2 samples, 0.73%)</title><rect x="468" y="388" width="8" height="15" fill="rgb(254,211,37)"/><text x="471.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.37%)</title><rect x="472" y="404" width="4" height="15" fill="rgb(239,6,53)"/><text x="475.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.37%)</title><rect x="472" y="420" width="4" height="15" fill="rgb(243,117,43)"/><text x="475.00" y="430.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.37%)</title><rect x="472" y="436" width="4" height="15" fill="rgb(243,180,22)"/><text x="475.00" y="446.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (8 samples, 2.93%)</title><rect x="446" y="244" width="35" height="15" fill="rgb(238,64,30)"/><text x="449.00" y="254.50">ch..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (8 samples, 2.93%)</title><rect x="446" y="260" width="35" height="15" fill="rgb(212,140,34)"/><text x="449.00" y="270.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (4 samples, 1.47%)</title><rect x="463" y="276" width="18" height="15" fill="rgb(253,36,10)"/><text x="466.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (4 samples, 1.47%)</title><rect x="463" y="292" width="18" height="15" fill="rgb(215,102,47)"/><text x="466.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (4 samples, 1.47%)</title><rect x="463" y="308" width="18" height="15" fill="rgb(233,15,18)"/><text x="466.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.37%)</title><rect x="476" y="324" width="5" height="15" fill="rgb(237,25,48)"/><text x="479.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="476" y="340" width="5" height="15" fill="rgb(243,226,30)"/><text x="479.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.37%)</title><rect x="476" y="356" width="5" height="15" fill="rgb(254,180,42)"/><text x="479.00" y="366.50"></text></g><g><title>__exit__ (warnings.py:496) (3 samples, 1.10%)</title><rect x="485" y="260" width="13" height="15" fill="rgb(245,207,10)"/><text x="488.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 1.83%)</title><rect x="481" y="244" width="21" height="15" fill="rgb(244,109,19)"/><text x="484.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.37%)</title><rect x="498" y="260" width="4" height="15" fill="rgb(250,191,15)"/><text x="501.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.73%)</title><rect x="502" y="260" width="9" height="15" fill="rgb(219,145,15)"/><text x="505.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.10%)</title><rect x="502" y="244" width="13" height="15" fill="rgb(211,33,6)"/><text x="505.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.37%)</title><rect x="511" y="260" width="4" height="15" fill="rgb(228,96,20)"/><text x="514.00" y="270.50"></text></g><g><title>0x7f985566c163 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="511" y="276" width="4" height="15" fill="rgb(222,214,27)"/><text x="514.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 1.10%)</title><rect x="520" y="260" width="13" height="15" fill="rgb(228,10,39)"/><text x="523.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.37%)</title><rect x="528" y="276" width="5" height="15" fill="rgb(213,74,13)"/><text x="531.00" y="286.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.37%)</title><rect x="528" y="292" width="5" height="15" fill="rgb(218,218,1)"/><text x="531.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 2.20%)</title><rect x="515" y="244" width="26" height="15" fill="rgb(222,136,45)"/><text x="518.00" y="254.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.73%)</title><rect x="533" y="260" width="8" height="15" fill="rgb(209,221,32)"/><text x="536.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.37%)</title><rect x="545" y="260" width="5" height="15" fill="rgb(237,24,53)"/><text x="548.00" y="270.50"></text></g><g><title>0x7f98555a4e89 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="545" y="276" width="5" height="15" fill="rgb(218,116,34)"/><text x="548.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.37%)</title><rect x="550" y="260" width="4" height="15" fill="rgb(212,191,22)"/><text x="553.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (41 samples, 15.02%)</title><rect x="394" y="212" width="177" height="15" fill="rgb(205,66,29)"/><text x="397.00" y="222.50">predict_proba (sklearn/..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (41 samples, 15.02%)</title><rect x="394" y="228" width="177" height="15" fill="rgb(248,15,4)"/><text x="397.00" y="238.50">_validate_X_predict (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.56%)</title><rect x="541" y="244" width="30" height="15" fill="rgb(219,10,14)"/><text x="544.00" y="254.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.47%)</title><rect x="554" y="260" width="17" height="15" fill="rgb(236,36,32)"/><text x="557.00" y="270.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.10%)</title><rect x="558" y="276" width="13" height="15" fill="rgb(237,208,11)"/><text x="561.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.73%)</title><rect x="563" y="292" width="8" height="15" fill="rgb(210,49,19)"/><text x="566.00" y="302.50"></text></g><g><title>0x7f982efd1f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="244" width="5" height="15" fill="rgb(249,171,43)"/><text x="574.00" y="254.50"></text></g><g><title>0x7f982efc1cdf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="571" y="260" width="5" height="15" fill="rgb(209,116,34)"/><text x="574.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3210) (1 samples, 0.37%)</title><rect x="576" y="292" width="4" height="15" fill="rgb(247,151,40)"/><text x="579.00" y="302.50"></text></g><g><title>0x7f982efe0225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="576" y="276" width="8" height="15" fill="rgb(215,125,6)"/><text x="579.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.37%)</title><rect x="580" y="292" width="4" height="15" fill="rgb(223,47,6)"/><text x="583.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.73%)</title><rect x="584" y="356" width="9" height="15" fill="rgb(211,9,8)"/><text x="587.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (2 samples, 0.73%)</title><rect x="584" y="372" width="9" height="15" fill="rgb(252,55,38)"/><text x="587.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.73%)</title><rect x="584" y="388" width="9" height="15" fill="rgb(226,163,34)"/><text x="587.00" y="398.50"></text></g><g><title>0x7f982efc4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.10%)</title><rect x="584" y="308" width="13" height="15" fill="rgb(241,214,29)"/><text x="587.00" y="318.50"></text></g><g><title>0x7f982efba2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.10%)</title><rect x="584" y="324" width="13" height="15" fill="rgb(229,171,34)"/><text x="587.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.10%)</title><rect x="584" y="340" width="13" height="15" fill="rgb(223,190,44)"/><text x="587.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.37%)</title><rect x="593" y="356" width="4" height="15" fill="rgb(216,208,8)"/><text x="596.00" y="366.50"></text></g><g><title>0x7f982efe02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.47%)</title><rect x="584" y="276" width="18" height="15" fill="rgb(252,113,11)"/><text x="587.00" y="286.50"></text></g><g><title>0x7f982efc4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.47%)</title><rect x="584" y="292" width="18" height="15" fill="rgb(211,94,48)"/><text x="587.00" y="302.50"></text></g><g><title>0x7f982efc46d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="597" y="308" width="5" height="15" fill="rgb(254,43,38)"/><text x="600.00" y="318.50"></text></g><g><title>0x7f982efe0364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="602" y="276" width="4" height="15" fill="rgb(212,208,36)"/><text x="605.00" y="286.50"></text></g><g><title>0x7f982efe04b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="606" y="276" width="4" height="15" fill="rgb(220,61,19)"/><text x="609.00" y="286.50"></text></g><g><title>0x7f982efe053e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="610" y="276" width="5" height="15" fill="rgb(229,225,4)"/><text x="613.00" y="286.50"></text></g><g><title>0x7f982efe0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.73%)</title><rect x="615" y="276" width="8" height="15" fill="rgb(244,192,24)"/><text x="618.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.73%)</title><rect x="615" y="292" width="8" height="15" fill="rgb(208,225,24)"/><text x="618.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.37%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(240,73,26)"/><text x="622.00" y="318.50"></text></g><g><title>0x7f982efe1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 4.40%)</title><rect x="576" y="260" width="52" height="15" fill="rgb(214,210,42)"/><text x="579.00" y="270.50">0x7f9..</text></g><g><title>0x7f982efe0be7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="623" y="276" width="5" height="15" fill="rgb(253,68,52)"/><text x="626.00" y="286.50"></text></g><g><title>0x7f982efd1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.76%)</title><rect x="576" y="244" width="56" height="15" fill="rgb(246,32,36)"/><text x="579.00" y="254.50">0x7f9..</text></g><g><title>0x7f982efe1540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="628" y="260" width="4" height="15" fill="rgb(251,168,23)"/><text x="631.00" y="270.50"></text></g><g><title>0x7f982efb62f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="628" y="276" width="4" height="15" fill="rgb(246,141,9)"/><text x="631.00" y="286.50"></text></g><g><title>0x7f982efb5530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="628" y="292" width="4" height="15" fill="rgb(205,103,16)"/><text x="631.00" y="302.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.37%)</title><rect x="628" y="308" width="4" height="15" fill="rgb(239,72,36)"/><text x="631.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.37%)</title><rect x="632" y="260" width="4" height="15" fill="rgb(242,69,39)"/><text x="635.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.37%)</title><rect x="632" y="276" width="4" height="15" fill="rgb(231,126,31)"/><text x="635.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.37%)</title><rect x="636" y="276" width="5" height="15" fill="rgb(241,34,54)"/><text x="639.00" y="286.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.37%)</title><rect x="636" y="292" width="5" height="15" fill="rgb(245,108,30)"/><text x="639.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2040) (1 samples, 0.37%)</title><rect x="636" y="308" width="5" height="15" fill="rgb(237,176,14)"/><text x="639.00" y="318.50"></text></g><g><title>0x7f982efd205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.10%)</title><rect x="632" y="244" width="13" height="15" fill="rgb(218,28,6)"/><text x="635.00" y="254.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.73%)</title><rect x="636" y="260" width="9" height="15" fill="rgb(212,93,39)"/><text x="639.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.37%)</title><rect x="641" y="276" width="4" height="15" fill="rgb(220,77,21)"/><text x="644.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="641" y="292" width="4" height="15" fill="rgb(210,152,5)"/><text x="644.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.37%)</title><rect x="641" y="308" width="4" height="15" fill="rgb(244,107,39)"/><text x="644.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.37%)</title><rect x="641" y="324" width="4" height="15" fill="rgb(251,70,34)"/><text x="644.00" y="334.50"></text></g><g><title>0x7f982efd213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="645" y="244" width="4" height="15" fill="rgb(207,46,43)"/><text x="648.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="645" y="260" width="4" height="15" fill="rgb(245,143,16)"/><text x="648.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="645" y="276" width="4" height="15" fill="rgb(237,34,37)"/><text x="648.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(254,28,50)"/><text x="648.00" y="302.50"></text></g><g><title>0x7f982efd214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="649" y="244" width="5" height="15" fill="rgb(205,198,53)"/><text x="652.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="649" y="260" width="5" height="15" fill="rgb(234,226,53)"/><text x="652.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="649" y="276" width="5" height="15" fill="rgb(231,219,2)"/><text x="652.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.37%)</title><rect x="649" y="292" width="5" height="15" fill="rgb(219,173,7)"/><text x="652.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.37%)</title><rect x="649" y="308" width="5" height="15" fill="rgb(206,94,37)"/><text x="652.00" y="318.50"></text></g><g><title>0x7f985558e902 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="649" y="324" width="5" height="15" fill="rgb(207,136,45)"/><text x="652.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (20 samples, 7.33%)</title><rect x="571" y="212" width="87" height="15" fill="rgb(228,163,29)"/><text x="574.00" y="222.50">predict_pr..</text></g><g><title>0x7f982efd2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 7.33%)</title><rect x="571" y="228" width="87" height="15" fill="rgb(210,5,19)"/><text x="574.00" y="238.50">0x7f982efd..</text></g><g><title>0x7f982efd223a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="654" y="244" width="4" height="15" fill="rgb(222,96,28)"/><text x="657.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.37%)</title><rect x="662" y="228" width="4" height="15" fill="rgb(227,194,6)"/><text x="665.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:742) (1 samples, 0.37%)</title><rect x="662" y="244" width="4" height="15" fill="rgb(243,219,19)"/><text x="665.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.37%)</title><rect x="666" y="228" width="5" height="15" fill="rgb(207,98,24)"/><text x="669.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.37%)</title><rect x="666" y="244" width="5" height="15" fill="rgb(245,219,42)"/><text x="669.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.37%)</title><rect x="679" y="292" width="5" height="15" fill="rgb(214,67,28)"/><text x="682.00" y="302.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:987) (1 samples, 0.37%)</title><rect x="679" y="308" width="5" height="15" fill="rgb(219,90,10)"/><text x="682.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.37%)</title><rect x="684" y="308" width="4" height="15" fill="rgb(213,177,31)"/><text x="687.00" y="318.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.37%)</title><rect x="684" y="324" width="4" height="15" fill="rgb(221,161,42)"/><text x="687.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.37%)</title><rect x="688" y="324" width="4" height="15" fill="rgb(205,181,20)"/><text x="691.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.37%)</title><rect x="688" y="340" width="4" height="15" fill="rgb(238,49,53)"/><text x="691.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.37%)</title><rect x="688" y="356" width="4" height="15" fill="rgb(209,34,20)"/><text x="691.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="688" y="372" width="4" height="15" fill="rgb(243,51,18)"/><text x="691.00" y="382.50"></text></g><g><title>0x7f9855546785 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="688" y="388" width="4" height="15" fill="rgb(245,132,35)"/><text x="691.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:50) (1 samples, 0.37%)</title><rect x="692" y="372" width="5" height="15" fill="rgb(228,161,15)"/><text x="695.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.37%)</title><rect x="692" y="388" width="5" height="15" fill="rgb(231,166,34)"/><text x="695.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.73%)</title><rect x="692" y="324" width="9" height="15" fill="rgb(232,189,53)"/><text x="695.00" y="334.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.73%)</title><rect x="692" y="340" width="9" height="15" fill="rgb(216,41,9)"/><text x="695.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.73%)</title><rect x="692" y="356" width="9" height="15" fill="rgb(209,72,7)"/><text x="695.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.37%)</title><rect x="697" y="372" width="4" height="15" fill="rgb(222,196,29)"/><text x="700.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.37%)</title><rect x="697" y="388" width="4" height="15" fill="rgb(253,198,20)"/><text x="700.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.37%)</title><rect x="697" y="404" width="4" height="15" fill="rgb(235,113,11)"/><text x="700.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="701" y="340" width="4" height="15" fill="rgb(219,102,9)"/><text x="704.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="701" y="356" width="4" height="15" fill="rgb(224,113,53)"/><text x="704.00" y="366.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.37%)</title><rect x="701" y="372" width="4" height="15" fill="rgb(246,10,21)"/><text x="704.00" y="382.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.37%)</title><rect x="701" y="388" width="4" height="15" fill="rgb(235,109,24)"/><text x="704.00" y="398.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.37%)</title><rect x="705" y="356" width="5" height="15" fill="rgb(249,205,46)"/><text x="708.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.73%)</title><rect x="705" y="340" width="9" height="15" fill="rgb(217,199,29)"/><text x="708.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1473) (1 samples, 0.37%)</title><rect x="710" y="356" width="4" height="15" fill="rgb(220,126,44)"/><text x="713.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 1.47%)</title><rect x="701" y="324" width="17" height="15" fill="rgb(239,59,54)"/><text x="704.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.37%)</title><rect x="714" y="340" width="4" height="15" fill="rgb(251,220,11)"/><text x="717.00" y="350.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2296) (1 samples, 0.37%)</title><rect x="714" y="356" width="4" height="15" fill="rgb(254,133,3)"/><text x="717.00" y="366.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:249) (1 samples, 0.37%)</title><rect x="718" y="356" width="5" height="15" fill="rgb(221,194,9)"/><text x="721.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (2 samples, 0.73%)</title><rect x="718" y="340" width="9" height="15" fill="rgb(217,32,54)"/><text x="721.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.37%)</title><rect x="723" y="356" width="4" height="15" fill="rgb(233,226,23)"/><text x="726.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1851) (1 samples, 0.37%)</title><rect x="723" y="372" width="4" height="15" fill="rgb(224,101,50)"/><text x="726.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 1.10%)</title><rect x="718" y="324" width="13" height="15" fill="rgb(244,90,51)"/><text x="721.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.37%)</title><rect x="727" y="340" width="4" height="15" fill="rgb(220,222,35)"/><text x="730.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (18 samples, 6.59%)</title><rect x="658" y="212" width="78" height="15" fill="rgb(233,73,7)"/><text x="661.00" y="222.50">predict_p..</text></g><g><title>array_sum (methods.c:2215) (15 samples, 5.49%)</title><rect x="671" y="228" width="65" height="15" fill="rgb(245,103,24)"/><text x="674.00" y="238.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (15 samples, 5.49%)</title><rect x="671" y="244" width="65" height="15" fill="rgb(206,14,48)"/><text x="674.00" y="254.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 4.76%)</title><rect x="679" y="260" width="57" height="15" fill="rgb(244,171,36)"/><text x="682.00" y="270.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 4.76%)</title><rect x="679" y="276" width="57" height="15" fill="rgb(244,155,37)"/><text x="682.00" y="286.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 4.40%)</title><rect x="684" y="292" width="52" height="15" fill="rgb(230,57,13)"/><text x="687.00" y="302.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 4.03%)</title><rect x="688" y="308" width="48" height="15" fill="rgb(242,128,10)"/><text x="691.00" y="318.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.37%)</title><rect x="731" y="324" width="5" height="15" fill="rgb(213,162,16)"/><text x="734.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.37%)</title><rect x="731" y="340" width="5" height="15" fill="rgb(240,38,37)"/><text x="734.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="731" y="356" width="5" height="15" fill="rgb(232,107,37)"/><text x="734.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.37%)</title><rect x="736" y="276" width="4" height="15" fill="rgb(222,114,40)"/><text x="739.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.73%)</title><rect x="736" y="260" width="8" height="15" fill="rgb(214,100,11)"/><text x="739.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="740" y="276" width="4" height="15" fill="rgb(222,101,32)"/><text x="743.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.37%)</title><rect x="740" y="292" width="4" height="15" fill="rgb(232,209,16)"/><text x="743.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="744" y="260" width="5" height="15" fill="rgb(226,213,43)"/><text x="747.00" y="270.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (1 samples, 0.37%)</title><rect x="744" y="276" width="5" height="15" fill="rgb(240,70,43)"/><text x="747.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1848) (1 samples, 0.37%)</title><rect x="744" y="292" width="5" height="15" fill="rgb(205,81,9)"/><text x="747.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (4 samples, 1.47%)</title><rect x="736" y="212" width="17" height="15" fill="rgb(243,147,39)"/><text x="739.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (4 samples, 1.47%)</title><rect x="736" y="228" width="17" height="15" fill="rgb(210,24,51)"/><text x="739.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.47%)</title><rect x="736" y="244" width="17" height="15" fill="rgb(243,168,32)"/><text x="739.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="749" y="260" width="4" height="15" fill="rgb(228,80,53)"/><text x="752.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.37%)</title><rect x="749" y="276" width="4" height="15" fill="rgb(234,177,20)"/><text x="752.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.37%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(231,180,17)"/><text x="752.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:155) (1 samples, 0.37%)</title><rect x="749" y="308" width="4" height="15" fill="rgb(254,122,45)"/><text x="752.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="753" y="244" width="4" height="15" fill="rgb(244,47,17)"/><text x="756.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.37%)</title><rect x="753" y="260" width="4" height="15" fill="rgb(236,198,24)"/><text x="756.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.37%)</title><rect x="753" y="276" width="4" height="15" fill="rgb(225,197,38)"/><text x="756.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.37%)</title><rect x="753" y="292" width="4" height="15" fill="rgb(233,186,42)"/><text x="756.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.37%)</title><rect x="753" y="308" width="4" height="15" fill="rgb(250,72,48)"/><text x="756.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.37%)</title><rect x="757" y="276" width="5" height="15" fill="rgb(211,100,12)"/><text x="760.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.37%)</title><rect x="762" y="276" width="4" height="15" fill="rgb(217,154,40)"/><text x="765.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="762" y="292" width="4" height="15" fill="rgb(205,222,12)"/><text x="765.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1461) (1 samples, 0.37%)</title><rect x="762" y="308" width="4" height="15" fill="rgb(243,180,27)"/><text x="765.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.37%)</title><rect x="766" y="276" width="4" height="15" fill="rgb(228,148,0)"/><text x="769.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.37%)</title><rect x="766" y="292" width="4" height="15" fill="rgb(218,26,28)"/><text x="769.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.83%)</title><rect x="753" y="228" width="22" height="15" fill="rgb(218,63,1)"/><text x="756.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.47%)</title><rect x="757" y="244" width="18" height="15" fill="rgb(205,185,10)"/><text x="760.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.47%)</title><rect x="757" y="260" width="18" height="15" fill="rgb(250,114,45)"/><text x="760.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.37%)</title><rect x="770" y="276" width="5" height="15" fill="rgb(214,165,3)"/><text x="773.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:668) (1 samples, 0.37%)</title><rect x="770" y="292" width="5" height="15" fill="rgb(240,80,8)"/><text x="773.00" y="302.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:273) (112 samples, 41.03%)</title><rect x="295" y="196" width="484" height="15" fill="rgb(206,96,22)"/><text x="298.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py:273)</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (6 samples, 2.20%)</title><rect x="753" y="212" width="26" height="15" fill="rgb(250,132,0)"/><text x="756.00" y="222.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.37%)</title><rect x="775" y="228" width="4" height="15" fill="rgb(214,199,32)"/><text x="778.00" y="238.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.37%)</title><rect x="775" y="244" width="4" height="15" fill="rgb(247,20,43)"/><text x="778.00" y="254.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:367) (1 samples, 0.37%)</title><rect x="788" y="212" width="4" height="15" fill="rgb(244,152,36)"/><text x="791.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.37%)</title><rect x="788" y="228" width="4" height="15" fill="rgb(217,115,30)"/><text x="791.00" y="238.50"></text></g><g><title>0x7f98555a4757 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="788" y="244" width="4" height="15" fill="rgb(242,222,16)"/><text x="791.00" y="254.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (4 samples, 1.47%)</title><rect x="792" y="212" width="17" height="15" fill="rgb(243,58,29)"/><text x="795.00" y="222.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py:1971) (1 samples, 0.37%)</title><rect x="805" y="228" width="4" height="15" fill="rgb(253,146,50)"/><text x="808.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.37%)</title><rect x="809" y="228" width="4" height="15" fill="rgb(248,72,6)"/><text x="812.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.37%)</title><rect x="809" y="244" width="4" height="15" fill="rgb(223,87,8)"/><text x="812.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.37%)</title><rect x="809" y="260" width="4" height="15" fill="rgb(248,32,20)"/><text x="812.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.37%)</title><rect x="809" y="276" width="4" height="15" fill="rgb(230,140,3)"/><text x="812.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.37%)</title><rect x="809" y="292" width="4" height="15" fill="rgb(244,98,41)"/><text x="812.00" y="302.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:74) (2 samples, 0.73%)</title><rect x="822" y="324" width="9" height="15" fill="rgb(206,39,39)"/><text x="825.00" y="334.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (3 samples, 1.10%)</title><rect x="822" y="308" width="13" height="15" fill="rgb(217,177,1)"/><text x="825.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.37%)</title><rect x="831" y="324" width="4" height="15" fill="rgb(244,213,4)"/><text x="834.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.37%)</title><rect x="835" y="324" width="4" height="15" fill="rgb(208,2,31)"/><text x="838.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.37%)</title><rect x="835" y="340" width="4" height="15" fill="rgb(244,145,33)"/><text x="838.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:70) (1 samples, 0.37%)</title><rect x="848" y="420" width="4" height="15" fill="rgb(214,59,16)"/><text x="851.00" y="430.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (2 samples, 0.73%)</title><rect x="848" y="356" width="9" height="15" fill="rgb(219,177,35)"/><text x="851.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (2 samples, 0.73%)</title><rect x="848" y="372" width="9" height="15" fill="rgb(214,198,4)"/><text x="851.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (2 samples, 0.73%)</title><rect x="848" y="388" width="9" height="15" fill="rgb(215,94,17)"/><text x="851.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.73%)</title><rect x="848" y="404" width="9" height="15" fill="rgb(249,209,12)"/><text x="851.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.37%)</title><rect x="852" y="420" width="5" height="15" fill="rgb(213,158,47)"/><text x="855.00" y="430.50"></text></g><g><title>0x7f98555a4e7a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="852" y="436" width="5" height="15" fill="rgb(252,27,1)"/><text x="855.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (5 samples, 1.83%)</title><rect x="839" y="324" width="22" height="15" fill="rgb(246,125,25)"/><text x="842.00" y="334.50">_..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (3 samples, 1.10%)</title><rect x="848" y="340" width="13" height="15" fill="rgb(208,172,41)"/><text x="851.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="857" y="356" width="4" height="15" fill="rgb(236,132,5)"/><text x="860.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="861" y="340" width="4" height="15" fill="rgb(230,45,44)"/><text x="864.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="861" y="356" width="4" height="15" fill="rgb(217,66,19)"/><text x="864.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.37%)</title><rect x="861" y="372" width="4" height="15" fill="rgb(217,1,7)"/><text x="864.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.37%)</title><rect x="861" y="388" width="4" height="15" fill="rgb(246,34,53)"/><text x="864.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.37%)</title><rect x="861" y="404" width="4" height="15" fill="rgb(219,36,40)"/><text x="864.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.37%)</title><rect x="861" y="420" width="4" height="15" fill="rgb(205,17,17)"/><text x="864.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="865" y="356" width="5" height="15" fill="rgb(207,163,22)"/><text x="868.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="865" y="372" width="5" height="15" fill="rgb(220,117,40)"/><text x="868.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.37%)</title><rect x="865" y="388" width="5" height="15" fill="rgb(230,123,9)"/><text x="868.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.37%)</title><rect x="865" y="404" width="5" height="15" fill="rgb(250,216,7)"/><text x="868.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.37%)</title><rect x="865" y="420" width="5" height="15" fill="rgb(246,140,30)"/><text x="868.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="870" y="356" width="4" height="15" fill="rgb(249,71,4)"/><text x="873.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.37%)</title><rect x="870" y="372" width="4" height="15" fill="rgb(215,87,48)"/><text x="873.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.10%)</title><rect x="865" y="340" width="13" height="15" fill="rgb(220,64,49)"/><text x="868.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="874" y="356" width="4" height="15" fill="rgb(236,189,37)"/><text x="877.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1637) (1 samples, 0.37%)</title><rect x="874" y="372" width="4" height="15" fill="rgb(225,165,22)"/><text x="877.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (11 samples, 4.03%)</title><rect x="835" y="308" width="48" height="15" fill="rgb(240,192,26)"/><text x="838.00" y="318.50">_cli..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (5 samples, 1.83%)</title><rect x="861" y="324" width="22" height="15" fill="rgb(236,181,27)"/><text x="864.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.37%)</title><rect x="878" y="340" width="5" height="15" fill="rgb(247,210,52)"/><text x="881.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.37%)</title><rect x="878" y="356" width="5" height="15" fill="rgb(205,184,18)"/><text x="881.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="878" y="372" width="5" height="15" fill="rgb(232,50,23)"/><text x="881.00" y="382.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (1 samples, 0.37%)</title><rect x="883" y="324" width="4" height="15" fill="rgb(215,145,42)"/><text x="886.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (1 samples, 0.37%)</title><rect x="887" y="340" width="4" height="15" fill="rgb(232,116,8)"/><text x="890.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.37%)</title><rect x="891" y="356" width="5" height="15" fill="rgb(254,224,36)"/><text x="894.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.37%)</title><rect x="891" y="372" width="5" height="15" fill="rgb(221,37,27)"/><text x="894.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c:31) (1 samples, 0.37%)</title><rect x="891" y="388" width="5" height="15" fill="rgb(219,156,31)"/><text x="894.00" y="398.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.37%)</title><rect x="896" y="372" width="4" height="15" fill="rgb(206,174,19)"/><text x="899.00" y="382.50"></text></g><g><title>0x7f98555a4e7a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="896" y="388" width="4" height="15" fill="rgb(222,137,46)"/><text x="899.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="900" y="388" width="4" height="15" fill="rgb(226,169,54)"/><text x="903.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="900" y="404" width="4" height="15" fill="rgb(252,79,51)"/><text x="903.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="900" y="420" width="4" height="15" fill="rgb(210,97,35)"/><text x="903.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.37%)</title><rect x="909" y="452" width="4" height="15" fill="rgb(229,12,12)"/><text x="912.00" y="462.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 2.56%)</title><rect x="887" y="324" width="30" height="15" fill="rgb(236,1,15)"/><text x="890.00" y="334.50">_c..</text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 2.20%)</title><rect x="891" y="340" width="26" height="15" fill="rgb(213,47,40)"/><text x="894.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.83%)</title><rect x="896" y="356" width="21" height="15" fill="rgb(206,67,9)"/><text x="899.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (4 samples, 1.47%)</title><rect x="900" y="372" width="17" height="15" fill="rgb(235,186,33)"/><text x="903.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 1.10%)</title><rect x="904" y="388" width="13" height="15" fill="rgb(226,36,14)"/><text x="907.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.73%)</title><rect x="909" y="404" width="8" height="15" fill="rgb(223,165,27)"/><text x="912.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.73%)</title><rect x="909" y="420" width="8" height="15" fill="rgb(240,102,54)"/><text x="912.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.73%)</title><rect x="909" y="436" width="8" height="15" fill="rgb(246,114,54)"/><text x="912.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1696) (1 samples, 0.37%)</title><rect x="913" y="452" width="4" height="15" fill="rgb(254,0,49)"/><text x="916.00" y="462.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c:2611) (1 samples, 0.37%)</title><rect x="913" y="468" width="4" height="15" fill="rgb(214,43,14)"/><text x="916.00" y="478.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="917" y="356" width="5" height="15" fill="rgb(220,212,3)"/><text x="920.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="917" y="372" width="5" height="15" fill="rgb(238,100,38)"/><text x="920.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.37%)</title><rect x="917" y="388" width="5" height="15" fill="rgb(230,95,41)"/><text x="920.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.37%)</title><rect x="917" y="404" width="5" height="15" fill="rgb(211,22,10)"/><text x="920.00" y="414.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.37%)</title><rect x="917" y="420" width="5" height="15" fill="rgb(221,118,25)"/><text x="920.00" y="430.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4428) (2 samples, 0.73%)</title><rect x="922" y="404" width="8" height="15" fill="rgb(224,92,31)"/><text x="925.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.37%)</title><rect x="930" y="404" width="4" height="15" fill="rgb(222,80,47)"/><text x="933.00" y="414.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (5 samples, 1.83%)</title><rect x="922" y="388" width="21" height="15" fill="rgb(206,43,4)"/><text x="925.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (2 samples, 0.73%)</title><rect x="934" y="404" width="9" height="15" fill="rgb(242,2,27)"/><text x="937.00" y="414.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (6 samples, 2.20%)</title><rect x="922" y="372" width="25" height="15" fill="rgb(216,55,17)"/><text x="925.00" y="382.50">l..</text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.37%)</title><rect x="943" y="388" width="4" height="15" fill="rgb(242,2,23)"/><text x="946.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.37%)</title><rect x="943" y="404" width="4" height="15" fill="rgb(235,61,13)"/><text x="946.00" y="414.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.37%)</title><rect x="943" y="420" width="4" height="15" fill="rgb(227,106,37)"/><text x="946.00" y="430.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:402) (1 samples, 0.37%)</title><rect x="943" y="436" width="4" height="15" fill="rgb(243,45,42)"/><text x="946.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (7 samples, 2.56%)</title><rect x="922" y="356" width="30" height="15" fill="rgb(209,15,19)"/><text x="925.00" y="366.50">Py..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2048) (1 samples, 0.37%)</title><rect x="947" y="372" width="5" height="15" fill="rgb(214,109,52)"/><text x="950.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (17 samples, 6.23%)</title><rect x="883" y="308" width="73" height="15" fill="rgb(244,47,9)"/><text x="886.00" y="318.50">_clip (n..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (9 samples, 3.30%)</title><rect x="917" y="324" width="39" height="15" fill="rgb(240,201,36)"/><text x="920.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.30%)</title><rect x="917" y="340" width="39" height="15" fill="rgb(221,43,20)"/><text x="920.00" y="350.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3296) (1 samples, 0.37%)</title><rect x="952" y="356" width="4" height="15" fill="rgb(242,180,25)"/><text x="955.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.37%)</title><rect x="952" y="372" width="4" height="15" fill="rgb(239,158,8)"/><text x="955.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="952" y="388" width="4" height="15" fill="rgb(214,170,6)"/><text x="955.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="978" y="340" width="4" height="15" fill="rgb(212,62,37)"/><text x="981.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="978" y="356" width="4" height="15" fill="rgb(254,48,24)"/><text x="981.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.37%)</title><rect x="978" y="372" width="4" height="15" fill="rgb(229,223,41)"/><text x="981.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.37%)</title><rect x="978" y="388" width="4" height="15" fill="rgb(220,151,48)"/><text x="981.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:103) (1 samples, 0.37%)</title><rect x="978" y="404" width="4" height="15" fill="rgb(206,44,0)"/><text x="981.00" y="414.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h:15) (1 samples, 0.37%)</title><rect x="978" y="420" width="4" height="15" fill="rgb(245,122,6)"/><text x="981.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="982" y="356" width="4" height="15" fill="rgb(217,90,6)"/><text x="985.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.37%)</title><rect x="982" y="372" width="4" height="15" fill="rgb(218,220,52)"/><text x="985.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.37%)</title><rect x="982" y="388" width="4" height="15" fill="rgb(249,116,1)"/><text x="985.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:320) (1 samples, 0.37%)</title><rect x="982" y="404" width="4" height="15" fill="rgb(245,183,17)"/><text x="985.00" y="414.50"></text></g><g><title>scalar_value (scalarapi.c:161) (1 samples, 0.37%)</title><rect x="982" y="420" width="4" height="15" fill="rgb(221,6,50)"/><text x="985.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="986" y="356" width="5" height="15" fill="rgb(206,15,47)"/><text x="989.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.37%)</title><rect x="986" y="372" width="5" height="15" fill="rgb(218,21,47)"/><text x="989.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.37%)</title><rect x="986" y="388" width="5" height="15" fill="rgb(219,220,9)"/><text x="989.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.37%)</title><rect x="986" y="404" width="5" height="15" fill="rgb(244,208,24)"/><text x="989.00" y="414.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src:1924) (1 samples, 0.37%)</title><rect x="986" y="420" width="5" height="15" fill="rgb(253,189,25)"/><text x="989.00" y="430.50"></text></g><g><title>_basic_copy (arraytypes.c.src:1887) (1 samples, 0.37%)</title><rect x="986" y="436" width="5" height="15" fill="rgb(219,97,15)"/><text x="989.00" y="446.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.37%)</title><rect x="991" y="404" width="4" height="15" fill="rgb(209,58,18)"/><text x="994.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.37%)</title><rect x="991" y="420" width="4" height="15" fill="rgb(240,228,15)"/><text x="994.00" y="430.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:675) (1 samples, 0.37%)</title><rect x="991" y="436" width="4" height="15" fill="rgb(240,67,30)"/><text x="994.00" y="446.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.73%)</title><rect x="991" y="388" width="8" height="15" fill="rgb(205,83,0)"/><text x="994.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.37%)</title><rect x="995" y="404" width="4" height="15" fill="rgb(224,150,24)"/><text x="998.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.37%)</title><rect x="995" y="420" width="4" height="15" fill="rgb(221,181,37)"/><text x="998.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.37%)</title><rect x="995" y="436" width="4" height="15" fill="rgb(237,82,24)"/><text x="998.00" y="446.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.37%)</title><rect x="995" y="452" width="4" height="15" fill="rgb(220,107,3)"/><text x="998.00" y="462.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:242) (1 samples, 0.37%)</title><rect x="995" y="468" width="4" height="15" fill="rgb(206,117,23)"/><text x="998.00" y="478.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:278) (52 samples, 19.05%)</title><rect x="779" y="196" width="225" height="15" fill="rgb(250,8,13)"/><text x="782.00" y="206.50">_samme_proba (sklearn/ensembl..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (45 samples, 16.48%)</title><rect x="809" y="212" width="195" height="15" fill="rgb(227,211,37)"/><text x="812.00" y="222.50">clip (&lt;__array_function__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (44 samples, 16.12%)</title><rect x="813" y="228" width="191" height="15" fill="rgb(224,71,26)"/><text x="816.00" y="238.50">array_implement_array_fu..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (44 samples, 16.12%)</title><rect x="813" y="244" width="191" height="15" fill="rgb(222,183,33)"/><text x="816.00" y="254.50">clip (numpy/core/fromnum..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (42 samples, 15.38%)</title><rect x="822" y="260" width="182" height="15" fill="rgb(212,194,8)"/><text x="825.00" y="270.50">_wrapfunc (numpy/core/f..</text></g><g><title>array_clip (methods.c:2381) (42 samples, 15.38%)</title><rect x="822" y="276" width="182" height="15" fill="rgb(242,226,33)"/><text x="825.00" y="286.50">array_clip (methods.c:2..</text></g><g><title>forward_ndarray_method (methods.c:108) (42 samples, 15.38%)</title><rect x="822" y="292" width="182" height="15" fill="rgb(245,71,15)"/><text x="825.00" y="302.50">forward_ndarray_method ..</text></g><g><title>_clip (numpy/core/_methods.py:129) (11 samples, 4.03%)</title><rect x="956" y="308" width="48" height="15" fill="rgb(208,118,12)"/><text x="959.00" y="318.50">_cli..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (9 samples, 3.30%)</title><rect x="965" y="324" width="39" height="15" fill="rgb(206,137,18)"/><text x="968.00" y="334.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.83%)</title><rect x="982" y="340" width="22" height="15" fill="rgb(234,41,22)"/><text x="985.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.10%)</title><rect x="991" y="356" width="13" height="15" fill="rgb(205,62,28)"/><text x="994.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 1.10%)</title><rect x="991" y="372" width="13" height="15" fill="rgb(219,28,15)"/><text x="994.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:731) (1 samples, 0.37%)</title><rect x="999" y="388" width="5" height="15" fill="rgb(228,211,44)"/><text x="1002.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.37%)</title><rect x="1012" y="228" width="5" height="15" fill="rgb(254,175,7)"/><text x="1015.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.37%)</title><rect x="1012" y="244" width="5" height="15" fill="rgb(223,222,35)"/><text x="1015.00" y="254.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:279) (4 samples, 1.47%)</title><rect x="1004" y="196" width="17" height="15" fill="rgb(231,214,13)"/><text x="1007.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.73%)</title><rect x="1012" y="212" width="9" height="15" fill="rgb(239,135,12)"/><text x="1015.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.37%)</title><rect x="1017" y="228" width="4" height="15" fill="rgb(241,172,14)"/><text x="1020.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:307) (1 samples, 0.37%)</title><rect x="1017" y="244" width="4" height="15" fill="rgb(246,211,27)"/><text x="1020.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.37%)</title><rect x="1025" y="228" width="5" height="15" fill="rgb(226,214,32)"/><text x="1028.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.37%)</title><rect x="1025" y="244" width="5" height="15" fill="rgb(228,126,28)"/><text x="1028.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.37%)</title><rect x="1025" y="260" width="5" height="15" fill="rgb(243,102,50)"/><text x="1028.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:47) (1 samples, 0.37%)</title><rect x="1025" y="276" width="5" height="15" fill="rgb(215,186,41)"/><text x="1028.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="1030" y="244" width="4" height="15" fill="rgb(209,24,6)"/><text x="1033.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.37%)</title><rect x="1030" y="260" width="4" height="15" fill="rgb(238,81,6)"/><text x="1033.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="1034" y="244" width="4" height="15" fill="rgb(215,111,54)"/><text x="1037.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.37%)</title><rect x="1034" y="260" width="4" height="15" fill="rgb(210,124,43)"/><text x="1037.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.37%)</title><rect x="1034" y="276" width="4" height="15" fill="rgb(205,87,28)"/><text x="1037.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.37%)</title><rect x="1034" y="292" width="4" height="15" fill="rgb(223,224,35)"/><text x="1037.00" y="302.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.37%)</title><rect x="1034" y="308" width="4" height="15" fill="rgb(211,35,48)"/><text x="1037.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.37%)</title><rect x="1038" y="244" width="5" height="15" fill="rgb(249,164,40)"/><text x="1041.00" y="254.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.37%)</title><rect x="1038" y="260" width="5" height="15" fill="rgb(209,11,41)"/><text x="1041.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.37%)</title><rect x="1038" y="276" width="5" height="15" fill="rgb(214,150,28)"/><text x="1041.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.37%)</title><rect x="1038" y="292" width="5" height="15" fill="rgb(218,119,25)"/><text x="1041.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="1038" y="308" width="5" height="15" fill="rgb(240,35,27)"/><text x="1041.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.37%)</title><rect x="1038" y="324" width="5" height="15" fill="rgb(248,125,13)"/><text x="1041.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3846) (1 samples, 0.37%)</title><rect x="1038" y="340" width="5" height="15" fill="rgb(241,45,21)"/><text x="1041.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.47%)</title><rect x="1030" y="228" width="17" height="15" fill="rgb(243,23,39)"/><text x="1033.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="1043" y="244" width="4" height="15" fill="rgb(216,137,7)"/><text x="1046.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.37%)</title><rect x="1043" y="260" width="4" height="15" fill="rgb(223,212,24)"/><text x="1046.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(251,129,33)"/><text x="1046.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.37%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(231,48,24)"/><text x="1046.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.37%)</title><rect x="1043" y="308" width="4" height="15" fill="rgb(228,95,22)"/><text x="1046.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.37%)</title><rect x="1043" y="324" width="4" height="15" fill="rgb(209,227,39)"/><text x="1046.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1043" y="340" width="4" height="15" fill="rgb(243,48,7)"/><text x="1046.00" y="350.50"></text></g><g><title>array_multiply (number.c:354) (6 samples, 2.20%)</title><rect x="1025" y="212" width="26" height="15" fill="rgb(208,15,43)"/><text x="1028.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.37%)</title><rect x="1047" y="228" width="4" height="15" fill="rgb(239,168,52)"/><text x="1050.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.37%)</title><rect x="1047" y="244" width="4" height="15" fill="rgb(224,223,26)"/><text x="1050.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:149) (1 samples, 0.37%)</title><rect x="1047" y="260" width="4" height="15" fill="rgb(224,114,29)"/><text x="1050.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.37%)</title><rect x="1051" y="292" width="5" height="15" fill="rgb(252,101,40)"/><text x="1054.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1051" y="308" width="5" height="15" fill="rgb(240,199,32)"/><text x="1054.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="1056" y="292" width="4" height="15" fill="rgb(214,116,50)"/><text x="1059.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.37%)</title><rect x="1056" y="308" width="4" height="15" fill="rgb(242,11,38)"/><text x="1059.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1056" y="324" width="4" height="15" fill="rgb(210,20,26)"/><text x="1059.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.10%)</title><rect x="1051" y="276" width="13" height="15" fill="rgb(251,27,1)"/><text x="1054.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.37%)</title><rect x="1060" y="292" width="4" height="15" fill="rgb(207,58,4)"/><text x="1063.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3069) (1 samples, 0.37%)</title><rect x="1060" y="308" width="4" height="15" fill="rgb(219,50,17)"/><text x="1063.00" y="318.50"></text></g><g><title>array_subtract (number.c:342) (4 samples, 1.47%)</title><rect x="1051" y="212" width="17" height="15" fill="rgb(209,119,10)"/><text x="1054.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.47%)</title><rect x="1051" y="228" width="17" height="15" fill="rgb(254,219,7)"/><text x="1054.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.47%)</title><rect x="1051" y="244" width="17" height="15" fill="rgb(245,113,38)"/><text x="1054.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.47%)</title><rect x="1051" y="260" width="17" height="15" fill="rgb(226,122,5)"/><text x="1054.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.37%)</title><rect x="1064" y="276" width="4" height="15" fill="rgb(207,102,29)"/><text x="1067.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:295) (1 samples, 0.37%)</title><rect x="1064" y="292" width="4" height="15" fill="rgb(221,163,7)"/><text x="1067.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:63) (1 samples, 0.37%)</title><rect x="1073" y="340" width="4" height="15" fill="rgb(246,201,35)"/><text x="1076.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.73%)</title><rect x="1073" y="260" width="8" height="15" fill="rgb(227,176,8)"/><text x="1076.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.73%)</title><rect x="1073" y="276" width="8" height="15" fill="rgb(234,101,49)"/><text x="1076.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.73%)</title><rect x="1073" y="292" width="8" height="15" fill="rgb(230,215,27)"/><text x="1076.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.73%)</title><rect x="1073" y="308" width="8" height="15" fill="rgb(205,97,39)"/><text x="1076.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.73%)</title><rect x="1073" y="324" width="8" height="15" fill="rgb(243,20,46)"/><text x="1076.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:70) (1 samples, 0.37%)</title><rect x="1077" y="340" width="4" height="15" fill="rgb(227,124,38)"/><text x="1080.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.37%)</title><rect x="1081" y="340" width="5" height="15" fill="rgb(213,222,46)"/><text x="1084.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.73%)</title><rect x="1081" y="308" width="9" height="15" fill="rgb(249,54,28)"/><text x="1084.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.73%)</title><rect x="1081" y="324" width="9" height="15" fill="rgb(217,73,34)"/><text x="1084.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="1086" y="340" width="4" height="15" fill="rgb(252,47,31)"/><text x="1089.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.37%)</title><rect x="1086" y="356" width="4" height="15" fill="rgb(213,224,32)"/><text x="1089.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3895) (1 samples, 0.37%)</title><rect x="1086" y="372" width="4" height="15" fill="rgb(246,203,21)"/><text x="1089.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.37%)</title><rect x="1090" y="324" width="4" height="15" fill="rgb(220,82,2)"/><text x="1093.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.73%)</title><rect x="1090" y="308" width="9" height="15" fill="rgb(239,110,24)"/><text x="1093.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.37%)</title><rect x="1094" y="324" width="5" height="15" fill="rgb(250,202,31)"/><text x="1097.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.37%)</title><rect x="1094" y="340" width="5" height="15" fill="rgb(249,170,39)"/><text x="1097.00" y="350.50"></text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py:282) (19 samples, 6.96%)</title><rect x="1021" y="196" width="82" height="15" fill="rgb(248,185,0)"/><text x="1024.00" y="206.50">_samme_pr..</text></g><g><title>array_sum (methods.c:2215) (8 samples, 2.93%)</title><rect x="1068" y="212" width="35" height="15" fill="rgb(245,117,33)"/><text x="1071.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c:108) (8 samples, 2.93%)</title><rect x="1068" y="228" width="35" height="15" fill="rgb(220,167,26)"/><text x="1071.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 2.93%)</title><rect x="1068" y="244" width="35" height="15" fill="rgb(211,28,54)"/><text x="1071.00" y="254.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.83%)</title><rect x="1081" y="260" width="22" height="15" fill="rgb(212,179,34)"/><text x="1084.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.83%)</title><rect x="1081" y="276" width="22" height="15" fill="rgb(215,166,8)"/><text x="1084.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.83%)</title><rect x="1081" y="292" width="22" height="15" fill="rgb(245,33,22)"/><text x="1084.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.37%)</title><rect x="1099" y="308" width="4" height="15" fill="rgb(209,33,6)"/><text x="1102.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.37%)</title><rect x="1099" y="324" width="4" height="15" fill="rgb(230,165,40)"/><text x="1102.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1099" y="340" width="4" height="15" fill="rgb(238,173,10)"/><text x="1102.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697) (189 samples, 69.23%)</title><rect x="290" y="180" width="817" height="15" fill="rgb(245,48,36)"/><text x="293.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="1103" y="196" width="4" height="15" fill="rgb(240,175,15)"/><text x="1106.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="1103" y="212" width="4" height="15" fill="rgb(237,124,7)"/><text x="1106.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="1103" y="228" width="4" height="15" fill="rgb(225,228,44)"/><text x="1106.00" y="238.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.37%)</title><rect x="1107" y="180" width="5" height="15" fill="rgb(213,168,48)"/><text x="1110.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="1107" y="196" width="5" height="15" fill="rgb(242,94,46)"/><text x="1110.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.37%)</title><rect x="1107" y="212" width="5" height="15" fill="rgb(230,197,15)"/><text x="1110.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1069) (1 samples, 0.37%)</title><rect x="1107" y="228" width="5" height="15" fill="rgb(206,202,16)"/><text x="1110.00" y="238.50"></text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:808) (191 samples, 69.96%)</title><rect x="290" y="148" width="826" height="15" fill="rgb(216,106,37)"/><text x="293.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py:808)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py:697) (191 samples, 69.96%)</title><rect x="290" y="164" width="826" height="15" fill="rgb(234,77,21)"/><text x="293.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py:697)</text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.37%)</title><rect x="1112" y="180" width="4" height="15" fill="rgb(206,81,33)"/><text x="1115.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:38) (253 samples, 92.67%)</title><rect x="27" y="52" width="1093" height="15" fill="rgb(233,203,11)"/><text x="30.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:38)</text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:37) (253 samples, 92.67%)</title><rect x="27" y="68" width="1093" height="15" fill="rgb(226,47,17)"/><text x="30.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:37)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:29) (252 samples, 92.31%)</title><rect x="31" y="84" width="1089" height="15" fill="rgb(237,23,42)"/><text x="34.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:29)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:23) (193 samples, 70.70%)</title><rect x="286" y="100" width="834" height="15" fill="rgb(221,3,13)"/><text x="289.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (193 samples, 70.70%)</title><rect x="286" y="116" width="834" height="15" fill="rgb(214,151,23)"/><text x="289.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (193 samples, 70.70%)</title><rect x="286" y="132" width="834" height="15" fill="rgb(213,123,13)"/><text x="289.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py:809) (1 samples, 0.37%)</title><rect x="1116" y="148" width="4" height="15" fill="rgb(242,133,13)"/><text x="1119.00" y="158.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py:779) (1 samples, 0.37%)</title><rect x="1116" y="164" width="4" height="15" fill="rgb(225,36,31)"/><text x="1119.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py:612) (1 samples, 0.37%)</title><rect x="1116" y="180" width="4" height="15" fill="rgb(254,145,11)"/><text x="1119.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="1116" y="196" width="4" height="15" fill="rgb(253,144,40)"/><text x="1119.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.37%)</title><rect x="1116" y="212" width="4" height="15" fill="rgb(226,109,22)"/><text x="1119.00" y="222.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.37%)</title><rect x="1116" y="228" width="4" height="15" fill="rgb(231,39,35)"/><text x="1119.00" y="238.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:26) (1 samples, 0.37%)</title><rect x="1120" y="820" width="5" height="15" fill="rgb(222,159,53)"/><text x="1123.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1120" y="836" width="5" height="15" fill="rgb(229,134,2)"/><text x="1123.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.37%)</title><rect x="1120" y="852" width="5" height="15" fill="rgb(210,203,39)"/><text x="1123.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.37%)</title><rect x="1120" y="868" width="5" height="15" fill="rgb(207,3,3)"/><text x="1123.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.37%)</title><rect x="1120" y="884" width="5" height="15" fill="rgb(214,41,38)"/><text x="1123.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.37%)</title><rect x="1120" y="900" width="5" height="15" fill="rgb(231,143,7)"/><text x="1123.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.37%)</title><rect x="1120" y="916" width="5" height="15" fill="rgb(206,71,7)"/><text x="1123.00" y="926.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.37%)</title><rect x="1120" y="932" width="5" height="15" fill="rgb(249,176,16)"/><text x="1123.00" y="942.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="1120" y="948" width="5" height="15" fill="rgb(238,48,7)"/><text x="1123.00" y="958.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1120" y="964" width="5" height="15" fill="rgb(253,227,29)"/><text x="1123.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1371) (1 samples, 0.37%)</title><rect x="1125" y="964" width="4" height="15" fill="rgb(243,64,46)"/><text x="1128.00" y="974.50"></text></g><g><title>_relax_case (&lt;frozen importlib._bootstrap_external&gt;:42) (1 samples, 0.37%)</title><rect x="1125" y="980" width="4" height="15" fill="rgb(246,204,47)"/><text x="1128.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.73%)</title><rect x="1125" y="820" width="8" height="15" fill="rgb(228,125,26)"/><text x="1128.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.73%)</title><rect x="1125" y="836" width="8" height="15" fill="rgb(208,103,23)"/><text x="1128.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.73%)</title><rect x="1125" y="852" width="8" height="15" fill="rgb(245,104,42)"/><text x="1128.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.73%)</title><rect x="1125" y="868" width="8" height="15" fill="rgb(231,14,20)"/><text x="1128.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.73%)</title><rect x="1125" y="884" width="8" height="15" fill="rgb(219,33,7)"/><text x="1128.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.73%)</title><rect x="1125" y="900" width="8" height="15" fill="rgb(232,207,37)"/><text x="1128.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.73%)</title><rect x="1125" y="916" width="8" height="15" fill="rgb(238,86,24)"/><text x="1128.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.73%)</title><rect x="1125" y="932" width="8" height="15" fill="rgb(213,105,42)"/><text x="1128.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.73%)</title><rect x="1125" y="948" width="8" height="15" fill="rgb(249,51,41)"/><text x="1128.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.37%)</title><rect x="1129" y="964" width="4" height="15" fill="rgb(252,142,9)"/><text x="1132.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.37%)</title><rect x="1129" y="980" width="4" height="15" fill="rgb(230,63,16)"/><text x="1132.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.37%)</title><rect x="1129" y="996" width="4" height="15" fill="rgb(206,92,28)"/><text x="1132.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.37%)</title><rect x="1129" y="1012" width="4" height="15" fill="rgb(207,83,3)"/><text x="1132.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="1129" y="1028" width="4" height="15" fill="rgb(216,174,31)"/><text x="1132.00" y="1038.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1129" y="1044" width="4" height="15" fill="rgb(250,108,46)"/><text x="1132.00" y="1054.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1129" y="1060" width="4" height="15" fill="rgb(224,200,2)"/><text x="1132.00" y="1070.50"></text></g><g><title>0x7f985553f6d9 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1129" y="1076" width="4" height="15" fill="rgb(232,188,9)"/><text x="1132.00" y="1086.50"></text></g><g><title>0x7f98555aed30 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1129" y="1092" width="4" height="15" fill="rgb(244,37,4)"/><text x="1132.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:2) (4 samples, 1.47%)</title><rect x="1120" y="148" width="18" height="15" fill="rgb(231,182,34)"/><text x="1123.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="164" width="18" height="15" fill="rgb(253,162,53)"/><text x="1123.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.47%)</title><rect x="1120" y="180" width="18" height="15" fill="rgb(247,52,0)"/><text x="1123.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="196" width="18" height="15" fill="rgb(221,104,52)"/><text x="1123.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="212" width="18" height="15" fill="rgb(219,19,0)"/><text x="1123.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="228" width="18" height="15" fill="rgb(206,227,17)"/><text x="1123.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="244" width="18" height="15" fill="rgb(211,206,7)"/><text x="1123.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="260" width="18" height="15" fill="rgb(247,210,10)"/><text x="1123.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="276" width="18" height="15" fill="rgb(210,218,35)"/><text x="1123.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.47%)</title><rect x="1120" y="292" width="18" height="15" fill="rgb(237,51,28)"/><text x="1123.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="308" width="18" height="15" fill="rgb(215,180,44)"/><text x="1123.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="324" width="18" height="15" fill="rgb(237,193,49)"/><text x="1123.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="340" width="18" height="15" fill="rgb(250,51,43)"/><text x="1123.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="356" width="18" height="15" fill="rgb(223,72,45)"/><text x="1123.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="372" width="18" height="15" fill="rgb(225,181,26)"/><text x="1123.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.47%)</title><rect x="1120" y="388" width="18" height="15" fill="rgb(227,20,15)"/><text x="1123.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="404" width="18" height="15" fill="rgb(254,163,18)"/><text x="1123.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="420" width="18" height="15" fill="rgb(235,157,25)"/><text x="1123.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="436" width="18" height="15" fill="rgb(217,221,52)"/><text x="1123.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="452" width="18" height="15" fill="rgb(242,36,7)"/><text x="1123.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="468" width="18" height="15" fill="rgb(252,99,11)"/><text x="1123.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.47%)</title><rect x="1120" y="484" width="18" height="15" fill="rgb(212,182,0)"/><text x="1123.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="500" width="18" height="15" fill="rgb(223,95,3)"/><text x="1123.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="516" width="18" height="15" fill="rgb(228,8,12)"/><text x="1123.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="532" width="18" height="15" fill="rgb(235,156,26)"/><text x="1123.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="548" width="18" height="15" fill="rgb(232,159,44)"/><text x="1123.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="564" width="18" height="15" fill="rgb(215,96,25)"/><text x="1123.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.47%)</title><rect x="1120" y="580" width="18" height="15" fill="rgb(228,207,11)"/><text x="1123.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="596" width="18" height="15" fill="rgb(209,100,4)"/><text x="1123.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.47%)</title><rect x="1120" y="612" width="18" height="15" fill="rgb(251,150,19)"/><text x="1123.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="628" width="18" height="15" fill="rgb(235,49,33)"/><text x="1123.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="644" width="18" height="15" fill="rgb(237,151,17)"/><text x="1123.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="660" width="18" height="15" fill="rgb(213,211,40)"/><text x="1123.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="676" width="18" height="15" fill="rgb(232,69,53)"/><text x="1123.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="692" width="18" height="15" fill="rgb(226,95,43)"/><text x="1123.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="708" width="18" height="15" fill="rgb(252,187,6)"/><text x="1123.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.47%)</title><rect x="1120" y="724" width="18" height="15" fill="rgb(240,116,37)"/><text x="1123.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1120" y="740" width="18" height="15" fill="rgb(239,57,10)"/><text x="1123.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1120" y="756" width="18" height="15" fill="rgb(231,117,7)"/><text x="1123.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1120" y="772" width="18" height="15" fill="rgb(234,91,1)"/><text x="1123.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1120" y="788" width="18" height="15" fill="rgb(234,209,8)"/><text x="1123.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1120" y="804" width="18" height="15" fill="rgb(221,34,7)"/><text x="1123.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.37%)</title><rect x="1133" y="820" width="5" height="15" fill="rgb(245,106,44)"/><text x="1136.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1133" y="836" width="5" height="15" fill="rgb(212,162,18)"/><text x="1136.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1133" y="852" width="5" height="15" fill="rgb(219,193,12)"/><text x="1136.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1133" y="868" width="5" height="15" fill="rgb(250,153,54)"/><text x="1136.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1133" y="884" width="5" height="15" fill="rgb(205,215,0)"/><text x="1136.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1133" y="900" width="5" height="15" fill="rgb(250,176,51)"/><text x="1136.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.37%)</title><rect x="1133" y="916" width="5" height="15" fill="rgb(235,28,35)"/><text x="1136.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1133" y="932" width="5" height="15" fill="rgb(207,75,23)"/><text x="1136.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1133" y="948" width="5" height="15" fill="rgb(228,223,8)"/><text x="1136.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.37%)</title><rect x="1133" y="964" width="5" height="15" fill="rgb(237,133,26)"/><text x="1136.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.37%)</title><rect x="1133" y="980" width="5" height="15" fill="rgb(235,174,54)"/><text x="1136.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.37%)</title><rect x="1133" y="996" width="5" height="15" fill="rgb(240,199,20)"/><text x="1136.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1133" y="1012" width="5" height="15" fill="rgb(221,180,22)"/><text x="1136.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1133" y="1028" width="5" height="15" fill="rgb(241,163,28)"/><text x="1136.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1133" y="1044" width="5" height="15" fill="rgb(210,19,8)"/><text x="1136.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1133" y="1060" width="5" height="15" fill="rgb(239,150,3)"/><text x="1136.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1133" y="1076" width="5" height="15" fill="rgb(235,142,14)"/><text x="1136.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.37%)</title><rect x="1133" y="1092" width="5" height="15" fill="rgb(250,137,30)"/><text x="1136.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5545) (1 samples, 0.37%)</title><rect x="1133" y="1108" width="5" height="15" fill="rgb(242,165,22)"/><text x="1136.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2703) (1 samples, 0.37%)</title><rect x="1133" y="1124" width="5" height="15" fill="rgb(207,25,10)"/><text x="1136.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.37%)</title><rect x="1133" y="1140" width="5" height="15" fill="rgb(214,6,53)"/><text x="1136.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="1133" y="1156" width="5" height="15" fill="rgb(211,42,40)"/><text x="1136.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.37%)</title><rect x="1133" y="1172" width="5" height="15" fill="rgb(233,40,14)"/><text x="1136.00" y="1182.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.37%)</title><rect x="1133" y="1188" width="5" height="15" fill="rgb(210,91,52)"/><text x="1136.00" y="1198.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.37%)</title><rect x="1133" y="1204" width="5" height="15" fill="rgb(208,84,53)"/><text x="1136.00" y="1214.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.37%)</title><rect x="1133" y="1220" width="5" height="15" fill="rgb(234,43,35)"/><text x="1136.00" y="1230.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:4) (1 samples, 0.37%)</title><rect x="1138" y="148" width="4" height="15" fill="rgb(254,64,10)"/><text x="1141.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="164" width="4" height="15" fill="rgb(254,118,53)"/><text x="1141.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="180" width="4" height="15" fill="rgb(252,153,19)"/><text x="1141.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="196" width="4" height="15" fill="rgb(208,169,42)"/><text x="1141.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="212" width="4" height="15" fill="rgb(208,121,8)"/><text x="1141.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="228" width="4" height="15" fill="rgb(237,197,26)"/><text x="1141.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.37%)</title><rect x="1138" y="244" width="4" height="15" fill="rgb(239,181,12)"/><text x="1141.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="260" width="4" height="15" fill="rgb(247,27,48)"/><text x="1141.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="276" width="4" height="15" fill="rgb(252,16,14)"/><text x="1141.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="292" width="4" height="15" fill="rgb(225,89,52)"/><text x="1141.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="308" width="4" height="15" fill="rgb(223,23,9)"/><text x="1141.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="324" width="4" height="15" fill="rgb(250,185,15)"/><text x="1141.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.37%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(223,114,25)"/><text x="1141.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="356" width="4" height="15" fill="rgb(216,191,9)"/><text x="1141.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="372" width="4" height="15" fill="rgb(210,59,14)"/><text x="1141.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="388" width="4" height="15" fill="rgb(207,49,25)"/><text x="1141.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="404" width="4" height="15" fill="rgb(236,169,42)"/><text x="1141.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="420" width="4" height="15" fill="rgb(234,130,36)"/><text x="1141.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.37%)</title><rect x="1138" y="436" width="4" height="15" fill="rgb(227,3,29)"/><text x="1141.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="452" width="4" height="15" fill="rgb(214,179,32)"/><text x="1141.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="468" width="4" height="15" fill="rgb(211,66,7)"/><text x="1141.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="484" width="4" height="15" fill="rgb(207,56,3)"/><text x="1141.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="500" width="4" height="15" fill="rgb(226,24,20)"/><text x="1141.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="516" width="4" height="15" fill="rgb(224,194,32)"/><text x="1141.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.37%)</title><rect x="1138" y="532" width="4" height="15" fill="rgb(229,33,3)"/><text x="1141.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="548" width="4" height="15" fill="rgb(251,94,5)"/><text x="1141.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="564" width="4" height="15" fill="rgb(212,187,28)"/><text x="1141.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="580" width="4" height="15" fill="rgb(249,50,33)"/><text x="1141.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="1138" y="596" width="4" height="15" fill="rgb(248,153,14)"/><text x="1141.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="612" width="4" height="15" fill="rgb(237,217,27)"/><text x="1141.00" y="622.50"></text></g><g><title>0x7f982f455373 (?) (1 samples, 0.37%)</title><rect x="1138" y="628" width="4" height="15" fill="rgb(205,83,12)"/><text x="1141.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="644" width="4" height="15" fill="rgb(228,108,1)"/><text x="1141.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="660" width="4" height="15" fill="rgb(216,106,48)"/><text x="1141.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="676" width="4" height="15" fill="rgb(209,204,16)"/><text x="1141.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="1138" y="692" width="4" height="15" fill="rgb(216,95,54)"/><text x="1141.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="708" width="4" height="15" fill="rgb(223,9,14)"/><text x="1141.00" y="718.50"></text></g><g><title>0x7f982f218eea (?) (1 samples, 0.37%)</title><rect x="1138" y="724" width="4" height="15" fill="rgb(213,38,47)"/><text x="1141.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="740" width="4" height="15" fill="rgb(226,163,9)"/><text x="1141.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="756" width="4" height="15" fill="rgb(220,126,43)"/><text x="1141.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="772" width="4" height="15" fill="rgb(244,160,19)"/><text x="1141.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="1138" y="788" width="4" height="15" fill="rgb(220,53,28)"/><text x="1141.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="804" width="4" height="15" fill="rgb(224,227,9)"/><text x="1141.00" y="814.50"></text></g><g><title>0x7f982efb1887 (?) (1 samples, 0.37%)</title><rect x="1138" y="820" width="4" height="15" fill="rgb(252,15,42)"/><text x="1141.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="836" width="4" height="15" fill="rgb(217,220,21)"/><text x="1141.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="1138" y="852" width="4" height="15" fill="rgb(240,187,21)"/><text x="1141.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="868" width="4" height="15" fill="rgb(243,20,32)"/><text x="1141.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="884" width="4" height="15" fill="rgb(236,28,23)"/><text x="1141.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="900" width="4" height="15" fill="rgb(216,225,9)"/><text x="1141.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="916" width="4" height="15" fill="rgb(227,153,25)"/><text x="1141.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="932" width="4" height="15" fill="rgb(254,187,45)"/><text x="1141.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="948" width="4" height="15" fill="rgb(225,188,4)"/><text x="1141.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.37%)</title><rect x="1138" y="964" width="4" height="15" fill="rgb(222,204,22)"/><text x="1141.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="980" width="4" height="15" fill="rgb(225,71,10)"/><text x="1141.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="996" width="4" height="15" fill="rgb(213,33,21)"/><text x="1141.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="1012" width="4" height="15" fill="rgb(207,226,8)"/><text x="1141.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="1028" width="4" height="15" fill="rgb(206,67,33)"/><text x="1141.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="1044" width="4" height="15" fill="rgb(212,90,0)"/><text x="1141.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py:22) (1 samples, 0.37%)</title><rect x="1138" y="1060" width="4" height="15" fill="rgb(205,38,43)"/><text x="1141.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="1076" width="4" height="15" fill="rgb(225,164,37)"/><text x="1141.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="1092" width="4" height="15" fill="rgb(241,12,8)"/><text x="1141.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="1108" width="4" height="15" fill="rgb(231,120,49)"/><text x="1141.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1138" y="1124" width="4" height="15" fill="rgb(238,90,18)"/><text x="1141.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1138" y="1140" width="4" height="15" fill="rgb(215,190,48)"/><text x="1141.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py:8) (1 samples, 0.37%)</title><rect x="1138" y="1156" width="4" height="15" fill="rgb(206,55,32)"/><text x="1141.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1138" y="1172" width="4" height="15" fill="rgb(236,24,26)"/><text x="1141.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1138" y="1188" width="4" height="15" fill="rgb(221,196,2)"/><text x="1141.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1138" y="1204" width="4" height="15" fill="rgb(235,132,14)"/><text x="1141.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="1138" y="1220" width="4" height="15" fill="rgb(238,51,3)"/><text x="1141.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:853) (1 samples, 0.37%)</title><rect x="1138" y="1236" width="4" height="15" fill="rgb(251,227,39)"/><text x="1141.00" y="1246.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ec.py:430) (1 samples, 0.37%)</title><rect x="1142" y="1524" width="4" height="15" fill="rgb(226,37,24)"/><text x="1145.00" y="1534.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (2 samples, 0.73%)</title><rect x="1142" y="900" width="9" height="15" fill="rgb(232,121,37)"/><text x="1145.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="916" width="9" height="15" fill="rgb(241,194,30)"/><text x="1145.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.73%)</title><rect x="1142" y="932" width="9" height="15" fill="rgb(208,194,9)"/><text x="1145.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="948" width="9" height="15" fill="rgb(232,199,22)"/><text x="1145.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="964" width="9" height="15" fill="rgb(248,189,49)"/><text x="1145.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1142" y="980" width="9" height="15" fill="rgb(206,151,2)"/><text x="1145.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1142" y="996" width="9" height="15" fill="rgb(226,11,16)"/><text x="1145.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1142" y="1012" width="9" height="15" fill="rgb(213,133,35)"/><text x="1145.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1028" width="9" height="15" fill="rgb(220,153,24)"/><text x="1145.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (2 samples, 0.73%)</title><rect x="1142" y="1044" width="9" height="15" fill="rgb(210,72,40)"/><text x="1145.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="1142" y="1060" width="9" height="15" fill="rgb(213,87,4)"/><text x="1145.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1076" width="9" height="15" fill="rgb(251,214,31)"/><text x="1145.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="1092" width="9" height="15" fill="rgb(241,223,29)"/><text x="1145.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1142" y="1108" width="9" height="15" fill="rgb(210,66,50)"/><text x="1145.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1142" y="1124" width="9" height="15" fill="rgb(244,119,53)"/><text x="1145.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1142" y="1140" width="9" height="15" fill="rgb(227,106,46)"/><text x="1145.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1156" width="9" height="15" fill="rgb(240,194,19)"/><text x="1145.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (2 samples, 0.73%)</title><rect x="1142" y="1172" width="9" height="15" fill="rgb(241,195,46)"/><text x="1145.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="1142" y="1188" width="9" height="15" fill="rgb(247,120,1)"/><text x="1145.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1204" width="9" height="15" fill="rgb(253,50,14)"/><text x="1145.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="1220" width="9" height="15" fill="rgb(212,201,46)"/><text x="1145.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1142" y="1236" width="9" height="15" fill="rgb(233,212,54)"/><text x="1145.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1142" y="1252" width="9" height="15" fill="rgb(228,105,44)"/><text x="1145.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1142" y="1268" width="9" height="15" fill="rgb(239,167,25)"/><text x="1145.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1284" width="9" height="15" fill="rgb(234,94,35)"/><text x="1145.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (2 samples, 0.73%)</title><rect x="1142" y="1300" width="9" height="15" fill="rgb(210,108,13)"/><text x="1145.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="1316" width="9" height="15" fill="rgb(238,196,46)"/><text x="1145.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1142" y="1332" width="9" height="15" fill="rgb(235,224,9)"/><text x="1145.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1142" y="1348" width="9" height="15" fill="rgb(245,154,47)"/><text x="1145.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1142" y="1364" width="9" height="15" fill="rgb(242,193,15)"/><text x="1145.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1380" width="9" height="15" fill="rgb(233,112,30)"/><text x="1145.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:15) (2 samples, 0.73%)</title><rect x="1142" y="1396" width="9" height="15" fill="rgb(210,26,18)"/><text x="1145.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="1142" y="1412" width="9" height="15" fill="rgb(206,160,53)"/><text x="1145.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1428" width="9" height="15" fill="rgb(215,134,1)"/><text x="1145.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1142" y="1444" width="9" height="15" fill="rgb(208,105,13)"/><text x="1145.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1142" y="1460" width="9" height="15" fill="rgb(238,110,44)"/><text x="1145.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1142" y="1476" width="9" height="15" fill="rgb(242,0,49)"/><text x="1145.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1142" y="1492" width="9" height="15" fill="rgb(229,36,4)"/><text x="1145.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1142" y="1508" width="9" height="15" fill="rgb(244,103,14)"/><text x="1145.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ec.py:466) (1 samples, 0.37%)</title><rect x="1146" y="1524" width="5" height="15" fill="rgb(206,84,37)"/><text x="1149.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 1.10%)</title><rect x="1142" y="340" width="13" height="15" fill="rgb(232,172,42)"/><text x="1145.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="356" width="13" height="15" fill="rgb(223,197,37)"/><text x="1145.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.10%)</title><rect x="1142" y="372" width="13" height="15" fill="rgb(241,163,14)"/><text x="1145.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="388" width="13" height="15" fill="rgb(242,152,42)"/><text x="1145.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="404" width="13" height="15" fill="rgb(236,156,44)"/><text x="1145.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1142" y="420" width="13" height="15" fill="rgb(248,188,35)"/><text x="1145.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1142" y="436" width="13" height="15" fill="rgb(246,110,25)"/><text x="1145.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1142" y="452" width="13" height="15" fill="rgb(211,169,8)"/><text x="1145.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="468" width="13" height="15" fill="rgb(218,32,9)"/><text x="1145.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 1.10%)</title><rect x="1142" y="484" width="13" height="15" fill="rgb(238,191,46)"/><text x="1145.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="500" width="13" height="15" fill="rgb(226,165,0)"/><text x="1145.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1142" y="516" width="13" height="15" fill="rgb(224,199,30)"/><text x="1145.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1142" y="532" width="13" height="15" fill="rgb(210,97,10)"/><text x="1145.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1142" y="548" width="13" height="15" fill="rgb(224,48,42)"/><text x="1145.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="564" width="13" height="15" fill="rgb(244,2,27)"/><text x="1145.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 1.10%)</title><rect x="1142" y="580" width="13" height="15" fill="rgb(212,212,20)"/><text x="1145.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="596" width="13" height="15" fill="rgb(226,186,1)"/><text x="1145.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1142" y="612" width="13" height="15" fill="rgb(248,34,3)"/><text x="1145.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1142" y="628" width="13" height="15" fill="rgb(206,209,27)"/><text x="1145.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1142" y="644" width="13" height="15" fill="rgb(212,1,10)"/><text x="1145.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="660" width="13" height="15" fill="rgb(243,192,47)"/><text x="1145.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 1.10%)</title><rect x="1142" y="676" width="13" height="15" fill="rgb(208,116,50)"/><text x="1145.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="692" width="13" height="15" fill="rgb(249,183,27)"/><text x="1145.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1142" y="708" width="13" height="15" fill="rgb(228,99,6)"/><text x="1145.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1142" y="724" width="13" height="15" fill="rgb(244,104,5)"/><text x="1145.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1142" y="740" width="13" height="15" fill="rgb(250,145,4)"/><text x="1145.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="756" width="13" height="15" fill="rgb(216,182,0)"/><text x="1145.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (3 samples, 1.10%)</title><rect x="1142" y="772" width="13" height="15" fill="rgb(242,158,20)"/><text x="1145.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.10%)</title><rect x="1142" y="788" width="13" height="15" fill="rgb(248,113,49)"/><text x="1145.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="804" width="13" height="15" fill="rgb(236,68,53)"/><text x="1145.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1142" y="820" width="13" height="15" fill="rgb(246,77,25)"/><text x="1145.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1142" y="836" width="13" height="15" fill="rgb(205,5,16)"/><text x="1145.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1142" y="852" width="13" height="15" fill="rgb(218,187,26)"/><text x="1145.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1142" y="868" width="13" height="15" fill="rgb(245,12,35)"/><text x="1145.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1142" y="884" width="13" height="15" fill="rgb(251,147,51)"/><text x="1145.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.37%)</title><rect x="1151" y="900" width="4" height="15" fill="rgb(244,49,37)"/><text x="1154.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1151" y="916" width="4" height="15" fill="rgb(217,218,25)"/><text x="1154.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1151" y="932" width="4" height="15" fill="rgb(236,51,45)"/><text x="1154.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1151" y="948" width="4" height="15" fill="rgb(235,1,40)"/><text x="1154.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1151" y="964" width="4" height="15" fill="rgb(210,38,39)"/><text x="1154.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1151" y="980" width="4" height="15" fill="rgb(240,32,10)"/><text x="1154.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.37%)</title><rect x="1151" y="996" width="4" height="15" fill="rgb(253,33,50)"/><text x="1154.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1151" y="1012" width="4" height="15" fill="rgb(237,65,10)"/><text x="1154.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1151" y="1028" width="4" height="15" fill="rgb(250,90,1)"/><text x="1154.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1151" y="1044" width="4" height="15" fill="rgb(246,101,42)"/><text x="1154.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1151" y="1060" width="4" height="15" fill="rgb(222,59,19)"/><text x="1154.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1151" y="1076" width="4" height="15" fill="rgb(220,206,50)"/><text x="1154.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:56) (1 samples, 0.37%)</title><rect x="1151" y="1092" width="4" height="15" fill="rgb(223,213,24)"/><text x="1154.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1151" y="1108" width="4" height="15" fill="rgb(223,157,25)"/><text x="1154.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1151" y="1124" width="4" height="15" fill="rgb(249,149,1)"/><text x="1154.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1151" y="1140" width="4" height="15" fill="rgb(239,170,44)"/><text x="1154.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1151" y="1156" width="4" height="15" fill="rgb(244,61,43)"/><text x="1154.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1151" y="1172" width="4" height="15" fill="rgb(222,12,16)"/><text x="1154.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py:90) (1 samples, 0.37%)</title><rect x="1151" y="1188" width="4" height="15" fill="rgb(217,39,33)"/><text x="1154.00" y="1198.50"></text></g><g><title>_OCSPResponse (cryptography/hazmat/backends/openssl/ocsp.py:282) (1 samples, 0.37%)</title><rect x="1151" y="1204" width="4" height="15" fill="rgb(216,94,26)"/><text x="1154.00" y="1214.50"></text></g><g><title>_requires_successful_response (cryptography/hazmat/backends/openssl/ocsp.py:26) (1 samples, 0.37%)</title><rect x="1151" y="1220" width="4" height="15" fill="rgb(216,26,37)"/><text x="1154.00" y="1230.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.37%)</title><rect x="1151" y="1236" width="4" height="15" fill="rgb(241,36,8)"/><text x="1154.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.47%)</title><rect x="1142" y="244" width="17" height="15" fill="rgb(248,44,41)"/><text x="1145.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.47%)</title><rect x="1142" y="260" width="17" height="15" fill="rgb(209,189,51)"/><text x="1145.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.47%)</title><rect x="1142" y="276" width="17" height="15" fill="rgb(247,89,17)"/><text x="1145.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.47%)</title><rect x="1142" y="292" width="17" height="15" fill="rgb(234,106,44)"/><text x="1145.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.47%)</title><rect x="1142" y="308" width="17" height="15" fill="rgb(247,40,46)"/><text x="1145.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.47%)</title><rect x="1142" y="324" width="17" height="15" fill="rgb(252,18,34)"/><text x="1145.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.37%)</title><rect x="1155" y="340" width="4" height="15" fill="rgb(212,199,20)"/><text x="1158.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="356" width="4" height="15" fill="rgb(243,117,25)"/><text x="1158.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="1155" y="372" width="4" height="15" fill="rgb(206,55,46)"/><text x="1158.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="388" width="4" height="15" fill="rgb(224,177,37)"/><text x="1158.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="404" width="4" height="15" fill="rgb(214,219,40)"/><text x="1158.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="420" width="4" height="15" fill="rgb(209,30,30)"/><text x="1158.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="436" width="4" height="15" fill="rgb(223,23,29)"/><text x="1158.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="452" width="4" height="15" fill="rgb(236,97,33)"/><text x="1158.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="468" width="4" height="15" fill="rgb(224,209,30)"/><text x="1158.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.37%)</title><rect x="1155" y="484" width="4" height="15" fill="rgb(239,212,44)"/><text x="1158.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="500" width="4" height="15" fill="rgb(221,215,49)"/><text x="1158.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="516" width="4" height="15" fill="rgb(241,59,53)"/><text x="1158.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="532" width="4" height="15" fill="rgb(249,47,11)"/><text x="1158.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="548" width="4" height="15" fill="rgb(211,94,17)"/><text x="1158.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="564" width="4" height="15" fill="rgb(207,191,14)"/><text x="1158.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.37%)</title><rect x="1155" y="580" width="4" height="15" fill="rgb(218,73,53)"/><text x="1158.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="596" width="4" height="15" fill="rgb(248,89,23)"/><text x="1158.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="612" width="4" height="15" fill="rgb(244,51,33)"/><text x="1158.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="628" width="4" height="15" fill="rgb(228,143,50)"/><text x="1158.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="644" width="4" height="15" fill="rgb(235,196,43)"/><text x="1158.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="660" width="4" height="15" fill="rgb(223,199,5)"/><text x="1158.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py:6) (1 samples, 0.37%)</title><rect x="1155" y="676" width="4" height="15" fill="rgb(210,37,13)"/><text x="1158.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="692" width="4" height="15" fill="rgb(210,173,41)"/><text x="1158.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="708" width="4" height="15" fill="rgb(213,83,26)"/><text x="1158.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="724" width="4" height="15" fill="rgb(251,99,17)"/><text x="1158.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="740" width="4" height="15" fill="rgb(207,196,29)"/><text x="1158.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="756" width="4" height="15" fill="rgb(231,164,10)"/><text x="1158.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py:7) (1 samples, 0.37%)</title><rect x="1155" y="772" width="4" height="15" fill="rgb(242,85,31)"/><text x="1158.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="788" width="4" height="15" fill="rgb(247,221,30)"/><text x="1158.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="804" width="4" height="15" fill="rgb(217,80,8)"/><text x="1158.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="820" width="4" height="15" fill="rgb(212,47,31)"/><text x="1158.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="836" width="4" height="15" fill="rgb(224,166,29)"/><text x="1158.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="852" width="4" height="15" fill="rgb(238,224,22)"/><text x="1158.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py:8) (1 samples, 0.37%)</title><rect x="1155" y="868" width="4" height="15" fill="rgb(215,58,27)"/><text x="1158.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="884" width="4" height="15" fill="rgb(222,93,35)"/><text x="1158.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="1155" y="900" width="4" height="15" fill="rgb(220,179,21)"/><text x="1158.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="916" width="4" height="15" fill="rgb(210,150,11)"/><text x="1158.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="932" width="4" height="15" fill="rgb(243,151,33)"/><text x="1158.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="948" width="4" height="15" fill="rgb(228,6,18)"/><text x="1158.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="964" width="4" height="15" fill="rgb(231,183,13)"/><text x="1158.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="980" width="4" height="15" fill="rgb(250,11,54)"/><text x="1158.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="996" width="4" height="15" fill="rgb(238,124,4)"/><text x="1158.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py:6) (1 samples, 0.37%)</title><rect x="1155" y="1012" width="4" height="15" fill="rgb(227,194,13)"/><text x="1158.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="1028" width="4" height="15" fill="rgb(245,190,8)"/><text x="1158.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="1044" width="4" height="15" fill="rgb(236,172,37)"/><text x="1158.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="1060" width="4" height="15" fill="rgb(238,212,49)"/><text x="1158.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1155" y="1076" width="4" height="15" fill="rgb(220,29,33)"/><text x="1158.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1155" y="1092" width="4" height="15" fill="rgb(233,208,20)"/><text x="1158.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py:5) (1 samples, 0.37%)</title><rect x="1155" y="1108" width="4" height="15" fill="rgb(218,89,6)"/><text x="1158.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1155" y="1124" width="4" height="15" fill="rgb(227,222,21)"/><text x="1158.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1155" y="1140" width="4" height="15" fill="rgb(226,97,25)"/><text x="1158.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1155" y="1156" width="4" height="15" fill="rgb(253,141,42)"/><text x="1158.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.37%)</title><rect x="1155" y="1172" width="4" height="15" fill="rgb(238,157,10)"/><text x="1158.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:816) (1 samples, 0.37%)</title><rect x="1155" y="1188" width="4" height="15" fill="rgb(243,96,42)"/><text x="1158.00" y="1198.50"></text></g><g><title>0x7f985586418b (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1159" y="756" width="5" height="15" fill="rgb(206,84,7)"/><text x="1162.00" y="766.50"></text></g><g><title>0x7f9855859ad9 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1159" y="772" width="5" height="15" fill="rgb(250,30,38)"/><text x="1162.00" y="782.50"></text></g><g><title>0x7f98558614c5 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1159" y="788" width="5" height="15" fill="rgb(239,202,51)"/><text x="1162.00" y="798.50"></text></g><g><title>0x7f985586c0ba (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1159" y="804" width="5" height="15" fill="rgb(245,222,53)"/><text x="1162.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (2 samples, 0.73%)</title><rect x="1159" y="340" width="9" height="15" fill="rgb(241,180,3)"/><text x="1162.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1159" y="356" width="9" height="15" fill="rgb(229,105,17)"/><text x="1162.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1159" y="372" width="9" height="15" fill="rgb(209,196,25)"/><text x="1162.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1159" y="388" width="9" height="15" fill="rgb(238,225,33)"/><text x="1162.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1159" y="404" width="9" height="15" fill="rgb(253,101,4)"/><text x="1162.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1159" y="420" width="9" height="15" fill="rgb(233,195,33)"/><text x="1162.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:45) (2 samples, 0.73%)</title><rect x="1159" y="436" width="9" height="15" fill="rgb(213,199,14)"/><text x="1162.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1159" y="452" width="9" height="15" fill="rgb(237,130,43)"/><text x="1162.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1159" y="468" width="9" height="15" fill="rgb(252,141,2)"/><text x="1162.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1159" y="484" width="9" height="15" fill="rgb(241,198,29)"/><text x="1162.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1159" y="500" width="9" height="15" fill="rgb(241,7,51)"/><text x="1162.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1159" y="516" width="9" height="15" fill="rgb(239,75,33)"/><text x="1162.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_svmlight_format.py:30) (2 samples, 0.73%)</title><rect x="1159" y="532" width="9" height="15" fill="rgb(205,173,26)"/><text x="1162.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1159" y="548" width="9" height="15" fill="rgb(245,116,46)"/><text x="1162.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1159" y="564" width="9" height="15" fill="rgb(222,169,26)"/><text x="1162.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.73%)</title><rect x="1159" y="580" width="9" height="15" fill="rgb(233,207,20)"/><text x="1162.00" y="590.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.73%)</title><rect x="1159" y="596" width="9" height="15" fill="rgb(230,117,41)"/><text x="1162.00" y="606.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.73%)</title><rect x="1159" y="612" width="9" height="15" fill="rgb(240,214,28)"/><text x="1162.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1159" y="628" width="9" height="15" fill="rgb(233,108,42)"/><text x="1162.00" y="638.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="644" width="9" height="15" fill="rgb(243,164,43)"/><text x="1162.00" y="654.50"></text></g><g><title>0x7f9855816995 (libdl-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="660" width="9" height="15" fill="rgb(226,28,45)"/><text x="1162.00" y="670.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="676" width="9" height="15" fill="rgb(249,118,18)"/><text x="1162.00" y="686.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="692" width="9" height="15" fill="rgb(254,129,3)"/><text x="1162.00" y="702.50"></text></g><g><title>0x7f9855816258 (libdl-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="708" width="9" height="15" fill="rgb(253,62,24)"/><text x="1162.00" y="718.50"></text></g><g><title>0x7f9855863d7a (ld-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="724" width="9" height="15" fill="rgb(230,203,45)"/><text x="1162.00" y="734.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.73%)</title><rect x="1159" y="740" width="9" height="15" fill="rgb(207,213,27)"/><text x="1162.00" y="750.50"></text></g><g><title>0x7f9855864236 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1164" y="756" width="4" height="15" fill="rgb(233,178,50)"/><text x="1167.00" y="766.50"></text></g><g><title>0x7f9855861735 (ld-2.29.so) (1 samples, 0.37%)</title><rect x="1164" y="772" width="4" height="15" fill="rgb(223,55,26)"/><text x="1167.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.73%)</title><rect x="1168" y="676" width="9" height="15" fill="rgb(221,31,53)"/><text x="1171.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="692" width="9" height="15" fill="rgb(236,14,0)"/><text x="1171.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="708" width="9" height="15" fill="rgb(253,29,11)"/><text x="1171.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="724" width="9" height="15" fill="rgb(249,196,53)"/><text x="1171.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="740" width="9" height="15" fill="rgb(250,67,47)"/><text x="1171.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="756" width="9" height="15" fill="rgb(220,3,52)"/><text x="1171.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.73%)</title><rect x="1168" y="772" width="9" height="15" fill="rgb(212,194,1)"/><text x="1171.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="788" width="9" height="15" fill="rgb(234,170,6)"/><text x="1171.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="804" width="9" height="15" fill="rgb(247,15,36)"/><text x="1171.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="820" width="9" height="15" fill="rgb(211,9,48)"/><text x="1171.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="836" width="9" height="15" fill="rgb(205,109,26)"/><text x="1171.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="852" width="9" height="15" fill="rgb(238,100,12)"/><text x="1171.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.73%)</title><rect x="1168" y="868" width="9" height="15" fill="rgb(210,26,36)"/><text x="1171.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="884" width="9" height="15" fill="rgb(248,100,30)"/><text x="1171.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.73%)</title><rect x="1168" y="900" width="9" height="15" fill="rgb(224,194,7)"/><text x="1171.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="916" width="9" height="15" fill="rgb(254,184,54)"/><text x="1171.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="932" width="9" height="15" fill="rgb(220,124,26)"/><text x="1171.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="948" width="9" height="15" fill="rgb(252,78,4)"/><text x="1171.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="964" width="9" height="15" fill="rgb(239,24,34)"/><text x="1171.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="980" width="9" height="15" fill="rgb(212,46,19)"/><text x="1171.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="996" width="9" height="15" fill="rgb(239,116,48)"/><text x="1171.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.73%)</title><rect x="1168" y="1012" width="9" height="15" fill="rgb(248,194,39)"/><text x="1171.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="1028" width="9" height="15" fill="rgb(216,219,0)"/><text x="1171.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="1044" width="9" height="15" fill="rgb(216,189,30)"/><text x="1171.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="1060" width="9" height="15" fill="rgb(223,162,17)"/><text x="1171.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="1076" width="9" height="15" fill="rgb(248,109,36)"/><text x="1171.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1092" width="9" height="15" fill="rgb(252,218,23)"/><text x="1171.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.73%)</title><rect x="1168" y="1108" width="9" height="15" fill="rgb(235,145,9)"/><text x="1171.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="1168" y="1124" width="9" height="15" fill="rgb(209,17,2)"/><text x="1171.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1140" width="9" height="15" fill="rgb(237,48,47)"/><text x="1171.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="1156" width="9" height="15" fill="rgb(227,112,38)"/><text x="1171.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="1172" width="9" height="15" fill="rgb(235,48,13)"/><text x="1171.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="1188" width="9" height="15" fill="rgb(232,135,4)"/><text x="1171.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="1204" width="9" height="15" fill="rgb(219,48,9)"/><text x="1171.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1220" width="9" height="15" fill="rgb(244,148,39)"/><text x="1171.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.73%)</title><rect x="1168" y="1236" width="9" height="15" fill="rgb(234,84,13)"/><text x="1171.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.73%)</title><rect x="1168" y="1252" width="9" height="15" fill="rgb(229,11,17)"/><text x="1171.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1268" width="9" height="15" fill="rgb(246,97,20)"/><text x="1171.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="1284" width="9" height="15" fill="rgb(240,106,49)"/><text x="1171.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="1300" width="9" height="15" fill="rgb(232,103,17)"/><text x="1171.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="1316" width="9" height="15" fill="rgb(239,169,16)"/><text x="1171.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="1332" width="9" height="15" fill="rgb(228,107,21)"/><text x="1171.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1348" width="9" height="15" fill="rgb(205,7,2)"/><text x="1171.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.73%)</title><rect x="1168" y="1364" width="9" height="15" fill="rgb(237,197,9)"/><text x="1171.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.73%)</title><rect x="1168" y="1380" width="9" height="15" fill="rgb(209,133,29)"/><text x="1171.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.73%)</title><rect x="1168" y="1396" width="9" height="15" fill="rgb(212,8,9)"/><text x="1171.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.73%)</title><rect x="1168" y="1412" width="9" height="15" fill="rgb(230,24,5)"/><text x="1171.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.73%)</title><rect x="1168" y="1428" width="9" height="15" fill="rgb(216,75,47)"/><text x="1171.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.73%)</title><rect x="1168" y="1444" width="9" height="15" fill="rgb(217,169,38)"/><text x="1171.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.73%)</title><rect x="1168" y="1460" width="9" height="15" fill="rgb(253,148,0)"/><text x="1171.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.73%)</title><rect x="1168" y="1476" width="9" height="15" fill="rgb(205,86,20)"/><text x="1171.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.73%)</title><rect x="1168" y="1492" width="9" height="15" fill="rgb(238,154,8)"/><text x="1171.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.73%)</title><rect x="1168" y="1508" width="9" height="15" fill="rgb(228,140,6)"/><text x="1171.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.37%)</title><rect x="1172" y="1524" width="5" height="15" fill="rgb(233,206,34)"/><text x="1175.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.37%)</title><rect x="1172" y="1540" width="5" height="15" fill="rgb(216,7,5)"/><text x="1175.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.37%)</title><rect x="1172" y="1556" width="5" height="15" fill="rgb(211,38,40)"/><text x="1175.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.37%)</title><rect x="1172" y="1572" width="5" height="15" fill="rgb(247,116,2)"/><text x="1175.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.37%)</title><rect x="1172" y="1588" width="5" height="15" fill="rgb(223,126,43)"/><text x="1175.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.37%)</title><rect x="1172" y="1604" width="5" height="15" fill="rgb(248,22,36)"/><text x="1175.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.37%)</title><rect x="1172" y="1620" width="5" height="15" fill="rgb(225,191,42)"/><text x="1175.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.37%)</title><rect x="1172" y="1636" width="5" height="15" fill="rgb(213,143,31)"/><text x="1175.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="1172" y="1652" width="5" height="15" fill="rgb(244,213,14)"/><text x="1175.00" y="1662.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.37%)</title><rect x="1172" y="1668" width="5" height="15" fill="rgb(251,175,29)"/><text x="1175.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:4) (14 samples, 5.13%)</title><rect x="1120" y="52" width="61" height="15" fill="rgb(245,7,25)"/><text x="1123.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 5.13%)</title><rect x="1120" y="68" width="61" height="15" fill="rgb(231,104,8)"/><text x="1123.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 5.13%)</title><rect x="1120" y="84" width="61" height="15" fill="rgb(233,46,20)"/><text x="1123.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 5.13%)</title><rect x="1120" y="100" width="61" height="15" fill="rgb(227,52,26)"/><text x="1123.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 5.13%)</title><rect x="1120" y="116" width="61" height="15" fill="rgb(212,108,22)"/><text x="1123.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 5.13%)</title><rect x="1120" y="132" width="61" height="15" fill="rgb(236,53,54)"/><text x="1123.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py:7) (9 samples, 3.30%)</title><rect x="1142" y="148" width="39" height="15" fill="rgb(217,59,2)"/><text x="1145.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.30%)</title><rect x="1142" y="164" width="39" height="15" fill="rgb(223,126,22)"/><text x="1145.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.30%)</title><rect x="1142" y="180" width="39" height="15" fill="rgb(214,18,18)"/><text x="1145.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.30%)</title><rect x="1142" y="196" width="39" height="15" fill="rgb(227,217,26)"/><text x="1145.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.30%)</title><rect x="1142" y="212" width="39" height="15" fill="rgb(226,182,24)"/><text x="1145.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.30%)</title><rect x="1142" y="228" width="39" height="15" fill="rgb(238,27,35)"/><text x="1145.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.83%)</title><rect x="1159" y="244" width="22" height="15" fill="rgb(222,115,3)"/><text x="1162.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.83%)</title><rect x="1159" y="260" width="22" height="15" fill="rgb(206,12,13)"/><text x="1162.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.83%)</title><rect x="1159" y="276" width="22" height="15" fill="rgb(225,125,25)"/><text x="1162.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.83%)</title><rect x="1159" y="292" width="22" height="15" fill="rgb(222,216,21)"/><text x="1162.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.83%)</title><rect x="1159" y="308" width="22" height="15" fill="rgb(230,62,42)"/><text x="1162.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.83%)</title><rect x="1159" y="324" width="22" height="15" fill="rgb(228,192,22)"/><text x="1162.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 1.10%)</title><rect x="1168" y="340" width="13" height="15" fill="rgb(244,110,24)"/><text x="1171.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1168" y="356" width="13" height="15" fill="rgb(230,167,1)"/><text x="1171.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1168" y="372" width="13" height="15" fill="rgb(239,148,15)"/><text x="1171.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1168" y="388" width="13" height="15" fill="rgb(227,13,46)"/><text x="1171.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1168" y="404" width="13" height="15" fill="rgb(244,196,18)"/><text x="1171.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1168" y="420" width="13" height="15" fill="rgb(233,171,52)"/><text x="1171.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.10%)</title><rect x="1168" y="436" width="13" height="15" fill="rgb(206,195,47)"/><text x="1171.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1168" y="452" width="13" height="15" fill="rgb(209,137,6)"/><text x="1171.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.10%)</title><rect x="1168" y="468" width="13" height="15" fill="rgb(248,32,49)"/><text x="1171.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1168" y="484" width="13" height="15" fill="rgb(241,114,19)"/><text x="1171.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1168" y="500" width="13" height="15" fill="rgb(226,101,3)"/><text x="1171.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1168" y="516" width="13" height="15" fill="rgb(223,39,1)"/><text x="1171.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1168" y="532" width="13" height="15" fill="rgb(241,49,47)"/><text x="1171.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1168" y="548" width="13" height="15" fill="rgb(226,206,51)"/><text x="1171.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1168" y="564" width="13" height="15" fill="rgb(245,76,38)"/><text x="1171.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.10%)</title><rect x="1168" y="580" width="13" height="15" fill="rgb(205,128,13)"/><text x="1171.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.10%)</title><rect x="1168" y="596" width="13" height="15" fill="rgb(218,125,24)"/><text x="1171.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.10%)</title><rect x="1168" y="612" width="13" height="15" fill="rgb(236,163,31)"/><text x="1171.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.10%)</title><rect x="1168" y="628" width="13" height="15" fill="rgb(238,49,6)"/><text x="1171.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.10%)</title><rect x="1168" y="644" width="13" height="15" fill="rgb(231,14,6)"/><text x="1171.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.10%)</title><rect x="1168" y="660" width="13" height="15" fill="rgb(217,190,1)"/><text x="1171.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:17) (1 samples, 0.37%)</title><rect x="1177" y="676" width="4" height="15" fill="rgb(227,118,52)"/><text x="1180.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1177" y="692" width="4" height="15" fill="rgb(227,146,38)"/><text x="1180.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="1177" y="708" width="4" height="15" fill="rgb(220,164,22)"/><text x="1180.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1177" y="724" width="4" height="15" fill="rgb(252,223,9)"/><text x="1180.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1177" y="740" width="4" height="15" fill="rgb(205,106,24)"/><text x="1180.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1177" y="756" width="4" height="15" fill="rgb(239,142,4)"/><text x="1180.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1177" y="772" width="4" height="15" fill="rgb(242,95,6)"/><text x="1180.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1177" y="788" width="4" height="15" fill="rgb(213,167,31)"/><text x="1180.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1177" y="804" width="4" height="15" fill="rgb(205,224,27)"/><text x="1180.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/__init__.py:5) (1 samples, 0.37%)</title><rect x="1177" y="820" width="4" height="15" fill="rgb(250,199,7)"/><text x="1180.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1177" y="836" width="4" height="15" fill="rgb(209,99,14)"/><text x="1180.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1177" y="852" width="4" height="15" fill="rgb(234,71,1)"/><text x="1180.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1177" y="868" width="4" height="15" fill="rgb(237,218,16)"/><text x="1180.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1177" y="884" width="4" height="15" fill="rgb(212,218,25)"/><text x="1180.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1177" y="900" width="4" height="15" fill="rgb(236,190,39)"/><text x="1180.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_helper.py:6) (1 samples, 0.37%)</title><rect x="1177" y="916" width="4" height="15" fill="rgb(252,110,16)"/><text x="1180.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1177" y="932" width="4" height="15" fill="rgb(221,150,45)"/><text x="1180.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1177" y="948" width="4" height="15" fill="rgb(245,190,4)"/><text x="1180.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="1177" y="964" width="4" height="15" fill="rgb(230,33,47)"/><text x="1180.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="1177" y="980" width="4" height="15" fill="rgb(224,214,31)"/><text x="1180.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="1177" y="996" width="4" height="15" fill="rgb(216,6,9)"/><text x="1180.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/optim/onnx_optimisation.py:7) (1 samples, 0.37%)</title><rect x="1177" y="1012" width="4" height="15" fill="rgb(225,197,37)"/><text x="1180.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="1177" y="1028" width="4" height="15" fill="rgb(229,0,35)"/><text x="1180.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="1177" y="1044" width="4" height="15" fill="rgb(207,183,47)"/><text x="1180.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.37%)</title><rect x="1177" y="1060" width="4" height="15" fill="rgb(231,168,19)"/><text x="1180.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.37%)</title><rect x="1177" y="1076" width="4" height="15" fill="rgb(224,184,35)"/><text x="1180.00" y="1086.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:508) (1 samples, 0.37%)</title><rect x="1177" y="1092" width="4" height="15" fill="rgb(223,128,46)"/><text x="1180.00" y="1102.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py:203) (1 samples, 0.37%)</title><rect x="1181" y="196" width="4" height="15" fill="rgb(224,218,41)"/><text x="1184.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py:74) (1 samples, 0.37%)</title><rect x="1181" y="212" width="4" height="15" fill="rgb(245,8,0)"/><text x="1184.00" y="222.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py:246) (1 samples, 0.37%)</title><rect x="1181" y="228" width="4" height="15" fill="rgb(218,11,49)"/><text x="1184.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.37%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(217,173,54)"/><text x="1184.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.37%)</title><rect x="1181" y="260" width="4" height="15" fill="rgb(216,132,8)"/><text x="1184.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.37%)</title><rect x="1181" y="276" width="4" height="15" fill="rgb(205,185,32)"/><text x="1184.00" y="286.50"></text></g><g><title>extract (traceback.py:347) (1 samples, 0.37%)</title><rect x="1181" y="292" width="4" height="15" fill="rgb(238,147,6)"/><text x="1184.00" y="302.50"></text></g><g><title>all (273 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,179,31)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:45) (2 samples, 0.73%)</title><rect x="1181" y="52" width="9" height="15" fill="rgb(215,7,0)"/><text x="1184.00" y="62.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:44) (2 samples, 0.73%)</title><rect x="1181" y="68" width="9" height="15" fill="rgb(247,39,2)"/><text x="1184.00" y="78.50"></text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_double_.py:28) (2 samples, 0.73%)</title><rect x="1181" y="84" width="9" height="15" fill="rgb(218,37,7)"/><text x="1184.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.73%)</title><rect x="1181" y="100" width="9" height="15" fill="rgb(205,88,16)"/><text x="1184.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (2 samples, 0.73%)</title><rect x="1181" y="116" width="9" height="15" fill="rgb(207,27,54)"/><text x="1184.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:108) (2 samples, 0.73%)</title><rect x="1181" y="132" width="9" height="15" fill="rgb(224,106,54)"/><text x="1184.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.73%)</title><rect x="1181" y="148" width="9" height="15" fill="rgb(225,174,0)"/><text x="1184.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.73%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(208,108,26)"/><text x="1184.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.73%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(248,160,44)"/><text x="1184.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py:42) (1 samples, 0.37%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(230,173,38)"/><text x="1188.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.37%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(211,172,11)"/><text x="1188.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.37%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(212,139,42)"/><text x="1188.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:104) (1 samples, 0.37%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(207,87,2)"/><text x="1188.00" y="254.50"></text></g><g><title>find_switch_point (skl2onnx/common/tree_ensemble.py:63) (1 samples, 0.37%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(217,125,12)"/><text x="1188.00" y="270.50"></text></g><g><title>float_arrtype_new (scalartypes.c.src:2822) (1 samples, 0.37%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(217,192,27)"/><text x="1188.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.37%)</title><rect x="1185" y="292" width="5" height="15" fill="rgb(242,190,30)"/><text x="1188.00" y="302.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:354) (1 samples, 0.37%)</title><rect x="1185" y="308" width="5" height="15" fill="rgb(234,221,2)"/><text x="1188.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.37%)</title><rect x="1185" y="324" width="5" height="15" fill="rgb(224,220,18)"/><text x="1188.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.37%)</title><rect x="1185" y="340" width="5" height="15" fill="rgb(246,76,16)"/><text x="1188.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.37%)</title><rect x="1185" y="356" width="5" height="15" fill="rgb(218,172,39)"/><text x="1188.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:95) (1 samples, 0.37%)</title><rect x="1185" y="372" width="5" height="15" fill="rgb(243,75,10)"/><text x="1188.00" y="382.50"></text></g></g></svg>