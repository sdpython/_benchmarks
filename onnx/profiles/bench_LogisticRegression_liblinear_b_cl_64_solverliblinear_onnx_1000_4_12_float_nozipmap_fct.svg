<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1478" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1461.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1461.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(240,77,28)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(229,81,22)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(209,12,29)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(216,144,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(213,215,42)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(243,71,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.31%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(234,132,8)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(239,80,45)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(216,129,20)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(248,5,45)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(216,69,35)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(237,155,1)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(210,132,48)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(215,87,5)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(233,5,42)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(226,212,43)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(226,167,19)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(251,141,10)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(214,75,18)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(250,59,7)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(212,15,52)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.31%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(240,38,12)"/><text x="13.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(226,132,49)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(206,68,41)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(234,98,9)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(228,150,46)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(244,176,1)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(237,85,24)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(230,202,24)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(208,41,15)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(231,155,43)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(238,117,0)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(226,107,16)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(227,29,22)"/><text x="13.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(240,227,2)"/><text x="13.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.31%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(233,15,51)"/><text x="13.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.31%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(230,190,38)"/><text x="13.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.31%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(212,197,41)"/><text x="13.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.31%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(216,22,25)"/><text x="13.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="340" width="11" height="15" fill="rgb(222,139,54)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="356" width="11" height="15" fill="rgb(239,70,13)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="372" width="11" height="15" fill="rgb(244,190,28)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="388" width="11" height="15" fill="rgb(224,81,33)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="404" width="11" height="15" fill="rgb(218,117,44)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="420" width="11" height="15" fill="rgb(219,186,3)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.93%)</title><rect x="10" y="436" width="11" height="15" fill="rgb(236,181,30)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="452" width="11" height="15" fill="rgb(230,88,42)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="468" width="11" height="15" fill="rgb(215,90,21)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="484" width="11" height="15" fill="rgb(252,229,36)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="500" width="11" height="15" fill="rgb(239,139,48)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="516" width="11" height="15" fill="rgb(209,205,48)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.93%)</title><rect x="10" y="532" width="11" height="15" fill="rgb(218,31,1)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="548" width="11" height="15" fill="rgb(216,185,41)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="564" width="11" height="15" fill="rgb(253,110,35)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="580" width="11" height="15" fill="rgb(238,93,31)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(242,52,46)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(221,91,39)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.62%)</title><rect x="13" y="628" width="8" height="15" fill="rgb(253,180,50)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="644" width="8" height="15" fill="rgb(215,138,53)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="660" width="8" height="15" fill="rgb(245,97,7)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="676" width="8" height="15" fill="rgb(232,65,45)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="692" width="8" height="15" fill="rgb(254,137,1)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="708" width="8" height="15" fill="rgb(229,169,19)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.62%)</title><rect x="13" y="724" width="8" height="15" fill="rgb(230,110,0)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="740" width="8" height="15" fill="rgb(239,13,28)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="756" width="8" height="15" fill="rgb(205,164,9)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="772" width="8" height="15" fill="rgb(227,124,49)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="788" width="8" height="15" fill="rgb(222,204,16)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="804" width="8" height="15" fill="rgb(236,182,17)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.62%)</title><rect x="13" y="820" width="8" height="15" fill="rgb(214,152,6)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="836" width="8" height="15" fill="rgb(238,82,30)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="852" width="8" height="15" fill="rgb(213,12,30)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="868" width="8" height="15" fill="rgb(247,225,28)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="884" width="8" height="15" fill="rgb(242,94,45)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="900" width="8" height="15" fill="rgb(206,101,54)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.62%)</title><rect x="13" y="916" width="8" height="15" fill="rgb(232,229,51)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="932" width="8" height="15" fill="rgb(206,172,9)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="948" width="8" height="15" fill="rgb(226,167,13)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="964" width="8" height="15" fill="rgb(210,60,48)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="980" width="8" height="15" fill="rgb(224,40,28)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="996" width="8" height="15" fill="rgb(236,155,44)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.62%)</title><rect x="13" y="1012" width="8" height="15" fill="rgb(243,127,51)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1028" width="8" height="15" fill="rgb(249,17,14)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1044" width="8" height="15" fill="rgb(224,3,35)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1060" width="8" height="15" fill="rgb(254,141,5)"/><text x="16.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="1076" width="8" height="15" fill="rgb(251,177,24)"/><text x="16.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1092" width="8" height="15" fill="rgb(220,22,48)"/><text x="16.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.62%)</title><rect x="13" y="1108" width="8" height="15" fill="rgb(226,113,29)"/><text x="16.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1124" width="8" height="15" fill="rgb(233,73,20)"/><text x="16.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1140" width="8" height="15" fill="rgb(211,23,45)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1156" width="8" height="15" fill="rgb(240,182,5)"/><text x="16.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1172" width="8" height="15" fill="rgb(238,158,2)"/><text x="16.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1188" width="8" height="15" fill="rgb(230,167,5)"/><text x="16.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="1204" width="8" height="15" fill="rgb(223,209,19)"/><text x="16.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1220" width="8" height="15" fill="rgb(231,121,16)"/><text x="16.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.62%)</title><rect x="13" y="1236" width="8" height="15" fill="rgb(223,157,30)"/><text x="16.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1252" width="8" height="15" fill="rgb(234,154,11)"/><text x="16.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1268" width="8" height="15" fill="rgb(238,198,33)"/><text x="16.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1284" width="8" height="15" fill="rgb(240,91,0)"/><text x="16.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1300" width="8" height="15" fill="rgb(251,18,10)"/><text x="16.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1316" width="8" height="15" fill="rgb(232,18,29)"/><text x="16.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="13" y="1332" width="8" height="15" fill="rgb(252,64,23)"/><text x="16.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="13" y="1348" width="8" height="15" fill="rgb(216,172,10)"/><text x="16.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.62%)</title><rect x="13" y="1364" width="8" height="15" fill="rgb(232,153,23)"/><text x="16.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.62%)</title><rect x="13" y="1380" width="8" height="15" fill="rgb(228,153,26)"/><text x="16.00" y="1390.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (2 samples, 0.62%)</title><rect x="13" y="1396" width="8" height="15" fill="rgb(222,126,0)"/><text x="16.00" y="1406.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="17" y="1412" width="4" height="15" fill="rgb(223,219,43)"/><text x="20.00" y="1422.50"></text></g><g><title>0x7f86cefab8a4 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="17" y="1428" width="4" height="15" fill="rgb(253,94,18)"/><text x="20.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/io/pickle.py) (1 samples, 0.31%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(206,145,36)"/><text x="24.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(207,96,47)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(215,57,35)"/><text x="24.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(208,148,15)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(216,218,2)"/><text x="24.00" y="750.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(235,38,1)"/><text x="24.00" y="766.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(233,194,15)"/><text x="24.00" y="782.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(222,161,41)"/><text x="24.00" y="798.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(244,55,3)"/><text x="24.00" y="814.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(214,170,41)"/><text x="24.00" y="830.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(241,45,45)"/><text x="24.00" y="846.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(207,168,37)"/><text x="24.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="21" y="660" width="7" height="15" fill="rgb(245,76,39)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.31%)</title><rect x="24" y="676" width="4" height="15" fill="rgb(239,163,34)"/><text x="27.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 1.87%)</title><rect x="10" y="292" width="22" height="15" fill="rgb(213,207,5)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="10" y="308" width="22" height="15" fill="rgb(207,77,12)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="10" y="324" width="22" height="15" fill="rgb(238,57,42)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="340" width="11" height="15" fill="rgb(221,163,0)"/><text x="24.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="21" y="356" width="11" height="15" fill="rgb(240,5,24)"/><text x="24.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="372" width="11" height="15" fill="rgb(217,122,38)"/><text x="24.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.93%)</title><rect x="21" y="388" width="11" height="15" fill="rgb(228,7,22)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="404" width="11" height="15" fill="rgb(244,73,6)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="420" width="11" height="15" fill="rgb(253,206,2)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="436" width="11" height="15" fill="rgb(223,38,40)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="21" y="452" width="11" height="15" fill="rgb(252,82,26)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="468" width="11" height="15" fill="rgb(215,66,46)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.93%)</title><rect x="21" y="484" width="11" height="15" fill="rgb(250,179,17)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="500" width="11" height="15" fill="rgb(206,60,39)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="516" width="11" height="15" fill="rgb(254,189,54)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="532" width="11" height="15" fill="rgb(214,11,31)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="21" y="548" width="11" height="15" fill="rgb(230,139,49)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="564" width="11" height="15" fill="rgb(245,54,11)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (3 samples, 0.93%)</title><rect x="21" y="580" width="11" height="15" fill="rgb(226,169,20)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="596" width="11" height="15" fill="rgb(248,84,9)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="612" width="11" height="15" fill="rgb(253,113,43)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="21" y="628" width="11" height="15" fill="rgb(249,200,42)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="21" y="644" width="11" height="15" fill="rgb(206,223,47)"/><text x="24.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="660" width="4" height="15" fill="rgb(243,101,29)"/><text x="31.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="676" width="4" height="15" fill="rgb(226,191,12)"/><text x="31.00" y="686.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="32" y="868" width="7" height="15" fill="rgb(249,127,0)"/><text x="35.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="32" y="884" width="7" height="15" fill="rgb(246,44,6)"/><text x="35.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="32" y="900" width="7" height="15" fill="rgb(245,121,37)"/><text x="35.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="32" y="916" width="7" height="15" fill="rgb(248,78,0)"/><text x="35.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="32" y="932" width="7" height="15" fill="rgb(205,51,13)"/><text x="35.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="948" width="4" height="15" fill="rgb(209,37,0)"/><text x="38.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="964" width="4" height="15" fill="rgb(228,38,39)"/><text x="38.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="35" y="980" width="4" height="15" fill="rgb(241,170,43)"/><text x="38.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="35" y="996" width="4" height="15" fill="rgb(239,222,3)"/><text x="38.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.31%)</title><rect x="35" y="1012" width="4" height="15" fill="rgb(228,191,10)"/><text x="38.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="35" y="1028" width="4" height="15" fill="rgb(244,40,49)"/><text x="38.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="35" y="1044" width="4" height="15" fill="rgb(226,223,16)"/><text x="38.00" y="1054.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="884" width="4" height="15" fill="rgb(251,106,19)"/><text x="42.00" y="894.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.25%)</title><rect x="32" y="836" width="14" height="15" fill="rgb(226,80,25)"/><text x="35.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.25%)</title><rect x="32" y="852" width="14" height="15" fill="rgb(211,210,31)"/><text x="35.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="39" y="868" width="7" height="15" fill="rgb(214,176,5)"/><text x="42.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="43" y="884" width="3" height="15" fill="rgb(210,95,42)"/><text x="46.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="43" y="900" width="3" height="15" fill="rgb(239,46,43)"/><text x="46.00" y="910.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="43" y="916" width="3" height="15" fill="rgb(226,107,18)"/><text x="46.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.74%)</title><rect x="10" y="196" width="44" height="15" fill="rgb(236,143,44)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.74%)</title><rect x="10" y="212" width="44" height="15" fill="rgb(231,64,39)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.74%)</title><rect x="10" y="228" width="44" height="15" fill="rgb(230,30,42)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.74%)</title><rect x="10" y="244" width="44" height="15" fill="rgb(211,22,17)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.74%)</title><rect x="10" y="260" width="44" height="15" fill="rgb(231,30,28)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.74%)</title><rect x="10" y="276" width="44" height="15" fill="rgb(249,53,9)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.87%)</title><rect x="32" y="292" width="22" height="15" fill="rgb(208,193,42)"/><text x="35.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="308" width="22" height="15" fill="rgb(219,14,54)"/><text x="35.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="324" width="22" height="15" fill="rgb(224,31,47)"/><text x="35.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="340" width="22" height="15" fill="rgb(240,88,43)"/><text x="35.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.87%)</title><rect x="32" y="356" width="22" height="15" fill="rgb(214,100,16)"/><text x="35.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="372" width="22" height="15" fill="rgb(243,208,22)"/><text x="35.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.87%)</title><rect x="32" y="388" width="22" height="15" fill="rgb(208,24,20)"/><text x="35.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="404" width="22" height="15" fill="rgb(239,38,27)"/><text x="35.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="420" width="22" height="15" fill="rgb(243,140,13)"/><text x="35.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="436" width="22" height="15" fill="rgb(225,158,46)"/><text x="35.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.87%)</title><rect x="32" y="452" width="22" height="15" fill="rgb(230,164,23)"/><text x="35.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="468" width="22" height="15" fill="rgb(252,127,26)"/><text x="35.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.87%)</title><rect x="32" y="484" width="22" height="15" fill="rgb(217,196,17)"/><text x="35.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="500" width="22" height="15" fill="rgb(220,63,16)"/><text x="35.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="516" width="22" height="15" fill="rgb(232,120,17)"/><text x="35.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="532" width="22" height="15" fill="rgb(217,4,17)"/><text x="35.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.87%)</title><rect x="32" y="548" width="22" height="15" fill="rgb(214,91,23)"/><text x="35.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="564" width="22" height="15" fill="rgb(234,126,54)"/><text x="35.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.87%)</title><rect x="32" y="580" width="22" height="15" fill="rgb(250,76,28)"/><text x="35.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="596" width="22" height="15" fill="rgb(239,47,33)"/><text x="35.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="612" width="22" height="15" fill="rgb(218,83,30)"/><text x="35.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="628" width="22" height="15" fill="rgb(242,47,37)"/><text x="35.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="644" width="22" height="15" fill="rgb(211,87,4)"/><text x="35.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="660" width="22" height="15" fill="rgb(238,11,5)"/><text x="35.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="676" width="22" height="15" fill="rgb(240,97,43)"/><text x="35.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.87%)</title><rect x="32" y="692" width="22" height="15" fill="rgb(253,26,53)"/><text x="35.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="708" width="22" height="15" fill="rgb(251,93,9)"/><text x="35.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.87%)</title><rect x="32" y="724" width="22" height="15" fill="rgb(228,109,25)"/><text x="35.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="740" width="22" height="15" fill="rgb(248,8,23)"/><text x="35.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="756" width="22" height="15" fill="rgb(205,189,43)"/><text x="35.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="772" width="22" height="15" fill="rgb(244,141,13)"/><text x="35.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.87%)</title><rect x="32" y="788" width="22" height="15" fill="rgb(225,163,10)"/><text x="35.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.87%)</title><rect x="32" y="804" width="22" height="15" fill="rgb(223,87,48)"/><text x="35.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.87%)</title><rect x="32" y="820" width="22" height="15" fill="rgb(247,31,17)"/><text x="35.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="836" width="8" height="15" fill="rgb(228,115,2)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="852" width="8" height="15" fill="rgb(249,38,33)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="868" width="8" height="15" fill="rgb(218,137,46)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="46" y="884" width="8" height="15" fill="rgb(237,17,7)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="46" y="900" width="8" height="15" fill="rgb(239,128,43)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (2 samples, 0.62%)</title><rect x="46" y="916" width="8" height="15" fill="rgb(245,195,6)"/><text x="49.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (2 samples, 0.62%)</title><rect x="46" y="932" width="8" height="15" fill="rgb(245,209,17)"/><text x="49.00" y="942.50"></text></g><g><title>compile (re.py) (2 samples, 0.62%)</title><rect x="46" y="948" width="8" height="15" fill="rgb(233,147,27)"/><text x="49.00" y="958.50"></text></g><g><title>_compile (re.py) (2 samples, 0.62%)</title><rect x="46" y="964" width="8" height="15" fill="rgb(231,61,12)"/><text x="49.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="980" width="8" height="15" fill="rgb(236,59,48)"/><text x="49.00" y="990.50"></text></g><g><title>_code (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="996" width="8" height="15" fill="rgb(212,98,28)"/><text x="49.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1012" width="8" height="15" fill="rgb(209,171,37)"/><text x="49.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1028" width="8" height="15" fill="rgb(221,27,53)"/><text x="49.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1044" width="8" height="15" fill="rgb(211,224,33)"/><text x="49.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1060" width="8" height="15" fill="rgb(249,109,38)"/><text x="49.00" y="1070.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1076" width="8" height="15" fill="rgb(205,36,14)"/><text x="49.00" y="1086.50"></text></g><g><title>_compile (sre_compile.py) (2 samples, 0.62%)</title><rect x="46" y="1092" width="8" height="15" fill="rgb(251,19,16)"/><text x="49.00" y="1102.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="50" y="1108" width="4" height="15" fill="rgb(217,54,35)"/><text x="53.00" y="1118.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.31%)</title><rect x="50" y="1124" width="4" height="15" fill="rgb(251,31,14)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(212,141,12)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(226,196,16)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(250,159,47)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 4.05%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(254,27,36)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(245,99,33)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx.py) (13 samples, 4.05%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(244,121,19)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(253,6,43)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 4.05%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(246,144,27)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="196" width="3" height="15" fill="rgb(221,164,24)"/><text x="57.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="212" width="3" height="15" fill="rgb(217,137,45)"/><text x="57.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="228" width="3" height="15" fill="rgb(213,192,14)"/><text x="57.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="244" width="3" height="15" fill="rgb(226,15,25)"/><text x="57.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="260" width="3" height="15" fill="rgb(229,121,14)"/><text x="57.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(250,218,54)"/><text x="57.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="292" width="3" height="15" fill="rgb(237,82,37)"/><text x="57.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="308" width="3" height="15" fill="rgb(211,149,49)"/><text x="57.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="324" width="3" height="15" fill="rgb(228,120,12)"/><text x="57.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.31%)</title><rect x="54" y="340" width="3" height="15" fill="rgb(250,148,27)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="356" width="3" height="15" fill="rgb(253,94,16)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="372" width="3" height="15" fill="rgb(206,52,11)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="388" width="3" height="15" fill="rgb(239,140,46)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="404" width="3" height="15" fill="rgb(238,178,27)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="420" width="3" height="15" fill="rgb(245,123,4)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="436" width="3" height="15" fill="rgb(249,108,20)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="452" width="3" height="15" fill="rgb(206,195,12)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="468" width="3" height="15" fill="rgb(234,1,4)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.31%)</title><rect x="54" y="484" width="3" height="15" fill="rgb(220,197,14)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="500" width="3" height="15" fill="rgb(213,186,36)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="516" width="3" height="15" fill="rgb(230,219,21)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="532" width="3" height="15" fill="rgb(228,49,25)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="548" width="3" height="15" fill="rgb(252,161,48)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="564" width="3" height="15" fill="rgb(245,80,32)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.31%)</title><rect x="54" y="580" width="3" height="15" fill="rgb(253,102,46)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="596" width="3" height="15" fill="rgb(236,213,44)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="612" width="3" height="15" fill="rgb(209,186,36)"/><text x="57.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="628" width="3" height="15" fill="rgb(219,91,29)"/><text x="57.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="644" width="3" height="15" fill="rgb(211,176,25)"/><text x="57.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="660" width="3" height="15" fill="rgb(211,225,44)"/><text x="57.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.31%)</title><rect x="54" y="676" width="3" height="15" fill="rgb(210,202,48)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="692" width="3" height="15" fill="rgb(210,194,6)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="708" width="3" height="15" fill="rgb(209,15,18)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="724" width="3" height="15" fill="rgb(217,55,21)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="740" width="3" height="15" fill="rgb(225,18,41)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="756" width="3" height="15" fill="rgb(239,190,43)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.31%)</title><rect x="54" y="772" width="3" height="15" fill="rgb(226,84,15)"/><text x="57.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="788" width="3" height="15" fill="rgb(227,3,27)"/><text x="57.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="804" width="3" height="15" fill="rgb(251,53,8)"/><text x="57.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="54" y="820" width="3" height="15" fill="rgb(244,105,11)"/><text x="57.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="836" width="3" height="15" fill="rgb(209,68,30)"/><text x="57.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="852" width="3" height="15" fill="rgb(230,105,38)"/><text x="57.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="54" y="868" width="3" height="15" fill="rgb(252,10,0)"/><text x="57.00" y="878.50"></text></g><g><title>0x7f868f852ff9 (?) (1 samples, 0.31%)</title><rect x="72" y="212" width="4" height="15" fill="rgb(212,79,45)"/><text x="75.00" y="222.50"></text></g><g><title>0x7f868f84def6 (?) (1 samples, 0.31%)</title><rect x="72" y="228" width="4" height="15" fill="rgb(229,13,15)"/><text x="75.00" y="238.50"></text></g><g><title>0x7f868f842962 (?) (1 samples, 0.31%)</title><rect x="72" y="244" width="4" height="15" fill="rgb(216,27,43)"/><text x="75.00" y="254.50"></text></g><g><title>0x7f868f8767a7 (?) (1 samples, 0.31%)</title><rect x="72" y="260" width="4" height="15" fill="rgb(240,29,8)"/><text x="75.00" y="270.50"></text></g><g><title>0x7f868f876379 (?) (1 samples, 0.31%)</title><rect x="72" y="276" width="4" height="15" fill="rgb(234,171,12)"/><text x="75.00" y="286.50"></text></g><g><title>0x7f868fcd48b8 (?) (1 samples, 0.31%)</title><rect x="72" y="292" width="4" height="15" fill="rgb(237,168,4)"/><text x="75.00" y="302.50"></text></g><g><title>0x7f868fcd2c7f (?) (1 samples, 0.31%)</title><rect x="72" y="308" width="4" height="15" fill="rgb(206,1,23)"/><text x="75.00" y="318.50"></text></g><g><title>0x7f868fce599c (?) (1 samples, 0.31%)</title><rect x="72" y="324" width="4" height="15" fill="rgb(223,115,42)"/><text x="75.00" y="334.50"></text></g><g><title>0x7f868f9d4c5b (?) (1 samples, 0.31%)</title><rect x="72" y="340" width="4" height="15" fill="rgb(245,93,37)"/><text x="75.00" y="350.50"></text></g><g><title>0x7f868f9d0bcb (?) (1 samples, 0.31%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(217,142,50)"/><text x="75.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="83" y="292" width="4" height="15" fill="rgb(230,78,14)"/><text x="86.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="83" y="308" width="4" height="15" fill="rgb(240,123,44)"/><text x="86.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="83" y="324" width="4" height="15" fill="rgb(227,75,35)"/><text x="86.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="87" y="292" width="3" height="15" fill="rgb(216,130,2)"/><text x="90.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="87" y="308" width="3" height="15" fill="rgb(231,92,30)"/><text x="90.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="87" y="324" width="3" height="15" fill="rgb(207,195,53)"/><text x="90.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="87" y="340" width="3" height="15" fill="rgb(214,209,43)"/><text x="90.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="90" y="356" width="4" height="15" fill="rgb(211,64,16)"/><text x="93.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="90" y="372" width="4" height="15" fill="rgb(238,192,51)"/><text x="93.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="90" y="388" width="4" height="15" fill="rgb(253,186,43)"/><text x="93.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="90" y="340" width="8" height="15" fill="rgb(231,146,23)"/><text x="93.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="94" y="356" width="4" height="15" fill="rgb(243,49,23)"/><text x="97.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="94" y="372" width="4" height="15" fill="rgb(224,223,34)"/><text x="97.00" y="382.50"></text></g><g><title>0x7f86cefab514 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="94" y="388" width="4" height="15" fill="rgb(206,95,45)"/><text x="97.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="98" y="340" width="3" height="15" fill="rgb(232,54,14)"/><text x="101.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="356" width="4" height="15" fill="rgb(220,132,23)"/><text x="207.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="372" width="4" height="15" fill="rgb(212,182,39)"/><text x="207.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="388" width="4" height="15" fill="rgb(238,108,44)"/><text x="207.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="404" width="4" height="15" fill="rgb(207,58,49)"/><text x="207.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="420" width="4" height="15" fill="rgb(249,16,33)"/><text x="207.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="204" y="436" width="4" height="15" fill="rgb(246,140,52)"/><text x="207.00" y="446.50"></text></g><g><title>0x7f86cefc9dae (libc-2.29.so) (1 samples, 0.31%)</title><rect x="248" y="372" width="4" height="15" fill="rgb(208,173,13)"/><text x="251.00" y="382.50"></text></g><g><title>0x7f86cf128e4a (libm-2.29.so) (1 samples, 0.31%)</title><rect x="252" y="372" width="4" height="15" fill="rgb(213,85,44)"/><text x="255.00" y="382.50"></text></g><g><title>0x7f86cf128e4e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="256" y="372" width="3" height="15" fill="rgb(216,189,31)"/><text x="259.00" y="382.50"></text></g><g><title>0x7f86cf128e53 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="259" y="372" width="4" height="15" fill="rgb(238,96,30)"/><text x="262.00" y="382.50"></text></g><g><title>0x7f86cf128e5f (libm-2.29.so) (1 samples, 0.31%)</title><rect x="263" y="372" width="4" height="15" fill="rgb(218,169,53)"/><text x="266.00" y="382.50"></text></g><g><title>0x7f86cf128e71 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="267" y="372" width="7" height="15" fill="rgb(247,70,4)"/><text x="270.00" y="382.50"></text></g><g><title>0x7f86cf128e86 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="274" y="372" width="4" height="15" fill="rgb(224,157,18)"/><text x="277.00" y="382.50"></text></g><g><title>0x7f86cf128e92 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="278" y="372" width="4" height="15" fill="rgb(243,195,13)"/><text x="281.00" y="382.50"></text></g><g><title>0x7f86cf128ea2 (libm-2.29.so) (3 samples, 0.93%)</title><rect x="282" y="372" width="11" height="15" fill="rgb(237,84,22)"/><text x="285.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 16.82%)</title><rect x="101" y="340" width="199" height="15" fill="rgb(238,219,43)"/><text x="104.00" y="350.50">onnxruntime::ml::LinearCla..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 7.79%)</title><rect x="208" y="356" width="92" height="15" fill="rgb(212,51,39)"/><text x="211.00" y="366.50">onnxruntim..</text></g><g><title>0x7f86cf128ea6 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="293" y="372" width="7" height="15" fill="rgb(222,155,22)"/><text x="296.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 23.68%)</title><rect x="83" y="260" width="279" height="15" fill="rgb(218,22,40)"/><text x="86.00" y="270.50">onnxruntime::InferenceSession::Run (o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 23.68%)</title><rect x="83" y="276" width="279" height="15" fill="rgb(254,184,32)"/><text x="86.00" y="286.50">onnxruntime::InferenceSession::Run (o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 23.05%)</title><rect x="90" y="292" width="272" height="15" fill="rgb(236,94,38)"/><text x="93.00" y="302.50">onnxruntime::utils::ExecuteGraph (on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 23.05%)</title><rect x="90" y="308" width="272" height="15" fill="rgb(222,103,24)"/><text x="93.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 23.05%)</title><rect x="90" y="324" width="272" height="15" fill="rgb(227,144,38)"/><text x="93.00" y="334.50">onnxruntime::SequentialExecutor::Exe..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.30%)</title><rect x="300" y="340" width="62" height="15" fill="rgb(208,10,32)"/><text x="303.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.30%)</title><rect x="300" y="356" width="62" height="15" fill="rgb(247,180,1)"/><text x="303.00" y="366.50">onnxru..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="362" y="260" width="4" height="15" fill="rgb(231,46,16)"/><text x="365.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="362" y="276" width="4" height="15" fill="rgb(234,187,16)"/><text x="365.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="362" y="292" width="4" height="15" fill="rgb(246,100,27)"/><text x="365.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="362" y="308" width="4" height="15" fill="rgb(210,175,22)"/><text x="365.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 25.86%)</title><rect x="79" y="244" width="305" height="15" fill="rgb(238,143,48)"/><text x="82.00" y="254.50">onnxruntime::python::addObjectMethods(pyb..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.56%)</title><rect x="366" y="260" width="18" height="15" fill="rgb(232,7,1)"/><text x="369.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.93%)</title><rect x="373" y="276" width="11" height="15" fill="rgb(207,7,33)"/><text x="376.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.62%)</title><rect x="377" y="292" width="7" height="15" fill="rgb(213,28,34)"/><text x="380.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="381" y="308" width="3" height="15" fill="rgb(253,186,6)"/><text x="384.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="381" y="324" width="3" height="15" fill="rgb(244,76,33)"/><text x="384.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="384" y="244" width="4" height="15" fill="rgb(229,89,12)"/><text x="387.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (91 samples, 28.35%)</title><rect x="57" y="68" width="335" height="15" fill="rgb(229,0,0)"/><text x="60.00" y="78.50">profile_ort (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (91 samples, 28.35%)</title><rect x="57" y="84" width="335" height="15" fill="rgb(228,29,23)"/><text x="60.00" y="94.50">setup_profile (bench_LogisticRegression_libli..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (91 samples, 28.35%)</title><rect x="57" y="100" width="335" height="15" fill="rgb(223,190,50)"/><text x="60.00" y="110.50">profile (bench_LogisticRegression_liblinear_b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (90 samples, 28.04%)</title><rect x="61" y="116" width="331" height="15" fill="rgb(214,85,24)"/><text x="64.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (90 samples, 28.04%)</title><rect x="61" y="132" width="331" height="15" fill="rgb(249,36,50)"/><text x="64.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (90 samples, 28.04%)</title><rect x="61" y="148" width="331" height="15" fill="rgb(230,26,49)"/><text x="64.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (89 samples, 27.73%)</title><rect x="65" y="164" width="327" height="15" fill="rgb(209,18,22)"/><text x="68.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (89 samples, 27.73%)</title><rect x="65" y="180" width="327" height="15" fill="rgb(221,2,20)"/><text x="68.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (88 samples, 27.41%)</title><rect x="68" y="196" width="324" height="15" fill="rgb(238,76,50)"/><text x="71.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 26.79%)</title><rect x="76" y="212" width="316" height="15" fill="rgb(225,67,6)"/><text x="79.00" y="222.50">pybind11::cpp_function::dispatcher (onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (85 samples, 26.48%)</title><rect x="79" y="228" width="313" height="15" fill="rgb(252,52,52)"/><text x="82.00" y="238.50">void pybind11::cpp_function::initialize&lt;on..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="388" y="244" width="4" height="15" fill="rgb(220,183,31)"/><text x="391.00" y="254.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.31%)</title><rect x="443" y="212" width="4" height="15" fill="rgb(253,152,47)"/><text x="446.00" y="222.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="451" y="260" width="3" height="15" fill="rgb(227,0,48)"/><text x="454.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.93%)</title><rect x="451" y="244" width="11" height="15" fill="rgb(224,125,29)"/><text x="454.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.62%)</title><rect x="454" y="260" width="8" height="15" fill="rgb(222,168,41)"/><text x="457.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="458" y="276" width="4" height="15" fill="rgb(215,77,17)"/><text x="461.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.31%)</title><rect x="458" y="292" width="4" height="15" fill="rgb(219,153,12)"/><text x="461.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.31%)</title><rect x="458" y="308" width="4" height="15" fill="rgb(236,29,21)"/><text x="461.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.31%)</title><rect x="458" y="324" width="4" height="15" fill="rgb(229,157,25)"/><text x="461.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.31%)</title><rect x="462" y="340" width="3" height="15" fill="rgb(228,187,21)"/><text x="465.00" y="350.50"></text></g><g><title>blas_memory_free (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="465" y="372" width="4" height="15" fill="rgb(251,135,20)"/><text x="468.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="465" y="388" width="4" height="15" fill="rgb(252,11,41)"/><text x="468.00" y="398.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 2.18%)</title><rect x="462" y="292" width="25" height="15" fill="rgb(240,180,52)"/><text x="465.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (7 samples, 2.18%)</title><rect x="462" y="308" width="25" height="15" fill="rgb(210,42,25)"/><text x="465.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (7 samples, 2.18%)</title><rect x="462" y="324" width="25" height="15" fill="rgb(248,193,46)"/><text x="465.00" y="334.50">c..</text></g><g><title>gemm (cblasfuncs.c) (6 samples, 1.87%)</title><rect x="465" y="340" width="22" height="15" fill="rgb(254,101,2)"/><text x="468.00" y="350.50">g..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.87%)</title><rect x="465" y="356" width="22" height="15" fill="rgb(254,193,1)"/><text x="468.00" y="366.50">c..</text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.56%)</title><rect x="469" y="372" width="18" height="15" fill="rgb(247,162,41)"/><text x="472.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.25%)</title><rect x="473" y="388" width="14" height="15" fill="rgb(249,3,7)"/><text x="476.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.49%)</title><rect x="462" y="276" width="29" height="15" fill="rgb(243,180,31)"/><text x="465.00" y="286.50">ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.31%)</title><rect x="487" y="292" width="4" height="15" fill="rgb(244,199,45)"/><text x="490.00" y="302.50"></text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.31%)</title><rect x="491" y="276" width="4" height="15" fill="rgb(206,118,27)"/><text x="494.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="495" y="276" width="11" height="15" fill="rgb(236,212,4)"/><text x="498.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (17 samples, 5.30%)</title><rect x="462" y="244" width="62" height="15" fill="rgb(222,220,19)"/><text x="465.00" y="254.50">numpy_..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (17 samples, 5.30%)</title><rect x="462" y="260" width="62" height="15" fill="rgb(246,85,2)"/><text x="465.00" y="270.50">dot (&lt;..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.56%)</title><rect x="506" y="276" width="18" height="15" fill="rgb(226,173,43)"/><text x="509.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.31%)</title><rect x="524" y="276" width="4" height="15" fill="rgb(214,210,36)"/><text x="527.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.31%)</title><rect x="528" y="292" width="3" height="15" fill="rgb(230,144,0)"/><text x="531.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.31%)</title><rect x="528" y="308" width="3" height="15" fill="rgb(239,172,21)"/><text x="531.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.31%)</title><rect x="528" y="324" width="3" height="15" fill="rgb(232,70,26)"/><text x="531.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.31%)</title><rect x="528" y="340" width="3" height="15" fill="rgb(218,193,26)"/><text x="531.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.31%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(245,197,23)"/><text x="531.00" y="366.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="528" y="372" width="3" height="15" fill="rgb(226,10,31)"/><text x="531.00" y="382.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="528" y="388" width="3" height="15" fill="rgb(212,147,10)"/><text x="531.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.31%)</title><rect x="531" y="308" width="4" height="15" fill="rgb(234,201,2)"/><text x="534.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.31%)</title><rect x="531" y="324" width="4" height="15" fill="rgb(246,154,14)"/><text x="534.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.31%)</title><rect x="531" y="340" width="4" height="15" fill="rgb(220,179,19)"/><text x="534.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.31%)</title><rect x="531" y="356" width="4" height="15" fill="rgb(232,216,31)"/><text x="534.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.56%)</title><rect x="531" y="292" width="19" height="15" fill="rgb(231,78,38)"/><text x="534.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 1.25%)</title><rect x="535" y="308" width="15" height="15" fill="rgb(205,208,49)"/><text x="538.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 1.25%)</title><rect x="535" y="324" width="15" height="15" fill="rgb(218,110,48)"/><text x="538.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 1.25%)</title><rect x="535" y="340" width="15" height="15" fill="rgb(206,115,45)"/><text x="538.00" y="350.50"></text></g><g><title>0x7f86cefc9dbb (libc-2.29.so) (1 samples, 0.31%)</title><rect x="546" y="356" width="4" height="15" fill="rgb(207,102,21)"/><text x="549.00" y="366.50"></text></g><g><title>0x7f86b138e890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="554" y="340" width="3" height="15" fill="rgb(212,192,13)"/><text x="557.00" y="350.50"></text></g><g><title>0x7f86b14d9c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="557" y="340" width="4" height="15" fill="rgb(230,61,5)"/><text x="560.00" y="350.50"></text></g><g><title>0x7f86cf0f51a0 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(243,2,31)"/><text x="582.00" y="366.50"></text></g><g><title>0x7f86cf128e00 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="583" y="356" width="4" height="15" fill="rgb(243,59,32)"/><text x="586.00" y="366.50"></text></g><g><title>0x7f86cf128e17 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="587" y="356" width="7" height="15" fill="rgb(230,33,35)"/><text x="590.00" y="366.50"></text></g><g><title>0x7f86cf128e37 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="594" y="356" width="4" height="15" fill="rgb(252,97,34)"/><text x="597.00" y="366.50"></text></g><g><title>0x7f86cf128e4e (libm-2.29.so) (2 samples, 0.62%)</title><rect x="598" y="356" width="7" height="15" fill="rgb(223,215,9)"/><text x="601.00" y="366.50"></text></g><g><title>0x7f86cf128e62 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="605" y="356" width="7" height="15" fill="rgb(205,131,45)"/><text x="608.00" y="366.50"></text></g><g><title>0x7f86cf128e7e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="612" y="356" width="4" height="15" fill="rgb(221,159,9)"/><text x="615.00" y="366.50"></text></g><g><title>0x7f86b13d0214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (20 samples, 6.23%)</title><rect x="550" y="324" width="73" height="15" fill="rgb(215,68,26)"/><text x="553.00" y="334.50">0x7f86b1..</text></g><g><title>expf (libm-2.29.so) (17 samples, 5.30%)</title><rect x="561" y="340" width="62" height="15" fill="rgb(241,116,2)"/><text x="564.00" y="350.50">expf (..</text></g><g><title>0x7f86cf128e96 (libm-2.29.so) (2 samples, 0.62%)</title><rect x="616" y="356" width="7" height="15" fill="rgb(223,21,29)"/><text x="619.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (53 samples, 16.51%)</title><rect x="447" y="228" width="195" height="15" fill="rgb(208,134,53)"/><text x="450.00" y="238.50">_run (mlprodict/onnxrt/op..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 9.97%)</title><rect x="524" y="244" width="118" height="15" fill="rgb(241,133,26)"/><text x="527.00" y="254.50">ufunc_generic_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (32 samples, 9.97%)</title><rect x="524" y="260" width="118" height="15" fill="rgb(225,16,46)"/><text x="527.00" y="270.50">PyUFunc_Generi..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (31 samples, 9.66%)</title><rect x="528" y="276" width="114" height="15" fill="rgb(214,200,47)"/><text x="531.00" y="286.50">execute_legacy..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (25 samples, 7.79%)</title><rect x="550" y="292" width="92" height="15" fill="rgb(227,221,15)"/><text x="553.00" y="302.50">trivial_tw..</text></g><g><title>0x7f86b13ae33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 7.79%)</title><rect x="550" y="308" width="92" height="15" fill="rgb(218,143,54)"/><text x="553.00" y="318.50">0x7f86b13a..</text></g><g><title>0x7f86b13d0228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.56%)</title><rect x="623" y="324" width="19" height="15" fill="rgb(214,34,16)"/><text x="626.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="645" y="260" width="4" height="15" fill="rgb(226,158,0)"/><text x="648.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="645" y="276" width="4" height="15" fill="rgb(225,16,12)"/><text x="648.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.31%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(236,128,52)"/><text x="648.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.31%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(234,159,3)"/><text x="648.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.31%)</title><rect x="645" y="324" width="4" height="15" fill="rgb(235,128,11)"/><text x="648.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.31%)</title><rect x="649" y="260" width="4" height="15" fill="rgb(251,100,37)"/><text x="652.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.31%)</title><rect x="649" y="276" width="4" height="15" fill="rgb(224,202,35)"/><text x="652.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.31%)</title><rect x="649" y="292" width="4" height="15" fill="rgb(226,129,37)"/><text x="652.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.93%)</title><rect x="653" y="324" width="11" height="15" fill="rgb(246,77,43)"/><text x="656.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.93%)</title><rect x="653" y="340" width="11" height="15" fill="rgb(205,61,1)"/><text x="656.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.62%)</title><rect x="656" y="356" width="8" height="15" fill="rgb(253,123,5)"/><text x="659.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.31%)</title><rect x="660" y="372" width="4" height="15" fill="rgb(215,199,32)"/><text x="663.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.31%)</title><rect x="660" y="388" width="4" height="15" fill="rgb(207,86,29)"/><text x="663.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="668" y="372" width="3" height="15" fill="rgb(216,218,42)"/><text x="671.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="668" y="388" width="3" height="15" fill="rgb(243,15,4)"/><text x="671.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.31%)</title><rect x="671" y="372" width="4" height="15" fill="rgb(228,203,29)"/><text x="674.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="671" y="388" width="4" height="15" fill="rgb(252,58,20)"/><text x="674.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="671" y="404" width="4" height="15" fill="rgb(253,7,9)"/><text x="674.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="671" y="420" width="4" height="15" fill="rgb(212,1,0)"/><text x="674.00" y="430.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 1.25%)</title><rect x="679" y="388" width="14" height="15" fill="rgb(218,66,50)"/><text x="682.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.62%)</title><rect x="686" y="404" width="7" height="15" fill="rgb(218,50,32)"/><text x="689.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.80%)</title><rect x="668" y="356" width="33" height="15" fill="rgb(236,188,41)"/><text x="671.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 2.18%)</title><rect x="675" y="372" width="26" height="15" fill="rgb(240,215,47)"/><text x="678.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.62%)</title><rect x="693" y="388" width="8" height="15" fill="rgb(227,84,45)"/><text x="696.00" y="398.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.36%)</title><rect x="653" y="260" width="51" height="15" fill="rgb(218,114,13)"/><text x="656.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.36%)</title><rect x="653" y="276" width="51" height="15" fill="rgb(237,180,9)"/><text x="656.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.36%)</title><rect x="653" y="292" width="51" height="15" fill="rgb(228,194,49)"/><text x="656.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 4.36%)</title><rect x="653" y="308" width="51" height="15" fill="rgb(220,37,30)"/><text x="656.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 3.43%)</title><rect x="664" y="324" width="40" height="15" fill="rgb(216,207,28)"/><text x="667.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (10 samples, 3.12%)</title><rect x="668" y="340" width="36" height="15" fill="rgb(210,140,26)"/><text x="671.00" y="350.50">PyU..</text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.31%)</title><rect x="701" y="356" width="3" height="15" fill="rgb(242,159,43)"/><text x="704.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="704" y="276" width="4" height="15" fill="rgb(209,48,19)"/><text x="707.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="704" y="292" width="4" height="15" fill="rgb(254,130,17)"/><text x="707.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="708" y="308" width="4" height="15" fill="rgb(218,80,27)"/><text x="711.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="708" y="324" width="4" height="15" fill="rgb(253,142,25)"/><text x="711.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="708" y="340" width="4" height="15" fill="rgb(249,113,13)"/><text x="711.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="708" y="356" width="4" height="15" fill="rgb(215,66,53)"/><text x="711.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.31%)</title><rect x="708" y="372" width="4" height="15" fill="rgb(234,70,29)"/><text x="711.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="708" y="388" width="4" height="15" fill="rgb(244,150,54)"/><text x="711.00" y="398.50"></text></g><g><title>0x7f86cefaab1e (libc-2.29.so) (1 samples, 0.31%)</title><rect x="708" y="404" width="4" height="15" fill="rgb(244,81,47)"/><text x="711.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="712" y="340" width="3" height="15" fill="rgb(247,162,18)"/><text x="715.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="712" y="324" width="7" height="15" fill="rgb(221,200,23)"/><text x="715.00" y="334.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.31%)</title><rect x="715" y="340" width="4" height="15" fill="rgb(241,122,17)"/><text x="718.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 3.12%)</title><rect x="708" y="292" width="37" height="15" fill="rgb(216,151,19)"/><text x="711.00" y="302.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 2.80%)</title><rect x="712" y="308" width="33" height="15" fill="rgb(230,82,20)"/><text x="715.00" y="318.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (7 samples, 2.18%)</title><rect x="719" y="324" width="26" height="15" fill="rgb(236,193,27)"/><text x="722.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 2.18%)</title><rect x="719" y="340" width="26" height="15" fill="rgb(237,172,33)"/><text x="722.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 2.18%)</title><rect x="719" y="356" width="26" height="15" fill="rgb(216,61,1)"/><text x="722.00" y="366.50">P..</text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 1.87%)</title><rect x="723" y="372" width="22" height="15" fill="rgb(243,155,27)"/><text x="726.00" y="382.50">_..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (97 samples, 30.22%)</title><rect x="392" y="100" width="356" height="15" fill="rgb(237,22,49)"/><text x="395.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (97 samples, 30.22%)</title><rect x="392" y="116" width="356" height="15" fill="rgb(239,59,12)"/><text x="395.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (97 samples, 30.22%)</title><rect x="392" y="132" width="356" height="15" fill="rgb(222,215,1)"/><text x="395.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (95 samples, 29.60%)</title><rect x="399" y="148" width="349" height="15" fill="rgb(241,95,37)"/><text x="402.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (92 samples, 28.66%)</title><rect x="410" y="164" width="338" height="15" fill="rgb(230,172,30)"/><text x="413.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (90 samples, 28.04%)</title><rect x="418" y="180" width="330" height="15" fill="rgb(238,96,44)"/><text x="421.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (83 samples, 25.86%)</title><rect x="443" y="196" width="305" height="15" fill="rgb(245,127,44)"/><text x="446.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 25.55%)</title><rect x="447" y="212" width="301" height="15" fill="rgb(248,131,8)"/><text x="450.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 9.03%)</title><rect x="642" y="228" width="106" height="15" fill="rgb(252,13,13)"/><text x="645.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (29 samples, 9.03%)</title><rect x="642" y="244" width="106" height="15" fill="rgb(222,25,52)"/><text x="645.00" y="254.50">norm_l1 (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.74%)</title><rect x="704" y="260" width="44" height="15" fill="rgb(249,18,34)"/><text x="707.00" y="270.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.43%)</title><rect x="708" y="276" width="40" height="15" fill="rgb(237,199,28)"/><text x="711.00" y="286.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="745" y="292" width="3" height="15" fill="rgb(230,137,42)"/><text x="748.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="745" y="308" width="3" height="15" fill="rgb(236,165,5)"/><text x="748.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="745" y="324" width="3" height="15" fill="rgb(211,123,25)"/><text x="748.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (98 samples, 30.53%)</title><rect x="392" y="68" width="360" height="15" fill="rgb(247,74,33)"/><text x="395.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (98 samples, 30.53%)</title><rect x="392" y="84" width="360" height="15" fill="rgb(248,40,3)"/><text x="395.00" y="94.50">setup_profile (bench_LogisticRegression_liblinea..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="748" y="100" width="4" height="15" fill="rgb(230,191,52)"/><text x="751.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="748" y="116" width="4" height="15" fill="rgb(248,209,47)"/><text x="751.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="748" y="132" width="4" height="15" fill="rgb(213,150,30)"/><text x="751.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="748" y="148" width="4" height="15" fill="rgb(245,39,0)"/><text x="751.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="748" y="164" width="4" height="15" fill="rgb(249,131,14)"/><text x="751.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.31%)</title><rect x="748" y="180" width="4" height="15" fill="rgb(219,46,22)"/><text x="751.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.31%)</title><rect x="748" y="196" width="4" height="15" fill="rgb(248,137,50)"/><text x="751.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="212" width="4" height="15" fill="rgb(240,218,35)"/><text x="751.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="228" width="4" height="15" fill="rgb(211,49,29)"/><text x="751.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="244" width="4" height="15" fill="rgb(238,118,1)"/><text x="751.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="748" y="260" width="4" height="15" fill="rgb(242,224,5)"/><text x="751.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="276" width="4" height="15" fill="rgb(227,87,13)"/><text x="751.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.31%)</title><rect x="748" y="292" width="4" height="15" fill="rgb(251,97,47)"/><text x="751.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="308" width="4" height="15" fill="rgb(246,6,41)"/><text x="751.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="324" width="4" height="15" fill="rgb(247,21,6)"/><text x="751.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="340" width="4" height="15" fill="rgb(216,41,7)"/><text x="751.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="748" y="356" width="4" height="15" fill="rgb(233,117,48)"/><text x="751.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="748" y="372" width="4" height="15" fill="rgb(246,225,13)"/><text x="751.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.31%)</title><rect x="748" y="388" width="4" height="15" fill="rgb(243,77,42)"/><text x="751.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.31%)</title><rect x="748" y="404" width="4" height="15" fill="rgb(229,124,25)"/><text x="751.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.31%)</title><rect x="748" y="420" width="4" height="15" fill="rgb(234,122,5)"/><text x="751.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.31%)</title><rect x="748" y="436" width="4" height="15" fill="rgb(243,19,20)"/><text x="751.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="748" y="452" width="4" height="15" fill="rgb(224,124,39)"/><text x="751.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.31%)</title><rect x="748" y="468" width="4" height="15" fill="rgb(206,154,13)"/><text x="751.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.31%)</title><rect x="748" y="484" width="4" height="15" fill="rgb(205,138,10)"/><text x="751.00" y="494.50"></text></g><g><title>format_option (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.31%)</title><rect x="748" y="500" width="4" height="15" fill="rgb(241,156,48)"/><text x="751.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="516" width="4" height="15" fill="rgb(227,32,20)"/><text x="751.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="532" width="4" height="15" fill="rgb(224,52,14)"/><text x="751.00" y="542.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="548" width="4" height="15" fill="rgb(234,5,33)"/><text x="751.00" y="558.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="564" width="4" height="15" fill="rgb(241,218,45)"/><text x="751.00" y="574.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="580" width="4" height="15" fill="rgb(230,173,8)"/><text x="751.00" y="590.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="596" width="4" height="15" fill="rgb(220,19,19)"/><text x="751.00" y="606.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="748" y="612" width="4" height="15" fill="rgb(223,190,21)"/><text x="751.00" y="622.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.62%)</title><rect x="774" y="180" width="7" height="15" fill="rgb(234,31,29)"/><text x="777.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.31%)</title><rect x="778" y="196" width="3" height="15" fill="rgb(222,217,49)"/><text x="781.00" y="206.50"></text></g><g><title>0x7f86cefbf757 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="778" y="212" width="3" height="15" fill="rgb(234,45,33)"/><text x="781.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.31%)</title><rect x="781" y="260" width="4" height="15" fill="rgb(206,44,50)"/><text x="784.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="781" y="276" width="4" height="15" fill="rgb(217,176,38)"/><text x="784.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.31%)</title><rect x="781" y="292" width="4" height="15" fill="rgb(252,136,11)"/><text x="784.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="785" y="308" width="4" height="15" fill="rgb(205,51,22)"/><text x="788.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="785" y="292" width="7" height="15" fill="rgb(231,184,21)"/><text x="788.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="789" y="308" width="3" height="15" fill="rgb(220,188,26)"/><text x="792.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.31%)</title><rect x="792" y="292" width="4" height="15" fill="rgb(235,208,7)"/><text x="795.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.31%)</title><rect x="792" y="308" width="4" height="15" fill="rgb(246,182,51)"/><text x="795.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="792" y="324" width="4" height="15" fill="rgb(223,30,0)"/><text x="795.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="792" y="340" width="4" height="15" fill="rgb(246,217,41)"/><text x="795.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (7 samples, 2.18%)</title><rect x="804" y="308" width="25" height="15" fill="rgb(222,8,2)"/><text x="807.00" y="318.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (5 samples, 1.56%)</title><rect x="811" y="324" width="18" height="15" fill="rgb(249,166,50)"/><text x="814.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (16 samples, 4.98%)</title><rect x="785" y="276" width="59" height="15" fill="rgb(244,180,17)"/><text x="788.00" y="286.50">PyUFun..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 4.05%)</title><rect x="796" y="292" width="48" height="15" fill="rgb(228,223,52)"/><text x="799.00" y="302.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 1.25%)</title><rect x="829" y="308" width="15" height="15" fill="rgb(218,5,10)"/><text x="832.00" y="318.50"></text></g><g><title>array_sum (methods.c) (18 samples, 5.61%)</title><rect x="781" y="180" width="67" height="15" fill="rgb(234,161,23)"/><text x="784.00" y="190.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (18 samples, 5.61%)</title><rect x="781" y="196" width="67" height="15" fill="rgb(250,24,23)"/><text x="784.00" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (18 samples, 5.61%)</title><rect x="781" y="212" width="67" height="15" fill="rgb(238,224,16)"/><text x="784.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 5.61%)</title><rect x="781" y="228" width="67" height="15" fill="rgb(209,46,20)"/><text x="784.00" y="238.50">ufunc_r..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 5.61%)</title><rect x="781" y="244" width="67" height="15" fill="rgb(230,124,26)"/><text x="784.00" y="254.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (17 samples, 5.30%)</title><rect x="785" y="260" width="63" height="15" fill="rgb(250,123,52)"/><text x="788.00" y="270.50">PyUFun..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.31%)</title><rect x="844" y="276" width="4" height="15" fill="rgb(246,121,13)"/><text x="847.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="844" y="292" width="4" height="15" fill="rgb(218,15,49)"/><text x="847.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="844" y="308" width="4" height="15" fill="rgb(223,8,37)"/><text x="847.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.31%)</title><rect x="851" y="196" width="4" height="15" fill="rgb(252,107,22)"/><text x="854.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.31%)</title><rect x="851" y="212" width="4" height="15" fill="rgb(210,52,24)"/><text x="854.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="851" y="228" width="4" height="15" fill="rgb(237,33,44)"/><text x="854.00" y="238.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.62%)</title><rect x="855" y="276" width="7" height="15" fill="rgb(205,47,4)"/><text x="858.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.62%)</title><rect x="855" y="292" width="7" height="15" fill="rgb(240,215,32)"/><text x="858.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.62%)</title><rect x="855" y="308" width="7" height="15" fill="rgb(237,42,48)"/><text x="858.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.31%)</title><rect x="859" y="324" width="3" height="15" fill="rgb(247,215,29)"/><text x="862.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.31%)</title><rect x="862" y="308" width="4" height="15" fill="rgb(236,157,48)"/><text x="865.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.31%)</title><rect x="862" y="324" width="4" height="15" fill="rgb(233,33,35)"/><text x="865.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.93%)</title><rect x="862" y="276" width="11" height="15" fill="rgb(235,227,54)"/><text x="865.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.93%)</title><rect x="862" y="292" width="11" height="15" fill="rgb(245,151,19)"/><text x="865.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.62%)</title><rect x="866" y="308" width="7" height="15" fill="rgb(245,153,0)"/><text x="869.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="870" y="324" width="3" height="15" fill="rgb(229,160,41)"/><text x="873.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="870" y="340" width="3" height="15" fill="rgb(250,112,10)"/><text x="873.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="870" y="356" width="3" height="15" fill="rgb(225,19,29)"/><text x="873.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="870" y="372" width="3" height="15" fill="rgb(208,208,2)"/><text x="873.00" y="382.50"></text></g><g><title>array_add (number.c) (6 samples, 1.87%)</title><rect x="855" y="196" width="22" height="15" fill="rgb(206,87,42)"/><text x="858.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.87%)</title><rect x="855" y="212" width="22" height="15" fill="rgb(216,10,21)"/><text x="858.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.87%)</title><rect x="855" y="228" width="22" height="15" fill="rgb(217,130,49)"/><text x="858.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.87%)</title><rect x="855" y="244" width="22" height="15" fill="rgb(219,166,18)"/><text x="858.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.87%)</title><rect x="855" y="260" width="22" height="15" fill="rgb(231,76,28)"/><text x="858.00" y="270.50">i..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="873" y="276" width="4" height="15" fill="rgb(246,161,50)"/><text x="876.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.31%)</title><rect x="881" y="212" width="3" height="15" fill="rgb(217,116,19)"/><text x="884.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.62%)</title><rect x="884" y="212" width="8" height="15" fill="rgb(211,52,53)"/><text x="887.00" y="222.50"></text></g><g><title>0x7f86cf0880e6 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="899" y="228" width="4" height="15" fill="rgb(229,183,48)"/><text x="902.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 1.25%)</title><rect x="892" y="212" width="14" height="15" fill="rgb(232,176,22)"/><text x="895.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="903" y="228" width="3" height="15" fill="rgb(214,24,37)"/><text x="906.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.18%)</title><rect x="906" y="212" width="26" height="15" fill="rgb(245,13,32)"/><text x="909.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.62%)</title><rect x="925" y="228" width="7" height="15" fill="rgb(244,152,47)"/><text x="928.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.62%)</title><rect x="925" y="244" width="7" height="15" fill="rgb(238,211,33)"/><text x="928.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (18 samples, 5.61%)</title><rect x="877" y="196" width="66" height="15" fill="rgb(241,35,2)"/><text x="880.00" y="206.50">check_a..</text></g><g><title>simplefilter (warnings.py) (3 samples, 0.93%)</title><rect x="932" y="212" width="11" height="15" fill="rgb(237,71,19)"/><text x="935.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.93%)</title><rect x="932" y="228" width="11" height="15" fill="rgb(224,178,34)"/><text x="935.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="951" y="228" width="3" height="15" fill="rgb(215,173,2)"/><text x="954.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (4 samples, 1.25%)</title><rect x="943" y="196" width="15" height="15" fill="rgb(224,80,52)"/><text x="946.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.62%)</title><rect x="951" y="212" width="7" height="15" fill="rgb(233,64,18)"/><text x="954.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="954" y="228" width="4" height="15" fill="rgb(213,180,8)"/><text x="957.00" y="238.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.25%)</title><rect x="965" y="212" width="15" height="15" fill="rgb(214,187,22)"/><text x="968.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (3 samples, 0.93%)</title><rect x="980" y="260" width="11" height="15" fill="rgb(241,162,33)"/><text x="983.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="980" y="276" width="11" height="15" fill="rgb(231,180,8)"/><text x="983.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.93%)</title><rect x="980" y="292" width="11" height="15" fill="rgb(242,67,23)"/><text x="983.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.62%)</title><rect x="984" y="308" width="7" height="15" fill="rgb(215,28,12)"/><text x="987.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.31%)</title><rect x="991" y="324" width="4" height="15" fill="rgb(205,176,6)"/><text x="994.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="991" y="340" width="4" height="15" fill="rgb(227,132,26)"/><text x="994.00" y="350.50"></text></g><g><title>0x7f86cef61a19 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="991" y="356" width="4" height="15" fill="rgb(226,177,7)"/><text x="994.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.31%)</title><rect x="991" y="372" width="4" height="15" fill="rgb(211,125,21)"/><text x="994.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="995" y="324" width="3" height="15" fill="rgb(207,14,16)"/><text x="998.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 1.87%)</title><rect x="991" y="292" width="22" height="15" fill="rgb(244,10,21)"/><text x="994.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 1.87%)</title><rect x="991" y="308" width="22" height="15" fill="rgb(228,102,36)"/><text x="994.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (4 samples, 1.25%)</title><rect x="998" y="324" width="15" height="15" fill="rgb(212,164,12)"/><text x="1001.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.18%)</title><rect x="991" y="260" width="26" height="15" fill="rgb(217,198,19)"/><text x="994.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 2.18%)</title><rect x="991" y="276" width="26" height="15" fill="rgb(212,205,15)"/><text x="994.00" y="286.50">n..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1013" y="292" width="4" height="15" fill="rgb(228,141,47)"/><text x="1016.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="1013" y="308" width="4" height="15" fill="rgb(205,81,3)"/><text x="1016.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="1013" y="324" width="4" height="15" fill="rgb(208,106,51)"/><text x="1016.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="1013" y="340" width="4" height="15" fill="rgb(219,154,22)"/><text x="1016.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="1013" y="356" width="4" height="15" fill="rgb(210,205,28)"/><text x="1016.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.31%)</title><rect x="1013" y="372" width="4" height="15" fill="rgb(229,3,17)"/><text x="1016.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1013" y="388" width="4" height="15" fill="rgb(210,76,21)"/><text x="1016.00" y="398.50"></text></g><g><title>0x7f86cefaacc7 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1013" y="404" width="4" height="15" fill="rgb(245,166,35)"/><text x="1016.00" y="414.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (47 samples, 14.64%)</title><rect x="848" y="180" width="172" height="15" fill="rgb(245,93,19)"/><text x="851.00" y="190.50">decision_function (skl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (17 samples, 5.30%)</title><rect x="958" y="196" width="62" height="15" fill="rgb(233,179,7)"/><text x="961.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.43%)</title><rect x="980" y="212" width="40" height="15" fill="rgb(209,43,51)"/><text x="983.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.43%)</title><rect x="980" y="228" width="40" height="15" fill="rgb(229,20,35)"/><text x="983.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 3.43%)</title><rect x="980" y="244" width="40" height="15" fill="rgb(246,110,29)"/><text x="983.00" y="254.50">PyU..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1017" y="260" width="3" height="15" fill="rgb(216,163,45)"/><text x="1020.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1017" y="276" width="3" height="15" fill="rgb(242,85,32)"/><text x="1020.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1017" y="292" width="3" height="15" fill="rgb(234,182,51)"/><text x="1020.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1017" y="308" width="3" height="15" fill="rgb(246,201,15)"/><text x="1020.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1017" y="324" width="3" height="15" fill="rgb(231,0,20)"/><text x="1020.00" y="334.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.31%)</title><rect x="1024" y="292" width="4" height="15" fill="rgb(243,179,12)"/><text x="1027.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (9 samples, 2.80%)</title><rect x="1024" y="244" width="33" height="15" fill="rgb(235,86,31)"/><text x="1027.00" y="254.50">DO..</text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (9 samples, 2.80%)</title><rect x="1024" y="260" width="33" height="15" fill="rgb(211,97,12)"/><text x="1027.00" y="270.50">ru..</text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (9 samples, 2.80%)</title><rect x="1024" y="276" width="33" height="15" fill="rgb(252,7,53)"/><text x="1027.00" y="286.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h) (8 samples, 2.49%)</title><rect x="1028" y="292" width="29" height="15" fill="rgb(216,126,7)"/><text x="1031.00" y="302.50">_m..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1057" y="244" width="4" height="15" fill="rgb(218,113,7)"/><text x="1060.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.62%)</title><rect x="1061" y="244" width="7" height="15" fill="rgb(224,142,50)"/><text x="1064.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.62%)</title><rect x="1061" y="260" width="7" height="15" fill="rgb(208,98,13)"/><text x="1064.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.62%)</title><rect x="1061" y="276" width="7" height="15" fill="rgb(234,10,43)"/><text x="1064.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (13 samples, 4.05%)</title><rect x="1024" y="228" width="48" height="15" fill="rgb(218,177,53)"/><text x="1027.00" y="238.50">iter..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="1068" y="244" width="4" height="15" fill="rgb(207,153,49)"/><text x="1071.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="1068" y="260" width="4" height="15" fill="rgb(229,69,28)"/><text x="1071.00" y="270.50"></text></g><g><title>0x7f86b13af9da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.62%)</title><rect x="1072" y="244" width="7" height="15" fill="rgb(209,213,11)"/><text x="1075.00" y="254.50"></text></g><g><title>0x7f86b13d0254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1079" y="260" width="4" height="15" fill="rgb(244,91,9)"/><text x="1082.00" y="270.50"></text></g><g><title>0x7f86cf0f51b0 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1109" y="292" width="3" height="15" fill="rgb(217,61,17)"/><text x="1112.00" y="302.50"></text></g><g><title>0x7f86cf17bc07 (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1112" y="292" width="4" height="15" fill="rgb(228,208,8)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f86cf17bc2e (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1116" y="292" width="4" height="15" fill="rgb(221,208,48)"/><text x="1119.00" y="302.50"></text></g><g><title>0x7f86cf17bc6a (libm-2.29.so) (1 samples, 0.31%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(244,166,3)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7f86b13d0265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 4.05%)</title><rect x="1083" y="260" width="48" height="15" fill="rgb(242,200,49)"/><text x="1086.00" y="270.50">0x7f..</text></g><g><title>exp (libm-2.29.so) (12 samples, 3.74%)</title><rect x="1087" y="276" width="44" height="15" fill="rgb(217,182,33)"/><text x="1090.00" y="286.50">exp ..</text></g><g><title>0x7f86cf17bc7f (libm-2.29.so) (2 samples, 0.62%)</title><rect x="1123" y="292" width="8" height="15" fill="rgb(245,223,26)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7f86b13d0275 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1131" y="260" width="3" height="15" fill="rgb(244,103,19)"/><text x="1134.00" y="270.50"></text></g><g><title>0x7f86b13af9dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 6.54%)</title><rect x="1079" y="244" width="77" height="15" fill="rgb(229,182,8)"/><text x="1082.00" y="254.50">0x7f86b1..</text></g><g><title>0x7f86b13d0279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.87%)</title><rect x="1134" y="260" width="22" height="15" fill="rgb(249,52,25)"/><text x="1137.00" y="270.50">0..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (37 samples, 11.53%)</title><rect x="1024" y="212" width="136" height="15" fill="rgb(221,224,35)"/><text x="1027.00" y="222.50">execute_legacy_uf..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (24 samples, 7.48%)</title><rect x="1072" y="228" width="88" height="15" fill="rgb(252,168,8)"/><text x="1075.00" y="238.50">trivial_tw..</text></g><g><title>0x7f86b13d013e (?) (1 samples, 0.31%)</title><rect x="1156" y="244" width="4" height="15" fill="rgb(229,81,43)"/><text x="1159.00" y="254.50"></text></g><g><title>0x7f86b13cfefe (?) (1 samples, 0.31%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(246,227,4)"/><text x="1159.00" y="270.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (109 samples, 33.96%)</title><rect x="763" y="164" width="401" height="15" fill="rgb(213,189,9)"/><text x="766.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (39 samples, 12.15%)</title><rect x="1020" y="180" width="144" height="15" fill="rgb(241,167,3)"/><text x="1023.00" y="190.50">ufunc_generic_call..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (39 samples, 12.15%)</title><rect x="1020" y="196" width="144" height="15" fill="rgb(245,205,14)"/><text x="1023.00" y="206.50">PyUFunc_GenericFun..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1160" y="212" width="4" height="15" fill="rgb(247,164,40)"/><text x="1163.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.62%)</title><rect x="1175" y="196" width="7" height="15" fill="rgb(214,164,49)"/><text x="1178.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.87%)</title><rect x="1164" y="180" width="22" height="15" fill="rgb(207,141,7)"/><text x="1167.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.31%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(235,35,37)"/><text x="1185.00" y="206.50"></text></g><g><title>all (321 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,17,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (321 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,62,38)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (119 samples, 37.07%)</title><rect x="752" y="68" width="438" height="15" fill="rgb(245,89,47)"/><text x="755.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_sol..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (119 samples, 37.07%)</title><rect x="752" y="84" width="438" height="15" fill="rgb(238,1,0)"/><text x="755.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (119 samples, 37.07%)</title><rect x="752" y="100" width="438" height="15" fill="rgb(221,57,31)"/><text x="755.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (118 samples, 36.76%)</title><rect x="756" y="116" width="434" height="15" fill="rgb(231,210,25)"/><text x="759.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (118 samples, 36.76%)</title><rect x="756" y="132" width="434" height="15" fill="rgb(218,193,31)"/><text x="759.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (118 samples, 36.76%)</title><rect x="756" y="148" width="434" height="15" fill="rgb(240,184,24)"/><text x="759.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 2.18%)</title><rect x="1164" y="164" width="26" height="15" fill="rgb(250,3,2)"/><text x="1167.00" y="174.50">c..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(205,61,28)"/><text x="1189.00" y="190.50"></text></g></g></svg>