<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>0x7f899b7553fd (?) (1 samples, 0.11%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(251,113,53)"/><text x="13.00" y="190.50"></text></g><g><title>0x7f899b753553 (?) (1 samples, 0.11%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(241,152,0)"/><text x="13.00" y="206.50"></text></g><g><title>0x7f899b74ea09 (?) (1 samples, 0.11%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(216,70,16)"/><text x="13.00" y="222.50"></text></g><g><title>0x7f899b761748 (?) (1 samples, 0.11%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(247,205,41)"/><text x="13.00" y="238.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (8 samples, 0.87%)</title><rect x="10" y="100" width="10" height="15" fill="rgb(205,43,15)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 0.87%)</title><rect x="10" y="116" width="10" height="15" fill="rgb(235,136,31)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (8 samples, 0.87%)</title><rect x="10" y="132" width="10" height="15" fill="rgb(254,143,26)"/><text x="13.00" y="142.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (8 samples, 0.87%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(250,148,24)"/><text x="13.00" y="158.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (8 samples, 0.87%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(208,199,25)"/><text x="13.00" y="174.50"></text></g><g><title>0x7f899b7553fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.76%)</title><rect x="11" y="180" width="9" height="15" fill="rgb(211,132,4)"/><text x="14.00" y="190.50"></text></g><g><title>0x7f899b753553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.76%)</title><rect x="11" y="196" width="9" height="15" fill="rgb(228,205,9)"/><text x="14.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.76%)</title><rect x="11" y="212" width="9" height="15" fill="rgb(241,123,50)"/><text x="14.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.76%)</title><rect x="11" y="228" width="9" height="15" fill="rgb(252,227,50)"/><text x="14.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.32%)</title><rect x="16" y="244" width="4" height="15" fill="rgb(212,33,8)"/><text x="19.00" y="254.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:444) (1 samples, 0.11%)</title><rect x="21" y="164" width="1" height="15" fill="rgb(227,120,18)"/><text x="24.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="21" y="180" width="1" height="15" fill="rgb(209,103,20)"/><text x="24.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.11%)</title><rect x="21" y="196" width="1" height="15" fill="rgb(227,103,18)"/><text x="24.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.11%)</title><rect x="22" y="180" width="2" height="15" fill="rgb(247,192,51)"/><text x="25.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.11%)</title><rect x="24" y="180" width="1" height="15" fill="rgb(230,168,34)"/><text x="27.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.11%)</title><rect x="25" y="180" width="1" height="15" fill="rgb(216,31,31)"/><text x="28.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.11%)</title><rect x="26" y="180" width="1" height="15" fill="rgb(206,227,11)"/><text x="29.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.11%)</title><rect x="26" y="196" width="1" height="15" fill="rgb(241,105,39)"/><text x="29.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.11%)</title><rect x="26" y="212" width="1" height="15" fill="rgb(227,25,9)"/><text x="29.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.11%)</title><rect x="26" y="228" width="1" height="15" fill="rgb(244,70,19)"/><text x="29.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.11%)</title><rect x="26" y="244" width="1" height="15" fill="rgb(215,162,52)"/><text x="29.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c:2168) (1 samples, 0.11%)</title><rect x="26" y="260" width="1" height="15" fill="rgb(233,125,30)"/><text x="29.00" y="270.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.11%)</title><rect x="26" y="276" width="1" height="15" fill="rgb(217,57,24)"/><text x="29.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.11%)</title><rect x="26" y="292" width="1" height="15" fill="rgb(251,159,34)"/><text x="29.00" y="302.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.11%)</title><rect x="26" y="308" width="1" height="15" fill="rgb(236,82,18)"/><text x="29.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:961) (1 samples, 0.11%)</title><rect x="26" y="324" width="1" height="15" fill="rgb(254,95,21)"/><text x="29.00" y="334.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.11%)</title><rect x="27" y="180" width="2" height="15" fill="rgb(241,57,9)"/><text x="30.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.11%)</title><rect x="27" y="196" width="2" height="15" fill="rgb(247,22,46)"/><text x="30.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.11%)</title><rect x="29" y="180" width="1" height="15" fill="rgb(245,86,27)"/><text x="32.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.11%)</title><rect x="29" y="196" width="1" height="15" fill="rgb(220,174,47)"/><text x="32.00" y="206.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py:640) (8 samples, 0.87%)</title><rect x="21" y="148" width="10" height="15" fill="rgb(220,31,23)"/><text x="24.00" y="158.50"></text></g><g><title>_validate_for_predict (sklearn/svm/_base.py:447) (7 samples, 0.76%)</title><rect x="22" y="164" width="9" height="15" fill="rgb(234,155,45)"/><text x="25.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.11%)</title><rect x="30" y="180" width="1" height="15" fill="rgb(212,57,1)"/><text x="33.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.11%)</title><rect x="30" y="196" width="1" height="15" fill="rgb(254,140,11)"/><text x="33.00" y="206.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:689) (1 samples, 0.11%)</title><rect x="31" y="164" width="1" height="15" fill="rgb(216,88,23)"/><text x="34.00" y="174.50"></text></g><g><title>0x7f899b752eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(229,137,2)"/><text x="35.00" y="206.50"></text></g><g><title>0x7f899b73ce39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(212,162,26)"/><text x="35.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.11%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(238,148,42)"/><text x="35.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.11%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(226,41,34)"/><text x="35.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c:575) (1 samples, 0.11%)</title><rect x="32" y="260" width="2" height="15" fill="rgb(212,204,18)"/><text x="35.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3413) (1 samples, 0.11%)</title><rect x="34" y="228" width="1" height="15" fill="rgb(228,42,0)"/><text x="37.00" y="238.50"></text></g><g><title>0x7f899b75312f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="34" y="196" width="2" height="15" fill="rgb(251,94,20)"/><text x="37.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.22%)</title><rect x="34" y="212" width="2" height="15" fill="rgb(205,95,21)"/><text x="37.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.11%)</title><rect x="35" y="228" width="1" height="15" fill="rgb(251,74,7)"/><text x="38.00" y="238.50"></text></g><g><title>_calc_length (ctors.c:3276) (1 samples, 0.11%)</title><rect x="35" y="244" width="1" height="15" fill="rgb(208,127,13)"/><text x="38.00" y="254.50"></text></g><g><title>0x7f899b753237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="196" width="2" height="15" fill="rgb(251,49,7)"/><text x="39.00" y="206.50"></text></g><g><title>0x7f899b73d742 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="36" y="212" width="2" height="15" fill="rgb(253,158,51)"/><text x="39.00" y="222.50"></text></g><g><title>0x7f899b7532b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="38" y="196" width="1" height="15" fill="rgb(226,50,22)"/><text x="41.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="38" y="212" width="1" height="15" fill="rgb(218,132,36)"/><text x="41.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="38" y="228" width="1" height="15" fill="rgb(234,195,19)"/><text x="41.00" y="238.50"></text></g><g><title>0x7f899b75346c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="39" y="196" width="2" height="15" fill="rgb(222,96,29)"/><text x="42.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (2 samples, 0.22%)</title><rect x="39" y="212" width="2" height="15" fill="rgb(247,26,44)"/><text x="42.00" y="222.50"></text></g><g><title>0x7f89c0c64929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="127" y="244" width="1" height="15" fill="rgb(244,26,9)"/><text x="130.00" y="254.50"></text></g><g><title>0x7f89c0c64938 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="128" y="244" width="2" height="15" fill="rgb(248,100,30)"/><text x="131.00" y="254.50"></text></g><g><title>0x7f89c0c64945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="130" y="244" width="1" height="15" fill="rgb(207,96,49)"/><text x="133.00" y="254.50"></text></g><g><title>0x7f89c0c64971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="131" y="244" width="1" height="15" fill="rgb(208,125,43)"/><text x="134.00" y="254.50"></text></g><g><title>0x7f89c0c6497c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="132" y="244" width="1" height="15" fill="rgb(218,132,47)"/><text x="135.00" y="254.50"></text></g><g><title>0x7f89c0c64982 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="133" y="244" width="2" height="15" fill="rgb(223,62,16)"/><text x="136.00" y="254.50"></text></g><g><title>0x7f89c0c64998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="135" y="244" width="1" height="15" fill="rgb(237,10,47)"/><text x="138.00" y="254.50"></text></g><g><title>0x7f89c0c6499b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="136" y="244" width="1" height="15" fill="rgb(220,227,2)"/><text x="139.00" y="254.50"></text></g><g><title>0x7f89c0c64a38 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="137" y="244" width="3" height="15" fill="rgb(233,177,14)"/><text x="140.00" y="254.50"></text></g><g><title>0x7f89c0c64a55 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="140" y="244" width="1" height="15" fill="rgb(231,219,3)"/><text x="143.00" y="254.50"></text></g><g><title>0x7f89c0c64cf0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="141" y="244" width="1" height="15" fill="rgb(219,158,28)"/><text x="144.00" y="254.50"></text></g><g><title>0x7f89c0c64d07 (libc-2.29.so) (4 samples, 0.43%)</title><rect x="142" y="244" width="5" height="15" fill="rgb(251,16,41)"/><text x="145.00" y="254.50"></text></g><g><title>0x7f89c0e36c04 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="149" y="260" width="1" height="15" fill="rgb(212,216,38)"/><text x="152.00" y="270.50"></text></g><g><title>0x7f89c0e36c2e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="150" y="260" width="1" height="15" fill="rgb(236,80,7)"/><text x="153.00" y="270.50"></text></g><g><title>0x7f89c0e36c56 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="151" y="260" width="2" height="15" fill="rgb(233,4,23)"/><text x="154.00" y="270.50"></text></g><g><title>0x7f89c0e36c5a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="153" y="260" width="1" height="15" fill="rgb(207,201,24)"/><text x="156.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (6 samples, 0.65%)</title><rect x="147" y="244" width="8" height="15" fill="rgb(232,143,10)"/><text x="150.00" y="254.50"></text></g><g><title>0x7f89c0e36c7b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="154" y="260" width="1" height="15" fill="rgb(218,29,18)"/><text x="157.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (4 samples, 0.43%)</title><rect x="155" y="244" width="5" height="15" fill="rgb(216,86,16)"/><text x="158.00" y="254.50"></text></g><g><title>0x7f89c0c65f0a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="173" y="260" width="1" height="15" fill="rgb(249,172,27)"/><text x="176.00" y="270.50"></text></g><g><title>0x7f89c0c6600a (libc-2.29.so) (4 samples, 0.43%)</title><rect x="174" y="260" width="5" height="15" fill="rgb(238,69,3)"/><text x="177.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (16 samples, 1.73%)</title><rect x="160" y="244" width="21" height="15" fill="rgb(230,184,6)"/><text x="163.00" y="254.50"></text></g><g><title>0x7f89c0c6637d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="179" y="260" width="2" height="15" fill="rgb(237,78,38)"/><text x="182.00" y="270.50"></text></g><g><title>0x7f899b7363a0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.22%)</title><rect x="200" y="260" width="2" height="15" fill="rgb(215,201,37)"/><text x="203.00" y="270.50"></text></g><g><title>0x7f89c0c6490e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="202" y="260" width="2" height="15" fill="rgb(220,19,18)"/><text x="205.00" y="270.50"></text></g><g><title>0x7f89c0c64998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="204" y="260" width="1" height="15" fill="rgb(206,8,0)"/><text x="207.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="205" y="260" width="4" height="15" fill="rgb(234,120,28)"/><text x="208.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (183 samples, 19.81%)</title><rect x="21" y="132" width="234" height="15" fill="rgb(241,101,34)"/><text x="24.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>_predict_proba (sklearn/svm/_base.py:646) (175 samples, 18.94%)</title><rect x="31" y="148" width="224" height="15" fill="rgb(217,19,0)"/><text x="34.00" y="158.50">_predict_proba (sklearn/svm/_..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py:694) (174 samples, 18.83%)</title><rect x="32" y="164" width="223" height="15" fill="rgb(219,142,36)"/><text x="35.00" y="174.50">_dense_predict_proba (sklearn..</text></g><g><title>0x7f899b7553fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (174 samples, 18.83%)</title><rect x="32" y="180" width="223" height="15" fill="rgb(221,95,50)"/><text x="35.00" y="190.50">0x7f899b7553fd (sklearn/svm/_..</text></g><g><title>0x7f899b753553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (167 samples, 18.07%)</title><rect x="41" y="196" width="214" height="15" fill="rgb(234,142,22)"/><text x="44.00" y="206.50">0x7f899b753553 (sklearn/svm/..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (167 samples, 18.07%)</title><rect x="41" y="212" width="214" height="15" fill="rgb(225,146,44)"/><text x="44.00" y="222.50">copy_predict_proba (sklearn/..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (167 samples, 18.07%)</title><rect x="41" y="228" width="214" height="15" fill="rgb(212,156,43)"/><text x="44.00" y="238.50">svm_predict_probability (skl..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (58 samples, 6.28%)</title><rect x="181" y="244" width="74" height="15" fill="rgb(251,161,14)"/><text x="184.00" y="254.50">svm_pred..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (36 samples, 3.90%)</title><rect x="209" y="260" width="46" height="15" fill="rgb(217,36,53)"/><text x="212.00" y="270.50">svm:..</text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (15 samples, 1.62%)</title><rect x="236" y="276" width="19" height="15" fill="rgb(248,30,20)"/><text x="239.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:38) (193 samples, 20.89%)</title><rect x="10" y="52" width="246" height="15" fill="rgb(228,41,4)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_pr..</text></g><g><title>profile_skl (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:37) (193 samples, 20.89%)</title><rect x="10" y="68" width="246" height="15" fill="rgb(214,51,35)"/><text x="13.00" y="78.50">profile_skl (bench_SVC_poly_m_cl..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (193 samples, 20.89%)</title><rect x="10" y="84" width="246" height="15" fill="rgb(243,97,13)"/><text x="13.00" y="94.50">setup_profile (bench_SVC_poly_m_..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (185 samples, 20.02%)</title><rect x="20" y="100" width="236" height="15" fill="rgb(212,115,3)"/><text x="23.00" y="110.50">profile (bench_SVC_poly_m_cl_pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (185 samples, 20.02%)</title><rect x="20" y="116" width="236" height="15" fill="rgb(210,58,38)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.11%)</title><rect x="255" y="132" width="1" height="15" fill="rgb(209,28,24)"/><text x="258.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:1) (1 samples, 0.11%)</title><rect x="256" y="148" width="1" height="15" fill="rgb(250,26,0)"/><text x="259.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="256" y="164" width="1" height="15" fill="rgb(248,152,53)"/><text x="259.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="256" y="180" width="1" height="15" fill="rgb(217,34,19)"/><text x="259.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="256" y="196" width="1" height="15" fill="rgb(251,150,15)"/><text x="259.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="256" y="212" width="1" height="15" fill="rgb(236,47,25)"/><text x="259.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="256" y="228" width="1" height="15" fill="rgb(238,197,41)"/><text x="259.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.11%)</title><rect x="256" y="244" width="1" height="15" fill="rgb(207,208,7)"/><text x="259.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="256" y="260" width="1" height="15" fill="rgb(247,22,25)"/><text x="259.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="256" y="276" width="1" height="15" fill="rgb(227,47,40)"/><text x="259.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="256" y="292" width="1" height="15" fill="rgb(250,187,26)"/><text x="259.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="256" y="308" width="1" height="15" fill="rgb(206,122,23)"/><text x="259.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="256" y="324" width="1" height="15" fill="rgb(226,180,44)"/><text x="259.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="256" y="340" width="1" height="15" fill="rgb(233,23,26)"/><text x="259.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="256" y="356" width="1" height="15" fill="rgb(209,21,29)"/><text x="259.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.11%)</title><rect x="256" y="372" width="1" height="15" fill="rgb(230,28,48)"/><text x="259.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="256" y="388" width="1" height="15" fill="rgb(211,214,20)"/><text x="259.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="256" y="404" width="1" height="15" fill="rgb(245,48,10)"/><text x="259.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="256" y="420" width="1" height="15" fill="rgb(219,139,11)"/><text x="259.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="256" y="436" width="1" height="15" fill="rgb(223,62,21)"/><text x="259.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="256" y="452" width="1" height="15" fill="rgb(254,198,31)"/><text x="259.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="256" y="468" width="1" height="15" fill="rgb(230,160,53)"/><text x="259.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="256" y="484" width="1" height="15" fill="rgb(230,19,21)"/><text x="259.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="256" y="500" width="1" height="15" fill="rgb(239,97,22)"/><text x="259.00" y="510.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="257" y="852" width="2" height="15" fill="rgb(206,67,30)"/><text x="260.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.11%)</title><rect x="257" y="868" width="2" height="15" fill="rgb(249,13,2)"/><text x="260.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.11%)</title><rect x="257" y="884" width="2" height="15" fill="rgb(231,86,7)"/><text x="260.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.11%)</title><rect x="257" y="900" width="2" height="15" fill="rgb(248,116,2)"/><text x="260.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.11%)</title><rect x="257" y="916" width="2" height="15" fill="rgb(232,24,14)"/><text x="260.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.11%)</title><rect x="257" y="932" width="2" height="15" fill="rgb(210,189,40)"/><text x="260.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.11%)</title><rect x="257" y="948" width="2" height="15" fill="rgb(226,13,47)"/><text x="260.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.11%)</title><rect x="257" y="964" width="2" height="15" fill="rgb(208,180,39)"/><text x="260.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.11%)</title><rect x="257" y="980" width="2" height="15" fill="rgb(233,112,23)"/><text x="260.00" y="990.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:2057) (1 samples, 0.11%)</title><rect x="259" y="916" width="1" height="15" fill="rgb(235,212,16)"/><text x="262.00" y="926.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.22%)</title><rect x="259" y="884" width="2" height="15" fill="rgb(221,1,39)"/><text x="262.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.22%)</title><rect x="259" y="900" width="2" height="15" fill="rgb(241,111,28)"/><text x="262.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="260" y="916" width="1" height="15" fill="rgb(252,195,32)"/><text x="263.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.11%)</title><rect x="260" y="932" width="1" height="15" fill="rgb(229,124,52)"/><text x="263.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.11%)</title><rect x="260" y="948" width="1" height="15" fill="rgb(240,27,19)"/><text x="263.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.11%)</title><rect x="260" y="964" width="1" height="15" fill="rgb(205,111,52)"/><text x="263.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:2) (4 samples, 0.43%)</title><rect x="257" y="148" width="5" height="15" fill="rgb(213,127,43)"/><text x="260.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="164" width="5" height="15" fill="rgb(215,140,3)"/><text x="260.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.43%)</title><rect x="257" y="180" width="5" height="15" fill="rgb(222,158,40)"/><text x="260.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="196" width="5" height="15" fill="rgb(249,149,40)"/><text x="260.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="212" width="5" height="15" fill="rgb(214,203,25)"/><text x="260.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="228" width="5" height="15" fill="rgb(226,148,14)"/><text x="260.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="244" width="5" height="15" fill="rgb(221,54,26)"/><text x="260.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="260" width="5" height="15" fill="rgb(252,86,25)"/><text x="260.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="276" width="5" height="15" fill="rgb(254,104,0)"/><text x="260.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.43%)</title><rect x="257" y="292" width="5" height="15" fill="rgb(223,103,17)"/><text x="260.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="308" width="5" height="15" fill="rgb(241,72,52)"/><text x="260.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="324" width="5" height="15" fill="rgb(208,119,27)"/><text x="260.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="340" width="5" height="15" fill="rgb(219,115,16)"/><text x="260.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="356" width="5" height="15" fill="rgb(222,165,17)"/><text x="260.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="372" width="5" height="15" fill="rgb(232,159,7)"/><text x="260.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.43%)</title><rect x="257" y="388" width="5" height="15" fill="rgb(253,220,36)"/><text x="260.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="404" width="5" height="15" fill="rgb(207,179,22)"/><text x="260.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="420" width="5" height="15" fill="rgb(215,140,6)"/><text x="260.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="436" width="5" height="15" fill="rgb(235,74,0)"/><text x="260.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="452" width="5" height="15" fill="rgb(237,87,25)"/><text x="260.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="468" width="5" height="15" fill="rgb(217,30,9)"/><text x="260.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.43%)</title><rect x="257" y="484" width="5" height="15" fill="rgb(225,153,15)"/><text x="260.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="500" width="5" height="15" fill="rgb(253,35,6)"/><text x="260.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="516" width="5" height="15" fill="rgb(236,77,2)"/><text x="260.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="532" width="5" height="15" fill="rgb(245,24,31)"/><text x="260.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="548" width="5" height="15" fill="rgb(247,118,48)"/><text x="260.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="564" width="5" height="15" fill="rgb(207,89,27)"/><text x="260.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.43%)</title><rect x="257" y="580" width="5" height="15" fill="rgb(236,42,51)"/><text x="260.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="596" width="5" height="15" fill="rgb(246,92,49)"/><text x="260.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.43%)</title><rect x="257" y="612" width="5" height="15" fill="rgb(252,24,33)"/><text x="260.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="628" width="5" height="15" fill="rgb(233,102,6)"/><text x="260.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="644" width="5" height="15" fill="rgb(238,73,12)"/><text x="260.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="660" width="5" height="15" fill="rgb(247,181,31)"/><text x="260.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="676" width="5" height="15" fill="rgb(234,67,48)"/><text x="260.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="692" width="5" height="15" fill="rgb(231,82,7)"/><text x="260.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="708" width="5" height="15" fill="rgb(229,115,6)"/><text x="260.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.43%)</title><rect x="257" y="724" width="5" height="15" fill="rgb(246,206,20)"/><text x="260.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="257" y="740" width="5" height="15" fill="rgb(253,10,17)"/><text x="260.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="257" y="756" width="5" height="15" fill="rgb(234,161,26)"/><text x="260.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="257" y="772" width="5" height="15" fill="rgb(207,129,28)"/><text x="260.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="257" y="788" width="5" height="15" fill="rgb(214,36,44)"/><text x="260.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="257" y="804" width="5" height="15" fill="rgb(221,14,38)"/><text x="260.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.43%)</title><rect x="257" y="820" width="5" height="15" fill="rgb(214,74,3)"/><text x="260.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.43%)</title><rect x="257" y="836" width="5" height="15" fill="rgb(222,38,1)"/><text x="260.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.32%)</title><rect x="259" y="852" width="3" height="15" fill="rgb(218,36,43)"/><text x="262.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.32%)</title><rect x="259" y="868" width="3" height="15" fill="rgb(236,107,30)"/><text x="262.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.11%)</title><rect x="261" y="884" width="1" height="15" fill="rgb(235,46,16)"/><text x="264.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.11%)</title><rect x="261" y="900" width="1" height="15" fill="rgb(249,68,49)"/><text x="264.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.11%)</title><rect x="261" y="916" width="1" height="15" fill="rgb(209,104,7)"/><text x="264.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.11%)</title><rect x="261" y="932" width="1" height="15" fill="rgb(211,6,33)"/><text x="264.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.11%)</title><rect x="261" y="948" width="1" height="15" fill="rgb(236,182,28)"/><text x="264.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.11%)</title><rect x="261" y="964" width="1" height="15" fill="rgb(229,220,35)"/><text x="264.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.11%)</title><rect x="261" y="980" width="1" height="15" fill="rgb(242,101,48)"/><text x="264.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.11%)</title><rect x="261" y="996" width="1" height="15" fill="rgb(241,62,23)"/><text x="264.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.11%)</title><rect x="261" y="1012" width="1" height="15" fill="rgb(210,3,54)"/><text x="264.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="262" y="516" width="2" height="15" fill="rgb(207,212,21)"/><text x="265.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="262" y="532" width="2" height="15" fill="rgb(230,18,36)"/><text x="265.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="262" y="548" width="2" height="15" fill="rgb(249,151,21)"/><text x="265.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="262" y="564" width="2" height="15" fill="rgb(223,206,12)"/><text x="265.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="262" y="580" width="2" height="15" fill="rgb(222,113,0)"/><text x="265.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="262" y="596" width="2" height="15" fill="rgb(244,159,48)"/><text x="265.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="262" y="612" width="2" height="15" fill="rgb(230,170,46)"/><text x="265.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py:71) (1 samples, 0.11%)</title><rect x="262" y="628" width="2" height="15" fill="rgb(217,160,36)"/><text x="265.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1031) (1 samples, 0.11%)</title><rect x="262" y="644" width="2" height="15" fill="rgb(225,5,8)"/><text x="265.00" y="654.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1032) (1 samples, 0.11%)</title><rect x="262" y="660" width="2" height="15" fill="rgb(219,138,8)"/><text x="265.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:18) (2 samples, 0.22%)</title><rect x="262" y="484" width="3" height="15" fill="rgb(224,31,43)"/><text x="265.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="262" y="500" width="3" height="15" fill="rgb(213,106,47)"/><text x="265.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="516" width="1" height="15" fill="rgb(205,201,20)"/><text x="267.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="532" width="1" height="15" fill="rgb(232,78,25)"/><text x="267.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="264" y="548" width="1" height="15" fill="rgb(237,121,26)"/><text x="267.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="564" width="1" height="15" fill="rgb(214,223,12)"/><text x="267.00" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:230) (1 samples, 0.11%)</title><rect x="264" y="580" width="1" height="15" fill="rgb(210,123,53)"/><text x="267.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="264" y="596" width="1" height="15" fill="rgb(243,182,20)"/><text x="267.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="612" width="1" height="15" fill="rgb(224,21,45)"/><text x="267.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="628" width="1" height="15" fill="rgb(249,169,23)"/><text x="267.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="264" y="644" width="1" height="15" fill="rgb(252,78,31)"/><text x="267.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="660" width="1" height="15" fill="rgb(247,155,0)"/><text x="267.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py:17) (1 samples, 0.11%)</title><rect x="264" y="676" width="1" height="15" fill="rgb(242,79,45)"/><text x="267.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="264" y="692" width="1" height="15" fill="rgb(249,121,51)"/><text x="267.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="708" width="1" height="15" fill="rgb(251,6,27)"/><text x="267.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="724" width="1" height="15" fill="rgb(244,81,49)"/><text x="267.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="264" y="740" width="1" height="15" fill="rgb(239,99,32)"/><text x="267.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="756" width="1" height="15" fill="rgb(227,31,12)"/><text x="267.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py:11) (1 samples, 0.11%)</title><rect x="264" y="772" width="1" height="15" fill="rgb(230,180,10)"/><text x="267.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="264" y="788" width="1" height="15" fill="rgb(235,43,5)"/><text x="267.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="804" width="1" height="15" fill="rgb(251,226,54)"/><text x="267.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="820" width="1" height="15" fill="rgb(218,61,22)"/><text x="267.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="264" y="836" width="1" height="15" fill="rgb(244,175,30)"/><text x="267.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="852" width="1" height="15" fill="rgb(225,166,53)"/><text x="267.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py:9) (1 samples, 0.11%)</title><rect x="264" y="868" width="1" height="15" fill="rgb(249,114,15)"/><text x="267.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="264" y="884" width="1" height="15" fill="rgb(245,92,20)"/><text x="267.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="900" width="1" height="15" fill="rgb(213,83,12)"/><text x="267.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="916" width="1" height="15" fill="rgb(205,26,41)"/><text x="267.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="264" y="932" width="1" height="15" fill="rgb(235,3,37)"/><text x="267.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="948" width="1" height="15" fill="rgb(251,52,39)"/><text x="267.00" y="958.50"></text></g><g><title>&lt;module&gt; (multiprocessing/__init__.py:16) (1 samples, 0.11%)</title><rect x="264" y="964" width="1" height="15" fill="rgb(223,185,16)"/><text x="267.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="264" y="980" width="1" height="15" fill="rgb(239,77,14)"/><text x="267.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="264" y="996" width="1" height="15" fill="rgb(228,170,33)"/><text x="267.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="264" y="1012" width="1" height="15" fill="rgb(254,19,26)"/><text x="267.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="264" y="1028" width="1" height="15" fill="rgb(239,201,10)"/><text x="267.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="264" y="1044" width="1" height="15" fill="rgb(230,174,0)"/><text x="267.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="264" y="1060" width="1" height="15" fill="rgb(219,98,19)"/><text x="267.00" y="1070.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (1 samples, 0.11%)</title><rect x="264" y="1076" width="1" height="15" fill="rgb(244,151,24)"/><text x="267.00" y="1086.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:4) (3 samples, 0.32%)</title><rect x="262" y="148" width="4" height="15" fill="rgb(225,185,14)"/><text x="265.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="262" y="164" width="4" height="15" fill="rgb(254,126,2)"/><text x="265.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.32%)</title><rect x="262" y="180" width="4" height="15" fill="rgb(248,66,5)"/><text x="265.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="262" y="196" width="4" height="15" fill="rgb(248,46,44)"/><text x="265.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="262" y="212" width="4" height="15" fill="rgb(220,115,22)"/><text x="265.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="262" y="228" width="4" height="15" fill="rgb(226,105,8)"/><text x="265.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="262" y="244" width="4" height="15" fill="rgb(252,218,6)"/><text x="265.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="262" y="260" width="4" height="15" fill="rgb(233,138,47)"/><text x="265.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="262" y="276" width="4" height="15" fill="rgb(252,10,20)"/><text x="265.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.32%)</title><rect x="262" y="292" width="4" height="15" fill="rgb(211,187,45)"/><text x="265.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="262" y="308" width="4" height="15" fill="rgb(232,199,45)"/><text x="265.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="262" y="324" width="4" height="15" fill="rgb(228,170,23)"/><text x="265.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="262" y="340" width="4" height="15" fill="rgb(217,81,50)"/><text x="265.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="262" y="356" width="4" height="15" fill="rgb(207,208,5)"/><text x="265.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="262" y="372" width="4" height="15" fill="rgb(212,212,0)"/><text x="265.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.32%)</title><rect x="262" y="388" width="4" height="15" fill="rgb(209,5,54)"/><text x="265.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="262" y="404" width="4" height="15" fill="rgb(252,130,9)"/><text x="265.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="262" y="420" width="4" height="15" fill="rgb(229,167,31)"/><text x="265.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="262" y="436" width="4" height="15" fill="rgb(214,212,25)"/><text x="265.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="262" y="452" width="4" height="15" fill="rgb(240,117,4)"/><text x="265.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="262" y="468" width="4" height="15" fill="rgb(211,89,13)"/><text x="265.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.11%)</title><rect x="265" y="484" width="1" height="15" fill="rgb(209,212,12)"/><text x="268.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="500" width="1" height="15" fill="rgb(251,178,45)"/><text x="268.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="516" width="1" height="15" fill="rgb(229,187,37)"/><text x="268.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="532" width="1" height="15" fill="rgb(212,93,21)"/><text x="268.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="548" width="1" height="15" fill="rgb(210,53,28)"/><text x="268.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="564" width="1" height="15" fill="rgb(230,229,42)"/><text x="268.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.11%)</title><rect x="265" y="580" width="1" height="15" fill="rgb(239,69,19)"/><text x="268.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="596" width="1" height="15" fill="rgb(209,34,43)"/><text x="268.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="612" width="1" height="15" fill="rgb(212,89,6)"/><text x="268.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="628" width="1" height="15" fill="rgb(231,39,17)"/><text x="268.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="644" width="1" height="15" fill="rgb(222,176,19)"/><text x="268.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="660" width="1" height="15" fill="rgb(229,103,38)"/><text x="268.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.11%)</title><rect x="265" y="676" width="1" height="15" fill="rgb(253,96,36)"/><text x="268.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="692" width="1" height="15" fill="rgb(253,16,29)"/><text x="268.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="708" width="1" height="15" fill="rgb(235,132,41)"/><text x="268.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="724" width="1" height="15" fill="rgb(241,119,40)"/><text x="268.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="740" width="1" height="15" fill="rgb(244,148,34)"/><text x="268.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="756" width="1" height="15" fill="rgb(227,21,19)"/><text x="268.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.11%)</title><rect x="265" y="772" width="1" height="15" fill="rgb(240,190,16)"/><text x="268.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="265" y="788" width="1" height="15" fill="rgb(245,191,1)"/><text x="268.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="804" width="1" height="15" fill="rgb(252,178,51)"/><text x="268.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="820" width="1" height="15" fill="rgb(247,62,44)"/><text x="268.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="836" width="1" height="15" fill="rgb(234,70,6)"/><text x="268.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="852" width="1" height="15" fill="rgb(250,0,46)"/><text x="268.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="868" width="1" height="15" fill="rgb(231,188,14)"/><text x="268.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="884" width="1" height="15" fill="rgb(231,204,8)"/><text x="268.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.11%)</title><rect x="265" y="900" width="1" height="15" fill="rgb(206,46,31)"/><text x="268.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="916" width="1" height="15" fill="rgb(232,93,20)"/><text x="268.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="932" width="1" height="15" fill="rgb(239,209,4)"/><text x="268.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="948" width="1" height="15" fill="rgb(209,61,20)"/><text x="268.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="964" width="1" height="15" fill="rgb(234,53,18)"/><text x="268.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="980" width="1" height="15" fill="rgb(241,56,35)"/><text x="268.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.11%)</title><rect x="265" y="996" width="1" height="15" fill="rgb(215,152,33)"/><text x="268.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="265" y="1012" width="1" height="15" fill="rgb(205,201,22)"/><text x="268.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="1028" width="1" height="15" fill="rgb(239,146,14)"/><text x="268.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="1044" width="1" height="15" fill="rgb(244,149,22)"/><text x="268.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="1060" width="1" height="15" fill="rgb(214,31,47)"/><text x="268.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="1076" width="1" height="15" fill="rgb(251,88,6)"/><text x="268.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="1092" width="1" height="15" fill="rgb(230,98,34)"/><text x="268.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="1108" width="1" height="15" fill="rgb(215,104,41)"/><text x="268.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.11%)</title><rect x="265" y="1124" width="1" height="15" fill="rgb(241,42,22)"/><text x="268.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="1140" width="1" height="15" fill="rgb(216,16,13)"/><text x="268.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="265" y="1156" width="1" height="15" fill="rgb(229,14,7)"/><text x="268.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="265" y="1172" width="1" height="15" fill="rgb(253,29,28)"/><text x="268.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="265" y="1188" width="1" height="15" fill="rgb(250,198,6)"/><text x="268.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="1204" width="1" height="15" fill="rgb(221,85,26)"/><text x="268.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:21) (1 samples, 0.11%)</title><rect x="265" y="1220" width="1" height="15" fill="rgb(207,78,10)"/><text x="268.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="265" y="1236" width="1" height="15" fill="rgb(254,14,53)"/><text x="268.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="265" y="1252" width="1" height="15" fill="rgb(219,208,5)"/><text x="268.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="265" y="1268" width="1" height="15" fill="rgb(238,39,1)"/><text x="268.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.11%)</title><rect x="265" y="1284" width="1" height="15" fill="rgb(234,38,34)"/><text x="268.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.11%)</title><rect x="265" y="1300" width="1" height="15" fill="rgb(231,220,23)"/><text x="268.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.11%)</title><rect x="265" y="1316" width="1" height="15" fill="rgb(212,224,7)"/><text x="268.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.11%)</title><rect x="265" y="1332" width="1" height="15" fill="rgb(220,219,54)"/><text x="268.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1362) (1 samples, 0.11%)</title><rect x="265" y="1348" width="1" height="15" fill="rgb(212,5,51)"/><text x="268.00" y="1358.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:17) (1 samples, 0.11%)</title><rect x="266" y="580" width="1" height="15" fill="rgb(230,114,17)"/><text x="269.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="266" y="596" width="1" height="15" fill="rgb(243,164,2)"/><text x="269.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="266" y="612" width="1" height="15" fill="rgb(207,46,8)"/><text x="269.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="266" y="628" width="1" height="15" fill="rgb(217,175,1)"/><text x="269.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="266" y="644" width="1" height="15" fill="rgb(223,136,15)"/><text x="269.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="266" y="660" width="1" height="15" fill="rgb(224,152,52)"/><text x="269.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py:59) (1 samples, 0.11%)</title><rect x="266" y="676" width="1" height="15" fill="rgb(226,151,2)"/><text x="269.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py:35) (1 samples, 0.11%)</title><rect x="266" y="692" width="1" height="15" fill="rgb(209,82,30)"/><text x="269.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py:35) (1 samples, 0.11%)</title><rect x="266" y="708" width="1" height="15" fill="rgb(209,108,6)"/><text x="269.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.22%)</title><rect x="266" y="484" width="3" height="15" fill="rgb(214,47,3)"/><text x="269.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="266" y="500" width="3" height="15" fill="rgb(213,119,30)"/><text x="269.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="266" y="516" width="3" height="15" fill="rgb(245,217,4)"/><text x="269.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="266" y="532" width="3" height="15" fill="rgb(225,87,46)"/><text x="269.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="266" y="548" width="3" height="15" fill="rgb(229,161,21)"/><text x="269.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="266" y="564" width="3" height="15" fill="rgb(252,180,54)"/><text x="269.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.11%)</title><rect x="267" y="580" width="2" height="15" fill="rgb(236,133,50)"/><text x="270.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="267" y="596" width="2" height="15" fill="rgb(208,183,8)"/><text x="270.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="267" y="612" width="2" height="15" fill="rgb(211,65,6)"/><text x="270.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="267" y="628" width="2" height="15" fill="rgb(224,183,28)"/><text x="270.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="267" y="644" width="2" height="15" fill="rgb(227,138,21)"/><text x="270.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="267" y="660" width="2" height="15" fill="rgb(248,78,16)"/><text x="270.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.11%)</title><rect x="267" y="676" width="2" height="15" fill="rgb(235,136,7)"/><text x="270.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="267" y="692" width="2" height="15" fill="rgb(233,131,41)"/><text x="270.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="267" y="708" width="2" height="15" fill="rgb(208,150,6)"/><text x="270.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="267" y="724" width="2" height="15" fill="rgb(226,55,22)"/><text x="270.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="267" y="740" width="2" height="15" fill="rgb(246,42,45)"/><text x="270.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="267" y="756" width="2" height="15" fill="rgb(228,34,3)"/><text x="270.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:115) (1 samples, 0.11%)</title><rect x="267" y="772" width="2" height="15" fill="rgb(245,94,12)"/><text x="270.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="267" y="788" width="2" height="15" fill="rgb(234,23,15)"/><text x="270.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="267" y="804" width="2" height="15" fill="rgb(224,192,36)"/><text x="270.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="267" y="820" width="2" height="15" fill="rgb(233,59,33)"/><text x="270.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="267" y="836" width="2" height="15" fill="rgb(218,50,15)"/><text x="270.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="267" y="852" width="2" height="15" fill="rgb(217,47,21)"/><text x="270.00" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="267" y="868" width="2" height="15" fill="rgb(207,17,54)"/><text x="270.00" y="878.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:15) (1 samples, 0.11%)</title><rect x="269" y="724" width="1" height="15" fill="rgb(216,6,11)"/><text x="272.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="269" y="740" width="1" height="15" fill="rgb(233,93,44)"/><text x="272.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="269" y="756" width="1" height="15" fill="rgb(221,225,10)"/><text x="272.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="269" y="772" width="1" height="15" fill="rgb(237,217,7)"/><text x="272.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="269" y="788" width="1" height="15" fill="rgb(218,138,20)"/><text x="272.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="269" y="804" width="1" height="15" fill="rgb(248,187,45)"/><text x="272.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/ftp_transfer.py:5) (1 samples, 0.11%)</title><rect x="269" y="820" width="1" height="15" fill="rgb(252,198,38)"/><text x="272.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="269" y="836" width="1" height="15" fill="rgb(208,190,36)"/><text x="272.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="269" y="852" width="1" height="15" fill="rgb(241,69,31)"/><text x="272.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="269" y="868" width="1" height="15" fill="rgb(249,165,54)"/><text x="272.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="269" y="884" width="1" height="15" fill="rgb(224,157,31)"/><text x="272.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="269" y="900" width="1" height="15" fill="rgb(251,91,28)"/><text x="272.00" y="910.50"></text></g><g><title>&lt;module&gt; (ftplib.py:58) (1 samples, 0.11%)</title><rect x="269" y="916" width="1" height="15" fill="rgb(243,109,49)"/><text x="272.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 0.43%)</title><rect x="266" y="244" width="5" height="15" fill="rgb(242,197,30)"/><text x="269.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="266" y="260" width="5" height="15" fill="rgb(244,198,3)"/><text x="269.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="266" y="276" width="5" height="15" fill="rgb(231,184,21)"/><text x="269.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="266" y="292" width="5" height="15" fill="rgb(208,163,40)"/><text x="269.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="266" y="308" width="5" height="15" fill="rgb(235,226,45)"/><text x="269.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="266" y="324" width="5" height="15" fill="rgb(233,206,34)"/><text x="269.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 0.43%)</title><rect x="266" y="340" width="5" height="15" fill="rgb(212,203,38)"/><text x="269.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="266" y="356" width="5" height="15" fill="rgb(251,43,13)"/><text x="269.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.43%)</title><rect x="266" y="372" width="5" height="15" fill="rgb(231,47,29)"/><text x="269.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="266" y="388" width="5" height="15" fill="rgb(245,46,7)"/><text x="269.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="266" y="404" width="5" height="15" fill="rgb(236,170,41)"/><text x="269.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="266" y="420" width="5" height="15" fill="rgb(242,91,16)"/><text x="269.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="266" y="436" width="5" height="15" fill="rgb(207,75,0)"/><text x="269.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="266" y="452" width="5" height="15" fill="rgb(229,92,31)"/><text x="269.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="266" y="468" width="5" height="15" fill="rgb(242,22,47)"/><text x="269.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.22%)</title><rect x="269" y="484" width="2" height="15" fill="rgb(226,162,47)"/><text x="272.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="269" y="500" width="2" height="15" fill="rgb(216,63,27)"/><text x="272.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="269" y="516" width="2" height="15" fill="rgb(249,169,46)"/><text x="272.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="269" y="532" width="2" height="15" fill="rgb(239,191,5)"/><text x="272.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="269" y="548" width="2" height="15" fill="rgb(233,174,27)"/><text x="272.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="269" y="564" width="2" height="15" fill="rgb(240,19,13)"/><text x="272.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.22%)</title><rect x="269" y="580" width="2" height="15" fill="rgb(254,203,3)"/><text x="272.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="269" y="596" width="2" height="15" fill="rgb(211,45,8)"/><text x="272.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.22%)</title><rect x="269" y="612" width="2" height="15" fill="rgb(217,171,3)"/><text x="272.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="269" y="628" width="2" height="15" fill="rgb(228,212,41)"/><text x="272.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="269" y="644" width="2" height="15" fill="rgb(228,67,10)"/><text x="272.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="269" y="660" width="2" height="15" fill="rgb(251,165,16)"/><text x="272.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="269" y="676" width="2" height="15" fill="rgb(216,184,35)"/><text x="272.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="269" y="692" width="2" height="15" fill="rgb(248,85,10)"/><text x="272.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="269" y="708" width="2" height="15" fill="rgb(227,39,25)"/><text x="272.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.11%)</title><rect x="270" y="724" width="1" height="15" fill="rgb(209,115,21)"/><text x="273.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="270" y="740" width="1" height="15" fill="rgb(227,46,40)"/><text x="273.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="270" y="756" width="1" height="15" fill="rgb(221,156,9)"/><text x="273.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="270" y="772" width="1" height="15" fill="rgb(230,68,13)"/><text x="273.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="270" y="788" width="1" height="15" fill="rgb(246,192,45)"/><text x="273.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="270" y="804" width="1" height="15" fill="rgb(239,182,14)"/><text x="273.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.11%)</title><rect x="270" y="820" width="1" height="15" fill="rgb(217,160,45)"/><text x="273.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="270" y="836" width="1" height="15" fill="rgb(244,33,32)"/><text x="273.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="270" y="852" width="1" height="15" fill="rgb(253,186,20)"/><text x="273.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="270" y="868" width="1" height="15" fill="rgb(208,80,6)"/><text x="273.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="270" y="884" width="1" height="15" fill="rgb(241,97,20)"/><text x="273.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="270" y="900" width="1" height="15" fill="rgb(215,41,24)"/><text x="273.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.11%)</title><rect x="270" y="916" width="1" height="15" fill="rgb(252,149,40)"/><text x="273.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="270" y="932" width="1" height="15" fill="rgb(205,225,28)"/><text x="273.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="270" y="948" width="1" height="15" fill="rgb(212,105,52)"/><text x="273.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="270" y="964" width="1" height="15" fill="rgb(216,179,47)"/><text x="273.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="270" y="980" width="1" height="15" fill="rgb(213,123,10)"/><text x="273.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="270" y="996" width="1" height="15" fill="rgb(226,155,2)"/><text x="273.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="270" y="1012" width="1" height="15" fill="rgb(242,228,17)"/><text x="273.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="270" y="1028" width="1" height="15" fill="rgb(246,118,43)"/><text x="273.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="270" y="1044" width="1" height="15" fill="rgb(250,179,45)"/><text x="273.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.11%)</title><rect x="270" y="1060" width="1" height="15" fill="rgb(230,215,43)"/><text x="273.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="270" y="1076" width="1" height="15" fill="rgb(248,189,3)"/><text x="273.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="270" y="1092" width="1" height="15" fill="rgb(209,203,16)"/><text x="273.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.11%)</title><rect x="270" y="1108" width="1" height="15" fill="rgb(209,197,20)"/><text x="273.00" y="1118.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.11%)</title><rect x="270" y="1124" width="1" height="15" fill="rgb(208,182,16)"/><text x="273.00" y="1134.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.11%)</title><rect x="270" y="1140" width="1" height="15" fill="rgb(219,7,54)"/><text x="273.00" y="1150.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.11%)</title><rect x="270" y="1156" width="1" height="15" fill="rgb(216,66,25)"/><text x="273.00" y="1166.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.11%)</title><rect x="270" y="1172" width="1" height="15" fill="rgb(220,221,14)"/><text x="273.00" y="1182.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.11%)</title><rect x="270" y="1188" width="1" height="15" fill="rgb(222,111,42)"/><text x="273.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.11%)</title><rect x="271" y="436" width="2" height="15" fill="rgb(235,58,10)"/><text x="274.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="452" width="2" height="15" fill="rgb(209,183,29)"/><text x="274.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="468" width="2" height="15" fill="rgb(237,151,30)"/><text x="274.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="484" width="2" height="15" fill="rgb(246,173,33)"/><text x="274.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="500" width="2" height="15" fill="rgb(210,36,26)"/><text x="274.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="516" width="2" height="15" fill="rgb(213,136,21)"/><text x="274.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.11%)</title><rect x="271" y="532" width="2" height="15" fill="rgb(205,74,43)"/><text x="274.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="548" width="2" height="15" fill="rgb(248,2,39)"/><text x="274.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="564" width="2" height="15" fill="rgb(226,48,40)"/><text x="274.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="580" width="2" height="15" fill="rgb(227,189,17)"/><text x="274.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="596" width="2" height="15" fill="rgb(212,174,16)"/><text x="274.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="612" width="2" height="15" fill="rgb(225,60,21)"/><text x="274.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.11%)</title><rect x="271" y="628" width="2" height="15" fill="rgb(244,164,23)"/><text x="274.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="644" width="2" height="15" fill="rgb(240,149,29)"/><text x="274.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="660" width="2" height="15" fill="rgb(227,183,7)"/><text x="274.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="676" width="2" height="15" fill="rgb(242,137,15)"/><text x="274.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="692" width="2" height="15" fill="rgb(215,183,16)"/><text x="274.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="708" width="2" height="15" fill="rgb(236,96,25)"/><text x="274.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.11%)</title><rect x="271" y="724" width="2" height="15" fill="rgb(214,198,8)"/><text x="274.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="740" width="2" height="15" fill="rgb(213,7,43)"/><text x="274.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="756" width="2" height="15" fill="rgb(239,191,41)"/><text x="274.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="772" width="2" height="15" fill="rgb(210,90,36)"/><text x="274.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="788" width="2" height="15" fill="rgb(226,223,19)"/><text x="274.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="804" width="2" height="15" fill="rgb(214,10,7)"/><text x="274.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.11%)</title><rect x="271" y="820" width="2" height="15" fill="rgb(206,99,28)"/><text x="274.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="836" width="2" height="15" fill="rgb(237,106,35)"/><text x="274.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="852" width="2" height="15" fill="rgb(219,225,16)"/><text x="274.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="868" width="2" height="15" fill="rgb(251,223,51)"/><text x="274.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="884" width="2" height="15" fill="rgb(210,22,2)"/><text x="274.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="900" width="2" height="15" fill="rgb(207,147,38)"/><text x="274.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.11%)</title><rect x="271" y="916" width="2" height="15" fill="rgb(239,61,40)"/><text x="274.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="932" width="2" height="15" fill="rgb(218,223,40)"/><text x="274.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="948" width="2" height="15" fill="rgb(230,216,32)"/><text x="274.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="964" width="2" height="15" fill="rgb(250,44,51)"/><text x="274.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="980" width="2" height="15" fill="rgb(253,19,42)"/><text x="274.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="996" width="2" height="15" fill="rgb(250,104,14)"/><text x="274.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.11%)</title><rect x="271" y="1012" width="2" height="15" fill="rgb(207,173,28)"/><text x="274.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1028" width="2" height="15" fill="rgb(232,106,8)"/><text x="274.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1044" width="2" height="15" fill="rgb(247,68,28)"/><text x="274.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1060" width="2" height="15" fill="rgb(236,22,2)"/><text x="274.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1076" width="2" height="15" fill="rgb(213,1,17)"/><text x="274.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1092" width="2" height="15" fill="rgb(218,76,50)"/><text x="274.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.11%)</title><rect x="271" y="1108" width="2" height="15" fill="rgb(238,80,18)"/><text x="274.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1124" width="2" height="15" fill="rgb(246,191,15)"/><text x="274.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1140" width="2" height="15" fill="rgb(254,4,24)"/><text x="274.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1156" width="2" height="15" fill="rgb(205,25,32)"/><text x="274.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1172" width="2" height="15" fill="rgb(210,169,3)"/><text x="274.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1188" width="2" height="15" fill="rgb(245,101,35)"/><text x="274.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.11%)</title><rect x="271" y="1204" width="2" height="15" fill="rgb(229,118,46)"/><text x="274.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1220" width="2" height="15" fill="rgb(233,130,42)"/><text x="274.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1236" width="2" height="15" fill="rgb(211,82,36)"/><text x="274.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1252" width="2" height="15" fill="rgb(236,45,23)"/><text x="274.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1268" width="2" height="15" fill="rgb(209,142,8)"/><text x="274.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1284" width="2" height="15" fill="rgb(239,210,9)"/><text x="274.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.11%)</title><rect x="271" y="1300" width="2" height="15" fill="rgb(251,169,22)"/><text x="274.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1316" width="2" height="15" fill="rgb(220,196,23)"/><text x="274.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1332" width="2" height="15" fill="rgb(239,219,40)"/><text x="274.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1348" width="2" height="15" fill="rgb(248,2,45)"/><text x="274.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1364" width="2" height="15" fill="rgb(224,24,53)"/><text x="274.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1380" width="2" height="15" fill="rgb(229,155,2)"/><text x="274.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.11%)</title><rect x="271" y="1396" width="2" height="15" fill="rgb(227,138,25)"/><text x="274.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1412" width="2" height="15" fill="rgb(235,169,12)"/><text x="274.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1428" width="2" height="15" fill="rgb(242,109,31)"/><text x="274.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1444" width="2" height="15" fill="rgb(214,220,48)"/><text x="274.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1460" width="2" height="15" fill="rgb(231,64,38)"/><text x="274.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1476" width="2" height="15" fill="rgb(247,130,30)"/><text x="274.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.11%)</title><rect x="271" y="1492" width="2" height="15" fill="rgb(231,191,38)"/><text x="274.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1508" width="2" height="15" fill="rgb(233,114,18)"/><text x="274.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.11%)</title><rect x="271" y="1524" width="2" height="15" fill="rgb(210,16,45)"/><text x="274.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1540" width="2" height="15" fill="rgb(221,180,50)"/><text x="274.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1556" width="2" height="15" fill="rgb(236,113,48)"/><text x="274.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1572" width="2" height="15" fill="rgb(215,188,22)"/><text x="274.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1588" width="2" height="15" fill="rgb(211,15,8)"/><text x="274.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1604" width="2" height="15" fill="rgb(224,205,45)"/><text x="274.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1620" width="2" height="15" fill="rgb(247,57,8)"/><text x="274.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.11%)</title><rect x="271" y="1636" width="2" height="15" fill="rgb(238,89,15)"/><text x="274.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.11%)</title><rect x="271" y="1652" width="2" height="15" fill="rgb(228,118,0)"/><text x="274.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1668" width="2" height="15" fill="rgb(222,14,14)"/><text x="274.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1684" width="2" height="15" fill="rgb(206,42,5)"/><text x="274.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1700" width="2" height="15" fill="rgb(223,144,47)"/><text x="274.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1716" width="2" height="15" fill="rgb(228,204,54)"/><text x="274.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1732" width="2" height="15" fill="rgb(226,158,31)"/><text x="274.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1748" width="2" height="15" fill="rgb(246,113,34)"/><text x="274.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.11%)</title><rect x="271" y="1764" width="2" height="15" fill="rgb(236,145,49)"/><text x="274.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1780" width="2" height="15" fill="rgb(226,147,11)"/><text x="274.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1796" width="2" height="15" fill="rgb(229,214,20)"/><text x="274.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1812" width="2" height="15" fill="rgb(249,134,5)"/><text x="274.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1828" width="2" height="15" fill="rgb(252,190,46)"/><text x="274.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1844" width="2" height="15" fill="rgb(224,118,11)"/><text x="274.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.11%)</title><rect x="271" y="1860" width="2" height="15" fill="rgb(251,219,24)"/><text x="274.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="271" y="1876" width="2" height="15" fill="rgb(236,139,54)"/><text x="274.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="271" y="1892" width="2" height="15" fill="rgb(222,176,2)"/><text x="274.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="271" y="1908" width="2" height="15" fill="rgb(220,88,37)"/><text x="274.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="271" y="1924" width="2" height="15" fill="rgb(217,163,54)"/><text x="274.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="271" y="1940" width="2" height="15" fill="rgb(217,131,2)"/><text x="274.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6744) (1 samples, 0.11%)</title><rect x="271" y="1956" width="2" height="15" fill="rgb(216,48,35)"/><text x="274.00" y="1966.50"></text></g><g><title>pyparsing_unicode (pyparsing.py:6798) (1 samples, 0.11%)</title><rect x="271" y="1972" width="2" height="15" fill="rgb(218,99,39)"/><text x="274.00" y="1982.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.11%)</title><rect x="273" y="1108" width="1" height="15" fill="rgb(213,85,29)"/><text x="276.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="273" y="1124" width="1" height="15" fill="rgb(220,54,50)"/><text x="276.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="273" y="1140" width="1" height="15" fill="rgb(215,121,43)"/><text x="276.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="273" y="1156" width="1" height="15" fill="rgb(223,180,4)"/><text x="276.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="273" y="1172" width="1" height="15" fill="rgb(245,142,33)"/><text x="276.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="273" y="1188" width="1" height="15" fill="rgb(242,28,25)"/><text x="276.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.11%)</title><rect x="273" y="1204" width="1" height="15" fill="rgb(221,217,49)"/><text x="276.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="273" y="1220" width="1" height="15" fill="rgb(240,50,51)"/><text x="276.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="273" y="1236" width="1" height="15" fill="rgb(240,95,26)"/><text x="276.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="273" y="1252" width="1" height="15" fill="rgb(246,86,9)"/><text x="276.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="273" y="1268" width="1" height="15" fill="rgb(245,93,37)"/><text x="276.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="273" y="1284" width="1" height="15" fill="rgb(218,91,17)"/><text x="276.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:53) (1 samples, 0.11%)</title><rect x="273" y="1300" width="1" height="15" fill="rgb(209,13,0)"/><text x="276.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="273" y="1316" width="1" height="15" fill="rgb(218,74,2)"/><text x="276.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="273" y="1332" width="1" height="15" fill="rgb(250,79,37)"/><text x="276.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="273" y="1348" width="1" height="15" fill="rgb(216,134,2)"/><text x="276.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="273" y="1364" width="1" height="15" fill="rgb(236,36,41)"/><text x="276.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="273" y="1380" width="1" height="15" fill="rgb(234,163,16)"/><text x="276.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.11%)</title><rect x="273" y="1396" width="1" height="15" fill="rgb(223,87,9)"/><text x="276.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="273" y="1412" width="1" height="15" fill="rgb(226,147,32)"/><text x="276.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="273" y="1428" width="1" height="15" fill="rgb(223,32,14)"/><text x="276.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="273" y="1444" width="1" height="15" fill="rgb(234,58,5)"/><text x="276.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.11%)</title><rect x="273" y="1460" width="1" height="15" fill="rgb(249,94,30)"/><text x="276.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.11%)</title><rect x="273" y="1476" width="1" height="15" fill="rgb(227,216,9)"/><text x="276.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.11%)</title><rect x="273" y="1492" width="1" height="15" fill="rgb(227,40,29)"/><text x="276.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:4) (16 samples, 1.73%)</title><rect x="256" y="52" width="20" height="15" fill="rgb(207,49,16)"/><text x="259.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 1.73%)</title><rect x="256" y="68" width="20" height="15" fill="rgb(250,77,25)"/><text x="259.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 1.73%)</title><rect x="256" y="84" width="20" height="15" fill="rgb(227,150,39)"/><text x="259.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 1.73%)</title><rect x="256" y="100" width="20" height="15" fill="rgb(244,105,17)"/><text x="259.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 1.73%)</title><rect x="256" y="116" width="20" height="15" fill="rgb(232,58,46)"/><text x="259.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 1.73%)</title><rect x="256" y="132" width="20" height="15" fill="rgb(218,22,32)"/><text x="259.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_poly_m_cl_probabilityTrue_kernelpoly.py:7) (8 samples, 0.87%)</title><rect x="266" y="148" width="10" height="15" fill="rgb(228,75,36)"/><text x="269.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.87%)</title><rect x="266" y="164" width="10" height="15" fill="rgb(220,139,24)"/><text x="269.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.87%)</title><rect x="266" y="180" width="10" height="15" fill="rgb(235,90,21)"/><text x="269.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.87%)</title><rect x="266" y="196" width="10" height="15" fill="rgb(237,65,21)"/><text x="269.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.87%)</title><rect x="266" y="212" width="10" height="15" fill="rgb(216,69,34)"/><text x="269.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.87%)</title><rect x="266" y="228" width="10" height="15" fill="rgb(252,154,9)"/><text x="269.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 0.43%)</title><rect x="271" y="244" width="5" height="15" fill="rgb(216,216,3)"/><text x="274.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="271" y="260" width="5" height="15" fill="rgb(227,171,46)"/><text x="274.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="271" y="276" width="5" height="15" fill="rgb(250,22,12)"/><text x="274.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="271" y="292" width="5" height="15" fill="rgb(245,26,48)"/><text x="274.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="271" y="308" width="5" height="15" fill="rgb(248,114,10)"/><text x="274.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="271" y="324" width="5" height="15" fill="rgb(253,100,23)"/><text x="274.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 0.43%)</title><rect x="271" y="340" width="5" height="15" fill="rgb(249,107,2)"/><text x="274.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.43%)</title><rect x="271" y="356" width="5" height="15" fill="rgb(242,134,27)"/><text x="274.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.43%)</title><rect x="271" y="372" width="5" height="15" fill="rgb(218,177,8)"/><text x="274.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.43%)</title><rect x="271" y="388" width="5" height="15" fill="rgb(207,146,19)"/><text x="274.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.43%)</title><rect x="271" y="404" width="5" height="15" fill="rgb(250,220,37)"/><text x="274.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.43%)</title><rect x="271" y="420" width="5" height="15" fill="rgb(242,97,28)"/><text x="274.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.32%)</title><rect x="273" y="436" width="3" height="15" fill="rgb(235,11,16)"/><text x="276.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="452" width="3" height="15" fill="rgb(209,22,12)"/><text x="276.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.32%)</title><rect x="273" y="468" width="3" height="15" fill="rgb(237,212,29)"/><text x="276.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="484" width="3" height="15" fill="rgb(249,151,44)"/><text x="276.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="500" width="3" height="15" fill="rgb(247,105,18)"/><text x="276.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="516" width="3" height="15" fill="rgb(219,41,33)"/><text x="276.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="532" width="3" height="15" fill="rgb(252,16,13)"/><text x="276.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="548" width="3" height="15" fill="rgb(216,222,26)"/><text x="276.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="564" width="3" height="15" fill="rgb(244,41,33)"/><text x="276.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.32%)</title><rect x="273" y="580" width="3" height="15" fill="rgb(236,186,10)"/><text x="276.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="596" width="3" height="15" fill="rgb(253,217,13)"/><text x="276.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="612" width="3" height="15" fill="rgb(252,198,32)"/><text x="276.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="628" width="3" height="15" fill="rgb(242,54,8)"/><text x="276.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="644" width="3" height="15" fill="rgb(224,173,19)"/><text x="276.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="660" width="3" height="15" fill="rgb(225,39,49)"/><text x="276.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.32%)</title><rect x="273" y="676" width="3" height="15" fill="rgb(235,41,1)"/><text x="276.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="692" width="3" height="15" fill="rgb(226,212,3)"/><text x="276.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="708" width="3" height="15" fill="rgb(254,111,53)"/><text x="276.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="724" width="3" height="15" fill="rgb(208,181,49)"/><text x="276.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="740" width="3" height="15" fill="rgb(236,14,37)"/><text x="276.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="756" width="3" height="15" fill="rgb(212,4,53)"/><text x="276.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.32%)</title><rect x="273" y="772" width="3" height="15" fill="rgb(218,134,45)"/><text x="276.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="788" width="3" height="15" fill="rgb(237,210,52)"/><text x="276.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="804" width="3" height="15" fill="rgb(207,52,13)"/><text x="276.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="820" width="3" height="15" fill="rgb(239,128,54)"/><text x="276.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="836" width="3" height="15" fill="rgb(206,131,19)"/><text x="276.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="852" width="3" height="15" fill="rgb(244,43,29)"/><text x="276.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.32%)</title><rect x="273" y="868" width="3" height="15" fill="rgb(229,179,45)"/><text x="276.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="884" width="3" height="15" fill="rgb(211,84,19)"/><text x="276.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.32%)</title><rect x="273" y="900" width="3" height="15" fill="rgb(254,112,37)"/><text x="276.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="916" width="3" height="15" fill="rgb(239,49,42)"/><text x="276.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="932" width="3" height="15" fill="rgb(246,4,54)"/><text x="276.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="948" width="3" height="15" fill="rgb(222,102,34)"/><text x="276.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="964" width="3" height="15" fill="rgb(234,113,5)"/><text x="276.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="980" width="3" height="15" fill="rgb(224,139,3)"/><text x="276.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="996" width="3" height="15" fill="rgb(233,147,17)"/><text x="276.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.32%)</title><rect x="273" y="1012" width="3" height="15" fill="rgb(223,219,0)"/><text x="276.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.32%)</title><rect x="273" y="1028" width="3" height="15" fill="rgb(246,182,0)"/><text x="276.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.32%)</title><rect x="273" y="1044" width="3" height="15" fill="rgb(243,165,1)"/><text x="276.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.32%)</title><rect x="273" y="1060" width="3" height="15" fill="rgb(216,207,52)"/><text x="276.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.32%)</title><rect x="273" y="1076" width="3" height="15" fill="rgb(244,181,28)"/><text x="276.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.32%)</title><rect x="273" y="1092" width="3" height="15" fill="rgb(245,49,25)"/><text x="276.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.22%)</title><rect x="274" y="1108" width="2" height="15" fill="rgb(214,22,43)"/><text x="277.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="274" y="1124" width="2" height="15" fill="rgb(244,43,47)"/><text x="277.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="274" y="1140" width="2" height="15" fill="rgb(236,56,30)"/><text x="277.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="274" y="1156" width="2" height="15" fill="rgb(254,91,46)"/><text x="277.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="274" y="1172" width="2" height="15" fill="rgb(234,59,19)"/><text x="277.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="274" y="1188" width="2" height="15" fill="rgb(223,38,2)"/><text x="277.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="274" y="1204" width="2" height="15" fill="rgb(214,81,31)"/><text x="277.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="274" y="1220" width="2" height="15" fill="rgb(253,26,28)"/><text x="277.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.22%)</title><rect x="274" y="1236" width="2" height="15" fill="rgb(213,109,16)"/><text x="277.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.22%)</title><rect x="274" y="1252" width="2" height="15" fill="rgb(215,51,46)"/><text x="277.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="274" y="1268" width="2" height="15" fill="rgb(209,194,40)"/><text x="277.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="274" y="1284" width="2" height="15" fill="rgb(222,122,4)"/><text x="277.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="274" y="1300" width="2" height="15" fill="rgb(216,160,30)"/><text x="277.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="274" y="1316" width="2" height="15" fill="rgb(217,19,31)"/><text x="277.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="274" y="1332" width="2" height="15" fill="rgb(233,105,33)"/><text x="277.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="274" y="1348" width="2" height="15" fill="rgb(206,14,18)"/><text x="277.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.22%)</title><rect x="274" y="1364" width="2" height="15" fill="rgb(251,125,3)"/><text x="277.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.22%)</title><rect x="274" y="1380" width="2" height="15" fill="rgb(224,129,0)"/><text x="277.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.22%)</title><rect x="274" y="1396" width="2" height="15" fill="rgb(229,189,38)"/><text x="277.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.22%)</title><rect x="274" y="1412" width="2" height="15" fill="rgb(208,200,21)"/><text x="277.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.22%)</title><rect x="274" y="1428" width="2" height="15" fill="rgb(237,229,8)"/><text x="277.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.22%)</title><rect x="274" y="1444" width="2" height="15" fill="rgb(252,0,20)"/><text x="277.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.22%)</title><rect x="274" y="1460" width="2" height="15" fill="rgb(226,118,10)"/><text x="277.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.22%)</title><rect x="274" y="1476" width="2" height="15" fill="rgb(245,172,11)"/><text x="277.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.22%)</title><rect x="274" y="1492" width="2" height="15" fill="rgb(230,98,3)"/><text x="277.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.22%)</title><rect x="274" y="1508" width="2" height="15" fill="rgb(211,199,47)"/><text x="277.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.22%)</title><rect x="274" y="1524" width="2" height="15" fill="rgb(252,87,53)"/><text x="277.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.22%)</title><rect x="274" y="1540" width="2" height="15" fill="rgb(246,142,10)"/><text x="277.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.22%)</title><rect x="274" y="1556" width="2" height="15" fill="rgb(235,52,46)"/><text x="277.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:64) (2 samples, 0.22%)</title><rect x="274" y="1572" width="2" height="15" fill="rgb(246,49,53)"/><text x="277.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:247) (2 samples, 0.22%)</title><rect x="274" y="1588" width="2" height="15" fill="rgb(246,43,19)"/><text x="277.00" y="1598.50"></text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:28) (1 samples, 0.11%)</title><rect x="276" y="84" width="2" height="15" fill="rgb(219,82,44)"/><text x="279.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.11%)</title><rect x="276" y="100" width="2" height="15" fill="rgb(234,74,37)"/><text x="279.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.11%)</title><rect x="276" y="116" width="2" height="15" fill="rgb(236,59,54)"/><text x="279.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.11%)</title><rect x="276" y="132" width="2" height="15" fill="rgb(231,174,4)"/><text x="279.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.11%)</title><rect x="276" y="148" width="2" height="15" fill="rgb(211,95,20)"/><text x="279.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.11%)</title><rect x="276" y="164" width="2" height="15" fill="rgb(229,104,17)"/><text x="279.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.11%)</title><rect x="276" y="180" width="2" height="15" fill="rgb(247,192,9)"/><text x="279.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.11%)</title><rect x="276" y="196" width="2" height="15" fill="rgb(249,130,51)"/><text x="279.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="276" y="212" width="2" height="15" fill="rgb(223,205,28)"/><text x="279.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="276" y="228" width="2" height="15" fill="rgb(224,117,5)"/><text x="279.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="276" y="244" width="2" height="15" fill="rgb(208,120,31)"/><text x="279.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="276" y="260" width="2" height="15" fill="rgb(240,132,40)"/><text x="279.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="276" y="276" width="2" height="15" fill="rgb(239,50,52)"/><text x="279.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.11%)</title><rect x="276" y="292" width="2" height="15" fill="rgb(214,105,18)"/><text x="279.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="276" y="308" width="2" height="15" fill="rgb(215,69,19)"/><text x="279.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="276" y="324" width="2" height="15" fill="rgb(242,220,18)"/><text x="279.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="276" y="340" width="2" height="15" fill="rgb(213,97,42)"/><text x="279.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="276" y="356" width="2" height="15" fill="rgb(239,190,43)"/><text x="279.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="276" y="372" width="2" height="15" fill="rgb(245,185,13)"/><text x="279.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.11%)</title><rect x="276" y="388" width="2" height="15" fill="rgb(215,149,4)"/><text x="279.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.11%)</title><rect x="276" y="404" width="2" height="15" fill="rgb(220,139,14)"/><text x="279.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.11%)</title><rect x="276" y="420" width="2" height="15" fill="rgb(208,219,40)"/><text x="279.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.11%)</title><rect x="276" y="436" width="2" height="15" fill="rgb(239,105,40)"/><text x="279.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.11%)</title><rect x="276" y="452" width="2" height="15" fill="rgb(227,191,6)"/><text x="279.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.11%)</title><rect x="276" y="468" width="2" height="15" fill="rgb(241,228,54)"/><text x="279.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.11%)</title><rect x="276" y="484" width="2" height="15" fill="rgb(205,85,18)"/><text x="279.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.11%)</title><rect x="276" y="500" width="2" height="15" fill="rgb(230,146,46)"/><text x="279.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.11%)</title><rect x="276" y="516" width="2" height="15" fill="rgb(228,79,20)"/><text x="279.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.11%)</title><rect x="276" y="532" width="2" height="15" fill="rgb(211,188,27)"/><text x="279.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.11%)</title><rect x="276" y="548" width="2" height="15" fill="rgb(213,76,20)"/><text x="279.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.11%)</title><rect x="276" y="564" width="2" height="15" fill="rgb(237,170,48)"/><text x="279.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.11%)</title><rect x="276" y="580" width="2" height="15" fill="rgb(218,66,39)"/><text x="279.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.11%)</title><rect x="276" y="596" width="2" height="15" fill="rgb(220,157,26)"/><text x="279.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:722) (1 samples, 0.11%)</title><rect x="276" y="612" width="2" height="15" fill="rgb(252,164,35)"/><text x="279.00" y="622.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.11%)</title><rect x="276" y="628" width="2" height="15" fill="rgb(231,76,52)"/><text x="279.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.11%)</title><rect x="276" y="644" width="2" height="15" fill="rgb(220,57,25)"/><text x="279.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.11%)</title><rect x="276" y="660" width="2" height="15" fill="rgb(221,167,13)"/><text x="279.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.11%)</title><rect x="276" y="676" width="2" height="15" fill="rgb(229,169,34)"/><text x="279.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.11%)</title><rect x="276" y="692" width="2" height="15" fill="rgb(249,223,3)"/><text x="279.00" y="702.50"></text></g><g><title>0x7f8981dd3c29 (?) (1 samples, 0.11%)</title><rect x="278" y="244" width="1" height="15" fill="rgb(225,182,34)"/><text x="281.00" y="254.50"></text></g><g><title>0x7f8981ddad9e (?) (1 samples, 0.11%)</title><rect x="278" y="260" width="1" height="15" fill="rgb(243,68,26)"/><text x="281.00" y="270.50"></text></g><g><title>0x7f8981ddac56 (?) (1 samples, 0.11%)</title><rect x="278" y="276" width="1" height="15" fill="rgb(226,197,30)"/><text x="281.00" y="286.50"></text></g><g><title>0x7f8981de0ac7 (?) (1 samples, 0.11%)</title><rect x="278" y="292" width="1" height="15" fill="rgb(225,26,26)"/><text x="281.00" y="302.50"></text></g><g><title>0x7f8981de0328 (?) (1 samples, 0.11%)</title><rect x="278" y="308" width="1" height="15" fill="rgb(227,155,40)"/><text x="281.00" y="318.50"></text></g><g><title>0x7f8981dd81ad (?) (1 samples, 0.11%)</title><rect x="278" y="324" width="1" height="15" fill="rgb(205,141,32)"/><text x="281.00" y="334.50"></text></g><g><title>0x7f8981dd8003 (?) (1 samples, 0.11%)</title><rect x="278" y="340" width="1" height="15" fill="rgb(233,88,13)"/><text x="281.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="278" y="356" width="1" height="15" fill="rgb(220,101,7)"/><text x="281.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.11%)</title><rect x="279" y="468" width="1" height="15" fill="rgb(236,121,20)"/><text x="282.00" y="478.50"></text></g><g><title>0x7f89c0c84d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="279" y="484" width="1" height="15" fill="rgb(233,23,27)"/><text x="282.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (3 samples, 0.32%)</title><rect x="279" y="452" width="4" height="15" fill="rgb(220,74,14)"/><text x="282.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.22%)</title><rect x="280" y="468" width="3" height="15" fill="rgb(230,52,15)"/><text x="283.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="280" y="484" width="3" height="15" fill="rgb(215,226,2)"/><text x="283.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (1 samples, 0.11%)</title><rect x="284" y="484" width="1" height="15" fill="rgb(214,224,12)"/><text x="287.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (3 samples, 0.32%)</title><rect x="283" y="452" width="4" height="15" fill="rgb(221,13,50)"/><text x="286.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:276) (2 samples, 0.22%)</title><rect x="284" y="468" width="3" height="15" fill="rgb(237,45,27)"/><text x="287.00" y="478.50"></text></g><g><title>vector_dot_product_pointer_sse&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:116) (1 samples, 0.11%)</title><rect x="285" y="484" width="2" height="15" fill="rgb(221,144,37)"/><text x="288.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:409) (1 samples, 0.11%)</title><rect x="287" y="452" width="1" height="15" fill="rgb(234,137,19)"/><text x="290.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (1 samples, 0.11%)</title><rect x="288" y="452" width="1" height="15" fill="rgb(246,195,33)"/><text x="291.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:918) (1 samples, 0.11%)</title><rect x="288" y="468" width="1" height="15" fill="rgb(226,0,1)"/><text x="291.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h:475) (1 samples, 0.11%)</title><rect x="288" y="484" width="1" height="15" fill="rgb(225,206,11)"/><text x="291.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h:120) (1 samples, 0.11%)</title><rect x="288" y="500" width="1" height="15" fill="rgb(226,214,15)"/><text x="291.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (1 samples, 0.11%)</title><rect x="289" y="452" width="1" height="15" fill="rgb(211,192,25)"/><text x="292.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (1 samples, 0.11%)</title><rect x="290" y="452" width="2" height="15" fill="rgb(254,221,39)"/><text x="293.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (1 samples, 0.11%)</title><rect x="290" y="468" width="2" height="15" fill="rgb(210,15,4)"/><text x="293.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (1 samples, 0.11%)</title><rect x="290" y="484" width="2" height="15" fill="rgb(232,160,5)"/><text x="293.00" y="494.50"></text></g><g><title>0x7f89c0de3e4e (libm-2.29.so) (1 samples, 0.11%)</title><rect x="290" y="500" width="2" height="15" fill="rgb(228,62,12)"/><text x="293.00" y="510.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (1 samples, 0.11%)</title><rect x="292" y="484" width="1" height="15" fill="rgb(233,134,46)"/><text x="295.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:350) (1 samples, 0.11%)</title><rect x="293" y="484" width="1" height="15" fill="rgb(245,14,25)"/><text x="296.00" y="494.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (14 samples, 1.52%)</title><rect x="278" y="100" width="18" height="15" fill="rgb(211,13,27)"/><text x="281.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (14 samples, 1.52%)</title><rect x="278" y="116" width="18" height="15" fill="rgb(209,153,36)"/><text x="281.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (14 samples, 1.52%)</title><rect x="278" y="132" width="18" height="15" fill="rgb(212,59,38)"/><text x="281.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (14 samples, 1.52%)</title><rect x="278" y="148" width="18" height="15" fill="rgb(244,168,46)"/><text x="281.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (14 samples, 1.52%)</title><rect x="278" y="164" width="18" height="15" fill="rgb(222,31,0)"/><text x="281.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (14 samples, 1.52%)</title><rect x="278" y="180" width="18" height="15" fill="rgb(222,116,34)"/><text x="281.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (14 samples, 1.52%)</title><rect x="278" y="196" width="18" height="15" fill="rgb(208,211,28)"/><text x="281.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (14 samples, 1.52%)</title><rect x="278" y="212" width="18" height="15" fill="rgb(220,220,48)"/><text x="281.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (14 samples, 1.52%)</title><rect x="278" y="228" width="18" height="15" fill="rgb(252,33,14)"/><text x="281.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (13 samples, 1.41%)</title><rect x="279" y="244" width="17" height="15" fill="rgb(213,189,43)"/><text x="282.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (13 samples, 1.41%)</title><rect x="279" y="260" width="17" height="15" fill="rgb(235,78,17)"/><text x="282.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (13 samples, 1.41%)</title><rect x="279" y="276" width="17" height="15" fill="rgb(218,183,38)"/><text x="282.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (13 samples, 1.41%)</title><rect x="279" y="292" width="17" height="15" fill="rgb(235,110,53)"/><text x="282.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (13 samples, 1.41%)</title><rect x="279" y="308" width="17" height="15" fill="rgb(247,53,30)"/><text x="282.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (13 samples, 1.41%)</title><rect x="279" y="324" width="17" height="15" fill="rgb(253,101,15)"/><text x="282.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (13 samples, 1.41%)</title><rect x="279" y="340" width="17" height="15" fill="rgb(249,162,43)"/><text x="282.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (13 samples, 1.41%)</title><rect x="279" y="356" width="17" height="15" fill="rgb(245,205,21)"/><text x="282.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (13 samples, 1.41%)</title><rect x="279" y="372" width="17" height="15" fill="rgb(250,57,42)"/><text x="282.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (13 samples, 1.41%)</title><rect x="279" y="388" width="17" height="15" fill="rgb(234,18,32)"/><text x="282.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (13 samples, 1.41%)</title><rect x="279" y="404" width="17" height="15" fill="rgb(236,225,4)"/><text x="282.00" y="414.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (13 samples, 1.41%)</title><rect x="279" y="420" width="17" height="15" fill="rgb(245,166,10)"/><text x="282.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (13 samples, 1.41%)</title><rect x="279" y="436" width="17" height="15" fill="rgb(233,189,2)"/><text x="282.00" y="446.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (3 samples, 0.32%)</title><rect x="292" y="452" width="4" height="15" fill="rgb(236,17,23)"/><text x="295.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (3 samples, 0.32%)</title><rect x="292" y="468" width="4" height="15" fill="rgb(232,52,35)"/><text x="295.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (1 samples, 0.11%)</title><rect x="294" y="484" width="2" height="15" fill="rgb(230,138,19)"/><text x="297.00" y="494.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.11%)</title><rect x="296" y="212" width="1" height="15" fill="rgb(214,95,33)"/><text x="299.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.11%)</title><rect x="296" y="228" width="1" height="15" fill="rgb(232,154,23)"/><text x="299.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.11%)</title><rect x="296" y="244" width="1" height="15" fill="rgb(207,21,52)"/><text x="299.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (2 samples, 0.22%)</title><rect x="296" y="196" width="2" height="15" fill="rgb(231,7,5)"/><text x="299.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.11%)</title><rect x="297" y="212" width="1" height="15" fill="rgb(227,179,38)"/><text x="300.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:138) (1 samples, 0.11%)</title><rect x="298" y="276" width="1" height="15" fill="rgb(253,165,38)"/><text x="301.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h:1887) (1 samples, 0.11%)</title><rect x="298" y="292" width="1" height="15" fill="rgb(237,200,14)"/><text x="301.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple:879) (1 samples, 0.11%)</title><rect x="298" y="308" width="1" height="15" fill="rgb(210,189,18)"/><text x="301.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple:202) (1 samples, 0.11%)</title><rect x="298" y="324" width="1" height="15" fill="rgb(246,29,51)"/><text x="301.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;, false&gt;::_Head_base (tuple:105) (1 samples, 0.11%)</title><rect x="298" y="340" width="1" height="15" fill="rgb(225,13,29)"/><text x="301.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeSVMClassifierFloat, void&gt;::type_caster (cast.h:911) (1 samples, 0.11%)</title><rect x="298" y="356" width="1" height="15" fill="rgb(252,32,37)"/><text x="301.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:832) (1 samples, 0.11%)</title><rect x="298" y="372" width="1" height="15" fill="rgb(234,45,54)"/><text x="301.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeSVMClassifierFloat&gt;::type_caster_base (cast.h:833) (1 samples, 0.11%)</title><rect x="298" y="388" width="1" height="15" fill="rgb(206,169,35)"/><text x="301.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:607) (1 samples, 0.11%)</title><rect x="298" y="404" width="1" height="15" fill="rgb(227,133,23)"/><text x="301.00" y="414.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.11%)</title><rect x="298" y="420" width="1" height="15" fill="rgb(214,26,25)"/><text x="301.00" y="430.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h:444) (1 samples, 0.11%)</title><rect x="298" y="436" width="1" height="15" fill="rgb(238,106,42)"/><text x="301.00" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.11%)</title><rect x="298" y="452" width="1" height="15" fill="rgb(213,51,8)"/><text x="301.00" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.11%)</title><rect x="298" y="468" width="1" height="15" fill="rgb(249,95,23)"/><text x="301.00" y="478.50"></text></g><g><title>pybind11::array::array (numpy.h:578) (1 samples, 0.11%)</title><rect x="298" y="484" width="1" height="15" fill="rgb(227,101,11)"/><text x="301.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.11%)</title><rect x="298" y="500" width="1" height="15" fill="rgb(222,222,8)"/><text x="301.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.11%)</title><rect x="298" y="516" width="1" height="15" fill="rgb(221,74,31)"/><text x="301.00" y="526.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.11%)</title><rect x="298" y="532" width="1" height="15" fill="rgb(232,82,25)"/><text x="301.00" y="542.50"></text></g><g><title>0x7f89c0c64961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="299" y="468" width="2" height="15" fill="rgb(243,2,15)"/><text x="302.00" y="478.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="301" y="468" width="1" height="15" fill="rgb(243,169,54)"/><text x="304.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:384) (3 samples, 0.32%)</title><rect x="299" y="452" width="4" height="15" fill="rgb(250,220,2)"/><text x="302.00" y="462.50"></text></g><g><title>0x7f89c0c64bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="302" y="468" width="1" height="15" fill="rgb(245,49,17)"/><text x="305.00" y="478.50"></text></g><g><title>0x7f89c0c6490a (libc-2.29.so) (1 samples, 0.11%)</title><rect x="303" y="484" width="2" height="15" fill="rgb(231,195,32)"/><text x="306.00" y="494.50"></text></g><g><title>0x7f89c0c64a4c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="305" y="484" width="1" height="15" fill="rgb(247,116,31)"/><text x="308.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:389) (3 samples, 0.32%)</title><rect x="303" y="452" width="4" height="15" fill="rgb(224,201,45)"/><text x="306.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (3 samples, 0.32%)</title><rect x="303" y="468" width="4" height="15" fill="rgb(223,204,12)"/><text x="306.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="306" y="484" width="1" height="15" fill="rgb(232,130,24)"/><text x="309.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:393) (1 samples, 0.11%)</title><rect x="307" y="452" width="1" height="15" fill="rgb(235,169,1)"/><text x="310.00" y="462.50"></text></g><g><title>0x7f8981dc3810 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="312" y="468" width="1" height="15" fill="rgb(227,202,51)"/><text x="315.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.11%)</title><rect x="313" y="468" width="2" height="15" fill="rgb(234,131,22)"/><text x="316.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.11%)</title><rect x="313" y="484" width="2" height="15" fill="rgb(236,105,44)"/><text x="316.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (4 samples, 0.43%)</title><rect x="315" y="468" width="5" height="15" fill="rgb(226,42,2)"/><text x="318.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (4 samples, 0.43%)</title><rect x="315" y="484" width="5" height="15" fill="rgb(211,180,51)"/><text x="318.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (4 samples, 0.43%)</title><rect x="315" y="500" width="5" height="15" fill="rgb(235,72,25)"/><text x="318.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (4 samples, 0.43%)</title><rect x="315" y="516" width="5" height="15" fill="rgb(237,44,22)"/><text x="318.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.43%)</title><rect x="315" y="532" width="5" height="15" fill="rgb(238,172,14)"/><text x="318.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="316" y="548" width="4" height="15" fill="rgb(233,15,44)"/><text x="319.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:416) (1 samples, 0.11%)</title><rect x="320" y="468" width="1" height="15" fill="rgb(231,110,17)"/><text x="323.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.11%)</title><rect x="320" y="484" width="1" height="15" fill="rgb(218,138,43)"/><text x="323.00" y="494.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:367) (1 samples, 0.11%)</title><rect x="321" y="596" width="1" height="15" fill="rgb(232,180,40)"/><text x="324.00" y="606.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:420) (3 samples, 0.32%)</title><rect x="321" y="468" width="4" height="15" fill="rgb(214,131,25)"/><text x="324.00" y="478.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h:304) (3 samples, 0.32%)</title><rect x="321" y="484" width="4" height="15" fill="rgb(233,155,47)"/><text x="324.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h:281) (3 samples, 0.32%)</title><rect x="321" y="500" width="4" height="15" fill="rgb(223,87,51)"/><text x="324.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:126) (3 samples, 0.32%)</title><rect x="321" y="516" width="4" height="15" fill="rgb(251,203,13)"/><text x="324.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h:93) (3 samples, 0.32%)</title><rect x="321" y="532" width="4" height="15" fill="rgb(227,170,26)"/><text x="324.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h:456) (3 samples, 0.32%)</title><rect x="321" y="548" width="4" height="15" fill="rgb(249,48,20)"/><text x="324.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h:424) (3 samples, 0.32%)</title><rect x="321" y="564" width="4" height="15" fill="rgb(220,80,30)"/><text x="324.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h:386) (3 samples, 0.32%)</title><rect x="321" y="580" width="4" height="15" fill="rgb(230,67,15)"/><text x="324.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h:368) (2 samples, 0.22%)</title><rect x="322" y="596" width="3" height="15" fill="rgb(205,53,51)"/><text x="325.00" y="606.50"></text></g><g><title>0x7f89c0c84dbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="325" y="484" width="1" height="15" fill="rgb(219,124,25)"/><text x="328.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (2 samples, 0.22%)</title><rect x="325" y="468" width="2" height="15" fill="rgb(246,151,33)"/><text x="328.00" y="478.50"></text></g><g><title>0x7f89c0c84dc9 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="326" y="484" width="1" height="15" fill="rgb(238,90,53)"/><text x="329.00" y="494.50"></text></g><g><title>0x7f89c0c64945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="327" y="484" width="2" height="15" fill="rgb(230,7,35)"/><text x="330.00" y="494.50"></text></g><g><title>0x7f89c0c6496a (libc-2.29.so) (2 samples, 0.22%)</title><rect x="329" y="484" width="2" height="15" fill="rgb(215,176,39)"/><text x="332.00" y="494.50"></text></g><g><title>0x7f89c0c6497c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="331" y="484" width="2" height="15" fill="rgb(209,32,5)"/><text x="334.00" y="494.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="333" y="484" width="1" height="15" fill="rgb(233,35,14)"/><text x="336.00" y="494.50"></text></g><g><title>0x7f89c0c64a53 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="334" y="484" width="1" height="15" fill="rgb(206,96,27)"/><text x="337.00" y="494.50"></text></g><g><title>0x7f89c0c64bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="335" y="484" width="1" height="15" fill="rgb(243,122,19)"/><text x="338.00" y="494.50"></text></g><g><title>0x7f89c0c64bd4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="336" y="484" width="2" height="15" fill="rgb(242,94,34)"/><text x="339.00" y="494.50"></text></g><g><title>0x7f89c0c64be8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="338" y="484" width="1" height="15" fill="rgb(252,171,45)"/><text x="341.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (10 samples, 1.08%)</title><rect x="327" y="468" width="13" height="15" fill="rgb(208,145,53)"/><text x="330.00" y="478.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="339" y="484" width="1" height="15" fill="rgb(206,178,46)"/><text x="342.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:406) (26 samples, 2.81%)</title><rect x="308" y="452" width="34" height="15" fill="rgb(209,62,47)"/><text x="311.00" y="462.50">Ru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.11%)</title><rect x="340" y="468" width="2" height="15" fill="rgb(246,226,38)"/><text x="343.00" y="478.50"></text></g><g><title>0x7f8981dc3440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.11%)</title><rect x="347" y="468" width="1" height="15" fill="rgb(228,159,24)"/><text x="350.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:267) (1 samples, 0.11%)</title><rect x="348" y="468" width="1" height="15" fill="rgb(244,92,20)"/><text x="351.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:274) (1 samples, 0.11%)</title><rect x="349" y="468" width="1" height="15" fill="rgb(231,116,32)"/><text x="352.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:275) (1 samples, 0.11%)</title><rect x="350" y="468" width="2" height="15" fill="rgb(208,187,47)"/><text x="353.00" y="478.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:48) (3 samples, 0.32%)</title><rect x="358" y="484" width="4" height="15" fill="rgb(237,183,7)"/><text x="361.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:49) (1 samples, 0.11%)</title><rect x="362" y="484" width="1" height="15" fill="rgb(232,97,44)"/><text x="365.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:50) (1 samples, 0.11%)</title><rect x="363" y="484" width="2" height="15" fill="rgb(248,15,7)"/><text x="366.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:57) (7 samples, 0.76%)</title><rect x="365" y="484" width="8" height="15" fill="rgb(211,207,18)"/><text x="368.00" y="494.50"></text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:58) (6 samples, 0.65%)</title><rect x="373" y="484" width="8" height="15" fill="rgb(246,125,27)"/><text x="376.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:276) (26 samples, 2.81%)</title><rect x="352" y="468" width="33" height="15" fill="rgb(243,53,36)"/><text x="355.00" y="478.50">Ru..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp:60) (3 samples, 0.32%)</title><rect x="381" y="484" width="4" height="15" fill="rgb(237,98,22)"/><text x="384.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:277) (2 samples, 0.22%)</title><rect x="385" y="468" width="3" height="15" fill="rgb(241,209,43)"/><text x="388.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:279) (1 samples, 0.11%)</title><rect x="388" y="468" width="1" height="15" fill="rgb(234,132,27)"/><text x="391.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:280) (12 samples, 1.30%)</title><rect x="389" y="468" width="15" height="15" fill="rgb(226,173,34)"/><text x="392.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:407) (56 samples, 6.06%)</title><rect x="342" y="452" width="71" height="15" fill="rgb(246,0,27)"/><text x="345.00" y="462.50">RuntimeS..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:301) (7 samples, 0.76%)</title><rect x="404" y="468" width="9" height="15" fill="rgb(236,136,47)"/><text x="407.00" y="478.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:409) (5 samples, 0.54%)</title><rect x="413" y="452" width="6" height="15" fill="rgb(249,120,53)"/><text x="416.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:918) (1 samples, 0.11%)</title><rect x="419" y="468" width="2" height="15" fill="rgb(216,68,3)"/><text x="422.00" y="478.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::construct&lt;float, float const&amp;&gt; (alloc_traits.h:475) (1 samples, 0.11%)</title><rect x="419" y="484" width="2" height="15" fill="rgb(216,188,40)"/><text x="422.00" y="494.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::construct&lt;float, float const&amp;&gt; (new_allocator.h:120) (1 samples, 0.11%)</title><rect x="419" y="500" width="2" height="15" fill="rgb(252,162,48)"/><text x="422.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:410) (2 samples, 0.22%)</title><rect x="419" y="452" width="3" height="15" fill="rgb(248,189,17)"/><text x="422.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:924) (1 samples, 0.11%)</title><rect x="421" y="468" width="1" height="15" fill="rgb(252,117,42)"/><text x="424.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:449) (1 samples, 0.11%)</title><rect x="422" y="500" width="1" height="15" fill="rgb(227,3,13)"/><text x="425.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:412) (2 samples, 0.22%)</title><rect x="422" y="452" width="3" height="15" fill="rgb(247,225,36)"/><text x="425.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h:697) (2 samples, 0.22%)</title><rect x="422" y="468" width="3" height="15" fill="rgb(250,182,46)"/><text x="425.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h:1055) (2 samples, 0.22%)</title><rect x="422" y="484" width="3" height="15" fill="rgb(221,46,12)"/><text x="425.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc:491) (1 samples, 0.11%)</title><rect x="423" y="500" width="2" height="15" fill="rgb(207,219,34)"/><text x="426.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_allocate (stl_vector.h:170) (1 samples, 0.11%)</title><rect x="423" y="516" width="2" height="15" fill="rgb(210,179,26)"/><text x="426.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;long&gt; &gt;::allocate (alloc_traits.h:436) (1 samples, 0.11%)</title><rect x="423" y="532" width="2" height="15" fill="rgb(216,67,31)"/><text x="426.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;long&gt;::allocate (new_allocator.h:104) (1 samples, 0.11%)</title><rect x="423" y="548" width="2" height="15" fill="rgb(216,223,15)"/><text x="426.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="423" y="564" width="2" height="15" fill="rgb(227,135,19)"/><text x="426.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="423" y="580" width="2" height="15" fill="rgb(220,136,0)"/><text x="426.00" y="590.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:417) (1 samples, 0.11%)</title><rect x="425" y="452" width="1" height="15" fill="rgb(214,11,37)"/><text x="428.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:419) (1 samples, 0.11%)</title><rect x="426" y="452" width="1" height="15" fill="rgb(249,159,3)"/><text x="429.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:420) (1 samples, 0.11%)</title><rect x="427" y="452" width="1" height="15" fill="rgb(209,124,12)"/><text x="430.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:422) (1 samples, 0.11%)</title><rect x="428" y="452" width="2" height="15" fill="rgb(254,13,0)"/><text x="431.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:426) (4 samples, 0.43%)</title><rect x="430" y="452" width="5" height="15" fill="rgb(205,178,46)"/><text x="433.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:427) (1 samples, 0.11%)</title><rect x="435" y="452" width="1" height="15" fill="rgb(218,41,10)"/><text x="438.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:431) (5 samples, 0.54%)</title><rect x="436" y="452" width="6" height="15" fill="rgb(238,7,22)"/><text x="439.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (6 samples, 0.65%)</title><rect x="444" y="500" width="7" height="15" fill="rgb(245,152,7)"/><text x="447.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (6 samples, 0.65%)</title><rect x="444" y="516" width="7" height="15" fill="rgb(238,216,48)"/><text x="447.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (6 samples, 0.65%)</title><rect x="444" y="532" width="7" height="15" fill="rgb(211,74,1)"/><text x="447.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (6 samples, 0.65%)</title><rect x="444" y="548" width="7" height="15" fill="rgb(217,1,13)"/><text x="447.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.65%)</title><rect x="444" y="564" width="7" height="15" fill="rgb(220,139,45)"/><text x="447.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.43%)</title><rect x="446" y="580" width="5" height="15" fill="rgb(238,58,47)"/><text x="449.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:425) (1 samples, 0.11%)</title><rect x="451" y="500" width="2" height="15" fill="rgb(222,46,10)"/><text x="454.00" y="510.50"></text></g><g><title>0x7f89c0c84dbf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="451" y="516" width="2" height="15" fill="rgb(229,85,13)"/><text x="454.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:438) (1 samples, 0.11%)</title><rect x="453" y="500" width="1" height="15" fill="rgb(240,26,18)"/><text x="456.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (1 samples, 0.11%)</title><rect x="453" y="516" width="1" height="15" fill="rgb(220,62,47)"/><text x="456.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (1 samples, 0.11%)</title><rect x="453" y="532" width="1" height="15" fill="rgb(218,5,12)"/><text x="456.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (1 samples, 0.11%)</title><rect x="453" y="548" width="1" height="15" fill="rgb(248,179,18)"/><text x="456.00" y="558.50"></text></g><g><title>0x7f89c0c64a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="454" y="516" width="1" height="15" fill="rgb(220,57,51)"/><text x="457.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (2 samples, 0.22%)</title><rect x="454" y="500" width="2" height="15" fill="rgb(230,229,35)"/><text x="457.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="455" y="516" width="1" height="15" fill="rgb(254,45,46)"/><text x="458.00" y="526.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:435) (12 samples, 1.30%)</title><rect x="442" y="452" width="16" height="15" fill="rgb(219,124,47)"/><text x="445.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (12 samples, 1.30%)</title><rect x="442" y="468" width="16" height="15" fill="rgb(243,160,36)"/><text x="445.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (12 samples, 1.30%)</title><rect x="442" y="484" width="16" height="15" fill="rgb(238,33,8)"/><text x="445.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:444) (1 samples, 0.11%)</title><rect x="456" y="500" width="2" height="15" fill="rgb(229,37,48)"/><text x="459.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:436) (1 samples, 0.11%)</title><rect x="458" y="452" width="1" height="15" fill="rgb(241,71,48)"/><text x="461.00" y="462.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:442) (1 samples, 0.11%)</title><rect x="459" y="452" width="1" height="15" fill="rgb(216,198,53)"/><text x="462.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.11%)</title><rect x="459" y="468" width="1" height="15" fill="rgb(216,3,52)"/><text x="462.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.11%)</title><rect x="460" y="468" width="2" height="15" fill="rgb(226,154,43)"/><text x="463.00" y="478.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="460" y="484" width="2" height="15" fill="rgb(236,226,7)"/><text x="463.00" y="494.50"></text></g><g><title>0x7f89c0c64bd8 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="462" y="548" width="1" height="15" fill="rgb(234,186,38)"/><text x="465.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:445) (3 samples, 0.32%)</title><rect x="460" y="452" width="4" height="15" fill="rgb(219,97,49)"/><text x="463.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h:427) (2 samples, 0.22%)</title><rect x="462" y="468" width="2" height="15" fill="rgb(236,124,49)"/><text x="465.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h:160) (2 samples, 0.22%)</title><rect x="462" y="484" width="2" height="15" fill="rgb(209,213,30)"/><text x="465.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h:178) (2 samples, 0.22%)</title><rect x="462" y="500" width="2" height="15" fill="rgb(219,202,29)"/><text x="465.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h:462) (2 samples, 0.22%)</title><rect x="462" y="516" width="2" height="15" fill="rgb(214,64,0)"/><text x="465.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h:110) (2 samples, 0.22%)</title><rect x="462" y="532" width="2" height="15" fill="rgb(215,196,25)"/><text x="465.00" y="542.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="463" y="548" width="1" height="15" fill="rgb(216,211,15)"/><text x="466.00" y="558.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:446) (3 samples, 0.32%)</title><rect x="464" y="452" width="4" height="15" fill="rgb(251,171,19)"/><text x="467.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h:293) (3 samples, 0.32%)</title><rect x="464" y="468" width="4" height="15" fill="rgb(205,101,34)"/><text x="467.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h:136) (3 samples, 0.32%)</title><rect x="464" y="484" width="4" height="15" fill="rgb(234,91,25)"/><text x="467.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h:187) (3 samples, 0.32%)</title><rect x="464" y="500" width="4" height="15" fill="rgb(216,204,49)"/><text x="467.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="464" y="516" width="4" height="15" fill="rgb(206,21,28)"/><text x="467.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="465" y="532" width="3" height="15" fill="rgb(210,1,9)"/><text x="468.00" y="542.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:102) (3 samples, 0.32%)</title><rect x="469" y="468" width="4" height="15" fill="rgb(206,61,32)"/><text x="472.00" y="478.50"></text></g><g><title>0x7f89c0de3e00 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="474" y="500" width="2" height="15" fill="rgb(246,39,3)"/><text x="477.00" y="510.50"></text></g><g><title>0x7f89c0de3e76 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="476" y="500" width="1" height="15" fill="rgb(220,203,50)"/><text x="479.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:452) (8 samples, 0.87%)</title><rect x="468" y="452" width="10" height="15" fill="rgb(213,111,29)"/><text x="471.00" y="462.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:103) (4 samples, 0.43%)</title><rect x="473" y="468" width="5" height="15" fill="rgb(237,109,4)"/><text x="476.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp:80) (4 samples, 0.43%)</title><rect x="473" y="484" width="5" height="15" fill="rgb(227,144,9)"/><text x="476.00" y="494.50"></text></g><g><title>0x7f89c0de3ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="477" y="500" width="1" height="15" fill="rgb(224,79,53)"/><text x="480.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:453) (1 samples, 0.11%)</title><rect x="478" y="452" width="1" height="15" fill="rgb(241,43,30)"/><text x="481.00" y="462.50"></text></g><g><title>std::max&lt;float&gt; (stl_algobase.h:224) (1 samples, 0.11%)</title><rect x="478" y="468" width="1" height="15" fill="rgb(248,75,41)"/><text x="481.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:305) (1 samples, 0.11%)</title><rect x="479" y="484" width="2" height="15" fill="rgb(226,18,22)"/><text x="482.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:407) (1 samples, 0.11%)</title><rect x="483" y="500" width="2" height="15" fill="rgb(242,39,25)"/><text x="486.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.11%)</title><rect x="485" y="500" width="1" height="15" fill="rgb(240,69,37)"/><text x="488.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1426) (1 samples, 0.11%)</title><rect x="485" y="516" width="1" height="15" fill="rgb(225,114,5)"/><text x="488.00" y="526.50"></text></g><g><title>0x7f89b0730d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="486" y="580" width="1" height="15" fill="rgb(221,142,42)"/><text x="489.00" y="590.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (6 samples, 0.65%)</title><rect x="486" y="500" width="8" height="15" fill="rgb(243,8,37)"/><text x="489.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (6 samples, 0.65%)</title><rect x="486" y="516" width="8" height="15" fill="rgb(240,10,8)"/><text x="489.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (6 samples, 0.65%)</title><rect x="486" y="532" width="8" height="15" fill="rgb(235,130,9)"/><text x="489.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (6 samples, 0.65%)</title><rect x="486" y="548" width="8" height="15" fill="rgb(218,183,18)"/><text x="489.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.65%)</title><rect x="486" y="564" width="8" height="15" fill="rgb(249,221,54)"/><text x="489.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.54%)</title><rect x="487" y="580" width="7" height="15" fill="rgb(230,49,11)"/><text x="490.00" y="590.50"></text></g><g><title>0x7f89c0c64906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="494" y="516" width="1" height="15" fill="rgb(233,92,6)"/><text x="497.00" y="526.50"></text></g><g><title>0x7f89c0c64929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="495" y="516" width="1" height="15" fill="rgb(237,70,31)"/><text x="498.00" y="526.50"></text></g><g><title>0x7f89c0c64998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="496" y="516" width="1" height="15" fill="rgb(238,141,2)"/><text x="499.00" y="526.50"></text></g><g><title>0x7f89c0c64a4d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="497" y="516" width="2" height="15" fill="rgb(226,59,46)"/><text x="500.00" y="526.50"></text></g><g><title>0x7f89c0c64bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="499" y="516" width="1" height="15" fill="rgb(223,215,37)"/><text x="502.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="500" y="516" width="1" height="15" fill="rgb(237,51,29)"/><text x="503.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:310) (17 samples, 1.84%)</title><rect x="481" y="484" width="21" height="15" fill="rgb(210,77,23)"/><text x="484.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (7 samples, 0.76%)</title><rect x="494" y="500" width="8" height="15" fill="rgb(240,195,51)"/><text x="497.00" y="510.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="501" y="516" width="1" height="15" fill="rgb(215,60,10)"/><text x="504.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.11%)</title><rect x="502" y="516" width="2" height="15" fill="rgb(206,37,18)"/><text x="505.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:311) (2 samples, 0.22%)</title><rect x="502" y="484" width="3" height="15" fill="rgb(220,26,31)"/><text x="505.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (2 samples, 0.22%)</title><rect x="502" y="500" width="3" height="15" fill="rgb(233,225,24)"/><text x="505.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:94) (1 samples, 0.11%)</title><rect x="504" y="516" width="1" height="15" fill="rgb(210,106,32)"/><text x="507.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:411) (1 samples, 0.11%)</title><rect x="505" y="500" width="1" height="15" fill="rgb(247,27,11)"/><text x="508.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h:1425) (1 samples, 0.11%)</title><rect x="505" y="516" width="1" height="15" fill="rgb(240,47,24)"/><text x="508.00" y="526.50"></text></g><g><title>std::max&lt;unsigned long&gt; (stl_algobase.h:224) (1 samples, 0.11%)</title><rect x="505" y="532" width="1" height="15" fill="rgb(227,67,38)"/><text x="508.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:412) (10 samples, 1.08%)</title><rect x="506" y="500" width="13" height="15" fill="rgb(240,130,36)"/><text x="509.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h:170) (10 samples, 1.08%)</title><rect x="506" y="516" width="13" height="15" fill="rgb(250,161,53)"/><text x="509.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h:436) (10 samples, 1.08%)</title><rect x="506" y="532" width="13" height="15" fill="rgb(240,78,22)"/><text x="509.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h:104) (10 samples, 1.08%)</title><rect x="506" y="548" width="13" height="15" fill="rgb(242,142,17)"/><text x="509.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 1.08%)</title><rect x="506" y="564" width="13" height="15" fill="rgb(220,154,31)"/><text x="509.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.87%)</title><rect x="509" y="580" width="10" height="15" fill="rgb(249,186,54)"/><text x="512.00" y="590.50"></text></g><g><title>0x7f89c0c6490e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="519" y="516" width="1" height="15" fill="rgb(246,199,2)"/><text x="522.00" y="526.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="520" y="516" width="2" height="15" fill="rgb(244,74,39)"/><text x="523.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:313) (15 samples, 1.62%)</title><rect x="505" y="484" width="19" height="15" fill="rgb(225,94,8)"/><text x="508.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc:441) (4 samples, 0.43%)</title><rect x="519" y="500" width="5" height="15" fill="rgb(242,53,40)"/><text x="522.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="522" y="516" width="2" height="15" fill="rgb(231,103,37)"/><text x="525.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:314) (1 samples, 0.11%)</title><rect x="524" y="484" width="1" height="15" fill="rgb(205,162,43)"/><text x="527.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.11%)</title><rect x="524" y="500" width="1" height="15" fill="rgb(218,206,41)"/><text x="527.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc:101) (1 samples, 0.11%)</title><rect x="524" y="516" width="1" height="15" fill="rgb(221,84,37)"/><text x="527.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:324) (1 samples, 0.11%)</title><rect x="525" y="484" width="2" height="15" fill="rgb(215,158,26)"/><text x="528.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:331) (2 samples, 0.22%)</title><rect x="527" y="484" width="2" height="15" fill="rgb(223,150,24)"/><text x="530.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:332) (1 samples, 0.11%)</title><rect x="529" y="484" width="2" height="15" fill="rgb(243,219,11)"/><text x="532.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:333) (2 samples, 0.22%)</title><rect x="531" y="484" width="2" height="15" fill="rgb(243,40,3)"/><text x="534.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:340) (1 samples, 0.11%)</title><rect x="533" y="484" width="1" height="15" fill="rgb(216,29,34)"/><text x="536.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:345) (3 samples, 0.32%)</title><rect x="534" y="484" width="4" height="15" fill="rgb(222,10,11)"/><text x="537.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:348) (2 samples, 0.22%)</title><rect x="538" y="484" width="3" height="15" fill="rgb(208,41,46)"/><text x="541.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:349) (5 samples, 0.54%)</title><rect x="541" y="484" width="6" height="15" fill="rgb(237,87,17)"/><text x="544.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:350) (1 samples, 0.11%)</title><rect x="547" y="484" width="1" height="15" fill="rgb(213,5,18)"/><text x="550.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:351) (15 samples, 1.62%)</title><rect x="548" y="484" width="20" height="15" fill="rgb(229,127,23)"/><text x="551.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:353) (4 samples, 0.43%)</title><rect x="568" y="484" width="5" height="15" fill="rgb(237,228,9)"/><text x="571.00" y="494.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:354) (6 samples, 0.65%)</title><rect x="573" y="484" width="7" height="15" fill="rgb(248,140,39)"/><text x="576.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="580" y="500" width="2" height="15" fill="rgb(215,21,38)"/><text x="583.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:463) (81 samples, 8.77%)</title><rect x="479" y="452" width="104" height="15" fill="rgb(237,175,33)"/><text x="482.00" y="462.50">RuntimeSVMCl..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (81 samples, 8.77%)</title><rect x="479" y="468" width="104" height="15" fill="rgb(227,81,53)"/><text x="482.00" y="478.50">std::vector&lt;..</text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:358) (2 samples, 0.22%)</title><rect x="580" y="484" width="3" height="15" fill="rgb(217,145,7)"/><text x="583.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="582" y="500" width="1" height="15" fill="rgb(243,170,42)"/><text x="585.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:469) (1 samples, 0.11%)</title><rect x="583" y="452" width="1" height="15" fill="rgb(228,43,50)"/><text x="586.00" y="462.50"></text></g><g><title>std::max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt; &gt; (stl_algo.h:5549) (1 samples, 0.11%)</title><rect x="583" y="468" width="1" height="15" fill="rgb(225,158,38)"/><text x="586.00" y="478.50"></text></g><g><title>std::__max_element&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_less_iter&gt; (stl_algo.h:5524) (1 samples, 0.11%)</title><rect x="583" y="484" width="1" height="15" fill="rgb(222,136,16)"/><text x="586.00" y="494.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:491) (1 samples, 0.11%)</title><rect x="584" y="452" width="1" height="15" fill="rgb(227,54,15)"/><text x="587.00" y="462.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.11%)</title><rect x="584" y="468" width="1" height="15" fill="rgb(252,39,30)"/><text x="587.00" y="478.50"></text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp:149) (1 samples, 0.11%)</title><rect x="584" y="484" width="1" height="15" fill="rgb(232,88,41)"/><text x="587.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.11%)</title><rect x="584" y="500" width="1" height="15" fill="rgb(210,130,11)"/><text x="587.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (228 samples, 24.68%)</title><rect x="296" y="180" width="291" height="15" fill="rgb(214,128,20)"/><text x="299.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_no..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (226 samples, 24.46%)</title><rect x="298" y="196" width="289" height="15" fill="rgb(222,43,10)"/><text x="301.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:3..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (226 samples, 24.46%)</title><rect x="298" y="212" width="289" height="15" fill="rgb(221,152,20)"/><text x="301.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py:2..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py:59) (226 samples, 24.46%)</title><rect x="298" y="228" width="289" height="15" fill="rgb(228,56,13)"/><text x="301.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (226 samples, 24.46%)</title><rect x="298" y="244" width="289" height="15" fill="rgb(239,164,38)"/><text x="301.00" y="254.50">pybind11::cpp_function::dispatcher (py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (226 samples, 24.46%)</title><rect x="298" y="260" width="289" height="15" fill="rgb(234,204,0)"/><text x="301.00" y="270.50">void pybind11::cpp_function::initializ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (225 samples, 24.35%)</title><rect x="299" y="276" width="288" height="15" fill="rgb(209,133,29)"/><text x="302.00" y="286.50">void pybind11::cpp_function::initializ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (225 samples, 24.35%)</title><rect x="299" y="292" width="288" height="15" fill="rgb(205,132,50)"/><text x="302.00" y="302.50">pybind11::detail::argument_loader&lt;Runt..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (225 samples, 24.35%)</title><rect x="299" y="308" width="288" height="15" fill="rgb(235,140,17)"/><text x="302.00" y="318.50">pybind11::detail::argument_loader&lt;Runt..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (225 samples, 24.35%)</title><rect x="299" y="324" width="288" height="15" fill="rgb(205,137,49)"/><text x="302.00" y="334.50">pybind11::cpp_function::cpp_function&lt;p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (225 samples, 24.35%)</title><rect x="299" y="340" width="288" height="15" fill="rgb(227,67,50)"/><text x="302.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t..</text></g><g><title>pybind11::array::~array (numpy.h:538) (225 samples, 24.35%)</title><rect x="299" y="356" width="288" height="15" fill="rgb(212,88,44)"/><text x="302.00" y="366.50">pybind11::array::~array (numpy.h:538)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (225 samples, 24.35%)</title><rect x="299" y="372" width="288" height="15" fill="rgb(222,179,40)"/><text x="302.00" y="382.50">pybind11::buffer::~buffer (pytypes.h:1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (225 samples, 24.35%)</title><rect x="299" y="388" width="288" height="15" fill="rgb(234,144,34)"/><text x="302.00" y="398.50">pybind11::object::~object (pytypes.h:2..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (225 samples, 24.35%)</title><rect x="299" y="404" width="288" height="15" fill="rgb(214,225,27)"/><text x="302.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp:260) (225 samples, 24.35%)</title><rect x="299" y="420" width="288" height="15" fill="rgb(217,178,28)"/><text x="302.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (225 samples, 24.35%)</title><rect x="299" y="436" width="288" height="15" fill="rgb(254,11,1)"/><text x="302.00" y="446.50">pybind11::gil_scoped_release::~gil_sco..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (new_allocator.h:110) (1 samples, 0.11%)</title><rect x="585" y="452" width="2" height="15" fill="rgb(228,22,9)"/><text x="588.00" y="462.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.11%)</title><rect x="587" y="180" width="1" height="15" fill="rgb(226,191,42)"/><text x="590.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (230 samples, 24.89%)</title><rect x="296" y="164" width="293" height="15" fill="rgb(223,122,51)"/><text x="299.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.11%)</title><rect x="588" y="180" width="1" height="15" fill="rgb(229,217,18)"/><text x="591.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:45) (246 samples, 26.62%)</title><rect x="276" y="52" width="315" height="15" fill="rgb(231,88,4)"/><text x="279.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityT..</text></g><g><title>profile_pyrt (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:44) (246 samples, 26.62%)</title><rect x="276" y="68" width="315" height="15" fill="rgb(248,117,16)"/><text x="279.00" y="78.50">profile_pyrt (bench_SVC_poly_m_cl_probabil..</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (245 samples, 26.52%)</title><rect x="278" y="84" width="313" height="15" fill="rgb(239,4,12)"/><text x="281.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabi..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (231 samples, 25.00%)</title><rect x="296" y="100" width="295" height="15" fill="rgb(254,148,38)"/><text x="299.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilit..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (231 samples, 25.00%)</title><rect x="296" y="116" width="295" height="15" fill="rgb(205,186,50)"/><text x="299.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (231 samples, 25.00%)</title><rect x="296" y="132" width="295" height="15" fill="rgb(211,177,31)"/><text x="299.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (231 samples, 25.00%)</title><rect x="296" y="148" width="295" height="15" fill="rgb(230,178,45)"/><text x="299.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.11%)</title><rect x="589" y="164" width="2" height="15" fill="rgb(250,32,0)"/><text x="592.00" y="174.50"></text></g><g><title>0x7f8980cd4ff9 (?) (1 samples, 0.11%)</title><rect x="591" y="212" width="1" height="15" fill="rgb(247,55,45)"/><text x="594.00" y="222.50"></text></g><g><title>0x7f8980ccfef6 (?) (1 samples, 0.11%)</title><rect x="591" y="228" width="1" height="15" fill="rgb(215,11,8)"/><text x="594.00" y="238.50"></text></g><g><title>0x7f8980cc4962 (?) (1 samples, 0.11%)</title><rect x="591" y="244" width="1" height="15" fill="rgb(218,208,37)"/><text x="594.00" y="254.50"></text></g><g><title>0x7f8980cf87a7 (?) (1 samples, 0.11%)</title><rect x="591" y="260" width="1" height="15" fill="rgb(240,91,17)"/><text x="594.00" y="270.50"></text></g><g><title>0x7f8980cf8379 (?) (1 samples, 0.11%)</title><rect x="591" y="276" width="1" height="15" fill="rgb(232,187,30)"/><text x="594.00" y="286.50"></text></g><g><title>0x7f89811568b8 (?) (1 samples, 0.11%)</title><rect x="591" y="292" width="1" height="15" fill="rgb(239,61,40)"/><text x="594.00" y="302.50"></text></g><g><title>0x7f8981154c7f (?) (1 samples, 0.11%)</title><rect x="591" y="308" width="1" height="15" fill="rgb(210,154,42)"/><text x="594.00" y="318.50"></text></g><g><title>0x7f898116799c (?) (1 samples, 0.11%)</title><rect x="591" y="324" width="1" height="15" fill="rgb(248,181,45)"/><text x="594.00" y="334.50"></text></g><g><title>0x7f8980e6cb9e (?) (1 samples, 0.11%)</title><rect x="591" y="340" width="1" height="15" fill="rgb(208,140,31)"/><text x="594.00" y="350.50"></text></g><g><title>powf32x (libm-2.29.so) (1 samples, 0.11%)</title><rect x="591" y="356" width="1" height="15" fill="rgb(226,133,35)"/><text x="594.00" y="366.50"></text></g><g><title>0x7f89c0dcede8 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="591" y="372" width="1" height="15" fill="rgb(228,169,48)"/><text x="594.00" y="382.50"></text></g><g><title>0x7f89c0c8512f (libc-2.29.so) (1 samples, 0.11%)</title><rect x="598" y="356" width="2" height="15" fill="rgb(249,55,6)"/><text x="601.00" y="366.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="605" y="388" width="1" height="15" fill="rgb(248,173,16)"/><text x="608.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="606" y="388" width="1" height="15" fill="rgb(224,229,40)"/><text x="609.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.87%)</title><rect x="600" y="356" width="10" height="15" fill="rgb(213,40,7)"/><text x="603.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="605" y="372" width="5" height="15" fill="rgb(229,148,51)"/><text x="608.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.22%)</title><rect x="607" y="388" width="3" height="15" fill="rgb(225,171,25)"/><text x="610.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.22%)</title><rect x="607" y="404" width="3" height="15" fill="rgb(252,96,43)"/><text x="610.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="610" y="356" width="1" height="15" fill="rgb(250,186,44)"/><text x="613.00" y="366.50"></text></g><g><title>0x7f89b0730d50 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="610" y="372" width="1" height="15" fill="rgb(214,199,21)"/><text x="613.00" y="382.50"></text></g><g><title>0x7f89c0dceb20 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="614" y="372" width="1" height="15" fill="rgb(209,170,10)"/><text x="617.00" y="382.50"></text></g><g><title>0x7f89c0dcebaf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="615" y="372" width="1" height="15" fill="rgb(208,105,40)"/><text x="618.00" y="382.50"></text></g><g><title>0x7f89c0dcebba (libm-2.29.so) (1 samples, 0.11%)</title><rect x="616" y="372" width="1" height="15" fill="rgb(254,45,3)"/><text x="619.00" y="382.50"></text></g><g><title>0x7f89c0dcec00 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="617" y="372" width="2" height="15" fill="rgb(206,169,32)"/><text x="620.00" y="382.50"></text></g><g><title>0x7f89c0dceccc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="619" y="372" width="1" height="15" fill="rgb(243,192,8)"/><text x="622.00" y="382.50"></text></g><g><title>0x7f89c0dcecd6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="620" y="372" width="1" height="15" fill="rgb(240,180,52)"/><text x="623.00" y="382.50"></text></g><g><title>0x7f89c0dced8a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="621" y="372" width="1" height="15" fill="rgb(210,98,16)"/><text x="624.00" y="382.50"></text></g><g><title>0x7f89c0dcedb6 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="622" y="372" width="2" height="15" fill="rgb(229,190,39)"/><text x="625.00" y="382.50"></text></g><g><title>0x7f89c0dcedc4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="624" y="372" width="1" height="15" fill="rgb(240,125,46)"/><text x="627.00" y="382.50"></text></g><g><title>0x7f89c0dcedcc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="625" y="372" width="1" height="15" fill="rgb(246,119,25)"/><text x="628.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (13 samples, 1.41%)</title><rect x="611" y="356" width="17" height="15" fill="rgb(211,23,48)"/><text x="614.00" y="366.50"></text></g><g><title>0x7f89c0dcedd4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="626" y="372" width="2" height="15" fill="rgb(222,77,6)"/><text x="629.00" y="382.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 3.14%)</title><rect x="592" y="340" width="37" height="15" fill="rgb(243,87,13)"/><text x="595.00" y="350.50">onn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="628" y="356" width="1" height="15" fill="rgb(231,146,13)"/><text x="631.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="628" y="372" width="1" height="15" fill="rgb(212,167,6)"/><text x="631.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.46%)</title><rect x="592" y="260" width="41" height="15" fill="rgb(250,143,5)"/><text x="595.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.46%)</title><rect x="592" y="276" width="41" height="15" fill="rgb(220,86,26)"/><text x="595.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.46%)</title><rect x="592" y="292" width="41" height="15" fill="rgb(223,101,45)"/><text x="595.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.46%)</title><rect x="592" y="308" width="41" height="15" fill="rgb(213,147,24)"/><text x="595.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 3.46%)</title><rect x="592" y="324" width="41" height="15" fill="rgb(230,218,26)"/><text x="595.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.32%)</title><rect x="629" y="340" width="4" height="15" fill="rgb(221,106,15)"/><text x="632.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="629" y="356" width="4" height="15" fill="rgb(230,132,11)"/><text x="632.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="629" y="372" width="4" height="15" fill="rgb(212,123,53)"/><text x="632.00" y="382.50"></text></g><g><title>0x7f89c0c65b1c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="631" y="388" width="2" height="15" fill="rgb(212,89,10)"/><text x="634.00" y="398.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="633" y="260" width="1" height="15" fill="rgb(246,204,46)"/><text x="636.00" y="270.50"></text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:18) (35 samples, 3.79%)</title><rect x="591" y="100" width="44" height="15" fill="rgb(248,21,31)"/><text x="594.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (35 samples, 3.79%)</title><rect x="591" y="116" width="44" height="15" fill="rgb(229,210,28)"/><text x="594.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (35 samples, 3.79%)</title><rect x="591" y="132" width="44" height="15" fill="rgb(206,57,28)"/><text x="594.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (35 samples, 3.79%)</title><rect x="591" y="148" width="44" height="15" fill="rgb(250,208,45)"/><text x="594.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (35 samples, 3.79%)</title><rect x="591" y="164" width="44" height="15" fill="rgb(214,188,15)"/><text x="594.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (35 samples, 3.79%)</title><rect x="591" y="180" width="44" height="15" fill="rgb(252,159,40)"/><text x="594.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py:136) (35 samples, 3.79%)</title><rect x="591" y="196" width="44" height="15" fill="rgb(238,27,19)"/><text x="594.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.68%)</title><rect x="592" y="212" width="43" height="15" fill="rgb(220,223,17)"/><text x="595.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.68%)</title><rect x="592" y="228" width="43" height="15" fill="rgb(232,229,30)"/><text x="595.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 3.68%)</title><rect x="592" y="244" width="43" height="15" fill="rgb(230,53,44)"/><text x="595.00" y="254.50">onnx..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="634" y="260" width="1" height="15" fill="rgb(230,176,7)"/><text x="637.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="634" y="276" width="1" height="15" fill="rgb(232,169,22)"/><text x="637.00" y="286.50"></text></g><g><title>0x7f89c0c64971 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="634" y="292" width="1" height="15" fill="rgb(223,134,45)"/><text x="637.00" y="302.50"></text></g><g><title>0x7f89c0c63bc6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="648" y="132" width="1" height="15" fill="rgb(224,127,9)"/><text x="651.00" y="142.50"></text></g><g><title>0x7f89c0c63bdf (libc-2.29.so) (1 samples, 0.11%)</title><rect x="649" y="132" width="2" height="15" fill="rgb(240,145,1)"/><text x="652.00" y="142.50"></text></g><g><title>0x7f89c0c63c10 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="651" y="132" width="1" height="15" fill="rgb(223,73,31)"/><text x="654.00" y="142.50"></text></g><g><title>0x7f89c0c63c1c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="652" y="132" width="1" height="15" fill="rgb(240,174,40)"/><text x="655.00" y="142.50"></text></g><g><title>0x7f89c0c63c36 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="653" y="132" width="1" height="15" fill="rgb(247,215,8)"/><text x="656.00" y="142.50"></text></g><g><title>0x7f89c0c64eb0 (libc-2.29.so) (6 samples, 0.65%)</title><rect x="648" y="116" width="8" height="15" fill="rgb(252,116,9)"/><text x="651.00" y="126.50"></text></g><g><title>0x7f89c0c63c3d (libc-2.29.so) (1 samples, 0.11%)</title><rect x="654" y="132" width="2" height="15" fill="rgb(240,205,17)"/><text x="657.00" y="142.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="658" y="340" width="2" height="15" fill="rgb(215,107,18)"/><text x="661.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="658" y="356" width="2" height="15" fill="rgb(225,108,29)"/><text x="661.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="660" y="340" width="1" height="15" fill="rgb(231,204,9)"/><text x="663.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="660" y="356" width="1" height="15" fill="rgb(216,33,25)"/><text x="663.00" y="366.50"></text></g><g><title>0x7f89c0c64906 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="723" y="356" width="2" height="15" fill="rgb(227,147,20)"/><text x="726.00" y="366.50"></text></g><g><title>0x7f89c0c6490e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="725" y="356" width="1" height="15" fill="rgb(251,103,0)"/><text x="728.00" y="366.50"></text></g><g><title>0x7f89c0c6491e (libc-2.29.so) (2 samples, 0.22%)</title><rect x="726" y="356" width="2" height="15" fill="rgb(247,191,28)"/><text x="729.00" y="366.50"></text></g><g><title>0x7f89c0c64961 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="728" y="356" width="2" height="15" fill="rgb(224,28,15)"/><text x="731.00" y="366.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="730" y="356" width="1" height="15" fill="rgb(208,120,52)"/><text x="733.00" y="366.50"></text></g><g><title>0x7f89c0c64bc0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="731" y="356" width="1" height="15" fill="rgb(243,4,29)"/><text x="734.00" y="366.50"></text></g><g><title>0x7f89c0c84d50 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="732" y="356" width="2" height="15" fill="rgb(238,86,44)"/><text x="735.00" y="366.50"></text></g><g><title>0x7f89c0c84dbb (libc-2.29.so) (1 samples, 0.11%)</title><rect x="734" y="356" width="1" height="15" fill="rgb(227,91,44)"/><text x="737.00" y="366.50"></text></g><g><title>0x7f89c0c85173 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="735" y="356" width="1" height="15" fill="rgb(235,45,26)"/><text x="738.00" y="366.50"></text></g><g><title>0x7f89c0de3e0a (libm-2.29.so) (1 samples, 0.11%)</title><rect x="736" y="356" width="1" height="15" fill="rgb(218,11,29)"/><text x="739.00" y="366.50"></text></g><g><title>0x7f89c0de3e86 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="737" y="356" width="2" height="15" fill="rgb(236,193,11)"/><text x="740.00" y="366.50"></text></g><g><title>0x7f89c0de3e96 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="739" y="356" width="1" height="15" fill="rgb(221,211,39)"/><text x="742.00" y="366.50"></text></g><g><title>0x7f89c0de3ea2 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="740" y="356" width="1" height="15" fill="rgb(233,170,49)"/><text x="743.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="741" y="356" width="2" height="15" fill="rgb(238,55,7)"/><text x="744.00" y="366.50"></text></g><g><title>0x7f89b07317a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="804" y="372" width="1" height="15" fill="rgb(251,109,0)"/><text x="807.00" y="382.50"></text></g><g><title>0x7f89c0c64945 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="805" y="372" width="1" height="15" fill="rgb(227,35,32)"/><text x="808.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.11%)</title><rect x="806" y="372" width="2" height="15" fill="rgb(220,61,7)"/><text x="809.00" y="382.50"></text></g><g><title>0x7f89c0c6490e (libc-2.29.so) (1 samples, 0.11%)</title><rect x="813" y="388" width="1" height="15" fill="rgb(227,136,30)"/><text x="816.00" y="398.50"></text></g><g><title>0x7f89c0c64929 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="814" y="388" width="1" height="15" fill="rgb(253,78,34)"/><text x="817.00" y="398.50"></text></g><g><title>0x7f89c0c64965 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="815" y="388" width="2" height="15" fill="rgb(216,21,53)"/><text x="818.00" y="398.50"></text></g><g><title>0x7f89c0c64991 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="817" y="388" width="1" height="15" fill="rgb(247,189,48)"/><text x="820.00" y="398.50"></text></g><g><title>0x7f89c0c64998 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="818" y="388" width="1" height="15" fill="rgb(235,166,39)"/><text x="821.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.22%)</title><rect x="819" y="388" width="3" height="15" fill="rgb(208,123,8)"/><text x="822.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 7.90%)</title><rect x="743" y="356" width="93" height="15" fill="rgb(246,173,15)"/><text x="746.00" y="366.50">onnxruntime..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 2.38%)</title><rect x="808" y="372" width="28" height="15" fill="rgb(239,8,0)"/><text x="811.00" y="382.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.19%)</title><rect x="822" y="388" width="14" height="15" fill="rgb(245,1,43)"/><text x="825.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.08%)</title><rect x="823" y="404" width="13" height="15" fill="rgb(246,52,48)"/><text x="826.00" y="414.50"></text></g><g><title>0x7f89c0dceb20 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="851" y="372" width="1" height="15" fill="rgb(242,64,47)"/><text x="854.00" y="382.50"></text></g><g><title>0x7f89c0dceb32 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="852" y="372" width="3" height="15" fill="rgb(216,134,6)"/><text x="855.00" y="382.50"></text></g><g><title>0x7f89c0dceb40 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="855" y="372" width="2" height="15" fill="rgb(210,114,41)"/><text x="858.00" y="382.50"></text></g><g><title>0x7f89c0dceb59 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="857" y="372" width="2" height="15" fill="rgb(215,29,26)"/><text x="860.00" y="382.50"></text></g><g><title>0x7f89c0dceb78 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="859" y="372" width="4" height="15" fill="rgb(209,219,24)"/><text x="862.00" y="382.50"></text></g><g><title>0x7f89c0dcebaf (libm-2.29.so) (1 samples, 0.11%)</title><rect x="863" y="372" width="1" height="15" fill="rgb(254,213,18)"/><text x="866.00" y="382.50"></text></g><g><title>0x7f89c0dcebbe (libm-2.29.so) (3 samples, 0.32%)</title><rect x="864" y="372" width="4" height="15" fill="rgb(236,226,19)"/><text x="867.00" y="382.50"></text></g><g><title>0x7f89c0dcebcb (libm-2.29.so) (1 samples, 0.11%)</title><rect x="868" y="372" width="1" height="15" fill="rgb(205,195,25)"/><text x="871.00" y="382.50"></text></g><g><title>0x7f89c0dcebd7 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="869" y="372" width="1" height="15" fill="rgb(222,160,32)"/><text x="872.00" y="382.50"></text></g><g><title>0x7f89c0dcebdd (libm-2.29.so) (3 samples, 0.32%)</title><rect x="870" y="372" width="4" height="15" fill="rgb(226,225,53)"/><text x="873.00" y="382.50"></text></g><g><title>0x7f89c0dcebfc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="874" y="372" width="1" height="15" fill="rgb(216,208,33)"/><text x="877.00" y="382.50"></text></g><g><title>0x7f89c0dcec10 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="875" y="372" width="2" height="15" fill="rgb(219,21,18)"/><text x="878.00" y="382.50"></text></g><g><title>0x7f89c0dcec25 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="877" y="372" width="1" height="15" fill="rgb(252,45,53)"/><text x="880.00" y="382.50"></text></g><g><title>0x7f89c0dcec41 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="878" y="372" width="1" height="15" fill="rgb(254,27,52)"/><text x="881.00" y="382.50"></text></g><g><title>0x7f89c0dcec4b (libm-2.29.so) (1 samples, 0.11%)</title><rect x="879" y="372" width="1" height="15" fill="rgb(243,111,49)"/><text x="882.00" y="382.50"></text></g><g><title>0x7f89c0dcec59 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="880" y="372" width="2" height="15" fill="rgb(206,222,33)"/><text x="883.00" y="382.50"></text></g><g><title>0x7f89c0dcec73 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="882" y="372" width="1" height="15" fill="rgb(230,196,11)"/><text x="885.00" y="382.50"></text></g><g><title>0x7f89c0dcec81 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="883" y="372" width="3" height="15" fill="rgb(208,217,1)"/><text x="886.00" y="382.50"></text></g><g><title>0x7f89c0dcec90 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="886" y="372" width="2" height="15" fill="rgb(224,10,54)"/><text x="889.00" y="382.50"></text></g><g><title>0x7f89c0dcec9e (libm-2.29.so) (3 samples, 0.32%)</title><rect x="888" y="372" width="4" height="15" fill="rgb(218,200,45)"/><text x="891.00" y="382.50"></text></g><g><title>0x7f89c0dcecb5 (libm-2.29.so) (8 samples, 0.87%)</title><rect x="892" y="372" width="10" height="15" fill="rgb(226,17,25)"/><text x="895.00" y="382.50"></text></g><g><title>0x7f89c0dceccc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="902" y="372" width="1" height="15" fill="rgb(219,152,36)"/><text x="905.00" y="382.50"></text></g><g><title>0x7f89c0dcecd6 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="903" y="372" width="7" height="15" fill="rgb(235,92,33)"/><text x="906.00" y="382.50"></text></g><g><title>0x7f89c0dcece4 (libm-2.29.so) (9 samples, 0.97%)</title><rect x="910" y="372" width="11" height="15" fill="rgb(210,114,16)"/><text x="913.00" y="382.50"></text></g><g><title>0x7f89c0dcecf0 (libm-2.29.so) (6 samples, 0.65%)</title><rect x="921" y="372" width="8" height="15" fill="rgb(239,139,28)"/><text x="924.00" y="382.50"></text></g><g><title>0x7f89c0dcecf4 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="929" y="372" width="4" height="15" fill="rgb(214,158,41)"/><text x="932.00" y="382.50"></text></g><g><title>0x7f89c0dcecf8 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="933" y="372" width="5" height="15" fill="rgb(219,129,8)"/><text x="936.00" y="382.50"></text></g><g><title>0x7f89c0dced11 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="938" y="372" width="2" height="15" fill="rgb(251,33,54)"/><text x="941.00" y="382.50"></text></g><g><title>0x7f89c0dced15 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="940" y="372" width="3" height="15" fill="rgb(208,207,36)"/><text x="943.00" y="382.50"></text></g><g><title>0x7f89c0dced19 (libm-2.29.so) (5 samples, 0.54%)</title><rect x="943" y="372" width="6" height="15" fill="rgb(221,75,51)"/><text x="946.00" y="382.50"></text></g><g><title>0x7f89c0dced1d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="949" y="372" width="3" height="15" fill="rgb(229,211,7)"/><text x="952.00" y="382.50"></text></g><g><title>0x7f89c0dced27 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="952" y="372" width="3" height="15" fill="rgb(228,116,49)"/><text x="955.00" y="382.50"></text></g><g><title>0x7f89c0dced2b (libm-2.29.so) (6 samples, 0.65%)</title><rect x="955" y="372" width="7" height="15" fill="rgb(231,114,43)"/><text x="958.00" y="382.50"></text></g><g><title>0x7f89c0dced3f (libm-2.29.so) (4 samples, 0.43%)</title><rect x="962" y="372" width="5" height="15" fill="rgb(220,70,52)"/><text x="965.00" y="382.50"></text></g><g><title>0x7f89c0dced47 (libm-2.29.so) (3 samples, 0.32%)</title><rect x="967" y="372" width="4" height="15" fill="rgb(224,196,5)"/><text x="970.00" y="382.50"></text></g><g><title>0x7f89c0dced67 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="971" y="372" width="1" height="15" fill="rgb(253,46,28)"/><text x="974.00" y="382.50"></text></g><g><title>0x7f89c0dced6f (libm-2.29.so) (1 samples, 0.11%)</title><rect x="972" y="372" width="2" height="15" fill="rgb(245,52,38)"/><text x="975.00" y="382.50"></text></g><g><title>0x7f89c0dced74 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="974" y="372" width="1" height="15" fill="rgb(229,210,3)"/><text x="977.00" y="382.50"></text></g><g><title>0x7f89c0dced78 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="975" y="372" width="5" height="15" fill="rgb(237,144,27)"/><text x="978.00" y="382.50"></text></g><g><title>0x7f89c0dced8a (libm-2.29.so) (2 samples, 0.22%)</title><rect x="980" y="372" width="3" height="15" fill="rgb(212,50,1)"/><text x="983.00" y="382.50"></text></g><g><title>0x7f89c0dced92 (libm-2.29.so) (7 samples, 0.76%)</title><rect x="983" y="372" width="9" height="15" fill="rgb(242,121,18)"/><text x="986.00" y="382.50"></text></g><g><title>0x7f89c0dced9d (libm-2.29.so) (2 samples, 0.22%)</title><rect x="992" y="372" width="2" height="15" fill="rgb(213,223,35)"/><text x="995.00" y="382.50"></text></g><g><title>0x7f89c0dceda2 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="994" y="372" width="5" height="15" fill="rgb(241,69,52)"/><text x="997.00" y="382.50"></text></g><g><title>0x7f89c0dceda6 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="999" y="372" width="3" height="15" fill="rgb(219,154,6)"/><text x="1002.00" y="382.50"></text></g><g><title>0x7f89c0dcedaa (libm-2.29.so) (6 samples, 0.65%)</title><rect x="1002" y="372" width="7" height="15" fill="rgb(220,36,36)"/><text x="1005.00" y="382.50"></text></g><g><title>0x7f89c0dcedb6 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="1009" y="372" width="6" height="15" fill="rgb(213,196,27)"/><text x="1012.00" y="382.50"></text></g><g><title>0x7f89c0dcedc4 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="1015" y="372" width="5" height="15" fill="rgb(253,132,37)"/><text x="1018.00" y="382.50"></text></g><g><title>0x7f89c0dcedcc (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1020" y="372" width="1" height="15" fill="rgb(212,213,49)"/><text x="1023.00" y="382.50"></text></g><g><title>0x7f89c0dcedd4 (libm-2.29.so) (2 samples, 0.22%)</title><rect x="1021" y="372" width="2" height="15" fill="rgb(222,25,52)"/><text x="1024.00" y="382.50"></text></g><g><title>0x7f89c0dcede4 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1023" y="372" width="2" height="15" fill="rgb(219,61,6)"/><text x="1026.00" y="382.50"></text></g><g><title>0x7f89c0dcede8 (libm-2.29.so) (4 samples, 0.43%)</title><rect x="1025" y="372" width="5" height="15" fill="rgb(246,156,20)"/><text x="1028.00" y="382.50"></text></g><g><title>0x7f89c0dcedf0 (libm-2.29.so) (1 samples, 0.11%)</title><rect x="1030" y="372" width="1" height="15" fill="rgb(219,14,44)"/><text x="1033.00" y="382.50"></text></g><g><title>0x7f89c0dcedf8 (libm-2.29.so) (7 samples, 0.76%)</title><rect x="1031" y="372" width="9" height="15" fill="rgb(230,61,43)"/><text x="1034.00" y="382.50"></text></g><g><title>0x7f89c0dcee09 (libm-2.29.so) (8 samples, 0.87%)</title><rect x="1040" y="372" width="10" height="15" fill="rgb(215,18,20)"/><text x="1043.00" y="382.50"></text></g><g><title>powf32x (libm-2.29.so) (173 samples, 18.72%)</title><rect x="836" y="356" width="221" height="15" fill="rgb(207,155,53)"/><text x="839.00" y="366.50">powf32x (libm-2.29.so)</text></g><g><title>0x7f89c0dcee0d (libm-2.29.so) (5 samples, 0.54%)</title><rect x="1050" y="372" width="7" height="15" fill="rgb(228,111,51)"/><text x="1053.00" y="382.50"></text></g><g><title>0x7f8980c9b960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1066" y="372" width="1" height="15" fill="rgb(247,127,11)"/><text x="1069.00" y="382.50"></text></g><g><title>0x7f89b07317a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1067" y="372" width="1" height="15" fill="rgb(245,81,48)"/><text x="1070.00" y="382.50"></text></g><g><title>0x7f89c0c6492c (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1068" y="372" width="1" height="15" fill="rgb(240,148,4)"/><text x="1071.00" y="382.50"></text></g><g><title>0x7f89c0c6499b (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1069" y="372" width="2" height="15" fill="rgb(253,200,0)"/><text x="1072.00" y="382.50"></text></g><g><title>0x7f89c0c64a38 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1071" y="372" width="1" height="15" fill="rgb(251,116,22)"/><text x="1074.00" y="382.50"></text></g><g><title>0x7f89c0c84d62 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1072" y="372" width="1" height="15" fill="rgb(223,61,44)"/><text x="1075.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.32%)</title><rect x="1073" y="372" width="4" height="15" fill="rgb(252,217,25)"/><text x="1076.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1077" y="372" width="1" height="15" fill="rgb(244,82,39)"/><text x="1080.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 3.57%)</title><rect x="1057" y="356" width="42" height="15" fill="rgb(225,79,38)"/><text x="1060.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (16 samples, 1.73%)</title><rect x="1078" y="372" width="21" height="15" fill="rgb(236,155,34)"/><text x="1081.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (13 samples, 1.41%)</title><rect x="1082" y="388" width="17" height="15" fill="rgb(209,109,36)"/><text x="1085.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (348 samples, 37.66%)</title><rect x="661" y="340" width="444" height="15" fill="rgb(211,209,9)"/><text x="664.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="1099" y="356" width="6" height="15" fill="rgb(227,59,20)"/><text x="1102.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="1101" y="372" width="4" height="15" fill="rgb(212,69,29)"/><text x="1104.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.32%)</title><rect x="1101" y="388" width="4" height="15" fill="rgb(227,69,23)"/><text x="1104.00" y="398.50"></text></g><g><title>0x7f89c0c65b12 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1128" y="388" width="1" height="15" fill="rgb(247,191,25)"/><text x="1131.00" y="398.50"></text></g><g><title>0x7f89c0c65b39 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1129" y="388" width="2" height="15" fill="rgb(251,227,53)"/><text x="1132.00" y="398.50"></text></g><g><title>0x7f89c0c65d27 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1131" y="388" width="1" height="15" fill="rgb(254,133,22)"/><text x="1134.00" y="398.50"></text></g><g><title>0x7f89c0c65db4 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1132" y="388" width="1" height="15" fill="rgb(214,219,31)"/><text x="1135.00" y="398.50"></text></g><g><title>0x7f89c0c65fde (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1133" y="388" width="2" height="15" fill="rgb(233,195,5)"/><text x="1136.00" y="398.50"></text></g><g><title>0x7f89c0c65fe6 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1135" y="388" width="1" height="15" fill="rgb(248,214,32)"/><text x="1138.00" y="398.50"></text></g><g><title>0x7f89c0c66368 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1136" y="388" width="1" height="15" fill="rgb(220,26,39)"/><text x="1139.00" y="398.50"></text></g><g><title>0x7f89c0c663ae (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1137" y="388" width="1" height="15" fill="rgb(235,200,20)"/><text x="1140.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (23 samples, 2.49%)</title><rect x="1110" y="356" width="30" height="15" fill="rgb(225,5,25)"/><text x="1113.00" y="366.50">op..</text></g><g><title>malloc (libc-2.29.so) (22 samples, 2.38%)</title><rect x="1112" y="372" width="28" height="15" fill="rgb(222,69,40)"/><text x="1115.00" y="382.50">m..</text></g><g><title>0x7f89c0c663e0 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1138" y="388" width="2" height="15" fill="rgb(242,158,10)"/><text x="1141.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1140" y="356" width="1" height="15" fill="rgb(221,215,20)"/><text x="1143.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1140" y="372" width="1" height="15" fill="rgb(230,93,20)"/><text x="1143.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 41.23%)</title><rect x="658" y="260" width="487" height="15" fill="rgb(205,144,3)"/><text x="661.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 41.23%)</title><rect x="658" y="276" width="487" height="15" fill="rgb(250,45,34)"/><text x="661.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 41.23%)</title><rect x="658" y="292" width="487" height="15" fill="rgb(253,121,6)"/><text x="661.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 41.23%)</title><rect x="658" y="308" width="487" height="15" fill="rgb(238,54,42)"/><text x="661.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 41.23%)</title><rect x="658" y="324" width="487" height="15" fill="rgb(241,228,22)"/><text x="661.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxrun..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 3.35%)</title><rect x="1105" y="340" width="40" height="15" fill="rgb(241,117,48)"/><text x="1108.00" y="350.50">onn..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (3 samples, 0.32%)</title><rect x="1141" y="356" width="4" height="15" fill="rgb(215,50,39)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1145" y="260" width="1" height="15" fill="rgb(245,61,48)"/><text x="1148.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.11%)</title><rect x="1145" y="276" width="1" height="15" fill="rgb(230,122,2)"/><text x="1148.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.11%)</title><rect x="1145" y="292" width="1" height="15" fill="rgb(249,54,18)"/><text x="1148.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.11%)</title><rect x="1145" y="308" width="1" height="15" fill="rgb(236,24,11)"/><text x="1148.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.11%)</title><rect x="1145" y="324" width="1" height="15" fill="rgb(205,96,44)"/><text x="1148.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.11%)</title><rect x="1145" y="340" width="1" height="15" fill="rgb(241,115,52)"/><text x="1148.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1145" y="356" width="1" height="15" fill="rgb(225,15,18)"/><text x="1148.00" y="366.50"></text></g><g><title>0x7f89c0c662a3 (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1145" y="372" width="1" height="15" fill="rgb(217,227,54)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f8980c9b8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.11%)</title><rect x="1170" y="276" width="2" height="15" fill="rgb(245,53,3)"/><text x="1173.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.76%)</title><rect x="1172" y="276" width="9" height="15" fill="rgb(246,205,39)"/><text x="1175.00" y="286.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 3.03%)</title><rect x="1146" y="260" width="36" height="15" fill="rgb(247,49,54)"/><text x="1149.00" y="270.50">pyb..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1181" y="276" width="1" height="15" fill="rgb(217,135,50)"/><text x="1184.00" y="286.50"></text></g><g><title>0x7f89b07317a0 (libstdc++.so.6.0.28) (1 samples, 0.11%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(226,141,16)"/><text x="1185.00" y="302.50"></text></g><g><title>0x7f89c0c649ed (libc-2.29.so) (1 samples, 0.11%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(208,33,10)"/><text x="1187.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (417 samples, 45.13%)</title><rect x="656" y="164" width="532" height="15" fill="rgb(245,211,32)"/><text x="659.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (417 samples, 45.13%)</title><rect x="656" y="180" width="532" height="15" fill="rgb(241,78,8)"/><text x="659.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (417 samples, 45.13%)</title><rect x="656" y="196" width="532" height="15" fill="rgb(211,115,15)"/><text x="659.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (416 samples, 45.02%)</title><rect x="657" y="212" width="531" height="15" fill="rgb(233,3,18)"/><text x="660.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (416 samples, 45.02%)</title><rect x="657" y="228" width="531" height="15" fill="rgb(223,28,42)"/><text x="660.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMet..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (416 samples, 45.02%)</title><rect x="657" y="244" width="531" height="15" fill="rgb(217,109,33)"/><text x="660.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="1182" y="260" width="6" height="15" fill="rgb(212,133,5)"/><text x="1185.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.54%)</title><rect x="1182" y="276" width="6" height="15" fill="rgb(217,68,46)"/><text x="1185.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.43%)</title><rect x="1183" y="292" width="5" height="15" fill="rgb(237,47,39)"/><text x="1186.00" y="302.50"></text></g><g><title>0x7f89c0c64d07 (libc-2.29.so) (2 samples, 0.22%)</title><rect x="1186" y="308" width="2" height="15" fill="rgb(211,147,15)"/><text x="1189.00" y="318.50"></text></g><g><title>all (924 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(205,50,44)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:52) (469 samples, 50.76%)</title><rect x="591" y="52" width="599" height="15" fill="rgb(219,142,40)"/><text x="594.00" y="62.50">&lt;module&gt; (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:51) (469 samples, 50.76%)</title><rect x="591" y="68" width="599" height="15" fill="rgb(227,6,53)"/><text x="594.00" y="78.50">profile_ort (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:29) (469 samples, 50.76%)</title><rect x="591" y="84" width="599" height="15" fill="rgb(219,72,22)"/><text x="594.00" y="94.50">setup_profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:..</text></g><g><title>profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:23) (434 samples, 46.97%)</title><rect x="635" y="100" width="555" height="15" fill="rgb(250,220,44)"/><text x="638.00" y="110.50">profile (bench_SVC_poly_m_cl_probabilityTrue_kernelpoly_1000_4_12_float_.py:..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (418 samples, 45.24%)</title><rect x="656" y="116" width="534" height="15" fill="rgb(234,61,36)"/><text x="659.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (418 samples, 45.24%)</title><rect x="656" y="132" width="534" height="15" fill="rgb(239,142,49)"/><text x="659.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (418 samples, 45.24%)</title><rect x="656" y="148" width="534" height="15" fill="rgb(207,217,11)"/><text x="659.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.11%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(250,190,45)"/><text x="1191.00" y="174.50"></text></g></g></svg>