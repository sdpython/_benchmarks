<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.46%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(213,139,49)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(207,66,11)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(242,73,26)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(252,184,24)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(222,27,38)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(249,50,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.46%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(205,169,24)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(208,197,46)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(217,68,33)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(250,99,36)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(230,208,4)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(213,116,44)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(205,145,29)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(231,21,26)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(219,110,5)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.46%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(225,136,39)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(238,33,47)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(224,222,23)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(221,229,16)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(237,34,6)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(243,80,19)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.46%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(205,25,35)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(224,212,48)"/><text x="13.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(217,104,54)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(240,82,36)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1028" width="5" height="15" fill="rgb(206,18,7)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1044" width="5" height="15" fill="rgb(242,167,15)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="1060" width="5" height="15" fill="rgb(233,126,47)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1076" width="5" height="15" fill="rgb(205,194,10)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.46%)</title><rect x="10" y="1092" width="5" height="15" fill="rgb(227,151,49)"/><text x="13.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1108" width="5" height="15" fill="rgb(231,60,33)"/><text x="13.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1124" width="5" height="15" fill="rgb(235,164,49)"/><text x="13.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1140" width="5" height="15" fill="rgb(242,209,41)"/><text x="13.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1156" width="5" height="15" fill="rgb(244,87,28)"/><text x="13.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1172" width="5" height="15" fill="rgb(205,170,9)"/><text x="13.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="1188" width="5" height="15" fill="rgb(215,222,27)"/><text x="13.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1204" width="5" height="15" fill="rgb(209,0,15)"/><text x="13.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.46%)</title><rect x="10" y="1220" width="5" height="15" fill="rgb(207,135,6)"/><text x="13.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1236" width="5" height="15" fill="rgb(237,148,31)"/><text x="13.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1252" width="5" height="15" fill="rgb(213,75,46)"/><text x="13.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1268" width="5" height="15" fill="rgb(225,191,24)"/><text x="13.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="10" y="1284" width="5" height="15" fill="rgb(212,24,4)"/><text x="13.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="10" y="1300" width="5" height="15" fill="rgb(211,171,25)"/><text x="13.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.46%)</title><rect x="10" y="1316" width="5" height="15" fill="rgb(220,18,25)"/><text x="13.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.46%)</title><rect x="10" y="1332" width="5" height="15" fill="rgb(220,105,11)"/><text x="13.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.46%)</title><rect x="10" y="1348" width="5" height="15" fill="rgb(246,75,26)"/><text x="13.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.46%)</title><rect x="10" y="1364" width="5" height="15" fill="rgb(243,118,3)"/><text x="13.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.46%)</title><rect x="10" y="1380" width="5" height="15" fill="rgb(234,27,22)"/><text x="13.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.46%)</title><rect x="10" y="1396" width="5" height="15" fill="rgb(253,222,49)"/><text x="13.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.46%)</title><rect x="10" y="1412" width="5" height="15" fill="rgb(241,201,3)"/><text x="13.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.46%)</title><rect x="10" y="1428" width="5" height="15" fill="rgb(245,49,34)"/><text x="13.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(227,4,20)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(244,92,48)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(248,94,13)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(224,72,23)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(240,185,10)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(245,201,43)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.92%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(235,51,49)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(246,37,24)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(225,229,41)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(229,152,8)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(238,108,12)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(233,69,11)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.92%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(222,36,49)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(226,136,19)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(242,42,38)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(206,96,50)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(215,74,1)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(245,155,9)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.46%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(244,82,31)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="15" y="644" width="5" height="15" fill="rgb(209,69,29)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="15" y="660" width="5" height="15" fill="rgb(241,135,23)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="15" y="676" width="5" height="15" fill="rgb(220,219,8)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="15" y="692" width="5" height="15" fill="rgb(240,99,52)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="15" y="708" width="5" height="15" fill="rgb(248,48,37)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_show_versions.py) (1 samples, 0.46%)</title><rect x="15" y="724" width="5" height="15" fill="rgb(252,98,50)"/><text x="18.00" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.46%)</title><rect x="20" y="580" width="6" height="15" fill="rgb(234,111,14)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="596" width="6" height="15" fill="rgb(220,219,7)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="612" width="6" height="15" fill="rgb(227,140,45)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="628" width="6" height="15" fill="rgb(213,26,39)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="20" y="644" width="6" height="15" fill="rgb(207,134,26)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="660" width="6" height="15" fill="rgb(224,23,33)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.46%)</title><rect x="20" y="676" width="6" height="15" fill="rgb(230,121,26)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="692" width="6" height="15" fill="rgb(223,101,25)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="708" width="6" height="15" fill="rgb(213,10,29)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="724" width="6" height="15" fill="rgb(241,153,7)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="20" y="740" width="6" height="15" fill="rgb(240,179,12)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="756" width="6" height="15" fill="rgb(253,9,28)"/><text x="23.00" y="766.50"></text></g><g><title>0x7f4a8088340e (?) (1 samples, 0.46%)</title><rect x="20" y="772" width="6" height="15" fill="rgb(213,131,37)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="788" width="6" height="15" fill="rgb(206,40,5)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="804" width="6" height="15" fill="rgb(213,13,53)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="820" width="6" height="15" fill="rgb(250,160,31)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="20" y="836" width="6" height="15" fill="rgb(228,186,5)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(239,138,8)"/><text x="23.00" y="862.50"></text></g><g><title>0x7f4a8063ccd2 (?) (1 samples, 0.46%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(213,152,7)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(250,7,40)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(226,46,2)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(237,10,48)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(212,57,20)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="948" width="6" height="15" fill="rgb(226,111,52)"/><text x="23.00" y="958.50"></text></g><g><title>0x7f4a7fd320e5 (?) (1 samples, 0.46%)</title><rect x="20" y="964" width="6" height="15" fill="rgb(208,46,0)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="980" width="6" height="15" fill="rgb(225,34,41)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="996" width="6" height="15" fill="rgb(240,180,54)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="1012" width="6" height="15" fill="rgb(205,133,38)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="20" y="1028" width="6" height="15" fill="rgb(228,169,51)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="20" y="1044" width="6" height="15" fill="rgb(212,26,33)"/><text x="23.00" y="1054.50"></text></g><g><title>0x7f4a7fab32e1 (?) (1 samples, 0.46%)</title><rect x="20" y="1060" width="6" height="15" fill="rgb(207,61,12)"/><text x="23.00" y="1070.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="20" y="1076" width="6" height="15" fill="rgb(205,65,28)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="628" width="5" height="15" fill="rgb(232,48,38)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="644" width="5" height="15" fill="rgb(234,164,6)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="660" width="5" height="15" fill="rgb(253,63,14)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="676" width="5" height="15" fill="rgb(228,226,7)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="26" y="692" width="5" height="15" fill="rgb(244,11,45)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="708" width="5" height="15" fill="rgb(249,209,0)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.46%)</title><rect x="26" y="724" width="5" height="15" fill="rgb(236,153,53)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="740" width="5" height="15" fill="rgb(232,56,28)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="756" width="5" height="15" fill="rgb(217,209,28)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="772" width="5" height="15" fill="rgb(248,13,29)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="26" y="788" width="5" height="15" fill="rgb(252,56,26)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="804" width="5" height="15" fill="rgb(233,41,27)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse.py) (1 samples, 0.46%)</title><rect x="26" y="820" width="5" height="15" fill="rgb(207,13,10)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="836" width="5" height="15" fill="rgb(227,140,12)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="852" width="5" height="15" fill="rgb(229,205,1)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="868" width="5" height="15" fill="rgb(252,133,42)"/><text x="29.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(229,57,53)"/><text x="29.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(242,68,34)"/><text x="29.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(247,179,50)"/><text x="29.00" y="926.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(249,150,13)"/><text x="29.00" y="942.50"></text></g><g><title>0x7f4a942c5995 (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="948" width="5" height="15" fill="rgb(208,89,49)"/><text x="29.00" y="958.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(241,81,12)"/><text x="29.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(211,220,32)"/><text x="29.00" y="990.50"></text></g><g><title>0x7f4a942c5258 (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(238,17,7)"/><text x="29.00" y="1006.50"></text></g><g><title>0x7f4a94312d16 (ld-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(239,54,12)"/><text x="29.00" y="1022.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="26" y="1028" width="5" height="15" fill="rgb(233,181,48)"/><text x="29.00" y="1038.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.46%)</title><rect x="31" y="964" width="6" height="15" fill="rgb(205,145,7)"/><text x="34.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="980" width="6" height="15" fill="rgb(234,196,43)"/><text x="34.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="996" width="6" height="15" fill="rgb(205,229,27)"/><text x="34.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="1012" width="6" height="15" fill="rgb(253,190,41)"/><text x="34.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="31" y="1028" width="6" height="15" fill="rgb(211,151,54)"/><text x="34.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="1044" width="6" height="15" fill="rgb(250,47,5)"/><text x="34.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (1 samples, 0.46%)</title><rect x="31" y="1060" width="6" height="15" fill="rgb(230,81,53)"/><text x="34.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="1076" width="6" height="15" fill="rgb(208,73,32)"/><text x="34.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="1092" width="6" height="15" fill="rgb(240,47,6)"/><text x="34.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="31" y="1108" width="6" height="15" fill="rgb(214,145,9)"/><text x="34.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="31" y="1124" width="6" height="15" fill="rgb(219,162,38)"/><text x="34.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="31" y="1140" width="6" height="15" fill="rgb(235,98,16)"/><text x="34.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="31" y="1156" width="6" height="15" fill="rgb(231,188,23)"/><text x="34.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.76%)</title><rect x="10" y="292" width="32" height="15" fill="rgb(219,34,25)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="10" y="308" width="32" height="15" fill="rgb(229,153,29)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="10" y="324" width="32" height="15" fill="rgb(217,59,53)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="340" width="22" height="15" fill="rgb(249,77,45)"/><text x="23.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.84%)</title><rect x="20" y="356" width="22" height="15" fill="rgb(212,1,54)"/><text x="23.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="372" width="22" height="15" fill="rgb(245,57,50)"/><text x="23.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.84%)</title><rect x="20" y="388" width="22" height="15" fill="rgb(224,149,26)"/><text x="23.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="404" width="22" height="15" fill="rgb(213,57,36)"/><text x="23.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="420" width="22" height="15" fill="rgb(244,222,28)"/><text x="23.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="436" width="22" height="15" fill="rgb(208,220,8)"/><text x="23.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.84%)</title><rect x="20" y="452" width="22" height="15" fill="rgb(225,76,48)"/><text x="23.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="468" width="22" height="15" fill="rgb(237,82,11)"/><text x="23.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.84%)</title><rect x="20" y="484" width="22" height="15" fill="rgb(208,84,33)"/><text x="23.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="500" width="22" height="15" fill="rgb(245,23,54)"/><text x="23.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="516" width="22" height="15" fill="rgb(249,22,19)"/><text x="23.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="532" width="22" height="15" fill="rgb(219,25,49)"/><text x="23.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.84%)</title><rect x="20" y="548" width="22" height="15" fill="rgb(233,19,17)"/><text x="23.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.84%)</title><rect x="20" y="564" width="22" height="15" fill="rgb(213,171,24)"/><text x="23.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.38%)</title><rect x="26" y="580" width="16" height="15" fill="rgb(218,44,27)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.38%)</title><rect x="26" y="596" width="16" height="15" fill="rgb(234,49,39)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.38%)</title><rect x="26" y="612" width="16" height="15" fill="rgb(246,28,8)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="628" width="11" height="15" fill="rgb(243,204,46)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="31" y="644" width="11" height="15" fill="rgb(207,194,17)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="660" width="11" height="15" fill="rgb(225,54,9)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.92%)</title><rect x="31" y="676" width="11" height="15" fill="rgb(213,61,39)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="692" width="11" height="15" fill="rgb(253,211,2)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="708" width="11" height="15" fill="rgb(209,190,2)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="724" width="11" height="15" fill="rgb(209,99,23)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="31" y="740" width="11" height="15" fill="rgb(243,98,25)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="756" width="11" height="15" fill="rgb(207,187,39)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.92%)</title><rect x="31" y="772" width="11" height="15" fill="rgb(241,136,30)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="788" width="11" height="15" fill="rgb(208,89,10)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="804" width="11" height="15" fill="rgb(218,181,49)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="820" width="11" height="15" fill="rgb(228,188,0)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="31" y="836" width="11" height="15" fill="rgb(222,48,11)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="852" width="11" height="15" fill="rgb(231,194,42)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.92%)</title><rect x="31" y="868" width="11" height="15" fill="rgb(243,66,7)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="884" width="11" height="15" fill="rgb(213,46,8)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="900" width="11" height="15" fill="rgb(224,44,31)"/><text x="34.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="916" width="11" height="15" fill="rgb(213,39,29)"/><text x="34.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.92%)</title><rect x="31" y="932" width="11" height="15" fill="rgb(207,169,24)"/><text x="34.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.92%)</title><rect x="31" y="948" width="11" height="15" fill="rgb(221,11,42)"/><text x="34.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.46%)</title><rect x="37" y="964" width="5" height="15" fill="rgb(239,119,53)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="980" width="5" height="15" fill="rgb(254,22,26)"/><text x="40.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="996" width="5" height="15" fill="rgb(242,126,3)"/><text x="40.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1012" width="5" height="15" fill="rgb(242,33,26)"/><text x="40.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1028" width="5" height="15" fill="rgb(208,170,29)"/><text x="40.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1044" width="5" height="15" fill="rgb(250,49,6)"/><text x="40.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.46%)</title><rect x="37" y="1060" width="5" height="15" fill="rgb(253,40,27)"/><text x="40.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1076" width="5" height="15" fill="rgb(223,62,48)"/><text x="40.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1092" width="5" height="15" fill="rgb(231,79,40)"/><text x="40.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1108" width="5" height="15" fill="rgb(250,181,45)"/><text x="40.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1124" width="5" height="15" fill="rgb(236,163,11)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1140" width="5" height="15" fill="rgb(209,63,48)"/><text x="40.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.46%)</title><rect x="37" y="1156" width="5" height="15" fill="rgb(237,121,32)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1172" width="5" height="15" fill="rgb(233,81,7)"/><text x="40.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1188" width="5" height="15" fill="rgb(238,211,38)"/><text x="40.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1204" width="5" height="15" fill="rgb(207,161,39)"/><text x="40.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1220" width="5" height="15" fill="rgb(221,128,48)"/><text x="40.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1236" width="5" height="15" fill="rgb(225,78,33)"/><text x="40.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.46%)</title><rect x="37" y="1252" width="5" height="15" fill="rgb(207,174,40)"/><text x="40.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1268" width="5" height="15" fill="rgb(254,13,34)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1284" width="5" height="15" fill="rgb(250,205,4)"/><text x="40.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1300" width="5" height="15" fill="rgb(239,147,32)"/><text x="40.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1316" width="5" height="15" fill="rgb(254,16,5)"/><text x="40.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1332" width="5" height="15" fill="rgb(214,31,46)"/><text x="40.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.46%)</title><rect x="37" y="1348" width="5" height="15" fill="rgb(224,94,54)"/><text x="40.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1364" width="5" height="15" fill="rgb(244,148,46)"/><text x="40.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1380" width="5" height="15" fill="rgb(213,182,46)"/><text x="40.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1396" width="5" height="15" fill="rgb(236,155,8)"/><text x="40.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1412" width="5" height="15" fill="rgb(234,47,14)"/><text x="40.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1428" width="5" height="15" fill="rgb(206,88,13)"/><text x="40.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.46%)</title><rect x="37" y="1444" width="5" height="15" fill="rgb(210,103,51)"/><text x="40.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1460" width="5" height="15" fill="rgb(247,171,24)"/><text x="40.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1476" width="5" height="15" fill="rgb(207,229,34)"/><text x="40.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1492" width="5" height="15" fill="rgb(211,6,46)"/><text x="40.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1508" width="5" height="15" fill="rgb(238,119,37)"/><text x="40.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1524" width="5" height="15" fill="rgb(251,98,20)"/><text x="40.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.46%)</title><rect x="37" y="1540" width="5" height="15" fill="rgb(254,164,17)"/><text x="40.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1556" width="5" height="15" fill="rgb(244,106,16)"/><text x="40.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1572" width="5" height="15" fill="rgb(214,89,14)"/><text x="40.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1588" width="5" height="15" fill="rgb(237,154,29)"/><text x="40.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1604" width="5" height="15" fill="rgb(230,73,50)"/><text x="40.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1620" width="5" height="15" fill="rgb(243,149,47)"/><text x="40.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.46%)</title><rect x="37" y="1636" width="5" height="15" fill="rgb(239,53,7)"/><text x="40.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1652" width="5" height="15" fill="rgb(213,109,0)"/><text x="40.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1668" width="5" height="15" fill="rgb(238,65,7)"/><text x="40.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1684" width="5" height="15" fill="rgb(235,122,26)"/><text x="40.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="37" y="1700" width="5" height="15" fill="rgb(237,163,30)"/><text x="40.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="37" y="1716" width="5" height="15" fill="rgb(211,8,32)"/><text x="40.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.46%)</title><rect x="37" y="1732" width="5" height="15" fill="rgb(219,185,49)"/><text x="40.00" y="1742.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.46%)</title><rect x="37" y="1748" width="5" height="15" fill="rgb(236,168,37)"/><text x="40.00" y="1758.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.46%)</title><rect x="37" y="1764" width="5" height="15" fill="rgb(209,40,35)"/><text x="40.00" y="1774.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.46%)</title><rect x="37" y="1780" width="5" height="15" fill="rgb(217,13,15)"/><text x="40.00" y="1790.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.46%)</title><rect x="37" y="1796" width="5" height="15" fill="rgb(228,2,38)"/><text x="40.00" y="1806.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.46%)</title><rect x="37" y="1812" width="5" height="15" fill="rgb(245,178,43)"/><text x="40.00" y="1822.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.46%)</title><rect x="37" y="1828" width="5" height="15" fill="rgb(207,85,25)"/><text x="40.00" y="1838.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="42" y="868" width="6" height="15" fill="rgb(236,84,47)"/><text x="45.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="42" y="884" width="6" height="15" fill="rgb(239,41,18)"/><text x="45.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="42" y="900" width="6" height="15" fill="rgb(248,76,23)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="42" y="916" width="6" height="15" fill="rgb(246,155,29)"/><text x="45.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="42" y="932" width="6" height="15" fill="rgb(222,85,35)"/><text x="45.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="42" y="948" width="6" height="15" fill="rgb(246,229,11)"/><text x="45.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="42" y="964" width="6" height="15" fill="rgb(232,147,27)"/><text x="45.00" y="974.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(238,177,45)"/><text x="51.00" y="926.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="53" y="948" width="5" height="15" fill="rgb(219,173,24)"/><text x="56.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="53" y="964" width="5" height="15" fill="rgb(216,217,45)"/><text x="56.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.46%)</title><rect x="53" y="980" width="5" height="15" fill="rgb(213,213,31)"/><text x="56.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.46%)</title><rect x="53" y="996" width="5" height="15" fill="rgb(239,24,37)"/><text x="56.00" y="1006.50"></text></g><g><title>_parse_local_version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.46%)</title><rect x="53" y="1012" width="5" height="15" fill="rgb(243,56,20)"/><text x="56.00" y="1022.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.46%)</title><rect x="58" y="948" width="6" height="15" fill="rgb(245,185,46)"/><text x="61.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.46%)</title><rect x="58" y="964" width="6" height="15" fill="rgb(240,171,51)"/><text x="61.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.53%)</title><rect x="10" y="196" width="65" height="15" fill="rgb(229,91,15)"/><text x="13.00" y="206.50">_call_w..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.53%)</title><rect x="10" y="212" width="65" height="15" fill="rgb(233,219,14)"/><text x="13.00" y="222.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.53%)</title><rect x="10" y="228" width="65" height="15" fill="rgb(226,204,42)"/><text x="13.00" y="238.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.53%)</title><rect x="10" y="244" width="65" height="15" fill="rgb(205,188,32)"/><text x="13.00" y="254.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 5.53%)</title><rect x="10" y="260" width="65" height="15" fill="rgb(217,206,32)"/><text x="13.00" y="270.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 5.53%)</title><rect x="10" y="276" width="65" height="15" fill="rgb(210,56,16)"/><text x="13.00" y="286.50">_call_w..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.76%)</title><rect x="42" y="292" width="33" height="15" fill="rgb(254,170,16)"/><text x="45.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="308" width="33" height="15" fill="rgb(236,81,18)"/><text x="45.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="324" width="33" height="15" fill="rgb(247,157,52)"/><text x="45.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="340" width="33" height="15" fill="rgb(232,125,39)"/><text x="45.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.76%)</title><rect x="42" y="356" width="33" height="15" fill="rgb(248,190,36)"/><text x="45.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="372" width="33" height="15" fill="rgb(241,20,1)"/><text x="45.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.76%)</title><rect x="42" y="388" width="33" height="15" fill="rgb(231,92,39)"/><text x="45.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="404" width="33" height="15" fill="rgb(210,153,11)"/><text x="45.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="420" width="33" height="15" fill="rgb(223,33,35)"/><text x="45.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="436" width="33" height="15" fill="rgb(219,53,31)"/><text x="45.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.76%)</title><rect x="42" y="452" width="33" height="15" fill="rgb(218,63,42)"/><text x="45.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="468" width="33" height="15" fill="rgb(241,42,35)"/><text x="45.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 2.76%)</title><rect x="42" y="484" width="33" height="15" fill="rgb(238,54,10)"/><text x="45.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="500" width="33" height="15" fill="rgb(216,70,27)"/><text x="45.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="516" width="33" height="15" fill="rgb(253,208,33)"/><text x="45.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="532" width="33" height="15" fill="rgb(252,84,49)"/><text x="45.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.76%)</title><rect x="42" y="548" width="33" height="15" fill="rgb(234,60,38)"/><text x="45.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="564" width="33" height="15" fill="rgb(238,43,47)"/><text x="45.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 2.76%)</title><rect x="42" y="580" width="33" height="15" fill="rgb(234,111,43)"/><text x="45.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="596" width="33" height="15" fill="rgb(208,199,15)"/><text x="45.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="612" width="33" height="15" fill="rgb(206,38,26)"/><text x="45.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="628" width="33" height="15" fill="rgb(219,222,50)"/><text x="45.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="644" width="33" height="15" fill="rgb(225,3,18)"/><text x="45.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="660" width="33" height="15" fill="rgb(246,3,14)"/><text x="45.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="676" width="33" height="15" fill="rgb(210,13,2)"/><text x="45.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.76%)</title><rect x="42" y="692" width="33" height="15" fill="rgb(240,139,7)"/><text x="45.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="708" width="33" height="15" fill="rgb(225,218,41)"/><text x="45.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 2.76%)</title><rect x="42" y="724" width="33" height="15" fill="rgb(211,27,36)"/><text x="45.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="740" width="33" height="15" fill="rgb(209,154,0)"/><text x="45.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="756" width="33" height="15" fill="rgb(231,140,38)"/><text x="45.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="772" width="33" height="15" fill="rgb(216,19,16)"/><text x="45.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.76%)</title><rect x="42" y="788" width="33" height="15" fill="rgb(246,14,6)"/><text x="45.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.76%)</title><rect x="42" y="804" width="33" height="15" fill="rgb(217,92,43)"/><text x="45.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 2.76%)</title><rect x="42" y="820" width="33" height="15" fill="rgb(209,20,44)"/><text x="45.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 2.76%)</title><rect x="42" y="836" width="33" height="15" fill="rgb(221,46,34)"/><text x="45.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 2.76%)</title><rect x="42" y="852" width="33" height="15" fill="rgb(210,97,22)"/><text x="45.00" y="862.50">_i..</text></g><g><title>_build_master (pkg_resources/__init__.py) (5 samples, 2.30%)</title><rect x="48" y="868" width="27" height="15" fill="rgb(226,52,7)"/><text x="51.00" y="878.50">_..</text></g><g><title>__init__ (pkg_resources/__init__.py) (5 samples, 2.30%)</title><rect x="48" y="884" width="27" height="15" fill="rgb(247,143,10)"/><text x="51.00" y="894.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 2.30%)</title><rect x="48" y="900" width="27" height="15" fill="rgb(211,224,17)"/><text x="51.00" y="910.50">a..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.84%)</title><rect x="53" y="916" width="22" height="15" fill="rgb(220,71,25)"/><text x="56.00" y="926.50">f..</text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (4 samples, 1.84%)</title><rect x="53" y="932" width="22" height="15" fill="rgb(249,159,39)"/><text x="56.00" y="942.50">d..</text></g><g><title>os_listdir (python3.7) (2 samples, 0.92%)</title><rect x="64" y="948" width="11" height="15" fill="rgb(231,10,42)"/><text x="67.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="69" y="964" width="6" height="15" fill="rgb(217,57,23)"/><text x="72.00" y="974.50"></text></g><g><title>0x7f4a9407d237 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="69" y="980" width="6" height="15" fill="rgb(238,50,20)"/><text x="72.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="68" width="70" height="15" fill="rgb(248,219,32)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="84" width="70" height="15" fill="rgb(213,192,37)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="100" width="70" height="15" fill="rgb(225,15,36)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.99%)</title><rect x="10" y="116" width="70" height="15" fill="rgb(239,143,14)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="132" width="70" height="15" fill="rgb(224,226,13)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx.py) (13 samples, 5.99%)</title><rect x="10" y="148" width="70" height="15" fill="rgb(218,210,35)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="164" width="70" height="15" fill="rgb(231,176,17)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.99%)</title><rect x="10" y="180" width="70" height="15" fill="rgb(231,58,9)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="196" width="5" height="15" fill="rgb(225,223,54)"/><text x="78.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="212" width="5" height="15" fill="rgb(254,51,21)"/><text x="78.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="228" width="5" height="15" fill="rgb(235,218,43)"/><text x="78.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.46%)</title><rect x="75" y="244" width="5" height="15" fill="rgb(252,167,4)"/><text x="78.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="260" width="5" height="15" fill="rgb(211,1,29)"/><text x="78.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="276" width="5" height="15" fill="rgb(235,71,23)"/><text x="78.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="292" width="5" height="15" fill="rgb(225,216,10)"/><text x="78.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="308" width="5" height="15" fill="rgb(242,157,37)"/><text x="78.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="324" width="5" height="15" fill="rgb(233,23,52)"/><text x="78.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.46%)</title><rect x="75" y="340" width="5" height="15" fill="rgb(246,19,3)"/><text x="78.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="356" width="5" height="15" fill="rgb(215,87,48)"/><text x="78.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="372" width="5" height="15" fill="rgb(236,132,3)"/><text x="78.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="388" width="5" height="15" fill="rgb(214,137,24)"/><text x="78.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="404" width="5" height="15" fill="rgb(222,120,43)"/><text x="78.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="420" width="5" height="15" fill="rgb(253,215,3)"/><text x="78.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="436" width="5" height="15" fill="rgb(236,212,33)"/><text x="78.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="452" width="5" height="15" fill="rgb(248,56,53)"/><text x="78.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="468" width="5" height="15" fill="rgb(215,142,17)"/><text x="78.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.46%)</title><rect x="75" y="484" width="5" height="15" fill="rgb(234,50,11)"/><text x="78.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="500" width="5" height="15" fill="rgb(231,54,44)"/><text x="78.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="516" width="5" height="15" fill="rgb(231,48,51)"/><text x="78.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="532" width="5" height="15" fill="rgb(225,80,14)"/><text x="78.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="548" width="5" height="15" fill="rgb(227,60,51)"/><text x="78.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="564" width="5" height="15" fill="rgb(249,30,34)"/><text x="78.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.46%)</title><rect x="75" y="580" width="5" height="15" fill="rgb(251,129,6)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="596" width="5" height="15" fill="rgb(243,53,41)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="612" width="5" height="15" fill="rgb(244,106,46)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="628" width="5" height="15" fill="rgb(226,190,29)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="644" width="5" height="15" fill="rgb(207,143,27)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="660" width="5" height="15" fill="rgb(244,110,30)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.46%)</title><rect x="75" y="676" width="5" height="15" fill="rgb(249,189,34)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="692" width="5" height="15" fill="rgb(229,104,7)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="708" width="5" height="15" fill="rgb(249,101,19)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="724" width="5" height="15" fill="rgb(234,200,8)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="740" width="5" height="15" fill="rgb(239,95,9)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="756" width="5" height="15" fill="rgb(219,135,26)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.46%)</title><rect x="75" y="772" width="5" height="15" fill="rgb(208,110,24)"/><text x="78.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="788" width="5" height="15" fill="rgb(251,106,36)"/><text x="78.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="804" width="5" height="15" fill="rgb(240,176,18)"/><text x="78.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="820" width="5" height="15" fill="rgb(248,222,36)"/><text x="78.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="836" width="5" height="15" fill="rgb(206,97,27)"/><text x="78.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="852" width="5" height="15" fill="rgb(237,218,29)"/><text x="78.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="75" y="868" width="5" height="15" fill="rgb(217,187,53)"/><text x="78.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="75" y="884" width="5" height="15" fill="rgb(243,184,52)"/><text x="78.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.46%)</title><rect x="75" y="900" width="5" height="15" fill="rgb(234,0,52)"/><text x="78.00" y="910.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.46%)</title><rect x="75" y="916" width="5" height="15" fill="rgb(230,190,4)"/><text x="78.00" y="926.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.46%)</title><rect x="86" y="116" width="5" height="15" fill="rgb(253,86,53)"/><text x="89.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.46%)</title><rect x="86" y="132" width="5" height="15" fill="rgb(225,217,27)"/><text x="89.00" y="142.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.92%)</title><rect x="113" y="180" width="11" height="15" fill="rgb(246,120,43)"/><text x="116.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.92%)</title><rect x="129" y="212" width="11" height="15" fill="rgb(246,134,20)"/><text x="132.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="135" y="228" width="5" height="15" fill="rgb(209,109,31)"/><text x="138.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="135" y="244" width="5" height="15" fill="rgb(227,228,30)"/><text x="138.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="135" y="260" width="5" height="15" fill="rgb(233,78,8)"/><text x="138.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="151" y="292" width="5" height="15" fill="rgb(207,151,15)"/><text x="154.00" y="302.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.46%)</title><rect x="151" y="308" width="5" height="15" fill="rgb(215,226,21)"/><text x="154.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="156" y="292" width="11" height="15" fill="rgb(238,7,4)"/><text x="159.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="167" y="340" width="11" height="15" fill="rgb(229,122,42)"/><text x="170.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="167" y="356" width="11" height="15" fill="rgb(241,173,51)"/><text x="170.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="167" y="372" width="11" height="15" fill="rgb(220,178,4)"/><text x="170.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.92%)</title><rect x="167" y="388" width="11" height="15" fill="rgb(238,91,2)"/><text x="170.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="173" y="404" width="5" height="15" fill="rgb(242,194,34)"/><text x="176.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="178" y="340" width="6" height="15" fill="rgb(243,225,40)"/><text x="181.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="178" y="356" width="6" height="15" fill="rgb(254,80,0)"/><text x="181.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="178" y="372" width="6" height="15" fill="rgb(241,16,37)"/><text x="181.00" y="382.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="184" y="340" width="5" height="15" fill="rgb(234,93,31)"/><text x="187.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.69%)</title><rect x="151" y="276" width="43" height="15" fill="rgb(230,21,22)"/><text x="154.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="167" y="292" width="27" height="15" fill="rgb(219,223,11)"/><text x="170.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="167" y="308" width="27" height="15" fill="rgb(230,69,3)"/><text x="170.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.30%)</title><rect x="167" y="324" width="27" height="15" fill="rgb(228,6,48)"/><text x="170.00" y="334.50">o..</text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="189" y="340" width="5" height="15" fill="rgb(214,142,34)"/><text x="192.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="189" y="356" width="5" height="15" fill="rgb(245,201,0)"/><text x="192.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="189" y="372" width="5" height="15" fill="rgb(243,25,11)"/><text x="192.00" y="382.50"></text></g><g><title>0x7f4a9403dbc0 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="189" y="388" width="5" height="15" fill="rgb(212,46,51)"/><text x="192.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.61%)</title><rect x="145" y="260" width="55" height="15" fill="rgb(217,142,34)"/><text x="148.00" y="270.50">onnxr..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="194" y="276" width="6" height="15" fill="rgb(227,184,45)"/><text x="197.00" y="286.50"></text></g><g><title>onnxruntime::MapType&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt;::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="200" y="260" width="5" height="15" fill="rgb(236,8,36)"/><text x="203.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py) (15 samples, 6.91%)</title><rect x="129" y="196" width="82" height="15" fill="rgb(244,194,19)"/><text x="132.00" y="206.50">run (onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.99%)</title><rect x="140" y="212" width="71" height="15" fill="rgb(208,193,7)"/><text x="143.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.99%)</title><rect x="140" y="228" width="71" height="15" fill="rgb(236,184,15)"/><text x="143.00" y="238.50">void pyb..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 5.53%)</title><rect x="145" y="244" width="66" height="15" fill="rgb(216,104,19)"/><text x="148.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.46%)</title><rect x="205" y="260" width="6" height="15" fill="rgb(241,30,31)"/><text x="208.00" y="270.50"></text></g><g><title>0x7f4a9403d922 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="205" y="276" width="6" height="15" fill="rgb(244,153,47)"/><text x="208.00" y="286.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (25 samples, 11.52%)</title><rect x="80" y="100" width="136" height="15" fill="rgb(240,200,7)"/><text x="83.00" y="110.50">profile (bench_Lo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (23 samples, 10.60%)</title><rect x="91" y="116" width="125" height="15" fill="rgb(234,70,51)"/><text x="94.00" y="126.50">time_predict (m..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (23 samples, 10.60%)</title><rect x="91" y="132" width="125" height="15" fill="rgb(237,206,10)"/><text x="94.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (23 samples, 10.60%)</title><rect x="91" y="148" width="125" height="15" fill="rgb(230,104,30)"/><text x="94.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (21 samples, 9.68%)</title><rect x="102" y="164" width="114" height="15" fill="rgb(227,93,11)"/><text x="105.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (17 samples, 7.83%)</title><rect x="124" y="180" width="92" height="15" fill="rgb(244,105,19)"/><text x="127.00" y="190.50">run (mlpro..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.46%)</title><rect x="211" y="196" width="5" height="15" fill="rgb(254,49,44)"/><text x="214.00" y="206.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (26 samples, 11.98%)</title><rect x="80" y="68" width="142" height="15" fill="rgb(236,36,41)"/><text x="83.00" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (26 samples, 11.98%)</title><rect x="80" y="84" width="142" height="15" fill="rgb(240,61,27)"/><text x="83.00" y="94.50">setup_profile (ben..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.46%)</title><rect x="216" y="100" width="6" height="15" fill="rgb(234,168,23)"/><text x="219.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.46%)</title><rect x="216" y="116" width="6" height="15" fill="rgb(215,26,24)"/><text x="219.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.46%)</title><rect x="216" y="132" width="6" height="15" fill="rgb(248,42,34)"/><text x="219.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.46%)</title><rect x="216" y="148" width="6" height="15" fill="rgb(251,213,13)"/><text x="219.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.46%)</title><rect x="216" y="164" width="6" height="15" fill="rgb(224,47,23)"/><text x="219.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="180" width="6" height="15" fill="rgb(247,163,39)"/><text x="219.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="196" width="6" height="15" fill="rgb(238,208,15)"/><text x="219.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="212" width="6" height="15" fill="rgb(241,42,35)"/><text x="219.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="216" y="228" width="6" height="15" fill="rgb(210,48,35)"/><text x="219.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="244" width="6" height="15" fill="rgb(211,181,4)"/><text x="219.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.46%)</title><rect x="216" y="260" width="6" height="15" fill="rgb(242,198,30)"/><text x="219.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="276" width="6" height="15" fill="rgb(207,91,1)"/><text x="219.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="292" width="6" height="15" fill="rgb(208,129,52)"/><text x="219.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="308" width="6" height="15" fill="rgb(239,213,32)"/><text x="219.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="216" y="324" width="6" height="15" fill="rgb(220,138,0)"/><text x="219.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="340" width="6" height="15" fill="rgb(228,22,27)"/><text x="219.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.46%)</title><rect x="216" y="356" width="6" height="15" fill="rgb(244,142,48)"/><text x="219.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="372" width="6" height="15" fill="rgb(244,113,16)"/><text x="219.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="388" width="6" height="15" fill="rgb(214,13,12)"/><text x="219.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="404" width="6" height="15" fill="rgb(242,106,32)"/><text x="219.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="216" y="420" width="6" height="15" fill="rgb(229,21,36)"/><text x="219.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="436" width="6" height="15" fill="rgb(227,149,9)"/><text x="219.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.46%)</title><rect x="216" y="452" width="6" height="15" fill="rgb(217,117,37)"/><text x="219.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="468" width="6" height="15" fill="rgb(251,134,45)"/><text x="219.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="484" width="6" height="15" fill="rgb(250,133,34)"/><text x="219.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="500" width="6" height="15" fill="rgb(229,21,53)"/><text x="219.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="516" width="6" height="15" fill="rgb(230,41,23)"/><text x="219.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.46%)</title><rect x="216" y="532" width="6" height="15" fill="rgb(216,229,48)"/><text x="219.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="216" y="548" width="6" height="15" fill="rgb(216,141,19)"/><text x="219.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="564" width="6" height="15" fill="rgb(205,85,6)"/><text x="219.00" y="574.50"></text></g><g><title>0x7f4a942c5995 (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="580" width="6" height="15" fill="rgb(247,30,53)"/><text x="219.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="596" width="6" height="15" fill="rgb(228,103,48)"/><text x="219.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="612" width="6" height="15" fill="rgb(226,93,49)"/><text x="219.00" y="622.50"></text></g><g><title>0x7f4a942c5258 (libdl-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="628" width="6" height="15" fill="rgb(209,164,27)"/><text x="219.00" y="638.50"></text></g><g><title>0x7f4a94312d7a (ld-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="644" width="6" height="15" fill="rgb(235,171,18)"/><text x="219.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="660" width="6" height="15" fill="rgb(241,151,11)"/><text x="219.00" y="670.50"></text></g><g><title>0x7f4a94313473 (ld-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="676" width="6" height="15" fill="rgb(206,92,31)"/><text x="219.00" y="686.50"></text></g><g><title>0x7f4a9430f6b9 (ld-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="692" width="6" height="15" fill="rgb(234,135,7)"/><text x="219.00" y="702.50"></text></g><g><title>0x7f4a9430f5ba (ld-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="708" width="6" height="15" fill="rgb(224,116,52)"/><text x="219.00" y="718.50"></text></g><g><title>0x7f4a4e20e9a4 (?) (1 samples, 0.46%)</title><rect x="216" y="724" width="6" height="15" fill="rgb(225,28,12)"/><text x="219.00" y="734.50"></text></g><g><title>_dl_addr (libc-2.29.so) (1 samples, 0.46%)</title><rect x="216" y="740" width="6" height="15" fill="rgb(225,136,33)"/><text x="219.00" y="750.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.38%)</title><rect x="254" y="180" width="17" height="15" fill="rgb(232,25,37)"/><text x="257.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.46%)</title><rect x="265" y="196" width="6" height="15" fill="rgb(242,172,49)"/><text x="268.00" y="206.50"></text></g><g><title>0x7f4a9411bd10 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="265" y="212" width="6" height="15" fill="rgb(228,196,12)"/><text x="268.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.46%)</title><rect x="368" y="196" width="6" height="15" fill="rgb(209,56,30)"/><text x="371.00" y="206.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.46%)</title><rect x="379" y="260" width="6" height="15" fill="rgb(238,105,50)"/><text x="382.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.92%)</title><rect x="379" y="212" width="11" height="15" fill="rgb(222,195,35)"/><text x="382.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.92%)</title><rect x="379" y="228" width="11" height="15" fill="rgb(208,137,5)"/><text x="382.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.92%)</title><rect x="379" y="244" width="11" height="15" fill="rgb(245,89,21)"/><text x="382.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.46%)</title><rect x="385" y="260" width="5" height="15" fill="rgb(231,63,49)"/><text x="388.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.46%)</title><rect x="385" y="276" width="5" height="15" fill="rgb(245,78,47)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.46%)</title><rect x="385" y="292" width="5" height="15" fill="rgb(251,224,41)"/><text x="388.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.46%)</title><rect x="390" y="212" width="6" height="15" fill="rgb(214,37,53)"/><text x="393.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.92%)</title><rect x="396" y="212" width="10" height="15" fill="rgb(238,151,45)"/><text x="399.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.92%)</title><rect x="396" y="228" width="10" height="15" fill="rgb(215,94,48)"/><text x="399.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.92%)</title><rect x="396" y="244" width="10" height="15" fill="rgb(254,176,3)"/><text x="399.00" y="254.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (2 samples, 0.92%)</title><rect x="396" y="260" width="10" height="15" fill="rgb(242,89,0)"/><text x="399.00" y="270.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (2 samples, 0.92%)</title><rect x="396" y="276" width="10" height="15" fill="rgb(229,228,11)"/><text x="399.00" y="286.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.46%)</title><rect x="439" y="260" width="6" height="15" fill="rgb(246,122,2)"/><text x="442.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 1.84%)</title><rect x="439" y="244" width="22" height="15" fill="rgb(229,151,27)"/><text x="442.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.38%)</title><rect x="445" y="260" width="16" height="15" fill="rgb(247,101,39)"/><text x="448.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (2 samples, 0.92%)</title><rect x="450" y="276" width="11" height="15" fill="rgb(237,73,1)"/><text x="453.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.92%)</title><rect x="450" y="292" width="11" height="15" fill="rgb(239,6,6)"/><text x="453.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.46%)</title><rect x="455" y="308" width="6" height="15" fill="rgb(226,84,25)"/><text x="458.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.46%)</title><rect x="455" y="324" width="6" height="15" fill="rgb(224,57,2)"/><text x="458.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="455" y="340" width="6" height="15" fill="rgb(242,78,5)"/><text x="458.00" y="350.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.46%)</title><rect x="488" y="324" width="5" height="15" fill="rgb(240,102,28)"/><text x="491.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.46%)</title><rect x="488" y="340" width="5" height="15" fill="rgb(208,50,0)"/><text x="491.00" y="350.50"></text></g><g><title>_bad_strides (cblasfuncs.c) (1 samples, 0.46%)</title><rect x="493" y="340" width="6" height="15" fill="rgb(221,177,23)"/><text x="496.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.38%)</title><rect x="488" y="276" width="16" height="15" fill="rgb(212,194,34)"/><text x="491.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (3 samples, 1.38%)</title><rect x="488" y="292" width="16" height="15" fill="rgb(228,185,43)"/><text x="491.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (3 samples, 1.38%)</title><rect x="488" y="308" width="16" height="15" fill="rgb(249,171,52)"/><text x="491.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.92%)</title><rect x="493" y="324" width="11" height="15" fill="rgb(231,120,12)"/><text x="496.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.46%)</title><rect x="499" y="340" width="5" height="15" fill="rgb(214,175,3)"/><text x="502.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.46%)</title><rect x="499" y="356" width="5" height="15" fill="rgb(246,220,51)"/><text x="502.00" y="366.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (9 samples, 4.15%)</title><rect x="461" y="244" width="49" height="15" fill="rgb(224,6,32)"/><text x="464.00" y="254.50">nump..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (5 samples, 2.30%)</title><rect x="483" y="260" width="27" height="15" fill="rgb(252,88,20)"/><text x="486.00" y="270.50">d..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.46%)</title><rect x="504" y="276" width="6" height="15" fill="rgb(229,155,8)"/><text x="507.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.46%)</title><rect x="504" y="292" width="6" height="15" fill="rgb(224,80,46)"/><text x="507.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.46%)</title><rect x="504" y="308" width="6" height="15" fill="rgb(241,80,37)"/><text x="507.00" y="318.50"></text></g><g><title>sub_128 (npy_extint128.h) (1 samples, 0.46%)</title><rect x="515" y="356" width="6" height="15" fill="rgb(214,105,47)"/><text x="518.00" y="366.50"></text></g><g><title>add_128 (npy_extint128.h) (1 samples, 0.46%)</title><rect x="515" y="372" width="6" height="15" fill="rgb(218,169,15)"/><text x="518.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.92%)</title><rect x="515" y="292" width="11" height="15" fill="rgb(215,82,2)"/><text x="518.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.92%)</title><rect x="515" y="308" width="11" height="15" fill="rgb(242,182,18)"/><text x="518.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.92%)</title><rect x="515" y="324" width="11" height="15" fill="rgb(220,210,29)"/><text x="518.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.92%)</title><rect x="515" y="340" width="11" height="15" fill="rgb(241,146,43)"/><text x="518.00" y="350.50"></text></g><g><title>to_128 (npy_extint128.h) (1 samples, 0.46%)</title><rect x="521" y="356" width="5" height="15" fill="rgb(247,64,44)"/><text x="524.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.46%)</title><rect x="532" y="308" width="5" height="15" fill="rgb(233,64,9)"/><text x="535.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.46%)</title><rect x="532" y="324" width="5" height="15" fill="rgb(249,153,50)"/><text x="535.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.46%)</title><rect x="532" y="340" width="5" height="15" fill="rgb(216,30,48)"/><text x="535.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.46%)</title><rect x="537" y="308" width="5" height="15" fill="rgb(210,154,52)"/><text x="540.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.46%)</title><rect x="537" y="324" width="5" height="15" fill="rgb(247,108,46)"/><text x="540.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.46%)</title><rect x="537" y="340" width="5" height="15" fill="rgb(233,181,11)"/><text x="540.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.46%)</title><rect x="537" y="356" width="5" height="15" fill="rgb(220,187,51)"/><text x="540.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.46%)</title><rect x="537" y="372" width="5" height="15" fill="rgb(251,189,48)"/><text x="540.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.76%)</title><rect x="515" y="276" width="33" height="15" fill="rgb(242,225,53)"/><text x="518.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.84%)</title><rect x="526" y="292" width="22" height="15" fill="rgb(228,207,44)"/><text x="529.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.46%)</title><rect x="542" y="308" width="6" height="15" fill="rgb(236,197,34)"/><text x="545.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.46%)</title><rect x="542" y="324" width="6" height="15" fill="rgb(229,200,19)"/><text x="545.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.46%)</title><rect x="548" y="276" width="5" height="15" fill="rgb(234,41,10)"/><text x="551.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.46%)</title><rect x="548" y="292" width="5" height="15" fill="rgb(227,41,39)"/><text x="551.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.69%)</title><rect x="515" y="260" width="44" height="15" fill="rgb(211,9,36)"/><text x="518.00" y="270.50">PyUF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="553" y="276" width="6" height="15" fill="rgb(212,44,24)"/><text x="556.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (28 samples, 12.90%)</title><rect x="412" y="228" width="152" height="15" fill="rgb(236,37,46)"/><text x="415.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 4.61%)</title><rect x="510" y="244" width="54" height="15" fill="rgb(251,35,10)"/><text x="513.00" y="254.50">ufunc..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.46%)</title><rect x="559" y="260" width="5" height="15" fill="rgb(245,190,20)"/><text x="562.00" y="270.50"></text></g><g><title>array_sum (methods.c) (1 samples, 0.46%)</title><rect x="575" y="244" width="5" height="15" fill="rgb(220,66,13)"/><text x="578.00" y="254.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.46%)</title><rect x="575" y="260" width="5" height="15" fill="rgb(218,94,14)"/><text x="578.00" y="270.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (1 samples, 0.46%)</title><rect x="575" y="276" width="5" height="15" fill="rgb(235,135,50)"/><text x="578.00" y="286.50"></text></g><g><title>0x7f4a94053e50 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="608" y="404" width="5" height="15" fill="rgb(233,17,26)"/><text x="611.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.92%)</title><rect x="608" y="324" width="11" height="15" fill="rgb(230,122,35)"/><text x="611.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.92%)</title><rect x="608" y="340" width="11" height="15" fill="rgb(223,126,54)"/><text x="611.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.92%)</title><rect x="608" y="356" width="11" height="15" fill="rgb(221,216,7)"/><text x="611.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.92%)</title><rect x="608" y="372" width="11" height="15" fill="rgb(237,124,42)"/><text x="611.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.92%)</title><rect x="608" y="388" width="11" height="15" fill="rgb(240,36,23)"/><text x="611.00" y="398.50"></text></g><g><title>0x7f4a94053e7a (libc-2.29.so) (1 samples, 0.46%)</title><rect x="613" y="404" width="6" height="15" fill="rgb(214,185,45)"/><text x="616.00" y="414.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.46%)</title><rect x="619" y="340" width="5" height="15" fill="rgb(216,3,33)"/><text x="622.00" y="350.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.92%)</title><rect x="624" y="388" width="11" height="15" fill="rgb(230,99,18)"/><text x="627.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.38%)</title><rect x="624" y="372" width="16" height="15" fill="rgb(209,190,20)"/><text x="627.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.46%)</title><rect x="635" y="388" width="5" height="15" fill="rgb(223,77,30)"/><text x="638.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (5 samples, 2.30%)</title><rect x="624" y="356" width="27" height="15" fill="rgb(251,203,19)"/><text x="627.00" y="366.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.92%)</title><rect x="640" y="372" width="11" height="15" fill="rgb(228,35,16)"/><text x="643.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.46%)</title><rect x="646" y="388" width="5" height="15" fill="rgb(208,18,34)"/><text x="649.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.46%)</title><rect x="646" y="404" width="5" height="15" fill="rgb(248,219,53)"/><text x="649.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.46%)</title><rect x="646" y="420" width="5" height="15" fill="rgb(207,127,31)"/><text x="649.00" y="430.50"></text></g><g><title>array_sum (methods.c) (11 samples, 5.07%)</title><rect x="602" y="260" width="60" height="15" fill="rgb(212,77,26)"/><text x="605.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (11 samples, 5.07%)</title><rect x="602" y="276" width="60" height="15" fill="rgb(218,188,47)"/><text x="605.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (10 samples, 4.61%)</title><rect x="608" y="292" width="54" height="15" fill="rgb(242,72,53)"/><text x="611.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 4.61%)</title><rect x="608" y="308" width="54" height="15" fill="rgb(230,188,7)"/><text x="611.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 3.69%)</title><rect x="619" y="324" width="43" height="15" fill="rgb(235,171,51)"/><text x="622.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 3.23%)</title><rect x="624" y="340" width="38" height="15" fill="rgb(240,110,43)"/><text x="627.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.92%)</title><rect x="651" y="356" width="11" height="15" fill="rgb(226,68,43)"/><text x="654.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="657" y="372" width="5" height="15" fill="rgb(221,93,10)"/><text x="660.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="657" y="388" width="5" height="15" fill="rgb(214,213,5)"/><text x="660.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="657" y="404" width="5" height="15" fill="rgb(230,64,12)"/><text x="660.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.92%)</title><rect x="667" y="276" width="11" height="15" fill="rgb(251,88,32)"/><text x="670.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.92%)</title><rect x="667" y="292" width="11" height="15" fill="rgb(245,210,13)"/><text x="670.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.92%)</title><rect x="667" y="308" width="11" height="15" fill="rgb(227,186,37)"/><text x="670.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.46%)</title><rect x="673" y="324" width="5" height="15" fill="rgb(232,90,46)"/><text x="676.00" y="334.50"></text></g><g><title>0x7f4a9411b130 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="673" y="340" width="5" height="15" fill="rgb(233,135,39)"/><text x="676.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.46%)</title><rect x="678" y="356" width="6" height="15" fill="rgb(221,207,25)"/><text x="681.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.46%)</title><rect x="678" y="372" width="6" height="15" fill="rgb(229,77,48)"/><text x="681.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.92%)</title><rect x="678" y="292" width="11" height="15" fill="rgb(212,188,51)"/><text x="681.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.92%)</title><rect x="678" y="308" width="11" height="15" fill="rgb(244,89,19)"/><text x="681.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.92%)</title><rect x="678" y="324" width="11" height="15" fill="rgb(206,24,15)"/><text x="681.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.92%)</title><rect x="678" y="340" width="11" height="15" fill="rgb(211,34,18)"/><text x="681.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.46%)</title><rect x="684" y="356" width="5" height="15" fill="rgb(209,98,7)"/><text x="687.00" y="366.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (88 samples, 40.55%)</title><rect x="222" y="68" width="478" height="15" fill="rgb(232,152,24)"/><text x="225.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverlibli..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (88 samples, 40.55%)</title><rect x="222" y="84" width="478" height="15" fill="rgb(212,173,42)"/><text x="225.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverlibl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (88 samples, 40.55%)</title><rect x="222" y="100" width="478" height="15" fill="rgb(215,17,35)"/><text x="225.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 40.55%)</title><rect x="222" y="116" width="478" height="15" fill="rgb(251,224,34)"/><text x="225.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 40.55%)</title><rect x="222" y="132" width="478" height="15" fill="rgb(229,68,51)"/><text x="225.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (88 samples, 40.55%)</title><rect x="222" y="148" width="478" height="15" fill="rgb(213,166,2)"/><text x="225.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (85 samples, 39.17%)</title><rect x="238" y="164" width="462" height="15" fill="rgb(216,34,13)"/><text x="241.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (79 samples, 36.41%)</title><rect x="271" y="180" width="429" height="15" fill="rgb(227,6,30)"/><text x="274.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (60 samples, 27.65%)</title><rect x="374" y="196" width="326" height="15" fill="rgb(241,123,52)"/><text x="377.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (54 samples, 24.88%)</title><rect x="406" y="212" width="294" height="15" fill="rgb(240,104,37)"/><text x="409.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (25 samples, 11.52%)</title><rect x="564" y="228" width="136" height="15" fill="rgb(248,24,12)"/><text x="567.00" y="238.50">_run (mlprodict/o..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (22 samples, 10.14%)</title><rect x="580" y="244" width="120" height="15" fill="rgb(213,130,47)"/><text x="583.00" y="254.50">norm_l1 (mlpro..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 3.23%)</title><rect x="662" y="260" width="38" height="15" fill="rgb(231,162,47)"/><text x="665.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.84%)</title><rect x="678" y="276" width="22" height="15" fill="rgb(248,49,34)"/><text x="681.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.92%)</title><rect x="689" y="292" width="11" height="15" fill="rgb(226,76,9)"/><text x="692.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="695" y="308" width="5" height="15" fill="rgb(242,217,20)"/><text x="698.00" y="318.50"></text></g><g><title>0x7f4a93260780 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.46%)</title><rect x="749" y="212" width="5" height="15" fill="rgb(253,102,31)"/><text x="752.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.46%)</title><rect x="760" y="244" width="5" height="15" fill="rgb(220,187,45)"/><text x="763.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.46%)</title><rect x="760" y="260" width="5" height="15" fill="rgb(205,12,12)"/><text x="763.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.46%)</title><rect x="760" y="276" width="5" height="15" fill="rgb(230,186,7)"/><text x="763.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.46%)</title><rect x="760" y="292" width="5" height="15" fill="rgb(251,192,19)"/><text x="763.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.46%)</title><rect x="760" y="308" width="5" height="15" fill="rgb(234,203,0)"/><text x="763.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.92%)</title><rect x="776" y="292" width="11" height="15" fill="rgb(212,93,21)"/><text x="779.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.92%)</title><rect x="776" y="308" width="11" height="15" fill="rgb(218,7,53)"/><text x="779.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.46%)</title><rect x="782" y="324" width="5" height="15" fill="rgb(247,190,45)"/><text x="785.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.46%)</title><rect x="782" y="340" width="5" height="15" fill="rgb(236,58,39)"/><text x="785.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.46%)</title><rect x="787" y="292" width="6" height="15" fill="rgb(245,192,8)"/><text x="790.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.46%)</title><rect x="787" y="308" width="6" height="15" fill="rgb(205,109,46)"/><text x="790.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 2.76%)</title><rect x="776" y="276" width="33" height="15" fill="rgb(240,102,27)"/><text x="779.00" y="286.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (3 samples, 1.38%)</title><rect x="793" y="292" width="16" height="15" fill="rgb(241,56,21)"/><text x="796.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.92%)</title><rect x="798" y="308" width="11" height="15" fill="rgb(236,168,37)"/><text x="801.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.92%)</title><rect x="798" y="324" width="11" height="15" fill="rgb(229,194,32)"/><text x="801.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.46%)</title><rect x="803" y="340" width="6" height="15" fill="rgb(211,129,5)"/><text x="806.00" y="350.50"></text></g><g><title>array_sum (methods.c) (13 samples, 5.99%)</title><rect x="744" y="180" width="70" height="15" fill="rgb(232,207,10)"/><text x="747.00" y="190.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 5.99%)</title><rect x="744" y="196" width="70" height="15" fill="rgb(221,145,11)"/><text x="747.00" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (11 samples, 5.07%)</title><rect x="754" y="212" width="60" height="15" fill="rgb(243,15,29)"/><text x="757.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 4.61%)</title><rect x="760" y="228" width="54" height="15" fill="rgb(251,204,5)"/><text x="763.00" y="238.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 4.15%)</title><rect x="765" y="244" width="49" height="15" fill="rgb(210,51,40)"/><text x="768.00" y="254.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 3.23%)</title><rect x="776" y="260" width="38" height="15" fill="rgb(254,146,2)"/><text x="779.00" y="270.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.46%)</title><rect x="809" y="276" width="5" height="15" fill="rgb(234,217,26)"/><text x="812.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="809" y="292" width="5" height="15" fill="rgb(240,131,28)"/><text x="812.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="809" y="308" width="5" height="15" fill="rgb(216,18,53)"/><text x="812.00" y="318.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="809" y="324" width="5" height="15" fill="rgb(205,68,46)"/><text x="812.00" y="334.50"></text></g><g><title>array_add (number.c) (1 samples, 0.46%)</title><rect x="820" y="196" width="5" height="15" fill="rgb(215,54,25)"/><text x="823.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.46%)</title><rect x="820" y="212" width="5" height="15" fill="rgb(245,127,25)"/><text x="823.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.46%)</title><rect x="820" y="228" width="5" height="15" fill="rgb(239,121,42)"/><text x="823.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.46%)</title><rect x="820" y="244" width="5" height="15" fill="rgb(245,181,43)"/><text x="823.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.46%)</title><rect x="820" y="260" width="5" height="15" fill="rgb(249,99,20)"/><text x="823.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.46%)</title><rect x="820" y="276" width="5" height="15" fill="rgb(248,54,29)"/><text x="823.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.38%)</title><rect x="841" y="212" width="17" height="15" fill="rgb(227,16,3)"/><text x="844.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.38%)</title><rect x="858" y="212" width="16" height="15" fill="rgb(235,188,9)"/><text x="861.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.46%)</title><rect x="896" y="228" width="5" height="15" fill="rgb(223,183,36)"/><text x="899.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 3.23%)</title><rect x="874" y="212" width="38" height="15" fill="rgb(208,71,42)"/><text x="877.00" y="222.50">_as..</text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.92%)</title><rect x="901" y="228" width="11" height="15" fill="rgb(208,200,7)"/><text x="904.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.92%)</title><rect x="912" y="212" width="11" height="15" fill="rgb(244,14,38)"/><text x="915.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 2.30%)</title><rect x="923" y="212" width="27" height="15" fill="rgb(209,158,39)"/><text x="926.00" y="222.50">_..</text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.46%)</title><rect x="945" y="228" width="5" height="15" fill="rgb(233,170,23)"/><text x="948.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.46%)</title><rect x="950" y="228" width="6" height="15" fill="rgb(222,215,0)"/><text x="953.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.92%)</title><rect x="950" y="212" width="11" height="15" fill="rgb(210,81,33)"/><text x="953.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.46%)</title><rect x="956" y="228" width="5" height="15" fill="rgb(205,177,40)"/><text x="959.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.46%)</title><rect x="956" y="244" width="5" height="15" fill="rgb(212,224,37)"/><text x="959.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (28 samples, 12.90%)</title><rect x="825" y="196" width="152" height="15" fill="rgb(247,77,23)"/><text x="828.00" y="206.50">check_array (sklear..</text></g><g><title>simplefilter (warnings.py) (3 samples, 1.38%)</title><rect x="961" y="212" width="16" height="15" fill="rgb(247,7,38)"/><text x="964.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.92%)</title><rect x="967" y="228" width="10" height="15" fill="rgb(231,221,21)"/><text x="970.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.46%)</title><rect x="1015" y="228" width="6" height="15" fill="rgb(243,227,54)"/><text x="1018.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (9 samples, 4.15%)</title><rect x="977" y="196" width="49" height="15" fill="rgb(211,215,22)"/><text x="980.00" y="206.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 2.76%)</title><rect x="994" y="212" width="32" height="15" fill="rgb(230,201,34)"/><text x="997.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.46%)</title><rect x="1021" y="228" width="5" height="15" fill="rgb(209,171,5)"/><text x="1024.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.46%)</title><rect x="1026" y="212" width="6" height="15" fill="rgb(237,60,30)"/><text x="1029.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.46%)</title><rect x="1032" y="260" width="5" height="15" fill="rgb(216,120,2)"/><text x="1035.00" y="270.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.46%)</title><rect x="1043" y="324" width="5" height="15" fill="rgb(250,206,43)"/><text x="1046.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.46%)</title><rect x="1048" y="324" width="6" height="15" fill="rgb(213,157,50)"/><text x="1051.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1048" y="340" width="6" height="15" fill="rgb(239,126,34)"/><text x="1051.00" y="350.50"></text></g><g><title>0x7f4a93ff59f1 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1048" y="356" width="6" height="15" fill="rgb(249,94,6)"/><text x="1051.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="1054" y="324" width="5" height="15" fill="rgb(207,223,19)"/><text x="1057.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.46%)</title><rect x="1059" y="324" width="5" height="15" fill="rgb(234,214,9)"/><text x="1062.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 2.30%)</title><rect x="1043" y="292" width="27" height="15" fill="rgb(208,173,1)"/><text x="1046.00" y="302.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 2.30%)</title><rect x="1043" y="308" width="27" height="15" fill="rgb(249,192,12)"/><text x="1046.00" y="318.50">r..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.46%)</title><rect x="1064" y="324" width="6" height="15" fill="rgb(212,179,32)"/><text x="1067.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 3.23%)</title><rect x="1043" y="276" width="38" height="15" fill="rgb(240,183,42)"/><text x="1046.00" y="286.50">npy..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.92%)</title><rect x="1070" y="292" width="11" height="15" fill="rgb(212,95,18)"/><text x="1073.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.92%)</title><rect x="1070" y="308" width="11" height="15" fill="rgb(222,0,25)"/><text x="1073.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.92%)</title><rect x="1070" y="324" width="11" height="15" fill="rgb(252,35,51)"/><text x="1073.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 0.92%)</title><rect x="1070" y="340" width="11" height="15" fill="rgb(215,57,28)"/><text x="1073.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.92%)</title><rect x="1070" y="356" width="11" height="15" fill="rgb(225,64,16)"/><text x="1073.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1075" y="372" width="6" height="15" fill="rgb(235,180,19)"/><text x="1078.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 4.15%)</title><rect x="1037" y="260" width="49" height="15" fill="rgb(214,18,37)"/><text x="1040.00" y="270.50">NpyI..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.46%)</title><rect x="1081" y="276" width="5" height="15" fill="rgb(251,219,38)"/><text x="1084.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.46%)</title><rect x="1081" y="292" width="5" height="15" fill="rgb(235,169,46)"/><text x="1084.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (51 samples, 23.50%)</title><rect x="814" y="180" width="278" height="15" fill="rgb(241,39,1)"/><text x="817.00" y="190.50">decision_function (sklearn/linear_mod..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (12 samples, 5.53%)</title><rect x="1026" y="196" width="66" height="15" fill="rgb(211,66,26)"/><text x="1029.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 5.07%)</title><rect x="1032" y="212" width="60" height="15" fill="rgb(254,105,32)"/><text x="1035.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 5.07%)</title><rect x="1032" y="228" width="60" height="15" fill="rgb(215,6,43)"/><text x="1035.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (11 samples, 5.07%)</title><rect x="1032" y="244" width="60" height="15" fill="rgb(254,49,5)"/><text x="1035.00" y="254.50">PyUFun..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.46%)</title><rect x="1086" y="260" width="6" height="15" fill="rgb(213,200,52)"/><text x="1089.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.46%)</title><rect x="1086" y="276" width="6" height="15" fill="rgb(250,8,28)"/><text x="1089.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.46%)</title><rect x="1086" y="292" width="6" height="15" fill="rgb(213,163,10)"/><text x="1089.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.46%)</title><rect x="1086" y="308" width="6" height="15" fill="rgb(205,84,23)"/><text x="1089.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.46%)</title><rect x="1097" y="196" width="5" height="15" fill="rgb(219,153,22)"/><text x="1100.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.46%)</title><rect x="1097" y="212" width="5" height="15" fill="rgb(223,97,14)"/><text x="1100.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.46%)</title><rect x="1097" y="228" width="5" height="15" fill="rgb(231,121,51)"/><text x="1100.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.46%)</title><rect x="1097" y="244" width="5" height="15" fill="rgb(220,23,15)"/><text x="1100.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.46%)</title><rect x="1102" y="212" width="6" height="15" fill="rgb(205,129,16)"/><text x="1105.00" y="222.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1108" y="260" width="5" height="15" fill="rgb(211,82,35)"/><text x="1111.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1108" y="276" width="5" height="15" fill="rgb(217,104,25)"/><text x="1111.00" y="286.50"></text></g><g><title>0x7f4a93ff57c2 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1108" y="292" width="5" height="15" fill="rgb(214,64,26)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f4a93ff5760 (libc-2.29.so) (1 samples, 0.46%)</title><rect x="1108" y="308" width="5" height="15" fill="rgb(235,52,41)"/><text x="1111.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.92%)</title><rect x="1108" y="228" width="11" height="15" fill="rgb(205,144,10)"/><text x="1111.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.92%)</title><rect x="1108" y="244" width="11" height="15" fill="rgb(236,198,25)"/><text x="1111.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1113" y="260" width="6" height="15" fill="rgb(226,186,19)"/><text x="1116.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1113" y="276" width="6" height="15" fill="rgb(226,106,21)"/><text x="1116.00" y="286.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.46%)</title><rect x="1113" y="292" width="6" height="15" fill="rgb(252,148,23)"/><text x="1116.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 1.38%)</title><rect x="1108" y="212" width="16" height="15" fill="rgb(215,191,22)"/><text x="1111.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.46%)</title><rect x="1119" y="228" width="5" height="15" fill="rgb(242,108,25)"/><text x="1122.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.46%)</title><rect x="1119" y="244" width="5" height="15" fill="rgb(252,40,32)"/><text x="1122.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.46%)</title><rect x="1119" y="260" width="5" height="15" fill="rgb(230,111,32)"/><text x="1122.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1119" y="276" width="5" height="15" fill="rgb(247,31,52)"/><text x="1122.00" y="286.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1119" y="292" width="5" height="15" fill="rgb(205,48,30)"/><text x="1122.00" y="302.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.46%)</title><rect x="1119" y="308" width="5" height="15" fill="rgb(227,65,11)"/><text x="1122.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 2.30%)</title><rect x="1102" y="196" width="28" height="15" fill="rgb(211,197,32)"/><text x="1105.00" y="206.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.46%)</title><rect x="1124" y="212" width="6" height="15" fill="rgb(242,141,13)"/><text x="1127.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (78 samples, 35.94%)</title><rect x="711" y="164" width="424" height="15" fill="rgb(206,26,15)"/><text x="714.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 3.69%)</title><rect x="1092" y="180" width="43" height="15" fill="rgb(230,218,22)"/><text x="1095.00" y="190.50">ufun..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.46%)</title><rect x="1130" y="196" width="5" height="15" fill="rgb(239,38,14)"/><text x="1133.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.46%)</title><rect x="1162" y="196" width="6" height="15" fill="rgb(238,183,8)"/><text x="1165.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 3.23%)</title><rect x="1146" y="180" width="38" height="15" fill="rgb(243,58,6)"/><text x="1149.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.38%)</title><rect x="1168" y="196" width="16" height="15" fill="rgb(253,204,42)"/><text x="1171.00" y="206.50"></text></g><g><title>all (217 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,189,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (217 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(217,198,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (90 samples, 41.47%)</title><rect x="700" y="68" width="490" height="15" fill="rgb(251,227,19)"/><text x="703.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinea..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (90 samples, 41.47%)</title><rect x="700" y="84" width="490" height="15" fill="rgb(240,59,50)"/><text x="703.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblin..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_onnx_1_50_12_float_.py) (90 samples, 41.47%)</title><rect x="700" y="100" width="490" height="15" fill="rgb(233,213,27)"/><text x="703.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_on..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (89 samples, 41.01%)</title><rect x="706" y="116" width="484" height="15" fill="rgb(218,153,15)"/><text x="709.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (89 samples, 41.01%)</title><rect x="706" y="132" width="484" height="15" fill="rgb(242,52,1)"/><text x="709.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (89 samples, 41.01%)</title><rect x="706" y="148" width="484" height="15" fill="rgb(229,201,1)"/><text x="709.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 4.61%)</title><rect x="1135" y="164" width="55" height="15" fill="rgb(227,223,13)"/><text x="1138.00" y="174.50">check..</text></g><g><title>isclass (inspect.py) (1 samples, 0.46%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(228,206,14)"/><text x="1187.00" y="190.50"></text></g></g></svg>