<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="900" width="2" height="15" fill="rgb(233,28,36)"/><text x="15.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(241,210,49)"/><text x="15.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.19%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(235,68,9)"/><text x="15.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.19%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(211,219,29)"/><text x="15.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(233,16,17)"/><text x="15.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="14" y="980" width="4" height="15" fill="rgb(208,55,39)"/><text x="17.00" y="990.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.38%)</title><rect x="14" y="996" width="4" height="15" fill="rgb(208,170,3)"/><text x="17.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(251,159,19)"/><text x="19.00" y="1022.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (5 samples, 0.94%)</title><rect x="10" y="868" width="11" height="15" fill="rgb(208,130,30)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (4 samples, 0.75%)</title><rect x="12" y="884" width="9" height="15" fill="rgb(242,79,52)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.57%)</title><rect x="14" y="900" width="7" height="15" fill="rgb(235,208,32)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.57%)</title><rect x="14" y="916" width="7" height="15" fill="rgb(239,81,26)"/><text x="17.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="14" y="932" width="7" height="15" fill="rgb(216,33,49)"/><text x="17.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="14" y="948" width="7" height="15" fill="rgb(239,59,37)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="14" y="964" width="7" height="15" fill="rgb(237,171,48)"/><text x="17.00" y="974.50"></text></g><g><title>_relax_case (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(220,151,22)"/><text x="21.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 1.32%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(233,40,24)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 1.32%)</title><rect x="10" y="852" width="15" height="15" fill="rgb(230,227,21)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(246,160,49)"/><text x="24.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(223,160,50)"/><text x="24.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.38%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(226,169,36)"/><text x="24.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (2 samples, 0.38%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(241,110,19)"/><text x="24.00" y="926.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.38%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(233,50,14)"/><text x="24.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (2 samples, 0.38%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(238,173,32)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="25" y="836" width="5" height="15" fill="rgb(242,25,1)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(253,213,0)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(236,34,36)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(228,139,14)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(236,74,25)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (2 samples, 0.38%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(225,163,49)"/><text x="28.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (2 samples, 0.38%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(221,92,11)"/><text x="28.00" y="942.50"></text></g><g><title>compile (re.py) (2 samples, 0.38%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(242,65,29)"/><text x="28.00" y="958.50"></text></g><g><title>_compile (re.py) (2 samples, 0.38%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(244,74,19)"/><text x="28.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.38%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(254,82,29)"/><text x="28.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(245,55,9)"/><text x="28.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(217,194,38)"/><text x="28.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1028" width="5" height="15" fill="rgb(212,197,0)"/><text x="28.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1044" width="5" height="15" fill="rgb(219,220,1)"/><text x="28.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1060" width="5" height="15" fill="rgb(252,0,8)"/><text x="28.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1076" width="5" height="15" fill="rgb(212,106,10)"/><text x="28.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1092" width="5" height="15" fill="rgb(218,163,26)"/><text x="28.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1108" width="5" height="15" fill="rgb(225,188,35)"/><text x="28.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.38%)</title><rect x="25" y="1124" width="5" height="15" fill="rgb(248,121,45)"/><text x="28.00" y="1134.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.19%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(235,72,38)"/><text x="30.00" y="1150.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.19%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(207,98,31)"/><text x="30.00" y="1166.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.19%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(219,177,9)"/><text x="30.00" y="1182.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (10 samples, 1.89%)</title><rect x="10" y="292" width="22" height="15" fill="rgb(241,55,37)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="308" width="22" height="15" fill="rgb(227,126,10)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="324" width="22" height="15" fill="rgb(222,123,30)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="340" width="22" height="15" fill="rgb(221,104,25)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="356" width="22" height="15" fill="rgb(216,145,26)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="372" width="22" height="15" fill="rgb(247,37,53)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (10 samples, 1.89%)</title><rect x="10" y="388" width="22" height="15" fill="rgb(229,88,39)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="404" width="22" height="15" fill="rgb(216,105,14)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="420" width="22" height="15" fill="rgb(222,148,11)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="436" width="22" height="15" fill="rgb(210,183,15)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="452" width="22" height="15" fill="rgb(235,135,28)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="468" width="22" height="15" fill="rgb(207,185,23)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (10 samples, 1.89%)</title><rect x="10" y="484" width="22" height="15" fill="rgb(233,67,46)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="500" width="22" height="15" fill="rgb(207,150,29)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="516" width="22" height="15" fill="rgb(206,34,49)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="532" width="22" height="15" fill="rgb(223,147,34)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="548" width="22" height="15" fill="rgb(228,120,13)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="564" width="22" height="15" fill="rgb(234,49,8)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (10 samples, 1.89%)</title><rect x="10" y="580" width="22" height="15" fill="rgb(205,80,14)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="596" width="22" height="15" fill="rgb(216,14,29)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="612" width="22" height="15" fill="rgb(243,68,48)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="628" width="22" height="15" fill="rgb(218,9,40)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="644" width="22" height="15" fill="rgb(229,176,30)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="660" width="22" height="15" fill="rgb(240,137,27)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="676" width="22" height="15" fill="rgb(210,42,21)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="692" width="22" height="15" fill="rgb(250,48,54)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="708" width="22" height="15" fill="rgb(226,86,10)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (10 samples, 1.89%)</title><rect x="10" y="724" width="22" height="15" fill="rgb(210,181,51)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="740" width="22" height="15" fill="rgb(251,135,54)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="756" width="22" height="15" fill="rgb(236,109,23)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="772" width="22" height="15" fill="rgb(225,66,50)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.89%)</title><rect x="10" y="788" width="22" height="15" fill="rgb(245,211,44)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.89%)</title><rect x="10" y="804" width="22" height="15" fill="rgb(231,208,30)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (10 samples, 1.89%)</title><rect x="10" y="820" width="22" height="15" fill="rgb(251,10,6)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(232,226,41)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(218,198,14)"/><text x="33.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(248,37,46)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(217,169,23)"/><text x="33.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(231,158,35)"/><text x="33.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(250,139,11)"/><text x="33.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.19%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(248,63,31)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(225,8,7)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(210,207,43)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(245,107,51)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(252,108,5)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(249,45,54)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/six.py) (1 samples, 0.19%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(250,69,19)"/><text x="33.00" y="1038.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="580" width="2" height="15" fill="rgb(207,41,21)"/><text x="35.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="596" width="2" height="15" fill="rgb(206,229,28)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="612" width="2" height="15" fill="rgb(229,157,48)"/><text x="35.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="628" width="2" height="15" fill="rgb(247,102,33)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="644" width="2" height="15" fill="rgb(211,146,31)"/><text x="35.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="660" width="2" height="15" fill="rgb(238,152,6)"/><text x="35.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="676" width="2" height="15" fill="rgb(254,165,43)"/><text x="35.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="692" width="2" height="15" fill="rgb(254,215,37)"/><text x="35.00" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py) (1 samples, 0.19%)</title><rect x="32" y="708" width="2" height="15" fill="rgb(252,179,46)"/><text x="35.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="724" width="2" height="15" fill="rgb(207,97,6)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="740" width="2" height="15" fill="rgb(247,10,28)"/><text x="35.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="756" width="2" height="15" fill="rgb(246,63,52)"/><text x="35.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="772" width="2" height="15" fill="rgb(239,143,34)"/><text x="35.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="788" width="2" height="15" fill="rgb(253,10,14)"/><text x="35.00" y="798.50"></text></g><g><title>0x7fcac2341e16 (?) (1 samples, 0.19%)</title><rect x="32" y="804" width="2" height="15" fill="rgb(232,1,45)"/><text x="35.00" y="814.50"></text></g><g><title>0x7fcac2344d6a (?) (1 samples, 0.19%)</title><rect x="32" y="820" width="2" height="15" fill="rgb(243,99,43)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="836" width="2" height="15" fill="rgb(211,165,33)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="852" width="2" height="15" fill="rgb(209,0,37)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="868" width="2" height="15" fill="rgb(206,66,53)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="884" width="2" height="15" fill="rgb(249,48,20)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="900" width="2" height="15" fill="rgb(246,142,34)"/><text x="35.00" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/_validation.py) (1 samples, 0.19%)</title><rect x="32" y="916" width="2" height="15" fill="rgb(233,162,52)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(221,2,46)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(251,118,12)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="964" width="2" height="15" fill="rgb(213,179,33)"/><text x="35.00" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="980" width="2" height="15" fill="rgb(223,34,49)"/><text x="35.00" y="990.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="32" y="996" width="2" height="15" fill="rgb(242,178,1)"/><text x="35.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="32" y="1012" width="2" height="15" fill="rgb(210,193,9)"/><text x="35.00" y="1022.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1028" width="2" height="15" fill="rgb(218,171,35)"/><text x="35.00" y="1038.50"></text></g><g><title>0x7fcad563d995 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1044" width="2" height="15" fill="rgb(215,84,34)"/><text x="35.00" y="1054.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1060" width="2" height="15" fill="rgb(251,111,34)"/><text x="35.00" y="1070.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1076" width="2" height="15" fill="rgb(211,74,32)"/><text x="35.00" y="1086.50"></text></g><g><title>0x7fcad563d258 (libdl-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1092" width="2" height="15" fill="rgb(233,91,19)"/><text x="35.00" y="1102.50"></text></g><g><title>0x7fcad568ad7a (ld-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1108" width="2" height="15" fill="rgb(209,20,13)"/><text x="35.00" y="1118.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1124" width="2" height="15" fill="rgb(237,158,19)"/><text x="35.00" y="1134.50"></text></g><g><title>0x7fcad568b345 (ld-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1140" width="2" height="15" fill="rgb(237,81,22)"/><text x="35.00" y="1150.50"></text></g><g><title>0x7fcad5683fec (ld-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1156" width="2" height="15" fill="rgb(219,124,38)"/><text x="35.00" y="1166.50"></text></g><g><title>0x7fcad56824df (ld-2.29.so) (1 samples, 0.19%)</title><rect x="32" y="1172" width="2" height="15" fill="rgb(215,175,8)"/><text x="35.00" y="1182.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.19%)</title><rect x="34" y="900" width="2" height="15" fill="rgb(225,160,47)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="916" width="2" height="15" fill="rgb(223,126,19)"/><text x="37.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="932" width="2" height="15" fill="rgb(227,169,54)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="948" width="2" height="15" fill="rgb(242,7,8)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="964" width="2" height="15" fill="rgb(236,161,45)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(217,226,21)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="34" y="996" width="2" height="15" fill="rgb(208,59,27)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="34" y="1012" width="2" height="15" fill="rgb(223,144,45)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.19%)</title><rect x="34" y="1028" width="2" height="15" fill="rgb(254,40,16)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="34" y="1044" width="2" height="15" fill="rgb(209,136,29)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.19%)</title><rect x="34" y="1060" width="2" height="15" fill="rgb(251,122,34)"/><text x="37.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="32" y="500" width="6" height="15" fill="rgb(250,90,54)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="32" y="516" width="6" height="15" fill="rgb(254,121,2)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="32" y="532" width="6" height="15" fill="rgb(235,33,25)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.57%)</title><rect x="32" y="548" width="6" height="15" fill="rgb(244,49,22)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="32" y="564" width="6" height="15" fill="rgb(240,116,1)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.38%)</title><rect x="34" y="580" width="4" height="15" fill="rgb(245,20,11)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="596" width="4" height="15" fill="rgb(246,78,37)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="612" width="4" height="15" fill="rgb(215,22,10)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="628" width="4" height="15" fill="rgb(253,47,20)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="34" y="644" width="4" height="15" fill="rgb(221,51,33)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="660" width="4" height="15" fill="rgb(219,152,1)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.38%)</title><rect x="34" y="676" width="4" height="15" fill="rgb(213,45,35)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="692" width="4" height="15" fill="rgb(223,7,39)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="708" width="4" height="15" fill="rgb(208,28,24)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="724" width="4" height="15" fill="rgb(211,170,4)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="34" y="740" width="4" height="15" fill="rgb(235,185,35)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="756" width="4" height="15" fill="rgb(228,152,41)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.38%)</title><rect x="34" y="772" width="4" height="15" fill="rgb(213,21,48)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="788" width="4" height="15" fill="rgb(247,185,24)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(253,85,53)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(254,23,11)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(226,134,12)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(210,171,30)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(221,68,20)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(230,24,25)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py) (1 samples, 0.19%)</title><rect x="36" y="900" width="2" height="15" fill="rgb(242,76,0)"/><text x="39.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.19%)</title><rect x="36" y="916" width="2" height="15" fill="rgb(216,121,33)"/><text x="39.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.64%)</title><rect x="10" y="196" width="31" height="15" fill="rgb(232,190,29)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.64%)</title><rect x="10" y="212" width="31" height="15" fill="rgb(252,6,23)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.64%)</title><rect x="10" y="228" width="31" height="15" fill="rgb(221,81,51)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.64%)</title><rect x="10" y="244" width="31" height="15" fill="rgb(206,153,40)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.64%)</title><rect x="10" y="260" width="31" height="15" fill="rgb(207,10,13)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.64%)</title><rect x="10" y="276" width="31" height="15" fill="rgb(242,87,18)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.75%)</title><rect x="32" y="292" width="9" height="15" fill="rgb(229,82,16)"/><text x="35.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="308" width="9" height="15" fill="rgb(233,223,4)"/><text x="35.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="324" width="9" height="15" fill="rgb(253,176,32)"/><text x="35.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="340" width="9" height="15" fill="rgb(250,130,52)"/><text x="35.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.75%)</title><rect x="32" y="356" width="9" height="15" fill="rgb(205,132,41)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="372" width="9" height="15" fill="rgb(254,48,4)"/><text x="35.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.75%)</title><rect x="32" y="388" width="9" height="15" fill="rgb(219,163,43)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="404" width="9" height="15" fill="rgb(243,138,53)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="420" width="9" height="15" fill="rgb(246,56,30)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="436" width="9" height="15" fill="rgb(239,211,40)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.75%)</title><rect x="32" y="452" width="9" height="15" fill="rgb(235,194,15)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="32" y="468" width="9" height="15" fill="rgb(247,124,6)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.75%)</title><rect x="32" y="484" width="9" height="15" fill="rgb(206,107,38)"/><text x="35.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="500" width="3" height="15" fill="rgb(247,172,15)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="516" width="3" height="15" fill="rgb(250,134,4)"/><text x="41.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="532" width="3" height="15" fill="rgb(252,21,23)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="548" width="3" height="15" fill="rgb(221,209,7)"/><text x="41.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="564" width="3" height="15" fill="rgb(246,173,51)"/><text x="41.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="580" width="3" height="15" fill="rgb(214,173,4)"/><text x="41.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="596" width="3" height="15" fill="rgb(252,204,17)"/><text x="41.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.19%)</title><rect x="38" y="612" width="3" height="15" fill="rgb(237,66,4)"/><text x="41.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="628" width="3" height="15" fill="rgb(233,9,27)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="644" width="3" height="15" fill="rgb(249,174,38)"/><text x="41.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="660" width="3" height="15" fill="rgb(248,2,9)"/><text x="41.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="676" width="3" height="15" fill="rgb(242,36,15)"/><text x="41.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="692" width="3" height="15" fill="rgb(211,14,51)"/><text x="41.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.19%)</title><rect x="38" y="708" width="3" height="15" fill="rgb(220,14,21)"/><text x="41.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="724" width="3" height="15" fill="rgb(210,46,46)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="740" width="3" height="15" fill="rgb(222,185,18)"/><text x="41.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="756" width="3" height="15" fill="rgb(206,117,14)"/><text x="41.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="772" width="3" height="15" fill="rgb(210,164,3)"/><text x="41.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="788" width="3" height="15" fill="rgb(207,201,40)"/><text x="41.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.19%)</title><rect x="38" y="804" width="3" height="15" fill="rgb(219,120,52)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(241,70,11)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="836" width="3" height="15" fill="rgb(218,224,16)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="852" width="3" height="15" fill="rgb(239,170,25)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="868" width="3" height="15" fill="rgb(227,188,39)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="884" width="3" height="15" fill="rgb(235,159,8)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.19%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(209,187,40)"/><text x="41.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(231,212,12)"/><text x="41.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(225,18,15)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(229,27,3)"/><text x="41.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(245,0,5)"/><text x="41.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(242,17,31)"/><text x="41.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="996" width="3" height="15" fill="rgb(245,75,22)"/><text x="41.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="1012" width="3" height="15" fill="rgb(237,19,50)"/><text x="41.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.19%)</title><rect x="38" y="1028" width="3" height="15" fill="rgb(214,223,46)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="1044" width="3" height="15" fill="rgb(212,48,46)"/><text x="41.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="1060" width="3" height="15" fill="rgb(209,228,34)"/><text x="41.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="1076" width="3" height="15" fill="rgb(244,56,44)"/><text x="41.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="38" y="1092" width="3" height="15" fill="rgb(231,56,17)"/><text x="41.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="38" y="1108" width="3" height="15" fill="rgb(205,86,47)"/><text x="41.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.19%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(237,123,48)"/><text x="41.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="484" width="2" height="15" fill="rgb(206,154,31)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="500" width="2" height="15" fill="rgb(228,229,50)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="516" width="2" height="15" fill="rgb(236,82,42)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="532" width="2" height="15" fill="rgb(245,200,37)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="548" width="2" height="15" fill="rgb(250,178,19)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="564" width="2" height="15" fill="rgb(238,151,28)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="580" width="2" height="15" fill="rgb(228,182,2)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="596" width="2" height="15" fill="rgb(250,54,17)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="612" width="2" height="15" fill="rgb(254,50,15)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="628" width="2" height="15" fill="rgb(220,9,30)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="644" width="2" height="15" fill="rgb(207,153,51)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="660" width="2" height="15" fill="rgb(238,92,38)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.19%)</title><rect x="41" y="676" width="2" height="15" fill="rgb(248,29,5)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="692" width="2" height="15" fill="rgb(251,160,39)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="708" width="2" height="15" fill="rgb(240,49,0)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="724" width="2" height="15" fill="rgb(222,29,33)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="740" width="2" height="15" fill="rgb(225,216,6)"/><text x="44.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="756" width="2" height="15" fill="rgb(236,141,48)"/><text x="44.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="772" width="2" height="15" fill="rgb(237,46,13)"/><text x="44.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="788" width="2" height="15" fill="rgb(229,45,40)"/><text x="44.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="804" width="2" height="15" fill="rgb(222,145,14)"/><text x="44.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="820" width="2" height="15" fill="rgb(254,188,46)"/><text x="44.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="836" width="2" height="15" fill="rgb(207,13,50)"/><text x="44.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="852" width="2" height="15" fill="rgb(220,171,17)"/><text x="44.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.19%)</title><rect x="41" y="868" width="2" height="15" fill="rgb(253,152,16)"/><text x="44.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="884" width="2" height="15" fill="rgb(237,15,33)"/><text x="44.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="900" width="2" height="15" fill="rgb(206,68,9)"/><text x="44.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="916" width="2" height="15" fill="rgb(206,206,18)"/><text x="44.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="932" width="2" height="15" fill="rgb(210,215,26)"/><text x="44.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="948" width="2" height="15" fill="rgb(212,171,45)"/><text x="44.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="964" width="2" height="15" fill="rgb(222,114,34)"/><text x="44.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="980" width="2" height="15" fill="rgb(242,141,28)"/><text x="44.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="996" width="2" height="15" fill="rgb(207,98,29)"/><text x="44.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="1012" width="2" height="15" fill="rgb(222,64,44)"/><text x="44.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1028" width="2" height="15" fill="rgb(251,81,48)"/><text x="44.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1044" width="2" height="15" fill="rgb(234,64,28)"/><text x="44.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1060" width="2" height="15" fill="rgb(251,118,50)"/><text x="44.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1076" width="2" height="15" fill="rgb(234,81,30)"/><text x="44.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1092" width="2" height="15" fill="rgb(232,180,4)"/><text x="44.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.19%)</title><rect x="41" y="1108" width="2" height="15" fill="rgb(234,10,9)"/><text x="44.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1124" width="2" height="15" fill="rgb(246,95,14)"/><text x="44.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1140" width="2" height="15" fill="rgb(235,67,35)"/><text x="44.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1156" width="2" height="15" fill="rgb(241,103,5)"/><text x="44.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1172" width="2" height="15" fill="rgb(218,160,10)"/><text x="44.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1188" width="2" height="15" fill="rgb(209,24,16)"/><text x="44.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.19%)</title><rect x="41" y="1204" width="2" height="15" fill="rgb(218,208,22)"/><text x="44.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1220" width="2" height="15" fill="rgb(239,162,49)"/><text x="44.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1236" width="2" height="15" fill="rgb(236,149,7)"/><text x="44.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1252" width="2" height="15" fill="rgb(249,104,44)"/><text x="44.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1268" width="2" height="15" fill="rgb(246,12,35)"/><text x="44.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1284" width="2" height="15" fill="rgb(229,47,12)"/><text x="44.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.19%)</title><rect x="41" y="1300" width="2" height="15" fill="rgb(210,214,15)"/><text x="44.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1316" width="2" height="15" fill="rgb(207,92,53)"/><text x="44.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1332" width="2" height="15" fill="rgb(243,48,2)"/><text x="44.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1348" width="2" height="15" fill="rgb(226,72,20)"/><text x="44.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1364" width="2" height="15" fill="rgb(222,206,34)"/><text x="44.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1380" width="2" height="15" fill="rgb(210,26,10)"/><text x="44.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py) (1 samples, 0.19%)</title><rect x="41" y="1396" width="2" height="15" fill="rgb(222,33,8)"/><text x="44.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1412" width="2" height="15" fill="rgb(254,26,20)"/><text x="44.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1428" width="2" height="15" fill="rgb(231,74,38)"/><text x="44.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1444" width="2" height="15" fill="rgb(211,37,24)"/><text x="44.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="41" y="1460" width="2" height="15" fill="rgb(253,227,49)"/><text x="44.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1476" width="2" height="15" fill="rgb(246,13,33)"/><text x="44.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/covariance/__init__.py) (1 samples, 0.19%)</title><rect x="41" y="1492" width="2" height="15" fill="rgb(212,118,26)"/><text x="44.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1508" width="2" height="15" fill="rgb(223,226,20)"/><text x="44.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1524" width="2" height="15" fill="rgb(236,56,46)"/><text x="44.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1540" width="2" height="15" fill="rgb(239,219,5)"/><text x="44.00" y="1550.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="41" y="1556" width="2" height="15" fill="rgb(216,207,6)"/><text x="44.00" y="1566.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="41" y="340" width="4" height="15" fill="rgb(211,121,30)"/><text x="44.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="356" width="4" height="15" fill="rgb(249,125,8)"/><text x="44.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="372" width="4" height="15" fill="rgb(241,172,52)"/><text x="44.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="388" width="4" height="15" fill="rgb(222,162,50)"/><text x="44.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="41" y="404" width="4" height="15" fill="rgb(253,213,4)"/><text x="44.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="420" width="4" height="15" fill="rgb(205,214,4)"/><text x="44.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.38%)</title><rect x="41" y="436" width="4" height="15" fill="rgb(250,47,38)"/><text x="44.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="452" width="4" height="15" fill="rgb(228,109,0)"/><text x="44.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="41" y="468" width="4" height="15" fill="rgb(219,11,49)"/><text x="44.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="484" width="2" height="15" fill="rgb(225,91,16)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="500" width="2" height="15" fill="rgb(235,204,30)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="516" width="2" height="15" fill="rgb(242,11,15)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="43" y="532" width="2" height="15" fill="rgb(243,127,24)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="548" width="2" height="15" fill="rgb(226,111,23)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="564" width="2" height="15" fill="rgb(234,92,39)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="580" width="2" height="15" fill="rgb(243,122,51)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="596" width="2" height="15" fill="rgb(248,146,4)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="612" width="2" height="15" fill="rgb(205,173,11)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="628" width="2" height="15" fill="rgb(254,24,18)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="644" width="2" height="15" fill="rgb(240,211,37)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="660" width="2" height="15" fill="rgb(228,182,17)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="676" width="2" height="15" fill="rgb(210,209,52)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="692" width="2" height="15" fill="rgb(215,0,35)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="708" width="2" height="15" fill="rgb(230,3,33)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.19%)</title><rect x="43" y="724" width="2" height="15" fill="rgb(219,52,19)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="740" width="2" height="15" fill="rgb(241,93,28)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="756" width="2" height="15" fill="rgb(245,133,16)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="772" width="2" height="15" fill="rgb(209,79,9)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="788" width="2" height="15" fill="rgb(219,129,4)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="804" width="2" height="15" fill="rgb(227,75,17)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="820" width="2" height="15" fill="rgb(207,92,28)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="836" width="2" height="15" fill="rgb(231,227,47)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="852" width="2" height="15" fill="rgb(208,213,26)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="868" width="2" height="15" fill="rgb(229,56,11)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="884" width="2" height="15" fill="rgb(227,143,48)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="900" width="2" height="15" fill="rgb(246,58,1)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.19%)</title><rect x="43" y="916" width="2" height="15" fill="rgb(218,53,4)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="932" width="2" height="15" fill="rgb(241,87,43)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="948" width="2" height="15" fill="rgb(247,171,23)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="964" width="2" height="15" fill="rgb(227,74,5)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="980" width="2" height="15" fill="rgb(238,14,51)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="996" width="2" height="15" fill="rgb(220,149,24)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.19%)</title><rect x="43" y="1012" width="2" height="15" fill="rgb(216,194,50)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1028" width="2" height="15" fill="rgb(218,127,33)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1044" width="2" height="15" fill="rgb(225,71,21)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1060" width="2" height="15" fill="rgb(252,33,40)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1076" width="2" height="15" fill="rgb(242,80,47)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1092" width="2" height="15" fill="rgb(227,27,27)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.19%)</title><rect x="43" y="1108" width="2" height="15" fill="rgb(245,48,29)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1124" width="2" height="15" fill="rgb(217,61,1)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1140" width="2" height="15" fill="rgb(208,36,29)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1156" width="2" height="15" fill="rgb(244,127,3)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1172" width="2" height="15" fill="rgb(231,169,54)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1188" width="2" height="15" fill="rgb(232,228,35)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="1204" width="2" height="15" fill="rgb(238,4,9)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1220" width="2" height="15" fill="rgb(234,9,40)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1236" width="2" height="15" fill="rgb(219,13,11)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1252" width="2" height="15" fill="rgb(244,50,33)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1268" width="2" height="15" fill="rgb(238,76,13)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1284" width="2" height="15" fill="rgb(251,100,3)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.19%)</title><rect x="43" y="1300" width="2" height="15" fill="rgb(242,97,20)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1316" width="2" height="15" fill="rgb(229,222,12)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1332" width="2" height="15" fill="rgb(245,144,25)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1348" width="2" height="15" fill="rgb(210,47,16)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1364" width="2" height="15" fill="rgb(244,0,33)"/><text x="46.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1380" width="2" height="15" fill="rgb(239,44,15)"/><text x="46.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.19%)</title><rect x="43" y="1396" width="2" height="15" fill="rgb(217,8,43)"/><text x="46.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1412" width="2" height="15" fill="rgb(245,29,6)"/><text x="46.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1428" width="2" height="15" fill="rgb(250,224,12)"/><text x="46.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1444" width="2" height="15" fill="rgb(234,107,32)"/><text x="46.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1460" width="2" height="15" fill="rgb(232,153,21)"/><text x="46.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1476" width="2" height="15" fill="rgb(248,130,33)"/><text x="46.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.19%)</title><rect x="43" y="1492" width="2" height="15" fill="rgb(233,60,42)"/><text x="46.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1508" width="2" height="15" fill="rgb(209,92,0)"/><text x="46.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1524" width="2" height="15" fill="rgb(251,211,51)"/><text x="46.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1540" width="2" height="15" fill="rgb(205,192,31)"/><text x="46.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1556" width="2" height="15" fill="rgb(226,223,34)"/><text x="46.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1572" width="2" height="15" fill="rgb(239,170,2)"/><text x="46.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.19%)</title><rect x="43" y="1588" width="2" height="15" fill="rgb(229,134,13)"/><text x="46.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1604" width="2" height="15" fill="rgb(228,92,1)"/><text x="46.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1620" width="2" height="15" fill="rgb(220,203,43)"/><text x="46.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1636" width="2" height="15" fill="rgb(240,106,46)"/><text x="46.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1652" width="2" height="15" fill="rgb(234,199,6)"/><text x="46.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1668" width="2" height="15" fill="rgb(244,204,41)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.19%)</title><rect x="43" y="1684" width="2" height="15" fill="rgb(225,189,29)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1700" width="2" height="15" fill="rgb(211,20,26)"/><text x="46.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1716" width="2" height="15" fill="rgb(221,168,31)"/><text x="46.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1732" width="2" height="15" fill="rgb(246,184,27)"/><text x="46.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1748" width="2" height="15" fill="rgb(215,144,3)"/><text x="46.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1764" width="2" height="15" fill="rgb(209,17,24)"/><text x="46.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.19%)</title><rect x="43" y="1780" width="2" height="15" fill="rgb(246,125,16)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1796" width="2" height="15" fill="rgb(222,48,20)"/><text x="46.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1812" width="2" height="15" fill="rgb(251,198,16)"/><text x="46.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1828" width="2" height="15" fill="rgb(246,60,6)"/><text x="46.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="43" y="1844" width="2" height="15" fill="rgb(240,162,31)"/><text x="46.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="43" y="1860" width="2" height="15" fill="rgb(233,65,24)"/><text x="46.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.19%)</title><rect x="43" y="1876" width="2" height="15" fill="rgb(205,27,38)"/><text x="46.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.19%)</title><rect x="43" y="1892" width="2" height="15" fill="rgb(211,135,18)"/><text x="46.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.19%)</title><rect x="43" y="1908" width="2" height="15" fill="rgb(241,175,17)"/><text x="46.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.19%)</title><rect x="43" y="1924" width="2" height="15" fill="rgb(238,132,21)"/><text x="46.00" y="1934.50"></text></g><g><title>getdoc (inspect.py) (1 samples, 0.19%)</title><rect x="43" y="1940" width="2" height="15" fill="rgb(223,201,4)"/><text x="46.00" y="1950.50"></text></g><g><title>cleandoc (inspect.py) (1 samples, 0.19%)</title><rect x="43" y="1956" width="2" height="15" fill="rgb(218,78,36)"/><text x="46.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.38%)</title><rect x="45" y="580" width="5" height="15" fill="rgb(235,192,51)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="45" y="596" width="5" height="15" fill="rgb(215,65,47)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="45" y="612" width="5" height="15" fill="rgb(244,86,31)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="45" y="628" width="5" height="15" fill="rgb(228,80,2)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="45" y="644" width="5" height="15" fill="rgb(238,167,14)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="45" y="660" width="5" height="15" fill="rgb(217,153,26)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (2 samples, 0.38%)</title><rect x="45" y="676" width="5" height="15" fill="rgb(215,0,4)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="47" y="692" width="3" height="15" fill="rgb(227,229,49)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="47" y="708" width="3" height="15" fill="rgb(229,126,51)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="47" y="724" width="3" height="15" fill="rgb(211,220,32)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="47" y="740" width="3" height="15" fill="rgb(240,121,23)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="47" y="756" width="3" height="15" fill="rgb(246,168,0)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.19%)</title><rect x="47" y="772" width="3" height="15" fill="rgb(211,137,24)"/><text x="50.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.19%)</title><rect x="47" y="788" width="3" height="15" fill="rgb(207,2,15)"/><text x="50.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.19%)</title><rect x="47" y="804" width="3" height="15" fill="rgb(238,210,46)"/><text x="50.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.19%)</title><rect x="47" y="820" width="3" height="15" fill="rgb(225,178,40)"/><text x="50.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="836" width="3" height="15" fill="rgb(224,192,49)"/><text x="50.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="852" width="3" height="15" fill="rgb(235,115,9)"/><text x="50.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="868" width="3" height="15" fill="rgb(207,217,10)"/><text x="50.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="884" width="3" height="15" fill="rgb(208,206,37)"/><text x="50.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="900" width="3" height="15" fill="rgb(240,227,36)"/><text x="50.00" y="910.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="916" width="3" height="15" fill="rgb(245,40,1)"/><text x="50.00" y="926.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.19%)</title><rect x="47" y="932" width="3" height="15" fill="rgb(214,35,47)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="788" width="2" height="15" fill="rgb(251,114,40)"/><text x="53.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="804" width="2" height="15" fill="rgb(245,199,49)"/><text x="53.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="820" width="2" height="15" fill="rgb(251,27,27)"/><text x="53.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="836" width="2" height="15" fill="rgb(213,136,15)"/><text x="53.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="852" width="2" height="15" fill="rgb(236,47,48)"/><text x="53.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.19%)</title><rect x="50" y="868" width="2" height="15" fill="rgb(219,161,40)"/><text x="53.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="884" width="2" height="15" fill="rgb(245,113,21)"/><text x="53.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="900" width="2" height="15" fill="rgb(249,53,29)"/><text x="53.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="916" width="2" height="15" fill="rgb(218,146,9)"/><text x="53.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="932" width="2" height="15" fill="rgb(242,124,32)"/><text x="53.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="948" width="2" height="15" fill="rgb(239,189,20)"/><text x="53.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.19%)</title><rect x="50" y="964" width="2" height="15" fill="rgb(231,27,25)"/><text x="53.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="980" width="2" height="15" fill="rgb(240,7,46)"/><text x="53.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="996" width="2" height="15" fill="rgb(208,140,7)"/><text x="53.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1012" width="2" height="15" fill="rgb(254,42,19)"/><text x="53.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="1028" width="2" height="15" fill="rgb(206,117,44)"/><text x="53.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1044" width="2" height="15" fill="rgb(211,69,47)"/><text x="53.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.19%)</title><rect x="50" y="1060" width="2" height="15" fill="rgb(218,162,42)"/><text x="53.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1076" width="2" height="15" fill="rgb(233,178,35)"/><text x="53.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1092" width="2" height="15" fill="rgb(208,52,47)"/><text x="53.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1108" width="2" height="15" fill="rgb(210,159,21)"/><text x="53.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1124" width="2" height="15" fill="rgb(216,182,45)"/><text x="53.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1140" width="2" height="15" fill="rgb(213,153,50)"/><text x="53.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1156" width="2" height="15" fill="rgb(232,145,8)"/><text x="53.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="1172" width="2" height="15" fill="rgb(252,83,42)"/><text x="53.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1188" width="2" height="15" fill="rgb(214,199,8)"/><text x="53.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.19%)</title><rect x="50" y="1204" width="2" height="15" fill="rgb(234,8,44)"/><text x="53.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1220" width="2" height="15" fill="rgb(245,65,37)"/><text x="53.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1236" width="2" height="15" fill="rgb(209,115,18)"/><text x="53.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1252" width="2" height="15" fill="rgb(210,85,3)"/><text x="53.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="1268" width="2" height="15" fill="rgb(209,53,9)"/><text x="53.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1284" width="2" height="15" fill="rgb(251,152,37)"/><text x="53.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.19%)</title><rect x="50" y="1300" width="2" height="15" fill="rgb(226,56,0)"/><text x="53.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1316" width="2" height="15" fill="rgb(215,78,43)"/><text x="53.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1332" width="2" height="15" fill="rgb(229,75,19)"/><text x="53.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1348" width="2" height="15" fill="rgb(215,176,17)"/><text x="53.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="50" y="1364" width="2" height="15" fill="rgb(242,206,4)"/><text x="53.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="50" y="1380" width="2" height="15" fill="rgb(226,76,5)"/><text x="53.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.19%)</title><rect x="50" y="1396" width="2" height="15" fill="rgb(254,41,2)"/><text x="53.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.19%)</title><rect x="50" y="1412" width="2" height="15" fill="rgb(249,95,4)"/><text x="53.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.19%)</title><rect x="50" y="1428" width="2" height="15" fill="rgb(220,122,30)"/><text x="53.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.19%)</title><rect x="50" y="1444" width="2" height="15" fill="rgb(239,153,41)"/><text x="53.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="50" y="1460" width="2" height="15" fill="rgb(225,45,29)"/><text x="53.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="50" y="1476" width="2" height="15" fill="rgb(222,11,34)"/><text x="53.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="50" y="1492" width="2" height="15" fill="rgb(209,1,8)"/><text x="53.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.19%)</title><rect x="50" y="1508" width="2" height="15" fill="rgb(250,141,47)"/><text x="53.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.19%)</title><rect x="50" y="1524" width="2" height="15" fill="rgb(223,214,11)"/><text x="53.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.13%)</title><rect x="41" y="244" width="13" height="15" fill="rgb(205,206,23)"/><text x="44.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.13%)</title><rect x="41" y="260" width="13" height="15" fill="rgb(231,101,8)"/><text x="44.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.13%)</title><rect x="41" y="276" width="13" height="15" fill="rgb(251,158,44)"/><text x="44.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.13%)</title><rect x="41" y="292" width="13" height="15" fill="rgb(227,94,39)"/><text x="44.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.13%)</title><rect x="41" y="308" width="13" height="15" fill="rgb(207,168,28)"/><text x="44.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.13%)</title><rect x="41" y="324" width="13" height="15" fill="rgb(207,28,31)"/><text x="44.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 0.75%)</title><rect x="45" y="340" width="9" height="15" fill="rgb(207,46,48)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="356" width="9" height="15" fill="rgb(207,212,27)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="372" width="9" height="15" fill="rgb(214,197,32)"/><text x="48.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="388" width="9" height="15" fill="rgb(243,216,39)"/><text x="48.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="404" width="9" height="15" fill="rgb(211,192,43)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="420" width="9" height="15" fill="rgb(242,100,4)"/><text x="48.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="436" width="9" height="15" fill="rgb(231,94,24)"/><text x="48.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.75%)</title><rect x="45" y="452" width="9" height="15" fill="rgb(211,196,35)"/><text x="48.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="468" width="9" height="15" fill="rgb(252,199,19)"/><text x="48.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 0.75%)</title><rect x="45" y="484" width="9" height="15" fill="rgb(212,46,6)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="500" width="9" height="15" fill="rgb(253,48,41)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="516" width="9" height="15" fill="rgb(248,169,15)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="532" width="9" height="15" fill="rgb(254,108,34)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.75%)</title><rect x="45" y="548" width="9" height="15" fill="rgb(233,175,3)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="45" y="564" width="9" height="15" fill="rgb(247,203,6)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.38%)</title><rect x="50" y="580" width="4" height="15" fill="rgb(229,196,51)"/><text x="53.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="596" width="4" height="15" fill="rgb(250,82,29)"/><text x="53.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="612" width="4" height="15" fill="rgb(230,216,41)"/><text x="53.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="628" width="4" height="15" fill="rgb(230,147,47)"/><text x="53.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="50" y="644" width="4" height="15" fill="rgb(216,119,0)"/><text x="53.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="660" width="4" height="15" fill="rgb(215,161,5)"/><text x="53.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.38%)</title><rect x="50" y="676" width="4" height="15" fill="rgb(216,118,17)"/><text x="53.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="692" width="4" height="15" fill="rgb(214,130,34)"/><text x="53.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="708" width="4" height="15" fill="rgb(249,19,2)"/><text x="53.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="724" width="4" height="15" fill="rgb(253,201,52)"/><text x="53.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.38%)</title><rect x="50" y="740" width="4" height="15" fill="rgb(217,72,10)"/><text x="53.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="50" y="756" width="4" height="15" fill="rgb(229,42,35)"/><text x="53.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.38%)</title><rect x="50" y="772" width="4" height="15" fill="rgb(253,62,16)"/><text x="53.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="788" width="2" height="15" fill="rgb(219,110,50)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="804" width="2" height="15" fill="rgb(226,219,45)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="820" width="2" height="15" fill="rgb(227,45,40)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="836" width="2" height="15" fill="rgb(228,82,37)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="852" width="2" height="15" fill="rgb(250,15,0)"/><text x="55.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="868" width="2" height="15" fill="rgb(218,60,7)"/><text x="55.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="884" width="2" height="15" fill="rgb(249,135,14)"/><text x="55.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.19%)</title><rect x="52" y="900" width="2" height="15" fill="rgb(221,174,13)"/><text x="55.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="916" width="2" height="15" fill="rgb(239,186,40)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="932" width="2" height="15" fill="rgb(211,200,53)"/><text x="55.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="948" width="2" height="15" fill="rgb(252,203,8)"/><text x="55.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="964" width="2" height="15" fill="rgb(244,99,18)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="980" width="2" height="15" fill="rgb(206,43,17)"/><text x="55.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="996" width="2" height="15" fill="rgb(219,141,24)"/><text x="55.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="1012" width="2" height="15" fill="rgb(222,162,7)"/><text x="55.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1028" width="2" height="15" fill="rgb(219,27,17)"/><text x="55.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.19%)</title><rect x="52" y="1044" width="2" height="15" fill="rgb(210,25,49)"/><text x="55.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1060" width="2" height="15" fill="rgb(216,52,10)"/><text x="55.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1076" width="2" height="15" fill="rgb(217,5,16)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1092" width="2" height="15" fill="rgb(254,61,38)"/><text x="55.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1108" width="2" height="15" fill="rgb(210,1,1)"/><text x="55.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1124" width="2" height="15" fill="rgb(233,37,28)"/><text x="55.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="1140" width="2" height="15" fill="rgb(220,198,50)"/><text x="55.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1156" width="2" height="15" fill="rgb(229,90,21)"/><text x="55.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.19%)</title><rect x="52" y="1172" width="2" height="15" fill="rgb(221,22,15)"/><text x="55.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1188" width="2" height="15" fill="rgb(213,79,21)"/><text x="55.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1204" width="2" height="15" fill="rgb(226,174,39)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1220" width="2" height="15" fill="rgb(214,225,32)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1236" width="2" height="15" fill="rgb(238,207,31)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1252" width="2" height="15" fill="rgb(212,173,14)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="1268" width="2" height="15" fill="rgb(225,152,45)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1284" width="2" height="15" fill="rgb(253,12,9)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.19%)</title><rect x="52" y="1300" width="2" height="15" fill="rgb(228,224,36)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1316" width="2" height="15" fill="rgb(240,144,21)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1332" width="2" height="15" fill="rgb(243,221,49)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1348" width="2" height="15" fill="rgb(229,213,44)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="1364" width="2" height="15" fill="rgb(205,204,40)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1380" width="2" height="15" fill="rgb(247,32,40)"/><text x="55.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.19%)</title><rect x="52" y="1396" width="2" height="15" fill="rgb(223,3,35)"/><text x="55.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1412" width="2" height="15" fill="rgb(207,221,7)"/><text x="55.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1428" width="2" height="15" fill="rgb(240,58,21)"/><text x="55.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1444" width="2" height="15" fill="rgb(235,157,23)"/><text x="55.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="52" y="1460" width="2" height="15" fill="rgb(214,2,45)"/><text x="55.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="52" y="1476" width="2" height="15" fill="rgb(207,172,38)"/><text x="55.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/__init__.py) (1 samples, 0.19%)</title><rect x="52" y="1492" width="2" height="15" fill="rgb(254,149,21)"/><text x="55.00" y="1502.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.19%)</title><rect x="52" y="1508" width="2" height="15" fill="rgb(235,58,52)"/><text x="55.00" y="1518.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.19%)</title><rect x="52" y="1524" width="2" height="15" fill="rgb(240,161,44)"/><text x="55.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="68" width="46" height="15" fill="rgb(218,151,46)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="84" width="46" height="15" fill="rgb(232,214,40)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="100" width="46" height="15" fill="rgb(237,141,11)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 3.96%)</title><rect x="10" y="116" width="46" height="15" fill="rgb(241,193,0)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="132" width="46" height="15" fill="rgb(250,226,51)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (21 samples, 3.96%)</title><rect x="10" y="148" width="46" height="15" fill="rgb(212,181,28)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="164" width="46" height="15" fill="rgb(228,211,10)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.96%)</title><rect x="10" y="180" width="46" height="15" fill="rgb(207,161,9)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.32%)</title><rect x="41" y="196" width="15" height="15" fill="rgb(228,127,47)"/><text x="44.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.32%)</title><rect x="41" y="212" width="15" height="15" fill="rgb(253,2,8)"/><text x="44.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.32%)</title><rect x="41" y="228" width="15" height="15" fill="rgb(237,106,45)"/><text x="44.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.19%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(248,121,13)"/><text x="57.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(209,64,21)"/><text x="57.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(254,228,52)"/><text x="57.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(222,104,16)"/><text x="57.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="308" width="2" height="15" fill="rgb(229,111,8)"/><text x="57.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="324" width="2" height="15" fill="rgb(222,67,8)"/><text x="57.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(240,68,5)"/><text x="57.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="356" width="2" height="15" fill="rgb(216,58,14)"/><text x="57.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.19%)</title><rect x="54" y="372" width="2" height="15" fill="rgb(219,104,39)"/><text x="57.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="388" width="2" height="15" fill="rgb(245,106,51)"/><text x="57.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="404" width="2" height="15" fill="rgb(244,197,41)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="420" width="2" height="15" fill="rgb(248,31,9)"/><text x="57.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="436" width="2" height="15" fill="rgb(252,74,51)"/><text x="57.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="452" width="2" height="15" fill="rgb(208,194,45)"/><text x="57.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="54" y="468" width="2" height="15" fill="rgb(208,214,0)"/><text x="57.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="484" width="2" height="15" fill="rgb(206,166,19)"/><text x="57.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.19%)</title><rect x="54" y="500" width="2" height="15" fill="rgb(212,94,43)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="516" width="2" height="15" fill="rgb(232,225,47)"/><text x="57.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="532" width="2" height="15" fill="rgb(234,51,51)"/><text x="57.00" y="542.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="54" y="548" width="2" height="15" fill="rgb(237,25,21)"/><text x="57.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="54" y="564" width="2" height="15" fill="rgb(212,124,8)"/><text x="57.00" y="574.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="54" y="580" width="2" height="15" fill="rgb(242,110,43)"/><text x="57.00" y="590.50"></text></g><g><title>onnxruntime::Div&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(219,158,41)"/><text x="59.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Div&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="356" width="2" height="15" fill="rgb(254,149,18)"/><text x="59.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="372" width="2" height="15" fill="rgb(215,145,42)"/><text x="59.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="388" width="2" height="15" fill="rgb(217,151,17)"/><text x="59.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="404" width="2" height="15" fill="rgb(241,142,44)"/><text x="59.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="420" width="2" height="15" fill="rgb(244,132,4)"/><text x="59.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="436" width="2" height="15" fill="rgb(220,169,6)"/><text x="59.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="452" width="2" height="15" fill="rgb(215,95,25)"/><text x="59.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="468" width="2" height="15" fill="rgb(249,157,2)"/><text x="59.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="484" width="2" height="15" fill="rgb(216,222,45)"/><text x="59.00" y="494.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="56" y="500" width="2" height="15" fill="rgb(232,229,24)"/><text x="59.00" y="510.50"></text></g><g><title>0x7fcad53c46aa (libc-2.29.so) (1 samples, 0.19%)</title><rect x="56" y="516" width="2" height="15" fill="rgb(230,214,53)"/><text x="59.00" y="526.50"></text></g><g><title>onnxruntime::Equal&lt;int&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="58" y="340" width="3" height="15" fill="rgb(240,28,25)"/><text x="61.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;int, bool, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, int)#2}, onnxruntime::Equal&lt;int&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;int, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="58" y="356" width="3" height="15" fill="rgb(229,25,43)"/><text x="61.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="58" y="372" width="3" height="15" fill="rgb(229,108,12)"/><text x="61.00" y="382.50"></text></g><g><title>0x7fcad53b5d07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="58" y="388" width="3" height="15" fill="rgb(254,206,45)"/><text x="61.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="340" width="2" height="15" fill="rgb(216,159,22)"/><text x="64.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="356" width="2" height="15" fill="rgb(242,17,31)"/><text x="64.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="372" width="2" height="15" fill="rgb(239,156,12)"/><text x="64.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="388" width="2" height="15" fill="rgb(207,74,25)"/><text x="64.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="404" width="2" height="15" fill="rgb(214,121,32)"/><text x="64.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="420" width="2" height="15" fill="rgb(243,55,29)"/><text x="64.00" y="430.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="61" y="436" width="2" height="15" fill="rgb(240,131,44)"/><text x="64.00" y="446.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="63" y="340" width="2" height="15" fill="rgb(225,143,49)"/><text x="66.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="65" y="340" width="2" height="15" fill="rgb(248,46,6)"/><text x="68.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="65" y="356" width="2" height="15" fill="rgb(244,130,24)"/><text x="68.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2248] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="356" width="3" height="15" fill="rgb(214,165,44)"/><text x="70.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="372" width="3" height="15" fill="rgb(223,108,27)"/><text x="70.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="67" y="388" width="3" height="15" fill="rgb(208,170,30)"/><text x="70.00" y="398.50"></text></g><g><title>onnxruntime::Log&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="67" y="340" width="5" height="15" fill="rgb(227,10,40)"/><text x="70.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="356" width="2" height="15" fill="rgb(207,228,9)"/><text x="73.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="372" width="2" height="15" fill="rgb(253,98,30)"/><text x="73.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="388" width="2" height="15" fill="rgb(251,92,13)"/><text x="73.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="404" width="2" height="15" fill="rgb(225,187,12)"/><text x="73.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="420" width="2" height="15" fill="rgb(218,155,13)"/><text x="73.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="436" width="2" height="15" fill="rgb(217,223,38)"/><text x="73.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="452" width="2" height="15" fill="rgb(228,6,27)"/><text x="73.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="468" width="2" height="15" fill="rgb(208,209,49)"/><text x="73.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="70" y="484" width="2" height="15" fill="rgb(253,24,28)"/><text x="73.00" y="494.50"></text></g><g><title>0x7fcad53c46e9 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="70" y="500" width="2" height="15" fill="rgb(218,14,33)"/><text x="73.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2247] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="72" y="372" width="2" height="15" fill="rgb(213,55,51)"/><text x="75.00" y="382.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="72" y="388" width="2" height="15" fill="rgb(236,3,24)"/><text x="75.00" y="398.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="72" y="340" width="4" height="15" fill="rgb(245,186,0)"/><text x="75.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="72" y="356" width="4" height="15" fill="rgb(205,60,16)"/><text x="75.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="74" y="372" width="2" height="15" fill="rgb(230,54,7)"/><text x="77.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="74" y="388" width="2" height="15" fill="rgb(240,66,43)"/><text x="77.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="74" y="404" width="2" height="15" fill="rgb(245,157,44)"/><text x="77.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="74" y="420" width="2" height="15" fill="rgb(227,84,3)"/><text x="77.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="74" y="436" width="2" height="15" fill="rgb(207,195,54)"/><text x="77.00" y="446.50"></text></g><g><title>0x7fcad53b6f05 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="74" y="452" width="2" height="15" fill="rgb(224,175,45)"/><text x="77.00" y="462.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="340" width="3" height="15" fill="rgb(216,214,29)"/><text x="79.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="356" width="3" height="15" fill="rgb(248,206,47)"/><text x="79.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="372" width="3" height="15" fill="rgb(217,179,54)"/><text x="79.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="388" width="3" height="15" fill="rgb(252,67,52)"/><text x="79.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="404" width="3" height="15" fill="rgb(235,105,14)"/><text x="79.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="420" width="3" height="15" fill="rgb(208,31,21)"/><text x="79.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="436" width="3" height="15" fill="rgb(226,19,44)"/><text x="79.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="452" width="3" height="15" fill="rgb(209,173,47)"/><text x="79.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="468" width="3" height="15" fill="rgb(234,181,1)"/><text x="79.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="484" width="3" height="15" fill="rgb(217,91,36)"/><text x="79.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="500" width="3" height="15" fill="rgb(233,8,47)"/><text x="79.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="76" y="516" width="3" height="15" fill="rgb(237,73,23)"/><text x="79.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="76" y="532" width="3" height="15" fill="rgb(220,152,15)"/><text x="79.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="548" width="3" height="15" fill="rgb(244,131,37)"/><text x="79.00" y="558.50"></text></g><g><title>0x7fcad53b6c04 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="76" y="564" width="3" height="15" fill="rgb(213,227,42)"/><text x="79.00" y="574.50"></text></g><g><title>0x7fcad53b597c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="79" y="356" width="2" height="15" fill="rgb(236,191,20)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="79" y="340" width="4" height="15" fill="rgb(245,81,38)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="356" width="2" height="15" fill="rgb(205,31,14)"/><text x="84.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="372" width="2" height="15" fill="rgb(248,105,33)"/><text x="84.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="388" width="2" height="15" fill="rgb(223,185,23)"/><text x="84.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="404" width="2" height="15" fill="rgb(229,25,35)"/><text x="84.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="420" width="2" height="15" fill="rgb(228,84,41)"/><text x="84.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="81" y="436" width="2" height="15" fill="rgb(220,161,6)"/><text x="84.00" y="446.50"></text></g><g><title>0x7fcad53b5bc0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="83" y="372" width="2" height="15" fill="rgb(244,200,21)"/><text x="86.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="85" y="372" width="2" height="15" fill="rgb(240,142,2)"/><text x="88.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="85" y="388" width="2" height="15" fill="rgb(228,129,10)"/><text x="88.00" y="398.50"></text></g><g><title>0x7fcad53d614e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="87" y="404" width="3" height="15" fill="rgb(230,146,33)"/><text x="90.00" y="414.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="87" y="372" width="5" height="15" fill="rgb(251,194,3)"/><text x="90.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="87" y="388" width="5" height="15" fill="rgb(248,228,18)"/><text x="90.00" y="398.50"></text></g><g><title>onnxruntime::BroadcastIterator::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="90" y="404" width="2" height="15" fill="rgb(247,16,31)"/><text x="93.00" y="414.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="83" y="340" width="11" height="15" fill="rgb(237,27,53)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.94%)</title><rect x="83" y="356" width="11" height="15" fill="rgb(226,148,23)"/><text x="86.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="92" y="372" width="2" height="15" fill="rgb(213,144,8)"/><text x="95.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="92" y="388" width="2" height="15" fill="rgb(226,142,7)"/><text x="95.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="92" y="404" width="2" height="15" fill="rgb(241,175,4)"/><text x="95.00" y="414.50"></text></g><g><title>0x7fcad53b700a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="92" y="420" width="2" height="15" fill="rgb(239,144,28)"/><text x="95.00" y="430.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="340" width="2" height="15" fill="rgb(225,203,48)"/><text x="97.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="356" width="2" height="15" fill="rgb(240,102,29)"/><text x="97.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="372" width="2" height="15" fill="rgb(218,112,37)"/><text x="97.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="388" width="2" height="15" fill="rgb(239,214,27)"/><text x="97.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="404" width="2" height="15" fill="rgb(214,172,48)"/><text x="97.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="94" y="420" width="2" height="15" fill="rgb(225,139,1)"/><text x="97.00" y="430.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (20 samples, 3.77%)</title><rect x="56" y="100" width="45" height="15" fill="rgb(241,224,40)"/><text x="59.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (20 samples, 3.77%)</title><rect x="56" y="116" width="45" height="15" fill="rgb(247,102,51)"/><text x="59.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (20 samples, 3.77%)</title><rect x="56" y="132" width="45" height="15" fill="rgb(252,13,20)"/><text x="59.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (20 samples, 3.77%)</title><rect x="56" y="148" width="45" height="15" fill="rgb(234,79,54)"/><text x="59.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (20 samples, 3.77%)</title><rect x="56" y="164" width="45" height="15" fill="rgb(218,91,27)"/><text x="59.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (20 samples, 3.77%)</title><rect x="56" y="180" width="45" height="15" fill="rgb(219,145,14)"/><text x="59.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py) (20 samples, 3.77%)</title><rect x="56" y="196" width="45" height="15" fill="rgb(231,224,42)"/><text x="59.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="212" width="45" height="15" fill="rgb(248,217,15)"/><text x="59.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="228" width="45" height="15" fill="rgb(208,211,20)"/><text x="59.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="244" width="45" height="15" fill="rgb(241,145,24)"/><text x="59.00" y="254.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="260" width="45" height="15" fill="rgb(218,75,40)"/><text x="59.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="276" width="45" height="15" fill="rgb(216,206,44)"/><text x="59.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="292" width="45" height="15" fill="rgb(234,29,41)"/><text x="59.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="308" width="45" height="15" fill="rgb(241,19,8)"/><text x="59.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 3.77%)</title><rect x="56" y="324" width="45" height="15" fill="rgb(222,66,31)"/><text x="59.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="96" y="340" width="5" height="15" fill="rgb(207,12,22)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="96" y="356" width="5" height="15" fill="rgb(228,89,9)"/><text x="99.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="96" y="372" width="5" height="15" fill="rgb(224,6,19)"/><text x="99.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="96" y="388" width="5" height="15" fill="rgb(208,144,1)"/><text x="99.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.38%)</title><rect x="96" y="404" width="5" height="15" fill="rgb(241,162,11)"/><text x="99.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="99" y="420" width="2" height="15" fill="rgb(254,189,1)"/><text x="102.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="99" y="436" width="2" height="15" fill="rgb(224,214,37)"/><text x="102.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="99" y="452" width="2" height="15" fill="rgb(221,53,48)"/><text x="102.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="99" y="468" width="2" height="15" fill="rgb(233,164,2)"/><text x="102.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="99" y="484" width="2" height="15" fill="rgb(251,203,2)"/><text x="102.00" y="494.50"></text></g><g><title>0x7fcad53b7700 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="99" y="500" width="2" height="15" fill="rgb(218,120,12)"/><text x="102.00" y="510.50"></text></g><g><title>0x7fcad53b4ab9 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="99" y="516" width="2" height="15" fill="rgb(213,61,39)"/><text x="102.00" y="526.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="101" y="132" width="2" height="15" fill="rgb(251,85,33)"/><text x="104.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="101" y="148" width="2" height="15" fill="rgb(208,121,33)"/><text x="104.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.19%)</title><rect x="101" y="164" width="2" height="15" fill="rgb(207,111,28)"/><text x="104.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="180" width="2" height="15" fill="rgb(216,130,17)"/><text x="104.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="196" width="2" height="15" fill="rgb(250,218,17)"/><text x="104.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="212" width="2" height="15" fill="rgb(219,64,13)"/><text x="104.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="101" y="228" width="2" height="15" fill="rgb(232,90,4)"/><text x="104.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="244" width="2" height="15" fill="rgb(227,123,52)"/><text x="104.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.19%)</title><rect x="101" y="260" width="2" height="15" fill="rgb(253,215,27)"/><text x="104.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="276" width="2" height="15" fill="rgb(252,4,23)"/><text x="104.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="292" width="2" height="15" fill="rgb(236,190,8)"/><text x="104.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="308" width="2" height="15" fill="rgb(213,100,8)"/><text x="104.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="101" y="324" width="2" height="15" fill="rgb(239,193,26)"/><text x="104.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="340" width="2" height="15" fill="rgb(228,74,18)"/><text x="104.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.19%)</title><rect x="101" y="356" width="2" height="15" fill="rgb(209,37,28)"/><text x="104.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="372" width="2" height="15" fill="rgb(237,228,38)"/><text x="104.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="388" width="2" height="15" fill="rgb(232,88,53)"/><text x="104.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="404" width="2" height="15" fill="rgb(243,52,36)"/><text x="104.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="101" y="420" width="2" height="15" fill="rgb(214,75,40)"/><text x="104.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="436" width="2" height="15" fill="rgb(232,204,15)"/><text x="104.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.19%)</title><rect x="101" y="452" width="2" height="15" fill="rgb(227,125,20)"/><text x="104.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="468" width="2" height="15" fill="rgb(239,23,23)"/><text x="104.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="484" width="2" height="15" fill="rgb(209,28,38)"/><text x="104.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="500" width="2" height="15" fill="rgb(225,123,46)"/><text x="104.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="516" width="2" height="15" fill="rgb(240,97,25)"/><text x="104.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.19%)</title><rect x="101" y="532" width="2" height="15" fill="rgb(242,142,0)"/><text x="104.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="101" y="548" width="2" height="15" fill="rgb(246,116,37)"/><text x="104.00" y="558.50"></text></g><g><title>0x7fca9507bf24 (?) (1 samples, 0.19%)</title><rect x="101" y="564" width="2" height="15" fill="rgb(237,207,23)"/><text x="104.00" y="574.50"></text></g><g><title>0x7fca95061279 (?) (1 samples, 0.19%)</title><rect x="101" y="580" width="2" height="15" fill="rgb(251,130,34)"/><text x="104.00" y="590.50"></text></g><g><title>0x7fca950781de (?) (1 samples, 0.19%)</title><rect x="101" y="596" width="2" height="15" fill="rgb(225,15,26)"/><text x="104.00" y="606.50"></text></g><g><title>0x7fca9507aeb3 (?) (1 samples, 0.19%)</title><rect x="101" y="612" width="2" height="15" fill="rgb(225,148,19)"/><text x="104.00" y="622.50"></text></g><g><title>0x7fca95059cfb (?) (1 samples, 0.19%)</title><rect x="101" y="628" width="2" height="15" fill="rgb(238,78,29)"/><text x="104.00" y="638.50"></text></g><g><title>pybind11_meta_setattro (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="101" y="644" width="2" height="15" fill="rgb(251,152,19)"/><text x="104.00" y="654.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (22 samples, 4.15%)</title><rect x="56" y="68" width="49" height="15" fill="rgb(217,16,31)"/><text x="59.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (22 samples, 4.15%)</title><rect x="56" y="84" width="49" height="15" fill="rgb(217,144,5)"/><text x="59.00" y="94.50">setu..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="101" y="100" width="4" height="15" fill="rgb(214,155,16)"/><text x="104.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.38%)</title><rect x="101" y="116" width="4" height="15" fill="rgb(243,9,41)"/><text x="104.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.19%)</title><rect x="103" y="132" width="2" height="15" fill="rgb(247,62,25)"/><text x="106.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.19%)</title><rect x="103" y="148" width="2" height="15" fill="rgb(235,72,42)"/><text x="106.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.19%)</title><rect x="103" y="164" width="2" height="15" fill="rgb(219,203,50)"/><text x="106.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.19%)</title><rect x="103" y="180" width="2" height="15" fill="rgb(229,194,8)"/><text x="106.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.19%)</title><rect x="103" y="196" width="2" height="15" fill="rgb(249,209,20)"/><text x="106.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.19%)</title><rect x="103" y="212" width="2" height="15" fill="rgb(232,175,0)"/><text x="106.00" y="222.50"></text></g><g><title>apply_sub (onnxconverter_common/onnx_ops.py) (1 samples, 0.19%)</title><rect x="103" y="228" width="2" height="15" fill="rgb(217,131,20)"/><text x="106.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.19%)</title><rect x="103" y="244" width="2" height="15" fill="rgb(254,189,15)"/><text x="106.00" y="254.50"></text></g><g><title>_create_name_or_use_existing_one (onnxconverter_common/onnx_ops.py) (1 samples, 0.19%)</title><rect x="103" y="260" width="2" height="15" fill="rgb(239,158,21)"/><text x="106.00" y="270.50"></text></g><g><title>get_unique_operator_name (skl2onnx/common/_topology.py) (1 samples, 0.19%)</title><rect x="103" y="276" width="2" height="15" fill="rgb(231,27,12)"/><text x="106.00" y="286.50"></text></g><g><title>_generate_unique_name (skl2onnx/common/_topology.py) (1 samples, 0.19%)</title><rect x="103" y="292" width="2" height="15" fill="rgb(249,205,35)"/><text x="106.00" y="302.50"></text></g><g><title>match (re.py) (1 samples, 0.19%)</title><rect x="103" y="308" width="2" height="15" fill="rgb(208,184,25)"/><text x="106.00" y="318.50"></text></g><g><title>_compile (re.py) (1 samples, 0.19%)</title><rect x="103" y="324" width="2" height="15" fill="rgb(231,166,52)"/><text x="106.00" y="334.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="125" y="180" width="3" height="15" fill="rgb(242,90,31)"/><text x="128.00" y="190.50"></text></g><g><title>0x7fcad53b7028 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="125" y="196" width="3" height="15" fill="rgb(223,15,17)"/><text x="128.00" y="206.50"></text></g><g><title>0x7fcad53b4bc6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="125" y="212" width="3" height="15" fill="rgb(229,77,3)"/><text x="128.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.19%)</title><rect x="212" y="196" width="2" height="15" fill="rgb(228,137,29)"/><text x="215.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (1 samples, 0.19%)</title><rect x="234" y="212" width="3" height="15" fill="rgb(225,55,11)"/><text x="237.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="234" y="228" width="3" height="15" fill="rgb(232,177,42)"/><text x="237.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.19%)</title><rect x="234" y="244" width="3" height="15" fill="rgb(225,138,52)"/><text x="237.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="234" y="260" width="3" height="15" fill="rgb(237,202,8)"/><text x="237.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.19%)</title><rect x="234" y="276" width="3" height="15" fill="rgb(208,198,13)"/><text x="237.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.19%)</title><rect x="237" y="212" width="2" height="15" fill="rgb(218,177,52)"/><text x="240.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="237" y="228" width="2" height="15" fill="rgb(232,210,19)"/><text x="240.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="237" y="244" width="2" height="15" fill="rgb(248,100,1)"/><text x="240.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="237" y="260" width="2" height="15" fill="rgb(235,50,49)"/><text x="240.00" y="270.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="237" y="276" width="2" height="15" fill="rgb(234,146,15)"/><text x="240.00" y="286.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="237" y="292" width="2" height="15" fill="rgb(236,184,16)"/><text x="240.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.19%)</title><rect x="239" y="244" width="2" height="15" fill="rgb(217,81,52)"/><text x="242.00" y="254.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.19%)</title><rect x="243" y="276" width="3" height="15" fill="rgb(233,57,51)"/><text x="246.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="243" y="292" width="3" height="15" fill="rgb(208,131,28)"/><text x="246.00" y="302.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.19%)</title><rect x="243" y="308" width="3" height="15" fill="rgb(214,18,27)"/><text x="246.00" y="318.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.38%)</title><rect x="243" y="260" width="5" height="15" fill="rgb(249,119,50)"/><text x="246.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.19%)</title><rect x="246" y="276" width="2" height="15" fill="rgb(232,21,24)"/><text x="249.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="246" y="292" width="2" height="15" fill="rgb(242,163,18)"/><text x="249.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="246" y="308" width="2" height="15" fill="rgb(209,222,42)"/><text x="249.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 0.94%)</title><rect x="239" y="212" width="11" height="15" fill="rgb(229,89,44)"/><text x="242.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 0.94%)</title><rect x="239" y="228" width="11" height="15" fill="rgb(227,107,50)"/><text x="242.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (4 samples, 0.75%)</title><rect x="241" y="244" width="9" height="15" fill="rgb(216,88,35)"/><text x="244.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="248" y="260" width="2" height="15" fill="rgb(239,208,47)"/><text x="251.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="279" y="260" width="2" height="15" fill="rgb(205,220,40)"/><text x="282.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="279" y="276" width="2" height="15" fill="rgb(206,21,46)"/><text x="282.00" y="286.50"></text></g><g><title>0x7fcad53d6120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="283" y="276" width="3" height="15" fill="rgb(236,71,26)"/><text x="286.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="286" y="276" width="2" height="15" fill="rgb(210,52,15)"/><text x="289.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="286" y="292" width="2" height="15" fill="rgb(206,144,4)"/><text x="289.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="288" y="276" width="2" height="15" fill="rgb(248,217,46)"/><text x="291.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.19%)</title><rect x="290" y="276" width="2" height="15" fill="rgb(221,141,31)"/><text x="293.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="290" y="292" width="2" height="15" fill="rgb(223,56,34)"/><text x="293.00" y="302.50"></text></g><g><title>0x7fcad45d7e80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="290" y="308" width="2" height="15" fill="rgb(218,193,14)"/><text x="293.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.19%)</title><rect x="292" y="276" width="2" height="15" fill="rgb(211,40,41)"/><text x="295.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="294" y="292" width="3" height="15" fill="rgb(208,163,47)"/><text x="297.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="297" y="324" width="2" height="15" fill="rgb(219,160,9)"/><text x="300.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="299" y="324" width="2" height="15" fill="rgb(212,106,54)"/><text x="302.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (2 samples, 0.38%)</title><rect x="301" y="324" width="5" height="15" fill="rgb(251,65,9)"/><text x="304.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (2 samples, 0.38%)</title><rect x="301" y="340" width="5" height="15" fill="rgb(240,73,23)"/><text x="304.00" y="350.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(207,126,19)"/><text x="306.00" y="366.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="303" y="372" width="3" height="15" fill="rgb(217,101,16)"/><text x="306.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.38%)</title><rect x="306" y="324" width="4" height="15" fill="rgb(247,197,41)"/><text x="309.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.32%)</title><rect x="297" y="308" width="15" height="15" fill="rgb(246,210,36)"/><text x="300.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="310" y="324" width="2" height="15" fill="rgb(207,26,15)"/><text x="313.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="310" y="340" width="2" height="15" fill="rgb(213,126,18)"/><text x="313.00" y="350.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="312" y="308" width="3" height="15" fill="rgb(241,174,18)"/><text x="315.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (11 samples, 2.08%)</title><rect x="294" y="276" width="25" height="15" fill="rgb(223,8,14)"/><text x="297.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 1.89%)</title><rect x="297" y="292" width="22" height="15" fill="rgb(211,30,53)"/><text x="300.00" y="302.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.38%)</title><rect x="315" y="308" width="4" height="15" fill="rgb(210,110,7)"/><text x="318.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="317" y="324" width="2" height="15" fill="rgb(223,50,37)"/><text x="320.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="317" y="340" width="2" height="15" fill="rgb(219,201,9)"/><text x="320.00" y="350.50"></text></g><g><title>0x7fcad53b7040 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="317" y="356" width="2" height="15" fill="rgb(243,118,35)"/><text x="320.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.38%)</title><rect x="319" y="276" width="4" height="15" fill="rgb(251,211,47)"/><text x="322.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.38%)</title><rect x="319" y="292" width="4" height="15" fill="rgb(216,166,5)"/><text x="322.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 3.77%)</title><rect x="281" y="260" width="45" height="15" fill="rgb(249,80,39)"/><text x="284.00" y="270.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="323" y="276" width="3" height="15" fill="rgb(254,127,15)"/><text x="326.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (28 samples, 5.28%)</title><rect x="266" y="228" width="62" height="15" fill="rgb(207,81,35)"/><text x="269.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (22 samples, 4.15%)</title><rect x="279" y="244" width="49" height="15" fill="rgb(253,190,42)"/><text x="282.00" y="254.50">ufun..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="326" y="260" width="2" height="15" fill="rgb(217,118,27)"/><text x="329.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.19%)</title><rect x="328" y="228" width="2" height="15" fill="rgb(240,178,3)"/><text x="331.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.19%)</title><rect x="328" y="244" width="2" height="15" fill="rgb(221,11,21)"/><text x="331.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.19%)</title><rect x="328" y="260" width="2" height="15" fill="rgb(235,15,20)"/><text x="331.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="328" y="276" width="2" height="15" fill="rgb(235,142,14)"/><text x="331.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="328" y="292" width="2" height="15" fill="rgb(213,153,37)"/><text x="331.00" y="302.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="328" y="308" width="2" height="15" fill="rgb(219,118,2)"/><text x="331.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="328" y="324" width="2" height="15" fill="rgb(218,169,40)"/><text x="331.00" y="334.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.19%)</title><rect x="328" y="340" width="2" height="15" fill="rgb(229,121,6)"/><text x="331.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.19%)</title><rect x="328" y="356" width="2" height="15" fill="rgb(217,49,42)"/><text x="331.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.19%)</title><rect x="328" y="372" width="2" height="15" fill="rgb(236,182,14)"/><text x="331.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.19%)</title><rect x="330" y="228" width="2" height="15" fill="rgb(248,14,5)"/><text x="333.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.19%)</title><rect x="330" y="244" width="2" height="15" fill="rgb(223,57,43)"/><text x="333.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.19%)</title><rect x="330" y="260" width="2" height="15" fill="rgb(210,39,47)"/><text x="333.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.19%)</title><rect x="330" y="276" width="2" height="15" fill="rgb(218,4,5)"/><text x="333.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_exp.py) (1 samples, 0.19%)</title><rect x="332" y="228" width="3" height="15" fill="rgb(240,135,2)"/><text x="335.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="332" y="244" width="3" height="15" fill="rgb(246,45,30)"/><text x="335.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="332" y="260" width="3" height="15" fill="rgb(230,58,52)"/><text x="335.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="332" y="276" width="3" height="15" fill="rgb(208,222,4)"/><text x="335.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.19%)</title><rect x="332" y="292" width="3" height="15" fill="rgb(217,146,26)"/><text x="335.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="332" y="308" width="3" height="15" fill="rgb(234,80,30)"/><text x="335.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.19%)</title><rect x="332" y="324" width="3" height="15" fill="rgb(226,8,21)"/><text x="335.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="332" y="340" width="3" height="15" fill="rgb(242,112,43)"/><text x="335.00" y="350.50"></text></g><g><title>0x7fcad536da14 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="332" y="356" width="3" height="15" fill="rgb(226,149,15)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="337" y="292" width="2" height="15" fill="rgb(225,82,40)"/><text x="340.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="337" y="276" width="6" height="15" fill="rgb(229,223,17)"/><text x="340.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.38%)</title><rect x="339" y="292" width="4" height="15" fill="rgb(231,41,2)"/><text x="342.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="341" y="308" width="2" height="15" fill="rgb(253,48,41)"/><text x="344.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.19%)</title><rect x="341" y="324" width="2" height="15" fill="rgb(214,17,49)"/><text x="344.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="341" y="340" width="2" height="15" fill="rgb(238,155,22)"/><text x="344.00" y="350.50"></text></g><g><title>0x7fcad536d7a5 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="341" y="356" width="2" height="15" fill="rgb(229,41,40)"/><text x="344.00" y="366.50"></text></g><g><title>0x7fcad53d5d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="341" y="372" width="2" height="15" fill="rgb(210,221,35)"/><text x="344.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.19%)</title><rect x="343" y="276" width="3" height="15" fill="rgb(249,183,32)"/><text x="346.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.19%)</title><rect x="343" y="292" width="3" height="15" fill="rgb(242,141,44)"/><text x="346.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.94%)</title><rect x="337" y="260" width="11" height="15" fill="rgb(231,6,40)"/><text x="340.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="346" y="276" width="2" height="15" fill="rgb(243,130,16)"/><text x="349.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (7 samples, 1.32%)</title><rect x="335" y="228" width="15" height="15" fill="rgb(240,214,0)"/><text x="338.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.13%)</title><rect x="337" y="244" width="13" height="15" fill="rgb(226,112,37)"/><text x="340.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="348" y="260" width="2" height="15" fill="rgb(223,50,14)"/><text x="351.00" y="270.50"></text></g><g><title>_sum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="366" y="260" width="2" height="15" fill="rgb(252,9,19)"/><text x="369.00" y="270.50"></text></g><g><title>0x7fcad5493df3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="381" y="292" width="3" height="15" fill="rgb(242,116,1)"/><text x="384.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 0.94%)</title><rect x="388" y="356" width="11" height="15" fill="rgb(235,153,49)"/><text x="391.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.94%)</title><rect x="388" y="372" width="11" height="15" fill="rgb(242,26,50)"/><text x="391.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.94%)</title><rect x="388" y="388" width="11" height="15" fill="rgb(240,77,5)"/><text x="391.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (6 samples, 1.13%)</title><rect x="388" y="324" width="13" height="15" fill="rgb(222,25,36)"/><text x="391.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (6 samples, 1.13%)</title><rect x="388" y="340" width="13" height="15" fill="rgb(216,143,24)"/><text x="391.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.19%)</title><rect x="399" y="356" width="2" height="15" fill="rgb(247,190,54)"/><text x="402.00" y="366.50"></text></g><g><title>0x7fcad53cbe50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="399" y="372" width="2" height="15" fill="rgb(213,61,3)"/><text x="402.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (2 samples, 0.38%)</title><rect x="401" y="340" width="5" height="15" fill="rgb(235,54,43)"/><text x="404.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (2 samples, 0.38%)</title><rect x="401" y="356" width="5" height="15" fill="rgb(222,42,45)"/><text x="404.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.38%)</title><rect x="401" y="372" width="5" height="15" fill="rgb(246,171,30)"/><text x="404.00" y="382.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.19%)</title><rect x="406" y="340" width="2" height="15" fill="rgb(226,55,17)"/><text x="409.00" y="350.50"></text></g><g><title>0x7fcad53d614a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="410" y="388" width="2" height="15" fill="rgb(217,10,8)"/><text x="413.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="410" y="372" width="5" height="15" fill="rgb(250,215,28)"/><text x="413.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="412" y="388" width="3" height="15" fill="rgb(245,21,20)"/><text x="415.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.19%)</title><rect x="412" y="404" width="3" height="15" fill="rgb(220,143,5)"/><text x="415.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="415" y="372" width="2" height="15" fill="rgb(212,202,15)"/><text x="418.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="415" y="388" width="2" height="15" fill="rgb(231,78,20)"/><text x="418.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.19%)</title><rect x="417" y="372" width="2" height="15" fill="rgb(241,119,52)"/><text x="420.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.19%)</title><rect x="419" y="372" width="2" height="15" fill="rgb(209,66,29)"/><text x="422.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.19%)</title><rect x="419" y="388" width="2" height="15" fill="rgb(213,183,1)"/><text x="422.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="419" y="404" width="2" height="15" fill="rgb(209,149,27)"/><text x="422.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="419" y="420" width="2" height="15" fill="rgb(235,159,2)"/><text x="422.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="419" y="436" width="2" height="15" fill="rgb(207,62,19)"/><text x="422.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="419" y="452" width="2" height="15" fill="rgb(233,191,18)"/><text x="422.00" y="462.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.51%)</title><rect x="408" y="340" width="18" height="15" fill="rgb(226,146,51)"/><text x="411.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (8 samples, 1.51%)</title><rect x="408" y="356" width="18" height="15" fill="rgb(225,18,52)"/><text x="411.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.38%)</title><rect x="421" y="372" width="5" height="15" fill="rgb(225,44,36)"/><text x="424.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.38%)</title><rect x="421" y="388" width="5" height="15" fill="rgb(240,14,4)"/><text x="424.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (36 samples, 6.79%)</title><rect x="350" y="228" width="80" height="15" fill="rgb(236,200,11)"/><text x="353.00" y="238.50">_run (mlp..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (32 samples, 6.04%)</title><rect x="359" y="244" width="71" height="15" fill="rgb(227,67,17)"/><text x="362.00" y="254.50">sum (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (28 samples, 5.28%)</title><rect x="368" y="260" width="62" height="15" fill="rgb(219,51,22)"/><text x="371.00" y="270.50">array_..</text></g><g><title>sum (numpy/core/fromnumeric.py) (27 samples, 5.09%)</title><rect x="370" y="276" width="60" height="15" fill="rgb(206,92,44)"/><text x="373.00" y="286.50">sum (n..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (21 samples, 3.96%)</title><rect x="384" y="292" width="46" height="15" fill="rgb(235,169,12)"/><text x="387.00" y="302.50">_wra..</text></g><g><title>ufunc_reduce (ufunc_object.c) (19 samples, 3.58%)</title><rect x="388" y="308" width="42" height="15" fill="rgb(241,192,3)"/><text x="391.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 2.45%)</title><rect x="401" y="324" width="29" height="15" fill="rgb(228,227,12)"/><text x="404.00" y="334.50">Py..</text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.38%)</title><rect x="426" y="340" width="4" height="15" fill="rgb(242,100,22)"/><text x="429.00" y="350.50"></text></g><g><title>0x7fca95f13422 (?) (1 samples, 0.19%)</title><rect x="430" y="244" width="3" height="15" fill="rgb(234,227,15)"/><text x="433.00" y="254.50"></text></g><g><title>0x7fca95f1989e (?) (1 samples, 0.19%)</title><rect x="430" y="260" width="3" height="15" fill="rgb(233,157,51)"/><text x="433.00" y="270.50"></text></g><g><title>0x7fca95f1974f (?) (1 samples, 0.19%)</title><rect x="430" y="276" width="3" height="15" fill="rgb(240,97,54)"/><text x="433.00" y="286.50"></text></g><g><title>0x7fca95f1fa3a (?) (1 samples, 0.19%)</title><rect x="430" y="292" width="3" height="15" fill="rgb(230,214,14)"/><text x="433.00" y="302.50"></text></g><g><title>0x7fca9f37bab9 (?) (1 samples, 0.19%)</title><rect x="430" y="308" width="3" height="15" fill="rgb(230,59,0)"/><text x="433.00" y="318.50"></text></g><g><title>0x7fca9f37cea9 (?) (1 samples, 0.19%)</title><rect x="430" y="324" width="3" height="15" fill="rgb(241,93,39)"/><text x="433.00" y="334.50"></text></g><g><title>0x7fca9f37cea9 (libgomp.so.1.0.0) (6 samples, 1.13%)</title><rect x="433" y="468" width="13" height="15" fill="rgb(232,139,41)"/><text x="436.00" y="478.50"></text></g><g><title>0x7fca9f37ceab (libgomp.so.1.0.0) (6 samples, 1.13%)</title><rect x="446" y="468" width="13" height="15" fill="rgb(239,105,4)"/><text x="449.00" y="478.50"></text></g><g><title>0x7fca9f37bab9 (libgomp.so.1.0.0) (15 samples, 2.83%)</title><rect x="433" y="452" width="33" height="15" fill="rgb(219,81,17)"/><text x="436.00" y="462.50">0x..</text></g><g><title>0x7fca9f37cead (libgomp.so.1.0.0) (3 samples, 0.57%)</title><rect x="459" y="468" width="7" height="15" fill="rgb(235,15,15)"/><text x="462.00" y="478.50"></text></g><g><title>0x7fca9f37ccfb (libgomp.so.1.0.0) (2 samples, 0.38%)</title><rect x="466" y="484" width="4" height="15" fill="rgb(209,164,50)"/><text x="469.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (116 samples, 21.89%)</title><rect x="214" y="196" width="259" height="15" fill="rgb(249,183,46)"/><text x="217.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (100 samples, 18.87%)</title><rect x="250" y="212" width="223" height="15" fill="rgb(232,155,35)"/><text x="253.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (19 samples, 3.58%)</title><rect x="430" y="228" width="43" height="15" fill="rgb(218,142,45)"/><text x="433.00" y="238.50">_run..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (18 samples, 3.40%)</title><rect x="433" y="244" width="40" height="15" fill="rgb(243,40,34)"/><text x="436.00" y="254.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (18 samples, 3.40%)</title><rect x="433" y="260" width="40" height="15" fill="rgb(240,79,22)"/><text x="436.00" y="270.50">voi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (18 samples, 3.40%)</title><rect x="433" y="276" width="40" height="15" fill="rgb(232,100,0)"/><text x="436.00" y="286.50">voi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (18 samples, 3.40%)</title><rect x="433" y="292" width="40" height="15" fill="rgb(254,117,0)"/><text x="436.00" y="302.50">pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (18 samples, 3.40%)</title><rect x="433" y="308" width="40" height="15" fill="rgb(229,65,1)"/><text x="436.00" y="318.50">pyb..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (18 samples, 3.40%)</title><rect x="433" y="324" width="40" height="15" fill="rgb(248,74,45)"/><text x="436.00" y="334.50">pyb..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (18 samples, 3.40%)</title><rect x="433" y="340" width="40" height="15" fill="rgb(244,193,49)"/><text x="436.00" y="350.50">pyb..</text></g><g><title>pybind11::array::~array (numpy.h) (18 samples, 3.40%)</title><rect x="433" y="356" width="40" height="15" fill="rgb(252,17,51)"/><text x="436.00" y="366.50">pyb..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (18 samples, 3.40%)</title><rect x="433" y="372" width="40" height="15" fill="rgb(238,7,49)"/><text x="436.00" y="382.50">pyb..</text></g><g><title>pybind11::object::~object (pytypes.h) (18 samples, 3.40%)</title><rect x="433" y="388" width="40" height="15" fill="rgb(214,54,7)"/><text x="436.00" y="398.50">pyb..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (18 samples, 3.40%)</title><rect x="433" y="404" width="40" height="15" fill="rgb(237,56,36)"/><text x="436.00" y="414.50">pyb..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (18 samples, 3.40%)</title><rect x="433" y="420" width="40" height="15" fill="rgb(216,154,32)"/><text x="436.00" y="430.50">Run..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (18 samples, 3.40%)</title><rect x="433" y="436" width="40" height="15" fill="rgb(232,187,20)"/><text x="436.00" y="446.50">pyb..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.57%)</title><rect x="466" y="452" width="7" height="15" fill="rgb(220,46,41)"/><text x="469.00" y="462.50"></text></g><g><title>0x7fca9f37adaa (libgomp.so.1.0.0) (3 samples, 0.57%)</title><rect x="466" y="468" width="7" height="15" fill="rgb(218,212,46)"/><text x="469.00" y="478.50"></text></g><g><title>0x7fca9f37cd6d (libgomp.so.1.0.0) (1 samples, 0.19%)</title><rect x="470" y="484" width="3" height="15" fill="rgb(230,112,33)"/><text x="473.00" y="494.50"></text></g><g><title>0x7fcad53d6120 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="490" y="388" width="3" height="15" fill="rgb(238,2,34)"/><text x="493.00" y="398.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="493" y="388" width="2" height="15" fill="rgb(239,129,19)"/><text x="496.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="493" y="404" width="2" height="15" fill="rgb(207,217,15)"/><text x="496.00" y="414.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.19%)</title><rect x="493" y="420" width="2" height="15" fill="rgb(222,60,26)"/><text x="496.00" y="430.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.19%)</title><rect x="493" y="436" width="2" height="15" fill="rgb(243,61,41)"/><text x="496.00" y="446.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="495" y="436" width="2" height="15" fill="rgb(239,124,25)"/><text x="498.00" y="446.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="495" y="452" width="2" height="15" fill="rgb(232,69,47)"/><text x="498.00" y="462.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.19%)</title><rect x="495" y="468" width="2" height="15" fill="rgb(247,189,3)"/><text x="498.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.38%)</title><rect x="495" y="420" width="4" height="15" fill="rgb(208,135,9)"/><text x="498.00" y="430.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c) (1 samples, 0.19%)</title><rect x="497" y="436" width="2" height="15" fill="rgb(225,10,41)"/><text x="500.00" y="446.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="497" y="452" width="2" height="15" fill="rgb(250,136,10)"/><text x="500.00" y="462.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="495" y="388" width="7" height="15" fill="rgb(241,60,32)"/><text x="498.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.57%)</title><rect x="495" y="404" width="7" height="15" fill="rgb(218,163,42)"/><text x="498.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.19%)</title><rect x="499" y="420" width="3" height="15" fill="rgb(220,74,25)"/><text x="502.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.32%)</title><rect x="488" y="372" width="16" height="15" fill="rgb(234,191,42)"/><text x="491.00" y="382.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.19%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(227,13,49)"/><text x="505.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (8 samples, 1.51%)</title><rect x="488" y="340" width="18" height="15" fill="rgb(226,41,8)"/><text x="491.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.51%)</title><rect x="488" y="356" width="18" height="15" fill="rgb(233,12,37)"/><text x="491.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.19%)</title><rect x="504" y="372" width="2" height="15" fill="rgb(250,165,47)"/><text x="507.00" y="382.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (3 samples, 0.57%)</title><rect x="506" y="340" width="7" height="15" fill="rgb(217,112,36)"/><text x="509.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.75%)</title><rect x="519" y="356" width="9" height="15" fill="rgb(251,175,32)"/><text x="522.00" y="366.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.19%)</title><rect x="544" y="436" width="2" height="15" fill="rgb(224,49,0)"/><text x="547.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="544" y="452" width="2" height="15" fill="rgb(238,20,54)"/><text x="547.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="544" y="468" width="2" height="15" fill="rgb(222,228,22)"/><text x="547.00" y="478.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (9 samples, 1.70%)</title><rect x="528" y="356" width="20" height="15" fill="rgb(242,206,51)"/><text x="531.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.13%)</title><rect x="535" y="372" width="13" height="15" fill="rgb(235,28,35)"/><text x="538.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (6 samples, 1.13%)</title><rect x="535" y="388" width="13" height="15" fill="rgb(208,140,31)"/><text x="538.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.75%)</title><rect x="539" y="404" width="9" height="15" fill="rgb(223,45,17)"/><text x="542.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.57%)</title><rect x="542" y="420" width="6" height="15" fill="rgb(209,194,27)"/><text x="545.00" y="430.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="546" y="436" width="2" height="15" fill="rgb(248,187,47)"/><text x="549.00" y="446.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="548" y="388" width="3" height="15" fill="rgb(242,26,50)"/><text x="551.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="548" y="404" width="3" height="15" fill="rgb(219,32,15)"/><text x="551.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="548" y="420" width="3" height="15" fill="rgb(220,140,53)"/><text x="551.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.38%)</title><rect x="548" y="372" width="5" height="15" fill="rgb(251,130,2)"/><text x="551.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="551" y="388" width="2" height="15" fill="rgb(236,200,52)"/><text x="554.00" y="398.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (202 samples, 38.11%)</title><rect x="105" y="68" width="450" height="15" fill="rgb(217,182,37)"/><text x="108.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_64_1_50_1..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (202 samples, 38.11%)</title><rect x="105" y="84" width="450" height="15" fill="rgb(235,176,10)"/><text x="108.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_..</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (202 samples, 38.11%)</title><rect x="105" y="100" width="450" height="15" fill="rgb(234,18,22)"/><text x="108.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_flo..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 37.92%)</title><rect x="107" y="116" width="448" height="15" fill="rgb(208,69,16)"/><text x="110.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 37.92%)</title><rect x="107" y="132" width="448" height="15" fill="rgb(231,210,52)"/><text x="110.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (201 samples, 37.92%)</title><rect x="107" y="148" width="448" height="15" fill="rgb(227,105,10)"/><text x="110.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (201 samples, 37.92%)</title><rect x="107" y="164" width="448" height="15" fill="rgb(233,109,45)"/><text x="110.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (192 samples, 36.23%)</title><rect x="128" y="180" width="427" height="15" fill="rgb(240,183,16)"/><text x="131.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (37 samples, 6.98%)</title><rect x="473" y="196" width="82" height="15" fill="rgb(216,147,22)"/><text x="476.00" y="206.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (36 samples, 6.79%)</title><rect x="475" y="212" width="80" height="15" fill="rgb(232,19,10)"/><text x="478.00" y="222.50">_run (mlp..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (33 samples, 6.23%)</title><rect x="482" y="228" width="73" height="15" fill="rgb(241,93,22)"/><text x="485.00" y="238.50">clip (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (33 samples, 6.23%)</title><rect x="482" y="244" width="73" height="15" fill="rgb(252,210,14)"/><text x="485.00" y="254.50">array_im..</text></g><g><title>clip (numpy/core/fromnumeric.py) (31 samples, 5.85%)</title><rect x="486" y="260" width="69" height="15" fill="rgb(212,42,31)"/><text x="489.00" y="270.50">clip (n..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (31 samples, 5.85%)</title><rect x="486" y="276" width="69" height="15" fill="rgb(242,117,2)"/><text x="489.00" y="286.50">_wrapfu..</text></g><g><title>array_clip (methods.c) (31 samples, 5.85%)</title><rect x="486" y="292" width="69" height="15" fill="rgb(242,123,44)"/><text x="489.00" y="302.50">array_c..</text></g><g><title>forward_ndarray_method (methods.c) (31 samples, 5.85%)</title><rect x="486" y="308" width="69" height="15" fill="rgb(249,50,20)"/><text x="489.00" y="318.50">forward..</text></g><g><title>_clip (numpy/core/_methods.py) (31 samples, 5.85%)</title><rect x="486" y="324" width="69" height="15" fill="rgb(227,94,44)"/><text x="489.00" y="334.50">_clip (..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (19 samples, 3.58%)</title><rect x="513" y="340" width="42" height="15" fill="rgb(253,114,30)"/><text x="516.00" y="350.50">_cl..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.57%)</title><rect x="548" y="356" width="7" height="15" fill="rgb(233,159,8)"/><text x="551.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="553" y="372" width="2" height="15" fill="rgb(237,161,40)"/><text x="556.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="553" y="388" width="2" height="15" fill="rgb(244,219,19)"/><text x="556.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="553" y="404" width="2" height="15" fill="rgb(220,211,15)"/><text x="556.00" y="414.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="557" y="196" width="2" height="15" fill="rgb(248,190,15)"/><text x="560.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="557" y="212" width="2" height="15" fill="rgb(220,81,47)"/><text x="560.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="557" y="228" width="2" height="15" fill="rgb(230,53,39)"/><text x="560.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="557" y="244" width="2" height="15" fill="rgb(233,206,41)"/><text x="560.00" y="254.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (3 samples, 0.57%)</title><rect x="555" y="164" width="7" height="15" fill="rgb(239,177,37)"/><text x="558.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (3 samples, 0.57%)</title><rect x="555" y="180" width="7" height="15" fill="rgb(248,101,29)"/><text x="558.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.19%)</title><rect x="559" y="196" width="3" height="15" fill="rgb(227,135,40)"/><text x="562.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="559" y="212" width="3" height="15" fill="rgb(209,180,45)"/><text x="562.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="559" y="228" width="3" height="15" fill="rgb(252,20,17)"/><text x="562.00" y="238.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="559" y="244" width="3" height="15" fill="rgb(249,115,30)"/><text x="562.00" y="254.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.19%)</title><rect x="559" y="260" width="3" height="15" fill="rgb(233,42,5)"/><text x="562.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.19%)</title><rect x="559" y="276" width="3" height="15" fill="rgb(208,51,51)"/><text x="562.00" y="286.50"></text></g><g><title>0x7fcad5587d70 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="559" y="292" width="3" height="15" fill="rgb(235,14,27)"/><text x="562.00" y="302.50"></text></g><g><title>0x7fcaaedf9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="591" y="212" width="2" height="15" fill="rgb(230,132,29)"/><text x="594.00" y="222.50"></text></g><g><title>0x7fcaaedf8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="591" y="228" width="2" height="15" fill="rgb(230,68,11)"/><text x="594.00" y="238.50"></text></g><g><title>0x7fcaaee08540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="591" y="244" width="2" height="15" fill="rgb(229,86,6)"/><text x="594.00" y="254.50"></text></g><g><title>0x7fcaaeddd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="591" y="260" width="2" height="15" fill="rgb(216,225,3)"/><text x="594.00" y="270.50"></text></g><g><title>0x7fcaaeddc530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="591" y="276" width="2" height="15" fill="rgb(253,145,32)"/><text x="594.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (1 samples, 0.19%)</title><rect x="591" y="292" width="2" height="15" fill="rgb(227,12,11)"/><text x="594.00" y="302.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (4 samples, 0.75%)</title><rect x="593" y="212" width="9" height="15" fill="rgb(205,111,32)"/><text x="596.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.57%)</title><rect x="595" y="228" width="7" height="15" fill="rgb(205,33,29)"/><text x="598.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.38%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(217,162,51)"/><text x="600.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.38%)</title><rect x="602" y="212" width="4" height="15" fill="rgb(220,146,17)"/><text x="605.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.38%)</title><rect x="602" y="228" width="4" height="15" fill="rgb(244,96,35)"/><text x="605.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.38%)</title><rect x="602" y="244" width="4" height="15" fill="rgb(245,48,36)"/><text x="605.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.19%)</title><rect x="606" y="212" width="2" height="15" fill="rgb(224,5,14)"/><text x="609.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.19%)</title><rect x="606" y="228" width="2" height="15" fill="rgb(228,179,41)"/><text x="609.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="606" y="244" width="2" height="15" fill="rgb(210,90,31)"/><text x="609.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.19%)</title><rect x="606" y="260" width="2" height="15" fill="rgb(244,141,30)"/><text x="609.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.19%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(221,84,29)"/><text x="609.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(217,61,5)"/><text x="609.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="606" y="308" width="2" height="15" fill="rgb(239,103,16)"/><text x="609.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="606" y="324" width="2" height="15" fill="rgb(249,46,46)"/><text x="609.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="615" y="276" width="2" height="15" fill="rgb(250,52,45)"/><text x="618.00" y="286.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (2 samples, 0.38%)</title><rect x="617" y="340" width="5" height="15" fill="rgb(232,179,6)"/><text x="620.00" y="350.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c) (1 samples, 0.19%)</title><rect x="620" y="356" width="2" height="15" fill="rgb(205,3,31)"/><text x="623.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (4 samples, 0.75%)</title><rect x="615" y="260" width="9" height="15" fill="rgb(252,18,45)"/><text x="618.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (3 samples, 0.57%)</title><rect x="617" y="276" width="7" height="15" fill="rgb(207,165,19)"/><text x="620.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (3 samples, 0.57%)</title><rect x="617" y="292" width="7" height="15" fill="rgb(254,193,23)"/><text x="620.00" y="302.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (3 samples, 0.57%)</title><rect x="617" y="308" width="7" height="15" fill="rgb(249,19,33)"/><text x="620.00" y="318.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (3 samples, 0.57%)</title><rect x="617" y="324" width="7" height="15" fill="rgb(208,33,4)"/><text x="620.00" y="334.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="622" y="340" width="2" height="15" fill="rgb(216,96,29)"/><text x="625.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="622" y="356" width="2" height="15" fill="rgb(207,24,0)"/><text x="625.00" y="366.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.19%)</title><rect x="624" y="260" width="2" height="15" fill="rgb(239,172,26)"/><text x="627.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="626" y="260" width="2" height="15" fill="rgb(237,94,28)"/><text x="629.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.19%)</title><rect x="626" y="276" width="2" height="15" fill="rgb(210,123,38)"/><text x="629.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.19%)</title><rect x="626" y="292" width="2" height="15" fill="rgb(207,8,20)"/><text x="629.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="626" y="308" width="2" height="15" fill="rgb(252,67,19)"/><text x="629.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="626" y="324" width="2" height="15" fill="rgb(253,81,52)"/><text x="629.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.38%)</title><rect x="628" y="260" width="5" height="15" fill="rgb(246,142,34)"/><text x="631.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="631" y="276" width="2" height="15" fill="rgb(219,193,46)"/><text x="634.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="631" y="292" width="2" height="15" fill="rgb(206,154,34)"/><text x="634.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="631" y="308" width="2" height="15" fill="rgb(247,221,13)"/><text x="634.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="631" y="324" width="2" height="15" fill="rgb(220,41,25)"/><text x="634.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.19%)</title><rect x="631" y="340" width="2" height="15" fill="rgb(245,85,27)"/><text x="634.00" y="350.50"></text></g><g><title>npy_is_aligned (common.h) (1 samples, 0.19%)</title><rect x="631" y="356" width="2" height="15" fill="rgb(207,6,18)"/><text x="634.00" y="366.50"></text></g><g><title>array_multiply (number.c) (16 samples, 3.02%)</title><rect x="608" y="212" width="36" height="15" fill="rgb(211,165,22)"/><text x="611.00" y="222.50">arr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.64%)</title><rect x="613" y="228" width="31" height="15" fill="rgb(219,224,32)"/><text x="616.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.45%)</title><rect x="615" y="244" width="29" height="15" fill="rgb(217,203,49)"/><text x="618.00" y="254.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.94%)</title><rect x="633" y="260" width="11" height="15" fill="rgb(224,49,35)"/><text x="636.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.57%)</title><rect x="637" y="276" width="7" height="15" fill="rgb(209,44,29)"/><text x="640.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.38%)</title><rect x="640" y="292" width="4" height="15" fill="rgb(211,94,31)"/><text x="643.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.19%)</title><rect x="646" y="228" width="2" height="15" fill="rgb(234,77,6)"/><text x="649.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.19%)</title><rect x="646" y="244" width="2" height="15" fill="rgb(248,24,42)"/><text x="649.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="646" y="260" width="2" height="15" fill="rgb(238,173,11)"/><text x="649.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="646" y="276" width="2" height="15" fill="rgb(209,110,44)"/><text x="649.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 0.75%)</title><rect x="644" y="212" width="9" height="15" fill="rgb(218,194,48)"/><text x="647.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.38%)</title><rect x="648" y="228" width="5" height="15" fill="rgb(242,184,14)"/><text x="651.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="655" y="308" width="2" height="15" fill="rgb(221,201,51)"/><text x="658.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c) (1 samples, 0.19%)</title><rect x="655" y="324" width="2" height="15" fill="rgb(226,97,6)"/><text x="658.00" y="334.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.19%)</title><rect x="657" y="308" width="3" height="15" fill="rgb(237,133,46)"/><text x="660.00" y="318.50"></text></g><g><title>array_subtract (number.c) (4 samples, 0.75%)</title><rect x="653" y="212" width="9" height="15" fill="rgb(206,199,29)"/><text x="656.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.75%)</title><rect x="653" y="228" width="9" height="15" fill="rgb(231,75,15)"/><text x="656.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.75%)</title><rect x="653" y="244" width="9" height="15" fill="rgb(213,119,35)"/><text x="656.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.75%)</title><rect x="653" y="260" width="9" height="15" fill="rgb(229,69,43)"/><text x="656.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.75%)</title><rect x="653" y="276" width="9" height="15" fill="rgb(230,72,36)"/><text x="656.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.75%)</title><rect x="653" y="292" width="9" height="15" fill="rgb(208,63,49)"/><text x="656.00" y="302.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.19%)</title><rect x="660" y="308" width="2" height="15" fill="rgb(213,100,21)"/><text x="663.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.57%)</title><rect x="669" y="276" width="6" height="15" fill="rgb(251,160,54)"/><text x="672.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.57%)</title><rect x="669" y="292" width="6" height="15" fill="rgb(227,213,23)"/><text x="672.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.57%)</title><rect x="669" y="308" width="6" height="15" fill="rgb(234,188,41)"/><text x="672.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.57%)</title><rect x="669" y="324" width="6" height="15" fill="rgb(239,70,54)"/><text x="672.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.57%)</title><rect x="669" y="340" width="6" height="15" fill="rgb(221,82,40)"/><text x="672.00" y="350.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="677" y="292" width="3" height="15" fill="rgb(248,201,26)"/><text x="680.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="682" y="340" width="2" height="15" fill="rgb(218,106,43)"/><text x="685.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.57%)</title><rect x="680" y="324" width="6" height="15" fill="rgb(254,107,42)"/><text x="683.00" y="334.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="684" y="340" width="2" height="15" fill="rgb(217,211,26)"/><text x="687.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.75%)</title><rect x="680" y="308" width="9" height="15" fill="rgb(252,74,42)"/><text x="683.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="686" y="324" width="3" height="15" fill="rgb(234,166,40)"/><text x="689.00" y="334.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.45%)</title><rect x="662" y="212" width="29" height="15" fill="rgb(222,107,18)"/><text x="665.00" y="222.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.45%)</title><rect x="662" y="228" width="29" height="15" fill="rgb(210,152,6)"/><text x="665.00" y="238.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 2.26%)</title><rect x="664" y="244" width="27" height="15" fill="rgb(227,81,17)"/><text x="667.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (10 samples, 1.89%)</title><rect x="669" y="260" width="22" height="15" fill="rgb(210,160,43)"/><text x="672.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 1.32%)</title><rect x="675" y="276" width="16" height="15" fill="rgb(240,138,7)"/><text x="678.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (5 samples, 0.94%)</title><rect x="680" y="292" width="11" height="15" fill="rgb(210,55,47)"/><text x="683.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.19%)</title><rect x="689" y="308" width="2" height="15" fill="rgb(226,224,45)"/><text x="692.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="689" y="324" width="2" height="15" fill="rgb(247,100,33)"/><text x="692.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="689" y="340" width="2" height="15" fill="rgb(252,10,19)"/><text x="692.00" y="350.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.19%)</title><rect x="695" y="228" width="2" height="15" fill="rgb(241,147,10)"/><text x="698.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.38%)</title><rect x="724" y="356" width="5" height="15" fill="rgb(229,100,24)"/><text x="727.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.38%)</title><rect x="724" y="372" width="5" height="15" fill="rgb(211,203,45)"/><text x="727.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.38%)</title><rect x="724" y="388" width="5" height="15" fill="rgb(249,123,2)"/><text x="727.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.38%)</title><rect x="724" y="404" width="5" height="15" fill="rgb(221,108,17)"/><text x="727.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.38%)</title><rect x="724" y="420" width="5" height="15" fill="rgb(240,125,51)"/><text x="727.00" y="430.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.19%)</title><rect x="729" y="372" width="2" height="15" fill="rgb(248,20,42)"/><text x="732.00" y="382.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (5 samples, 0.94%)</title><rect x="724" y="324" width="11" height="15" fill="rgb(233,153,47)"/><text x="727.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.94%)</title><rect x="724" y="340" width="11" height="15" fill="rgb(249,25,8)"/><text x="727.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.57%)</title><rect x="729" y="356" width="6" height="15" fill="rgb(230,153,1)"/><text x="732.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.38%)</title><rect x="731" y="372" width="4" height="15" fill="rgb(232,119,33)"/><text x="734.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.38%)</title><rect x="731" y="388" width="4" height="15" fill="rgb(249,78,9)"/><text x="734.00" y="398.50"></text></g><g><title>_borrowed_reference (ufunc_object.c) (1 samples, 0.19%)</title><rect x="733" y="404" width="2" height="15" fill="rgb(245,229,28)"/><text x="736.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (2 samples, 0.38%)</title><rect x="735" y="324" width="5" height="15" fill="rgb(246,101,25)"/><text x="738.00" y="334.50"></text></g><g><title>arraydescr_isnative_get (descriptor.c) (1 samples, 0.19%)</title><rect x="738" y="340" width="2" height="15" fill="rgb(207,50,12)"/><text x="741.00" y="350.50"></text></g><g><title>_arraydescr_isnative (descriptor.c) (1 samples, 0.19%)</title><rect x="738" y="356" width="2" height="15" fill="rgb(238,223,10)"/><text x="741.00" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.57%)</title><rect x="758" y="340" width="6" height="15" fill="rgb(208,41,7)"/><text x="761.00" y="350.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (2 samples, 0.38%)</title><rect x="766" y="356" width="5" height="15" fill="rgb(228,1,39)"/><text x="769.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.38%)</title><rect x="771" y="372" width="4" height="15" fill="rgb(215,92,31)"/><text x="774.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.38%)</title><rect x="771" y="388" width="4" height="15" fill="rgb(205,136,25)"/><text x="774.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.38%)</title><rect x="771" y="404" width="4" height="15" fill="rgb(239,210,47)"/><text x="774.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.38%)</title><rect x="771" y="420" width="4" height="15" fill="rgb(209,149,42)"/><text x="774.00" y="430.50"></text></g><g><title>0x7fcad53cbe6d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(205,214,27)"/><text x="792.00" y="398.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="800" y="420" width="2" height="15" fill="rgb(206,203,17)"/><text x="803.00" y="430.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.19%)</title><rect x="802" y="452" width="2" height="15" fill="rgb(223,144,12)"/><text x="805.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (19 samples, 3.58%)</title><rect x="764" y="340" width="43" height="15" fill="rgb(252,154,31)"/><text x="767.00" y="350.50">ndim..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 3.02%)</title><rect x="771" y="356" width="36" height="15" fill="rgb(207,119,36)"/><text x="774.00" y="366.50">arr..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (14 samples, 2.64%)</title><rect x="775" y="372" width="32" height="15" fill="rgb(239,141,36)"/><text x="778.00" y="382.50">nd..</text></g><g><title>asarray (numpy/core/_asarray.py) (7 samples, 1.32%)</title><rect x="791" y="388" width="16" height="15" fill="rgb(219,78,52)"/><text x="794.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.75%)</title><rect x="798" y="404" width="9" height="15" fill="rgb(220,46,9)"/><text x="801.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.38%)</title><rect x="802" y="420" width="5" height="15" fill="rgb(237,167,50)"/><text x="805.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.38%)</title><rect x="802" y="436" width="5" height="15" fill="rgb(244,71,12)"/><text x="805.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="804" y="452" width="3" height="15" fill="rgb(248,71,3)"/><text x="807.00" y="462.50"></text></g><g><title>OBJECT_setitem (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="804" y="468" width="3" height="15" fill="rgb(206,149,29)"/><text x="807.00" y="478.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.19%)</title><rect x="807" y="356" width="2" height="15" fill="rgb(231,51,27)"/><text x="810.00" y="366.50"></text></g><g><title>0x7fcad45d77c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="807" y="372" width="2" height="15" fill="rgb(212,23,32)"/><text x="810.00" y="382.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.57%)</title><rect x="809" y="356" width="6" height="15" fill="rgb(243,222,41)"/><text x="812.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.57%)</title><rect x="809" y="372" width="6" height="15" fill="rgb(253,122,23)"/><text x="812.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.19%)</title><rect x="813" y="388" width="2" height="15" fill="rgb(210,224,42)"/><text x="816.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.19%)</title><rect x="813" y="404" width="2" height="15" fill="rgb(231,98,34)"/><text x="816.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.19%)</title><rect x="813" y="420" width="2" height="15" fill="rgb(243,11,5)"/><text x="816.00" y="430.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="818" y="372" width="2" height="15" fill="rgb(210,211,32)"/><text x="821.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.19%)</title><rect x="822" y="404" width="2" height="15" fill="rgb(242,39,11)"/><text x="825.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.57%)</title><rect x="820" y="372" width="7" height="15" fill="rgb(219,167,41)"/><text x="823.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.38%)</title><rect x="822" y="388" width="5" height="15" fill="rgb(208,25,1)"/><text x="825.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="824" y="404" width="3" height="15" fill="rgb(207,23,52)"/><text x="827.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.70%)</title><rect x="815" y="356" width="21" height="15" fill="rgb(235,133,11)"/><text x="818.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (4 samples, 0.75%)</title><rect x="827" y="372" width="9" height="15" fill="rgb(249,76,44)"/><text x="830.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="833" y="388" width="3" height="15" fill="rgb(252,73,6)"/><text x="836.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="833" y="404" width="3" height="15" fill="rgb(221,33,11)"/><text x="836.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (60 samples, 11.32%)</title><rect x="704" y="244" width="134" height="15" fill="rgb(241,149,20)"/><text x="707.00" y="254.50">clip (numpy/core..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (59 samples, 11.13%)</title><rect x="706" y="260" width="132" height="15" fill="rgb(237,4,32)"/><text x="709.00" y="270.50">_wrapfunc (numpy..</text></g><g><title>array_clip (methods.c) (58 samples, 10.94%)</title><rect x="709" y="276" width="129" height="15" fill="rgb(210,83,23)"/><text x="712.00" y="286.50">array_clip (meth..</text></g><g><title>forward_ndarray_method (methods.c) (56 samples, 10.57%)</title><rect x="713" y="292" width="125" height="15" fill="rgb(239,63,25)"/><text x="716.00" y="302.50">forward_ndarray..</text></g><g><title>_clip (numpy/core/_methods.py) (55 samples, 10.38%)</title><rect x="715" y="308" width="123" height="15" fill="rgb(226,192,14)"/><text x="718.00" y="318.50">_clip (numpy/co..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (44 samples, 8.30%)</title><rect x="740" y="324" width="98" height="15" fill="rgb(249,225,48)"/><text x="743.00" y="334.50">_clip_dep_i..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.64%)</title><rect x="807" y="340" width="31" height="15" fill="rgb(209,62,35)"/><text x="810.00" y="350.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="836" y="356" width="2" height="15" fill="rgb(205,24,13)"/><text x="839.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.19%)</title><rect x="836" y="372" width="2" height="15" fill="rgb(209,186,21)"/><text x="839.00" y="382.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.19%)</title><rect x="838" y="292" width="2" height="15" fill="rgb(228,139,7)"/><text x="841.00" y="302.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (69 samples, 13.02%)</title><rect x="691" y="212" width="153" height="15" fill="rgb(219,154,32)"/><text x="694.00" y="222.50">clip (&lt;__array_func..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (66 samples, 12.45%)</title><rect x="697" y="228" width="147" height="15" fill="rgb(223,13,22)"/><text x="700.00" y="238.50">array_implement_ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.57%)</title><rect x="838" y="244" width="6" height="15" fill="rgb(239,215,13)"/><text x="841.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.57%)</title><rect x="838" y="260" width="6" height="15" fill="rgb(221,187,38)"/><text x="841.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.57%)</title><rect x="838" y="276" width="6" height="15" fill="rgb(250,179,43)"/><text x="841.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.38%)</title><rect x="840" y="292" width="4" height="15" fill="rgb(240,134,21)"/><text x="843.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="860" y="308" width="2" height="15" fill="rgb(222,206,54)"/><text x="863.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="860" y="324" width="2" height="15" fill="rgb(249,197,1)"/><text x="863.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="860" y="340" width="2" height="15" fill="rgb(243,142,18)"/><text x="863.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="862" y="308" width="2" height="15" fill="rgb(240,138,46)"/><text x="865.00" y="318.50"></text></g><g><title>0x7fcaaedf8f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="860" y="244" width="7" height="15" fill="rgb(242,111,44)"/><text x="863.00" y="254.50"></text></g><g><title>0x7fcaaede8d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="860" y="260" width="7" height="15" fill="rgb(239,54,34)"/><text x="863.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.57%)</title><rect x="860" y="276" width="7" height="15" fill="rgb(216,228,50)"/><text x="863.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.57%)</title><rect x="860" y="292" width="7" height="15" fill="rgb(231,117,50)"/><text x="863.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.19%)</title><rect x="864" y="308" width="3" height="15" fill="rgb(224,4,7)"/><text x="867.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.19%)</title><rect x="864" y="324" width="3" height="15" fill="rgb(216,128,23)"/><text x="867.00" y="334.50"></text></g><g><title>0x7fcaaedf8f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="867" y="244" width="2" height="15" fill="rgb(250,75,43)"/><text x="870.00" y="254.50"></text></g><g><title>0x7fcaaee08272 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="869" y="260" width="2" height="15" fill="rgb(220,168,14)"/><text x="872.00" y="270.50"></text></g><g><title>0x7fcaaede12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="871" y="324" width="5" height="15" fill="rgb(236,174,43)"/><text x="874.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.38%)</title><rect x="871" y="340" width="5" height="15" fill="rgb(206,154,49)"/><text x="874.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.38%)</title><rect x="871" y="356" width="5" height="15" fill="rgb(252,210,1)"/><text x="874.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.38%)</title><rect x="871" y="372" width="5" height="15" fill="rgb(229,47,26)"/><text x="874.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.38%)</title><rect x="871" y="388" width="5" height="15" fill="rgb(213,150,3)"/><text x="874.00" y="398.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.19%)</title><rect x="873" y="404" width="3" height="15" fill="rgb(232,127,24)"/><text x="876.00" y="414.50"></text></g><g><title>0x7fcaaedebd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="871" y="292" width="7" height="15" fill="rgb(206,149,4)"/><text x="874.00" y="302.50"></text></g><g><title>0x7fcaaedeb666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.57%)</title><rect x="871" y="308" width="7" height="15" fill="rgb(207,23,44)"/><text x="874.00" y="318.50"></text></g><g><title>0x7fcaaede1306 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="876" y="324" width="2" height="15" fill="rgb(246,89,29)"/><text x="879.00" y="334.50"></text></g><g><title>0x7fcaaedebe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="878" y="292" width="2" height="15" fill="rgb(212,52,25)"/><text x="881.00" y="302.50"></text></g><g><title>0x7fcaaeddef22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="878" y="308" width="2" height="15" fill="rgb(224,225,0)"/><text x="881.00" y="318.50"></text></g><g><title>0x7fcaaee072df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.94%)</title><rect x="871" y="276" width="11" height="15" fill="rgb(245,190,25)"/><text x="874.00" y="286.50"></text></g><g><title>0x7fcaaedebefd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="880" y="292" width="2" height="15" fill="rgb(241,130,4)"/><text x="883.00" y="302.50"></text></g><g><title>0x7fcaaeddc2a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="880" y="308" width="2" height="15" fill="rgb(231,94,0)"/><text x="883.00" y="318.50"></text></g><g><title>0x7fcaaee072fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="882" y="276" width="2" height="15" fill="rgb(228,172,19)"/><text x="885.00" y="286.50"></text></g><g><title>0x7fcaaee074b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="884" y="276" width="3" height="15" fill="rgb(247,221,33)"/><text x="887.00" y="286.50"></text></g><g><title>0x7fcaaee07592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="887" y="276" width="4" height="15" fill="rgb(209,176,10)"/><text x="890.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.38%)</title><rect x="887" y="292" width="4" height="15" fill="rgb(248,28,53)"/><text x="890.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="889" y="308" width="2" height="15" fill="rgb(208,166,5)"/><text x="892.00" y="318.50"></text></g><g><title>0x7fcaaee07644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="891" y="276" width="2" height="15" fill="rgb(230,76,40)"/><text x="894.00" y="286.50"></text></g><g><title>0x7fcaaee08405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.08%)</title><rect x="871" y="260" width="25" height="15" fill="rgb(206,39,38)"/><text x="874.00" y="270.50">0..</text></g><g><title>0x7fcaaee07c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="893" y="276" width="3" height="15" fill="rgb(217,39,49)"/><text x="896.00" y="286.50"></text></g><g><title>0x7fcaaeddf529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="893" y="292" width="3" height="15" fill="rgb(243,59,3)"/><text x="896.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.19%)</title><rect x="893" y="308" width="3" height="15" fill="rgb(241,128,45)"/><text x="896.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.19%)</title><rect x="893" y="324" width="3" height="15" fill="rgb(238,92,41)"/><text x="896.00" y="334.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.19%)</title><rect x="893" y="340" width="3" height="15" fill="rgb(231,58,3)"/><text x="896.00" y="350.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.19%)</title><rect x="893" y="356" width="3" height="15" fill="rgb(253,184,7)"/><text x="896.00" y="366.50"></text></g><g><title>0x7fcaaedf8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 2.45%)</title><rect x="869" y="244" width="29" height="15" fill="rgb(218,125,35)"/><text x="872.00" y="254.50">0x..</text></g><g><title>0x7fcaaee08540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="896" y="260" width="2" height="15" fill="rgb(211,9,18)"/><text x="899.00" y="270.50"></text></g><g><title>0x7fcaaeddd2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="896" y="276" width="2" height="15" fill="rgb(251,40,47)"/><text x="899.00" y="286.50"></text></g><g><title>0x7fcaaeddc4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="896" y="292" width="2" height="15" fill="rgb(224,206,24)"/><text x="899.00" y="302.50"></text></g><g><title>0x7fcaaedf8fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="898" y="244" width="2" height="15" fill="rgb(249,13,45)"/><text x="901.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="900" y="276" width="2" height="15" fill="rgb(233,67,29)"/><text x="903.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.19%)</title><rect x="900" y="292" width="2" height="15" fill="rgb(222,156,40)"/><text x="903.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.19%)</title><rect x="900" y="308" width="2" height="15" fill="rgb(242,30,14)"/><text x="903.00" y="318.50"></text></g><g><title>0x7fcaaedf905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="900" y="244" width="5" height="15" fill="rgb(223,228,24)"/><text x="903.00" y="254.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.38%)</title><rect x="900" y="260" width="5" height="15" fill="rgb(245,47,3)"/><text x="903.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.19%)</title><rect x="902" y="276" width="3" height="15" fill="rgb(228,158,12)"/><text x="905.00" y="286.50"></text></g><g><title>0x7fcaaedf914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="905" y="244" width="2" height="15" fill="rgb(245,137,16)"/><text x="908.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="905" y="260" width="2" height="15" fill="rgb(208,171,29)"/><text x="908.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="905" y="276" width="2" height="15" fill="rgb(221,71,37)"/><text x="908.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="905" y="292" width="2" height="15" fill="rgb(226,46,30)"/><text x="908.00" y="302.50"></text></g><g><title>0x7fcaaedf91bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="907" y="244" width="2" height="15" fill="rgb(213,126,22)"/><text x="910.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.19%)</title><rect x="907" y="260" width="2" height="15" fill="rgb(237,44,37)"/><text x="910.00" y="270.50"></text></g><g><title>0x7fcaaedf9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 4.53%)</title><rect x="860" y="228" width="53" height="15" fill="rgb(238,99,7)"/><text x="863.00" y="238.50">0x7fc..</text></g><g><title>0x7fcaaedf9328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.38%)</title><rect x="909" y="244" width="4" height="15" fill="rgb(249,226,26)"/><text x="912.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.38%)</title><rect x="909" y="260" width="4" height="15" fill="rgb(224,56,7)"/><text x="912.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.38%)</title><rect x="909" y="276" width="4" height="15" fill="rgb(223,166,38)"/><text x="912.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.38%)</title><rect x="909" y="292" width="4" height="15" fill="rgb(250,0,1)"/><text x="912.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="911" y="308" width="2" height="15" fill="rgb(251,170,18)"/><text x="914.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="911" y="324" width="2" height="15" fill="rgb(232,135,15)"/><text x="914.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="911" y="340" width="2" height="15" fill="rgb(239,20,45)"/><text x="914.00" y="350.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.57%)</title><rect x="940" y="260" width="7" height="15" fill="rgb(215,204,16)"/><text x="943.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.19%)</title><rect x="947" y="260" width="2" height="15" fill="rgb(240,12,12)"/><text x="950.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.19%)</title><rect x="949" y="260" width="2" height="15" fill="rgb(243,173,47)"/><text x="952.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.19%)</title><rect x="956" y="276" width="2" height="15" fill="rgb(231,16,40)"/><text x="959.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 0.94%)</title><rect x="951" y="260" width="11" height="15" fill="rgb(226,15,10)"/><text x="954.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.38%)</title><rect x="958" y="276" width="4" height="15" fill="rgb(210,182,12)"/><text x="961.00" y="286.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="962" y="260" width="3" height="15" fill="rgb(254,22,4)"/><text x="965.00" y="270.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.19%)</title><rect x="962" y="276" width="3" height="15" fill="rgb(205,3,6)"/><text x="965.00" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 1.89%)</title><rect x="965" y="260" width="22" height="15" fill="rgb(210,217,38)"/><text x="968.00" y="270.50">_..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.19%)</title><rect x="985" y="276" width="2" height="15" fill="rgb(208,149,7)"/><text x="988.00" y="286.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.19%)</title><rect x="985" y="292" width="2" height="15" fill="rgb(230,68,14)"/><text x="988.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (40 samples, 7.55%)</title><rect x="913" y="228" width="89" height="15" fill="rgb(234,222,45)"/><text x="916.00" y="238.50">_validate_..</text></g><g><title>check_array (sklearn/utils/validation.py) (38 samples, 7.17%)</title><rect x="918" y="244" width="84" height="15" fill="rgb(215,8,26)"/><text x="921.00" y="254.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.32%)</title><rect x="987" y="260" width="15" height="15" fill="rgb(248,66,22)"/><text x="990.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.75%)</title><rect x="994" y="276" width="8" height="15" fill="rgb(215,77,1)"/><text x="997.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="1002" y="244" width="3" height="15" fill="rgb(230,159,12)"/><text x="1005.00" y="254.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1005" y="244" width="2" height="15" fill="rgb(245,82,30)"/><text x="1008.00" y="254.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.57%)</title><rect x="1002" y="228" width="7" height="15" fill="rgb(228,220,44)"/><text x="1005.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.19%)</title><rect x="1007" y="244" width="2" height="15" fill="rgb(237,152,47)"/><text x="1010.00" y="254.50"></text></g><g><title>array_inplace_true_divide (number.c) (1 samples, 0.19%)</title><rect x="1009" y="228" width="2" height="15" fill="rgb(243,219,3)"/><text x="1012.00" y="238.50"></text></g><g><title>0x7fcad45d89c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1016" y="260" width="2" height="15" fill="rgb(250,52,11)"/><text x="1019.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="1018" y="260" width="2" height="15" fill="rgb(223,127,16)"/><text x="1021.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="1018" y="276" width="2" height="15" fill="rgb(248,16,3)"/><text x="1021.00" y="286.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1023" y="308" width="2" height="15" fill="rgb(210,155,52)"/><text x="1026.00" y="318.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="1023" y="324" width="2" height="15" fill="rgb(208,210,33)"/><text x="1026.00" y="334.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.19%)</title><rect x="1023" y="340" width="2" height="15" fill="rgb(216,218,32)"/><text x="1026.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="1023" y="276" width="4" height="15" fill="rgb(227,68,46)"/><text x="1026.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.38%)</title><rect x="1023" y="292" width="4" height="15" fill="rgb(229,220,34)"/><text x="1026.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1025" y="308" width="2" height="15" fill="rgb(218,13,50)"/><text x="1028.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1027" y="276" width="2" height="15" fill="rgb(254,77,20)"/><text x="1030.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1027" y="292" width="2" height="15" fill="rgb(224,72,28)"/><text x="1030.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1027" y="308" width="2" height="15" fill="rgb(238,38,39)"/><text x="1030.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1027" y="324" width="2" height="15" fill="rgb(245,183,23)"/><text x="1030.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.19%)</title><rect x="1027" y="340" width="2" height="15" fill="rgb(209,107,37)"/><text x="1030.00" y="350.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.19%)</title><rect x="1027" y="356" width="2" height="15" fill="rgb(250,14,54)"/><text x="1030.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.19%)</title><rect x="1029" y="292" width="2" height="15" fill="rgb(235,149,7)"/><text x="1032.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1029" y="308" width="2" height="15" fill="rgb(252,30,24)"/><text x="1032.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1029" y="324" width="2" height="15" fill="rgb(247,183,40)"/><text x="1032.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.13%)</title><rect x="1020" y="260" width="14" height="15" fill="rgb(222,27,35)"/><text x="1023.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1029" y="276" width="5" height="15" fill="rgb(253,195,35)"/><text x="1032.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.19%)</title><rect x="1031" y="292" width="3" height="15" fill="rgb(242,163,1)"/><text x="1034.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c) (11 samples, 2.08%)</title><rect x="1011" y="228" width="25" height="15" fill="rgb(242,75,44)"/><text x="1014.00" y="238.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.89%)</title><rect x="1014" y="244" width="22" height="15" fill="rgb(227,89,48)"/><text x="1017.00" y="254.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.19%)</title><rect x="1034" y="260" width="2" height="15" fill="rgb(231,164,23)"/><text x="1037.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.19%)</title><rect x="1034" y="276" width="2" height="15" fill="rgb(226,95,17)"/><text x="1037.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.19%)</title><rect x="1034" y="292" width="2" height="15" fill="rgb(219,58,1)"/><text x="1037.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.19%)</title><rect x="1036" y="228" width="2" height="15" fill="rgb(205,45,36)"/><text x="1039.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.94%)</title><rect x="1047" y="292" width="11" height="15" fill="rgb(231,200,26)"/><text x="1050.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.94%)</title><rect x="1047" y="308" width="11" height="15" fill="rgb(206,36,44)"/><text x="1050.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 0.94%)</title><rect x="1047" y="324" width="11" height="15" fill="rgb(239,84,13)"/><text x="1050.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.94%)</title><rect x="1047" y="340" width="11" height="15" fill="rgb(244,197,30)"/><text x="1050.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.94%)</title><rect x="1047" y="356" width="11" height="15" fill="rgb(250,163,33)"/><text x="1050.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1065" y="356" width="2" height="15" fill="rgb(242,30,32)"/><text x="1068.00" y="366.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1065" y="372" width="2" height="15" fill="rgb(253,213,45)"/><text x="1068.00" y="382.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.19%)</title><rect x="1065" y="388" width="2" height="15" fill="rgb(228,132,30)"/><text x="1068.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.19%)</title><rect x="1067" y="356" width="2" height="15" fill="rgb(248,22,13)"/><text x="1070.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.38%)</title><rect x="1069" y="356" width="5" height="15" fill="rgb(207,227,51)"/><text x="1072.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (6 samples, 1.13%)</title><rect x="1063" y="340" width="13" height="15" fill="rgb(236,135,11)"/><text x="1066.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1074" y="356" width="2" height="15" fill="rgb(245,181,54)"/><text x="1077.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1078" y="372" width="2" height="15" fill="rgb(249,64,45)"/><text x="1081.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1078" y="388" width="2" height="15" fill="rgb(210,171,24)"/><text x="1081.00" y="398.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.19%)</title><rect x="1078" y="404" width="2" height="15" fill="rgb(250,89,0)"/><text x="1081.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.57%)</title><rect x="1076" y="340" width="7" height="15" fill="rgb(212,112,45)"/><text x="1079.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.57%)</title><rect x="1076" y="356" width="7" height="15" fill="rgb(217,146,9)"/><text x="1079.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1080" y="372" width="3" height="15" fill="rgb(234,158,50)"/><text x="1083.00" y="382.50"></text></g><g><title>0x7fcad53d5d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1080" y="388" width="3" height="15" fill="rgb(233,33,32)"/><text x="1083.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 2.08%)</title><rect x="1060" y="324" width="25" height="15" fill="rgb(235,122,33)"/><text x="1063.00" y="334.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.19%)</title><rect x="1083" y="340" width="2" height="15" fill="rgb(234,142,44)"/><text x="1086.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="1083" y="356" width="2" height="15" fill="rgb(246,199,23)"/><text x="1086.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.19%)</title><rect x="1083" y="372" width="2" height="15" fill="rgb(227,147,52)"/><text x="1086.00" y="382.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.19%)</title><rect x="1083" y="388" width="2" height="15" fill="rgb(234,219,17)"/><text x="1086.00" y="398.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.19%)</title><rect x="1083" y="404" width="2" height="15" fill="rgb(225,118,32)"/><text x="1086.00" y="414.50"></text></g><g><title>array_sum (methods.c) (24 samples, 4.53%)</title><rect x="1038" y="228" width="54" height="15" fill="rgb(237,94,53)"/><text x="1041.00" y="238.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (24 samples, 4.53%)</title><rect x="1038" y="244" width="54" height="15" fill="rgb(223,199,5)"/><text x="1041.00" y="254.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (22 samples, 4.15%)</title><rect x="1043" y="260" width="49" height="15" fill="rgb(218,147,2)"/><text x="1046.00" y="270.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (20 samples, 3.77%)</title><rect x="1047" y="276" width="45" height="15" fill="rgb(249,192,22)"/><text x="1050.00" y="286.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 2.83%)</title><rect x="1058" y="292" width="34" height="15" fill="rgb(214,53,35)"/><text x="1061.00" y="302.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (14 samples, 2.64%)</title><rect x="1060" y="308" width="32" height="15" fill="rgb(221,117,27)"/><text x="1063.00" y="318.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1085" y="324" width="7" height="15" fill="rgb(254,6,14)"/><text x="1088.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1089" y="340" width="3" height="15" fill="rgb(234,37,27)"/><text x="1092.00" y="350.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1089" y="356" width="3" height="15" fill="rgb(242,72,40)"/><text x="1092.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 2.64%)</title><rect x="1096" y="244" width="31" height="15" fill="rgb(248,63,47)"/><text x="1099.00" y="254.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.94%)</title><rect x="1116" y="260" width="11" height="15" fill="rgb(220,213,25)"/><text x="1119.00" y="270.50"></text></g><g><title>0x7fcad5493160 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1125" y="276" width="2" height="15" fill="rgb(232,157,34)"/><text x="1128.00" y="286.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 3.21%)</title><rect x="1092" y="228" width="37" height="15" fill="rgb(228,229,36)"/><text x="1095.00" y="238.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.19%)</title><rect x="1127" y="244" width="2" height="15" fill="rgb(229,61,48)"/><text x="1130.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1134" y="308" width="2" height="15" fill="rgb(237,220,47)"/><text x="1137.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.19%)</title><rect x="1134" y="324" width="2" height="15" fill="rgb(222,38,15)"/><text x="1137.00" y="334.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.19%)</title><rect x="1134" y="340" width="2" height="15" fill="rgb(236,115,21)"/><text x="1137.00" y="350.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.19%)</title><rect x="1134" y="356" width="2" height="15" fill="rgb(239,145,11)"/><text x="1137.00" y="366.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1136" y="308" width="2" height="15" fill="rgb(208,142,20)"/><text x="1139.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.19%)</title><rect x="1138" y="308" width="3" height="15" fill="rgb(253,28,40)"/><text x="1141.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.94%)</title><rect x="1132" y="260" width="11" height="15" fill="rgb(248,33,33)"/><text x="1135.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.94%)</title><rect x="1132" y="276" width="11" height="15" fill="rgb(232,79,4)"/><text x="1135.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.75%)</title><rect x="1134" y="292" width="9" height="15" fill="rgb(244,92,29)"/><text x="1137.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1141" y="308" width="2" height="15" fill="rgb(237,9,3)"/><text x="1144.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.19%)</title><rect x="1141" y="324" width="2" height="15" fill="rgb(250,143,52)"/><text x="1144.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (136 samples, 25.66%)</title><rect x="844" y="212" width="303" height="15" fill="rgb(210,225,1)"/><text x="847.00" y="222.50">predict_proba (sklearn/tree/_classes.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.51%)</title><rect x="1129" y="228" width="18" height="15" fill="rgb(251,70,36)"/><text x="1132.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.51%)</title><rect x="1129" y="244" width="18" height="15" fill="rgb(219,211,41)"/><text x="1132.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.38%)</title><rect x="1143" y="260" width="4" height="15" fill="rgb(254,133,40)"/><text x="1146.00" y="270.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1145" y="276" width="2" height="15" fill="rgb(205,123,33)"/><text x="1148.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1145" y="292" width="2" height="15" fill="rgb(242,57,1)"/><text x="1148.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1145" y="308" width="2" height="15" fill="rgb(246,120,46)"/><text x="1148.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1145" y="324" width="2" height="15" fill="rgb(215,208,25)"/><text x="1148.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.19%)</title><rect x="1147" y="228" width="2" height="15" fill="rgb(224,28,19)"/><text x="1150.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.19%)</title><rect x="1147" y="244" width="2" height="15" fill="rgb(209,215,27)"/><text x="1150.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.19%)</title><rect x="1149" y="244" width="3" height="15" fill="rgb(223,43,8)"/><text x="1152.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1152" y="244" width="2" height="15" fill="rgb(232,65,31)"/><text x="1155.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.19%)</title><rect x="1152" y="260" width="2" height="15" fill="rgb(206,125,39)"/><text x="1155.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.19%)</title><rect x="1152" y="276" width="2" height="15" fill="rgb(217,13,1)"/><text x="1155.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (267 samples, 50.38%)</title><rect x="562" y="180" width="594" height="15" fill="rgb(252,77,28)"/><text x="565.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (266 samples, 50.19%)</title><rect x="564" y="196" width="592" height="15" fill="rgb(246,118,30)"/><text x="567.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.75%)</title><rect x="1147" y="212" width="9" height="15" fill="rgb(253,145,27)"/><text x="1150.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1149" y="228" width="7" height="15" fill="rgb(246,16,44)"/><text x="1152.00" y="238.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.19%)</title><rect x="1154" y="244" width="2" height="15" fill="rgb(224,162,13)"/><text x="1157.00" y="254.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.19%)</title><rect x="1154" y="260" width="2" height="15" fill="rgb(217,181,36)"/><text x="1157.00" y="270.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.19%)</title><rect x="1156" y="180" width="2" height="15" fill="rgb(247,163,15)"/><text x="1159.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1156" y="196" width="2" height="15" fill="rgb(238,83,14)"/><text x="1159.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1156" y="212" width="2" height="15" fill="rgb(217,151,42)"/><text x="1159.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1161" y="228" width="2" height="15" fill="rgb(230,124,5)"/><text x="1164.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1161" y="244" width="2" height="15" fill="rgb(245,1,34)"/><text x="1164.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.19%)</title><rect x="1161" y="260" width="2" height="15" fill="rgb(243,27,11)"/><text x="1164.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.19%)</title><rect x="1161" y="276" width="2" height="15" fill="rgb(232,64,8)"/><text x="1164.00" y="286.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.19%)</title><rect x="1161" y="292" width="2" height="15" fill="rgb(217,153,0)"/><text x="1164.00" y="302.50"></text></g><g><title>array_add (number.c) (3 samples, 0.57%)</title><rect x="1158" y="180" width="7" height="15" fill="rgb(248,154,27)"/><text x="1161.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.57%)</title><rect x="1158" y="196" width="7" height="15" fill="rgb(241,56,20)"/><text x="1161.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.38%)</title><rect x="1161" y="212" width="4" height="15" fill="rgb(240,19,20)"/><text x="1164.00" y="222.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1163" y="228" width="2" height="15" fill="rgb(239,0,49)"/><text x="1166.00" y="238.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.19%)</title><rect x="1163" y="244" width="2" height="15" fill="rgb(252,200,35)"/><text x="1166.00" y="254.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.19%)</title><rect x="1163" y="260" width="2" height="15" fill="rgb(221,214,12)"/><text x="1166.00" y="270.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (275 samples, 51.89%)</title><rect x="555" y="100" width="612" height="15" fill="rgb(242,225,5)"/><text x="558.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (275 samples, 51.89%)</title><rect x="555" y="116" width="612" height="15" fill="rgb(242,221,36)"/><text x="558.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (275 samples, 51.89%)</title><rect x="555" y="132" width="612" height="15" fill="rgb(227,55,1)"/><text x="558.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (275 samples, 51.89%)</title><rect x="555" y="148" width="612" height="15" fill="rgb(247,94,11)"/><text x="558.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (272 samples, 51.32%)</title><rect x="562" y="164" width="605" height="15" fill="rgb(215,218,49)"/><text x="565.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_sum (methods.c) (1 samples, 0.19%)</title><rect x="1165" y="180" width="2" height="15" fill="rgb(235,29,21)"/><text x="1168.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.19%)</title><rect x="1165" y="196" width="2" height="15" fill="rgb(216,99,39)"/><text x="1168.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py) (1 samples, 0.19%)</title><rect x="1165" y="212" width="2" height="15" fill="rgb(234,228,30)"/><text x="1168.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1165" y="228" width="2" height="15" fill="rgb(233,48,42)"/><text x="1168.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.19%)</title><rect x="1165" y="244" width="2" height="15" fill="rgb(245,84,44)"/><text x="1168.00" y="254.50"></text></g><g><title>apply_clip (onnxconverter_common/onnx_ops.py) (1 samples, 0.19%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(238,163,19)"/><text x="1170.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.19%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(215,225,12)"/><text x="1170.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/common/_container.py) (1 samples, 0.19%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(245,212,21)"/><text x="1170.00" y="270.50"></text></g><g><title>google::protobuf::python::cmessage::GetAttr (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1167" y="276" width="2" height="15" fill="rgb(205,173,12)"/><text x="1170.00" y="286.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.19%)</title><rect x="1169" y="324" width="3" height="15" fill="rgb(249,47,12)"/><text x="1172.00" y="334.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="1169" y="340" width="3" height="15" fill="rgb(211,164,54)"/><text x="1172.00" y="350.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1169" y="356" width="3" height="15" fill="rgb(209,104,46)"/><text x="1172.00" y="366.50"></text></g><g><title>lazycache (linecache.py) (1 samples, 0.19%)</title><rect x="1172" y="324" width="2" height="15" fill="rgb(225,30,26)"/><text x="1175.00" y="334.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (279 samples, 52.64%)</title><rect x="555" y="68" width="621" height="15" fill="rgb(252,225,51)"/><text x="558.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (279 samples, 52.64%)</title><rect x="555" y="84" width="621" height="15" fill="rgb(217,130,32)"/><text x="558.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.75%)</title><rect x="1167" y="100" width="9" height="15" fill="rgb(233,174,36)"/><text x="1170.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.75%)</title><rect x="1167" y="116" width="9" height="15" fill="rgb(232,28,3)"/><text x="1170.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 0.75%)</title><rect x="1167" y="132" width="9" height="15" fill="rgb(250,90,37)"/><text x="1170.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (4 samples, 0.75%)</title><rect x="1167" y="148" width="9" height="15" fill="rgb(215,171,46)"/><text x="1170.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (4 samples, 0.75%)</title><rect x="1167" y="164" width="9" height="15" fill="rgb(220,37,24)"/><text x="1170.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (4 samples, 0.75%)</title><rect x="1167" y="180" width="9" height="15" fill="rgb(236,173,17)"/><text x="1170.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (4 samples, 0.75%)</title><rect x="1167" y="196" width="9" height="15" fill="rgb(227,124,27)"/><text x="1170.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (4 samples, 0.75%)</title><rect x="1167" y="212" width="9" height="15" fill="rgb(249,188,33)"/><text x="1170.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (3 samples, 0.57%)</title><rect x="1169" y="228" width="7" height="15" fill="rgb(206,175,47)"/><text x="1172.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (3 samples, 0.57%)</title><rect x="1169" y="244" width="7" height="15" fill="rgb(254,118,2)"/><text x="1172.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (3 samples, 0.57%)</title><rect x="1169" y="260" width="7" height="15" fill="rgb(232,90,10)"/><text x="1172.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (3 samples, 0.57%)</title><rect x="1169" y="276" width="7" height="15" fill="rgb(240,162,28)"/><text x="1172.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (3 samples, 0.57%)</title><rect x="1169" y="292" width="7" height="15" fill="rgb(237,7,35)"/><text x="1172.00" y="302.50"></text></g><g><title>extract (traceback.py) (3 samples, 0.57%)</title><rect x="1169" y="308" width="7" height="15" fill="rgb(213,111,16)"/><text x="1172.00" y="318.50"></text></g><g><title>line (traceback.py) (1 samples, 0.19%)</title><rect x="1174" y="324" width="2" height="15" fill="rgb(206,194,8)"/><text x="1177.00" y="334.50"></text></g><g><title>unicode_strip (python3.7) (1 samples, 0.19%)</title><rect x="1174" y="340" width="2" height="15" fill="rgb(226,93,40)"/><text x="1177.00" y="350.50"></text></g><g><title>_pickle_dump (_pickle.c.h) (1 samples, 0.19%)</title><rect x="1176" y="116" width="2" height="15" fill="rgb(218,113,26)"/><text x="1179.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="132" width="2" height="15" fill="rgb(238,7,24)"/><text x="1179.00" y="142.50"></text></g><g><title>dump (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="148" width="2" height="15" fill="rgb(206,59,31)"/><text x="1179.00" y="158.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="164" width="2" height="15" fill="rgb(228,199,35)"/><text x="1179.00" y="174.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="180" width="2" height="15" fill="rgb(220,34,26)"/><text x="1179.00" y="190.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(224,187,25)"/><text x="1179.00" y="206.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(231,227,32)"/><text x="1179.00" y="222.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="228" width="2" height="15" fill="rgb(246,122,4)"/><text x="1179.00" y="238.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="244" width="2" height="15" fill="rgb(212,69,21)"/><text x="1179.00" y="254.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(207,180,15)"/><text x="1179.00" y="270.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="276" width="2" height="15" fill="rgb(239,197,32)"/><text x="1179.00" y="286.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="292" width="2" height="15" fill="rgb(224,4,1)"/><text x="1179.00" y="302.50"></text></g><g><title>save_list (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="308" width="2" height="15" fill="rgb(225,4,37)"/><text x="1179.00" y="318.50"></text></g><g><title>batch_list_exact (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="324" width="2" height="15" fill="rgb(216,205,21)"/><text x="1179.00" y="334.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="340" width="2" height="15" fill="rgb(219,39,34)"/><text x="1179.00" y="350.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="356" width="2" height="15" fill="rgb(211,149,51)"/><text x="1179.00" y="366.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="372" width="2" height="15" fill="rgb(231,29,40)"/><text x="1179.00" y="382.50"></text></g><g><title>save_dict (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="388" width="2" height="15" fill="rgb(237,153,15)"/><text x="1179.00" y="398.50"></text></g><g><title>batch_dict_exact (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="404" width="2" height="15" fill="rgb(224,13,54)"/><text x="1179.00" y="414.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="420" width="2" height="15" fill="rgb(249,139,16)"/><text x="1179.00" y="430.50"></text></g><g><title>save_reduce (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="436" width="2" height="15" fill="rgb(208,140,6)"/><text x="1179.00" y="446.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="452" width="2" height="15" fill="rgb(220,183,36)"/><text x="1179.00" y="462.50"></text></g><g><title>save_tuple (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="468" width="2" height="15" fill="rgb(207,100,2)"/><text x="1179.00" y="478.50"></text></g><g><title>store_tuple_elements (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="484" width="2" height="15" fill="rgb(229,89,21)"/><text x="1179.00" y="494.50"></text></g><g><title>save (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="500" width="2" height="15" fill="rgb(235,58,37)"/><text x="1179.00" y="510.50"></text></g><g><title>_Pickle_FastCall (_pickle.c) (1 samples, 0.19%)</title><rect x="1176" y="516" width="2" height="15" fill="rgb(210,200,13)"/><text x="1179.00" y="526.50"></text></g><g><title>array_reduce_ex (methods.c) (1 samples, 0.19%)</title><rect x="1176" y="532" width="2" height="15" fill="rgb(226,82,40)"/><text x="1179.00" y="542.50"></text></g><g><title>array_reduce_ex_picklebuffer (methods.c) (1 samples, 0.19%)</title><rect x="1176" y="548" width="2" height="15" fill="rgb(207,118,6)"/><text x="1179.00" y="558.50"></text></g><g><title>array_reduce_ex_regular (methods.c) (1 samples, 0.19%)</title><rect x="1176" y="564" width="2" height="15" fill="rgb(221,135,1)"/><text x="1179.00" y="574.50"></text></g><g><title>array_reduce (methods.c) (1 samples, 0.19%)</title><rect x="1176" y="580" width="2" height="15" fill="rgb(250,30,13)"/><text x="1179.00" y="590.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.19%)</title><rect x="1178" y="180" width="3" height="15" fill="rgb(238,52,33)"/><text x="1181.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.19%)</title><rect x="1178" y="196" width="3" height="15" fill="rgb(228,52,51)"/><text x="1181.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.19%)</title><rect x="1178" y="212" width="3" height="15" fill="rgb(211,90,46)"/><text x="1181.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.19%)</title><rect x="1178" y="228" width="3" height="15" fill="rgb(209,65,31)"/><text x="1181.00" y="238.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.19%)</title><rect x="1178" y="244" width="3" height="15" fill="rgb(211,131,52)"/><text x="1181.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.19%)</title><rect x="1178" y="260" width="3" height="15" fill="rgb(223,5,47)"/><text x="1181.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.19%)</title><rect x="1178" y="276" width="3" height="15" fill="rgb(230,196,50)"/><text x="1181.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.19%)</title><rect x="1178" y="292" width="3" height="15" fill="rgb(216,174,22)"/><text x="1181.00" y="302.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.19%)</title><rect x="1178" y="308" width="3" height="15" fill="rgb(230,3,53)"/><text x="1181.00" y="318.50"></text></g><g><title>0x7fcaaededb11 (?) (1 samples, 0.19%)</title><rect x="1181" y="212" width="2" height="15" fill="rgb(249,118,1)"/><text x="1184.00" y="222.50"></text></g><g><title>0x7fcaaee1f10a (?) (1 samples, 0.19%)</title><rect x="1181" y="228" width="2" height="15" fill="rgb(205,215,30)"/><text x="1184.00" y="238.50"></text></g><g><title>0x7fcaaf04ae72 (?) (1 samples, 0.19%)</title><rect x="1181" y="244" width="2" height="15" fill="rgb(225,179,9)"/><text x="1184.00" y="254.50"></text></g><g><title>0x7fcaaf27dc77 (?) (1 samples, 0.19%)</title><rect x="1181" y="260" width="2" height="15" fill="rgb(238,26,41)"/><text x="1184.00" y="270.50"></text></g><g><title>0x7fcaaf27e129 (?) (1 samples, 0.19%)</title><rect x="1181" y="276" width="2" height="15" fill="rgb(234,121,18)"/><text x="1184.00" y="286.50"></text></g><g><title>0x7fcaaededb11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="212" width="2" height="15" fill="rgb(247,20,30)"/><text x="1186.00" y="222.50"></text></g><g><title>0x7fcaaee1f10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="228" width="2" height="15" fill="rgb(234,220,21)"/><text x="1186.00" y="238.50"></text></g><g><title>0x7fcaaf04ae72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(226,114,4)"/><text x="1186.00" y="254.50"></text></g><g><title>0x7fcaaf27dc99 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="1183" y="260" width="2" height="15" fill="rgb(232,204,25)"/><text x="1186.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(220,205,51)"/><text x="1188.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.19%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(247,208,34)"/><text x="1188.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.19%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(236,163,17)"/><text x="1188.00" y="254.50"></text></g><g><title>all (530 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,83,49)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (530 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(247,71,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_64_1_50_12_float_.py) (6 samples, 1.13%)</title><rect x="1176" y="68" width="14" height="15" fill="rgb(213,16,28)"/><text x="1179.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl_64.py) (6 samples, 1.13%)</title><rect x="1176" y="84" width="14" height="15" fill="rgb(218,14,34)"/><text x="1179.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 1.13%)</title><rect x="1176" y="100" width="14" height="15" fill="rgb(235,220,24)"/><text x="1179.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.94%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(231,17,14)"/><text x="1181.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.94%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(234,135,6)"/><text x="1181.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.94%)</title><rect x="1178" y="148" width="12" height="15" fill="rgb(251,108,41)"/><text x="1181.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.94%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(212,198,26)"/><text x="1181.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 0.75%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(239,80,6)"/><text x="1184.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (4 samples, 0.75%)</title><rect x="1181" y="196" width="9" height="15" fill="rgb(246,42,40)"/><text x="1184.00" y="206.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.19%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(213,133,13)"/><text x="1190.00" y="222.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.19%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(215,196,16)"/><text x="1190.00" y="238.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.19%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(234,120,35)"/><text x="1190.00" y="254.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.19%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(245,7,35)"/><text x="1190.00" y="270.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.19%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(245,92,52)"/><text x="1190.00" y="286.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.19%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(243,106,12)"/><text x="1190.00" y="302.50"></text></g><g><title>__Pyx_GetItemInt_Fast (mt19937.c) (1 samples, 0.19%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(215,159,2)"/><text x="1190.00" y="318.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.19%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(238,221,41)"/><text x="1190.00" y="334.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.19%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(240,182,30)"/><text x="1190.00" y="350.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.19%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(254,73,3)"/><text x="1190.00" y="366.50"></text></g></g></svg>