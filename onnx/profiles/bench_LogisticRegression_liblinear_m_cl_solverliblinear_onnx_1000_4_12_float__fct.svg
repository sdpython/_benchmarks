<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1814" onload="init(evt)" viewBox="0 0 1200 1814" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1814" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1797.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1797.00"> </text><g id="frames"><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="628" width="1" height="15" fill="rgb(246,50,27)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="644" width="1" height="15" fill="rgb(214,97,46)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="660" width="1" height="15" fill="rgb(210,212,32)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="676" width="1" height="15" fill="rgb(248,70,39)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="692" width="1" height="15" fill="rgb(252,104,31)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="708" width="1" height="15" fill="rgb(254,51,27)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.15%)</title><rect x="10" y="724" width="1" height="15" fill="rgb(237,94,43)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="740" width="1" height="15" fill="rgb(216,204,34)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="756" width="1" height="15" fill="rgb(239,73,4)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="772" width="1" height="15" fill="rgb(220,108,13)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="788" width="1" height="15" fill="rgb(232,55,14)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="804" width="1" height="15" fill="rgb(221,133,35)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="820" width="1" height="15" fill="rgb(242,155,15)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="836" width="1" height="15" fill="rgb(219,140,39)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="852" width="1" height="15" fill="rgb(227,66,33)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.15%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(241,47,26)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(212,89,42)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(229,147,19)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(232,94,33)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(212,15,35)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(254,7,25)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.15%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(238,29,53)"/><text x="13.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(210,35,28)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(220,227,36)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(253,195,48)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="1028" width="1" height="15" fill="rgb(223,84,31)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1044" width="1" height="15" fill="rgb(237,103,7)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.15%)</title><rect x="10" y="1060" width="1" height="15" fill="rgb(230,50,40)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1076" width="1" height="15" fill="rgb(233,78,5)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1092" width="1" height="15" fill="rgb(214,223,13)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1108" width="1" height="15" fill="rgb(253,60,34)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="10" y="1124" width="1" height="15" fill="rgb(226,124,19)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="10" y="1140" width="1" height="15" fill="rgb(215,4,54)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.15%)</title><rect x="10" y="1156" width="1" height="15" fill="rgb(218,103,48)"/><text x="13.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.15%)</title><rect x="10" y="1172" width="1" height="15" fill="rgb(217,67,53)"/><text x="13.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.15%)</title><rect x="10" y="1188" width="1" height="15" fill="rgb(213,28,43)"/><text x="13.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.15%)</title><rect x="10" y="1204" width="1" height="15" fill="rgb(243,217,54)"/><text x="13.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.15%)</title><rect x="10" y="1220" width="1" height="15" fill="rgb(227,39,15)"/><text x="13.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.15%)</title><rect x="10" y="1236" width="1" height="15" fill="rgb(249,54,15)"/><text x="13.00" y="1246.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.15%)</title><rect x="10" y="1252" width="1" height="15" fill="rgb(208,182,36)"/><text x="13.00" y="1262.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.15%)</title><rect x="10" y="1268" width="1" height="15" fill="rgb(236,132,32)"/><text x="13.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1124" width="2" height="15" fill="rgb(247,88,11)"/><text x="14.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1140" width="2" height="15" fill="rgb(253,33,49)"/><text x="14.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1156" width="2" height="15" fill="rgb(252,97,50)"/><text x="14.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1172" width="2" height="15" fill="rgb(210,123,9)"/><text x="14.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1188" width="2" height="15" fill="rgb(240,100,4)"/><text x="14.00" y="1198.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="1204" width="2" height="15" fill="rgb(248,182,34)"/><text x="14.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1220" width="2" height="15" fill="rgb(240,91,24)"/><text x="14.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1236" width="2" height="15" fill="rgb(237,206,44)"/><text x="14.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1252" width="2" height="15" fill="rgb(215,94,30)"/><text x="14.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1268" width="2" height="15" fill="rgb(213,145,3)"/><text x="14.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1284" width="2" height="15" fill="rgb(234,42,15)"/><text x="14.00" y="1294.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.15%)</title><rect x="11" y="1300" width="2" height="15" fill="rgb(222,62,28)"/><text x="14.00" y="1310.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1316" width="2" height="15" fill="rgb(223,50,53)"/><text x="14.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1332" width="2" height="15" fill="rgb(222,173,29)"/><text x="14.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1348" width="2" height="15" fill="rgb(253,179,47)"/><text x="14.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1364" width="2" height="15" fill="rgb(222,56,44)"/><text x="14.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1380" width="2" height="15" fill="rgb(241,48,46)"/><text x="14.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1396" width="2" height="15" fill="rgb(213,65,18)"/><text x="14.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1412" width="2" height="15" fill="rgb(207,55,29)"/><text x="14.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.15%)</title><rect x="11" y="1428" width="2" height="15" fill="rgb(241,167,43)"/><text x="14.00" y="1438.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1444" width="2" height="15" fill="rgb(224,143,7)"/><text x="14.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1460" width="2" height="15" fill="rgb(244,162,45)"/><text x="14.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1476" width="2" height="15" fill="rgb(213,17,39)"/><text x="14.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1492" width="2" height="15" fill="rgb(221,175,10)"/><text x="14.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1508" width="2" height="15" fill="rgb(215,193,45)"/><text x="14.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1524" width="2" height="15" fill="rgb(251,92,2)"/><text x="14.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1540" width="2" height="15" fill="rgb(248,224,0)"/><text x="14.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.15%)</title><rect x="11" y="1556" width="2" height="15" fill="rgb(250,186,24)"/><text x="14.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1572" width="2" height="15" fill="rgb(218,51,33)"/><text x="14.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1588" width="2" height="15" fill="rgb(213,118,46)"/><text x="14.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="11" y="1604" width="2" height="15" fill="rgb(206,45,1)"/><text x="14.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1620" width="2" height="15" fill="rgb(228,75,48)"/><text x="14.00" y="1630.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1636" width="2" height="15" fill="rgb(207,191,17)"/><text x="14.00" y="1646.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="11" y="1652" width="2" height="15" fill="rgb(248,139,12)"/><text x="14.00" y="1662.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.15%)</title><rect x="11" y="1668" width="2" height="15" fill="rgb(242,98,18)"/><text x="14.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="836" width="4" height="15" fill="rgb(212,179,42)"/><text x="14.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="852" width="4" height="15" fill="rgb(246,107,44)"/><text x="14.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="868" width="4" height="15" fill="rgb(218,12,1)"/><text x="14.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="11" y="884" width="4" height="15" fill="rgb(237,88,10)"/><text x="14.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="900" width="4" height="15" fill="rgb(252,28,32)"/><text x="14.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.30%)</title><rect x="11" y="916" width="4" height="15" fill="rgb(220,174,18)"/><text x="14.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="932" width="4" height="15" fill="rgb(220,78,31)"/><text x="14.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="948" width="4" height="15" fill="rgb(211,153,3)"/><text x="14.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="964" width="4" height="15" fill="rgb(236,112,31)"/><text x="14.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="11" y="980" width="4" height="15" fill="rgb(210,214,41)"/><text x="14.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="996" width="4" height="15" fill="rgb(213,150,3)"/><text x="14.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.30%)</title><rect x="11" y="1012" width="4" height="15" fill="rgb(244,83,39)"/><text x="14.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="1028" width="4" height="15" fill="rgb(212,61,35)"/><text x="14.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="1044" width="4" height="15" fill="rgb(228,196,52)"/><text x="14.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="1060" width="4" height="15" fill="rgb(208,135,33)"/><text x="14.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="11" y="1076" width="4" height="15" fill="rgb(251,155,27)"/><text x="14.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="11" y="1092" width="4" height="15" fill="rgb(247,103,39)"/><text x="14.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.30%)</title><rect x="11" y="1108" width="4" height="15" fill="rgb(213,204,30)"/><text x="14.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(240,84,49)"/><text x="16.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1140" width="2" height="15" fill="rgb(251,47,8)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1156" width="2" height="15" fill="rgb(241,75,21)"/><text x="16.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1172" width="2" height="15" fill="rgb(223,15,32)"/><text x="16.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(207,174,45)"/><text x="16.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(223,70,41)"/><text x="16.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1220" width="2" height="15" fill="rgb(209,121,53)"/><text x="16.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.15%)</title><rect x="13" y="1236" width="2" height="15" fill="rgb(242,229,2)"/><text x="16.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1252" width="2" height="15" fill="rgb(207,78,1)"/><text x="16.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1268" width="2" height="15" fill="rgb(242,36,17)"/><text x="16.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1284" width="2" height="15" fill="rgb(223,16,46)"/><text x="16.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1300" width="2" height="15" fill="rgb(253,201,34)"/><text x="16.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1316" width="2" height="15" fill="rgb(233,134,52)"/><text x="16.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="13" y="1332" width="2" height="15" fill="rgb(253,95,41)"/><text x="16.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="13" y="1348" width="2" height="15" fill="rgb(208,34,45)"/><text x="16.00" y="1358.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.15%)</title><rect x="13" y="1364" width="2" height="15" fill="rgb(225,47,20)"/><text x="16.00" y="1374.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="13" y="1380" width="2" height="15" fill="rgb(221,69,6)"/><text x="16.00" y="1390.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.15%)</title><rect x="13" y="1396" width="2" height="15" fill="rgb(222,47,45)"/><text x="16.00" y="1406.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.15%)</title><rect x="13" y="1412" width="2" height="15" fill="rgb(238,207,16)"/><text x="16.00" y="1422.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1428" width="2" height="15" fill="rgb(248,132,2)"/><text x="16.00" y="1438.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1444" width="2" height="15" fill="rgb(246,212,17)"/><text x="16.00" y="1454.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1460" width="2" height="15" fill="rgb(229,62,11)"/><text x="16.00" y="1470.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.15%)</title><rect x="13" y="1476" width="2" height="15" fill="rgb(223,56,34)"/><text x="16.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(232,71,50)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(239,12,40)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(224,225,0)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(215,170,54)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(252,138,38)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(249,4,2)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.60%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(208,75,37)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(249,120,24)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(215,163,30)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(251,168,7)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(212,5,48)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(250,57,1)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.60%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(215,34,20)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(226,209,16)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(228,8,15)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(238,54,8)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(209,158,4)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.60%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(252,55,16)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.45%)</title><rect x="11" y="628" width="6" height="15" fill="rgb(252,213,13)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="644" width="6" height="15" fill="rgb(228,222,38)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="660" width="6" height="15" fill="rgb(235,69,47)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="676" width="6" height="15" fill="rgb(242,100,7)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="11" y="692" width="6" height="15" fill="rgb(235,102,11)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="708" width="6" height="15" fill="rgb(213,180,2)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.45%)</title><rect x="11" y="724" width="6" height="15" fill="rgb(225,127,15)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="740" width="6" height="15" fill="rgb(225,178,40)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="756" width="6" height="15" fill="rgb(221,30,33)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="772" width="6" height="15" fill="rgb(239,48,48)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="11" y="788" width="6" height="15" fill="rgb(224,193,14)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="11" y="804" width="6" height="15" fill="rgb(214,149,12)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.45%)</title><rect x="11" y="820" width="6" height="15" fill="rgb(224,198,1)"/><text x="14.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(234,60,29)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(215,61,6)"/><text x="18.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(230,98,21)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(212,52,4)"/><text x="18.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(245,202,37)"/><text x="18.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(240,134,30)"/><text x="18.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(226,18,14)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.15%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(209,146,36)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(230,171,29)"/><text x="18.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(219,225,51)"/><text x="18.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(212,147,32)"/><text x="18.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(206,75,22)"/><text x="18.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(226,198,17)"/><text x="18.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(247,4,54)"/><text x="18.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(244,142,16)"/><text x="18.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(249,52,10)"/><text x="18.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(214,207,47)"/><text x="18.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1108" width="2" height="15" fill="rgb(225,129,18)"/><text x="18.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1124" width="2" height="15" fill="rgb(246,4,20)"/><text x="18.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.15%)</title><rect x="15" y="1140" width="2" height="15" fill="rgb(233,93,22)"/><text x="18.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1156" width="2" height="15" fill="rgb(240,216,5)"/><text x="18.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1172" width="2" height="15" fill="rgb(238,211,45)"/><text x="18.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1188" width="2" height="15" fill="rgb(236,61,40)"/><text x="18.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(208,31,5)"/><text x="18.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(228,83,9)"/><text x="18.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.15%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(239,214,14)"/><text x="18.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(246,62,33)"/><text x="18.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(247,191,8)"/><text x="18.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(242,194,43)"/><text x="18.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(230,94,12)"/><text x="18.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(216,179,45)"/><text x="18.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.15%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(236,103,43)"/><text x="18.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(231,38,39)"/><text x="18.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(236,73,1)"/><text x="18.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(206,204,50)"/><text x="18.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(247,203,1)"/><text x="18.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(231,189,5)"/><text x="18.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(210,181,12)"/><text x="18.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(212,229,16)"/><text x="18.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(243,131,43)"/><text x="18.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(232,11,3)"/><text x="18.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1492" width="2" height="15" fill="rgb(222,83,50)"/><text x="18.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1508" width="2" height="15" fill="rgb(234,36,18)"/><text x="18.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1524" width="2" height="15" fill="rgb(238,2,35)"/><text x="18.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1540" width="2" height="15" fill="rgb(213,149,40)"/><text x="18.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1556" width="2" height="15" fill="rgb(216,183,54)"/><text x="18.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/_base.py) (1 samples, 0.15%)</title><rect x="15" y="1572" width="2" height="15" fill="rgb(251,105,41)"/><text x="18.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1588" width="2" height="15" fill="rgb(227,174,3)"/><text x="18.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1604" width="2" height="15" fill="rgb(246,148,50)"/><text x="18.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1620" width="2" height="15" fill="rgb(208,11,3)"/><text x="18.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1636" width="2" height="15" fill="rgb(222,78,13)"/><text x="18.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1652" width="2" height="15" fill="rgb(244,176,18)"/><text x="18.00" y="1662.50"></text></g><g><title>&lt;module&gt; (concurrent/futures/__init__.py) (1 samples, 0.15%)</title><rect x="15" y="1668" width="2" height="15" fill="rgb(243,172,5)"/><text x="18.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1684" width="2" height="15" fill="rgb(223,30,33)"/><text x="18.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1700" width="2" height="15" fill="rgb(211,10,48)"/><text x="18.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="15" y="1716" width="2" height="15" fill="rgb(240,227,7)"/><text x="18.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1732" width="2" height="15" fill="rgb(227,212,38)"/><text x="18.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1748" width="2" height="15" fill="rgb(238,204,47)"/><text x="18.00" y="1758.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="15" y="1764" width="2" height="15" fill="rgb(211,150,39)"/><text x="18.00" y="1774.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.15%)</title><rect x="17" y="820" width="1" height="15" fill="rgb(213,205,6)"/><text x="20.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="836" width="1" height="15" fill="rgb(233,67,19)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="852" width="1" height="15" fill="rgb(245,227,38)"/><text x="20.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(235,4,35)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(229,127,15)"/><text x="20.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(210,158,43)"/><text x="20.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="916" width="1" height="15" fill="rgb(225,169,3)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="932" width="1" height="15" fill="rgb(226,106,19)"/><text x="20.00" y="942.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.15%)</title><rect x="17" y="948" width="1" height="15" fill="rgb(211,218,19)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="964" width="1" height="15" fill="rgb(223,146,19)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(238,65,1)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="996" width="1" height="15" fill="rgb(247,46,52)"/><text x="20.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1012" width="1" height="15" fill="rgb(242,148,19)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1028" width="1" height="15" fill="rgb(228,167,9)"/><text x="20.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1044" width="1" height="15" fill="rgb(230,70,14)"/><text x="20.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1060" width="1" height="15" fill="rgb(239,133,33)"/><text x="20.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1076" width="1" height="15" fill="rgb(230,75,34)"/><text x="20.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.15%)</title><rect x="17" y="1092" width="1" height="15" fill="rgb(230,170,4)"/><text x="20.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1108" width="1" height="15" fill="rgb(213,190,43)"/><text x="20.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(234,148,16)"/><text x="20.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(242,145,26)"/><text x="20.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(224,88,0)"/><text x="20.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(231,204,54)"/><text x="20.00" y="1182.50"></text></g><g><title>&lt;module&gt; (pandas/core/util/hashing.py) (1 samples, 0.15%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(211,211,40)"/><text x="20.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(210,215,22)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(229,137,0)"/><text x="20.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(243,143,20)"/><text x="20.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(208,177,8)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(224,76,37)"/><text x="20.00" y="1278.50"></text></g><g><title>0x7fe8a3a9826c (?) (1 samples, 0.15%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(239,225,18)"/><text x="20.00" y="1294.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="17" y="1300" width="1" height="15" fill="rgb(228,29,21)"/><text x="20.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="628" width="3" height="15" fill="rgb(208,50,4)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="644" width="3" height="15" fill="rgb(236,25,25)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="660" width="3" height="15" fill="rgb(251,1,20)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="676" width="3" height="15" fill="rgb(208,184,1)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="17" y="692" width="3" height="15" fill="rgb(235,18,41)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="708" width="3" height="15" fill="rgb(235,63,2)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.30%)</title><rect x="17" y="724" width="3" height="15" fill="rgb(233,84,3)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="740" width="3" height="15" fill="rgb(219,122,7)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="756" width="3" height="15" fill="rgb(210,143,23)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="772" width="3" height="15" fill="rgb(222,122,17)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="17" y="788" width="3" height="15" fill="rgb(250,106,22)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="17" y="804" width="3" height="15" fill="rgb(217,164,5)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/numpy_.py) (1 samples, 0.15%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(238,105,34)"/><text x="21.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 1.04%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(212,123,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.04%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(211,68,3)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.04%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(238,95,15)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="340" width="5" height="15" fill="rgb(220,169,13)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="17" y="356" width="5" height="15" fill="rgb(220,79,38)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="372" width="5" height="15" fill="rgb(236,142,2)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.45%)</title><rect x="17" y="388" width="5" height="15" fill="rgb(209,37,11)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="404" width="5" height="15" fill="rgb(245,70,16)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="420" width="5" height="15" fill="rgb(216,43,18)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="436" width="5" height="15" fill="rgb(217,147,27)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="17" y="452" width="5" height="15" fill="rgb(212,218,42)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="468" width="5" height="15" fill="rgb(250,218,19)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.45%)</title><rect x="17" y="484" width="5" height="15" fill="rgb(209,142,20)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="500" width="5" height="15" fill="rgb(248,99,4)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="516" width="5" height="15" fill="rgb(221,153,11)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="532" width="5" height="15" fill="rgb(213,189,12)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="17" y="548" width="5" height="15" fill="rgb(242,21,11)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="564" width="5" height="15" fill="rgb(220,141,13)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.45%)</title><rect x="17" y="580" width="5" height="15" fill="rgb(237,170,35)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="596" width="5" height="15" fill="rgb(229,33,24)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="17" y="612" width="5" height="15" fill="rgb(244,47,33)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(226,126,49)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(254,106,41)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(225,50,22)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(235,33,9)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(225,53,0)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(250,110,41)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(248,69,26)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(222,224,8)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(228,52,48)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.15%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(229,145,35)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(220,211,31)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(208,43,23)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(218,48,31)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(224,140,18)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(224,64,45)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.15%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(218,71,20)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(252,223,0)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(247,4,37)"/><text x="23.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(213,84,42)"/><text x="23.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(249,205,23)"/><text x="23.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(210,106,26)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.15%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(209,39,34)"/><text x="23.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(218,40,54)"/><text x="23.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(233,137,7)"/><text x="23.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(240,229,18)"/><text x="23.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(235,49,18)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(239,106,50)"/><text x="23.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(221,146,39)"/><text x="23.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(247,116,41)"/><text x="23.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(210,211,43)"/><text x="23.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(227,80,9)"/><text x="23.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(234,62,1)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(244,214,48)"/><text x="23.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.15%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(214,205,24)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(245,39,30)"/><text x="23.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(251,30,4)"/><text x="23.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(205,23,6)"/><text x="23.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(227,165,12)"/><text x="23.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(245,192,47)"/><text x="23.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.15%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(235,210,5)"/><text x="23.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(228,49,46)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(252,192,43)"/><text x="23.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(228,80,43)"/><text x="23.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(243,76,20)"/><text x="23.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(254,108,52)"/><text x="23.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.15%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(221,14,7)"/><text x="23.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(205,162,38)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(208,163,37)"/><text x="23.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(242,108,12)"/><text x="23.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(245,163,10)"/><text x="23.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(254,227,23)"/><text x="23.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.15%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(239,104,37)"/><text x="23.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(243,13,33)"/><text x="23.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(210,95,20)"/><text x="23.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(212,124,25)"/><text x="23.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(210,104,13)"/><text x="23.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(210,90,42)"/><text x="23.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 0.15%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(228,152,52)"/><text x="23.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(244,148,6)"/><text x="23.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(232,96,46)"/><text x="23.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(209,181,43)"/><text x="23.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(217,30,7)"/><text x="23.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(206,17,7)"/><text x="23.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 0.15%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(240,185,12)"/><text x="23.00" y="1646.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (1 samples, 0.15%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(210,136,30)"/><text x="23.00" y="1662.50"></text></g><g><title>from_list (matplotlib/colors.py) (1 samples, 0.15%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(238,38,53)"/><text x="23.00" y="1678.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (1 samples, 0.15%)</title><rect x="20" y="1684" width="2" height="15" fill="rgb(220,47,1)"/><text x="23.00" y="1694.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (1 samples, 0.15%)</title><rect x="20" y="1700" width="2" height="15" fill="rgb(227,89,24)"/><text x="23.00" y="1710.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.15%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(244,44,8)"/><text x="25.00" y="942.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(221,161,16)"/><text x="27.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(226,182,1)"/><text x="27.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(217,73,1)"/><text x="27.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.30%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(215,203,10)"/><text x="28.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="22" y="868" width="9" height="15" fill="rgb(243,47,13)"/><text x="25.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="22" y="884" width="9" height="15" fill="rgb(208,144,41)"/><text x="25.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="22" y="900" width="9" height="15" fill="rgb(233,53,25)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="22" y="916" width="9" height="15" fill="rgb(227,60,14)"/><text x="25.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="24" y="932" width="7" height="15" fill="rgb(216,21,40)"/><text x="27.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="24" y="948" width="7" height="15" fill="rgb(207,214,23)"/><text x="27.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.60%)</title><rect x="24" y="964" width="7" height="15" fill="rgb(227,219,41)"/><text x="27.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="29" y="980" width="2" height="15" fill="rgb(240,216,16)"/><text x="32.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.15%)</title><rect x="29" y="996" width="2" height="15" fill="rgb(208,10,14)"/><text x="32.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="31" y="932" width="1" height="15" fill="rgb(232,78,15)"/><text x="34.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="31" y="948" width="1" height="15" fill="rgb(233,187,54)"/><text x="34.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(216,59,8)"/><text x="34.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(245,121,31)"/><text x="34.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(244,143,15)"/><text x="34.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(226,154,43)"/><text x="34.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(233,205,2)"/><text x="35.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(238,11,18)"/><text x="35.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="32" y="964" width="2" height="15" fill="rgb(250,56,33)"/><text x="35.00" y="974.50"></text></g><g><title>0x7fe8bac5f237 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="32" y="980" width="2" height="15" fill="rgb(227,13,30)"/><text x="35.00" y="990.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="34" y="980" width="2" height="15" fill="rgb(210,32,2)"/><text x="37.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(210,215,42)"/><text x="37.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(231,92,38)"/><text x="37.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(247,47,44)"/><text x="37.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.30%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(205,218,44)"/><text x="37.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.30%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(237,173,32)"/><text x="37.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="36" y="980" width="2" height="15" fill="rgb(219,68,13)"/><text x="39.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="932" width="1" height="15" fill="rgb(254,203,9)"/><text x="41.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="38" y="948" width="1" height="15" fill="rgb(247,143,19)"/><text x="41.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.15%)</title><rect x="38" y="964" width="1" height="15" fill="rgb(233,228,29)"/><text x="41.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.15%)</title><rect x="38" y="980" width="1" height="15" fill="rgb(232,30,45)"/><text x="41.00" y="990.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(226,159,42)"/><text x="41.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.30%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(249,78,16)"/><text x="41.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="932" width="2" height="15" fill="rgb(223,46,47)"/><text x="42.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="948" width="2" height="15" fill="rgb(231,206,40)"/><text x="42.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="964" width="2" height="15" fill="rgb(216,86,28)"/><text x="42.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="980" width="2" height="15" fill="rgb(221,166,30)"/><text x="42.00" y="990.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="996" width="2" height="15" fill="rgb(252,15,37)"/><text x="42.00" y="1006.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="1012" width="2" height="15" fill="rgb(210,195,16)"/><text x="42.00" y="1022.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="39" y="1028" width="2" height="15" fill="rgb(228,106,32)"/><text x="42.00" y="1038.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.15%)</title><rect x="39" y="1044" width="2" height="15" fill="rgb(249,139,47)"/><text x="42.00" y="1054.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.15%)</title><rect x="39" y="1060" width="2" height="15" fill="rgb(243,94,15)"/><text x="42.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.84%)</title><rect x="10" y="196" width="33" height="15" fill="rgb(214,135,25)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.84%)</title><rect x="10" y="212" width="33" height="15" fill="rgb(248,16,23)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.84%)</title><rect x="10" y="228" width="33" height="15" fill="rgb(235,98,22)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.84%)</title><rect x="10" y="244" width="33" height="15" fill="rgb(219,51,50)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (19 samples, 2.84%)</title><rect x="10" y="260" width="33" height="15" fill="rgb(253,93,13)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (19 samples, 2.84%)</title><rect x="10" y="276" width="33" height="15" fill="rgb(221,38,7)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (12 samples, 1.79%)</title><rect x="22" y="292" width="21" height="15" fill="rgb(210,184,29)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="308" width="21" height="15" fill="rgb(230,21,54)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="324" width="21" height="15" fill="rgb(237,142,0)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="340" width="21" height="15" fill="rgb(230,76,23)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.79%)</title><rect x="22" y="356" width="21" height="15" fill="rgb(247,191,45)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="372" width="21" height="15" fill="rgb(221,192,36)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (12 samples, 1.79%)</title><rect x="22" y="388" width="21" height="15" fill="rgb(231,144,46)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="404" width="21" height="15" fill="rgb(219,147,14)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="420" width="21" height="15" fill="rgb(241,125,39)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="436" width="21" height="15" fill="rgb(251,112,46)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.79%)</title><rect x="22" y="452" width="21" height="15" fill="rgb(248,144,51)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="468" width="21" height="15" fill="rgb(226,127,19)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (12 samples, 1.79%)</title><rect x="22" y="484" width="21" height="15" fill="rgb(229,50,16)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="500" width="21" height="15" fill="rgb(223,32,54)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="516" width="21" height="15" fill="rgb(226,18,16)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="532" width="21" height="15" fill="rgb(232,82,5)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.79%)</title><rect x="22" y="548" width="21" height="15" fill="rgb(231,27,24)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="564" width="21" height="15" fill="rgb(233,113,41)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (12 samples, 1.79%)</title><rect x="22" y="580" width="21" height="15" fill="rgb(221,203,34)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="596" width="21" height="15" fill="rgb(213,82,5)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="612" width="21" height="15" fill="rgb(233,26,6)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="628" width="21" height="15" fill="rgb(222,100,6)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="644" width="21" height="15" fill="rgb(239,65,41)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="660" width="21" height="15" fill="rgb(249,20,23)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="676" width="21" height="15" fill="rgb(244,221,13)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.79%)</title><rect x="22" y="692" width="21" height="15" fill="rgb(248,229,19)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="708" width="21" height="15" fill="rgb(226,72,28)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (12 samples, 1.79%)</title><rect x="22" y="724" width="21" height="15" fill="rgb(254,175,8)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="740" width="21" height="15" fill="rgb(225,41,14)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="756" width="21" height="15" fill="rgb(252,124,39)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="772" width="21" height="15" fill="rgb(214,227,31)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.79%)</title><rect x="22" y="788" width="21" height="15" fill="rgb(221,216,19)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.79%)</title><rect x="22" y="804" width="21" height="15" fill="rgb(250,179,30)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (12 samples, 1.79%)</title><rect x="22" y="820" width="21" height="15" fill="rgb(240,70,31)"/><text x="25.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (12 samples, 1.79%)</title><rect x="22" y="836" width="21" height="15" fill="rgb(239,55,9)"/><text x="25.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (12 samples, 1.79%)</title><rect x="22" y="852" width="21" height="15" fill="rgb(253,186,29)"/><text x="25.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="34" y="868" width="9" height="15" fill="rgb(212,75,44)"/><text x="37.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 0.75%)</title><rect x="34" y="884" width="9" height="15" fill="rgb(219,61,40)"/><text x="37.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.15%)</title><rect x="41" y="900" width="2" height="15" fill="rgb(224,56,46)"/><text x="44.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.15%)</title><rect x="41" y="916" width="2" height="15" fill="rgb(214,176,4)"/><text x="44.00" y="926.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.15%)</title><rect x="43" y="580" width="2" height="15" fill="rgb(217,108,25)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="43" y="596" width="2" height="15" fill="rgb(217,42,16)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="43" y="612" width="2" height="15" fill="rgb(211,12,32)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="43" y="628" width="2" height="15" fill="rgb(252,96,23)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="43" y="644" width="2" height="15" fill="rgb(219,15,51)"/><text x="46.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="43" y="660" width="2" height="15" fill="rgb(243,6,6)"/><text x="46.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="43" y="676" width="2" height="15" fill="rgb(225,9,19)"/><text x="46.00" y="686.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (2 samples, 0.30%)</title><rect x="43" y="244" width="3" height="15" fill="rgb(225,166,36)"/><text x="46.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="260" width="3" height="15" fill="rgb(230,1,2)"/><text x="46.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="276" width="3" height="15" fill="rgb(205,220,46)"/><text x="46.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="292" width="3" height="15" fill="rgb(205,107,18)"/><text x="46.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="43" y="308" width="3" height="15" fill="rgb(206,67,50)"/><text x="46.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="324" width="3" height="15" fill="rgb(212,215,39)"/><text x="46.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.30%)</title><rect x="43" y="340" width="3" height="15" fill="rgb(235,66,38)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="356" width="3" height="15" fill="rgb(237,198,39)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="372" width="3" height="15" fill="rgb(219,83,27)"/><text x="46.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="388" width="3" height="15" fill="rgb(219,184,32)"/><text x="46.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="404" width="3" height="15" fill="rgb(219,16,24)"/><text x="46.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="420" width="3" height="15" fill="rgb(207,139,25)"/><text x="46.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="436" width="3" height="15" fill="rgb(237,85,15)"/><text x="46.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="43" y="452" width="3" height="15" fill="rgb(239,158,43)"/><text x="46.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="468" width="3" height="15" fill="rgb(239,2,53)"/><text x="46.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.30%)</title><rect x="43" y="484" width="3" height="15" fill="rgb(245,11,50)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="500" width="3" height="15" fill="rgb(206,46,50)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="516" width="3" height="15" fill="rgb(230,36,51)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="532" width="3" height="15" fill="rgb(221,37,26)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.30%)</title><rect x="43" y="548" width="3" height="15" fill="rgb(229,38,30)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.30%)</title><rect x="43" y="564" width="3" height="15" fill="rgb(245,25,25)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.15%)</title><rect x="45" y="580" width="1" height="15" fill="rgb(214,31,50)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="596" width="1" height="15" fill="rgb(244,216,15)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="612" width="1" height="15" fill="rgb(239,97,18)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="628" width="1" height="15" fill="rgb(224,88,32)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="644" width="1" height="15" fill="rgb(223,94,11)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="660" width="1" height="15" fill="rgb(234,218,46)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.15%)</title><rect x="45" y="676" width="1" height="15" fill="rgb(234,121,28)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="692" width="1" height="15" fill="rgb(206,112,12)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="708" width="1" height="15" fill="rgb(206,43,18)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="724" width="1" height="15" fill="rgb(208,219,27)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="740" width="1" height="15" fill="rgb(243,124,36)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="756" width="1" height="15" fill="rgb(251,207,27)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.15%)</title><rect x="45" y="772" width="1" height="15" fill="rgb(211,28,0)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="788" width="1" height="15" fill="rgb(250,152,23)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="804" width="1" height="15" fill="rgb(228,18,44)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="820" width="1" height="15" fill="rgb(224,227,17)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="836" width="1" height="15" fill="rgb(219,32,20)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="852" width="1" height="15" fill="rgb(252,165,17)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.15%)</title><rect x="45" y="868" width="1" height="15" fill="rgb(217,21,5)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="884" width="1" height="15" fill="rgb(224,141,10)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="900" width="1" height="15" fill="rgb(214,107,48)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="916" width="1" height="15" fill="rgb(213,173,13)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="932" width="1" height="15" fill="rgb(218,89,13)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="948" width="1" height="15" fill="rgb(223,54,50)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.15%)</title><rect x="45" y="964" width="1" height="15" fill="rgb(229,101,41)"/><text x="48.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="980" width="1" height="15" fill="rgb(220,221,53)"/><text x="48.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="996" width="1" height="15" fill="rgb(243,148,29)"/><text x="48.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1012" width="1" height="15" fill="rgb(214,61,5)"/><text x="48.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="1028" width="1" height="15" fill="rgb(242,202,26)"/><text x="48.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1044" width="1" height="15" fill="rgb(214,73,5)"/><text x="48.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.15%)</title><rect x="45" y="1060" width="1" height="15" fill="rgb(248,118,31)"/><text x="48.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1076" width="1" height="15" fill="rgb(219,219,24)"/><text x="48.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1092" width="1" height="15" fill="rgb(227,144,27)"/><text x="48.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1108" width="1" height="15" fill="rgb(244,94,13)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1124" width="1" height="15" fill="rgb(233,156,7)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1140" width="1" height="15" fill="rgb(226,81,33)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1156" width="1" height="15" fill="rgb(205,63,43)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="1172" width="1" height="15" fill="rgb(250,56,40)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1188" width="1" height="15" fill="rgb(217,215,24)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.15%)</title><rect x="45" y="1204" width="1" height="15" fill="rgb(212,16,32)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1220" width="1" height="15" fill="rgb(246,80,8)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1236" width="1" height="15" fill="rgb(209,173,33)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1252" width="1" height="15" fill="rgb(234,200,20)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="1268" width="1" height="15" fill="rgb(237,80,28)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1284" width="1" height="15" fill="rgb(223,187,5)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.15%)</title><rect x="45" y="1300" width="1" height="15" fill="rgb(237,160,46)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1316" width="1" height="15" fill="rgb(221,207,47)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1332" width="1" height="15" fill="rgb(227,117,30)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1348" width="1" height="15" fill="rgb(214,22,45)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="45" y="1364" width="1" height="15" fill="rgb(209,59,49)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="45" y="1380" width="1" height="15" fill="rgb(236,69,2)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.15%)</title><rect x="45" y="1396" width="1" height="15" fill="rgb(253,152,12)"/><text x="48.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.15%)</title><rect x="45" y="1412" width="1" height="15" fill="rgb(207,185,2)"/><text x="48.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.15%)</title><rect x="45" y="1428" width="1" height="15" fill="rgb(249,194,31)"/><text x="48.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.15%)</title><rect x="45" y="1444" width="1" height="15" fill="rgb(207,31,9)"/><text x="48.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1460" width="1" height="15" fill="rgb(237,93,46)"/><text x="48.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1476" width="1" height="15" fill="rgb(240,105,5)"/><text x="48.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1492" width="1" height="15" fill="rgb(232,129,28)"/><text x="48.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1508" width="1" height="15" fill="rgb(211,223,14)"/><text x="48.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1524" width="1" height="15" fill="rgb(225,65,4)"/><text x="48.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1540" width="1" height="15" fill="rgb(233,219,23)"/><text x="48.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.15%)</title><rect x="45" y="1556" width="1" height="15" fill="rgb(210,34,0)"/><text x="48.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="68" width="38" height="15" fill="rgb(232,90,20)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="84" width="38" height="15" fill="rgb(205,36,37)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="100" width="38" height="15" fill="rgb(234,223,33)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 3.28%)</title><rect x="10" y="116" width="38" height="15" fill="rgb(230,118,21)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="132" width="38" height="15" fill="rgb(210,126,15)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (22 samples, 3.28%)</title><rect x="10" y="148" width="38" height="15" fill="rgb(207,208,22)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="164" width="38" height="15" fill="rgb(245,111,11)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 3.28%)</title><rect x="10" y="180" width="38" height="15" fill="rgb(233,37,24)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="43" y="196" width="5" height="15" fill="rgb(228,189,4)"/><text x="46.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.45%)</title><rect x="43" y="212" width="5" height="15" fill="rgb(215,225,1)"/><text x="46.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.45%)</title><rect x="43" y="228" width="5" height="15" fill="rgb(215,180,52)"/><text x="46.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.15%)</title><rect x="46" y="244" width="2" height="15" fill="rgb(218,204,14)"/><text x="49.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="260" width="2" height="15" fill="rgb(252,194,44)"/><text x="49.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="276" width="2" height="15" fill="rgb(247,37,21)"/><text x="49.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="292" width="2" height="15" fill="rgb(242,92,18)"/><text x="49.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="308" width="2" height="15" fill="rgb(235,109,32)"/><text x="49.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="324" width="2" height="15" fill="rgb(238,67,47)"/><text x="49.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="340" width="2" height="15" fill="rgb(246,11,45)"/><text x="49.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="356" width="2" height="15" fill="rgb(223,166,30)"/><text x="49.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.15%)</title><rect x="46" y="372" width="2" height="15" fill="rgb(233,213,41)"/><text x="49.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="388" width="2" height="15" fill="rgb(242,23,15)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="404" width="2" height="15" fill="rgb(233,151,7)"/><text x="49.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="420" width="2" height="15" fill="rgb(240,156,38)"/><text x="49.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.15%)</title><rect x="46" y="436" width="2" height="15" fill="rgb(238,57,42)"/><text x="49.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="46" y="452" width="2" height="15" fill="rgb(249,140,10)"/><text x="49.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/type_check.py) (1 samples, 0.15%)</title><rect x="46" y="468" width="2" height="15" fill="rgb(249,69,51)"/><text x="49.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.15%)</title><rect x="46" y="484" width="2" height="15" fill="rgb(223,35,52)"/><text x="49.00" y="494.50"></text></g><g><title>&lt;module&gt; (&lt;__array_function__ internals&gt;) (1 samples, 0.15%)</title><rect x="46" y="500" width="2" height="15" fill="rgb(247,34,46)"/><text x="49.00" y="510.50"></text></g><g><title>0x7fe8bac1ebc6 (libc-2.29.so) (3 samples, 0.45%)</title><rect x="106" y="132" width="6" height="15" fill="rgb(220,111,23)"/><text x="109.00" y="142.50"></text></g><g><title>0x7fe8bac1ebd1 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="112" y="132" width="1" height="15" fill="rgb(225,6,9)"/><text x="115.00" y="142.50"></text></g><g><title>0x7fe8bac1ebdf (libc-2.29.so) (1 samples, 0.15%)</title><rect x="113" y="132" width="2" height="15" fill="rgb(231,106,44)"/><text x="116.00" y="142.50"></text></g><g><title>0x7fe8bac1ec00 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="115" y="132" width="2" height="15" fill="rgb(206,27,38)"/><text x="118.00" y="142.50"></text></g><g><title>0x7fe8bac1ec19 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="117" y="132" width="2" height="15" fill="rgb(226,206,31)"/><text x="120.00" y="142.50"></text></g><g><title>0x7fe8bac1ec1c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="119" y="132" width="1" height="15" fill="rgb(242,186,15)"/><text x="122.00" y="142.50"></text></g><g><title>0x7fe8bac1ec28 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="120" y="132" width="2" height="15" fill="rgb(245,93,27)"/><text x="123.00" y="142.50"></text></g><g><title>0x7fe8bac1ec2d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="122" y="132" width="2" height="15" fill="rgb(226,38,22)"/><text x="125.00" y="142.50"></text></g><g><title>0x7fe8bac1ec45 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="124" y="132" width="2" height="15" fill="rgb(205,214,5)"/><text x="127.00" y="142.50"></text></g><g><title>0x7fe8bac1ec49 (libc-2.29.so) (3 samples, 0.45%)</title><rect x="126" y="132" width="5" height="15" fill="rgb(245,23,15)"/><text x="129.00" y="142.50"></text></g><g><title>0x7fe8bac1ec5a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="131" y="132" width="2" height="15" fill="rgb(231,194,3)"/><text x="134.00" y="142.50"></text></g><g><title>0x7fe8bac1ec6a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="133" y="132" width="2" height="15" fill="rgb(216,137,17)"/><text x="136.00" y="142.50"></text></g><g><title>0x7fe8bac1eaa4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="135" y="148" width="1" height="15" fill="rgb(239,225,21)"/><text x="138.00" y="158.50"></text></g><g><title>0x7fe8bac1eab9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="136" y="148" width="2" height="15" fill="rgb(222,86,12)"/><text x="139.00" y="158.50"></text></g><g><title>0x7fe8bac1ec73 (libc-2.29.so) (4 samples, 0.60%)</title><rect x="135" y="132" width="7" height="15" fill="rgb(247,141,24)"/><text x="138.00" y="142.50"></text></g><g><title>0x7fe8bac1ead5 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="138" y="148" width="4" height="15" fill="rgb(235,129,35)"/><text x="141.00" y="158.50"></text></g><g><title>0x7fe8bac1eaa0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="142" y="148" width="1" height="15" fill="rgb(220,119,0)"/><text x="145.00" y="158.50"></text></g><g><title>0x7fe8bac1feb0 (libc-2.29.so) (22 samples, 3.28%)</title><rect x="106" y="116" width="39" height="15" fill="rgb(242,221,51)"/><text x="109.00" y="126.50">0x7..</text></g><g><title>0x7fe8bac1eca7 (libc-2.29.so) (2 samples, 0.30%)</title><rect x="142" y="132" width="3" height="15" fill="rgb(249,199,19)"/><text x="145.00" y="142.50"></text></g><g><title>0x7fe8bac1eacd (libc-2.29.so) (1 samples, 0.15%)</title><rect x="143" y="148" width="2" height="15" fill="rgb(221,62,22)"/><text x="146.00" y="158.50"></text></g><g><title>0x7fe87b488ff9 (?) (1 samples, 0.15%)</title><rect x="156" y="212" width="1" height="15" fill="rgb(244,199,34)"/><text x="159.00" y="222.50"></text></g><g><title>0x7fe87b483ef6 (?) (1 samples, 0.15%)</title><rect x="156" y="228" width="1" height="15" fill="rgb(244,191,7)"/><text x="159.00" y="238.50"></text></g><g><title>0x7fe87b478962 (?) (1 samples, 0.15%)</title><rect x="156" y="244" width="1" height="15" fill="rgb(217,139,44)"/><text x="159.00" y="254.50"></text></g><g><title>0x7fe87b4ac7a7 (?) (1 samples, 0.15%)</title><rect x="156" y="260" width="1" height="15" fill="rgb(249,171,54)"/><text x="159.00" y="270.50"></text></g><g><title>0x7fe87b4ac379 (?) (1 samples, 0.15%)</title><rect x="156" y="276" width="1" height="15" fill="rgb(221,210,30)"/><text x="159.00" y="286.50"></text></g><g><title>0x7fe87b90a8b8 (?) (1 samples, 0.15%)</title><rect x="156" y="292" width="1" height="15" fill="rgb(240,145,42)"/><text x="159.00" y="302.50"></text></g><g><title>0x7fe87b908c7f (?) (1 samples, 0.15%)</title><rect x="156" y="308" width="1" height="15" fill="rgb(226,49,27)"/><text x="159.00" y="318.50"></text></g><g><title>0x7fe87b91b99c (?) (1 samples, 0.15%)</title><rect x="156" y="324" width="1" height="15" fill="rgb(247,41,30)"/><text x="159.00" y="334.50"></text></g><g><title>0x7fe87b600ae6 (?) (1 samples, 0.15%)</title><rect x="156" y="340" width="1" height="15" fill="rgb(225,140,6)"/><text x="159.00" y="350.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="157" y="260" width="2" height="15" fill="rgb(249,203,52)"/><text x="160.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.30%)</title><rect x="157" y="212" width="4" height="15" fill="rgb(219,103,3)"/><text x="160.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="157" y="228" width="4" height="15" fill="rgb(216,38,2)"/><text x="160.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="157" y="244" width="4" height="15" fill="rgb(228,100,6)"/><text x="160.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="159" y="260" width="2" height="15" fill="rgb(237,64,25)"/><text x="162.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="159" y="276" width="2" height="15" fill="rgb(209,13,39)"/><text x="162.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="159" y="292" width="2" height="15" fill="rgb(223,113,38)"/><text x="162.00" y="302.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="164" y="340" width="2" height="15" fill="rgb(227,97,31)"/><text x="167.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="166" y="340" width="2" height="15" fill="rgb(207,6,15)"/><text x="169.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="166" y="356" width="2" height="15" fill="rgb(254,88,7)"/><text x="169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="224" y="356" width="2" height="15" fill="rgb(227,10,20)"/><text x="227.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(252,209,36)"/><text x="227.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="224" y="388" width="2" height="15" fill="rgb(216,77,42)"/><text x="227.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="224" y="404" width="2" height="15" fill="rgb(226,60,29)"/><text x="227.00" y="414.50"></text></g><g><title>0x7fe8bac3fd97 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="260" y="372" width="1" height="15" fill="rgb(213,229,25)"/><text x="263.00" y="382.50"></text></g><g><title>0x7fe8bac3fdbb (libc-2.29.so) (1 samples, 0.15%)</title><rect x="261" y="372" width="2" height="15" fill="rgb(253,148,43)"/><text x="264.00" y="382.50"></text></g><g><title>0x7fe8bad9ee0a (libm-2.29.so) (1 samples, 0.15%)</title><rect x="263" y="372" width="2" height="15" fill="rgb(243,131,12)"/><text x="266.00" y="382.50"></text></g><g><title>0x7fe8bad9ee0e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="265" y="372" width="2" height="15" fill="rgb(213,60,22)"/><text x="268.00" y="382.50"></text></g><g><title>0x7fe8bad9ee2f (libm-2.29.so) (1 samples, 0.15%)</title><rect x="267" y="372" width="1" height="15" fill="rgb(230,110,20)"/><text x="270.00" y="382.50"></text></g><g><title>0x7fe8bad9ee57 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="268" y="372" width="2" height="15" fill="rgb(245,61,21)"/><text x="271.00" y="382.50"></text></g><g><title>0x7fe8bad9ee5f (libm-2.29.so) (2 samples, 0.30%)</title><rect x="270" y="372" width="4" height="15" fill="rgb(232,27,29)"/><text x="273.00" y="382.50"></text></g><g><title>0x7fe8bad9ee62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="274" y="372" width="1" height="15" fill="rgb(247,12,26)"/><text x="277.00" y="382.50"></text></g><g><title>0x7fe8bad9ee6d (libm-2.29.so) (1 samples, 0.15%)</title><rect x="275" y="372" width="2" height="15" fill="rgb(216,100,4)"/><text x="278.00" y="382.50"></text></g><g><title>0x7fe8bad9ee96 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="277" y="372" width="2" height="15" fill="rgb(216,97,46)"/><text x="280.00" y="382.50"></text></g><g><title>0x7fe8bad9ee9e (libm-2.29.so) (2 samples, 0.30%)</title><rect x="279" y="372" width="3" height="15" fill="rgb(216,130,16)"/><text x="282.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (66 samples, 9.85%)</title><rect x="168" y="340" width="116" height="15" fill="rgb(241,2,16)"/><text x="171.00" y="350.50">onnxruntime::m..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 4.93%)</title><rect x="226" y="356" width="58" height="15" fill="rgb(226,192,20)"/><text x="229.00" y="366.50">onnxru..</text></g><g><title>0x7fe8bad9eea2 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="282" y="372" width="2" height="15" fill="rgb(253,170,27)"/><text x="285.00" y="382.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.39%)</title><rect x="284" y="340" width="28" height="15" fill="rgb(244,178,11)"/><text x="287.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.39%)</title><rect x="284" y="356" width="28" height="15" fill="rgb(241,172,34)"/><text x="287.00" y="366.50">o..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="372" width="1" height="15" fill="rgb(208,200,28)"/><text x="314.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="388" width="1" height="15" fill="rgb(251,26,25)"/><text x="314.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="404" width="1" height="15" fill="rgb(214,25,35)"/><text x="314.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="420" width="1" height="15" fill="rgb(235,9,4)"/><text x="314.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="436" width="1" height="15" fill="rgb(221,127,18)"/><text x="314.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="452" width="1" height="15" fill="rgb(217,153,31)"/><text x="314.00" y="462.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="311" y="468" width="1" height="15" fill="rgb(214,183,31)"/><text x="314.00" y="478.50"></text></g><g><title>0x7fe8aa6ebd50 (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(212,211,2)"/><text x="338.00" y="382.50"></text></g><g><title>0x7fe8bac20b12 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="423" y="388" width="2" height="15" fill="rgb(215,26,40)"/><text x="426.00" y="398.50"></text></g><g><title>0x7fe8bac20b24 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="425" y="388" width="2" height="15" fill="rgb(241,172,10)"/><text x="428.00" y="398.50"></text></g><g><title>0x7fe8bac20b39 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="427" y="388" width="2" height="15" fill="rgb(216,82,0)"/><text x="430.00" y="398.50"></text></g><g><title>0x7fe8bac20b49 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="429" y="388" width="1" height="15" fill="rgb(236,146,22)"/><text x="432.00" y="398.50"></text></g><g><title>0x7fe8bac20b61 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="430" y="388" width="2" height="15" fill="rgb(214,222,32)"/><text x="433.00" y="398.50"></text></g><g><title>0x7fe8bac20d27 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="432" y="388" width="2" height="15" fill="rgb(238,165,41)"/><text x="435.00" y="398.50"></text></g><g><title>0x7fe8bac20d36 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="434" y="388" width="2" height="15" fill="rgb(244,82,25)"/><text x="437.00" y="398.50"></text></g><g><title>0x7fe8bac20d3b (libc-2.29.so) (5 samples, 0.75%)</title><rect x="436" y="388" width="9" height="15" fill="rgb(233,123,41)"/><text x="439.00" y="398.50"></text></g><g><title>0x7fe8bac20d3d (libc-2.29.so) (2 samples, 0.30%)</title><rect x="445" y="388" width="3" height="15" fill="rgb(219,193,13)"/><text x="448.00" y="398.50"></text></g><g><title>0x7fe8bac20d48 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="448" y="388" width="2" height="15" fill="rgb(221,199,1)"/><text x="451.00" y="398.50"></text></g><g><title>0x7fe8bac20d77 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="450" y="388" width="2" height="15" fill="rgb(249,181,49)"/><text x="453.00" y="398.50"></text></g><g><title>0x7fe8bac20dd2 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="452" y="388" width="1" height="15" fill="rgb(246,126,28)"/><text x="455.00" y="398.50"></text></g><g><title>0x7fe8bac20fde (libc-2.29.so) (2 samples, 0.30%)</title><rect x="453" y="388" width="4" height="15" fill="rgb(209,55,19)"/><text x="456.00" y="398.50"></text></g><g><title>0x7fe8bac20fe6 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="457" y="388" width="2" height="15" fill="rgb(230,74,35)"/><text x="460.00" y="398.50"></text></g><g><title>0x7fe8bac21040 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="459" y="388" width="1" height="15" fill="rgb(243,76,54)"/><text x="462.00" y="398.50"></text></g><g><title>0x7fe8bac21050 (libc-2.29.so) (4 samples, 0.60%)</title><rect x="460" y="388" width="7" height="15" fill="rgb(239,66,34)"/><text x="463.00" y="398.50"></text></g><g><title>0x7fe8bac2107f (libc-2.29.so) (1 samples, 0.15%)</title><rect x="467" y="388" width="2" height="15" fill="rgb(248,158,11)"/><text x="470.00" y="398.50"></text></g><g><title>0x7fe8bac2108c (libc-2.29.so) (2 samples, 0.30%)</title><rect x="469" y="388" width="4" height="15" fill="rgb(253,187,45)"/><text x="472.00" y="398.50"></text></g><g><title>0x7fe8bac2138d (libc-2.29.so) (1 samples, 0.15%)</title><rect x="473" y="388" width="1" height="15" fill="rgb(254,2,4)"/><text x="476.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (81 samples, 12.09%)</title><rect x="334" y="356" width="142" height="15" fill="rgb(249,143,22)"/><text x="337.00" y="366.50">operator new (libs..</text></g><g><title>malloc (libc-2.29.so) (79 samples, 11.79%)</title><rect x="337" y="372" width="139" height="15" fill="rgb(252,213,53)"/><text x="340.00" y="382.50">malloc (libc-2.29..</text></g><g><title>0x7fe8bac213d9 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="474" y="388" width="2" height="15" fill="rgb(212,12,14)"/><text x="477.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.04%)</title><rect x="476" y="356" width="13" height="15" fill="rgb(208,202,13)"/><text x="479.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.60%)</title><rect x="482" y="372" width="7" height="15" fill="rgb(212,49,11)"/><text x="485.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.30%)</title><rect x="489" y="356" width="3" height="15" fill="rgb(232,138,7)"/><text x="492.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (191 samples, 28.51%)</title><rect x="164" y="260" width="337" height="15" fill="rgb(221,209,5)"/><text x="167.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (191 samples, 28.51%)</title><rect x="164" y="276" width="337" height="15" fill="rgb(207,165,27)"/><text x="167.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (191 samples, 28.51%)</title><rect x="164" y="292" width="337" height="15" fill="rgb(234,4,32)"/><text x="167.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (191 samples, 28.51%)</title><rect x="164" y="308" width="337" height="15" fill="rgb(220,122,44)"/><text x="167.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (191 samples, 28.51%)</title><rect x="164" y="324" width="337" height="15" fill="rgb(250,132,6)"/><text x="167.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 15.97%)</title><rect x="312" y="340" width="189" height="15" fill="rgb(215,227,6)"/><text x="315.00" y="350.50">onnxruntime::ml::ZipMapO..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.75%)</title><rect x="492" y="356" width="9" height="15" fill="rgb(254,186,32)"/><text x="495.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="501" y="308" width="2" height="15" fill="rgb(213,224,25)"/><text x="504.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.30%)</title><rect x="501" y="260" width="3" height="15" fill="rgb(206,86,22)"/><text x="504.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.30%)</title><rect x="501" y="276" width="3" height="15" fill="rgb(242,195,9)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.30%)</title><rect x="501" y="292" width="3" height="15" fill="rgb(236,170,19)"/><text x="504.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="503" y="308" width="1" height="15" fill="rgb(250,17,20)"/><text x="506.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="503" y="324" width="1" height="15" fill="rgb(226,195,48)"/><text x="506.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="503" y="340" width="1" height="15" fill="rgb(214,224,12)"/><text x="506.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="503" y="356" width="1" height="15" fill="rgb(237,56,35)"/><text x="506.00" y="366.50"></text></g><g><title>0x7fe8bac21028 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="503" y="372" width="1" height="15" fill="rgb(236,25,9)"/><text x="506.00" y="382.50"></text></g><g><title>0x7fe8bac1ec7c (libc-2.29.so) (1 samples, 0.15%)</title><rect x="503" y="388" width="1" height="15" fill="rgb(235,141,17)"/><text x="506.00" y="398.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 2.39%)</title><rect x="651" y="276" width="28" height="15" fill="rgb(221,1,38)"/><text x="654.00" y="286.50">p..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (103 samples, 15.37%)</title><rect x="504" y="260" width="182" height="15" fill="rgb(227,184,22)"/><text x="507.00" y="270.50">pybind11::detail::map_c..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (4 samples, 0.60%)</title><rect x="679" y="276" width="7" height="15" fill="rgb(233,172,49)"/><text x="682.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="686" y="260" width="2" height="15" fill="rgb(207,82,13)"/><text x="689.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="686" y="276" width="2" height="15" fill="rgb(225,87,43)"/><text x="689.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="686" y="292" width="2" height="15" fill="rgb(241,217,11)"/><text x="689.00" y="302.50"></text></g><g><title>0x7fe87b4500f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(237,189,35)"/><text x="696.00" y="302.50"></text></g><g><title>0x7fe8bac1f91e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="695" y="292" width="1" height="15" fill="rgb(212,160,41)"/><text x="698.00" y="302.50"></text></g><g><title>0x7fe8bac1f945 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="696" y="292" width="2" height="15" fill="rgb(248,222,49)"/><text x="699.00" y="302.50"></text></g><g><title>0x7fe8bac1f961 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="698" y="292" width="2" height="15" fill="rgb(252,127,28)"/><text x="701.00" y="302.50"></text></g><g><title>0x7fe8bac1f971 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="700" y="292" width="2" height="15" fill="rgb(253,65,10)"/><text x="703.00" y="302.50"></text></g><g><title>0x7fe8bac1f9d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="702" y="292" width="1" height="15" fill="rgb(217,179,28)"/><text x="705.00" y="302.50"></text></g><g><title>0x7fe8bac1fa33 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="703" y="292" width="2" height="15" fill="rgb(232,220,52)"/><text x="706.00" y="302.50"></text></g><g><title>0x7fe8bac1fcf0 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="705" y="292" width="2" height="15" fill="rgb(250,34,27)"/><text x="708.00" y="302.50"></text></g><g><title>0x7fe8bac1fd07 (libc-2.29.so) (5 samples, 0.75%)</title><rect x="707" y="292" width="9" height="15" fill="rgb(215,29,27)"/><text x="710.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.45%)</title><rect x="716" y="292" width="5" height="15" fill="rgb(253,135,51)"/><text x="719.00" y="302.50"></text></g><g><title>0x7fe8aa6ec7a0 (libstdc++.so.6.0.28) (1 samples, 0.15%)</title><rect x="723" y="308" width="2" height="15" fill="rgb(235,18,50)"/><text x="726.00" y="318.50"></text></g><g><title>0x7fe8bac1f90e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="725" y="308" width="1" height="15" fill="rgb(217,34,10)"/><text x="728.00" y="318.50"></text></g><g><title>0x7fe8bac1f91e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="726" y="308" width="2" height="15" fill="rgb(214,205,54)"/><text x="729.00" y="318.50"></text></g><g><title>0x7fe8bac1f9d3 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="728" y="308" width="2" height="15" fill="rgb(233,67,40)"/><text x="731.00" y="318.50"></text></g><g><title>0x7fe8bac1fd07 (libc-2.29.so) (6 samples, 0.90%)</title><rect x="730" y="308" width="10" height="15" fill="rgb(228,45,13)"/><text x="733.00" y="318.50"></text></g><g><title>0x7fe8bac1fd13 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="740" y="308" width="2" height="15" fill="rgb(216,121,36)"/><text x="743.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (331 samples, 49.40%)</title><rect x="161" y="244" width="583" height="15" fill="rgb(220,75,5)"/><text x="164.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::I..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 4.78%)</title><rect x="688" y="260" width="56" height="15" fill="rgb(244,5,9)"/><text x="691.00" y="270.50">std::..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 4.78%)</title><rect x="688" y="276" width="56" height="15" fill="rgb(207,219,47)"/><text x="691.00" y="286.50">onnxr..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.94%)</title><rect x="721" y="292" width="23" height="15" fill="rgb(206,225,36)"/><text x="724.00" y="302.50">s..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="742" y="308" width="2" height="15" fill="rgb(242,56,35)"/><text x="745.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="744" y="244" width="2" height="15" fill="rgb(234,130,37)"/><text x="747.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (397 samples, 59.25%)</title><rect x="48" y="68" width="699" height="15" fill="rgb(206,105,43)"/><text x="51.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (397 samples, 59.25%)</title><rect x="48" y="84" width="699" height="15" fill="rgb(235,4,53)"/><text x="51.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (397 samples, 59.25%)</title><rect x="48" y="100" width="699" height="15" fill="rgb(214,151,39)"/><text x="51.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (342 samples, 51.04%)</title><rect x="145" y="116" width="602" height="15" fill="rgb(226,166,24)"/><text x="148.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (342 samples, 51.04%)</title><rect x="145" y="132" width="602" height="15" fill="rgb(205,0,30)"/><text x="148.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (342 samples, 51.04%)</title><rect x="145" y="148" width="602" height="15" fill="rgb(237,59,23)"/><text x="148.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (341 samples, 50.90%)</title><rect x="147" y="164" width="600" height="15" fill="rgb(252,126,11)"/><text x="150.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (339 samples, 50.60%)</title><rect x="150" y="180" width="597" height="15" fill="rgb(208,147,4)"/><text x="153.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (336 samples, 50.15%)</title><rect x="156" y="196" width="591" height="15" fill="rgb(232,22,50)"/><text x="159.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (333 samples, 49.70%)</title><rect x="161" y="212" width="586" height="15" fill="rgb(236,52,4)"/><text x="164.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state...</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (333 samples, 49.70%)</title><rect x="161" y="228" width="586" height="15" fill="rgb(251,120,4)"/><text x="164.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(py..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.15%)</title><rect x="746" y="244" width="1" height="15" fill="rgb(246,218,41)"/><text x="749.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.15%)</title><rect x="779" y="196" width="2" height="15" fill="rgb(234,37,47)"/><text x="782.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.15%)</title><rect x="786" y="260" width="2" height="15" fill="rgb(226,64,16)"/><text x="789.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.15%)</title><rect x="786" y="276" width="2" height="15" fill="rgb(219,26,7)"/><text x="789.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="786" y="292" width="2" height="15" fill="rgb(246,25,39)"/><text x="789.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.45%)</title><rect x="784" y="212" width="6" height="15" fill="rgb(237,94,44)"/><text x="787.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 0.45%)</title><rect x="784" y="228" width="6" height="15" fill="rgb(254,53,51)"/><text x="787.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.30%)</title><rect x="786" y="244" width="4" height="15" fill="rgb(238,150,13)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.15%)</title><rect x="788" y="260" width="2" height="15" fill="rgb(252,102,4)"/><text x="791.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="788" y="276" width="2" height="15" fill="rgb(247,174,46)"/><text x="791.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.15%)</title><rect x="788" y="292" width="2" height="15" fill="rgb(235,175,12)"/><text x="791.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="788" y="308" width="2" height="15" fill="rgb(243,109,49)"/><text x="791.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.15%)</title><rect x="788" y="324" width="2" height="15" fill="rgb(205,105,9)"/><text x="791.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.15%)</title><rect x="790" y="212" width="1" height="15" fill="rgb(236,91,4)"/><text x="793.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.15%)</title><rect x="790" y="228" width="1" height="15" fill="rgb(248,111,9)"/><text x="793.00" y="238.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.15%)</title><rect x="793" y="260" width="2" height="15" fill="rgb(206,167,8)"/><text x="796.00" y="270.50"></text></g><g><title>0x7fe8bac4014a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="793" y="276" width="2" height="15" fill="rgb(219,174,36)"/><text x="796.00" y="286.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (3 samples, 0.45%)</title><rect x="800" y="340" width="6" height="15" fill="rgb(244,39,31)"/><text x="803.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (6 samples, 0.90%)</title><rect x="797" y="324" width="10" height="15" fill="rgb(243,220,41)"/><text x="800.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="806" y="340" width="1" height="15" fill="rgb(236,43,16)"/><text x="809.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="806" y="356" width="1" height="15" fill="rgb(211,64,46)"/><text x="809.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="806" y="372" width="1" height="15" fill="rgb(237,169,4)"/><text x="809.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.15%)</title><rect x="806" y="388" width="1" height="15" fill="rgb(237,49,49)"/><text x="809.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.15%)</title><rect x="806" y="404" width="1" height="15" fill="rgb(208,162,1)"/><text x="809.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="806" y="420" width="1" height="15" fill="rgb(205,41,24)"/><text x="809.00" y="430.50"></text></g><g><title>0x7fe8bac21700 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="806" y="436" width="1" height="15" fill="rgb(230,199,8)"/><text x="809.00" y="446.50"></text></g><g><title>0x7fe8bac1eaa4 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="806" y="452" width="1" height="15" fill="rgb(218,91,2)"/><text x="809.00" y="462.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (10 samples, 1.49%)</title><rect x="791" y="244" width="18" height="15" fill="rgb(217,212,6)"/><text x="794.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.19%)</title><rect x="795" y="260" width="14" height="15" fill="rgb(213,79,0)"/><text x="798.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (8 samples, 1.19%)</title><rect x="795" y="276" width="14" height="15" fill="rgb(246,114,52)"/><text x="798.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (8 samples, 1.19%)</title><rect x="795" y="292" width="14" height="15" fill="rgb(250,167,36)"/><text x="798.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (7 samples, 1.04%)</title><rect x="797" y="308" width="12" height="15" fill="rgb(241,205,28)"/><text x="800.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.15%)</title><rect x="807" y="324" width="2" height="15" fill="rgb(207,160,1)"/><text x="810.00" y="334.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="809" y="324" width="2" height="15" fill="rgb(246,177,10)"/><text x="812.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="809" y="340" width="2" height="15" fill="rgb(220,121,52)"/><text x="812.00" y="350.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (1 samples, 0.15%)</title><rect x="811" y="340" width="2" height="15" fill="rgb(227,210,34)"/><text x="814.00" y="350.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.15%)</title><rect x="813" y="372" width="1" height="15" fill="rgb(242,19,51)"/><text x="816.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="813" y="388" width="1" height="15" fill="rgb(251,135,0)"/><text x="816.00" y="398.50"></text></g><g><title>gemm (cblasfuncs.c) (5 samples, 0.75%)</title><rect x="813" y="340" width="8" height="15" fill="rgb(210,86,2)"/><text x="816.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.75%)</title><rect x="813" y="356" width="8" height="15" fill="rgb(244,206,7)"/><text x="816.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.60%)</title><rect x="814" y="372" width="7" height="15" fill="rgb(238,210,35)"/><text x="817.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.60%)</title><rect x="814" y="388" width="7" height="15" fill="rgb(224,60,9)"/><text x="817.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.19%)</title><rect x="809" y="276" width="14" height="15" fill="rgb(253,225,9)"/><text x="812.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 1.19%)</title><rect x="809" y="292" width="14" height="15" fill="rgb(233,196,21)"/><text x="812.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (8 samples, 1.19%)</title><rect x="809" y="308" width="14" height="15" fill="rgb(210,228,48)"/><text x="812.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (7 samples, 1.04%)</title><rect x="811" y="324" width="12" height="15" fill="rgb(220,95,14)"/><text x="814.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (1 samples, 0.15%)</title><rect x="821" y="340" width="2" height="15" fill="rgb(241,135,5)"/><text x="824.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.75%)</title><rect x="823" y="276" width="9" height="15" fill="rgb(216,103,29)"/><text x="826.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (21 samples, 3.13%)</title><rect x="809" y="244" width="37" height="15" fill="rgb(221,131,23)"/><text x="812.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (21 samples, 3.13%)</title><rect x="809" y="260" width="37" height="15" fill="rgb(225,72,30)"/><text x="812.00" y="270.50">dot..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.19%)</title><rect x="832" y="276" width="14" height="15" fill="rgb(252,132,31)"/><text x="835.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="848" y="260" width="2" height="15" fill="rgb(239,140,39)"/><text x="851.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="848" y="276" width="2" height="15" fill="rgb(222,156,43)"/><text x="851.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.15%)</title><rect x="850" y="324" width="1" height="15" fill="rgb(217,102,23)"/><text x="853.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.15%)</title><rect x="851" y="324" width="2" height="15" fill="rgb(237,104,46)"/><text x="854.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="851" y="340" width="2" height="15" fill="rgb(251,152,28)"/><text x="854.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.15%)</title><rect x="851" y="356" width="2" height="15" fill="rgb(240,47,54)"/><text x="854.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.15%)</title><rect x="853" y="324" width="2" height="15" fill="rgb(232,49,47)"/><text x="856.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 0.60%)</title><rect x="850" y="308" width="7" height="15" fill="rgb(226,161,31)"/><text x="853.00" y="318.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.15%)</title><rect x="855" y="324" width="2" height="15" fill="rgb(233,225,5)"/><text x="858.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.04%)</title><rect x="850" y="292" width="12" height="15" fill="rgb(231,112,41)"/><text x="853.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.45%)</title><rect x="857" y="308" width="5" height="15" fill="rgb(216,188,18)"/><text x="860.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.45%)</title><rect x="857" y="324" width="5" height="15" fill="rgb(240,191,7)"/><text x="860.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.30%)</title><rect x="858" y="340" width="4" height="15" fill="rgb(236,13,14)"/><text x="861.00" y="350.50"></text></g><g><title>0x7fe8bac3fd97 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="860" y="356" width="2" height="15" fill="rgb(249,124,22)"/><text x="863.00" y="366.50"></text></g><g><title>0x7fe89d02433a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="862" y="308" width="2" height="15" fill="rgb(220,46,38)"/><text x="865.00" y="318.50"></text></g><g><title>0x7fe89d004890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.30%)</title><rect x="865" y="340" width="4" height="15" fill="rgb(214,198,42)"/><text x="868.00" y="350.50"></text></g><g><title>0x7fe8bad6b1a0 (libm-2.29.so) (3 samples, 0.45%)</title><rect x="876" y="356" width="5" height="15" fill="rgb(218,65,8)"/><text x="879.00" y="366.50"></text></g><g><title>0x7fe8bad9ee0e (libm-2.29.so) (1 samples, 0.15%)</title><rect x="881" y="356" width="2" height="15" fill="rgb(241,137,1)"/><text x="884.00" y="366.50"></text></g><g><title>0x7fe8bad9ee37 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="883" y="356" width="2" height="15" fill="rgb(216,142,47)"/><text x="886.00" y="366.50"></text></g><g><title>0x7fe8bad9ee62 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="885" y="356" width="2" height="15" fill="rgb(228,138,24)"/><text x="888.00" y="366.50"></text></g><g><title>0x7fe8bad9ee71 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="887" y="356" width="1" height="15" fill="rgb(210,142,32)"/><text x="890.00" y="366.50"></text></g><g><title>0x7fe8bad9ee96 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="888" y="356" width="4" height="15" fill="rgb(207,196,28)"/><text x="891.00" y="366.50"></text></g><g><title>0x7fe89d046214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.69%)</title><rect x="864" y="324" width="31" height="15" fill="rgb(218,96,22)"/><text x="867.00" y="334.50">0x..</text></g><g><title>expf (libm-2.29.so) (15 samples, 2.24%)</title><rect x="869" y="340" width="26" height="15" fill="rgb(253,20,11)"/><text x="872.00" y="350.50">e..</text></g><g><title>0x7fe8bad9eea6 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="892" y="356" width="3" height="15" fill="rgb(242,119,35)"/><text x="895.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (29 samples, 4.33%)</title><rect x="850" y="276" width="51" height="15" fill="rgb(250,38,10)"/><text x="853.00" y="286.50">execu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (22 samples, 3.28%)</title><rect x="862" y="292" width="39" height="15" fill="rgb(253,114,43)"/><text x="865.00" y="302.50">tri..</text></g><g><title>0x7fe89d02433d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (21 samples, 3.13%)</title><rect x="864" y="308" width="37" height="15" fill="rgb(246,153,10)"/><text x="867.00" y="318.50">0x7..</text></g><g><title>0x7fe89d046228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.45%)</title><rect x="895" y="324" width="6" height="15" fill="rgb(250,50,18)"/><text x="898.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (63 samples, 9.40%)</title><rect x="791" y="228" width="111" height="15" fill="rgb(223,189,54)"/><text x="794.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (32 samples, 4.78%)</title><rect x="846" y="244" width="56" height="15" fill="rgb(214,65,54)"/><text x="849.00" y="254.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (30 samples, 4.48%)</title><rect x="850" y="260" width="52" height="15" fill="rgb(251,87,2)"/><text x="853.00" y="270.50">PyUFu..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="901" y="276" width="1" height="15" fill="rgb(219,211,13)"/><text x="904.00" y="286.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 0.15%)</title><rect x="901" y="292" width="1" height="15" fill="rgb(242,143,35)"/><text x="904.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.30%)</title><rect x="908" y="324" width="3" height="15" fill="rgb(221,34,15)"/><text x="911.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.30%)</title><rect x="908" y="340" width="3" height="15" fill="rgb(219,219,53)"/><text x="911.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.30%)</title><rect x="908" y="356" width="3" height="15" fill="rgb(219,25,27)"/><text x="911.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.30%)</title><rect x="908" y="372" width="3" height="15" fill="rgb(251,43,17)"/><text x="911.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.30%)</title><rect x="908" y="388" width="3" height="15" fill="rgb(236,137,16)"/><text x="911.00" y="398.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c) (1 samples, 0.15%)</title><rect x="911" y="340" width="2" height="15" fill="rgb(245,105,24)"/><text x="914.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="913" y="372" width="2" height="15" fill="rgb(242,200,12)"/><text x="916.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.15%)</title><rect x="913" y="388" width="2" height="15" fill="rgb(243,131,23)"/><text x="916.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.30%)</title><rect x="915" y="372" width="3" height="15" fill="rgb(208,170,7)"/><text x="918.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.15%)</title><rect x="917" y="388" width="1" height="15" fill="rgb(233,11,22)"/><text x="920.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.15%)</title><rect x="918" y="404" width="2" height="15" fill="rgb(250,51,8)"/><text x="921.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.15%)</title><rect x="918" y="420" width="2" height="15" fill="rgb(239,14,34)"/><text x="921.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="918" y="436" width="2" height="15" fill="rgb(249,177,4)"/><text x="921.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.15%)</title><rect x="918" y="452" width="2" height="15" fill="rgb(212,207,43)"/><text x="921.00" y="462.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="918" y="468" width="2" height="15" fill="rgb(219,224,51)"/><text x="921.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.30%)</title><rect x="918" y="372" width="4" height="15" fill="rgb(212,28,7)"/><text x="921.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.30%)</title><rect x="918" y="388" width="4" height="15" fill="rgb(253,153,25)"/><text x="921.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="920" y="404" width="2" height="15" fill="rgb(233,226,2)"/><text x="923.00" y="414.50"></text></g><g><title>0x7fe8babd7a45 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="920" y="420" width="2" height="15" fill="rgb(213,75,15)"/><text x="923.00" y="430.50"></text></g><g><title>0x7fe8b9e42710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="922" y="388" width="2" height="15" fill="rgb(206,77,11)"/><text x="925.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.30%)</title><rect x="922" y="372" width="3" height="15" fill="rgb(207,197,26)"/><text x="925.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="924" y="388" width="1" height="15" fill="rgb(248,72,35)"/><text x="927.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="924" y="404" width="1" height="15" fill="rgb(252,220,3)"/><text x="927.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="924" y="420" width="1" height="15" fill="rgb(242,202,29)"/><text x="927.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.15%)</title><rect x="924" y="436" width="1" height="15" fill="rgb(219,190,33)"/><text x="927.00" y="446.50"></text></g><g><title>FLOAT_add (loops.c.src) (5 samples, 0.75%)</title><rect x="925" y="388" width="9" height="15" fill="rgb(239,61,42)"/><text x="928.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (2 samples, 0.30%)</title><rect x="931" y="404" width="3" height="15" fill="rgb(242,48,23)"/><text x="934.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (17 samples, 2.54%)</title><rect x="913" y="356" width="30" height="15" fill="rgb(212,197,53)"/><text x="916.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c) (10 samples, 1.49%)</title><rect x="925" y="372" width="18" height="15" fill="rgb(242,188,12)"/><text x="928.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.75%)</title><rect x="934" y="388" width="9" height="15" fill="rgb(243,69,31)"/><text x="937.00" y="398.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="943" y="404" width="2" height="15" fill="rgb(218,53,18)"/><text x="946.00" y="414.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.15%)</title><rect x="943" y="420" width="2" height="15" fill="rgb(210,46,0)"/><text x="946.00" y="430.50"></text></g><g><title>array_sum (methods.c) (23 samples, 3.43%)</title><rect x="908" y="260" width="40" height="15" fill="rgb(215,141,38)"/><text x="911.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c) (23 samples, 3.43%)</title><rect x="908" y="276" width="40" height="15" fill="rgb(248,156,4)"/><text x="911.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py) (23 samples, 3.43%)</title><rect x="908" y="292" width="40" height="15" fill="rgb(250,27,24)"/><text x="911.00" y="302.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (23 samples, 3.43%)</title><rect x="908" y="308" width="40" height="15" fill="rgb(242,1,54)"/><text x="911.00" y="318.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (21 samples, 3.13%)</title><rect x="911" y="324" width="37" height="15" fill="rgb(241,188,32)"/><text x="914.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (20 samples, 2.99%)</title><rect x="913" y="340" width="35" height="15" fill="rgb(223,1,50)"/><text x="916.00" y="350.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (3 samples, 0.45%)</title><rect x="943" y="356" width="5" height="15" fill="rgb(245,56,49)"/><text x="946.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.45%)</title><rect x="943" y="372" width="5" height="15" fill="rgb(223,95,2)"/><text x="946.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (3 samples, 0.45%)</title><rect x="943" y="388" width="5" height="15" fill="rgb(216,228,52)"/><text x="946.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.30%)</title><rect x="945" y="404" width="3" height="15" fill="rgb(237,55,33)"/><text x="948.00" y="414.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c) (1 samples, 0.15%)</title><rect x="950" y="324" width="2" height="15" fill="rgb(205,168,5)"/><text x="953.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 0.60%)</title><rect x="952" y="324" width="7" height="15" fill="rgb(227,62,12)"/><text x="955.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 0.60%)</title><rect x="952" y="340" width="7" height="15" fill="rgb(253,197,42)"/><text x="955.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 0.60%)</title><rect x="952" y="356" width="7" height="15" fill="rgb(215,128,44)"/><text x="955.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.15%)</title><rect x="957" y="372" width="2" height="15" fill="rgb(223,25,44)"/><text x="960.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 0.90%)</title><rect x="950" y="292" width="11" height="15" fill="rgb(230,164,20)"/><text x="953.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 0.90%)</title><rect x="950" y="308" width="11" height="15" fill="rgb(205,150,48)"/><text x="953.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="959" y="324" width="2" height="15" fill="rgb(224,122,36)"/><text x="962.00" y="334.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (118 samples, 17.61%)</title><rect x="754" y="164" width="208" height="15" fill="rgb(220,60,35)"/><text x="757.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (118 samples, 17.61%)</title><rect x="754" y="180" width="208" height="15" fill="rgb(225,98,19)"/><text x="757.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (103 samples, 15.37%)</title><rect x="781" y="196" width="181" height="15" fill="rgb(231,53,14)"/><text x="784.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (97 samples, 14.48%)</title><rect x="791" y="212" width="171" height="15" fill="rgb(224,168,13)"/><text x="794.00" y="222.50">run (mlprodict/onnxrt/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (34 samples, 5.07%)</title><rect x="902" y="228" width="60" height="15" fill="rgb(232,52,35)"/><text x="905.00" y="238.50">_run (..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (34 samples, 5.07%)</title><rect x="902" y="244" width="60" height="15" fill="rgb(222,32,6)"/><text x="905.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.19%)</title><rect x="948" y="260" width="14" height="15" fill="rgb(209,182,38)"/><text x="951.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.04%)</title><rect x="950" y="276" width="12" height="15" fill="rgb(242,51,6)"/><text x="953.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="961" y="292" width="1" height="15" fill="rgb(209,212,7)"/><text x="964.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (121 samples, 18.06%)</title><rect x="751" y="132" width="213" height="15" fill="rgb(215,208,37)"/><text x="754.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (120 samples, 17.91%)</title><rect x="753" y="148" width="211" height="15" fill="rgb(217,110,41)"/><text x="756.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="962" y="164" width="2" height="15" fill="rgb(231,55,9)"/><text x="965.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="962" y="180" width="2" height="15" fill="rgb(229,116,33)"/><text x="965.00" y="190.50"></text></g><g><title>0x7fe8b9e417c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="962" y="196" width="2" height="15" fill="rgb(217,195,1)"/><text x="965.00" y="206.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (124 samples, 18.51%)</title><rect x="747" y="68" width="219" height="15" fill="rgb(216,140,44)"/><text x="750.00" y="78.50">profile_pyrt (bench_Logistic..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (124 samples, 18.51%)</title><rect x="747" y="84" width="219" height="15" fill="rgb(244,103,52)"/><text x="750.00" y="94.50">setup_profile (bench_Logisti..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (124 samples, 18.51%)</title><rect x="747" y="100" width="219" height="15" fill="rgb(243,145,6)"/><text x="750.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (123 samples, 18.36%)</title><rect x="749" y="116" width="217" height="15" fill="rgb(220,1,53)"/><text x="752.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="964" y="132" width="2" height="15" fill="rgb(220,47,44)"/><text x="967.00" y="142.50"></text></g><g><title>0x7fe8bac35e7a (libc-2.29.so) (1 samples, 0.15%)</title><rect x="982" y="324" width="1" height="15" fill="rgb(245,188,42)"/><text x="985.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 0.60%)</title><rect x="978" y="244" width="7" height="15" fill="rgb(218,53,2)"/><text x="981.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 0.60%)</title><rect x="978" y="260" width="7" height="15" fill="rgb(239,168,28)"/><text x="981.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 0.60%)</title><rect x="978" y="276" width="7" height="15" fill="rgb(206,207,23)"/><text x="981.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 0.60%)</title><rect x="978" y="292" width="7" height="15" fill="rgb(207,5,9)"/><text x="981.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 0.60%)</title><rect x="978" y="308" width="7" height="15" fill="rgb(228,39,21)"/><text x="981.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.15%)</title><rect x="983" y="324" width="2" height="15" fill="rgb(254,195,9)"/><text x="986.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="989" y="292" width="1" height="15" fill="rgb(209,162,36)"/><text x="992.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.15%)</title><rect x="989" y="308" width="1" height="15" fill="rgb(225,186,16)"/><text x="992.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.15%)</title><rect x="990" y="292" width="2" height="15" fill="rgb(240,73,20)"/><text x="993.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="990" y="308" width="2" height="15" fill="rgb(222,134,26)"/><text x="993.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.15%)</title><rect x="990" y="324" width="2" height="15" fill="rgb(239,160,48)"/><text x="993.00" y="334.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.15%)</title><rect x="990" y="340" width="2" height="15" fill="rgb(224,195,7)"/><text x="993.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.30%)</title><rect x="992" y="308" width="4" height="15" fill="rgb(234,90,18)"/><text x="995.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.15%)</title><rect x="994" y="324" width="2" height="15" fill="rgb(227,167,26)"/><text x="997.00" y="334.50"></text></g><g><title>array_sum (methods.c) (15 samples, 2.24%)</title><rect x="978" y="180" width="27" height="15" fill="rgb(228,27,21)"/><text x="981.00" y="190.50">a..</text></g><g><title>forward_ndarray_method (methods.c) (15 samples, 2.24%)</title><rect x="978" y="196" width="27" height="15" fill="rgb(247,85,5)"/><text x="981.00" y="206.50">f..</text></g><g><title>_sum (numpy/core/_methods.py) (15 samples, 2.24%)</title><rect x="978" y="212" width="27" height="15" fill="rgb(217,63,40)"/><text x="981.00" y="222.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (15 samples, 2.24%)</title><rect x="978" y="228" width="27" height="15" fill="rgb(234,192,12)"/><text x="981.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (11 samples, 1.64%)</title><rect x="985" y="244" width="20" height="15" fill="rgb(221,114,2)"/><text x="988.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (9 samples, 1.34%)</title><rect x="989" y="260" width="16" height="15" fill="rgb(243,85,21)"/><text x="992.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 1.34%)</title><rect x="989" y="276" width="16" height="15" fill="rgb(226,102,18)"/><text x="992.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (7 samples, 1.04%)</title><rect x="992" y="292" width="13" height="15" fill="rgb(237,149,18)"/><text x="995.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (5 samples, 0.75%)</title><rect x="996" y="308" width="9" height="15" fill="rgb(236,205,3)"/><text x="999.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1010" y="228" width="2" height="15" fill="rgb(217,16,21)"/><text x="1013.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="1010" y="244" width="2" height="15" fill="rgb(205,20,17)"/><text x="1013.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.15%)</title><rect x="1012" y="276" width="1" height="15" fill="rgb(228,219,9)"/><text x="1015.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="1012" y="292" width="1" height="15" fill="rgb(214,111,36)"/><text x="1015.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.15%)</title><rect x="1012" y="308" width="1" height="15" fill="rgb(231,144,11)"/><text x="1015.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.15%)</title><rect x="1012" y="324" width="1" height="15" fill="rgb(239,134,41)"/><text x="1015.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.15%)</title><rect x="1013" y="276" width="2" height="15" fill="rgb(246,187,45)"/><text x="1016.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1013" y="292" width="2" height="15" fill="rgb(223,124,51)"/><text x="1016.00" y="302.50"></text></g><g><title>array_add (number.c) (5 samples, 0.75%)</title><rect x="1010" y="196" width="9" height="15" fill="rgb(227,162,28)"/><text x="1013.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.75%)</title><rect x="1010" y="212" width="9" height="15" fill="rgb(245,218,52)"/><text x="1013.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.60%)</title><rect x="1012" y="228" width="7" height="15" fill="rgb(244,110,17)"/><text x="1015.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.60%)</title><rect x="1012" y="244" width="7" height="15" fill="rgb(216,17,30)"/><text x="1015.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.60%)</title><rect x="1012" y="260" width="7" height="15" fill="rgb(213,198,11)"/><text x="1015.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.30%)</title><rect x="1015" y="276" width="4" height="15" fill="rgb(232,0,50)"/><text x="1018.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.30%)</title><rect x="1015" y="292" width="4" height="15" fill="rgb(240,221,49)"/><text x="1018.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.30%)</title><rect x="1015" y="308" width="4" height="15" fill="rgb(234,97,27)"/><text x="1018.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.15%)</title><rect x="1019" y="196" width="1" height="15" fill="rgb(212,206,38)"/><text x="1022.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.15%)</title><rect x="1019" y="212" width="1" height="15" fill="rgb(215,20,44)"/><text x="1022.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.15%)</title><rect x="1019" y="228" width="1" height="15" fill="rgb(253,50,49)"/><text x="1022.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.30%)</title><rect x="1026" y="212" width="3" height="15" fill="rgb(240,147,31)"/><text x="1029.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.30%)</title><rect x="1029" y="212" width="4" height="15" fill="rgb(210,147,17)"/><text x="1032.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.15%)</title><rect x="1033" y="228" width="2" height="15" fill="rgb(218,105,16)"/><text x="1036.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.30%)</title><rect x="1033" y="212" width="3" height="15" fill="rgb(219,61,33)"/><text x="1036.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.15%)</title><rect x="1035" y="228" width="1" height="15" fill="rgb(250,164,2)"/><text x="1038.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.30%)</title><rect x="1036" y="212" width="4" height="15" fill="rgb(212,87,37)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7fe8bacfd163 (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1038" y="228" width="2" height="15" fill="rgb(235,186,12)"/><text x="1041.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 1.04%)</title><rect x="1040" y="212" width="12" height="15" fill="rgb(242,183,45)"/><text x="1043.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py) (4 samples, 0.60%)</title><rect x="1045" y="228" width="7" height="15" fill="rgb(250,147,3)"/><text x="1048.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.30%)</title><rect x="1049" y="244" width="3" height="15" fill="rgb(246,112,9)"/><text x="1052.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.30%)</title><rect x="1052" y="212" width="4" height="15" fill="rgb(215,105,48)"/><text x="1055.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.30%)</title><rect x="1056" y="212" width="3" height="15" fill="rgb(220,119,51)"/><text x="1059.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.30%)</title><rect x="1056" y="228" width="3" height="15" fill="rgb(213,146,16)"/><text x="1059.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (23 samples, 3.43%)</title><rect x="1020" y="196" width="41" height="15" fill="rgb(210,73,12)"/><text x="1023.00" y="206.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.15%)</title><rect x="1059" y="212" width="2" height="15" fill="rgb(235,109,53)"/><text x="1062.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.15%)</title><rect x="1059" y="228" width="2" height="15" fill="rgb(246,76,5)"/><text x="1062.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (7 samples, 1.04%)</title><rect x="1061" y="196" width="12" height="15" fill="rgb(220,10,14)"/><text x="1064.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 0.90%)</title><rect x="1063" y="212" width="10" height="15" fill="rgb(232,153,6)"/><text x="1066.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.30%)</title><rect x="1070" y="228" width="3" height="15" fill="rgb(234,177,2)"/><text x="1073.00" y="238.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.45%)</title><rect x="1080" y="212" width="6" height="15" fill="rgb(220,187,22)"/><text x="1083.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.30%)</title><rect x="1086" y="212" width="3" height="15" fill="rgb(210,113,7)"/><text x="1089.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1091" y="228" width="2" height="15" fill="rgb(243,30,13)"/><text x="1094.00" y="238.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.30%)</title><rect x="1093" y="260" width="3" height="15" fill="rgb(215,78,33)"/><text x="1096.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.30%)</title><rect x="1093" y="276" width="3" height="15" fill="rgb(220,168,25)"/><text x="1096.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.30%)</title><rect x="1093" y="292" width="3" height="15" fill="rgb(242,155,48)"/><text x="1096.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.30%)</title><rect x="1093" y="308" width="3" height="15" fill="rgb(230,56,2)"/><text x="1096.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.45%)</title><rect x="1096" y="260" width="5" height="15" fill="rgb(230,165,16)"/><text x="1099.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.45%)</title><rect x="1096" y="276" width="5" height="15" fill="rgb(235,31,47)"/><text x="1099.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.45%)</title><rect x="1096" y="292" width="5" height="15" fill="rgb(232,170,3)"/><text x="1099.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.45%)</title><rect x="1096" y="308" width="5" height="15" fill="rgb(231,201,52)"/><text x="1099.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (2 samples, 0.30%)</title><rect x="1098" y="324" width="3" height="15" fill="rgb(230,35,33)"/><text x="1101.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1101" y="260" width="2" height="15" fill="rgb(208,43,34)"/><text x="1104.00" y="270.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1101" y="276" width="2" height="15" fill="rgb(248,157,49)"/><text x="1104.00" y="286.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.15%)</title><rect x="1101" y="292" width="2" height="15" fill="rgb(214,190,26)"/><text x="1104.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.15%)</title><rect x="1101" y="308" width="2" height="15" fill="rgb(232,60,42)"/><text x="1104.00" y="318.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.15%)</title><rect x="1103" y="260" width="2" height="15" fill="rgb(244,72,50)"/><text x="1106.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (58 samples, 8.66%)</title><rect x="1005" y="180" width="102" height="15" fill="rgb(245,218,10)"/><text x="1008.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 2.84%)</title><rect x="1073" y="196" width="34" height="15" fill="rgb(225,221,12)"/><text x="1076.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.49%)</title><rect x="1089" y="212" width="18" height="15" fill="rgb(211,146,47)"/><text x="1092.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 1.19%)</title><rect x="1093" y="228" width="14" height="15" fill="rgb(206,50,3)"/><text x="1096.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (8 samples, 1.19%)</title><rect x="1093" y="244" width="14" height="15" fill="rgb(240,38,29)"/><text x="1096.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1105" y="260" width="2" height="15" fill="rgb(226,24,13)"/><text x="1108.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.15%)</title><rect x="1105" y="276" width="2" height="15" fill="rgb(235,36,6)"/><text x="1108.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.15%)</title><rect x="1107" y="196" width="1" height="15" fill="rgb(240,52,45)"/><text x="1110.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.15%)</title><rect x="1107" y="212" width="1" height="15" fill="rgb(244,196,37)"/><text x="1110.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.15%)</title><rect x="1107" y="228" width="1" height="15" fill="rgb(232,0,27)"/><text x="1110.00" y="238.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.15%)</title><rect x="1108" y="212" width="2" height="15" fill="rgb(210,119,3)"/><text x="1111.00" y="222.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.15%)</title><rect x="1108" y="228" width="2" height="15" fill="rgb(219,212,5)"/><text x="1111.00" y="238.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1108" y="244" width="2" height="15" fill="rgb(241,34,14)"/><text x="1111.00" y="254.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.15%)</title><rect x="1112" y="228" width="2" height="15" fill="rgb(230,99,3)"/><text x="1115.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1112" y="244" width="2" height="15" fill="rgb(208,163,25)"/><text x="1115.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.15%)</title><rect x="1112" y="260" width="2" height="15" fill="rgb(213,90,21)"/><text x="1115.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1112" y="276" width="2" height="15" fill="rgb(217,25,31)"/><text x="1115.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (4 samples, 0.60%)</title><rect x="1114" y="244" width="7" height="15" fill="rgb(228,76,4)"/><text x="1117.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (4 samples, 0.60%)</title><rect x="1114" y="260" width="7" height="15" fill="rgb(214,213,52)"/><text x="1117.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (4 samples, 0.60%)</title><rect x="1114" y="276" width="7" height="15" fill="rgb(220,158,39)"/><text x="1117.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.60%)</title><rect x="1114" y="292" width="7" height="15" fill="rgb(207,6,9)"/><text x="1117.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.04%)</title><rect x="1114" y="228" width="12" height="15" fill="rgb(251,84,23)"/><text x="1117.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (3 samples, 0.45%)</title><rect x="1121" y="244" width="5" height="15" fill="rgb(224,174,38)"/><text x="1124.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.45%)</title><rect x="1121" y="260" width="5" height="15" fill="rgb(209,131,29)"/><text x="1124.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.45%)</title><rect x="1121" y="276" width="5" height="15" fill="rgb(254,115,5)"/><text x="1124.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.45%)</title><rect x="1121" y="292" width="5" height="15" fill="rgb(214,94,54)"/><text x="1124.00" y="302.50"></text></g><g><title>0x7fe89d0259dd (?) (1 samples, 0.15%)</title><rect x="1126" y="244" width="2" height="15" fill="rgb(235,168,20)"/><text x="1129.00" y="254.50"></text></g><g><title>0x7fe89d046265 (?) (1 samples, 0.15%)</title><rect x="1126" y="260" width="2" height="15" fill="rgb(238,161,29)"/><text x="1129.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1126" y="276" width="2" height="15" fill="rgb(210,65,30)"/><text x="1129.00" y="286.50"></text></g><g><title>0x7fe8badf1bb4 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1126" y="292" width="2" height="15" fill="rgb(238,127,52)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7fe89d046254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1128" y="260" width="2" height="15" fill="rgb(251,202,11)"/><text x="1131.00" y="270.50"></text></g><g><title>0x7fe89d14f9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1130" y="276" width="1" height="15" fill="rgb(236,104,50)"/><text x="1133.00" y="286.50"></text></g><g><title>0x7fe8bad6b1b0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1133" y="292" width="2" height="15" fill="rgb(246,98,43)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7fe8badf1ba0 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1135" y="292" width="2" height="15" fill="rgb(234,50,39)"/><text x="1138.00" y="302.50"></text></g><g><title>0x7fe8badf1be7 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1137" y="292" width="1" height="15" fill="rgb(251,6,45)"/><text x="1140.00" y="302.50"></text></g><g><title>0x7fe8badf1bf9 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1138" y="292" width="2" height="15" fill="rgb(247,109,29)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7fe8badf1c07 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="1140" y="292" width="4" height="15" fill="rgb(243,215,36)"/><text x="1143.00" y="302.50"></text></g><g><title>0x7fe8badf1c18 (libm-2.29.so) (1 samples, 0.15%)</title><rect x="1144" y="292" width="1" height="15" fill="rgb(222,193,44)"/><text x="1147.00" y="302.50"></text></g><g><title>0x7fe8badf1c3e (libm-2.29.so) (3 samples, 0.45%)</title><rect x="1145" y="292" width="6" height="15" fill="rgb(218,165,28)"/><text x="1148.00" y="302.50"></text></g><g><title>0x7fe89d046265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (14 samples, 2.09%)</title><rect x="1130" y="260" width="24" height="15" fill="rgb(218,145,5)"/><text x="1133.00" y="270.50">0..</text></g><g><title>exp (libm-2.29.so) (13 samples, 1.94%)</title><rect x="1131" y="276" width="23" height="15" fill="rgb(232,34,53)"/><text x="1134.00" y="286.50">e..</text></g><g><title>0x7fe8badf1c56 (libm-2.29.so) (2 samples, 0.30%)</title><rect x="1151" y="292" width="3" height="15" fill="rgb(211,105,48)"/><text x="1154.00" y="302.50"></text></g><g><title>0x7fe89d0259dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 3.88%)</title><rect x="1128" y="244" width="46" height="15" fill="rgb(253,204,33)"/><text x="1131.00" y="254.50">0x7f..</text></g><g><title>0x7fe89d046279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.64%)</title><rect x="1154" y="260" width="20" height="15" fill="rgb(216,59,4)"/><text x="1157.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (37 samples, 5.52%)</title><rect x="1110" y="212" width="65" height="15" fill="rgb(209,61,21)"/><text x="1113.00" y="222.50">execute..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (28 samples, 4.18%)</title><rect x="1126" y="228" width="49" height="15" fill="rgb(247,20,41)"/><text x="1129.00" y="238.50">triv..</text></g><g><title>0x7fe89d0259e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.15%)</title><rect x="1174" y="244" width="1" height="15" fill="rgb(218,101,6)"/><text x="1177.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.15%)</title><rect x="1175" y="212" width="2" height="15" fill="rgb(254,117,24)"/><text x="1178.00" y="222.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (116 samples, 17.31%)</title><rect x="975" y="164" width="204" height="15" fill="rgb(239,202,14)"/><text x="978.00" y="174.50">_predict_proba_lr (sklearn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (41 samples, 6.12%)</title><rect x="1107" y="180" width="72" height="15" fill="rgb(219,188,35)"/><text x="1110.00" y="190.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (40 samples, 5.97%)</title><rect x="1108" y="196" width="71" height="15" fill="rgb(228,219,2)"/><text x="1111.00" y="206.50">PyUFunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.15%)</title><rect x="1177" y="212" width="2" height="15" fill="rgb(228,157,16)"/><text x="1180.00" y="222.50"></text></g><g><title>0x7fe8bac4014e (libc-2.29.so) (1 samples, 0.15%)</title><rect x="1177" y="228" width="2" height="15" fill="rgb(236,153,0)"/><text x="1180.00" y="238.50"></text></g><g><title>all (670 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,44,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (670 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,143,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (127 samples, 18.96%)</title><rect x="966" y="68" width="224" height="15" fill="rgb(217,92,0)"/><text x="969.00" y="78.50">profile_skl (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (127 samples, 18.96%)</title><rect x="966" y="84" width="224" height="15" fill="rgb(229,41,13)"/><text x="969.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_.py) (127 samples, 18.96%)</title><rect x="966" y="100" width="224" height="15" fill="rgb(250,208,52)"/><text x="969.00" y="110.50">profile (bench_LogisticRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 18.66%)</title><rect x="969" y="116" width="221" height="15" fill="rgb(220,37,47)"/><text x="972.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (124 samples, 18.51%)</title><rect x="971" y="132" width="219" height="15" fill="rgb(219,186,38)"/><text x="974.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (124 samples, 18.51%)</title><rect x="971" y="148" width="219" height="15" fill="rgb(244,74,25)"/><text x="974.00" y="158.50">predict_proba (sklearn/linea..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.90%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(221,5,21)"/><text x="1182.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.45%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(213,197,29)"/><text x="1187.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.30%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(253,109,32)"/><text x="1189.00" y="206.50"></text></g></g></svg>