<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1526" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1509.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1509.00"> </text><g id="frames"><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="13" y="116" width="4" height="15" fill="rgb(208,59,34)"/><text x="16.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="13" y="132" width="4" height="15" fill="rgb(243,229,18)"/><text x="16.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.31%)</title><rect x="13" y="148" width="4" height="15" fill="rgb(223,18,16)"/><text x="16.00" y="158.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.56%)</title><rect x="57" y="180" width="19" height="15" fill="rgb(213,83,0)"/><text x="60.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.94%)</title><rect x="65" y="196" width="11" height="15" fill="rgb(206,182,26)"/><text x="68.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (11 samples, 3.44%)</title><rect x="46" y="148" width="41" height="15" fill="rgb(206,175,6)"/><text x="49.00" y="158.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.44%)</title><rect x="46" y="164" width="41" height="15" fill="rgb(233,164,39)"/><text x="49.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 0.94%)</title><rect x="76" y="180" width="11" height="15" fill="rgb(227,189,39)"/><text x="79.00" y="190.50"></text></g><g><title>0x7fca8fd2012f (libc-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="196" width="4" height="15" fill="rgb(218,44,26)"/><text x="86.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.31%)</title><rect x="105" y="196" width="4" height="15" fill="rgb(253,173,12)"/><text x="108.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.62%)</title><rect x="116" y="228" width="8" height="15" fill="rgb(225,21,20)"/><text x="119.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (7 samples, 2.19%)</title><rect x="105" y="180" width="26" height="15" fill="rgb(248,65,30)"/><text x="108.00" y="190.50">d..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 1.88%)</title><rect x="109" y="196" width="22" height="15" fill="rgb(247,194,43)"/><text x="112.00" y="206.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 1.88%)</title><rect x="109" y="212" width="22" height="15" fill="rgb(214,68,6)"/><text x="112.00" y="222.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="124" y="228" width="7" height="15" fill="rgb(218,12,18)"/><text x="127.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.31%)</title><rect x="135" y="196" width="4" height="15" fill="rgb(239,133,14)"/><text x="138.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.31%)</title><rect x="139" y="196" width="3" height="15" fill="rgb(233,153,28)"/><text x="142.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.31%)</title><rect x="142" y="196" width="4" height="15" fill="rgb(233,98,32)"/><text x="145.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.31%)</title><rect x="146" y="196" width="4" height="15" fill="rgb(233,27,22)"/><text x="149.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.31%)</title><rect x="157" y="212" width="4" height="15" fill="rgb(230,87,1)"/><text x="160.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.25%)</title><rect x="150" y="196" width="14" height="15" fill="rgb(231,140,45)"/><text x="153.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.31%)</title><rect x="161" y="212" width="3" height="15" fill="rgb(217,60,32)"/><text x="164.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.25%)</title><rect x="172" y="228" width="15" height="15" fill="rgb(232,200,20)"/><text x="175.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 2.19%)</title><rect x="164" y="196" width="26" height="15" fill="rgb(234,122,51)"/><text x="167.00" y="206.50">c..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.19%)</title><rect x="164" y="212" width="26" height="15" fill="rgb(248,59,9)"/><text x="167.00" y="222.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.31%)</title><rect x="187" y="228" width="3" height="15" fill="rgb(209,89,18)"/><text x="190.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.62%)</title><rect x="190" y="196" width="8" height="15" fill="rgb(253,219,39)"/><text x="193.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.31%)</title><rect x="194" y="212" width="4" height="15" fill="rgb(231,34,54)"/><text x="197.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.31%)</title><rect x="198" y="212" width="3" height="15" fill="rgb(232,211,48)"/><text x="201.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.62%)</title><rect x="198" y="196" width="7" height="15" fill="rgb(236,185,21)"/><text x="201.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.31%)</title><rect x="201" y="212" width="4" height="15" fill="rgb(226,115,53)"/><text x="204.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.62%)</title><rect x="205" y="196" width="7" height="15" fill="rgb(243,91,54)"/><text x="208.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.62%)</title><rect x="205" y="212" width="7" height="15" fill="rgb(211,187,23)"/><text x="208.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.31%)</title><rect x="212" y="212" width="4" height="15" fill="rgb(236,68,9)"/><text x="215.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:293) (1 samples, 0.31%)</title><rect x="212" y="228" width="4" height="15" fill="rgb(227,35,17)"/><text x="215.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.62%)</title><rect x="216" y="212" width="7" height="15" fill="rgb(207,179,32)"/><text x="219.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (2 samples, 0.62%)</title><rect x="216" y="228" width="7" height="15" fill="rgb(254,29,5)"/><text x="219.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (5 samples, 1.56%)</title><rect x="212" y="196" width="19" height="15" fill="rgb(229,168,16)"/><text x="215.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (2 samples, 0.62%)</title><rect x="223" y="212" width="8" height="15" fill="rgb(218,104,42)"/><text x="226.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (2 samples, 0.62%)</title><rect x="223" y="228" width="8" height="15" fill="rgb(223,74,51)"/><text x="226.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:554) (1 samples, 0.31%)</title><rect x="231" y="196" width="3" height="15" fill="rgb(215,33,54)"/><text x="234.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.31%)</title><rect x="249" y="228" width="4" height="15" fill="rgb(225,140,40)"/><text x="252.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.88%)</title><rect x="234" y="212" width="23" height="15" fill="rgb(234,12,24)"/><text x="237.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="253" y="228" width="4" height="15" fill="rgb(218,164,52)"/><text x="256.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.19%)</title><rect x="234" y="196" width="26" height="15" fill="rgb(232,195,54)"/><text x="237.00" y="206.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.31%)</title><rect x="257" y="212" width="3" height="15" fill="rgb(252,4,9)"/><text x="260.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py:13) (1 samples, 0.31%)</title><rect x="257" y="228" width="3" height="15" fill="rgb(238,56,26)"/><text x="260.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 1.56%)</title><rect x="264" y="212" width="18" height="15" fill="rgb(253,190,4)"/><text x="267.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.31%)</title><rect x="282" y="212" width="4" height="15" fill="rgb(253,74,3)"/><text x="285.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.31%)</title><rect x="286" y="212" width="4" height="15" fill="rgb(245,100,31)"/><text x="289.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.31%)</title><rect x="286" y="228" width="4" height="15" fill="rgb(225,34,19)"/><text x="289.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (49 samples, 15.31%)</title><rect x="131" y="180" width="181" height="15" fill="rgb(242,51,40)"/><text x="134.00" y="190.50">decision_function (skle..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (14 samples, 4.38%)</title><rect x="260" y="196" width="52" height="15" fill="rgb(210,213,2)"/><text x="263.00" y="206.50">check..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 1.88%)</title><rect x="290" y="212" width="22" height="15" fill="rgb(227,31,45)"/><text x="293.00" y="222.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.25%)</title><rect x="297" y="228" width="15" height="15" fill="rgb(241,29,33)"/><text x="300.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:271) (1 samples, 0.31%)</title><rect x="312" y="180" width="4" height="15" fill="rgb(219,100,1)"/><text x="315.00" y="190.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.31%)</title><rect x="316" y="180" width="3" height="15" fill="rgb(237,54,53)"/><text x="319.00" y="190.50"></text></g><g><title>array_add (number.c:326) (2 samples, 0.62%)</title><rect x="319" y="196" width="8" height="15" fill="rgb(213,20,26)"/><text x="322.00" y="206.50"></text></g><g><title>try_binary_elide (temp_elide.c:338) (1 samples, 0.31%)</title><rect x="323" y="212" width="4" height="15" fill="rgb(235,78,12)"/><text x="326.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3184) (1 samples, 0.31%)</title><rect x="327" y="228" width="3" height="15" fill="rgb(230,208,14)"/><text x="330.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.31%)</title><rect x="330" y="244" width="4" height="15" fill="rgb(238,114,21)"/><text x="333.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1472) (1 samples, 0.31%)</title><rect x="330" y="260" width="4" height="15" fill="rgb(251,73,41)"/><text x="333.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.31%)</title><rect x="334" y="276" width="4" height="15" fill="rgb(237,19,5)"/><text x="337.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:781) (1 samples, 0.31%)</title><rect x="334" y="292" width="4" height="15" fill="rgb(238,79,36)"/><text x="337.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.31%)</title><rect x="338" y="292" width="3" height="15" fill="rgb(244,183,44)"/><text x="341.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.62%)</title><rect x="338" y="276" width="7" height="15" fill="rgb(226,26,31)"/><text x="341.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.31%)</title><rect x="341" y="292" width="4" height="15" fill="rgb(243,25,26)"/><text x="344.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.25%)</title><rect x="334" y="260" width="15" height="15" fill="rgb(238,210,12)"/><text x="337.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="345" y="276" width="4" height="15" fill="rgb(251,92,21)"/><text x="348.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.31%)</title><rect x="345" y="292" width="4" height="15" fill="rgb(226,7,12)"/><text x="348.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2519) (1 samples, 0.31%)</title><rect x="345" y="308" width="4" height="15" fill="rgb(213,0,45)"/><text x="348.00" y="318.50"></text></g><g><title>array_add (number.c:330) (7 samples, 2.19%)</title><rect x="327" y="196" width="25" height="15" fill="rgb(224,117,2)"/><text x="330.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.19%)</title><rect x="327" y="212" width="25" height="15" fill="rgb(225,226,3)"/><text x="330.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.88%)</title><rect x="330" y="228" width="22" height="15" fill="rgb(217,184,5)"/><text x="333.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.56%)</title><rect x="334" y="244" width="18" height="15" fill="rgb(231,208,21)"/><text x="337.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="349" y="260" width="3" height="15" fill="rgb(206,59,4)"/><text x="352.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.31%)</title><rect x="349" y="276" width="3" height="15" fill="rgb(246,216,48)"/><text x="352.00" y="286.50"></text></g><g><title>0x7fca8fcff965 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="349" y="292" width="3" height="15" fill="rgb(216,204,7)"/><text x="352.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.31%)</title><rect x="352" y="212" width="4" height="15" fill="rgb(237,75,42)"/><text x="355.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.62%)</title><rect x="352" y="196" width="8" height="15" fill="rgb(239,201,6)"/><text x="355.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="356" y="212" width="4" height="15" fill="rgb(216,150,28)"/><text x="359.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="356" y="228" width="4" height="15" fill="rgb(213,21,16)"/><text x="359.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.31%)</title><rect x="360" y="196" width="4" height="15" fill="rgb(226,211,43)"/><text x="363.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.31%)</title><rect x="360" y="212" width="4" height="15" fill="rgb(254,57,14)"/><text x="363.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.31%)</title><rect x="360" y="228" width="4" height="15" fill="rgb(217,92,25)"/><text x="363.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2592) (1 samples, 0.31%)</title><rect x="367" y="244" width="4" height="15" fill="rgb(206,132,28)"/><text x="370.00" y="254.50"></text></g><g><title>_initialize_variable_parts (ufunc_object.c:2511) (1 samples, 0.31%)</title><rect x="367" y="260" width="4" height="15" fill="rgb(245,192,0)"/><text x="370.00" y="270.50"></text></g><g><title>0x7fca8fd1fdb3 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="367" y="276" width="4" height="15" fill="rgb(228,141,23)"/><text x="370.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.31%)</title><rect x="371" y="244" width="4" height="15" fill="rgb(230,206,52)"/><text x="374.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.31%)</title><rect x="371" y="260" width="4" height="15" fill="rgb(206,113,50)"/><text x="374.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.31%)</title><rect x="371" y="276" width="4" height="15" fill="rgb(222,69,3)"/><text x="374.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.31%)</title><rect x="375" y="260" width="3" height="15" fill="rgb(227,205,22)"/><text x="378.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1646) (1 samples, 0.31%)</title><rect x="375" y="276" width="3" height="15" fill="rgb(243,166,39)"/><text x="378.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2757) (1 samples, 0.31%)</title><rect x="378" y="276" width="4" height="15" fill="rgb(216,134,23)"/><text x="381.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.31%)</title><rect x="382" y="276" width="4" height="15" fill="rgb(252,125,13)"/><text x="385.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.31%)</title><rect x="382" y="292" width="4" height="15" fill="rgb(215,136,44)"/><text x="385.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="382" y="308" width="4" height="15" fill="rgb(235,119,27)"/><text x="385.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.31%)</title><rect x="382" y="324" width="4" height="15" fill="rgb(253,42,42)"/><text x="385.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.31%)</title><rect x="382" y="340" width="4" height="15" fill="rgb(254,106,13)"/><text x="385.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.31%)</title><rect x="382" y="356" width="4" height="15" fill="rgb(209,32,29)"/><text x="385.00" y="366.50"></text></g><g><title>0x7fca8ef21710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="382" y="372" width="4" height="15" fill="rgb(214,190,20)"/><text x="385.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.31%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(214,142,45)"/><text x="389.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.31%)</title><rect x="386" y="324" width="3" height="15" fill="rgb(246,14,16)"/><text x="389.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.31%)</title><rect x="386" y="340" width="3" height="15" fill="rgb(241,47,12)"/><text x="389.00" y="350.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.31%)</title><rect x="389" y="308" width="4" height="15" fill="rgb(217,147,24)"/><text x="392.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="389" y="324" width="4" height="15" fill="rgb(220,28,31)"/><text x="392.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (3 samples, 0.94%)</title><rect x="386" y="276" width="11" height="15" fill="rgb(250,135,16)"/><text x="389.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.94%)</title><rect x="386" y="292" width="11" height="15" fill="rgb(228,164,42)"/><text x="389.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.31%)</title><rect x="393" y="308" width="4" height="15" fill="rgb(229,161,42)"/><text x="396.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.31%)</title><rect x="393" y="324" width="4" height="15" fill="rgb(217,174,10)"/><text x="396.00" y="334.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.31%)</title><rect x="393" y="340" width="4" height="15" fill="rgb(207,51,47)"/><text x="396.00" y="350.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 2.19%)</title><rect x="375" y="244" width="25" height="15" fill="rgb(206,137,39)"/><text x="378.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (6 samples, 1.88%)</title><rect x="378" y="260" width="22" height="15" fill="rgb(235,62,31)"/><text x="381.00" y="270.50">N..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2972) (1 samples, 0.31%)</title><rect x="397" y="276" width="3" height="15" fill="rgb(214,86,16)"/><text x="400.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1953) (1 samples, 0.31%)</title><rect x="397" y="292" width="3" height="15" fill="rgb(248,141,11)"/><text x="400.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2903) (1 samples, 0.31%)</title><rect x="400" y="244" width="4" height="15" fill="rgb(249,67,23)"/><text x="403.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2952) (1 samples, 0.31%)</title><rect x="404" y="244" width="4" height="15" fill="rgb(220,184,11)"/><text x="407.00" y="254.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c:35) (1 samples, 0.31%)</title><rect x="404" y="260" width="4" height="15" fill="rgb(236,20,36)"/><text x="407.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2982) (1 samples, 0.31%)</title><rect x="408" y="244" width="3" height="15" fill="rgb(250,106,37)"/><text x="411.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.31%)</title><rect x="408" y="260" width="3" height="15" fill="rgb(252,61,19)"/><text x="411.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:396) (1 samples, 0.31%)</title><rect x="411" y="260" width="4" height="15" fill="rgb(205,58,50)"/><text x="414.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:417) (1 samples, 0.31%)</title><rect x="415" y="260" width="4" height="15" fill="rgb(242,163,54)"/><text x="418.00" y="270.50"></text></g><g><title>is_blasable2d (matmul.c.src:51) (1 samples, 0.31%)</title><rect x="415" y="276" width="4" height="15" fill="rgb(246,188,40)"/><text x="418.00" y="286.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:421) (1 samples, 0.31%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(237,198,4)"/><text x="422.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (18 samples, 5.62%)</title><rect x="364" y="196" width="66" height="15" fill="rgb(245,48,48)"/><text x="367.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 5.31%)</title><rect x="367" y="212" width="63" height="15" fill="rgb(230,111,27)"/><text x="370.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 5.31%)</title><rect x="367" y="228" width="63" height="15" fill="rgb(226,82,41)"/><text x="370.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 1.56%)</title><rect x="411" y="244" width="19" height="15" fill="rgb(249,160,8)"/><text x="414.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (2 samples, 0.62%)</title><rect x="423" y="260" width="7" height="15" fill="rgb(206,140,20)"/><text x="426.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (2 samples, 0.62%)</title><rect x="423" y="276" width="7" height="15" fill="rgb(206,227,8)"/><text x="426.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.62%)</title><rect x="423" y="292" width="7" height="15" fill="rgb(210,104,22)"/><text x="426.00" y="302.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(249,142,7)"/><text x="429.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (91 samples, 28.44%)</title><rect x="102" y="164" width="335" height="15" fill="rgb(207,101,54)"/><text x="105.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (32 samples, 10.00%)</title><rect x="319" y="180" width="118" height="15" fill="rgb(234,131,39)"/><text x="322.00" y="190.50">decision_funct..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.62%)</title><rect x="430" y="196" width="7" height="15" fill="rgb(231,114,52)"/><text x="433.00" y="206.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:288) (1 samples, 0.31%)</title><rect x="441" y="212" width="4" height="15" fill="rgb(217,68,16)"/><text x="444.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.62%)</title><rect x="441" y="196" width="7" height="15" fill="rgb(211,33,53)"/><text x="444.00" y="206.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.31%)</title><rect x="445" y="212" width="3" height="15" fill="rgb(211,134,18)"/><text x="448.00" y="222.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1746) (1 samples, 0.31%)</title><rect x="445" y="228" width="3" height="15" fill="rgb(250,163,19)"/><text x="448.00" y="238.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.31%)</title><rect x="445" y="244" width="3" height="15" fill="rgb(254,168,16)"/><text x="448.00" y="254.50"></text></g><g><title>0x7fca8ef20f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="448" y="212" width="4" height="15" fill="rgb(223,86,26)"/><text x="451.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.31%)</title><rect x="452" y="212" width="4" height="15" fill="rgb(240,37,2)"/><text x="455.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.31%)</title><rect x="452" y="228" width="4" height="15" fill="rgb(233,203,17)"/><text x="455.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.31%)</title><rect x="452" y="244" width="4" height="15" fill="rgb(233,125,0)"/><text x="455.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.31%)</title><rect x="452" y="260" width="4" height="15" fill="rgb(213,163,44)"/><text x="455.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.31%)</title><rect x="452" y="276" width="4" height="15" fill="rgb(208,215,11)"/><text x="455.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:312) (1 samples, 0.31%)</title><rect x="452" y="292" width="4" height="15" fill="rgb(239,76,24)"/><text x="455.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h:141) (1 samples, 0.31%)</title><rect x="452" y="308" width="4" height="15" fill="rgb(247,18,18)"/><text x="455.00" y="318.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1341) (1 samples, 0.31%)</title><rect x="456" y="228" width="3" height="15" fill="rgb(253,79,12)"/><text x="459.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.31%)</title><rect x="456" y="244" width="3" height="15" fill="rgb(218,178,5)"/><text x="459.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.88%)</title><rect x="441" y="180" width="22" height="15" fill="rgb(230,41,12)"/><text x="444.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.25%)</title><rect x="448" y="196" width="15" height="15" fill="rgb(218,135,2)"/><text x="451.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.62%)</title><rect x="456" y="212" width="7" height="15" fill="rgb(244,73,40)"/><text x="459.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1355) (1 samples, 0.31%)</title><rect x="459" y="228" width="4" height="15" fill="rgb(211,10,31)"/><text x="462.00" y="238.50"></text></g><g><title>0x7fca7afe89dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="459" y="244" width="4" height="15" fill="rgb(211,8,40)"/><text x="462.00" y="254.50"></text></g><g><title>0x7fca7b009265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="459" y="260" width="4" height="15" fill="rgb(205,98,9)"/><text x="462.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.31%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(229,76,30)"/><text x="462.00" y="286.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (8 samples, 2.50%)</title><rect x="437" y="164" width="30" height="15" fill="rgb(215,171,46)"/><text x="440.00" y="174.50">_p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4772) (1 samples, 0.31%)</title><rect x="463" y="180" width="4" height="15" fill="rgb(225,88,30)"/><text x="466.00" y="190.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:309) (1 samples, 0.31%)</title><rect x="467" y="164" width="3" height="15" fill="rgb(238,222,52)"/><text x="470.00" y="174.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.31%)</title><rect x="478" y="180" width="4" height="15" fill="rgb(218,115,30)"/><text x="481.00" y="190.50"></text></g><g><title>0x7fca8fd20120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="485" y="212" width="4" height="15" fill="rgb(238,110,11)"/><text x="488.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5514) (1 samples, 0.31%)</title><rect x="489" y="228" width="4" height="15" fill="rgb(211,177,31)"/><text x="492.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.31%)</title><rect x="493" y="228" width="3" height="15" fill="rgb(242,42,3)"/><text x="496.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="493" y="244" width="3" height="15" fill="rgb(217,71,45)"/><text x="496.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="493" y="260" width="3" height="15" fill="rgb(228,11,32)"/><text x="496.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.31%)</title><rect x="493" y="276" width="3" height="15" fill="rgb(207,11,22)"/><text x="496.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.31%)</title><rect x="493" y="292" width="3" height="15" fill="rgb(237,209,50)"/><text x="496.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.31%)</title><rect x="493" y="308" width="3" height="15" fill="rgb(207,189,14)"/><text x="496.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.31%)</title><rect x="496" y="244" width="4" height="15" fill="rgb(249,58,31)"/><text x="499.00" y="254.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.31%)</title><rect x="500" y="244" width="4" height="15" fill="rgb(208,78,50)"/><text x="503.00" y="254.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.31%)</title><rect x="500" y="260" width="4" height="15" fill="rgb(221,48,37)"/><text x="503.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.31%)</title><rect x="504" y="276" width="3" height="15" fill="rgb(232,100,54)"/><text x="507.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.31%)</title><rect x="504" y="292" width="3" height="15" fill="rgb(229,211,0)"/><text x="507.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.31%)</title><rect x="504" y="308" width="3" height="15" fill="rgb(220,15,37)"/><text x="507.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.31%)</title><rect x="504" y="324" width="3" height="15" fill="rgb(216,202,16)"/><text x="507.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.31%)</title><rect x="504" y="340" width="3" height="15" fill="rgb(245,76,40)"/><text x="507.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.31%)</title><rect x="504" y="356" width="3" height="15" fill="rgb(216,91,11)"/><text x="507.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.31%)</title><rect x="504" y="372" width="3" height="15" fill="rgb(228,163,38)"/><text x="507.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.31%)</title><rect x="507" y="276" width="4" height="15" fill="rgb(252,50,23)"/><text x="510.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.31%)</title><rect x="507" y="292" width="4" height="15" fill="rgb(208,51,1)"/><text x="510.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.31%)</title><rect x="507" y="308" width="4" height="15" fill="rgb(237,199,15)"/><text x="510.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="507" y="324" width="4" height="15" fill="rgb(212,67,30)"/><text x="510.00" y="334.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.31%)</title><rect x="507" y="340" width="4" height="15" fill="rgb(249,73,19)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.31%)</title><rect x="507" y="356" width="4" height="15" fill="rgb(219,100,45)"/><text x="510.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="511" y="276" width="4" height="15" fill="rgb(233,111,24)"/><text x="514.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.31%)</title><rect x="511" y="292" width="4" height="15" fill="rgb(218,165,37)"/><text x="514.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2152) (1 samples, 0.31%)</title><rect x="511" y="308" width="4" height="15" fill="rgb(208,73,18)"/><text x="514.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.31%)</title><rect x="515" y="276" width="3" height="15" fill="rgb(214,203,35)"/><text x="518.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.31%)</title><rect x="515" y="292" width="3" height="15" fill="rgb(213,166,46)"/><text x="518.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.31%)</title><rect x="515" y="308" width="3" height="15" fill="rgb(223,220,16)"/><text x="518.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="515" y="324" width="3" height="15" fill="rgb(221,65,35)"/><text x="518.00" y="334.50"></text></g><g><title>array_sum (methods.c:2215) (11 samples, 3.44%)</title><rect x="482" y="180" width="40" height="15" fill="rgb(205,14,1)"/><text x="485.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 3.44%)</title><rect x="482" y="196" width="40" height="15" fill="rgb(243,31,28)"/><text x="485.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 2.81%)</title><rect x="489" y="212" width="33" height="15" fill="rgb(237,194,17)"/><text x="492.00" y="222.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.19%)</title><rect x="496" y="228" width="26" height="15" fill="rgb(240,191,2)"/><text x="499.00" y="238.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (5 samples, 1.56%)</title><rect x="504" y="244" width="18" height="15" fill="rgb(234,105,17)"/><text x="507.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (5 samples, 1.56%)</title><rect x="504" y="260" width="18" height="15" fill="rgb(238,62,25)"/><text x="507.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:562) (1 samples, 0.31%)</title><rect x="518" y="276" width="4" height="15" fill="rgb(205,29,25)"/><text x="521.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.31%)</title><rect x="522" y="212" width="4" height="15" fill="rgb(250,101,4)"/><text x="525.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.31%)</title><rect x="526" y="228" width="3" height="15" fill="rgb(226,173,15)"/><text x="529.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.31%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(254,16,22)"/><text x="532.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2743) (1 samples, 0.31%)</title><rect x="533" y="260" width="4" height="15" fill="rgb(221,11,29)"/><text x="536.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.94%)</title><rect x="529" y="228" width="12" height="15" fill="rgb(235,10,30)"/><text x="532.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.62%)</title><rect x="533" y="244" width="8" height="15" fill="rgb(224,173,25)"/><text x="536.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.31%)</title><rect x="537" y="260" width="4" height="15" fill="rgb(216,119,50)"/><text x="540.00" y="270.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.31%)</title><rect x="537" y="276" width="4" height="15" fill="rgb(237,164,2)"/><text x="540.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.31%)</title><rect x="541" y="228" width="3" height="15" fill="rgb(234,162,11)"/><text x="544.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1741) (1 samples, 0.31%)</title><rect x="541" y="244" width="3" height="15" fill="rgb(253,143,22)"/><text x="544.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (137 samples, 42.81%)</title><rect x="43" y="132" width="505" height="15" fill="rgb(240,134,50)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (125 samples, 39.06%)</title><rect x="87" y="148" width="461" height="15" fill="rgb(236,87,53)"/><text x="90.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (21 samples, 6.56%)</title><rect x="470" y="164" width="78" height="15" fill="rgb(205,159,20)"/><text x="473.00" y="174.50">_predict_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.19%)</title><rect x="522" y="180" width="26" height="15" fill="rgb(223,180,27)"/><text x="525.00" y="190.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.19%)</title><rect x="522" y="196" width="26" height="15" fill="rgb(254,182,0)"/><text x="525.00" y="206.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.88%)</title><rect x="526" y="212" width="22" height="15" fill="rgb(253,2,25)"/><text x="529.00" y="222.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="544" y="228" width="4" height="15" fill="rgb(222,39,1)"/><text x="547.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.31%)</title><rect x="544" y="244" width="4" height="15" fill="rgb(205,139,17)"/><text x="547.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:38) (147 samples, 45.94%)</title><rect x="10" y="52" width="542" height="15" fill="rgb(212,20,29)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_f..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:37) (147 samples, 45.94%)</title><rect x="10" y="68" width="542" height="15" fill="rgb(215,204,3)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_1..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:29) (147 samples, 45.94%)</title><rect x="10" y="84" width="542" height="15" fill="rgb(237,46,12)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:23) (147 samples, 45.94%)</title><rect x="10" y="100" width="542" height="15" fill="rgb(245,177,38)"/><text x="13.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (145 samples, 45.31%)</title><rect x="17" y="116" width="535" height="15" fill="rgb(209,202,3)"/><text x="20.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="548" y="132" width="4" height="15" fill="rgb(235,109,2)"/><text x="551.00" y="142.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.31%)</title><rect x="552" y="852" width="3" height="15" fill="rgb(251,15,22)"/><text x="555.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.31%)</title><rect x="552" y="868" width="3" height="15" fill="rgb(220,123,43)"/><text x="555.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.31%)</title><rect x="552" y="884" width="3" height="15" fill="rgb(216,68,10)"/><text x="555.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.31%)</title><rect x="552" y="900" width="3" height="15" fill="rgb(209,28,35)"/><text x="555.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.31%)</title><rect x="552" y="916" width="3" height="15" fill="rgb(253,185,13)"/><text x="555.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.31%)</title><rect x="552" y="932" width="3" height="15" fill="rgb(226,112,9)"/><text x="555.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="552" y="948" width="3" height="15" fill="rgb(223,102,3)"/><text x="555.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="552" y="964" width="3" height="15" fill="rgb(210,80,52)"/><text x="555.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="552" y="980" width="3" height="15" fill="rgb(212,180,36)"/><text x="555.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:220) (1 samples, 0.31%)</title><rect x="552" y="996" width="3" height="15" fill="rgb(245,95,39)"/><text x="555.00" y="1006.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.31%)</title><rect x="555" y="884" width="4" height="15" fill="rgb(216,28,3)"/><text x="558.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.31%)</title><rect x="555" y="900" width="4" height="15" fill="rgb(247,168,4)"/><text x="558.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.31%)</title><rect x="555" y="916" width="4" height="15" fill="rgb(252,25,7)"/><text x="558.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.31%)</title><rect x="555" y="932" width="4" height="15" fill="rgb(217,107,5)"/><text x="558.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.31%)</title><rect x="555" y="948" width="4" height="15" fill="rgb(207,28,37)"/><text x="558.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.31%)</title><rect x="555" y="964" width="4" height="15" fill="rgb(251,184,47)"/><text x="558.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.31%)</title><rect x="555" y="980" width="4" height="15" fill="rgb(227,91,4)"/><text x="558.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.31%)</title><rect x="555" y="996" width="4" height="15" fill="rgb(234,71,36)"/><text x="558.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.31%)</title><rect x="555" y="1012" width="4" height="15" fill="rgb(253,64,54)"/><text x="558.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="555" y="1028" width="4" height="15" fill="rgb(218,101,2)"/><text x="558.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="555" y="1044" width="4" height="15" fill="rgb(213,229,15)"/><text x="558.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.62%)</title><rect x="555" y="852" width="8" height="15" fill="rgb(229,90,52)"/><text x="558.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.62%)</title><rect x="555" y="868" width="8" height="15" fill="rgb(212,227,17)"/><text x="558.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.31%)</title><rect x="559" y="884" width="4" height="15" fill="rgb(245,134,50)"/><text x="562.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.31%)</title><rect x="559" y="900" width="4" height="15" fill="rgb(211,142,23)"/><text x="562.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.31%)</title><rect x="559" y="916" width="4" height="15" fill="rgb(247,125,1)"/><text x="562.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.31%)</title><rect x="559" y="932" width="4" height="15" fill="rgb(213,200,17)"/><text x="562.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.31%)</title><rect x="559" y="948" width="4" height="15" fill="rgb(244,160,23)"/><text x="562.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="559" y="964" width="4" height="15" fill="rgb(233,140,3)"/><text x="562.00" y="974.50"></text></g><g><title>strerror (libc-2.29.so) (1 samples, 0.31%)</title><rect x="559" y="980" width="4" height="15" fill="rgb(240,119,32)"/><text x="562.00" y="990.50"></text></g><g><title>__strerror_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="559" y="996" width="4" height="15" fill="rgb(211,154,29)"/><text x="562.00" y="1006.50"></text></g><g><title>0x7fca8fcb06d9 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="559" y="1012" width="4" height="15" fill="rgb(247,65,9)"/><text x="562.00" y="1022.50"></text></g><g><title>0x7fca8fd1fdbf (libc-2.29.so) (1 samples, 0.31%)</title><rect x="559" y="1028" width="4" height="15" fill="rgb(248,58,43)"/><text x="562.00" y="1038.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.31%)</title><rect x="563" y="884" width="3" height="15" fill="rgb(241,201,48)"/><text x="566.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.31%)</title><rect x="563" y="900" width="3" height="15" fill="rgb(249,51,21)"/><text x="566.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="563" y="916" width="3" height="15" fill="rgb(231,180,6)"/><text x="566.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.31%)</title><rect x="563" y="932" width="3" height="15" fill="rgb(247,206,50)"/><text x="566.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.31%)</title><rect x="563" y="948" width="3" height="15" fill="rgb(236,119,24)"/><text x="566.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.31%)</title><rect x="563" y="964" width="3" height="15" fill="rgb(222,211,17)"/><text x="566.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:2) (5 samples, 1.56%)</title><rect x="552" y="148" width="18" height="15" fill="rgb(211,167,36)"/><text x="555.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="164" width="18" height="15" fill="rgb(241,122,42)"/><text x="555.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.56%)</title><rect x="552" y="180" width="18" height="15" fill="rgb(245,45,2)"/><text x="555.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="196" width="18" height="15" fill="rgb(219,75,27)"/><text x="555.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="212" width="18" height="15" fill="rgb(225,87,48)"/><text x="555.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="228" width="18" height="15" fill="rgb(251,110,17)"/><text x="555.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="244" width="18" height="15" fill="rgb(210,73,21)"/><text x="555.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="260" width="18" height="15" fill="rgb(223,87,37)"/><text x="555.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="276" width="18" height="15" fill="rgb(209,112,50)"/><text x="555.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.56%)</title><rect x="552" y="292" width="18" height="15" fill="rgb(242,43,4)"/><text x="555.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="308" width="18" height="15" fill="rgb(249,52,41)"/><text x="555.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="324" width="18" height="15" fill="rgb(243,181,0)"/><text x="555.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="340" width="18" height="15" fill="rgb(218,135,27)"/><text x="555.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="356" width="18" height="15" fill="rgb(215,1,31)"/><text x="555.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="372" width="18" height="15" fill="rgb(222,108,15)"/><text x="555.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.56%)</title><rect x="552" y="388" width="18" height="15" fill="rgb(252,128,23)"/><text x="555.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="404" width="18" height="15" fill="rgb(218,69,33)"/><text x="555.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="420" width="18" height="15" fill="rgb(250,175,19)"/><text x="555.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="436" width="18" height="15" fill="rgb(211,14,48)"/><text x="555.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="452" width="18" height="15" fill="rgb(254,171,15)"/><text x="555.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="468" width="18" height="15" fill="rgb(231,127,9)"/><text x="555.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.56%)</title><rect x="552" y="484" width="18" height="15" fill="rgb(251,224,28)"/><text x="555.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="500" width="18" height="15" fill="rgb(247,189,39)"/><text x="555.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="516" width="18" height="15" fill="rgb(243,56,54)"/><text x="555.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="532" width="18" height="15" fill="rgb(221,156,17)"/><text x="555.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="548" width="18" height="15" fill="rgb(224,52,11)"/><text x="555.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="564" width="18" height="15" fill="rgb(254,149,19)"/><text x="555.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.56%)</title><rect x="552" y="580" width="18" height="15" fill="rgb(218,106,50)"/><text x="555.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="596" width="18" height="15" fill="rgb(226,95,15)"/><text x="555.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.56%)</title><rect x="552" y="612" width="18" height="15" fill="rgb(241,211,7)"/><text x="555.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="628" width="18" height="15" fill="rgb(225,120,6)"/><text x="555.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="644" width="18" height="15" fill="rgb(235,204,39)"/><text x="555.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="660" width="18" height="15" fill="rgb(228,128,17)"/><text x="555.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="676" width="18" height="15" fill="rgb(247,159,53)"/><text x="555.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="692" width="18" height="15" fill="rgb(217,80,20)"/><text x="555.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="708" width="18" height="15" fill="rgb(217,180,12)"/><text x="555.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.56%)</title><rect x="552" y="724" width="18" height="15" fill="rgb(236,118,8)"/><text x="555.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="552" y="740" width="18" height="15" fill="rgb(216,29,42)"/><text x="555.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="552" y="756" width="18" height="15" fill="rgb(237,128,46)"/><text x="555.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="552" y="772" width="18" height="15" fill="rgb(217,81,53)"/><text x="555.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="552" y="788" width="18" height="15" fill="rgb(231,153,53)"/><text x="555.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="552" y="804" width="18" height="15" fill="rgb(214,111,40)"/><text x="555.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.56%)</title><rect x="552" y="820" width="18" height="15" fill="rgb(218,208,15)"/><text x="555.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.56%)</title><rect x="552" y="836" width="18" height="15" fill="rgb(227,101,44)"/><text x="555.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.62%)</title><rect x="563" y="852" width="7" height="15" fill="rgb(234,193,36)"/><text x="566.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.62%)</title><rect x="563" y="868" width="7" height="15" fill="rgb(205,218,2)"/><text x="566.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.31%)</title><rect x="566" y="884" width="4" height="15" fill="rgb(249,57,11)"/><text x="569.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.31%)</title><rect x="566" y="900" width="4" height="15" fill="rgb(251,72,31)"/><text x="569.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.31%)</title><rect x="566" y="916" width="4" height="15" fill="rgb(235,35,4)"/><text x="569.00" y="926.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.31%)</title><rect x="570" y="484" width="4" height="15" fill="rgb(218,171,2)"/><text x="573.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="570" y="500" width="4" height="15" fill="rgb(229,67,38)"/><text x="573.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="516" width="4" height="15" fill="rgb(227,131,38)"/><text x="573.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="532" width="4" height="15" fill="rgb(216,149,31)"/><text x="573.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="548" width="4" height="15" fill="rgb(217,147,26)"/><text x="573.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="564" width="4" height="15" fill="rgb(215,134,47)"/><text x="573.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="580" width="4" height="15" fill="rgb(240,133,18)"/><text x="573.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="596" width="4" height="15" fill="rgb(246,146,22)"/><text x="573.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.31%)</title><rect x="570" y="612" width="4" height="15" fill="rgb(241,149,23)"/><text x="573.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="628" width="4" height="15" fill="rgb(241,65,11)"/><text x="573.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="644" width="4" height="15" fill="rgb(225,15,26)"/><text x="573.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="660" width="4" height="15" fill="rgb(247,16,49)"/><text x="573.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="676" width="4" height="15" fill="rgb(243,176,11)"/><text x="573.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="692" width="4" height="15" fill="rgb(230,116,46)"/><text x="573.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.31%)</title><rect x="570" y="708" width="4" height="15" fill="rgb(249,178,53)"/><text x="573.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="724" width="4" height="15" fill="rgb(211,163,20)"/><text x="573.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="740" width="4" height="15" fill="rgb(232,78,11)"/><text x="573.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="756" width="4" height="15" fill="rgb(237,138,31)"/><text x="573.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="772" width="4" height="15" fill="rgb(245,222,32)"/><text x="573.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="788" width="4" height="15" fill="rgb(206,85,4)"/><text x="573.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:32) (1 samples, 0.31%)</title><rect x="570" y="804" width="4" height="15" fill="rgb(242,186,40)"/><text x="573.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="820" width="4" height="15" fill="rgb(216,127,36)"/><text x="573.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="836" width="4" height="15" fill="rgb(222,80,8)"/><text x="573.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="852" width="4" height="15" fill="rgb(218,141,46)"/><text x="573.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="868" width="4" height="15" fill="rgb(224,21,5)"/><text x="573.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="884" width="4" height="15" fill="rgb(221,160,17)"/><text x="573.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py:18) (1 samples, 0.31%)</title><rect x="570" y="900" width="4" height="15" fill="rgb(238,35,14)"/><text x="573.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="570" y="916" width="4" height="15" fill="rgb(217,9,50)"/><text x="573.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="932" width="4" height="15" fill="rgb(232,87,51)"/><text x="573.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="948" width="4" height="15" fill="rgb(229,140,35)"/><text x="573.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="964" width="4" height="15" fill="rgb(215,143,3)"/><text x="573.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="980" width="4" height="15" fill="rgb(212,91,21)"/><text x="573.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="996" width="4" height="15" fill="rgb(210,0,49)"/><text x="573.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="1012" width="4" height="15" fill="rgb(239,120,21)"/><text x="573.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py:16) (1 samples, 0.31%)</title><rect x="570" y="1028" width="4" height="15" fill="rgb(208,32,0)"/><text x="573.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="570" y="1044" width="4" height="15" fill="rgb(233,5,42)"/><text x="573.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="570" y="1060" width="4" height="15" fill="rgb(244,102,14)"/><text x="573.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="570" y="1076" width="4" height="15" fill="rgb(211,148,22)"/><text x="573.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="570" y="1092" width="4" height="15" fill="rgb(208,5,21)"/><text x="573.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="570" y="1108" width="4" height="15" fill="rgb(250,116,3)"/><text x="573.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py:213) (1 samples, 0.31%)</title><rect x="570" y="1124" width="4" height="15" fill="rgb(226,56,48)"/><text x="573.00" y="1134.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.31%)</title><rect x="574" y="772" width="3" height="15" fill="rgb(234,22,14)"/><text x="577.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="574" y="788" width="3" height="15" fill="rgb(220,131,24)"/><text x="577.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="574" y="804" width="3" height="15" fill="rgb(228,142,2)"/><text x="577.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="574" y="820" width="3" height="15" fill="rgb(249,195,20)"/><text x="577.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="574" y="836" width="3" height="15" fill="rgb(239,37,23)"/><text x="577.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="574" y="852" width="3" height="15" fill="rgb(220,190,36)"/><text x="577.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="574" y="868" width="3" height="15" fill="rgb(244,193,0)"/><text x="577.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="574" y="884" width="3" height="15" fill="rgb(251,227,52)"/><text x="577.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.31%)</title><rect x="574" y="900" width="3" height="15" fill="rgb(253,64,10)"/><text x="577.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="574" y="916" width="3" height="15" fill="rgb(212,156,0)"/><text x="577.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="574" y="932" width="3" height="15" fill="rgb(226,161,17)"/><text x="577.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="574" y="948" width="3" height="15" fill="rgb(220,88,32)"/><text x="577.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="574" y="964" width="3" height="15" fill="rgb(205,83,34)"/><text x="577.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="574" y="980" width="3" height="15" fill="rgb(253,86,24)"/><text x="577.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="574" y="996" width="3" height="15" fill="rgb(213,13,12)"/><text x="577.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="574" y="1012" width="3" height="15" fill="rgb(253,209,48)"/><text x="577.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6240) (1 samples, 0.31%)</title><rect x="574" y="1028" width="3" height="15" fill="rgb(210,107,17)"/><text x="577.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.31%)</title><rect x="574" y="1044" width="3" height="15" fill="rgb(253,157,25)"/><text x="577.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.31%)</title><rect x="574" y="1060" width="3" height="15" fill="rgb(248,226,30)"/><text x="577.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.31%)</title><rect x="574" y="1076" width="3" height="15" fill="rgb(234,183,51)"/><text x="577.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.31%)</title><rect x="574" y="1092" width="3" height="15" fill="rgb(254,142,10)"/><text x="577.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.31%)</title><rect x="574" y="1108" width="3" height="15" fill="rgb(213,6,23)"/><text x="577.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.31%)</title><rect x="574" y="1124" width="3" height="15" fill="rgb(219,25,26)"/><text x="577.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.31%)</title><rect x="574" y="1140" width="3" height="15" fill="rgb(218,187,46)"/><text x="577.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.31%)</title><rect x="574" y="1156" width="3" height="15" fill="rgb(244,194,40)"/><text x="577.00" y="1166.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.31%)</title><rect x="574" y="1172" width="3" height="15" fill="rgb(219,210,46)"/><text x="577.00" y="1182.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:4) (3 samples, 0.94%)</title><rect x="570" y="148" width="11" height="15" fill="rgb(234,155,18)"/><text x="573.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="570" y="164" width="11" height="15" fill="rgb(246,228,23)"/><text x="573.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.94%)</title><rect x="570" y="180" width="11" height="15" fill="rgb(215,100,36)"/><text x="573.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="570" y="196" width="11" height="15" fill="rgb(246,179,48)"/><text x="573.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="570" y="212" width="11" height="15" fill="rgb(253,69,24)"/><text x="573.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="570" y="228" width="11" height="15" fill="rgb(225,101,54)"/><text x="573.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="570" y="244" width="11" height="15" fill="rgb(244,201,50)"/><text x="573.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="570" y="260" width="11" height="15" fill="rgb(227,189,25)"/><text x="573.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="570" y="276" width="11" height="15" fill="rgb(224,171,9)"/><text x="573.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.94%)</title><rect x="570" y="292" width="11" height="15" fill="rgb(234,106,8)"/><text x="573.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="570" y="308" width="11" height="15" fill="rgb(246,131,29)"/><text x="573.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="570" y="324" width="11" height="15" fill="rgb(254,228,23)"/><text x="573.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="570" y="340" width="11" height="15" fill="rgb(248,219,38)"/><text x="573.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="570" y="356" width="11" height="15" fill="rgb(211,55,8)"/><text x="573.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="570" y="372" width="11" height="15" fill="rgb(235,114,30)"/><text x="573.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.94%)</title><rect x="570" y="388" width="11" height="15" fill="rgb(219,198,37)"/><text x="573.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="570" y="404" width="11" height="15" fill="rgb(239,163,51)"/><text x="573.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="570" y="420" width="11" height="15" fill="rgb(247,28,53)"/><text x="573.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="570" y="436" width="11" height="15" fill="rgb(217,42,5)"/><text x="573.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="570" y="452" width="11" height="15" fill="rgb(237,40,4)"/><text x="573.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="570" y="468" width="11" height="15" fill="rgb(250,67,5)"/><text x="573.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.62%)</title><rect x="574" y="484" width="7" height="15" fill="rgb(231,100,11)"/><text x="577.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="574" y="500" width="7" height="15" fill="rgb(250,160,48)"/><text x="577.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="574" y="516" width="7" height="15" fill="rgb(229,217,26)"/><text x="577.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="574" y="532" width="7" height="15" fill="rgb(254,155,40)"/><text x="577.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="574" y="548" width="7" height="15" fill="rgb(247,208,5)"/><text x="577.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="574" y="564" width="7" height="15" fill="rgb(234,214,37)"/><text x="577.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.62%)</title><rect x="574" y="580" width="7" height="15" fill="rgb(229,12,16)"/><text x="577.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="574" y="596" width="7" height="15" fill="rgb(226,130,3)"/><text x="577.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="574" y="612" width="7" height="15" fill="rgb(238,203,31)"/><text x="577.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="574" y="628" width="7" height="15" fill="rgb(214,154,37)"/><text x="577.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="574" y="644" width="7" height="15" fill="rgb(234,201,12)"/><text x="577.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="574" y="660" width="7" height="15" fill="rgb(238,211,15)"/><text x="577.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.62%)</title><rect x="574" y="676" width="7" height="15" fill="rgb(206,11,52)"/><text x="577.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="574" y="692" width="7" height="15" fill="rgb(229,120,20)"/><text x="577.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="574" y="708" width="7" height="15" fill="rgb(219,105,32)"/><text x="577.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="574" y="724" width="7" height="15" fill="rgb(209,160,38)"/><text x="577.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="574" y="740" width="7" height="15" fill="rgb(238,105,31)"/><text x="577.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="574" y="756" width="7" height="15" fill="rgb(236,166,0)"/><text x="577.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.31%)</title><rect x="577" y="772" width="4" height="15" fill="rgb(216,52,31)"/><text x="580.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="577" y="788" width="4" height="15" fill="rgb(244,96,43)"/><text x="580.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="577" y="804" width="4" height="15" fill="rgb(205,137,15)"/><text x="580.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="577" y="820" width="4" height="15" fill="rgb(242,132,45)"/><text x="580.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="577" y="836" width="4" height="15" fill="rgb(224,120,10)"/><text x="580.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="577" y="852" width="4" height="15" fill="rgb(238,160,43)"/><text x="580.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="577" y="868" width="4" height="15" fill="rgb(239,62,28)"/><text x="580.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="577" y="884" width="4" height="15" fill="rgb(209,34,32)"/><text x="580.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:51) (1 samples, 0.31%)</title><rect x="577" y="900" width="4" height="15" fill="rgb(213,152,9)"/><text x="580.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="577" y="916" width="4" height="15" fill="rgb(211,77,43)"/><text x="580.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="577" y="932" width="4" height="15" fill="rgb(219,11,3)"/><text x="580.00" y="942.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="577" y="948" width="4" height="15" fill="rgb(217,61,31)"/><text x="580.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="577" y="964" width="4" height="15" fill="rgb(207,90,19)"/><text x="580.00" y="974.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="577" y="980" width="4" height="15" fill="rgb(252,22,17)"/><text x="580.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.31%)</title><rect x="577" y="996" width="4" height="15" fill="rgb(249,67,20)"/><text x="580.00" y="1006.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.31%)</title><rect x="577" y="1012" width="4" height="15" fill="rgb(242,66,20)"/><text x="580.00" y="1022.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.31%)</title><rect x="577" y="1028" width="4" height="15" fill="rgb(247,11,31)"/><text x="580.00" y="1038.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:372) (1 samples, 0.31%)</title><rect x="577" y="1044" width="4" height="15" fill="rgb(227,183,25)"/><text x="580.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.31%)</title><rect x="581" y="244" width="4" height="15" fill="rgb(210,122,31)"/><text x="584.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="260" width="4" height="15" fill="rgb(226,198,49)"/><text x="584.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="276" width="4" height="15" fill="rgb(245,110,27)"/><text x="584.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="292" width="4" height="15" fill="rgb(234,1,3)"/><text x="584.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="308" width="4" height="15" fill="rgb(232,180,0)"/><text x="584.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="324" width="4" height="15" fill="rgb(216,86,33)"/><text x="584.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.31%)</title><rect x="581" y="340" width="4" height="15" fill="rgb(228,51,54)"/><text x="584.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="356" width="4" height="15" fill="rgb(234,86,30)"/><text x="584.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="581" y="372" width="4" height="15" fill="rgb(212,155,4)"/><text x="584.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="388" width="4" height="15" fill="rgb(242,75,32)"/><text x="584.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="404" width="4" height="15" fill="rgb(237,204,54)"/><text x="584.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="420" width="4" height="15" fill="rgb(232,2,43)"/><text x="584.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="436" width="4" height="15" fill="rgb(253,192,46)"/><text x="584.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="452" width="4" height="15" fill="rgb(222,132,35)"/><text x="584.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="468" width="4" height="15" fill="rgb(212,147,51)"/><text x="584.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.31%)</title><rect x="581" y="484" width="4" height="15" fill="rgb(246,214,21)"/><text x="584.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="500" width="4" height="15" fill="rgb(251,47,3)"/><text x="584.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="516" width="4" height="15" fill="rgb(234,127,23)"/><text x="584.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="532" width="4" height="15" fill="rgb(208,145,5)"/><text x="584.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="548" width="4" height="15" fill="rgb(224,92,53)"/><text x="584.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="564" width="4" height="15" fill="rgb(206,27,43)"/><text x="584.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.31%)</title><rect x="581" y="580" width="4" height="15" fill="rgb(223,189,40)"/><text x="584.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="596" width="4" height="15" fill="rgb(246,94,16)"/><text x="584.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="612" width="4" height="15" fill="rgb(227,117,36)"/><text x="584.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="628" width="4" height="15" fill="rgb(207,229,12)"/><text x="584.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="644" width="4" height="15" fill="rgb(206,166,49)"/><text x="584.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="660" width="4" height="15" fill="rgb(229,49,25)"/><text x="584.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.31%)</title><rect x="581" y="676" width="4" height="15" fill="rgb(216,40,37)"/><text x="584.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="692" width="4" height="15" fill="rgb(232,75,19)"/><text x="584.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="708" width="4" height="15" fill="rgb(244,43,0)"/><text x="584.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="724" width="4" height="15" fill="rgb(226,71,2)"/><text x="584.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="740" width="4" height="15" fill="rgb(243,113,40)"/><text x="584.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="756" width="4" height="15" fill="rgb(217,143,51)"/><text x="584.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.31%)</title><rect x="581" y="772" width="4" height="15" fill="rgb(209,134,30)"/><text x="584.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="788" width="4" height="15" fill="rgb(211,74,17)"/><text x="584.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="804" width="4" height="15" fill="rgb(251,130,11)"/><text x="584.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="820" width="4" height="15" fill="rgb(239,189,10)"/><text x="584.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="836" width="4" height="15" fill="rgb(248,137,44)"/><text x="584.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="852" width="4" height="15" fill="rgb(209,170,44)"/><text x="584.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.31%)</title><rect x="581" y="868" width="4" height="15" fill="rgb(254,171,7)"/><text x="584.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="884" width="4" height="15" fill="rgb(230,192,2)"/><text x="584.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="900" width="4" height="15" fill="rgb(220,146,50)"/><text x="584.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="916" width="4" height="15" fill="rgb(249,13,50)"/><text x="584.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="932" width="4" height="15" fill="rgb(214,162,36)"/><text x="584.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="948" width="4" height="15" fill="rgb(225,173,44)"/><text x="584.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:38) (1 samples, 0.31%)</title><rect x="581" y="964" width="4" height="15" fill="rgb(228,58,11)"/><text x="584.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="980" width="4" height="15" fill="rgb(217,158,50)"/><text x="584.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="996" width="4" height="15" fill="rgb(230,23,45)"/><text x="584.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="1012" width="4" height="15" fill="rgb(217,45,16)"/><text x="584.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="1028" width="4" height="15" fill="rgb(206,146,19)"/><text x="584.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="1044" width="4" height="15" fill="rgb(225,132,38)"/><text x="584.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/request.py:3) (1 samples, 0.31%)</title><rect x="581" y="1060" width="4" height="15" fill="rgb(245,158,34)"/><text x="584.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="1076" width="4" height="15" fill="rgb(227,86,47)"/><text x="584.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="1092" width="4" height="15" fill="rgb(214,97,53)"/><text x="584.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="1108" width="4" height="15" fill="rgb(243,178,38)"/><text x="584.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="1124" width="4" height="15" fill="rgb(228,199,13)"/><text x="584.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="1140" width="4" height="15" fill="rgb(214,83,24)"/><text x="584.00" y="1150.50"></text></g><g><title>&lt;module&gt; (urllib3/filepost.py:10) (1 samples, 0.31%)</title><rect x="581" y="1156" width="4" height="15" fill="rgb(236,153,2)"/><text x="584.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="1172" width="4" height="15" fill="rgb(207,189,8)"/><text x="584.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="1188" width="4" height="15" fill="rgb(253,181,52)"/><text x="584.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="1204" width="4" height="15" fill="rgb(225,183,49)"/><text x="584.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="1220" width="4" height="15" fill="rgb(224,65,45)"/><text x="584.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="1236" width="4" height="15" fill="rgb(229,135,9)"/><text x="584.00" y="1246.50"></text></g><g><title>&lt;module&gt; (urllib3/fields.py:3) (1 samples, 0.31%)</title><rect x="581" y="1252" width="4" height="15" fill="rgb(215,140,22)"/><text x="584.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="581" y="1268" width="4" height="15" fill="rgb(206,40,32)"/><text x="584.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="581" y="1284" width="4" height="15" fill="rgb(238,92,36)"/><text x="584.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="581" y="1300" width="4" height="15" fill="rgb(225,112,43)"/><text x="584.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="581" y="1316" width="4" height="15" fill="rgb(218,194,6)"/><text x="584.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="581" y="1332" width="4" height="15" fill="rgb(230,189,12)"/><text x="584.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mimetypes.py:49) (1 samples, 0.31%)</title><rect x="581" y="1348" width="4" height="15" fill="rgb(251,124,43)"/><text x="584.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.31%)</title><rect x="585" y="436" width="3" height="15" fill="rgb(234,197,40)"/><text x="588.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="585" y="452" width="3" height="15" fill="rgb(245,57,5)"/><text x="588.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="585" y="468" width="3" height="15" fill="rgb(239,106,33)"/><text x="588.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="585" y="484" width="3" height="15" fill="rgb(207,23,48)"/><text x="588.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="585" y="500" width="3" height="15" fill="rgb(250,104,54)"/><text x="588.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="585" y="516" width="3" height="15" fill="rgb(248,142,53)"/><text x="588.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.31%)</title><rect x="585" y="532" width="3" height="15" fill="rgb(234,126,44)"/><text x="588.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="585" y="548" width="3" height="15" fill="rgb(239,116,28)"/><text x="588.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="585" y="564" width="3" height="15" fill="rgb(208,5,54)"/><text x="588.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="585" y="580" width="3" height="15" fill="rgb(220,3,2)"/><text x="588.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="585" y="596" width="3" height="15" fill="rgb(242,79,19)"/><text x="588.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="585" y="612" width="3" height="15" fill="rgb(248,189,48)"/><text x="588.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.31%)</title><rect x="585" y="628" width="3" height="15" fill="rgb(239,138,37)"/><text x="588.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="585" y="644" width="3" height="15" fill="rgb(253,148,34)"/><text x="588.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="585" y="660" width="3" height="15" fill="rgb(236,144,22)"/><text x="588.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="585" y="676" width="3" height="15" fill="rgb(243,2,23)"/><text x="588.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="585" y="692" width="3" height="15" fill="rgb(248,124,27)"/><text x="588.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="585" y="708" width="3" height="15" fill="rgb(224,130,51)"/><text x="588.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="585" y="724" width="3" height="15" fill="rgb(227,59,27)"/><text x="588.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="585" y="740" width="3" height="15" fill="rgb(209,214,43)"/><text x="588.00" y="750.50"></text></g><g><title>0x7fca648c2093 (?) (1 samples, 0.31%)</title><rect x="585" y="756" width="3" height="15" fill="rgb(241,38,42)"/><text x="588.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="585" y="772" width="3" height="15" fill="rgb(251,118,45)"/><text x="588.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="585" y="788" width="3" height="15" fill="rgb(251,203,2)"/><text x="588.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="585" y="804" width="3" height="15" fill="rgb(254,90,51)"/><text x="588.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.31%)</title><rect x="585" y="820" width="3" height="15" fill="rgb(235,57,50)"/><text x="588.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="585" y="836" width="3" height="15" fill="rgb(235,200,54)"/><text x="588.00" y="846.50"></text></g><g><title>0x7fca646a27fa (?) (1 samples, 0.31%)</title><rect x="585" y="852" width="3" height="15" fill="rgb(207,52,53)"/><text x="588.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.31%)</title><rect x="588" y="1204" width="4" height="15" fill="rgb(239,180,10)"/><text x="591.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="588" y="1220" width="4" height="15" fill="rgb(253,5,26)"/><text x="591.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.31%)</title><rect x="588" y="1236" width="4" height="15" fill="rgb(212,41,53)"/><text x="591.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="588" y="1252" width="4" height="15" fill="rgb(208,205,38)"/><text x="591.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="588" y="1268" width="4" height="15" fill="rgb(223,136,2)"/><text x="591.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="588" y="1284" width="4" height="15" fill="rgb(233,212,50)"/><text x="591.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="588" y="1300" width="4" height="15" fill="rgb(211,162,41)"/><text x="591.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="588" y="1316" width="4" height="15" fill="rgb(208,83,44)"/><text x="591.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="588" y="1332" width="4" height="15" fill="rgb(232,166,15)"/><text x="591.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:22) (1 samples, 0.31%)</title><rect x="588" y="1348" width="4" height="15" fill="rgb(224,93,20)"/><text x="591.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="588" y="1364" width="4" height="15" fill="rgb(217,168,23)"/><text x="591.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="588" y="1380" width="4" height="15" fill="rgb(207,129,7)"/><text x="591.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="588" y="1396" width="4" height="15" fill="rgb(253,178,32)"/><text x="591.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="588" y="1412" width="4" height="15" fill="rgb(226,123,8)"/><text x="591.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="588" y="1428" width="4" height="15" fill="rgb(248,122,32)"/><text x="591.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.31%)</title><rect x="588" y="1444" width="4" height="15" fill="rgb(216,144,48)"/><text x="591.00" y="1454.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.31%)</title><rect x="588" y="1460" width="4" height="15" fill="rgb(229,146,46)"/><text x="591.00" y="1470.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:632) (1 samples, 0.31%)</title><rect x="588" y="1476" width="4" height="15" fill="rgb(224,83,8)"/><text x="591.00" y="1486.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.31%)</title><rect x="592" y="1364" width="4" height="15" fill="rgb(237,132,28)"/><text x="595.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:585) (1 samples, 0.31%)</title><rect x="592" y="1380" width="4" height="15" fill="rgb(207,79,5)"/><text x="595.00" y="1390.50"></text></g><g><title>_sre_SRE_Match_span (python3.7) (1 samples, 0.31%)</title><rect x="592" y="1396" width="4" height="15" fill="rgb(238,13,7)"/><text x="595.00" y="1406.50"></text></g><g><title>0x7fca8fd20120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="592" y="1412" width="4" height="15" fill="rgb(222,213,4)"/><text x="595.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (3 samples, 0.94%)</title><rect x="588" y="1108" width="12" height="15" fill="rgb(226,107,16)"/><text x="591.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.94%)</title><rect x="588" y="1124" width="12" height="15" fill="rgb(207,207,10)"/><text x="591.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.94%)</title><rect x="588" y="1140" width="12" height="15" fill="rgb(224,73,54)"/><text x="591.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.94%)</title><rect x="588" y="1156" width="12" height="15" fill="rgb(226,26,33)"/><text x="591.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.94%)</title><rect x="588" y="1172" width="12" height="15" fill="rgb(241,67,3)"/><text x="591.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.94%)</title><rect x="588" y="1188" width="12" height="15" fill="rgb(244,202,51)"/><text x="591.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.62%)</title><rect x="592" y="1204" width="8" height="15" fill="rgb(237,83,6)"/><text x="595.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.62%)</title><rect x="592" y="1220" width="8" height="15" fill="rgb(242,66,51)"/><text x="595.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.62%)</title><rect x="592" y="1236" width="8" height="15" fill="rgb(226,89,13)"/><text x="595.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.62%)</title><rect x="592" y="1252" width="8" height="15" fill="rgb(229,33,26)"/><text x="595.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.62%)</title><rect x="592" y="1268" width="8" height="15" fill="rgb(208,97,44)"/><text x="595.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.62%)</title><rect x="592" y="1284" width="8" height="15" fill="rgb(231,17,22)"/><text x="595.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.62%)</title><rect x="592" y="1300" width="8" height="15" fill="rgb(210,145,34)"/><text x="595.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.62%)</title><rect x="592" y="1316" width="8" height="15" fill="rgb(224,100,33)"/><text x="595.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.62%)</title><rect x="592" y="1332" width="8" height="15" fill="rgb(231,201,8)"/><text x="595.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.62%)</title><rect x="592" y="1348" width="8" height="15" fill="rgb(252,225,13)"/><text x="595.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.31%)</title><rect x="596" y="1364" width="4" height="15" fill="rgb(208,91,21)"/><text x="599.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py:909) (1 samples, 0.31%)</title><rect x="596" y="1380" width="4" height="15" fill="rgb(244,170,35)"/><text x="599.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:4) (14 samples, 4.38%)</title><rect x="552" y="52" width="51" height="15" fill="rgb(236,39,41)"/><text x="555.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 4.38%)</title><rect x="552" y="68" width="51" height="15" fill="rgb(226,104,9)"/><text x="555.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 4.38%)</title><rect x="552" y="84" width="51" height="15" fill="rgb(237,99,54)"/><text x="555.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 4.38%)</title><rect x="552" y="100" width="51" height="15" fill="rgb(238,184,16)"/><text x="555.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 4.38%)</title><rect x="552" y="116" width="51" height="15" fill="rgb(209,14,32)"/><text x="555.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 4.38%)</title><rect x="552" y="132" width="51" height="15" fill="rgb(223,161,10)"/><text x="555.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear.py:7) (6 samples, 1.88%)</title><rect x="581" y="148" width="22" height="15" fill="rgb(251,175,21)"/><text x="584.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.88%)</title><rect x="581" y="164" width="22" height="15" fill="rgb(220,152,7)"/><text x="584.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.88%)</title><rect x="581" y="180" width="22" height="15" fill="rgb(234,225,41)"/><text x="584.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.88%)</title><rect x="581" y="196" width="22" height="15" fill="rgb(238,183,47)"/><text x="584.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.88%)</title><rect x="581" y="212" width="22" height="15" fill="rgb(218,187,21)"/><text x="584.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.88%)</title><rect x="581" y="228" width="22" height="15" fill="rgb(249,49,32)"/><text x="584.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.56%)</title><rect x="585" y="244" width="18" height="15" fill="rgb(219,181,5)"/><text x="588.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="585" y="260" width="18" height="15" fill="rgb(242,51,29)"/><text x="588.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="585" y="276" width="18" height="15" fill="rgb(250,29,16)"/><text x="588.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="585" y="292" width="18" height="15" fill="rgb(238,50,53)"/><text x="588.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="585" y="308" width="18" height="15" fill="rgb(230,34,52)"/><text x="588.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="585" y="324" width="18" height="15" fill="rgb(215,224,10)"/><text x="588.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.56%)</title><rect x="585" y="340" width="18" height="15" fill="rgb(209,172,25)"/><text x="588.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.56%)</title><rect x="585" y="356" width="18" height="15" fill="rgb(220,228,54)"/><text x="588.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.56%)</title><rect x="585" y="372" width="18" height="15" fill="rgb(237,22,1)"/><text x="588.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.56%)</title><rect x="585" y="388" width="18" height="15" fill="rgb(210,69,7)"/><text x="588.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.56%)</title><rect x="585" y="404" width="18" height="15" fill="rgb(217,56,28)"/><text x="588.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.56%)</title><rect x="585" y="420" width="18" height="15" fill="rgb(228,229,9)"/><text x="588.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (4 samples, 1.25%)</title><rect x="588" y="436" width="15" height="15" fill="rgb(240,32,26)"/><text x="591.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="452" width="15" height="15" fill="rgb(232,18,38)"/><text x="591.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="588" y="468" width="15" height="15" fill="rgb(206,223,41)"/><text x="591.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="484" width="15" height="15" fill="rgb(220,213,23)"/><text x="591.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="500" width="15" height="15" fill="rgb(239,67,47)"/><text x="591.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="516" width="15" height="15" fill="rgb(227,201,28)"/><text x="591.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="532" width="15" height="15" fill="rgb(205,23,20)"/><text x="591.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="548" width="15" height="15" fill="rgb(222,108,50)"/><text x="591.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="564" width="15" height="15" fill="rgb(214,177,30)"/><text x="591.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (4 samples, 1.25%)</title><rect x="588" y="580" width="15" height="15" fill="rgb(215,222,49)"/><text x="591.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="596" width="15" height="15" fill="rgb(233,224,47)"/><text x="591.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="612" width="15" height="15" fill="rgb(216,107,41)"/><text x="591.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="628" width="15" height="15" fill="rgb(207,135,51)"/><text x="591.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="644" width="15" height="15" fill="rgb(207,96,23)"/><text x="591.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="660" width="15" height="15" fill="rgb(247,150,17)"/><text x="591.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (4 samples, 1.25%)</title><rect x="588" y="676" width="15" height="15" fill="rgb(234,210,23)"/><text x="591.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="692" width="15" height="15" fill="rgb(240,64,3)"/><text x="591.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="708" width="15" height="15" fill="rgb(229,161,11)"/><text x="591.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="724" width="15" height="15" fill="rgb(208,94,46)"/><text x="591.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="740" width="15" height="15" fill="rgb(227,100,42)"/><text x="591.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="756" width="15" height="15" fill="rgb(250,118,21)"/><text x="591.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (4 samples, 1.25%)</title><rect x="588" y="772" width="15" height="15" fill="rgb(227,33,25)"/><text x="591.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="788" width="15" height="15" fill="rgb(220,144,51)"/><text x="591.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="804" width="15" height="15" fill="rgb(239,154,40)"/><text x="591.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="820" width="15" height="15" fill="rgb(232,18,35)"/><text x="591.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="836" width="15" height="15" fill="rgb(219,71,48)"/><text x="591.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="852" width="15" height="15" fill="rgb(248,19,40)"/><text x="591.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (4 samples, 1.25%)</title><rect x="588" y="868" width="15" height="15" fill="rgb(246,109,29)"/><text x="591.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="884" width="15" height="15" fill="rgb(242,94,29)"/><text x="591.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.25%)</title><rect x="588" y="900" width="15" height="15" fill="rgb(234,10,34)"/><text x="591.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="916" width="15" height="15" fill="rgb(209,156,27)"/><text x="591.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="932" width="15" height="15" fill="rgb(242,92,49)"/><text x="591.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="948" width="15" height="15" fill="rgb(240,96,22)"/><text x="591.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="964" width="15" height="15" fill="rgb(205,14,9)"/><text x="591.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="980" width="15" height="15" fill="rgb(215,51,36)"/><text x="591.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="996" width="15" height="15" fill="rgb(207,201,22)"/><text x="591.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (4 samples, 1.25%)</title><rect x="588" y="1012" width="15" height="15" fill="rgb(242,139,47)"/><text x="591.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.25%)</title><rect x="588" y="1028" width="15" height="15" fill="rgb(247,31,48)"/><text x="591.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.25%)</title><rect x="588" y="1044" width="15" height="15" fill="rgb(227,186,41)"/><text x="591.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.25%)</title><rect x="588" y="1060" width="15" height="15" fill="rgb(220,51,6)"/><text x="591.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.25%)</title><rect x="588" y="1076" width="15" height="15" fill="rgb(250,58,31)"/><text x="591.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.25%)</title><rect x="588" y="1092" width="15" height="15" fill="rgb(217,153,16)"/><text x="591.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.31%)</title><rect x="600" y="1108" width="3" height="15" fill="rgb(249,30,26)"/><text x="603.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="600" y="1124" width="3" height="15" fill="rgb(209,144,33)"/><text x="603.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="600" y="1140" width="3" height="15" fill="rgb(215,207,21)"/><text x="603.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="600" y="1156" width="3" height="15" fill="rgb(241,175,40)"/><text x="603.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="600" y="1172" width="3" height="15" fill="rgb(224,91,52)"/><text x="603.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="600" y="1188" width="3" height="15" fill="rgb(208,215,19)"/><text x="603.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="600" y="1204" width="3" height="15" fill="rgb(243,170,24)"/><text x="603.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="600" y="1220" width="3" height="15" fill="rgb(221,226,3)"/><text x="603.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:16) (1 samples, 0.31%)</title><rect x="600" y="1236" width="3" height="15" fill="rgb(208,92,46)"/><text x="603.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.31%)</title><rect x="600" y="1252" width="3" height="15" fill="rgb(217,104,29)"/><text x="603.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="600" y="1268" width="3" height="15" fill="rgb(211,217,0)"/><text x="603.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="600" y="1284" width="3" height="15" fill="rgb(211,219,1)"/><text x="603.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="600" y="1300" width="3" height="15" fill="rgb(210,130,28)"/><text x="603.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="600" y="1316" width="3" height="15" fill="rgb(228,165,38)"/><text x="603.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="600" y="1332" width="3" height="15" fill="rgb(220,205,50)"/><text x="603.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="600" y="1348" width="3" height="15" fill="rgb(241,82,14)"/><text x="603.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/grid_search_cv.py:8) (1 samples, 0.31%)</title><rect x="600" y="1364" width="3" height="15" fill="rgb(252,92,20)"/><text x="603.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="600" y="1380" width="3" height="15" fill="rgb(239,55,11)"/><text x="603.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.31%)</title><rect x="600" y="1396" width="3" height="15" fill="rgb(226,130,5)"/><text x="603.00" y="1406.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.31%)</title><rect x="600" y="1412" width="3" height="15" fill="rgb(225,210,0)"/><text x="603.00" y="1422.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.31%)</title><rect x="600" y="1428" width="3" height="15" fill="rgb(233,163,25)"/><text x="603.00" y="1438.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.31%)</title><rect x="600" y="1444" width="3" height="15" fill="rgb(254,137,3)"/><text x="603.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.31%)</title><rect x="600" y="1460" width="3" height="15" fill="rgb(216,147,28)"/><text x="603.00" y="1470.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="600" y="1476" width="3" height="15" fill="rgb(250,162,30)"/><text x="603.00" y="1486.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:28) (1 samples, 0.31%)</title><rect x="603" y="84" width="4" height="15" fill="rgb(213,169,54)"/><text x="606.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.31%)</title><rect x="603" y="100" width="4" height="15" fill="rgb(235,201,49)"/><text x="606.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.31%)</title><rect x="603" y="116" width="4" height="15" fill="rgb(217,29,32)"/><text x="606.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.31%)</title><rect x="603" y="132" width="4" height="15" fill="rgb(231,104,43)"/><text x="606.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.31%)</title><rect x="603" y="148" width="4" height="15" fill="rgb(228,65,53)"/><text x="606.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.31%)</title><rect x="603" y="164" width="4" height="15" fill="rgb(238,216,14)"/><text x="606.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.31%)</title><rect x="603" y="180" width="4" height="15" fill="rgb(207,147,50)"/><text x="606.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.31%)</title><rect x="603" y="196" width="4" height="15" fill="rgb(254,62,27)"/><text x="606.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="603" y="212" width="4" height="15" fill="rgb(232,92,21)"/><text x="606.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="603" y="228" width="4" height="15" fill="rgb(214,3,39)"/><text x="606.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="603" y="244" width="4" height="15" fill="rgb(252,71,17)"/><text x="606.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="603" y="260" width="4" height="15" fill="rgb(205,88,52)"/><text x="606.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="603" y="276" width="4" height="15" fill="rgb(220,122,25)"/><text x="606.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.31%)</title><rect x="603" y="292" width="4" height="15" fill="rgb(245,53,35)"/><text x="606.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="603" y="308" width="4" height="15" fill="rgb(252,59,1)"/><text x="606.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="603" y="324" width="4" height="15" fill="rgb(242,124,6)"/><text x="606.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="603" y="340" width="4" height="15" fill="rgb(214,11,15)"/><text x="606.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="603" y="356" width="4" height="15" fill="rgb(240,5,21)"/><text x="606.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="603" y="372" width="4" height="15" fill="rgb(212,168,53)"/><text x="606.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.31%)</title><rect x="603" y="388" width="4" height="15" fill="rgb(226,3,41)"/><text x="606.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.31%)</title><rect x="603" y="404" width="4" height="15" fill="rgb(219,197,32)"/><text x="606.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.31%)</title><rect x="603" y="420" width="4" height="15" fill="rgb(231,178,34)"/><text x="606.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.31%)</title><rect x="603" y="436" width="4" height="15" fill="rgb(209,175,28)"/><text x="606.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.31%)</title><rect x="603" y="452" width="4" height="15" fill="rgb(206,49,39)"/><text x="606.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.31%)</title><rect x="603" y="468" width="4" height="15" fill="rgb(215,193,27)"/><text x="606.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.31%)</title><rect x="603" y="484" width="4" height="15" fill="rgb(254,201,16)"/><text x="606.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.31%)</title><rect x="603" y="500" width="4" height="15" fill="rgb(234,57,11)"/><text x="606.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.31%)</title><rect x="603" y="516" width="4" height="15" fill="rgb(245,11,46)"/><text x="606.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.31%)</title><rect x="603" y="532" width="4" height="15" fill="rgb(230,207,1)"/><text x="606.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.31%)</title><rect x="603" y="548" width="4" height="15" fill="rgb(248,50,14)"/><text x="606.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.31%)</title><rect x="603" y="564" width="4" height="15" fill="rgb(228,72,37)"/><text x="606.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.31%)</title><rect x="603" y="580" width="4" height="15" fill="rgb(235,136,30)"/><text x="606.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.31%)</title><rect x="603" y="596" width="4" height="15" fill="rgb(209,152,24)"/><text x="606.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.31%)</title><rect x="603" y="612" width="4" height="15" fill="rgb(226,113,53)"/><text x="606.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.31%)</title><rect x="603" y="628" width="4" height="15" fill="rgb(240,205,21)"/><text x="606.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.31%)</title><rect x="603" y="644" width="4" height="15" fill="rgb(225,221,17)"/><text x="606.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.31%)</title><rect x="603" y="660" width="4" height="15" fill="rgb(227,93,34)"/><text x="606.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.31%)</title><rect x="603" y="676" width="4" height="15" fill="rgb(250,213,50)"/><text x="606.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:223) (1 samples, 0.31%)</title><rect x="603" y="692" width="4" height="15" fill="rgb(229,126,22)"/><text x="606.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.31%)</title><rect x="603" y="708" width="4" height="15" fill="rgb(212,27,1)"/><text x="606.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.31%)</title><rect x="603" y="724" width="4" height="15" fill="rgb(253,140,47)"/><text x="606.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.31%)</title><rect x="603" y="740" width="4" height="15" fill="rgb(206,120,0)"/><text x="606.00" y="750.50"></text></g><g><title>parse_if (jinja2/parser.py:209) (1 samples, 0.31%)</title><rect x="603" y="756" width="4" height="15" fill="rgb(222,136,32)"/><text x="606.00" y="766.50"></text></g><g><title>expect (jinja2/lexer.py:388) (1 samples, 0.31%)</title><rect x="603" y="772" width="4" height="15" fill="rgb(247,96,1)"/><text x="606.00" y="782.50"></text></g><g><title>__next__ (jinja2/lexer.py:359) (1 samples, 0.31%)</title><rect x="603" y="788" width="4" height="15" fill="rgb(252,162,9)"/><text x="606.00" y="798.50"></text></g><g><title>wrap (jinja2/lexer.py:562) (1 samples, 0.31%)</title><rect x="603" y="804" width="4" height="15" fill="rgb(208,205,27)"/><text x="606.00" y="814.50"></text></g><g><title>tokeniter (jinja2/lexer.py:627) (1 samples, 0.31%)</title><rect x="603" y="820" width="4" height="15" fill="rgb(211,102,33)"/><text x="606.00" y="830.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.31%)</title><rect x="629" y="148" width="4" height="15" fill="rgb(230,87,20)"/><text x="632.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (2 samples, 0.62%)</title><rect x="644" y="164" width="7" height="15" fill="rgb(222,78,7)"/><text x="647.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 1.25%)</title><rect x="670" y="180" width="14" height="15" fill="rgb(212,42,26)"/><text x="673.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.62%)</title><rect x="677" y="196" width="7" height="15" fill="rgb(253,146,26)"/><text x="680.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.31%)</title><rect x="706" y="212" width="4" height="15" fill="rgb(251,147,45)"/><text x="709.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.31%)</title><rect x="706" y="228" width="4" height="15" fill="rgb(236,44,2)"/><text x="709.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (4 samples, 1.25%)</title><rect x="699" y="196" width="15" height="15" fill="rgb(248,100,26)"/><text x="702.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py:166) (1 samples, 0.31%)</title><rect x="710" y="212" width="4" height="15" fill="rgb(229,173,19)"/><text x="713.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py:107) (1 samples, 0.31%)</title><rect x="710" y="228" width="4" height="15" fill="rgb(245,157,23)"/><text x="713.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="732" y="260" width="4" height="15" fill="rgb(231,200,54)"/><text x="735.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="732" y="276" width="4" height="15" fill="rgb(222,206,51)"/><text x="735.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.31%)</title><rect x="732" y="292" width="4" height="15" fill="rgb(247,118,46)"/><text x="735.00" y="302.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.31%)</title><rect x="736" y="260" width="4" height="15" fill="rgb(252,22,50)"/><text x="739.00" y="270.50"></text></g><g><title>array_sum (methods.c:2214) (1 samples, 0.31%)</title><rect x="740" y="260" width="3" height="15" fill="rgb(239,140,26)"/><text x="743.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.31%)</title><rect x="754" y="324" width="4" height="15" fill="rgb(231,36,54)"/><text x="757.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:79) (1 samples, 0.31%)</title><rect x="754" y="340" width="4" height="15" fill="rgb(225,97,3)"/><text x="757.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.31%)</title><rect x="758" y="356" width="4" height="15" fill="rgb(225,199,28)"/><text x="761.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.31%)</title><rect x="758" y="372" width="4" height="15" fill="rgb(211,160,20)"/><text x="761.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.31%)</title><rect x="758" y="388" width="4" height="15" fill="rgb(205,165,23)"/><text x="761.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="758" y="404" width="4" height="15" fill="rgb(237,167,38)"/><text x="761.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="758" y="420" width="4" height="15" fill="rgb(228,159,6)"/><text x="761.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:204) (1 samples, 0.31%)</title><rect x="762" y="388" width="3" height="15" fill="rgb(240,116,34)"/><text x="765.00" y="398.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:899) (1 samples, 0.31%)</title><rect x="762" y="404" width="3" height="15" fill="rgb(251,91,25)"/><text x="765.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.62%)</title><rect x="762" y="356" width="7" height="15" fill="rgb(230,7,52)"/><text x="765.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.62%)</title><rect x="762" y="372" width="7" height="15" fill="rgb(209,211,14)"/><text x="765.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.31%)</title><rect x="765" y="388" width="4" height="15" fill="rgb(216,42,54)"/><text x="768.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.31%)</title><rect x="765" y="404" width="4" height="15" fill="rgb(243,47,40)"/><text x="768.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.31%)</title><rect x="765" y="420" width="4" height="15" fill="rgb(250,119,49)"/><text x="768.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.31%)</title><rect x="769" y="356" width="4" height="15" fill="rgb(238,172,5)"/><text x="772.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="769" y="372" width="4" height="15" fill="rgb(254,77,43)"/><text x="772.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.31%)</title><rect x="769" y="388" width="4" height="15" fill="rgb(245,116,49)"/><text x="772.00" y="398.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.31%)</title><rect x="769" y="404" width="4" height="15" fill="rgb(219,163,36)"/><text x="772.00" y="414.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.31%)</title><rect x="769" y="420" width="4" height="15" fill="rgb(253,50,46)"/><text x="772.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.31%)</title><rect x="773" y="356" width="4" height="15" fill="rgb(239,5,38)"/><text x="776.00" y="366.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:856) (1 samples, 0.31%)</title><rect x="773" y="372" width="4" height="15" fill="rgb(251,149,0)"/><text x="776.00" y="382.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 3.12%)</title><rect x="743" y="260" width="37" height="15" fill="rgb(247,49,2)"/><text x="746.00" y="270.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 3.12%)</title><rect x="743" y="276" width="37" height="15" fill="rgb(207,22,18)"/><text x="746.00" y="286.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (9 samples, 2.81%)</title><rect x="747" y="292" width="33" height="15" fill="rgb(237,60,24)"/><text x="750.00" y="302.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (8 samples, 2.50%)</title><rect x="751" y="308" width="29" height="15" fill="rgb(254,136,36)"/><text x="754.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.88%)</title><rect x="758" y="324" width="22" height="15" fill="rgb(244,66,31)"/><text x="761.00" y="334.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.88%)</title><rect x="758" y="340" width="22" height="15" fill="rgb(245,146,15)"/><text x="761.00" y="350.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:583) (1 samples, 0.31%)</title><rect x="777" y="356" width="3" height="15" fill="rgb(226,21,37)"/><text x="780.00" y="366.50"></text></g><g><title>0x7fca8ef217c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="777" y="372" width="3" height="15" fill="rgb(226,31,51)"/><text x="780.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="780" y="260" width="4" height="15" fill="rgb(252,181,5)"/><text x="783.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.31%)</title><rect x="780" y="276" width="4" height="15" fill="rgb(209,127,13)"/><text x="783.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="780" y="292" width="4" height="15" fill="rgb(214,190,8)"/><text x="783.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.31%)</title><rect x="780" y="308" width="4" height="15" fill="rgb(225,56,24)"/><text x="783.00" y="318.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (18 samples, 5.62%)</title><rect x="721" y="244" width="67" height="15" fill="rgb(253,198,21)"/><text x="724.00" y="254.50">norm_l1..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="784" y="260" width="4" height="15" fill="rgb(206,160,42)"/><text x="787.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.31%)</title><rect x="784" y="276" width="4" height="15" fill="rgb(245,117,35)"/><text x="787.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.31%)</title><rect x="784" y="292" width="4" height="15" fill="rgb(248,20,45)"/><text x="787.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.31%)</title><rect x="788" y="260" width="3" height="15" fill="rgb(214,168,46)"/><text x="791.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.31%)</title><rect x="788" y="276" width="3" height="15" fill="rgb(215,214,42)"/><text x="791.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.31%)</title><rect x="788" y="292" width="3" height="15" fill="rgb(216,124,43)"/><text x="791.00" y="302.50"></text></g><g><title>0x7fca8fd15e50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="791" y="324" width="4" height="15" fill="rgb(247,122,14)"/><text x="794.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.62%)</title><rect x="791" y="292" width="8" height="15" fill="rgb(224,216,19)"/><text x="794.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.62%)</title><rect x="791" y="308" width="8" height="15" fill="rgb(220,11,21)"/><text x="794.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="795" y="324" width="4" height="15" fill="rgb(218,82,9)"/><text x="798.00" y="334.50"></text></g><g><title>0x7fca8fdde004 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="795" y="340" width="4" height="15" fill="rgb(208,181,36)"/><text x="798.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 0.94%)</title><rect x="791" y="260" width="11" height="15" fill="rgb(216,57,50)"/><text x="794.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 0.94%)</title><rect x="791" y="276" width="11" height="15" fill="rgb(220,58,32)"/><text x="794.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.31%)</title><rect x="799" y="292" width="3" height="15" fill="rgb(210,76,17)"/><text x="802.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:24) (1 samples, 0.31%)</title><rect x="799" y="308" width="3" height="15" fill="rgb(243,229,43)"/><text x="802.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.31%)</title><rect x="802" y="276" width="4" height="15" fill="rgb(220,221,51)"/><text x="805.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.31%)</title><rect x="802" y="292" width="4" height="15" fill="rgb(218,49,26)"/><text x="805.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1665) (1 samples, 0.31%)</title><rect x="802" y="308" width="4" height="15" fill="rgb(210,132,22)"/><text x="805.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.31%)</title><rect x="802" y="324" width="4" height="15" fill="rgb(251,28,19)"/><text x="805.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1485) (1 samples, 0.31%)</title><rect x="806" y="308" width="4" height="15" fill="rgb(216,83,26)"/><text x="809.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="810" y="324" width="3" height="15" fill="rgb(220,49,9)"/><text x="813.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="810" y="340" width="3" height="15" fill="rgb(237,74,38)"/><text x="813.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.62%)</title><rect x="810" y="308" width="7" height="15" fill="rgb(229,60,23)"/><text x="813.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.31%)</title><rect x="813" y="324" width="4" height="15" fill="rgb(209,93,54)"/><text x="816.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.31%)</title><rect x="813" y="340" width="4" height="15" fill="rgb(207,12,10)"/><text x="816.00" y="350.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.31%)</title><rect x="813" y="356" width="4" height="15" fill="rgb(230,94,47)"/><text x="816.00" y="366.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (1 samples, 0.31%)</title><rect x="817" y="324" width="4" height="15" fill="rgb(234,40,39)"/><text x="820.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:245) (1 samples, 0.31%)</title><rect x="817" y="340" width="4" height="15" fill="rgb(233,27,38)"/><text x="820.00" y="350.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.31%)</title><rect x="817" y="356" width="4" height="15" fill="rgb(205,105,22)"/><text x="820.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.88%)</title><rect x="802" y="260" width="22" height="15" fill="rgb(245,107,18)"/><text x="805.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.56%)</title><rect x="806" y="276" width="18" height="15" fill="rgb(252,154,30)"/><text x="809.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.56%)</title><rect x="806" y="292" width="18" height="15" fill="rgb(228,206,2)"/><text x="809.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.62%)</title><rect x="817" y="308" width="7" height="15" fill="rgb(220,57,21)"/><text x="820.00" y="318.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.31%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(227,58,20)"/><text x="824.00" y="334.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1849) (1 samples, 0.31%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(215,216,3)"/><text x="824.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="824" y="260" width="4" height="15" fill="rgb(233,77,35)"/><text x="827.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.31%)</title><rect x="824" y="276" width="4" height="15" fill="rgb(223,169,15)"/><text x="827.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (32 samples, 10.00%)</title><rect x="714" y="196" width="118" height="15" fill="rgb(243,135,17)"/><text x="717.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 10.00%)</title><rect x="714" y="212" width="118" height="15" fill="rgb(220,179,47)"/><text x="717.00" y="222.50">run (mlprodict..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (31 samples, 9.69%)</title><rect x="718" y="228" width="114" height="15" fill="rgb(221,16,12)"/><text x="721.00" y="238.50">_run (mlprodic..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (12 samples, 3.75%)</title><rect x="788" y="244" width="44" height="15" fill="rgb(216,90,7)"/><text x="791.00" y="254.50">norm..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.31%)</title><rect x="828" y="260" width="4" height="15" fill="rgb(254,177,36)"/><text x="831.00" y="270.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:473) (1 samples, 0.31%)</title><rect x="828" y="276" width="4" height="15" fill="rgb(238,85,38)"/><text x="831.00" y="286.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.31%)</title><rect x="850" y="260" width="4" height="15" fill="rgb(219,39,36)"/><text x="853.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2213) (1 samples, 0.31%)</title><rect x="854" y="292" width="4" height="15" fill="rgb(250,112,2)"/><text x="857.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (1 samples, 0.31%)</title><rect x="858" y="292" width="3" height="15" fill="rgb(216,106,13)"/><text x="861.00" y="302.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.31%)</title><rect x="861" y="340" width="4" height="15" fill="rgb(209,153,12)"/><text x="864.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.31%)</title><rect x="861" y="356" width="4" height="15" fill="rgb(251,208,17)"/><text x="864.00" y="366.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (2 samples, 0.62%)</title><rect x="861" y="324" width="8" height="15" fill="rgb(205,133,25)"/><text x="864.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:933) (1 samples, 0.31%)</title><rect x="865" y="340" width="4" height="15" fill="rgb(219,185,14)"/><text x="868.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (7 samples, 2.19%)</title><rect x="847" y="228" width="25" height="15" fill="rgb(250,1,25)"/><text x="850.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 2.19%)</title><rect x="847" y="244" width="25" height="15" fill="rgb(205,87,2)"/><text x="850.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (5 samples, 1.56%)</title><rect x="854" y="260" width="18" height="15" fill="rgb(252,175,5)"/><text x="857.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.56%)</title><rect x="854" y="276" width="18" height="15" fill="rgb(241,36,43)"/><text x="857.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.94%)</title><rect x="861" y="292" width="11" height="15" fill="rgb(214,212,9)"/><text x="864.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.94%)</title><rect x="861" y="308" width="11" height="15" fill="rgb(234,7,25)"/><text x="864.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:696) (1 samples, 0.31%)</title><rect x="869" y="324" width="3" height="15" fill="rgb(235,67,27)"/><text x="872.00" y="334.50"></text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.31%)</title><rect x="876" y="244" width="4" height="15" fill="rgb(205,24,51)"/><text x="879.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.31%)</title><rect x="880" y="244" width="3" height="15" fill="rgb(239,11,41)"/><text x="883.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.31%)</title><rect x="880" y="260" width="3" height="15" fill="rgb(213,2,33)"/><text x="883.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.31%)</title><rect x="883" y="308" width="4" height="15" fill="rgb(215,168,4)"/><text x="886.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.31%)</title><rect x="883" y="324" width="4" height="15" fill="rgb(235,22,4)"/><text x="886.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.31%)</title><rect x="887" y="308" width="4" height="15" fill="rgb(241,65,6)"/><text x="890.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="887" y="324" width="4" height="15" fill="rgb(232,8,10)"/><text x="890.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.94%)</title><rect x="883" y="292" width="12" height="15" fill="rgb(218,63,28)"/><text x="886.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.31%)</title><rect x="891" y="308" width="4" height="15" fill="rgb(239,11,24)"/><text x="894.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.31%)</title><rect x="891" y="324" width="4" height="15" fill="rgb(252,41,27)"/><text x="894.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1135) (1 samples, 0.31%)</title><rect x="891" y="340" width="4" height="15" fill="rgb(218,6,36)"/><text x="894.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.31%)</title><rect x="891" y="356" width="4" height="15" fill="rgb(212,32,41)"/><text x="894.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.31%)</title><rect x="891" y="372" width="4" height="15" fill="rgb(254,179,49)"/><text x="894.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1556) (1 samples, 0.31%)</title><rect x="895" y="292" width="3" height="15" fill="rgb(240,100,41)"/><text x="898.00" y="302.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c:855) (1 samples, 0.31%)</title><rect x="895" y="308" width="3" height="15" fill="rgb(216,145,29)"/><text x="898.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.31%)</title><rect x="898" y="292" width="4" height="15" fill="rgb(250,146,38)"/><text x="901.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.31%)</title><rect x="898" y="308" width="4" height="15" fill="rgb(239,205,11)"/><text x="901.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2156) (1 samples, 0.31%)</title><rect x="898" y="324" width="4" height="15" fill="rgb(239,8,18)"/><text x="901.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (9 samples, 2.81%)</title><rect x="872" y="228" width="34" height="15" fill="rgb(213,217,30)"/><text x="875.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.88%)</title><rect x="883" y="244" width="23" height="15" fill="rgb(214,143,32)"/><text x="886.00" y="254.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.88%)</title><rect x="883" y="260" width="23" height="15" fill="rgb(235,192,15)"/><text x="886.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 1.88%)</title><rect x="883" y="276" width="23" height="15" fill="rgb(232,99,27)"/><text x="886.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.31%)</title><rect x="902" y="292" width="4" height="15" fill="rgb(221,35,34)"/><text x="905.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.31%)</title><rect x="902" y="308" width="4" height="15" fill="rgb(237,191,44)"/><text x="905.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="902" y="324" width="4" height="15" fill="rgb(234,97,3)"/><text x="905.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:43) (1 samples, 0.31%)</title><rect x="906" y="228" width="3" height="15" fill="rgb(221,79,52)"/><text x="909.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.31%)</title><rect x="931" y="244" width="4" height="15" fill="rgb(235,119,27)"/><text x="934.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.31%)</title><rect x="931" y="260" width="4" height="15" fill="rgb(220,139,44)"/><text x="934.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.31%)</title><rect x="931" y="276" width="4" height="15" fill="rgb(238,77,14)"/><text x="934.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.31%)</title><rect x="931" y="292" width="4" height="15" fill="rgb(212,133,22)"/><text x="934.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.31%)</title><rect x="931" y="308" width="4" height="15" fill="rgb(230,113,49)"/><text x="934.00" y="318.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:634) (1 samples, 0.31%)</title><rect x="931" y="324" width="4" height="15" fill="rgb(206,57,25)"/><text x="934.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.31%)</title><rect x="935" y="244" width="4" height="15" fill="rgb(212,197,34)"/><text x="938.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.31%)</title><rect x="935" y="260" width="4" height="15" fill="rgb(238,98,10)"/><text x="938.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (9 samples, 2.81%)</title><rect x="909" y="228" width="33" height="15" fill="rgb(245,20,4)"/><text x="912.00" y="238.50">_r..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.31%)</title><rect x="939" y="244" width="3" height="15" fill="rgb(223,116,43)"/><text x="942.00" y="254.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.31%)</title><rect x="939" y="260" width="3" height="15" fill="rgb(241,177,52)"/><text x="942.00" y="270.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (1 samples, 0.31%)</title><rect x="942" y="244" width="4" height="15" fill="rgb(214,44,42)"/><text x="945.00" y="254.50"></text></g><g><title>array_argmax (methods.c:292) (1 samples, 0.31%)</title><rect x="957" y="308" width="4" height="15" fill="rgb(223,99,29)"/><text x="960.00" y="318.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.31%)</title><rect x="961" y="308" width="4" height="15" fill="rgb(243,144,5)"/><text x="964.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.31%)</title><rect x="961" y="324" width="4" height="15" fill="rgb(210,207,49)"/><text x="964.00" y="334.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.31%)</title><rect x="961" y="340" width="4" height="15" fill="rgb(243,157,3)"/><text x="964.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.31%)</title><rect x="961" y="356" width="4" height="15" fill="rgb(250,10,17)"/><text x="964.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (37 samples, 11.56%)</title><rect x="832" y="196" width="136" height="15" fill="rgb(235,99,34)"/><text x="835.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 10.62%)</title><rect x="843" y="212" width="125" height="15" fill="rgb(251,180,11)"/><text x="846.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (7 samples, 2.19%)</title><rect x="942" y="228" width="26" height="15" fill="rgb(227,191,11)"/><text x="945.00" y="238.50">_..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.88%)</title><rect x="946" y="244" width="22" height="15" fill="rgb(244,57,13)"/><text x="949.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.56%)</title><rect x="950" y="260" width="18" height="15" fill="rgb(218,194,32)"/><text x="953.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (4 samples, 1.25%)</title><rect x="954" y="276" width="14" height="15" fill="rgb(213,220,53)"/><text x="957.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.94%)</title><rect x="957" y="292" width="11" height="15" fill="rgb(209,65,8)"/><text x="960.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.31%)</title><rect x="965" y="308" width="3" height="15" fill="rgb(239,188,8)"/><text x="968.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.31%)</title><rect x="965" y="324" width="3" height="15" fill="rgb(228,124,11)"/><text x="968.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="965" y="340" width="3" height="15" fill="rgb(253,79,41)"/><text x="968.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (78 samples, 24.38%)</title><rect x="684" y="180" width="288" height="15" fill="rgb(240,105,14)"/><text x="687.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_n..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.31%)</title><rect x="968" y="196" width="4" height="15" fill="rgb(211,112,53)"/><text x="971.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.31%)</title><rect x="972" y="180" width="4" height="15" fill="rgb(226,173,33)"/><text x="975.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (4 samples, 1.25%)</title><rect x="976" y="180" width="14" height="15" fill="rgb(230,117,49)"/><text x="979.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.31%)</title><rect x="990" y="180" width="4" height="15" fill="rgb(220,164,24)"/><text x="993.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (5 samples, 1.56%)</title><rect x="994" y="180" width="19" height="15" fill="rgb(219,102,47)"/><text x="997.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (99 samples, 30.94%)</title><rect x="651" y="164" width="365" height="15" fill="rgb(243,129,1)"/><text x="654.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.31%)</title><rect x="1013" y="180" width="3" height="15" fill="rgb(251,122,34)"/><text x="1016.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:45) (113 samples, 35.31%)</title><rect x="603" y="52" width="417" height="15" fill="rgb(238,23,13)"/><text x="606.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solver..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:44) (113 samples, 35.31%)</title><rect x="603" y="68" width="417" height="15" fill="rgb(253,176,25)"/><text x="606.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_m_cl_so..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:29) (112 samples, 35.00%)</title><rect x="607" y="84" width="413" height="15" fill="rgb(219,229,35)"/><text x="610.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_s..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:23) (112 samples, 35.00%)</title><rect x="607" y="100" width="413" height="15" fill="rgb(235,79,34)"/><text x="610.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 34.38%)</title><rect x="614" y="116" width="406" height="15" fill="rgb(226,220,20)"/><text x="617.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (108 samples, 33.75%)</title><rect x="622" y="132" width="398" height="15" fill="rgb(235,135,31)"/><text x="625.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:23..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (105 samples, 32.81%)</title><rect x="633" y="148" width="387" height="15" fill="rgb(205,206,38)"/><text x="636.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.31%)</title><rect x="1016" y="164" width="4" height="15" fill="rgb(242,145,8)"/><text x="1019.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.31%)</title><rect x="1016" y="180" width="4" height="15" fill="rgb(212,9,0)"/><text x="1019.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.31%)</title><rect x="1042" y="148" width="4" height="15" fill="rgb(231,66,19)"/><text x="1045.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.31%)</title><rect x="1046" y="148" width="3" height="15" fill="rgb(208,186,53)"/><text x="1049.00" y="158.50"></text></g><g><title>0x7fca4fd2fff9 (?) (1 samples, 0.31%)</title><rect x="1057" y="228" width="3" height="15" fill="rgb(254,229,0)"/><text x="1060.00" y="238.50"></text></g><g><title>0x7fca4fd29993 (?) (1 samples, 0.31%)</title><rect x="1057" y="244" width="3" height="15" fill="rgb(228,118,44)"/><text x="1060.00" y="254.50"></text></g><g><title>0x7fca501d7e64 (?) (1 samples, 0.31%)</title><rect x="1057" y="260" width="3" height="15" fill="rgb(248,206,35)"/><text x="1060.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.94%)</title><rect x="1053" y="196" width="11" height="15" fill="rgb(246,125,33)"/><text x="1056.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.62%)</title><rect x="1057" y="212" width="7" height="15" fill="rgb(235,78,36)"/><text x="1060.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1060" y="228" width="4" height="15" fill="rgb(222,208,8)"/><text x="1063.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1060" y="244" width="4" height="15" fill="rgb(208,3,18)"/><text x="1063.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1060" y="260" width="4" height="15" fill="rgb(243,58,28)"/><text x="1063.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1060" y="276" width="4" height="15" fill="rgb(249,26,28)"/><text x="1063.00" y="286.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1079" y="228" width="4" height="15" fill="rgb(215,78,24)"/><text x="1082.00" y="238.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1083" y="228" width="3" height="15" fill="rgb(251,9,26)"/><text x="1086.00" y="238.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1090" y="340" width="4" height="15" fill="rgb(254,155,53)"/><text x="1093.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1090" y="356" width="4" height="15" fill="rgb(232,107,17)"/><text x="1093.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1090" y="372" width="4" height="15" fill="rgb(229,110,2)"/><text x="1093.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1090" y="388" width="4" height="15" fill="rgb(211,168,45)"/><text x="1093.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1094" y="340" width="3" height="15" fill="rgb(217,65,40)"/><text x="1097.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1094" y="356" width="3" height="15" fill="rgb(249,78,9)"/><text x="1097.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1097" y="340" width="8" height="15" fill="rgb(227,72,51)"/><text x="1100.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1097" y="356" width="8" height="15" fill="rgb(225,134,26)"/><text x="1100.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1097" y="372" width="8" height="15" fill="rgb(252,51,8)"/><text x="1100.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1108" y="468" width="4" height="15" fill="rgb(247,100,3)"/><text x="1111.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1108" y="484" width="4" height="15" fill="rgb(253,64,16)"/><text x="1111.00" y="494.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="1105" y="340" width="11" height="15" fill="rgb(222,151,9)"/><text x="1108.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.94%)</title><rect x="1105" y="356" width="11" height="15" fill="rgb(246,228,53)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="372" width="8" height="15" fill="rgb(229,193,37)"/><text x="1111.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="388" width="8" height="15" fill="rgb(250,85,46)"/><text x="1111.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="404" width="8" height="15" fill="rgb(206,179,1)"/><text x="1111.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="420" width="8" height="15" fill="rgb(209,209,6)"/><text x="1111.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="436" width="8" height="15" fill="rgb(233,73,38)"/><text x="1111.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1108" y="452" width="8" height="15" fill="rgb(226,198,53)"/><text x="1111.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="1112" y="468" width="4" height="15" fill="rgb(227,111,17)"/><text x="1115.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1112" y="484" width="4" height="15" fill="rgb(239,101,33)"/><text x="1115.00" y="494.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1116" y="340" width="3" height="15" fill="rgb(221,149,43)"/><text x="1119.00" y="350.50"></text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1116" y="356" width="3" height="15" fill="rgb(206,90,53)"/><text x="1119.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeFromDimension (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1116" y="372" width="3" height="15" fill="rgb(217,228,5)"/><text x="1119.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.81%)</title><rect x="1090" y="276" width="33" height="15" fill="rgb(207,114,39)"/><text x="1093.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.81%)</title><rect x="1090" y="292" width="33" height="15" fill="rgb(243,22,5)"/><text x="1093.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.81%)</title><rect x="1090" y="308" width="33" height="15" fill="rgb(243,80,15)"/><text x="1093.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.81%)</title><rect x="1090" y="324" width="33" height="15" fill="rgb(227,2,44)"/><text x="1093.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1119" y="340" width="4" height="15" fill="rgb(243,96,33)"/><text x="1122.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1119" y="356" width="4" height="15" fill="rgb(227,178,41)"/><text x="1122.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1119" y="372" width="4" height="15" fill="rgb(235,222,47)"/><text x="1122.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1119" y="388" width="4" height="15" fill="rgb(221,163,41)"/><text x="1122.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.12%)</title><rect x="1090" y="260" width="37" height="15" fill="rgb(250,159,10)"/><text x="1093.00" y="270.50">onn..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1123" y="276" width="4" height="15" fill="rgb(206,72,41)"/><text x="1126.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1127" y="260" width="4" height="15" fill="rgb(233,148,45)"/><text x="1130.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1127" y="276" width="4" height="15" fill="rgb(253,130,34)"/><text x="1130.00" y="286.50"></text></g><g><title>0x7fca8fcff902 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1127" y="292" width="4" height="15" fill="rgb(217,4,46)"/><text x="1130.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.31%)</title><rect x="1131" y="292" width="3" height="15" fill="rgb(217,41,13)"/><text x="1134.00" y="302.50"></text></g><g><title>0x7fca8ef221c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1131" y="308" width="3" height="15" fill="rgb(211,126,2)"/><text x="1134.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1131" y="260" width="7" height="15" fill="rgb(207,33,51)"/><text x="1134.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.62%)</title><rect x="1131" y="276" width="7" height="15" fill="rgb(222,67,16)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.31%)</title><rect x="1134" y="292" width="4" height="15" fill="rgb(237,175,38)"/><text x="1137.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.31%)</title><rect x="1134" y="308" width="4" height="15" fill="rgb(247,213,1)"/><text x="1137.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.31%)</title><rect x="1134" y="324" width="4" height="15" fill="rgb(220,93,53)"/><text x="1137.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.31%)</title><rect x="1134" y="340" width="4" height="15" fill="rgb(219,108,46)"/><text x="1137.00" y="350.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.25%)</title><rect x="1138" y="260" width="15" height="15" fill="rgb(247,100,16)"/><text x="1141.00" y="270.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="1145" y="276" width="8" height="15" fill="rgb(242,149,23)"/><text x="1148.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1153" y="260" width="3" height="15" fill="rgb(218,94,29)"/><text x="1156.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 5.94%)</title><rect x="1090" y="244" width="70" height="15" fill="rgb(226,120,28)"/><text x="1093.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="260" width="4" height="15" fill="rgb(228,153,26)"/><text x="1159.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="276" width="4" height="15" fill="rgb(241,129,1)"/><text x="1159.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="292" width="4" height="15" fill="rgb(218,142,12)"/><text x="1159.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="308" width="4" height="15" fill="rgb(244,127,33)"/><text x="1159.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="324" width="4" height="15" fill="rgb(248,174,21)"/><text x="1159.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="340" width="4" height="15" fill="rgb(232,178,37)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="356" width="4" height="15" fill="rgb(219,169,44)"/><text x="1159.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1156" y="372" width="4" height="15" fill="rgb(219,103,10)"/><text x="1159.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (30 samples, 9.38%)</title><rect x="1053" y="164" width="111" height="15" fill="rgb(223,177,48)"/><text x="1056.00" y="174.50">_run_whole_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (30 samples, 9.38%)</title><rect x="1053" y="180" width="111" height="15" fill="rgb(211,150,25)"/><text x="1056.00" y="190.50">run (mlprodic..</text></g><g><title>run (onnxruntime/capi/session.py:136) (27 samples, 8.44%)</title><rect x="1064" y="196" width="100" height="15" fill="rgb(236,167,29)"/><text x="1067.00" y="206.50">run (onnxrun..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 7.50%)</title><rect x="1075" y="212" width="89" height="15" fill="rgb(254,216,39)"/><text x="1078.00" y="222.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.56%)</title><rect x="1086" y="228" width="78" height="15" fill="rgb(213,64,51)"/><text x="1089.00" y="238.50">void pybi..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1160" y="244" width="4" height="15" fill="rgb(227,186,32)"/><text x="1163.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="1160" y="260" width="4" height="15" fill="rgb(231,228,10)"/><text x="1163.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (40 samples, 12.50%)</title><rect x="1038" y="132" width="148" height="15" fill="rgb(222,214,24)"/><text x="1041.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (37 samples, 11.56%)</title><rect x="1049" y="148" width="137" height="15" fill="rgb(205,62,48)"/><text x="1052.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 1.88%)</title><rect x="1164" y="164" width="22" height="15" fill="rgb(207,87,54)"/><text x="1167.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.31%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(252,2,10)"/><text x="1185.00" y="190.50"></text></g><g><title>all (320 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,128,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:52) (46 samples, 14.38%)</title><rect x="1020" y="52" width="170" height="15" fill="rgb(249,29,25)"/><text x="1023.00" y="62.50">&lt;module&gt; (bench_Logist..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:51) (46 samples, 14.38%)</title><rect x="1020" y="68" width="170" height="15" fill="rgb(230,204,13)"/><text x="1023.00" y="78.50">profile_ort (bench_Log..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:29) (46 samples, 14.38%)</title><rect x="1020" y="84" width="170" height="15" fill="rgb(248,55,39)"/><text x="1023.00" y="94.50">setup_profile (bench_L..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_1_4_12_float_.py:23) (46 samples, 14.38%)</title><rect x="1020" y="100" width="170" height="15" fill="rgb(239,28,30)"/><text x="1023.00" y="110.50">profile (bench_Logisti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (43 samples, 13.44%)</title><rect x="1031" y="116" width="159" height="15" fill="rgb(229,177,37)"/><text x="1034.00" y="126.50">time_predict (mlprod..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(251,36,45)"/><text x="1189.00" y="142.50"></text></g></g></svg>