<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(218,87,35)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(238,57,43)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(217,134,12)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(211,73,9)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(242,141,51)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(252,136,10)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(213,221,1)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(254,186,4)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(227,111,18)"/><text x="17.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(236,53,1)"/><text x="17.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(226,210,6)"/><text x="17.00" y="1038.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="14" y="1044" width="5" height="15" fill="rgb(216,9,16)"/><text x="17.00" y="1054.50"></text></g><g><title>basename (posixpath.py) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(227,210,25)"/><text x="22.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 1.24%)</title><rect x="14" y="868" width="15" height="15" fill="rgb(236,80,43)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 1.24%)</title><rect x="14" y="884" width="15" height="15" fill="rgb(253,96,33)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.24%)</title><rect x="14" y="900" width="15" height="15" fill="rgb(247,189,11)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.24%)</title><rect x="14" y="916" width="15" height="15" fill="rgb(231,115,15)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.83%)</title><rect x="19" y="932" width="10" height="15" fill="rgb(227,137,30)"/><text x="22.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="948" width="5" height="15" fill="rgb(231,3,20)"/><text x="27.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="964" width="5" height="15" fill="rgb(215,24,2)"/><text x="27.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(228,46,27)"/><text x="27.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(230,117,18)"/><text x="27.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.41%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(245,49,1)"/><text x="27.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 2.07%)</title><rect x="10" y="292" width="24" height="15" fill="rgb(214,115,37)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="308" width="24" height="15" fill="rgb(232,23,9)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="324" width="24" height="15" fill="rgb(216,106,10)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="340" width="24" height="15" fill="rgb(233,94,7)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.07%)</title><rect x="10" y="356" width="24" height="15" fill="rgb(209,173,11)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="372" width="24" height="15" fill="rgb(253,73,6)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 2.07%)</title><rect x="10" y="388" width="24" height="15" fill="rgb(205,84,27)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="404" width="24" height="15" fill="rgb(221,229,12)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="420" width="24" height="15" fill="rgb(212,144,45)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="436" width="24" height="15" fill="rgb(251,87,2)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.07%)</title><rect x="10" y="452" width="24" height="15" fill="rgb(219,51,42)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="468" width="24" height="15" fill="rgb(221,13,20)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 2.07%)</title><rect x="10" y="484" width="24" height="15" fill="rgb(254,194,15)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="500" width="24" height="15" fill="rgb(229,67,37)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="516" width="24" height="15" fill="rgb(205,188,37)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="532" width="24" height="15" fill="rgb(213,161,34)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.07%)</title><rect x="10" y="548" width="24" height="15" fill="rgb(207,22,47)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="564" width="24" height="15" fill="rgb(226,150,51)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 2.07%)</title><rect x="10" y="580" width="24" height="15" fill="rgb(206,217,52)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="596" width="24" height="15" fill="rgb(211,57,5)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="612" width="24" height="15" fill="rgb(227,112,37)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="628" width="24" height="15" fill="rgb(235,127,30)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="644" width="24" height="15" fill="rgb(225,135,44)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="660" width="24" height="15" fill="rgb(215,132,20)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="676" width="24" height="15" fill="rgb(219,141,35)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.07%)</title><rect x="10" y="692" width="24" height="15" fill="rgb(213,171,20)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="708" width="24" height="15" fill="rgb(251,23,12)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 2.07%)</title><rect x="10" y="724" width="24" height="15" fill="rgb(246,209,8)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="740" width="24" height="15" fill="rgb(235,8,21)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="756" width="24" height="15" fill="rgb(220,217,45)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="772" width="24" height="15" fill="rgb(212,161,0)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.07%)</title><rect x="10" y="788" width="24" height="15" fill="rgb(219,159,32)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.07%)</title><rect x="10" y="804" width="24" height="15" fill="rgb(223,182,41)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 2.07%)</title><rect x="10" y="820" width="24" height="15" fill="rgb(231,43,20)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 2.07%)</title><rect x="10" y="836" width="24" height="15" fill="rgb(209,195,41)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 2.07%)</title><rect x="10" y="852" width="24" height="15" fill="rgb(219,169,25)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="868" width="5" height="15" fill="rgb(210,175,14)"/><text x="32.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(251,36,46)"/><text x="32.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(210,184,18)"/><text x="32.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.41%)</title><rect x="29" y="916" width="5" height="15" fill="rgb(228,23,47)"/><text x="32.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="932" width="5" height="15" fill="rgb(210,85,53)"/><text x="32.00" y="942.50"></text></g><g><title>0x7f1d9bfa8237 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="948" width="5" height="15" fill="rgb(219,217,41)"/><text x="32.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="500" width="5" height="15" fill="rgb(252,37,33)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="516" width="5" height="15" fill="rgb(242,38,25)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="532" width="5" height="15" fill="rgb(215,167,9)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="548" width="5" height="15" fill="rgb(210,191,11)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="564" width="5" height="15" fill="rgb(219,80,26)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.41%)</title><rect x="34" y="580" width="5" height="15" fill="rgb(208,202,35)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="596" width="5" height="15" fill="rgb(237,14,3)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="612" width="5" height="15" fill="rgb(247,169,1)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="628" width="5" height="15" fill="rgb(233,47,47)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="644" width="5" height="15" fill="rgb(224,152,13)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="660" width="5" height="15" fill="rgb(215,53,31)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.41%)</title><rect x="34" y="676" width="5" height="15" fill="rgb(223,114,18)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="692" width="5" height="15" fill="rgb(238,125,16)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="708" width="5" height="15" fill="rgb(216,62,41)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="724" width="5" height="15" fill="rgb(209,221,6)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="740" width="5" height="15" fill="rgb(231,106,0)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="756" width="5" height="15" fill="rgb(240,154,35)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.41%)</title><rect x="34" y="772" width="5" height="15" fill="rgb(225,77,53)"/><text x="37.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="788" width="5" height="15" fill="rgb(231,7,12)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="804" width="5" height="15" fill="rgb(250,196,2)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="820" width="5" height="15" fill="rgb(215,108,24)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="836" width="5" height="15" fill="rgb(229,84,6)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="852" width="5" height="15" fill="rgb(207,119,31)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="868" width="5" height="15" fill="rgb(242,46,18)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="884" width="5" height="15" fill="rgb(240,154,50)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.41%)</title><rect x="34" y="900" width="5" height="15" fill="rgb(227,162,3)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="916" width="5" height="15" fill="rgb(246,193,31)"/><text x="37.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="932" width="5" height="15" fill="rgb(231,168,13)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="948" width="5" height="15" fill="rgb(209,168,14)"/><text x="37.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="964" width="5" height="15" fill="rgb(206,19,49)"/><text x="37.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="980" width="5" height="15" fill="rgb(237,45,48)"/><text x="37.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="34" y="996" width="5" height="15" fill="rgb(208,111,44)"/><text x="37.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="34" y="1012" width="5" height="15" fill="rgb(214,186,20)"/><text x="37.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.41%)</title><rect x="34" y="1028" width="5" height="15" fill="rgb(207,215,51)"/><text x="37.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.41%)</title><rect x="34" y="1044" width="5" height="15" fill="rgb(206,117,0)"/><text x="37.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.41%)</title><rect x="34" y="1060" width="5" height="15" fill="rgb(251,70,15)"/><text x="37.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.41%)</title><rect x="34" y="1076" width="5" height="15" fill="rgb(218,160,13)"/><text x="37.00" y="1086.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="34" y="1092" width="5" height="15" fill="rgb(213,7,6)"/><text x="37.00" y="1102.50"></text></g><g><title>0x7f1d9bf6a751 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="34" y="1108" width="5" height="15" fill="rgb(252,67,42)"/><text x="37.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="10" y="196" width="34" height="15" fill="rgb(216,30,39)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="10" y="212" width="34" height="15" fill="rgb(217,124,2)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="10" y="228" width="34" height="15" fill="rgb(226,204,24)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="10" y="244" width="34" height="15" fill="rgb(211,121,43)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.90%)</title><rect x="10" y="260" width="34" height="15" fill="rgb(249,86,33)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="10" y="276" width="34" height="15" fill="rgb(225,94,26)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.83%)</title><rect x="34" y="292" width="10" height="15" fill="rgb(246,186,16)"/><text x="37.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="308" width="10" height="15" fill="rgb(212,34,42)"/><text x="37.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="324" width="10" height="15" fill="rgb(223,66,18)"/><text x="37.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="340" width="10" height="15" fill="rgb(240,12,33)"/><text x="37.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="34" y="356" width="10" height="15" fill="rgb(236,97,36)"/><text x="37.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="372" width="10" height="15" fill="rgb(211,112,33)"/><text x="37.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.83%)</title><rect x="34" y="388" width="10" height="15" fill="rgb(209,211,7)"/><text x="37.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="404" width="10" height="15" fill="rgb(227,4,39)"/><text x="37.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="420" width="10" height="15" fill="rgb(217,91,21)"/><text x="37.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="436" width="10" height="15" fill="rgb(226,81,15)"/><text x="37.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="34" y="452" width="10" height="15" fill="rgb(212,22,0)"/><text x="37.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="34" y="468" width="10" height="15" fill="rgb(253,191,24)"/><text x="37.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.83%)</title><rect x="34" y="484" width="10" height="15" fill="rgb(222,39,54)"/><text x="37.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="500" width="5" height="15" fill="rgb(232,159,45)"/><text x="42.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="516" width="5" height="15" fill="rgb(252,56,0)"/><text x="42.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="532" width="5" height="15" fill="rgb(234,32,8)"/><text x="42.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="548" width="5" height="15" fill="rgb(240,205,17)"/><text x="42.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="564" width="5" height="15" fill="rgb(246,143,47)"/><text x="42.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="580" width="5" height="15" fill="rgb(248,119,7)"/><text x="42.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="596" width="5" height="15" fill="rgb(233,87,2)"/><text x="42.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.41%)</title><rect x="39" y="612" width="5" height="15" fill="rgb(226,214,35)"/><text x="42.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="628" width="5" height="15" fill="rgb(220,216,8)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="644" width="5" height="15" fill="rgb(227,178,31)"/><text x="42.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="660" width="5" height="15" fill="rgb(242,144,36)"/><text x="42.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="676" width="5" height="15" fill="rgb(231,14,35)"/><text x="42.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="692" width="5" height="15" fill="rgb(224,139,13)"/><text x="42.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.41%)</title><rect x="39" y="708" width="5" height="15" fill="rgb(212,207,40)"/><text x="42.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="724" width="5" height="15" fill="rgb(252,20,15)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="740" width="5" height="15" fill="rgb(238,114,8)"/><text x="42.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="756" width="5" height="15" fill="rgb(217,45,25)"/><text x="42.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="772" width="5" height="15" fill="rgb(235,4,5)"/><text x="42.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="788" width="5" height="15" fill="rgb(205,184,3)"/><text x="42.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.41%)</title><rect x="39" y="804" width="5" height="15" fill="rgb(213,0,47)"/><text x="42.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="820" width="5" height="15" fill="rgb(207,38,32)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="836" width="5" height="15" fill="rgb(228,222,24)"/><text x="42.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="852" width="5" height="15" fill="rgb(205,225,10)"/><text x="42.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="868" width="5" height="15" fill="rgb(232,135,50)"/><text x="42.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="884" width="5" height="15" fill="rgb(243,196,24)"/><text x="42.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.41%)</title><rect x="39" y="900" width="5" height="15" fill="rgb(212,156,41)"/><text x="42.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="916" width="5" height="15" fill="rgb(227,113,1)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="932" width="5" height="15" fill="rgb(240,37,6)"/><text x="42.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="948" width="5" height="15" fill="rgb(220,75,33)"/><text x="42.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="964" width="5" height="15" fill="rgb(225,58,31)"/><text x="42.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="980" width="5" height="15" fill="rgb(237,23,25)"/><text x="42.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.41%)</title><rect x="39" y="996" width="5" height="15" fill="rgb(213,184,3)"/><text x="42.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1012" width="5" height="15" fill="rgb(251,58,30)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1028" width="5" height="15" fill="rgb(210,181,47)"/><text x="42.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1044" width="5" height="15" fill="rgb(245,46,29)"/><text x="42.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1060" width="5" height="15" fill="rgb(252,109,53)"/><text x="42.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1076" width="5" height="15" fill="rgb(238,168,25)"/><text x="42.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1092" width="5" height="15" fill="rgb(238,117,50)"/><text x="42.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="1108" width="5" height="15" fill="rgb(253,135,46)"/><text x="42.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1124" width="5" height="15" fill="rgb(213,68,5)"/><text x="42.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.41%)</title><rect x="39" y="1140" width="5" height="15" fill="rgb(212,30,41)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1156" width="5" height="15" fill="rgb(224,93,3)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1172" width="5" height="15" fill="rgb(215,98,17)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1188" width="5" height="15" fill="rgb(228,122,4)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="1204" width="5" height="15" fill="rgb(232,226,28)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1220" width="5" height="15" fill="rgb(212,152,51)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.41%)</title><rect x="39" y="1236" width="5" height="15" fill="rgb(244,66,1)"/><text x="42.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1252" width="5" height="15" fill="rgb(235,43,4)"/><text x="42.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1268" width="5" height="15" fill="rgb(228,115,3)"/><text x="42.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1284" width="5" height="15" fill="rgb(210,135,50)"/><text x="42.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="1300" width="5" height="15" fill="rgb(225,33,23)"/><text x="42.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1316" width="5" height="15" fill="rgb(227,20,34)"/><text x="42.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.41%)</title><rect x="39" y="1332" width="5" height="15" fill="rgb(223,61,14)"/><text x="42.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1348" width="5" height="15" fill="rgb(226,149,44)"/><text x="42.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1364" width="5" height="15" fill="rgb(253,48,54)"/><text x="42.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1380" width="5" height="15" fill="rgb(232,199,35)"/><text x="42.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="1396" width="5" height="15" fill="rgb(206,181,39)"/><text x="42.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1412" width="5" height="15" fill="rgb(210,124,28)"/><text x="42.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (1 samples, 0.41%)</title><rect x="39" y="1428" width="5" height="15" fill="rgb(250,47,17)"/><text x="42.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1444" width="5" height="15" fill="rgb(205,201,52)"/><text x="42.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1460" width="5" height="15" fill="rgb(218,138,12)"/><text x="42.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1476" width="5" height="15" fill="rgb(210,45,0)"/><text x="42.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="39" y="1492" width="5" height="15" fill="rgb(215,119,2)"/><text x="42.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="39" y="1508" width="5" height="15" fill="rgb(231,179,17)"/><text x="42.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py) (1 samples, 0.41%)</title><rect x="39" y="1524" width="5" height="15" fill="rgb(250,8,10)"/><text x="42.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1124" width="5" height="15" fill="rgb(248,161,40)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1140" width="5" height="15" fill="rgb(206,78,23)"/><text x="47.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1156" width="5" height="15" fill="rgb(237,176,20)"/><text x="47.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="44" y="1172" width="5" height="15" fill="rgb(211,110,8)"/><text x="47.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1188" width="5" height="15" fill="rgb(210,4,40)"/><text x="47.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.41%)</title><rect x="44" y="1204" width="5" height="15" fill="rgb(250,9,35)"/><text x="47.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1220" width="5" height="15" fill="rgb(253,8,45)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1236" width="5" height="15" fill="rgb(245,139,14)"/><text x="47.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1252" width="5" height="15" fill="rgb(215,76,32)"/><text x="47.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="44" y="1268" width="5" height="15" fill="rgb(225,128,30)"/><text x="47.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="44" y="1284" width="5" height="15" fill="rgb(254,23,0)"/><text x="47.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.41%)</title><rect x="44" y="1300" width="5" height="15" fill="rgb(206,158,42)"/><text x="47.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.41%)</title><rect x="44" y="1316" width="5" height="15" fill="rgb(226,124,9)"/><text x="47.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.41%)</title><rect x="44" y="1332" width="5" height="15" fill="rgb(247,126,25)"/><text x="47.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.41%)</title><rect x="44" y="1348" width="5" height="15" fill="rgb(229,8,16)"/><text x="47.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.41%)</title><rect x="44" y="1364" width="5" height="15" fill="rgb(220,94,35)"/><text x="47.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.41%)</title><rect x="44" y="1380" width="5" height="15" fill="rgb(215,159,32)"/><text x="47.00" y="1390.50"></text></g><g><title>0x7f1d8c02907e (?) (1 samples, 0.41%)</title><rect x="49" y="1492" width="5" height="15" fill="rgb(210,140,41)"/><text x="52.00" y="1502.50"></text></g><g><title>0x7f1d8c0288b0 (?) (1 samples, 0.41%)</title><rect x="49" y="1508" width="5" height="15" fill="rgb(219,37,2)"/><text x="52.00" y="1518.50"></text></g><g><title>0x7f1d8c02fba8 (?) (1 samples, 0.41%)</title><rect x="49" y="1524" width="5" height="15" fill="rgb(230,87,6)"/><text x="52.00" y="1534.50"></text></g><g><title>0x7f1d8c02f901 (?) (1 samples, 0.41%)</title><rect x="49" y="1540" width="5" height="15" fill="rgb(208,137,41)"/><text x="52.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="484" width="19" height="15" fill="rgb(209,65,50)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="500" width="19" height="15" fill="rgb(249,187,9)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="516" width="19" height="15" fill="rgb(232,79,15)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="532" width="19" height="15" fill="rgb(209,202,1)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="548" width="19" height="15" fill="rgb(227,31,4)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="564" width="19" height="15" fill="rgb(221,41,2)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.66%)</title><rect x="44" y="580" width="19" height="15" fill="rgb(224,76,5)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="596" width="19" height="15" fill="rgb(221,192,7)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="612" width="19" height="15" fill="rgb(251,75,37)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="628" width="19" height="15" fill="rgb(226,126,12)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="644" width="19" height="15" fill="rgb(220,153,40)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="660" width="19" height="15" fill="rgb(224,213,2)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.66%)</title><rect x="44" y="676" width="19" height="15" fill="rgb(245,205,34)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="692" width="19" height="15" fill="rgb(246,155,20)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="708" width="19" height="15" fill="rgb(235,43,29)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="724" width="19" height="15" fill="rgb(250,157,36)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="740" width="19" height="15" fill="rgb(234,31,20)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="756" width="19" height="15" fill="rgb(229,72,30)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.66%)</title><rect x="44" y="772" width="19" height="15" fill="rgb(236,19,10)"/><text x="47.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="788" width="19" height="15" fill="rgb(209,7,30)"/><text x="47.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="804" width="19" height="15" fill="rgb(211,145,41)"/><text x="47.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="820" width="19" height="15" fill="rgb(215,60,0)"/><text x="47.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="836" width="19" height="15" fill="rgb(254,24,25)"/><text x="47.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="852" width="19" height="15" fill="rgb(235,71,52)"/><text x="47.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.66%)</title><rect x="44" y="868" width="19" height="15" fill="rgb(213,192,52)"/><text x="47.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="884" width="19" height="15" fill="rgb(209,24,18)"/><text x="47.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="900" width="19" height="15" fill="rgb(239,122,47)"/><text x="47.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="916" width="19" height="15" fill="rgb(236,112,44)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="932" width="19" height="15" fill="rgb(225,166,11)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="948" width="19" height="15" fill="rgb(246,140,44)"/><text x="47.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="964" width="19" height="15" fill="rgb(244,205,3)"/><text x="47.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="980" width="19" height="15" fill="rgb(216,90,38)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="996" width="19" height="15" fill="rgb(239,193,41)"/><text x="47.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.66%)</title><rect x="44" y="1012" width="19" height="15" fill="rgb(206,127,30)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="1028" width="19" height="15" fill="rgb(220,42,12)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="1044" width="19" height="15" fill="rgb(233,74,4)"/><text x="47.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="1060" width="19" height="15" fill="rgb(229,92,45)"/><text x="47.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.66%)</title><rect x="44" y="1076" width="19" height="15" fill="rgb(223,158,45)"/><text x="47.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.66%)</title><rect x="44" y="1092" width="19" height="15" fill="rgb(250,229,54)"/><text x="47.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.66%)</title><rect x="44" y="1108" width="19" height="15" fill="rgb(240,204,41)"/><text x="47.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1124" width="14" height="15" fill="rgb(215,58,7)"/><text x="52.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1140" width="14" height="15" fill="rgb(242,65,48)"/><text x="52.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1156" width="14" height="15" fill="rgb(206,3,11)"/><text x="52.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1172" width="14" height="15" fill="rgb(210,186,29)"/><text x="52.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1188" width="14" height="15" fill="rgb(236,67,44)"/><text x="52.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.24%)</title><rect x="49" y="1204" width="14" height="15" fill="rgb(240,10,2)"/><text x="52.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1220" width="14" height="15" fill="rgb(224,99,52)"/><text x="52.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.24%)</title><rect x="49" y="1236" width="14" height="15" fill="rgb(227,43,35)"/><text x="52.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1252" width="14" height="15" fill="rgb(233,68,5)"/><text x="52.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1268" width="14" height="15" fill="rgb(228,59,42)"/><text x="52.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1284" width="14" height="15" fill="rgb(214,11,35)"/><text x="52.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1300" width="14" height="15" fill="rgb(238,206,12)"/><text x="52.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1316" width="14" height="15" fill="rgb(248,46,16)"/><text x="52.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.24%)</title><rect x="49" y="1332" width="14" height="15" fill="rgb(245,42,35)"/><text x="52.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1348" width="14" height="15" fill="rgb(212,216,24)"/><text x="52.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.24%)</title><rect x="49" y="1364" width="14" height="15" fill="rgb(214,228,50)"/><text x="52.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1380" width="14" height="15" fill="rgb(222,88,41)"/><text x="52.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1396" width="14" height="15" fill="rgb(221,146,43)"/><text x="52.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1412" width="14" height="15" fill="rgb(226,111,47)"/><text x="52.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.24%)</title><rect x="49" y="1428" width="14" height="15" fill="rgb(245,25,9)"/><text x="52.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="49" y="1444" width="14" height="15" fill="rgb(245,162,4)"/><text x="52.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.24%)</title><rect x="49" y="1460" width="14" height="15" fill="rgb(236,127,27)"/><text x="52.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.24%)</title><rect x="49" y="1476" width="14" height="15" fill="rgb(216,72,1)"/><text x="52.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.83%)</title><rect x="54" y="1492" width="9" height="15" fill="rgb(223,26,39)"/><text x="57.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.41%)</title><rect x="58" y="1508" width="5" height="15" fill="rgb(245,155,25)"/><text x="61.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.41%)</title><rect x="58" y="1524" width="5" height="15" fill="rgb(226,35,17)"/><text x="61.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="58" y="1540" width="5" height="15" fill="rgb(243,217,2)"/><text x="61.00" y="1550.50"></text></g><g><title>new_context (jinja2/environment.py) (1 samples, 0.41%)</title><rect x="58" y="1556" width="5" height="15" fill="rgb(248,213,47)"/><text x="61.00" y="1566.50"></text></g><g><title>new_context (jinja2/runtime.py) (1 samples, 0.41%)</title><rect x="58" y="1572" width="5" height="15" fill="rgb(212,229,10)"/><text x="61.00" y="1582.50"></text></g><g><title>__init__ (jinja2/runtime.py) (1 samples, 0.41%)</title><rect x="58" y="1588" width="5" height="15" fill="rgb(254,127,30)"/><text x="61.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1540" width="5" height="15" fill="rgb(219,101,42)"/><text x="66.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1556" width="5" height="15" fill="rgb(240,208,46)"/><text x="66.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1572" width="5" height="15" fill="rgb(248,173,41)"/><text x="66.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1588" width="5" height="15" fill="rgb(244,139,17)"/><text x="66.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="63" y="1604" width="5" height="15" fill="rgb(241,149,16)"/><text x="66.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1620" width="5" height="15" fill="rgb(234,57,11)"/><text x="66.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.41%)</title><rect x="63" y="1636" width="5" height="15" fill="rgb(232,125,37)"/><text x="66.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1652" width="5" height="15" fill="rgb(225,207,18)"/><text x="66.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1668" width="5" height="15" fill="rgb(220,50,47)"/><text x="66.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1684" width="5" height="15" fill="rgb(231,39,8)"/><text x="66.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1700" width="5" height="15" fill="rgb(235,31,50)"/><text x="66.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1716" width="5" height="15" fill="rgb(227,171,12)"/><text x="66.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="63" y="1732" width="5" height="15" fill="rgb(208,13,17)"/><text x="66.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1748" width="5" height="15" fill="rgb(249,69,17)"/><text x="66.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.41%)</title><rect x="63" y="1764" width="5" height="15" fill="rgb(243,121,33)"/><text x="66.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1780" width="5" height="15" fill="rgb(213,40,32)"/><text x="66.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1796" width="5" height="15" fill="rgb(244,84,47)"/><text x="66.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1812" width="5" height="15" fill="rgb(230,79,47)"/><text x="66.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="63" y="1828" width="5" height="15" fill="rgb(207,93,26)"/><text x="66.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="63" y="1844" width="5" height="15" fill="rgb(223,27,17)"/><text x="66.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.41%)</title><rect x="63" y="1860" width="5" height="15" fill="rgb(252,91,20)"/><text x="66.00" y="1870.50"></text></g><g><title>__init__ (matplotlib/fontconfig_pattern.py) (1 samples, 0.41%)</title><rect x="63" y="1876" width="5" height="15" fill="rgb(206,62,6)"/><text x="66.00" y="1886.50"></text></g><g><title>__add__ (pyparsing.py) (1 samples, 0.41%)</title><rect x="63" y="1892" width="5" height="15" fill="rgb(233,173,12)"/><text x="66.00" y="1902.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.41%)</title><rect x="63" y="1908" width="5" height="15" fill="rgb(212,10,36)"/><text x="66.00" y="1918.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.41%)</title><rect x="63" y="1924" width="5" height="15" fill="rgb(227,112,24)"/><text x="66.00" y="1934.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.49%)</title><rect x="44" y="436" width="29" height="15" fill="rgb(230,83,2)"/><text x="47.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.49%)</title><rect x="44" y="452" width="29" height="15" fill="rgb(254,95,43)"/><text x="47.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.49%)</title><rect x="44" y="468" width="29" height="15" fill="rgb(215,138,29)"/><text x="47.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="484" width="10" height="15" fill="rgb(252,54,24)"/><text x="66.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="500" width="10" height="15" fill="rgb(221,195,15)"/><text x="66.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="516" width="10" height="15" fill="rgb(236,112,29)"/><text x="66.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.83%)</title><rect x="63" y="532" width="10" height="15" fill="rgb(236,41,18)"/><text x="66.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="548" width="10" height="15" fill="rgb(205,15,26)"/><text x="66.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="564" width="10" height="15" fill="rgb(231,36,53)"/><text x="66.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="580" width="10" height="15" fill="rgb(210,64,1)"/><text x="66.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="596" width="10" height="15" fill="rgb(225,0,3)"/><text x="66.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="612" width="10" height="15" fill="rgb(244,23,26)"/><text x="66.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.83%)</title><rect x="63" y="628" width="10" height="15" fill="rgb(253,219,45)"/><text x="66.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="644" width="10" height="15" fill="rgb(237,17,24)"/><text x="66.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="660" width="10" height="15" fill="rgb(240,21,0)"/><text x="66.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="676" width="10" height="15" fill="rgb(209,9,45)"/><text x="66.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="692" width="10" height="15" fill="rgb(211,137,31)"/><text x="66.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="708" width="10" height="15" fill="rgb(224,168,50)"/><text x="66.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.83%)</title><rect x="63" y="724" width="10" height="15" fill="rgb(207,53,43)"/><text x="66.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="740" width="10" height="15" fill="rgb(240,177,3)"/><text x="66.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="756" width="10" height="15" fill="rgb(245,107,15)"/><text x="66.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="772" width="10" height="15" fill="rgb(251,217,2)"/><text x="66.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="788" width="10" height="15" fill="rgb(254,55,10)"/><text x="66.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="804" width="10" height="15" fill="rgb(217,205,10)"/><text x="66.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.83%)</title><rect x="63" y="820" width="10" height="15" fill="rgb(250,64,6)"/><text x="66.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="836" width="10" height="15" fill="rgb(224,159,30)"/><text x="66.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="852" width="10" height="15" fill="rgb(207,61,26)"/><text x="66.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="868" width="10" height="15" fill="rgb(244,219,7)"/><text x="66.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="884" width="10" height="15" fill="rgb(220,157,53)"/><text x="66.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="900" width="10" height="15" fill="rgb(222,166,6)"/><text x="66.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.83%)</title><rect x="63" y="916" width="10" height="15" fill="rgb(246,76,45)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="932" width="10" height="15" fill="rgb(235,193,19)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="948" width="10" height="15" fill="rgb(228,109,35)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="964" width="10" height="15" fill="rgb(208,200,26)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="980" width="10" height="15" fill="rgb(229,111,31)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="996" width="10" height="15" fill="rgb(210,131,16)"/><text x="66.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.83%)</title><rect x="63" y="1012" width="10" height="15" fill="rgb(207,19,15)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1028" width="10" height="15" fill="rgb(208,229,8)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1044" width="10" height="15" fill="rgb(214,198,22)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1060" width="10" height="15" fill="rgb(222,136,20)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="1076" width="10" height="15" fill="rgb(213,25,25)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1092" width="10" height="15" fill="rgb(236,65,33)"/><text x="66.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.83%)</title><rect x="63" y="1108" width="10" height="15" fill="rgb(216,179,7)"/><text x="66.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1124" width="10" height="15" fill="rgb(217,4,9)"/><text x="66.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1140" width="10" height="15" fill="rgb(225,182,8)"/><text x="66.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1156" width="10" height="15" fill="rgb(235,148,32)"/><text x="66.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="1172" width="10" height="15" fill="rgb(246,200,9)"/><text x="66.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1188" width="10" height="15" fill="rgb(254,109,16)"/><text x="66.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.83%)</title><rect x="63" y="1204" width="10" height="15" fill="rgb(250,104,32)"/><text x="66.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1220" width="10" height="15" fill="rgb(213,64,5)"/><text x="66.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1236" width="10" height="15" fill="rgb(233,207,24)"/><text x="66.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1252" width="10" height="15" fill="rgb(226,227,51)"/><text x="66.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="1268" width="10" height="15" fill="rgb(206,149,4)"/><text x="66.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1284" width="10" height="15" fill="rgb(234,172,23)"/><text x="66.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.83%)</title><rect x="63" y="1300" width="10" height="15" fill="rgb(229,217,15)"/><text x="66.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1316" width="10" height="15" fill="rgb(240,125,19)"/><text x="66.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1332" width="10" height="15" fill="rgb(216,8,28)"/><text x="66.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1348" width="10" height="15" fill="rgb(245,68,43)"/><text x="66.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="1364" width="10" height="15" fill="rgb(206,137,12)"/><text x="66.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1380" width="10" height="15" fill="rgb(249,184,23)"/><text x="66.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.83%)</title><rect x="63" y="1396" width="10" height="15" fill="rgb(235,71,4)"/><text x="66.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1412" width="10" height="15" fill="rgb(251,110,26)"/><text x="66.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1428" width="10" height="15" fill="rgb(220,198,41)"/><text x="66.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1444" width="10" height="15" fill="rgb(213,182,11)"/><text x="66.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="63" y="1460" width="10" height="15" fill="rgb(251,99,48)"/><text x="66.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1476" width="10" height="15" fill="rgb(211,156,26)"/><text x="66.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.83%)</title><rect x="63" y="1492" width="10" height="15" fill="rgb(231,49,28)"/><text x="66.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1508" width="10" height="15" fill="rgb(254,106,3)"/><text x="66.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="63" y="1524" width="10" height="15" fill="rgb(225,129,26)"/><text x="66.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1540" width="5" height="15" fill="rgb(228,11,12)"/><text x="71.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="68" y="1556" width="5" height="15" fill="rgb(244,215,19)"/><text x="71.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1572" width="5" height="15" fill="rgb(246,189,46)"/><text x="71.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.41%)</title><rect x="68" y="1588" width="5" height="15" fill="rgb(242,111,2)"/><text x="71.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1604" width="5" height="15" fill="rgb(226,169,40)"/><text x="71.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1620" width="5" height="15" fill="rgb(219,178,35)"/><text x="71.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1636" width="5" height="15" fill="rgb(210,22,5)"/><text x="71.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="68" y="1652" width="5" height="15" fill="rgb(245,11,50)"/><text x="71.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1668" width="5" height="15" fill="rgb(223,83,54)"/><text x="71.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.41%)</title><rect x="68" y="1684" width="5" height="15" fill="rgb(209,134,13)"/><text x="71.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1700" width="5" height="15" fill="rgb(247,30,49)"/><text x="71.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1716" width="5" height="15" fill="rgb(254,122,1)"/><text x="71.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1732" width="5" height="15" fill="rgb(215,13,3)"/><text x="71.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="68" y="1748" width="5" height="15" fill="rgb(232,77,13)"/><text x="71.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1764" width="5" height="15" fill="rgb(248,157,28)"/><text x="71.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.41%)</title><rect x="68" y="1780" width="5" height="15" fill="rgb(242,178,37)"/><text x="71.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1796" width="5" height="15" fill="rgb(220,55,3)"/><text x="71.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1812" width="5" height="15" fill="rgb(243,108,24)"/><text x="71.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1828" width="5" height="15" fill="rgb(251,150,26)"/><text x="71.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="68" y="1844" width="5" height="15" fill="rgb(244,24,35)"/><text x="71.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="68" y="1860" width="5" height="15" fill="rgb(235,168,54)"/><text x="71.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.41%)</title><rect x="68" y="1876" width="5" height="15" fill="rgb(220,77,32)"/><text x="71.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.41%)</title><rect x="68" y="1892" width="5" height="15" fill="rgb(211,24,15)"/><text x="71.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.41%)</title><rect x="68" y="1908" width="5" height="15" fill="rgb(213,196,38)"/><text x="71.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.41%)</title><rect x="68" y="1924" width="5" height="15" fill="rgb(213,118,10)"/><text x="71.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.41%)</title><rect x="68" y="1940" width="5" height="15" fill="rgb(250,134,30)"/><text x="71.00" y="1950.50"></text></g><g><title>_compile (re.py) (1 samples, 0.41%)</title><rect x="68" y="1956" width="5" height="15" fill="rgb(248,123,43)"/><text x="71.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.90%)</title><rect x="44" y="244" width="34" height="15" fill="rgb(227,191,20)"/><text x="47.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="260" width="34" height="15" fill="rgb(205,45,47)"/><text x="47.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="276" width="34" height="15" fill="rgb(210,184,48)"/><text x="47.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="292" width="34" height="15" fill="rgb(234,29,31)"/><text x="47.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.90%)</title><rect x="44" y="308" width="34" height="15" fill="rgb(246,132,25)"/><text x="47.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="324" width="34" height="15" fill="rgb(253,58,34)"/><text x="47.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 2.90%)</title><rect x="44" y="340" width="34" height="15" fill="rgb(209,145,21)"/><text x="47.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="356" width="34" height="15" fill="rgb(252,5,15)"/><text x="47.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="372" width="34" height="15" fill="rgb(242,159,36)"/><text x="47.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="388" width="34" height="15" fill="rgb(238,210,22)"/><text x="47.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.90%)</title><rect x="44" y="404" width="34" height="15" fill="rgb(209,80,16)"/><text x="47.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.90%)</title><rect x="44" y="420" width="34" height="15" fill="rgb(252,218,22)"/><text x="47.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.41%)</title><rect x="73" y="436" width="5" height="15" fill="rgb(215,52,9)"/><text x="76.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="452" width="5" height="15" fill="rgb(209,109,42)"/><text x="76.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="468" width="5" height="15" fill="rgb(250,136,11)"/><text x="76.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="484" width="5" height="15" fill="rgb(212,198,23)"/><text x="76.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="73" y="500" width="5" height="15" fill="rgb(221,1,19)"/><text x="76.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="516" width="5" height="15" fill="rgb(212,84,39)"/><text x="76.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.41%)</title><rect x="73" y="532" width="5" height="15" fill="rgb(217,25,17)"/><text x="76.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="548" width="5" height="15" fill="rgb(209,200,16)"/><text x="76.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="564" width="5" height="15" fill="rgb(245,103,44)"/><text x="76.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="580" width="5" height="15" fill="rgb(231,74,1)"/><text x="76.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="596" width="5" height="15" fill="rgb(242,222,16)"/><text x="76.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="612" width="5" height="15" fill="rgb(214,196,44)"/><text x="76.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="628" width="5" height="15" fill="rgb(215,118,40)"/><text x="76.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="73" y="644" width="5" height="15" fill="rgb(252,215,13)"/><text x="76.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="660" width="5" height="15" fill="rgb(222,19,43)"/><text x="76.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.41%)</title><rect x="73" y="676" width="5" height="15" fill="rgb(205,72,4)"/><text x="76.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="692" width="5" height="15" fill="rgb(208,148,42)"/><text x="76.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="708" width="5" height="15" fill="rgb(208,217,9)"/><text x="76.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="73" y="724" width="5" height="15" fill="rgb(238,138,50)"/><text x="76.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="73" y="740" width="5" height="15" fill="rgb(247,140,42)"/><text x="76.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="73" y="756" width="5" height="15" fill="rgb(228,106,11)"/><text x="76.00" y="766.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="73" y="772" width="5" height="15" fill="rgb(215,110,7)"/><text x="76.00" y="782.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="73" y="788" width="5" height="15" fill="rgb(211,28,44)"/><text x="76.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="68" width="73" height="15" fill="rgb(254,92,41)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="84" width="73" height="15" fill="rgb(216,84,24)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="100" width="73" height="15" fill="rgb(243,86,18)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 6.22%)</title><rect x="10" y="116" width="73" height="15" fill="rgb(228,30,37)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="132" width="73" height="15" fill="rgb(245,35,35)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py) (15 samples, 6.22%)</title><rect x="10" y="148" width="73" height="15" fill="rgb(211,27,11)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="164" width="73" height="15" fill="rgb(252,70,42)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 6.22%)</title><rect x="10" y="180" width="73" height="15" fill="rgb(224,53,6)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.32%)</title><rect x="44" y="196" width="39" height="15" fill="rgb(254,224,7)"/><text x="47.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.32%)</title><rect x="44" y="212" width="39" height="15" fill="rgb(228,98,39)"/><text x="47.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.32%)</title><rect x="44" y="228" width="39" height="15" fill="rgb(208,188,45)"/><text x="47.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.41%)</title><rect x="78" y="244" width="5" height="15" fill="rgb(220,144,52)"/><text x="81.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="260" width="5" height="15" fill="rgb(247,94,9)"/><text x="81.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="276" width="5" height="15" fill="rgb(250,1,50)"/><text x="81.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="292" width="5" height="15" fill="rgb(209,43,9)"/><text x="81.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="308" width="5" height="15" fill="rgb(213,176,26)"/><text x="81.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="324" width="5" height="15" fill="rgb(236,141,4)"/><text x="81.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="340" width="5" height="15" fill="rgb(226,23,9)"/><text x="81.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="356" width="5" height="15" fill="rgb(253,67,17)"/><text x="81.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.41%)</title><rect x="78" y="372" width="5" height="15" fill="rgb(236,47,49)"/><text x="81.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="388" width="5" height="15" fill="rgb(241,40,41)"/><text x="81.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="404" width="5" height="15" fill="rgb(235,50,21)"/><text x="81.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="420" width="5" height="15" fill="rgb(208,120,17)"/><text x="81.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="436" width="5" height="15" fill="rgb(234,100,49)"/><text x="81.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="452" width="5" height="15" fill="rgb(246,158,49)"/><text x="81.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="468" width="5" height="15" fill="rgb(211,203,50)"/><text x="81.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="484" width="5" height="15" fill="rgb(234,190,22)"/><text x="81.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.41%)</title><rect x="78" y="500" width="5" height="15" fill="rgb(237,19,34)"/><text x="81.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="516" width="5" height="15" fill="rgb(252,169,45)"/><text x="81.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="532" width="5" height="15" fill="rgb(207,118,19)"/><text x="81.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="548" width="5" height="15" fill="rgb(230,165,17)"/><text x="81.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="564" width="5" height="15" fill="rgb(219,69,20)"/><text x="81.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="580" width="5" height="15" fill="rgb(208,10,0)"/><text x="81.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.41%)</title><rect x="78" y="596" width="5" height="15" fill="rgb(250,104,54)"/><text x="81.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="612" width="5" height="15" fill="rgb(220,142,34)"/><text x="81.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="628" width="5" height="15" fill="rgb(252,87,5)"/><text x="81.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="644" width="5" height="15" fill="rgb(209,99,39)"/><text x="81.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="660" width="5" height="15" fill="rgb(237,216,40)"/><text x="81.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="676" width="5" height="15" fill="rgb(222,2,39)"/><text x="81.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py) (1 samples, 0.41%)</title><rect x="78" y="692" width="5" height="15" fill="rgb(210,57,6)"/><text x="81.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="708" width="5" height="15" fill="rgb(214,104,26)"/><text x="81.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="724" width="5" height="15" fill="rgb(221,57,32)"/><text x="81.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="740" width="5" height="15" fill="rgb(250,165,44)"/><text x="81.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="756" width="5" height="15" fill="rgb(248,222,44)"/><text x="81.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="772" width="5" height="15" fill="rgb(228,1,47)"/><text x="81.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py) (1 samples, 0.41%)</title><rect x="78" y="788" width="5" height="15" fill="rgb(222,0,49)"/><text x="81.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="804" width="5" height="15" fill="rgb(227,14,32)"/><text x="81.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="820" width="5" height="15" fill="rgb(251,148,38)"/><text x="81.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="836" width="5" height="15" fill="rgb(211,129,22)"/><text x="81.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="852" width="5" height="15" fill="rgb(241,79,38)"/><text x="81.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="868" width="5" height="15" fill="rgb(230,214,17)"/><text x="81.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py) (1 samples, 0.41%)</title><rect x="78" y="884" width="5" height="15" fill="rgb(252,213,33)"/><text x="81.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="900" width="5" height="15" fill="rgb(252,86,39)"/><text x="81.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="916" width="5" height="15" fill="rgb(206,22,13)"/><text x="81.00" y="926.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="932" width="5" height="15" fill="rgb(213,60,11)"/><text x="81.00" y="942.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="948" width="5" height="15" fill="rgb(243,88,4)"/><text x="81.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="964" width="5" height="15" fill="rgb(213,220,6)"/><text x="81.00" y="974.50"></text></g><g><title>&lt;module&gt; (linecache.py) (1 samples, 0.41%)</title><rect x="78" y="980" width="5" height="15" fill="rgb(209,68,43)"/><text x="81.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="996" width="5" height="15" fill="rgb(251,118,13)"/><text x="81.00" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="1012" width="5" height="15" fill="rgb(253,117,9)"/><text x="81.00" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="1028" width="5" height="15" fill="rgb(221,20,37)"/><text x="81.00" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.41%)</title><rect x="78" y="1044" width="5" height="15" fill="rgb(236,195,22)"/><text x="81.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="78" y="1060" width="5" height="15" fill="rgb(251,122,4)"/><text x="81.00" y="1070.50"></text></g><g><title>&lt;module&gt; (tokenize.py) (1 samples, 0.41%)</title><rect x="78" y="1076" width="5" height="15" fill="rgb(236,68,17)"/><text x="81.00" y="1086.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.41%)</title><rect x="78" y="1092" width="5" height="15" fill="rgb(214,206,29)"/><text x="81.00" y="1102.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.41%)</title><rect x="78" y="1108" width="5" height="15" fill="rgb(228,221,49)"/><text x="81.00" y="1118.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="83" y="116" width="5" height="15" fill="rgb(205,53,35)"/><text x="86.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="83" y="132" width="5" height="15" fill="rgb(206,214,43)"/><text x="86.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="83" y="148" width="5" height="15" fill="rgb(226,9,23)"/><text x="86.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="132" y="180" width="5" height="15" fill="rgb(233,86,17)"/><text x="135.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.83%)</title><rect x="166" y="212" width="10" height="15" fill="rgb(249,101,12)"/><text x="169.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="166" y="228" width="10" height="15" fill="rgb(227,190,5)"/><text x="169.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="171" y="244" width="5" height="15" fill="rgb(221,125,17)"/><text x="174.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="171" y="260" width="5" height="15" fill="rgb(219,92,9)"/><text x="174.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="171" y="276" width="5" height="15" fill="rgb(223,211,24)"/><text x="174.00" y="286.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="340" width="5" height="15" fill="rgb(251,199,35)"/><text x="194.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="356" width="5" height="15" fill="rgb(211,165,46)"/><text x="194.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="372" width="5" height="15" fill="rgb(214,74,45)"/><text x="194.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="388" width="5" height="15" fill="rgb(237,88,36)"/><text x="194.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="404" width="5" height="15" fill="rgb(218,64,35)"/><text x="194.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="420" width="5" height="15" fill="rgb(246,0,30)"/><text x="194.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="436" width="5" height="15" fill="rgb(221,131,54)"/><text x="194.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="452" width="5" height="15" fill="rgb(217,212,19)"/><text x="194.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="468" width="5" height="15" fill="rgb(215,187,35)"/><text x="194.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="484" width="5" height="15" fill="rgb(242,219,47)"/><text x="194.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="500" width="5" height="15" fill="rgb(252,46,9)"/><text x="194.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="516" width="5" height="15" fill="rgb(208,179,3)"/><text x="194.00" y="526.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="191" y="532" width="5" height="15" fill="rgb(206,141,8)"/><text x="194.00" y="542.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="196" y="340" width="4" height="15" fill="rgb(238,209,15)"/><text x="199.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="196" y="356" width="4" height="15" fill="rgb(238,194,15)"/><text x="199.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="196" y="372" width="4" height="15" fill="rgb(245,110,51)"/><text x="199.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="200" y="340" width="5" height="15" fill="rgb(238,44,30)"/><text x="203.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="200" y="356" width="5" height="15" fill="rgb(215,150,37)"/><text x="203.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="200" y="372" width="5" height="15" fill="rgb(220,206,15)"/><text x="203.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="200" y="388" width="5" height="15" fill="rgb(252,95,5)"/><text x="203.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="205" y="340" width="5" height="15" fill="rgb(207,65,23)"/><text x="208.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="205" y="356" width="5" height="15" fill="rgb(214,57,46)"/><text x="208.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="205" y="372" width="5" height="15" fill="rgb(251,186,47)"/><text x="208.00" y="382.50"></text></g><g><title>0x7f1d8ba357a0 (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="205" y="388" width="5" height="15" fill="rgb(245,9,47)"/><text x="208.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="210" y="340" width="5" height="15" fill="rgb(206,138,24)"/><text x="213.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.41%)</title><rect x="210" y="356" width="5" height="15" fill="rgb(220,80,53)"/><text x="213.00" y="366.50"></text></g><g><title>expf32x (libm-2.29.so) (2 samples, 0.83%)</title><rect x="240" y="356" width="9" height="15" fill="rgb(251,47,35)"/><text x="243.00" y="366.50"></text></g><g><title>0x7f1d9c13ac52 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="245" y="372" width="4" height="15" fill="rgb(207,175,42)"/><text x="248.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="356" width="5" height="15" fill="rgb(242,192,28)"/><text x="252.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="372" width="5" height="15" fill="rgb(247,90,36)"/><text x="252.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="388" width="5" height="15" fill="rgb(235,183,20)"/><text x="252.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="404" width="5" height="15" fill="rgb(227,88,39)"/><text x="252.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="420" width="5" height="15" fill="rgb(247,194,6)"/><text x="252.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="436" width="5" height="15" fill="rgb(219,101,14)"/><text x="252.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="249" y="452" width="5" height="15" fill="rgb(237,106,54)"/><text x="252.00" y="462.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="254" y="356" width="5" height="15" fill="rgb(225,227,2)"/><text x="257.00" y="366.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="259" y="356" width="5" height="15" fill="rgb(229,160,48)"/><text x="262.00" y="366.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.56%)</title><rect x="215" y="340" width="54" height="15" fill="rgb(250,24,22)"/><text x="218.00" y="350.50">onnxr..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="264" y="356" width="5" height="15" fill="rgb(224,97,31)"/><text x="267.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.05%)</title><rect x="191" y="260" width="83" height="15" fill="rgb(246,189,35)"/><text x="194.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.05%)</title><rect x="191" y="276" width="83" height="15" fill="rgb(237,118,6)"/><text x="194.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.05%)</title><rect x="191" y="292" width="83" height="15" fill="rgb(251,130,2)"/><text x="194.00" y="302.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.05%)</title><rect x="191" y="308" width="83" height="15" fill="rgb(215,134,28)"/><text x="194.00" y="318.50">onnxrunti..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 7.05%)</title><rect x="191" y="324" width="83" height="15" fill="rgb(250,198,49)"/><text x="194.00" y="334.50">onnxrunti..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="269" y="340" width="5" height="15" fill="rgb(243,117,19)"/><text x="272.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="274" y="260" width="5" height="15" fill="rgb(225,178,5)"/><text x="277.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="279" y="260" width="5" height="15" fill="rgb(216,22,35)"/><text x="282.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.41%)</title><rect x="279" y="276" width="5" height="15" fill="rgb(223,114,34)"/><text x="282.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="279" y="292" width="5" height="15" fill="rgb(228,115,50)"/><text x="282.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.41%)</title><rect x="279" y="308" width="5" height="15" fill="rgb(223,25,38)"/><text x="282.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.41%)</title><rect x="279" y="324" width="5" height="15" fill="rgb(220,212,37)"/><text x="282.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.41%)</title><rect x="279" y="340" width="5" height="15" fill="rgb(225,224,49)"/><text x="282.00" y="350.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="284" y="260" width="9" height="15" fill="rgb(232,91,2)"/><text x="287.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 9.96%)</title><rect x="181" y="244" width="117" height="15" fill="rgb(246,198,7)"/><text x="184.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="293" y="260" width="5" height="15" fill="rgb(226,43,44)"/><text x="296.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="293" y="276" width="5" height="15" fill="rgb(231,213,43)"/><text x="296.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="293" y="292" width="5" height="15" fill="rgb(226,187,51)"/><text x="296.00" y="302.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="293" y="308" width="5" height="15" fill="rgb(249,147,0)"/><text x="296.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="298" y="244" width="10" height="15" fill="rgb(245,27,22)"/><text x="301.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="303" y="260" width="5" height="15" fill="rgb(211,220,16)"/><text x="306.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="308" y="244" width="5" height="15" fill="rgb(217,209,48)"/><text x="311.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="308" y="260" width="5" height="15" fill="rgb(243,83,4)"/><text x="311.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (46 samples, 19.09%)</title><rect x="93" y="132" width="225" height="15" fill="rgb(207,107,53)"/><text x="96.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (44 samples, 18.26%)</title><rect x="103" y="148" width="215" height="15" fill="rgb(220,214,0)"/><text x="106.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (43 samples, 17.84%)</title><rect x="107" y="164" width="211" height="15" fill="rgb(217,31,28)"/><text x="110.00" y="174.50">_run_whole_runtime (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (37 samples, 15.35%)</title><rect x="137" y="180" width="181" height="15" fill="rgb(228,176,10)"/><text x="140.00" y="190.50">run (mlprodict/onnxrt/o..</text></g><g><title>run (onnxruntime/capi/session.py) (34 samples, 14.11%)</title><rect x="151" y="196" width="167" height="15" fill="rgb(229,52,10)"/><text x="154.00" y="206.50">run (onnxruntime/capi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 12.03%)</title><rect x="176" y="212" width="142" height="15" fill="rgb(222,174,41)"/><text x="179.00" y="222.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 12.03%)</title><rect x="176" y="228" width="142" height="15" fill="rgb(225,6,43)"/><text x="179.00" y="238.50">void pybind11::cpp..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="313" y="244" width="5" height="15" fill="rgb(212,182,22)"/><text x="316.00" y="254.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (49 samples, 20.33%)</title><rect x="83" y="100" width="240" height="15" fill="rgb(212,218,46)"/><text x="86.00" y="110.50">profile (bench_SVC_rbf_b_cl_pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 19.92%)</title><rect x="88" y="116" width="235" height="15" fill="rgb(249,93,41)"/><text x="91.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.41%)</title><rect x="318" y="132" width="5" height="15" fill="rgb(206,223,14)"/><text x="321.00" y="142.50"></text></g><g><title>0x7f1d5bfa0af0 (?) (1 samples, 0.41%)</title><rect x="323" y="564" width="5" height="15" fill="rgb(249,139,10)"/><text x="326.00" y="574.50"></text></g><g><title>0x7f1d5bfb31d2 (?) (1 samples, 0.41%)</title><rect x="323" y="580" width="5" height="15" fill="rgb(238,125,14)"/><text x="326.00" y="590.50"></text></g><g><title>0x7f1d5bfb27b8 (?) (1 samples, 0.41%)</title><rect x="323" y="596" width="5" height="15" fill="rgb(233,71,11)"/><text x="326.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="323" y="612" width="5" height="15" fill="rgb(246,75,23)"/><text x="326.00" y="622.50"></text></g><g><title>0x7f1d5bfb0994 (?) (1 samples, 0.41%)</title><rect x="323" y="628" width="5" height="15" fill="rgb(221,63,53)"/><text x="326.00" y="638.50"></text></g><g><title>0x7f1d5bfaf2eb (?) (1 samples, 0.41%)</title><rect x="323" y="644" width="5" height="15" fill="rgb(221,17,38)"/><text x="326.00" y="654.50"></text></g><g><title>0x7f1d5c5056e2 (?) (1 samples, 0.41%)</title><rect x="323" y="660" width="5" height="15" fill="rgb(240,88,28)"/><text x="326.00" y="670.50"></text></g><g><title>0x7f1d5c556830 (?) (1 samples, 0.41%)</title><rect x="323" y="676" width="5" height="15" fill="rgb(246,170,13)"/><text x="326.00" y="686.50"></text></g><g><title>0x7f1d5c55b2c3 (?) (1 samples, 0.41%)</title><rect x="323" y="692" width="5" height="15" fill="rgb(240,193,47)"/><text x="326.00" y="702.50"></text></g><g><title>profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (51 samples, 21.16%)</title><rect x="83" y="68" width="250" height="15" fill="rgb(242,30,47)"/><text x="86.00" y="78.50">profile_ort (bench_SVC_rbf_b_cl_p..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (51 samples, 21.16%)</title><rect x="83" y="84" width="250" height="15" fill="rgb(233,196,0)"/><text x="86.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.83%)</title><rect x="323" y="100" width="10" height="15" fill="rgb(230,179,4)"/><text x="326.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.83%)</title><rect x="323" y="116" width="10" height="15" fill="rgb(212,174,42)"/><text x="326.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.83%)</title><rect x="323" y="132" width="10" height="15" fill="rgb(206,177,49)"/><text x="326.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.83%)</title><rect x="323" y="148" width="10" height="15" fill="rgb(227,76,2)"/><text x="326.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.83%)</title><rect x="323" y="164" width="10" height="15" fill="rgb(250,212,21)"/><text x="326.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="180" width="10" height="15" fill="rgb(239,215,54)"/><text x="326.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="196" width="10" height="15" fill="rgb(251,217,31)"/><text x="326.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="212" width="10" height="15" fill="rgb(234,188,26)"/><text x="326.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="323" y="228" width="10" height="15" fill="rgb(251,212,49)"/><text x="326.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="244" width="10" height="15" fill="rgb(245,74,2)"/><text x="326.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.83%)</title><rect x="323" y="260" width="10" height="15" fill="rgb(228,135,10)"/><text x="326.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="276" width="10" height="15" fill="rgb(211,54,29)"/><text x="326.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="292" width="10" height="15" fill="rgb(233,66,47)"/><text x="326.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="308" width="10" height="15" fill="rgb(228,42,51)"/><text x="326.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="323" y="324" width="10" height="15" fill="rgb(205,127,37)"/><text x="326.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="340" width="10" height="15" fill="rgb(228,149,8)"/><text x="326.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.83%)</title><rect x="323" y="356" width="10" height="15" fill="rgb(209,77,24)"/><text x="326.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="372" width="10" height="15" fill="rgb(238,201,1)"/><text x="326.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="388" width="10" height="15" fill="rgb(232,181,0)"/><text x="326.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="404" width="10" height="15" fill="rgb(212,45,16)"/><text x="326.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="323" y="420" width="10" height="15" fill="rgb(206,118,23)"/><text x="326.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="436" width="10" height="15" fill="rgb(211,168,48)"/><text x="326.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.83%)</title><rect x="323" y="452" width="10" height="15" fill="rgb(249,19,25)"/><text x="326.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="468" width="10" height="15" fill="rgb(230,11,41)"/><text x="326.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="484" width="10" height="15" fill="rgb(249,136,46)"/><text x="326.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="500" width="10" height="15" fill="rgb(227,21,53)"/><text x="326.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="516" width="10" height="15" fill="rgb(224,181,40)"/><text x="326.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.83%)</title><rect x="323" y="532" width="10" height="15" fill="rgb(212,107,39)"/><text x="326.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.83%)</title><rect x="323" y="548" width="10" height="15" fill="rgb(245,162,47)"/><text x="326.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="564" width="5" height="15" fill="rgb(249,13,20)"/><text x="331.00" y="574.50"></text></g><g><title>0x7f1d9c1f0995 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="580" width="5" height="15" fill="rgb(216,194,53)"/><text x="331.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="596" width="5" height="15" fill="rgb(235,197,15)"/><text x="331.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="612" width="5" height="15" fill="rgb(242,106,11)"/><text x="331.00" y="622.50"></text></g><g><title>0x7f1d9c1f0258 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="628" width="5" height="15" fill="rgb(240,97,51)"/><text x="331.00" y="638.50"></text></g><g><title>0x7f1d9c23dd7a (ld-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="644" width="5" height="15" fill="rgb(234,131,45)"/><text x="331.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="660" width="5" height="15" fill="rgb(208,221,21)"/><text x="331.00" y="670.50"></text></g><g><title>0x7f1d9c23e345 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="676" width="5" height="15" fill="rgb(251,185,42)"/><text x="331.00" y="686.50"></text></g><g><title>0x7f1d9c236fec (ld-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="692" width="5" height="15" fill="rgb(214,141,1)"/><text x="331.00" y="702.50"></text></g><g><title>0x7f1d9c23556b (ld-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="708" width="5" height="15" fill="rgb(229,162,46)"/><text x="331.00" y="718.50"></text></g><g><title>0x7f1d9c2348e0 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="328" y="724" width="5" height="15" fill="rgb(223,213,35)"/><text x="331.00" y="734.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.41%)</title><rect x="396" y="180" width="5" height="15" fill="rgb(216,102,28)"/><text x="399.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.41%)</title><rect x="396" y="196" width="5" height="15" fill="rgb(223,139,50)"/><text x="399.00" y="206.50"></text></g><g><title>0x7f1d9c046130 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="396" y="212" width="5" height="15" fill="rgb(254,94,9)"/><text x="399.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.41%)</title><rect x="455" y="196" width="5" height="15" fill="rgb(245,29,30)"/><text x="458.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.66%)</title><rect x="470" y="212" width="19" height="15" fill="rgb(225,186,14)"/><text x="473.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (3 samples, 1.24%)</title><rect x="475" y="228" width="14" height="15" fill="rgb(253,7,32)"/><text x="478.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.41%)</title><rect x="484" y="244" width="5" height="15" fill="rgb(229,179,1)"/><text x="487.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.41%)</title><rect x="484" y="260" width="5" height="15" fill="rgb(247,184,17)"/><text x="487.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.41%)</title><rect x="484" y="276" width="5" height="15" fill="rgb(208,145,37)"/><text x="487.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (2 samples, 0.83%)</title><rect x="489" y="212" width="10" height="15" fill="rgb(242,53,17)"/><text x="492.00" y="222.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_cpu/op_zipmap.py) (1 samples, 0.41%)</title><rect x="494" y="228" width="5" height="15" fill="rgb(246,117,4)"/><text x="497.00" y="238.50"></text></g><g><title>0x7f1d5d0d7c29 (?) (1 samples, 0.41%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(241,152,42)"/><text x="532.00" y="254.50"></text></g><g><title>0x7f1d5d0ded9e (?) (1 samples, 0.41%)</title><rect x="529" y="260" width="4" height="15" fill="rgb(209,75,24)"/><text x="532.00" y="270.50"></text></g><g><title>0x7f1d5d0dec56 (?) (1 samples, 0.41%)</title><rect x="529" y="276" width="4" height="15" fill="rgb(219,99,25)"/><text x="532.00" y="286.50"></text></g><g><title>0x7f1d5d0e4ac7 (?) (1 samples, 0.41%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(239,116,24)"/><text x="532.00" y="302.50"></text></g><g><title>0x7f1d5d0e4274 (?) (1 samples, 0.41%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(230,105,10)"/><text x="532.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (2 samples, 0.83%)</title><rect x="533" y="436" width="10" height="15" fill="rgb(235,188,34)"/><text x="536.00" y="446.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (1 samples, 0.41%)</title><rect x="543" y="436" width="5" height="15" fill="rgb(225,88,22)"/><text x="546.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.41%)</title><rect x="543" y="452" width="5" height="15" fill="rgb(237,171,5)"/><text x="546.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.41%)</title><rect x="543" y="468" width="5" height="15" fill="rgb(254,104,29)"/><text x="546.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.41%)</title><rect x="543" y="484" width="5" height="15" fill="rgb(248,224,0)"/><text x="546.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.41%)</title><rect x="543" y="500" width="5" height="15" fill="rgb(215,89,12)"/><text x="546.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.41%)</title><rect x="543" y="516" width="5" height="15" fill="rgb(220,9,46)"/><text x="546.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.41%)</title><rect x="543" y="532" width="5" height="15" fill="rgb(244,13,1)"/><text x="546.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.41%)</title><rect x="543" y="548" width="5" height="15" fill="rgb(252,102,8)"/><text x="546.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.41%)</title><rect x="543" y="564" width="5" height="15" fill="rgb(206,20,46)"/><text x="546.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="543" y="580" width="5" height="15" fill="rgb(247,165,30)"/><text x="546.00" y="590.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.41%)</title><rect x="543" y="596" width="5" height="15" fill="rgb(247,223,43)"/><text x="546.00" y="606.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.41%)</title><rect x="543" y="612" width="5" height="15" fill="rgb(252,107,47)"/><text x="546.00" y="622.50"></text></g><g><title>pybind11::array_t&lt;long, 16&gt;::array_t (numpy.h) (1 samples, 0.41%)</title><rect x="548" y="436" width="5" height="15" fill="rgb(234,178,35)"/><text x="551.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.41%)</title><rect x="548" y="452" width="5" height="15" fill="rgb(224,168,10)"/><text x="551.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.41%)</title><rect x="548" y="468" width="5" height="15" fill="rgb(223,89,8)"/><text x="551.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;long&gt; (numpy.h) (1 samples, 0.41%)</title><rect x="548" y="484" width="5" height="15" fill="rgb(207,158,23)"/><text x="551.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.41%)</title><rect x="548" y="500" width="5" height="15" fill="rgb(253,217,54)"/><text x="551.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.41%)</title><rect x="548" y="516" width="5" height="15" fill="rgb(246,119,38)"/><text x="551.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.41%)</title><rect x="548" y="532" width="5" height="15" fill="rgb(210,175,44)"/><text x="551.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.41%)</title><rect x="548" y="548" width="5" height="15" fill="rgb(240,158,3)"/><text x="551.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.41%)</title><rect x="548" y="564" width="5" height="15" fill="rgb(249,222,11)"/><text x="551.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="548" y="580" width="5" height="15" fill="rgb(212,75,29)"/><text x="551.00" y="590.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="548" y="596" width="5" height="15" fill="rgb(205,72,5)"/><text x="551.00" y="606.50"></text></g><g><title>0x7f1d9c13aba0 (libm-2.29.so) (1 samples, 0.41%)</title><rect x="553" y="500" width="5" height="15" fill="rgb(240,114,36)"/><text x="556.00" y="510.50"></text></g><g><title>0x7f1d9c13ac3e (libm-2.29.so) (1 samples, 0.41%)</title><rect x="558" y="500" width="5" height="15" fill="rgb(221,12,29)"/><text x="561.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (3 samples, 1.24%)</title><rect x="553" y="468" width="15" height="15" fill="rgb(212,7,49)"/><text x="556.00" y="478.50"></text></g><g><title>expf32x (libm-2.29.so) (3 samples, 1.24%)</title><rect x="553" y="484" width="15" height="15" fill="rgb(237,127,23)"/><text x="556.00" y="494.50"></text></g><g><title>0x7f1d9c13ac5a (libm-2.29.so) (1 samples, 0.41%)</title><rect x="563" y="500" width="5" height="15" fill="rgb(216,132,40)"/><text x="566.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.41%)</title><rect x="568" y="468" width="5" height="15" fill="rgb(217,225,54)"/><text x="571.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (1 samples, 0.41%)</title><rect x="568" y="484" width="5" height="15" fill="rgb(212,43,51)"/><text x="571.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (1 samples, 0.41%)</title><rect x="568" y="500" width="5" height="15" fill="rgb(236,99,11)"/><text x="571.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.41%)</title><rect x="568" y="516" width="5" height="15" fill="rgb(253,6,33)"/><text x="571.00" y="526.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (9 samples, 3.73%)</title><rect x="533" y="292" width="44" height="15" fill="rgb(240,88,20)"/><text x="536.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (9 samples, 3.73%)</title><rect x="533" y="308" width="44" height="15" fill="rgb(224,190,21)"/><text x="536.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (9 samples, 3.73%)</title><rect x="533" y="324" width="44" height="15" fill="rgb(218,33,26)"/><text x="536.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (9 samples, 3.73%)</title><rect x="533" y="340" width="44" height="15" fill="rgb(211,71,28)"/><text x="536.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h) (9 samples, 3.73%)</title><rect x="533" y="356" width="44" height="15" fill="rgb(214,186,17)"/><text x="536.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (9 samples, 3.73%)</title><rect x="533" y="372" width="44" height="15" fill="rgb(240,133,10)"/><text x="536.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h) (9 samples, 3.73%)</title><rect x="533" y="388" width="44" height="15" fill="rgb(223,11,32)"/><text x="536.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (9 samples, 3.73%)</title><rect x="533" y="404" width="44" height="15" fill="rgb(244,98,6)"/><text x="536.00" y="414.50">pybi..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (9 samples, 3.73%)</title><rect x="533" y="420" width="44" height="15" fill="rgb(234,119,21)"/><text x="536.00" y="430.50">Runt..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (5 samples, 2.07%)</title><rect x="553" y="436" width="24" height="15" fill="rgb(241,62,51)"/><text x="556.00" y="446.50">p..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (5 samples, 2.07%)</title><rect x="553" y="452" width="24" height="15" fill="rgb(242,145,49)"/><text x="556.00" y="462.50">R..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.41%)</title><rect x="573" y="468" width="4" height="15" fill="rgb(220,179,23)"/><text x="576.00" y="478.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (1 samples, 0.41%)</title><rect x="573" y="484" width="4" height="15" fill="rgb(230,6,29)"/><text x="576.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.41%)</title><rect x="573" y="500" width="4" height="15" fill="rgb(219,211,19)"/><text x="576.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (1 samples, 0.41%)</title><rect x="573" y="516" width="4" height="15" fill="rgb(248,105,5)"/><text x="576.00" y="526.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (10 samples, 4.15%)</title><rect x="533" y="244" width="49" height="15" fill="rgb(211,89,35)"/><text x="536.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (10 samples, 4.15%)</title><rect x="533" y="260" width="49" height="15" fill="rgb(236,227,1)"/><text x="536.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (10 samples, 4.15%)</title><rect x="533" y="276" width="49" height="15" fill="rgb(245,157,1)"/><text x="536.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.41%)</title><rect x="577" y="292" width="5" height="15" fill="rgb(240,138,44)"/><text x="580.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.41%)</title><rect x="577" y="308" width="5" height="15" fill="rgb(222,66,26)"/><text x="580.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.41%)</title><rect x="577" y="324" width="5" height="15" fill="rgb(237,43,26)"/><text x="580.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h) (1 samples, 0.41%)</title><rect x="577" y="340" width="5" height="15" fill="rgb(245,72,31)"/><text x="580.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.41%)</title><rect x="577" y="356" width="5" height="15" fill="rgb(234,3,46)"/><text x="580.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.41%)</title><rect x="577" y="372" width="5" height="15" fill="rgb(250,3,10)"/><text x="580.00" y="382.50"></text></g><g><title>profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (52 samples, 21.58%)</title><rect x="333" y="68" width="254" height="15" fill="rgb(206,34,13)"/><text x="336.00" y="78.50">profile_pyrt (bench_SVC_rbf_b_cl_..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (52 samples, 21.58%)</title><rect x="333" y="84" width="254" height="15" fill="rgb(238,8,38)"/><text x="336.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl..</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (52 samples, 21.58%)</title><rect x="333" y="100" width="254" height="15" fill="rgb(228,227,5)"/><text x="336.00" y="110.50">profile (bench_SVC_rbf_b_cl_proba..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (52 samples, 21.58%)</title><rect x="333" y="116" width="254" height="15" fill="rgb(245,103,1)"/><text x="336.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (52 samples, 21.58%)</title><rect x="333" y="132" width="254" height="15" fill="rgb(221,180,23)"/><text x="336.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (51 samples, 21.16%)</title><rect x="338" y="148" width="249" height="15" fill="rgb(227,174,35)"/><text x="341.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (46 samples, 19.09%)</title><rect x="362" y="164" width="225" height="15" fill="rgb(233,65,29)"/><text x="365.00" y="174.50">_run_sequence_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (38 samples, 15.77%)</title><rect x="401" y="180" width="186" height="15" fill="rgb(238,160,27)"/><text x="404.00" y="190.50">run (mlprodict/onnxrt/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (26 samples, 10.79%)</title><rect x="460" y="196" width="127" height="15" fill="rgb(206,15,12)"/><text x="463.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (18 samples, 7.47%)</title><rect x="499" y="212" width="88" height="15" fill="rgb(243,204,8)"/><text x="502.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (16 samples, 6.64%)</title><rect x="509" y="228" width="78" height="15" fill="rgb(210,22,5)"/><text x="512.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pytypes.h) (1 samples, 0.41%)</title><rect x="582" y="244" width="5" height="15" fill="rgb(253,88,50)"/><text x="585.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::~function_call (cast.h) (1 samples, 0.41%)</title><rect x="582" y="260" width="5" height="15" fill="rgb(209,134,42)"/><text x="585.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="597" y="116" width="5" height="15" fill="rgb(250,164,34)"/><text x="600.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="132" width="5" height="15" fill="rgb(215,223,32)"/><text x="600.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="597" y="148" width="5" height="15" fill="rgb(247,112,25)"/><text x="600.00" y="158.50"></text></g><g><title>0x7f1d76a592ee (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="661" y="180" width="5" height="15" fill="rgb(230,141,40)"/><text x="664.00" y="190.50"></text></g><g><title>0x7f1d76a593df (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="666" y="180" width="4" height="15" fill="rgb(223,100,8)"/><text x="669.00" y="190.50"></text></g><g><title>0x7f1d76a56b9e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="670" y="196" width="5" height="15" fill="rgb(205,155,21)"/><text x="673.00" y="206.50"></text></g><g><title>0x7f1d76a56d0e (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="675" y="196" width="5" height="15" fill="rgb(244,128,0)"/><text x="678.00" y="206.50"></text></g><g><title>0x7f1d76a40e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="675" y="212" width="5" height="15" fill="rgb(230,126,48)"/><text x="678.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="675" y="228" width="5" height="15" fill="rgb(228,43,39)"/><text x="678.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="675" y="244" width="5" height="15" fill="rgb(205,167,8)"/><text x="678.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="675" y="260" width="5" height="15" fill="rgb(221,173,16)"/><text x="678.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="675" y="276" width="5" height="15" fill="rgb(245,84,48)"/><text x="678.00" y="286.50"></text></g><g><title>0x7f1d76a56de1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="680" y="196" width="5" height="15" fill="rgb(207,52,49)"/><text x="683.00" y="206.50"></text></g><g><title>0x7f1d76a405ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="680" y="212" width="5" height="15" fill="rgb(206,9,41)"/><text x="683.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="680" y="228" width="5" height="15" fill="rgb(226,92,48)"/><text x="683.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="680" y="244" width="5" height="15" fill="rgb(206,114,30)"/><text x="683.00" y="254.50"></text></g><g><title>0x7f1d76a56eb8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="685" y="196" width="10" height="15" fill="rgb(250,139,12)"/><text x="688.00" y="206.50"></text></g><g><title>0x7f1d76a40e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="685" y="212" width="10" height="15" fill="rgb(230,140,2)"/><text x="688.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.83%)</title><rect x="685" y="228" width="10" height="15" fill="rgb(207,54,22)"/><text x="688.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.83%)</title><rect x="685" y="244" width="10" height="15" fill="rgb(229,104,19)"/><text x="688.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="690" y="260" width="5" height="15" fill="rgb(246,201,51)"/><text x="693.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.41%)</title><rect x="690" y="276" width="5" height="15" fill="rgb(247,151,49)"/><text x="693.00" y="286.50"></text></g><g><title>0x7f1d76a56f0a (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="695" y="196" width="10" height="15" fill="rgb(213,195,44)"/><text x="698.00" y="206.50"></text></g><g><title>0x7f1d76a40e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="695" y="212" width="10" height="15" fill="rgb(232,169,5)"/><text x="698.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.83%)</title><rect x="695" y="228" width="10" height="15" fill="rgb(210,161,48)"/><text x="698.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.83%)</title><rect x="695" y="244" width="10" height="15" fill="rgb(205,35,34)"/><text x="698.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="700" y="260" width="5" height="15" fill="rgb(214,55,30)"/><text x="703.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="700" y="276" width="5" height="15" fill="rgb(220,224,45)"/><text x="703.00" y="286.50"></text></g><g><title>0x7f1d76a40e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(246,2,32)"/><text x="708.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(225,203,47)"/><text x="708.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(218,124,33)"/><text x="708.00" y="254.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.41%)</title><rect x="705" y="260" width="5" height="15" fill="rgb(252,211,0)"/><text x="708.00" y="270.50"></text></g><g><title>0x7f1d76a56f5c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="705" y="196" width="10" height="15" fill="rgb(236,91,17)"/><text x="708.00" y="206.50"></text></g><g><title>0x7f1d76a40f13 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="710" y="212" width="5" height="15" fill="rgb(232,76,18)"/><text x="713.00" y="222.50"></text></g><g><title>0x7f1d76a4033c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(223,208,31)"/><text x="713.00" y="238.50"></text></g><g><title>0x7f1d76a3fb6f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(219,3,48)"/><text x="713.00" y="254.50"></text></g><g><title>0x7f1d76a56ff0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="715" y="196" width="4" height="15" fill="rgb(221,192,48)"/><text x="718.00" y="206.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.41%)</title><rect x="729" y="228" width="5" height="15" fill="rgb(237,113,26)"/><text x="732.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.41%)</title><rect x="729" y="244" width="5" height="15" fill="rgb(219,47,32)"/><text x="732.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="729" y="260" width="5" height="15" fill="rgb(213,46,8)"/><text x="732.00" y="270.50"></text></g><g><title>0x7f1d76a5712f (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.66%)</title><rect x="719" y="196" width="20" height="15" fill="rgb(224,165,25)"/><text x="722.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c) (4 samples, 1.66%)</title><rect x="719" y="212" width="20" height="15" fill="rgb(207,167,26)"/><text x="722.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.41%)</title><rect x="734" y="228" width="5" height="15" fill="rgb(230,78,22)"/><text x="737.00" y="238.50"></text></g><g><title>0x7f1d76a57237 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="739" y="196" width="5" height="15" fill="rgb(224,31,30)"/><text x="742.00" y="206.50"></text></g><g><title>0x7f1d76a417c1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="739" y="212" width="5" height="15" fill="rgb(248,15,36)"/><text x="742.00" y="222.50"></text></g><g><title>0x7f1d76a572b8 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="744" y="196" width="5" height="15" fill="rgb(248,10,40)"/><text x="747.00" y="206.50"></text></g><g><title>set_model (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="744" y="212" width="5" height="15" fill="rgb(219,108,41)"/><text x="747.00" y="222.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="744" y="228" width="5" height="15" fill="rgb(245,193,7)"/><text x="747.00" y="238.50"></text></g><g><title>0x7f1d76a572c5 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="749" y="196" width="5" height="15" fill="rgb(242,21,19)"/><text x="752.00" y="206.50"></text></g><g><title>get_nr (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="749" y="212" width="5" height="15" fill="rgb(236,134,25)"/><text x="752.00" y="222.50"></text></g><g><title>0x7f1d76a573f0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="754" y="196" width="5" height="15" fill="rgb(219,177,17)"/><text x="757.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.41%)</title><rect x="764" y="228" width="4" height="15" fill="rgb(220,193,48)"/><text x="767.00" y="238.50"></text></g><g><title>0x7f1d9b18b020 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="764" y="244" width="4" height="15" fill="rgb(246,37,47)"/><text x="767.00" y="254.50"></text></g><g><title>0x7f1d76a5746c (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.66%)</title><rect x="759" y="196" width="19" height="15" fill="rgb(208,213,12)"/><text x="762.00" y="206.50"></text></g><g><title>array_empty (multiarraymodule.c) (4 samples, 1.66%)</title><rect x="759" y="212" width="19" height="15" fill="rgb(239,34,24)"/><text x="762.00" y="222.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.83%)</title><rect x="768" y="228" width="10" height="15" fill="rgb(214,49,43)"/><text x="771.00" y="238.50"></text></g><g><title>PyArray_Empty (ctors.c) (2 samples, 0.83%)</title><rect x="768" y="244" width="10" height="15" fill="rgb(222,203,0)"/><text x="771.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.83%)</title><rect x="768" y="260" width="10" height="15" fill="rgb(254,58,12)"/><text x="771.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.41%)</title><rect x="773" y="276" width="5" height="15" fill="rgb(228,61,16)"/><text x="776.00" y="286.50"></text></g><g><title>0x7f1d76a57528 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="778" y="196" width="5" height="15" fill="rgb(221,152,12)"/><text x="781.00" y="206.50"></text></g><g><title>0x7f1d76a40e39 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="778" y="212" width="5" height="15" fill="rgb(235,76,38)"/><text x="781.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="778" y="228" width="5" height="15" fill="rgb(209,206,19)"/><text x="781.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="778" y="244" width="5" height="15" fill="rgb(206,194,46)"/><text x="781.00" y="254.50"></text></g><g><title>0x7f1d76a57553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="783" y="196" width="10" height="15" fill="rgb(228,153,6)"/><text x="786.00" y="206.50"></text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="783" y="212" width="10" height="15" fill="rgb(227,131,27)"/><text x="786.00" y="222.50"></text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="783" y="228" width="10" height="15" fill="rgb(247,106,5)"/><text x="786.00" y="238.50"></text></g><g><title>0x7f1d76a577b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.83%)</title><rect x="793" y="196" width="10" height="15" fill="rgb(218,22,29)"/><text x="796.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.83%)</title><rect x="793" y="212" width="10" height="15" fill="rgb(247,197,1)"/><text x="796.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.41%)</title><rect x="798" y="228" width="5" height="15" fill="rgb(223,145,51)"/><text x="801.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.41%)</title><rect x="798" y="244" width="5" height="15" fill="rgb(223,48,11)"/><text x="801.00" y="254.50"></text></g><g><title>0x7f1d76a58cce (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="803" y="196" width="5" height="15" fill="rgb(212,7,2)"/><text x="806.00" y="206.50"></text></g><g><title>0x7f1d76a593fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (29 samples, 12.03%)</title><rect x="670" y="180" width="142" height="15" fill="rgb(237,90,5)"/><text x="673.00" y="190.50">0x7f1d76a593fd (sk..</text></g><g><title>0x7f1d76a58d06 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="808" y="196" width="4" height="15" fill="rgb(219,78,26)"/><text x="811.00" y="206.50"></text></g><g><title>0x7f1d76a405ae (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="808" y="212" width="4" height="15" fill="rgb(233,23,49)"/><text x="811.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.41%)</title><rect x="808" y="228" width="4" height="15" fill="rgb(208,60,29)"/><text x="811.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.41%)</title><rect x="808" y="244" width="4" height="15" fill="rgb(243,146,21)"/><text x="811.00" y="254.50"></text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (36 samples, 14.94%)</title><rect x="641" y="164" width="176" height="15" fill="rgb(239,96,50)"/><text x="644.00" y="174.50">_dense_predict_proba (..</text></g><g><title>0x7f1d76a59fc2 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="812" y="180" width="5" height="15" fill="rgb(251,79,46)"/><text x="815.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.24%)</title><rect x="896" y="196" width="14" height="15" fill="rgb(253,201,48)"/><text x="899.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (5 samples, 2.07%)</title><rect x="910" y="196" width="25" height="15" fill="rgb(217,189,47)"/><text x="913.00" y="206.50">_..</text></g><g><title>__init__ (warnings.py) (2 samples, 0.83%)</title><rect x="935" y="196" width="10" height="15" fill="rgb(219,48,36)"/><text x="938.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.24%)</title><rect x="974" y="212" width="15" height="15" fill="rgb(235,39,1)"/><text x="977.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.41%)</title><rect x="989" y="212" width="5" height="15" fill="rgb(235,57,16)"/><text x="992.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (11 samples, 4.56%)</title><rect x="945" y="196" width="54" height="15" fill="rgb(230,114,50)"/><text x="948.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.41%)</title><rect x="994" y="212" width="5" height="15" fill="rgb(224,37,50)"/><text x="997.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.41%)</title><rect x="999" y="196" width="4" height="15" fill="rgb(226,63,50)"/><text x="1002.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 2.49%)</title><rect x="1003" y="196" width="30" height="15" fill="rgb(247,78,38)"/><text x="1006.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.83%)</title><rect x="1023" y="212" width="10" height="15" fill="rgb(227,199,41)"/><text x="1026.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.83%)</title><rect x="1023" y="228" width="10" height="15" fill="rgb(248,228,3)"/><text x="1026.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.41%)</title><rect x="1033" y="196" width="5" height="15" fill="rgb(216,210,3)"/><text x="1036.00" y="206.50"></text></g><g><title>0x7f1d9bf7e730 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1033" y="212" width="5" height="15" fill="rgb(230,152,8)"/><text x="1036.00" y="222.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.41%)</title><rect x="1043" y="308" width="5" height="15" fill="rgb(249,81,24)"/><text x="1046.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.41%)</title><rect x="1043" y="324" width="5" height="15" fill="rgb(205,139,5)"/><text x="1046.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.41%)</title><rect x="1043" y="340" width="5" height="15" fill="rgb(205,37,11)"/><text x="1046.00" y="350.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (3 samples, 1.24%)</title><rect x="1038" y="196" width="14" height="15" fill="rgb(221,32,33)"/><text x="1041.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 1.24%)</title><rect x="1038" y="212" width="14" height="15" fill="rgb(238,156,30)"/><text x="1041.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.83%)</title><rect x="1043" y="228" width="9" height="15" fill="rgb(247,208,30)"/><text x="1046.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.83%)</title><rect x="1043" y="244" width="9" height="15" fill="rgb(227,124,43)"/><text x="1046.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.83%)</title><rect x="1043" y="260" width="9" height="15" fill="rgb(216,165,31)"/><text x="1046.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.83%)</title><rect x="1043" y="276" width="9" height="15" fill="rgb(228,35,25)"/><text x="1046.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.83%)</title><rect x="1043" y="292" width="9" height="15" fill="rgb(209,73,25)"/><text x="1046.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="1048" y="308" width="4" height="15" fill="rgb(224,192,18)"/><text x="1051.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (47 samples, 19.50%)</title><rect x="832" y="180" width="230" height="15" fill="rgb(234,86,38)"/><text x="835.00" y="190.50">check_array (sklearn/utils/val..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.83%)</title><rect x="1052" y="196" width="10" height="15" fill="rgb(243,116,23)"/><text x="1055.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.41%)</title><rect x="1057" y="212" width="5" height="15" fill="rgb(254,117,51)"/><text x="1060.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 2.07%)</title><rect x="1131" y="212" width="24" height="15" fill="rgb(223,78,34)"/><text x="1134.00" y="222.50">u..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 8.71%)</title><rect x="1062" y="180" width="103" height="15" fill="rgb(251,4,51)"/><text x="1065.00" y="190.50">check_is_fit..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (17 samples, 7.05%)</title><rect x="1082" y="196" width="83" height="15" fill="rgb(233,67,37)"/><text x="1085.00" y="206.50">&lt;listcomp..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.83%)</title><rect x="1155" y="212" width="10" height="15" fill="rgb(250,172,51)"/><text x="1158.00" y="222.50"></text></g><g><title>_predict_proba (sklearn/svm/_base.py) (111 samples, 46.06%)</title><rect x="626" y="148" width="544" height="15" fill="rgb(213,141,46)"/><text x="629.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (72 samples, 29.88%)</title><rect x="817" y="164" width="353" height="15" fill="rgb(237,61,9)"/><text x="820.00" y="174.50">_validate_for_predict (sklearn/svm/_base.py)</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.41%)</title><rect x="1165" y="180" width="5" height="15" fill="rgb(223,3,45)"/><text x="1168.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (114 samples, 47.30%)</title><rect x="622" y="132" width="558" height="15" fill="rgb(228,147,2)"/><text x="625.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/svm/_base.py) (2 samples, 0.83%)</title><rect x="1170" y="148" width="10" height="15" fill="rgb(248,81,20)"/><text x="1173.00" y="158.50"></text></g><g><title>_check_proba (sklearn/svm/_base.py) (2 samples, 0.83%)</title><rect x="1170" y="164" width="10" height="15" fill="rgb(210,17,12)"/><text x="1173.00" y="174.50"></text></g><g><title>all (241 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(231,12,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (241 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,101,14)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (123 samples, 51.04%)</title><rect x="587" y="68" width="603" height="15" fill="rgb(250,74,41)"/><text x="590.00" y="78.50">profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (123 samples, 51.04%)</title><rect x="587" y="84" width="603" height="15" fill="rgb(240,206,20)"/><text x="590.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py)</text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py) (123 samples, 51.04%)</title><rect x="587" y="100" width="603" height="15" fill="rgb(224,118,34)"/><text x="590.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 49.79%)</title><rect x="602" y="116" width="588" height="15" fill="rgb(224,52,19)"/><text x="605.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.83%)</title><rect x="1180" y="132" width="10" height="15" fill="rgb(249,90,7)"/><text x="1183.00" y="142.50"></text></g></g></svg>