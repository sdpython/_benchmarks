<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(245,139,4)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(236,194,53)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(232,131,43)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(218,152,34)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(252,73,18)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(253,124,8)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(218,75,50)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(211,132,29)"/><text x="13.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(218,190,39)"/><text x="13.00" y="1006.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(218,98,43)"/><text x="15.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(235,22,33)"/><text x="15.00" y="942.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="12" y="868" width="6" height="15" fill="rgb(224,224,5)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="12" y="884" width="6" height="15" fill="rgb(252,37,49)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="12" y="900" width="6" height="15" fill="rgb(236,70,33)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(238,149,14)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(235,34,23)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(246,190,36)"/><text x="18.00" y="958.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(216,125,44)"/><text x="18.00" y="974.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(229,112,47)"/><text x="21.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(214,9,14)"/><text x="21.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(235,126,42)"/><text x="21.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="18" y="900" width="6" height="15" fill="rgb(252,220,21)"/><text x="21.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="18" y="916" width="6" height="15" fill="rgb(242,175,5)"/><text x="21.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.25%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(207,48,51)"/><text x="24.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.25%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(234,76,37)"/><text x="24.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 1.50%)</title><rect x="10" y="836" width="17" height="15" fill="rgb(221,229,24)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 1.50%)</title><rect x="10" y="852" width="17" height="15" fill="rgb(235,118,44)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.75%)</title><rect x="18" y="868" width="9" height="15" fill="rgb(237,160,47)"/><text x="21.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.75%)</title><rect x="18" y="884" width="9" height="15" fill="rgb(251,139,14)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(222,25,48)"/><text x="27.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(231,164,34)"/><text x="27.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(245,164,32)"/><text x="27.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(245,33,44)"/><text x="27.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(254,117,40)"/><text x="27.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(249,76,38)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 1.75%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(222,98,32)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(244,226,50)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(249,102,21)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(241,161,37)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.75%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(251,116,42)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(227,130,7)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 1.75%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(212,73,29)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(212,226,51)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(246,136,22)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(227,120,41)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.75%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(228,97,9)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(243,132,31)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 1.75%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(205,123,38)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(251,131,5)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(229,184,26)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(219,151,30)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.75%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(252,88,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(220,205,23)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 1.75%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(215,156,30)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(234,129,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(211,51,14)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(214,22,27)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(223,206,0)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(248,122,41)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(234,124,5)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.75%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(233,185,33)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(219,228,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 1.75%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(232,191,13)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(247,17,39)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(215,48,8)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(227,125,15)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.75%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(254,69,48)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.75%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(237,101,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 1.75%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(254,211,7)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(246,111,50)"/><text x="30.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(209,51,7)"/><text x="30.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(225,4,34)"/><text x="30.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(213,120,22)"/><text x="30.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(233,137,12)"/><text x="30.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.25%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(239,105,26)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(219,31,27)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(216,181,6)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(246,106,39)"/><text x="30.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(224,153,23)"/><text x="30.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.25%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(213,91,38)"/><text x="30.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(205,183,43)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(233,92,29)"/><text x="30.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(254,44,28)"/><text x="30.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(231,67,13)"/><text x="30.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(250,128,22)"/><text x="30.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(253,193,37)"/><text x="30.00" y="1102.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.25%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(226,43,2)"/><text x="30.00" y="1118.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(251,19,19)"/><text x="30.00" y="1134.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(205,204,38)"/><text x="30.00" y="1150.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(215,150,2)"/><text x="30.00" y="1166.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.25%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(214,229,21)"/><text x="30.00" y="1182.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(210,104,50)"/><text x="30.00" y="1198.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(238,106,17)"/><text x="30.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/equality_constrained_sqp.py) (1 samples, 0.25%)</title><rect x="30" y="1508" width="3" height="15" fill="rgb(219,44,51)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1524" width="3" height="15" fill="rgb(232,1,25)"/><text x="33.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1540" width="3" height="15" fill="rgb(205,81,52)"/><text x="33.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="1556" width="3" height="15" fill="rgb(214,117,26)"/><text x="33.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1572" width="3" height="15" fill="rgb(228,4,24)"/><text x="33.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1588" width="3" height="15" fill="rgb(226,29,8)"/><text x="33.00" y="1598.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="1604" width="3" height="15" fill="rgb(233,130,44)"/><text x="33.00" y="1614.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (2 samples, 0.50%)</title><rect x="30" y="1220" width="6" height="15" fill="rgb(253,10,18)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1236" width="6" height="15" fill="rgb(218,226,22)"/><text x="33.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1252" width="6" height="15" fill="rgb(225,177,2)"/><text x="33.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1268" width="6" height="15" fill="rgb(217,67,53)"/><text x="33.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1284" width="6" height="15" fill="rgb(253,70,22)"/><text x="33.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1300" width="6" height="15" fill="rgb(247,23,50)"/><text x="33.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (2 samples, 0.50%)</title><rect x="30" y="1316" width="6" height="15" fill="rgb(210,222,28)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1332" width="6" height="15" fill="rgb(244,224,25)"/><text x="33.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1348" width="6" height="15" fill="rgb(221,66,17)"/><text x="33.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1364" width="6" height="15" fill="rgb(211,17,46)"/><text x="33.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1380" width="6" height="15" fill="rgb(216,135,43)"/><text x="33.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1396" width="6" height="15" fill="rgb(218,25,9)"/><text x="33.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (2 samples, 0.50%)</title><rect x="30" y="1412" width="6" height="15" fill="rgb(216,210,36)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1428" width="6" height="15" fill="rgb(248,77,1)"/><text x="33.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1444" width="6" height="15" fill="rgb(249,96,41)"/><text x="33.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1460" width="6" height="15" fill="rgb(253,227,36)"/><text x="33.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="30" y="1476" width="6" height="15" fill="rgb(215,9,30)"/><text x="33.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="30" y="1492" width="6" height="15" fill="rgb(238,182,14)"/><text x="33.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.25%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(210,210,52)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1524" width="3" height="15" fill="rgb(245,208,40)"/><text x="36.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(216,229,27)"/><text x="36.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(210,122,50)"/><text x="36.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(225,72,51)"/><text x="36.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(252,162,10)"/><text x="36.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.25%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(235,17,17)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(232,215,32)"/><text x="36.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1636" width="3" height="15" fill="rgb(248,203,30)"/><text x="36.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="1652" width="3" height="15" fill="rgb(221,196,35)"/><text x="36.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="33" y="1668" width="3" height="15" fill="rgb(239,24,22)"/><text x="36.00" y="1678.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="33" y="1684" width="3" height="15" fill="rgb(209,107,23)"/><text x="36.00" y="1694.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="33" y="1700" width="3" height="15" fill="rgb(243,192,48)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="500" width="12" height="15" fill="rgb(252,191,14)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="516" width="12" height="15" fill="rgb(240,63,15)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="532" width="12" height="15" fill="rgb(225,78,44)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="548" width="12" height="15" fill="rgb(235,124,29)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="564" width="12" height="15" fill="rgb(235,179,28)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.00%)</title><rect x="30" y="580" width="12" height="15" fill="rgb(241,213,5)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="596" width="12" height="15" fill="rgb(235,184,16)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="612" width="12" height="15" fill="rgb(225,175,49)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="628" width="12" height="15" fill="rgb(248,92,41)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="644" width="12" height="15" fill="rgb(206,24,10)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="660" width="12" height="15" fill="rgb(220,197,37)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 1.00%)</title><rect x="30" y="676" width="12" height="15" fill="rgb(208,202,54)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="692" width="12" height="15" fill="rgb(215,130,51)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="708" width="12" height="15" fill="rgb(240,170,28)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="724" width="12" height="15" fill="rgb(247,40,2)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="740" width="12" height="15" fill="rgb(225,67,12)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="756" width="12" height="15" fill="rgb(248,53,49)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 1.00%)</title><rect x="30" y="772" width="12" height="15" fill="rgb(207,197,29)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="788" width="12" height="15" fill="rgb(245,191,47)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="804" width="12" height="15" fill="rgb(218,116,40)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="820" width="12" height="15" fill="rgb(251,110,51)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="836" width="12" height="15" fill="rgb(250,128,35)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="852" width="12" height="15" fill="rgb(238,129,6)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="868" width="12" height="15" fill="rgb(224,86,7)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="884" width="12" height="15" fill="rgb(222,8,21)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (4 samples, 1.00%)</title><rect x="30" y="900" width="12" height="15" fill="rgb(250,17,10)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="916" width="12" height="15" fill="rgb(237,106,40)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="932" width="12" height="15" fill="rgb(218,20,45)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="948" width="12" height="15" fill="rgb(247,139,15)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="964" width="12" height="15" fill="rgb(245,189,34)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="980" width="12" height="15" fill="rgb(251,24,14)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (4 samples, 1.00%)</title><rect x="30" y="996" width="12" height="15" fill="rgb(227,180,26)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1012" width="12" height="15" fill="rgb(232,94,37)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1028" width="12" height="15" fill="rgb(229,31,25)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1044" width="12" height="15" fill="rgb(248,27,28)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1060" width="12" height="15" fill="rgb(220,2,18)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1076" width="12" height="15" fill="rgb(251,197,48)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="1092" width="12" height="15" fill="rgb(218,229,25)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1108" width="12" height="15" fill="rgb(206,170,52)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (4 samples, 1.00%)</title><rect x="30" y="1124" width="12" height="15" fill="rgb(234,205,13)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1140" width="12" height="15" fill="rgb(254,57,36)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1156" width="12" height="15" fill="rgb(231,18,21)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1172" width="12" height="15" fill="rgb(213,68,41)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.00%)</title><rect x="30" y="1188" width="12" height="15" fill="rgb(218,33,26)"/><text x="33.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.00%)</title><rect x="30" y="1204" width="12" height="15" fill="rgb(245,87,34)"/><text x="33.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/optimize.py) (2 samples, 0.50%)</title><rect x="36" y="1220" width="6" height="15" fill="rgb(241,46,34)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1236" width="6" height="15" fill="rgb(224,70,19)"/><text x="39.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1252" width="6" height="15" fill="rgb(210,46,15)"/><text x="39.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1268" width="6" height="15" fill="rgb(248,185,2)"/><text x="39.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1284" width="6" height="15" fill="rgb(253,222,27)"/><text x="39.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1300" width="6" height="15" fill="rgb(209,91,2)"/><text x="39.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/linesearch.py) (2 samples, 0.50%)</title><rect x="36" y="1316" width="6" height="15" fill="rgb(231,108,49)"/><text x="39.00" y="1326.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1332" width="6" height="15" fill="rgb(227,218,26)"/><text x="39.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1348" width="6" height="15" fill="rgb(228,195,26)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1364" width="6" height="15" fill="rgb(224,178,53)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1380" width="6" height="15" fill="rgb(221,152,49)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="36" y="1396" width="6" height="15" fill="rgb(251,38,32)"/><text x="39.00" y="1406.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1412" width="6" height="15" fill="rgb(205,187,2)"/><text x="39.00" y="1422.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1428" width="6" height="15" fill="rgb(205,128,25)"/><text x="39.00" y="1438.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1444" width="6" height="15" fill="rgb(216,29,31)"/><text x="39.00" y="1454.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1460" width="6" height="15" fill="rgb(223,117,33)"/><text x="39.00" y="1470.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1476" width="6" height="15" fill="rgb(243,73,5)"/><text x="39.00" y="1486.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="36" y="1492" width="6" height="15" fill="rgb(233,164,15)"/><text x="39.00" y="1502.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.50%)</title><rect x="36" y="1508" width="6" height="15" fill="rgb(217,82,1)"/><text x="39.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.01%)</title><rect x="10" y="196" width="35" height="15" fill="rgb(221,189,12)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.01%)</title><rect x="10" y="212" width="35" height="15" fill="rgb(238,72,2)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.01%)</title><rect x="10" y="228" width="35" height="15" fill="rgb(207,121,44)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.01%)</title><rect x="10" y="244" width="35" height="15" fill="rgb(232,98,44)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.01%)</title><rect x="10" y="260" width="35" height="15" fill="rgb(206,77,34)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.01%)</title><rect x="10" y="276" width="35" height="15" fill="rgb(254,212,27)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (5 samples, 1.25%)</title><rect x="30" y="292" width="15" height="15" fill="rgb(224,131,5)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="308" width="15" height="15" fill="rgb(208,218,43)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="324" width="15" height="15" fill="rgb(220,121,20)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="340" width="15" height="15" fill="rgb(236,65,41)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="30" y="356" width="15" height="15" fill="rgb(235,120,2)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="372" width="15" height="15" fill="rgb(243,229,1)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (5 samples, 1.25%)</title><rect x="30" y="388" width="15" height="15" fill="rgb(222,84,50)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="404" width="15" height="15" fill="rgb(250,2,54)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="420" width="15" height="15" fill="rgb(213,60,25)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="436" width="15" height="15" fill="rgb(235,115,43)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="30" y="452" width="15" height="15" fill="rgb(228,146,17)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="30" y="468" width="15" height="15" fill="rgb(230,182,7)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (5 samples, 1.25%)</title><rect x="30" y="484" width="15" height="15" fill="rgb(216,78,48)"/><text x="33.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="500" width="3" height="15" fill="rgb(223,193,50)"/><text x="45.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="516" width="3" height="15" fill="rgb(244,146,17)"/><text x="45.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="532" width="3" height="15" fill="rgb(243,121,46)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="548" width="3" height="15" fill="rgb(227,57,22)"/><text x="45.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="564" width="3" height="15" fill="rgb(245,132,35)"/><text x="45.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(230,165,27)"/><text x="45.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(206,40,33)"/><text x="45.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.25%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(222,15,41)"/><text x="45.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(206,125,7)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(240,21,11)"/><text x="45.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(239,102,7)"/><text x="45.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(246,9,26)"/><text x="45.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(244,10,15)"/><text x="45.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.25%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(232,229,13)"/><text x="45.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(222,213,2)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(214,103,15)"/><text x="45.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(226,34,0)"/><text x="45.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(229,179,27)"/><text x="45.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(236,115,0)"/><text x="45.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.25%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(212,19,35)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(212,118,18)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(220,78,25)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(242,149,51)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(223,38,40)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(210,90,8)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.25%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(208,24,43)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="916" width="3" height="15" fill="rgb(206,173,33)"/><text x="45.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="932" width="3" height="15" fill="rgb(238,106,53)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="948" width="3" height="15" fill="rgb(235,40,50)"/><text x="45.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="964" width="3" height="15" fill="rgb(249,129,21)"/><text x="45.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="980" width="3" height="15" fill="rgb(223,159,41)"/><text x="45.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="996" width="3" height="15" fill="rgb(243,223,33)"/><text x="45.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1012" width="3" height="15" fill="rgb(226,54,30)"/><text x="45.00" y="1022.50"></text></g><g><title>&lt;module&gt; (joblib/numpy_pickle.py) (1 samples, 0.25%)</title><rect x="42" y="1028" width="3" height="15" fill="rgb(227,23,20)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1044" width="3" height="15" fill="rgb(212,45,20)"/><text x="45.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1060" width="3" height="15" fill="rgb(244,54,39)"/><text x="45.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1076" width="3" height="15" fill="rgb(208,214,1)"/><text x="45.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="1092" width="3" height="15" fill="rgb(235,36,39)"/><text x="45.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1108" width="3" height="15" fill="rgb(219,4,53)"/><text x="45.00" y="1118.50"></text></g><g><title>&lt;module&gt; (joblib/compressor.py) (1 samples, 0.25%)</title><rect x="42" y="1124" width="3" height="15" fill="rgb(233,56,15)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="484" width="3" height="15" fill="rgb(206,139,49)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="500" width="3" height="15" fill="rgb(252,92,48)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="516" width="3" height="15" fill="rgb(241,53,19)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="532" width="3" height="15" fill="rgb(252,202,14)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="548" width="3" height="15" fill="rgb(222,57,34)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="564" width="3" height="15" fill="rgb(233,103,50)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="580" width="3" height="15" fill="rgb(249,195,2)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="596" width="3" height="15" fill="rgb(248,124,34)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="612" width="3" height="15" fill="rgb(212,153,13)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="628" width="3" height="15" fill="rgb(236,37,9)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="644" width="3" height="15" fill="rgb(253,201,50)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(242,57,20)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.25%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(209,52,51)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(222,204,19)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(248,31,31)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(210,97,20)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(243,160,27)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(232,217,18)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(221,188,20)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(248,72,8)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(216,199,32)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(208,229,23)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(239,84,29)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(232,189,38)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.25%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(233,44,34)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(247,28,53)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(209,79,53)"/><text x="48.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="916" width="3" height="15" fill="rgb(234,46,45)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="932" width="3" height="15" fill="rgb(206,54,34)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="948" width="3" height="15" fill="rgb(231,170,43)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(253,97,5)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(230,5,35)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(212,96,8)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(228,111,36)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(220,111,40)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1044" width="3" height="15" fill="rgb(220,88,6)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1060" width="3" height="15" fill="rgb(219,28,1)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1076" width="3" height="15" fill="rgb(216,83,54)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1092" width="3" height="15" fill="rgb(218,89,13)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(248,127,32)"/><text x="48.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(248,40,15)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(211,29,27)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(254,24,10)"/><text x="48.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1172" width="3" height="15" fill="rgb(229,210,47)"/><text x="48.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1188" width="3" height="15" fill="rgb(238,228,15)"/><text x="48.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1204" width="3" height="15" fill="rgb(233,208,2)"/><text x="48.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1220" width="3" height="15" fill="rgb(206,171,39)"/><text x="48.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="1236" width="3" height="15" fill="rgb(209,206,28)"/><text x="48.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1252" width="3" height="15" fill="rgb(227,7,50)"/><text x="48.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1268" width="3" height="15" fill="rgb(245,152,3)"/><text x="48.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1284" width="3" height="15" fill="rgb(242,218,6)"/><text x="48.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1300" width="3" height="15" fill="rgb(232,77,34)"/><text x="48.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1316" width="3" height="15" fill="rgb(249,47,8)"/><text x="48.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1332" width="3" height="15" fill="rgb(239,223,38)"/><text x="48.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1348" width="3" height="15" fill="rgb(247,76,9)"/><text x="48.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.25%)</title><rect x="45" y="1364" width="3" height="15" fill="rgb(248,108,36)"/><text x="48.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1380" width="3" height="15" fill="rgb(219,126,10)"/><text x="48.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1396" width="3" height="15" fill="rgb(214,207,33)"/><text x="48.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1412" width="3" height="15" fill="rgb(210,75,40)"/><text x="48.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1428" width="3" height="15" fill="rgb(207,32,7)"/><text x="48.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1444" width="3" height="15" fill="rgb(231,27,14)"/><text x="48.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.25%)</title><rect x="45" y="1460" width="3" height="15" fill="rgb(214,208,34)"/><text x="48.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.25%)</title><rect x="45" y="1476" width="3" height="15" fill="rgb(224,42,15)"/><text x="48.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.25%)</title><rect x="45" y="1492" width="3" height="15" fill="rgb(253,119,36)"/><text x="48.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="45" y="1508" width="3" height="15" fill="rgb(229,137,44)"/><text x="48.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.25%)</title><rect x="45" y="1524" width="3" height="15" fill="rgb(225,46,26)"/><text x="48.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="45" y="1540" width="3" height="15" fill="rgb(234,103,53)"/><text x="48.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="45" y="1556" width="3" height="15" fill="rgb(237,184,31)"/><text x="48.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.25%)</title><rect x="45" y="1572" width="3" height="15" fill="rgb(226,33,54)"/><text x="48.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.25%)</title><rect x="45" y="1588" width="3" height="15" fill="rgb(225,183,18)"/><text x="48.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="45" y="1604" width="3" height="15" fill="rgb(244,192,2)"/><text x="48.00" y="1614.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.25%)</title><rect x="45" y="1620" width="3" height="15" fill="rgb(223,89,8)"/><text x="48.00" y="1630.50"></text></g><g><title>unicode_resize (python3.7) (1 samples, 0.25%)</title><rect x="45" y="1636" width="3" height="15" fill="rgb(249,25,2)"/><text x="48.00" y="1646.50"></text></g><g><title>BoxPlot (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.25%)</title><rect x="48" y="1508" width="3" height="15" fill="rgb(216,48,45)"/><text x="51.00" y="1518.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.25%)</title><rect x="48" y="1524" width="3" height="15" fill="rgb(251,218,39)"/><text x="51.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.75%)</title><rect x="45" y="340" width="9" height="15" fill="rgb(252,204,7)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="356" width="9" height="15" fill="rgb(218,114,2)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="372" width="9" height="15" fill="rgb(217,78,43)"/><text x="48.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="388" width="9" height="15" fill="rgb(235,215,3)"/><text x="48.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.75%)</title><rect x="45" y="404" width="9" height="15" fill="rgb(229,59,5)"/><text x="48.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="420" width="9" height="15" fill="rgb(215,46,10)"/><text x="48.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.75%)</title><rect x="45" y="436" width="9" height="15" fill="rgb(213,79,5)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="452" width="9" height="15" fill="rgb(231,90,14)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.75%)</title><rect x="45" y="468" width="9" height="15" fill="rgb(252,33,51)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="484" width="6" height="15" fill="rgb(207,58,21)"/><text x="51.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="500" width="6" height="15" fill="rgb(215,156,44)"/><text x="51.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="516" width="6" height="15" fill="rgb(213,28,37)"/><text x="51.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.50%)</title><rect x="48" y="532" width="6" height="15" fill="rgb(211,40,11)"/><text x="51.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="548" width="6" height="15" fill="rgb(234,118,33)"/><text x="51.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="564" width="6" height="15" fill="rgb(240,213,14)"/><text x="51.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="580" width="6" height="15" fill="rgb(252,18,10)"/><text x="51.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="596" width="6" height="15" fill="rgb(208,150,1)"/><text x="51.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="612" width="6" height="15" fill="rgb(216,20,40)"/><text x="51.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.50%)</title><rect x="48" y="628" width="6" height="15" fill="rgb(252,167,32)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="644" width="6" height="15" fill="rgb(243,60,42)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="660" width="6" height="15" fill="rgb(220,193,29)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="676" width="6" height="15" fill="rgb(221,35,47)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="692" width="6" height="15" fill="rgb(223,106,5)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="708" width="6" height="15" fill="rgb(225,45,26)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.50%)</title><rect x="48" y="724" width="6" height="15" fill="rgb(222,123,17)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="740" width="6" height="15" fill="rgb(238,43,15)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="756" width="6" height="15" fill="rgb(251,86,41)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="772" width="6" height="15" fill="rgb(245,199,27)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="788" width="6" height="15" fill="rgb(237,28,11)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="804" width="6" height="15" fill="rgb(250,104,50)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.50%)</title><rect x="48" y="820" width="6" height="15" fill="rgb(244,77,9)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="836" width="6" height="15" fill="rgb(241,225,18)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="852" width="6" height="15" fill="rgb(242,83,4)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="868" width="6" height="15" fill="rgb(233,66,28)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="884" width="6" height="15" fill="rgb(212,60,9)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="900" width="6" height="15" fill="rgb(207,20,11)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.50%)</title><rect x="48" y="916" width="6" height="15" fill="rgb(250,72,23)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="932" width="6" height="15" fill="rgb(245,71,39)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="948" width="6" height="15" fill="rgb(229,179,18)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="964" width="6" height="15" fill="rgb(223,71,43)"/><text x="51.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="980" width="6" height="15" fill="rgb(240,176,44)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="996" width="6" height="15" fill="rgb(241,205,25)"/><text x="51.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.50%)</title><rect x="48" y="1012" width="6" height="15" fill="rgb(210,190,11)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1028" width="6" height="15" fill="rgb(232,157,54)"/><text x="51.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1044" width="6" height="15" fill="rgb(245,57,20)"/><text x="51.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1060" width="6" height="15" fill="rgb(246,24,53)"/><text x="51.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="1076" width="6" height="15" fill="rgb(252,215,31)"/><text x="51.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1092" width="6" height="15" fill="rgb(250,62,8)"/><text x="51.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.50%)</title><rect x="48" y="1108" width="6" height="15" fill="rgb(220,142,40)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1124" width="6" height="15" fill="rgb(224,198,10)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1140" width="6" height="15" fill="rgb(206,91,29)"/><text x="51.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1156" width="6" height="15" fill="rgb(246,203,43)"/><text x="51.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="1172" width="6" height="15" fill="rgb(217,43,33)"/><text x="51.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1188" width="6" height="15" fill="rgb(242,40,26)"/><text x="51.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.50%)</title><rect x="48" y="1204" width="6" height="15" fill="rgb(205,29,39)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1220" width="6" height="15" fill="rgb(249,105,29)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1236" width="6" height="15" fill="rgb(254,69,18)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1252" width="6" height="15" fill="rgb(220,203,51)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="1268" width="6" height="15" fill="rgb(237,3,26)"/><text x="51.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1284" width="6" height="15" fill="rgb(220,52,28)"/><text x="51.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.50%)</title><rect x="48" y="1300" width="6" height="15" fill="rgb(228,28,38)"/><text x="51.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1316" width="6" height="15" fill="rgb(251,22,34)"/><text x="51.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1332" width="6" height="15" fill="rgb(220,68,16)"/><text x="51.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1348" width="6" height="15" fill="rgb(217,49,27)"/><text x="51.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="1364" width="6" height="15" fill="rgb(205,162,29)"/><text x="51.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1380" width="6" height="15" fill="rgb(206,155,12)"/><text x="51.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.50%)</title><rect x="48" y="1396" width="6" height="15" fill="rgb(241,216,1)"/><text x="51.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1412" width="6" height="15" fill="rgb(246,143,12)"/><text x="51.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1428" width="6" height="15" fill="rgb(232,24,48)"/><text x="51.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1444" width="6" height="15" fill="rgb(221,170,40)"/><text x="51.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="48" y="1460" width="6" height="15" fill="rgb(211,6,36)"/><text x="51.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="48" y="1476" width="6" height="15" fill="rgb(233,61,9)"/><text x="51.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.50%)</title><rect x="48" y="1492" width="6" height="15" fill="rgb(246,167,28)"/><text x="51.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1508" width="3" height="15" fill="rgb(250,95,53)"/><text x="54.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1524" width="3" height="15" fill="rgb(234,8,50)"/><text x="54.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1540" width="3" height="15" fill="rgb(228,51,10)"/><text x="54.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="1556" width="3" height="15" fill="rgb(243,203,38)"/><text x="54.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1572" width="3" height="15" fill="rgb(208,20,50)"/><text x="54.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.25%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(212,229,9)"/><text x="54.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(251,45,36)"/><text x="54.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(238,39,39)"/><text x="54.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(253,67,41)"/><text x="54.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(223,93,24)"/><text x="54.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1668" width="3" height="15" fill="rgb(208,127,7)"/><text x="54.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.25%)</title><rect x="51" y="1684" width="3" height="15" fill="rgb(237,187,45)"/><text x="54.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1700" width="3" height="15" fill="rgb(244,151,22)"/><text x="54.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1716" width="3" height="15" fill="rgb(239,73,14)"/><text x="54.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1732" width="3" height="15" fill="rgb(216,195,35)"/><text x="54.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="1748" width="3" height="15" fill="rgb(233,3,45)"/><text x="54.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1764" width="3" height="15" fill="rgb(241,6,51)"/><text x="54.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.25%)</title><rect x="51" y="1780" width="3" height="15" fill="rgb(210,139,28)"/><text x="54.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1796" width="3" height="15" fill="rgb(253,29,4)"/><text x="54.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1812" width="3" height="15" fill="rgb(206,76,26)"/><text x="54.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1828" width="3" height="15" fill="rgb(210,77,46)"/><text x="54.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="1844" width="3" height="15" fill="rgb(230,92,13)"/><text x="54.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="1860" width="3" height="15" fill="rgb(216,138,8)"/><text x="54.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.25%)</title><rect x="51" y="1876" width="3" height="15" fill="rgb(209,42,32)"/><text x="54.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.25%)</title><rect x="51" y="1892" width="3" height="15" fill="rgb(223,31,23)"/><text x="54.00" y="1902.50"></text></g><g><title>__init__ (matplotlib/artist.py) (1 samples, 0.25%)</title><rect x="51" y="1908" width="3" height="15" fill="rgb(215,186,46)"/><text x="54.00" y="1918.50"></text></g><g><title>get_aliases (matplotlib/artist.py) (1 samples, 0.25%)</title><rect x="51" y="1924" width="3" height="15" fill="rgb(213,202,46)"/><text x="54.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.25%)</title><rect x="51" y="1940" width="3" height="15" fill="rgb(209,132,2)"/><text x="54.00" y="1950.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="51" y="1956" width="3" height="15" fill="rgb(234,91,35)"/><text x="54.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1140" width="3" height="15" fill="rgb(252,121,40)"/><text x="57.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.25%)</title><rect x="54" y="1156" width="3" height="15" fill="rgb(225,20,45)"/><text x="57.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1172" width="3" height="15" fill="rgb(234,30,19)"/><text x="57.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1188" width="3" height="15" fill="rgb(207,1,37)"/><text x="57.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1204" width="3" height="15" fill="rgb(212,14,43)"/><text x="57.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="54" y="1220" width="3" height="15" fill="rgb(250,15,42)"/><text x="57.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="54" y="1236" width="3" height="15" fill="rgb(222,71,4)"/><text x="57.00" y="1246.50"></text></g><g><title>&lt;module&gt; (xmlrpc/client.py) (1 samples, 0.25%)</title><rect x="54" y="1252" width="3" height="15" fill="rgb(214,129,15)"/><text x="57.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 1.25%)</title><rect x="45" y="244" width="15" height="15" fill="rgb(240,61,19)"/><text x="48.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="260" width="15" height="15" fill="rgb(226,38,35)"/><text x="48.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="276" width="15" height="15" fill="rgb(243,134,27)"/><text x="48.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="292" width="15" height="15" fill="rgb(211,161,10)"/><text x="48.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.25%)</title><rect x="45" y="308" width="15" height="15" fill="rgb(225,222,12)"/><text x="48.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.25%)</title><rect x="45" y="324" width="15" height="15" fill="rgb(228,105,37)"/><text x="48.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.50%)</title><rect x="54" y="340" width="6" height="15" fill="rgb(233,215,44)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="356" width="6" height="15" fill="rgb(213,24,38)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="372" width="6" height="15" fill="rgb(220,210,4)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="388" width="6" height="15" fill="rgb(214,47,27)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="404" width="6" height="15" fill="rgb(218,197,17)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="420" width="6" height="15" fill="rgb(243,135,17)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="436" width="6" height="15" fill="rgb(252,3,26)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="452" width="6" height="15" fill="rgb(252,132,20)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="468" width="6" height="15" fill="rgb(243,156,36)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.50%)</title><rect x="54" y="484" width="6" height="15" fill="rgb(245,113,16)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="500" width="6" height="15" fill="rgb(244,122,33)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="516" width="6" height="15" fill="rgb(216,202,29)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="532" width="6" height="15" fill="rgb(208,198,28)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="548" width="6" height="15" fill="rgb(250,194,24)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="564" width="6" height="15" fill="rgb(218,178,40)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.50%)</title><rect x="54" y="580" width="6" height="15" fill="rgb(239,43,26)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="596" width="6" height="15" fill="rgb(232,91,38)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="612" width="6" height="15" fill="rgb(211,177,27)"/><text x="57.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="628" width="6" height="15" fill="rgb(217,97,48)"/><text x="57.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="644" width="6" height="15" fill="rgb(216,40,11)"/><text x="57.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="660" width="6" height="15" fill="rgb(231,2,54)"/><text x="57.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="676" width="6" height="15" fill="rgb(254,98,9)"/><text x="57.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="692" width="6" height="15" fill="rgb(225,143,34)"/><text x="57.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="708" width="6" height="15" fill="rgb(212,25,51)"/><text x="57.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 0.50%)</title><rect x="54" y="724" width="6" height="15" fill="rgb(215,223,17)"/><text x="57.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="740" width="6" height="15" fill="rgb(226,112,22)"/><text x="57.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="756" width="6" height="15" fill="rgb(218,182,38)"/><text x="57.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="772" width="6" height="15" fill="rgb(231,62,33)"/><text x="57.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="788" width="6" height="15" fill="rgb(243,1,31)"/><text x="57.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="804" width="6" height="15" fill="rgb(250,10,16)"/><text x="57.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 0.50%)</title><rect x="54" y="820" width="6" height="15" fill="rgb(228,227,24)"/><text x="57.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="836" width="6" height="15" fill="rgb(230,71,44)"/><text x="57.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="852" width="6" height="15" fill="rgb(250,185,8)"/><text x="57.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="868" width="6" height="15" fill="rgb(232,166,6)"/><text x="57.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="884" width="6" height="15" fill="rgb(240,76,26)"/><text x="57.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="900" width="6" height="15" fill="rgb(244,205,43)"/><text x="57.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 0.50%)</title><rect x="54" y="916" width="6" height="15" fill="rgb(235,170,28)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="932" width="6" height="15" fill="rgb(228,106,33)"/><text x="57.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="948" width="6" height="15" fill="rgb(218,219,4)"/><text x="57.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="964" width="6" height="15" fill="rgb(243,196,40)"/><text x="57.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="980" width="6" height="15" fill="rgb(219,50,5)"/><text x="57.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="996" width="6" height="15" fill="rgb(245,158,23)"/><text x="57.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="1012" width="6" height="15" fill="rgb(252,103,12)"/><text x="57.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="1028" width="6" height="15" fill="rgb(244,210,22)"/><text x="57.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="1044" width="6" height="15" fill="rgb(219,166,23)"/><text x="57.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 0.50%)</title><rect x="54" y="1060" width="6" height="15" fill="rgb(234,66,26)"/><text x="57.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="1076" width="6" height="15" fill="rgb(205,30,37)"/><text x="57.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="1092" width="6" height="15" fill="rgb(220,165,29)"/><text x="57.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="54" y="1108" width="6" height="15" fill="rgb(252,105,47)"/><text x="57.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="54" y="1124" width="6" height="15" fill="rgb(222,176,28)"/><text x="57.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1140" width="3" height="15" fill="rgb(207,117,6)"/><text x="60.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="57" y="1156" width="3" height="15" fill="rgb(238,158,40)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="68" width="53" height="15" fill="rgb(207,178,54)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="84" width="53" height="15" fill="rgb(209,225,3)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="100" width="53" height="15" fill="rgb(243,154,29)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.51%)</title><rect x="10" y="116" width="53" height="15" fill="rgb(239,73,13)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="132" width="53" height="15" fill="rgb(212,106,10)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (18 samples, 4.51%)</title><rect x="10" y="148" width="53" height="15" fill="rgb(216,72,32)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="164" width="53" height="15" fill="rgb(236,154,16)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.51%)</title><rect x="10" y="180" width="53" height="15" fill="rgb(226,87,47)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="196" width="18" height="15" fill="rgb(231,97,25)"/><text x="48.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.50%)</title><rect x="45" y="212" width="18" height="15" fill="rgb(246,14,17)"/><text x="48.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.50%)</title><rect x="45" y="228" width="18" height="15" fill="rgb(211,142,38)"/><text x="48.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.25%)</title><rect x="60" y="244" width="3" height="15" fill="rgb(244,115,45)"/><text x="63.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="260" width="3" height="15" fill="rgb(250,113,15)"/><text x="63.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="276" width="3" height="15" fill="rgb(249,175,8)"/><text x="63.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="292" width="3" height="15" fill="rgb(211,66,4)"/><text x="63.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="308" width="3" height="15" fill="rgb(243,37,12)"/><text x="63.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="324" width="3" height="15" fill="rgb(211,45,7)"/><text x="63.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="340" width="3" height="15" fill="rgb(239,198,34)"/><text x="63.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="356" width="3" height="15" fill="rgb(249,129,22)"/><text x="63.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.25%)</title><rect x="60" y="372" width="3" height="15" fill="rgb(222,48,30)"/><text x="63.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="388" width="3" height="15" fill="rgb(245,59,24)"/><text x="63.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(210,163,19)"/><text x="63.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="420" width="3" height="15" fill="rgb(242,9,41)"/><text x="63.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="436" width="3" height="15" fill="rgb(206,59,34)"/><text x="63.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="452" width="3" height="15" fill="rgb(221,92,21)"/><text x="63.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="468" width="3" height="15" fill="rgb(251,202,25)"/><text x="63.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="484" width="3" height="15" fill="rgb(211,45,49)"/><text x="63.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_dtype_ctypes.py) (1 samples, 0.25%)</title><rect x="60" y="500" width="3" height="15" fill="rgb(243,187,36)"/><text x="63.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="516" width="3" height="15" fill="rgb(218,94,16)"/><text x="63.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="532" width="3" height="15" fill="rgb(248,114,5)"/><text x="63.00" y="542.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="60" y="548" width="3" height="15" fill="rgb(225,114,28)"/><text x="63.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="564" width="3" height="15" fill="rgb(217,161,38)"/><text x="63.00" y="574.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="580" width="3" height="15" fill="rgb(208,203,10)"/><text x="63.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="596" width="3" height="15" fill="rgb(233,153,5)"/><text x="63.00" y="606.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="612" width="3" height="15" fill="rgb(227,22,27)"/><text x="63.00" y="622.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="628" width="3" height="15" fill="rgb(220,58,5)"/><text x="63.00" y="638.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="60" y="644" width="3" height="15" fill="rgb(229,19,4)"/><text x="63.00" y="654.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="60" y="660" width="3" height="15" fill="rgb(217,215,32)"/><text x="63.00" y="670.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (2 samples, 0.50%)</title><rect x="63" y="68" width="6" height="15" fill="rgb(228,120,17)"/><text x="66.00" y="78.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (2 samples, 0.50%)</title><rect x="63" y="84" width="6" height="15" fill="rgb(245,123,46)"/><text x="66.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="63" y="100" width="6" height="15" fill="rgb(228,179,1)"/><text x="66.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="63" y="116" width="6" height="15" fill="rgb(235,179,8)"/><text x="66.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.50%)</title><rect x="63" y="132" width="6" height="15" fill="rgb(218,142,40)"/><text x="66.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.50%)</title><rect x="63" y="148" width="6" height="15" fill="rgb(235,121,23)"/><text x="66.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.50%)</title><rect x="63" y="164" width="6" height="15" fill="rgb(218,90,44)"/><text x="66.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="180" width="6" height="15" fill="rgb(235,3,25)"/><text x="66.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="196" width="6" height="15" fill="rgb(217,193,37)"/><text x="66.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="212" width="6" height="15" fill="rgb(231,50,6)"/><text x="66.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="63" y="228" width="6" height="15" fill="rgb(240,174,7)"/><text x="66.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="244" width="6" height="15" fill="rgb(212,17,24)"/><text x="66.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.50%)</title><rect x="63" y="260" width="6" height="15" fill="rgb(241,210,26)"/><text x="66.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="276" width="6" height="15" fill="rgb(230,219,13)"/><text x="66.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="292" width="6" height="15" fill="rgb(228,4,9)"/><text x="66.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="308" width="6" height="15" fill="rgb(233,128,9)"/><text x="66.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="63" y="324" width="6" height="15" fill="rgb(252,72,44)"/><text x="66.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="340" width="6" height="15" fill="rgb(243,37,32)"/><text x="66.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.50%)</title><rect x="63" y="356" width="6" height="15" fill="rgb(214,201,22)"/><text x="66.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="372" width="6" height="15" fill="rgb(213,138,41)"/><text x="66.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="388" width="6" height="15" fill="rgb(219,186,0)"/><text x="66.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="63" y="404" width="6" height="15" fill="rgb(217,24,20)"/><text x="66.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="63" y="420" width="6" height="15" fill="rgb(210,18,45)"/><text x="66.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="66" y="436" width="3" height="15" fill="rgb(249,159,49)"/><text x="69.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.25%)</title><rect x="66" y="452" width="3" height="15" fill="rgb(245,150,12)"/><text x="69.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="66" y="468" width="3" height="15" fill="rgb(210,207,31)"/><text x="69.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="66" y="484" width="3" height="15" fill="rgb(207,222,50)"/><text x="69.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="66" y="500" width="3" height="15" fill="rgb(214,72,32)"/><text x="69.00" y="510.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="66" y="516" width="3" height="15" fill="rgb(246,139,6)"/><text x="69.00" y="526.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.25%)</title><rect x="98" y="212" width="3" height="15" fill="rgb(254,209,26)"/><text x="101.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="98" y="228" width="3" height="15" fill="rgb(215,16,26)"/><text x="101.00" y="238.50"></text></g><g><title>DOUBLE_argmax (arraytypes.c.src) (3 samples, 0.75%)</title><rect x="116" y="340" width="9" height="15" fill="rgb(234,10,27)"/><text x="119.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (6 samples, 1.50%)</title><rect x="113" y="324" width="18" height="15" fill="rgb(208,45,23)"/><text x="116.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.50%)</title><rect x="125" y="340" width="6" height="15" fill="rgb(254,42,7)"/><text x="128.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.50%)</title><rect x="125" y="356" width="6" height="15" fill="rgb(230,173,45)"/><text x="128.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="128" y="372" width="3" height="15" fill="rgb(215,142,16)"/><text x="131.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="128" y="388" width="3" height="15" fill="rgb(248,91,17)"/><text x="131.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.25%)</title><rect x="128" y="404" width="3" height="15" fill="rgb(217,216,1)"/><text x="131.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="128" y="420" width="3" height="15" fill="rgb(237,158,33)"/><text x="131.00" y="430.50"></text></g><g><title>0x7f0d9e1edb12 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="128" y="436" width="3" height="15" fill="rgb(205,215,41)"/><text x="131.00" y="446.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (9 samples, 2.26%)</title><rect x="107" y="244" width="27" height="15" fill="rgb(216,42,51)"/><text x="110.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.01%)</title><rect x="110" y="260" width="24" height="15" fill="rgb(212,221,29)"/><text x="113.00" y="270.50">a..</text></g><g><title>argmax (numpy/core/fromnumeric.py) (7 samples, 1.75%)</title><rect x="113" y="276" width="21" height="15" fill="rgb(246,93,28)"/><text x="116.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (7 samples, 1.75%)</title><rect x="113" y="292" width="21" height="15" fill="rgb(237,220,3)"/><text x="116.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (7 samples, 1.75%)</title><rect x="113" y="308" width="21" height="15" fill="rgb(226,135,0)"/><text x="116.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="131" y="324" width="3" height="15" fill="rgb(228,31,51)"/><text x="134.00" y="334.50"></text></g><g><title>dgemm_incopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="154" y="388" width="3" height="15" fill="rgb(205,133,20)"/><text x="157.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (23 samples, 5.76%)</title><rect x="146" y="276" width="68" height="15" fill="rgb(244,157,51)"/><text x="149.00" y="286.50">array_i..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (22 samples, 5.51%)</title><rect x="148" y="292" width="66" height="15" fill="rgb(233,74,17)"/><text x="151.00" y="302.50">array_m..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (22 samples, 5.51%)</title><rect x="148" y="308" width="66" height="15" fill="rgb(215,77,40)"/><text x="151.00" y="318.50">PyArray..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (22 samples, 5.51%)</title><rect x="148" y="324" width="66" height="15" fill="rgb(222,82,9)"/><text x="151.00" y="334.50">cblas_m..</text></g><g><title>gemm (cblasfuncs.c) (22 samples, 5.51%)</title><rect x="148" y="340" width="66" height="15" fill="rgb(231,201,51)"/><text x="151.00" y="350.50">gemm (c..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 5.51%)</title><rect x="148" y="356" width="66" height="15" fill="rgb(235,55,33)"/><text x="151.00" y="366.50">cblas_d..</text></g><g><title>dgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.26%)</title><rect x="151" y="372" width="63" height="15" fill="rgb(245,82,2)"/><text x="154.00" y="382.50">dgemm_..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.76%)</title><rect x="157" y="388" width="57" height="15" fill="rgb(210,163,51)"/><text x="160.00" y="398.50">dgemm_..</text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="214" y="276" width="3" height="15" fill="rgb(242,23,28)"/><text x="217.00" y="286.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (52 samples, 13.03%)</title><rect x="134" y="244" width="153" height="15" fill="rgb(221,99,46)"/><text x="137.00" y="254.50">numpy_dot_inplace (..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (48 samples, 12.03%)</title><rect x="146" y="260" width="141" height="15" fill="rgb(212,193,37)"/><text x="149.00" y="270.50">dot (&lt;__array_fun..</text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 6.02%)</title><rect x="217" y="276" width="70" height="15" fill="rgb(224,52,42)"/><text x="220.00" y="286.50">dgemm_k..</text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.25%)</title><rect x="287" y="260" width="3" height="15" fill="rgb(210,224,14)"/><text x="290.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.25%)</title><rect x="293" y="276" width="3" height="15" fill="rgb(231,139,20)"/><text x="296.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src) (3 samples, 0.75%)</title><rect x="296" y="308" width="9" height="15" fill="rgb(221,196,46)"/><text x="299.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (3 samples, 0.75%)</title><rect x="296" y="324" width="9" height="15" fill="rgb(220,218,33)"/><text x="299.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (3 samples, 0.75%)</title><rect x="296" y="340" width="9" height="15" fill="rgb(229,168,6)"/><text x="299.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.75%)</title><rect x="296" y="356" width="9" height="15" fill="rgb(249,61,54)"/><text x="299.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.25%)</title><rect x="305" y="308" width="3" height="15" fill="rgb(214,215,19)"/><text x="308.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="305" y="324" width="3" height="15" fill="rgb(223,36,39)"/><text x="308.00" y="334.50"></text></g><g><title>0x7f0d9d40ee10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="308" y="324" width="3" height="15" fill="rgb(210,57,50)"/><text x="311.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.50%)</title><rect x="308" y="308" width="6" height="15" fill="rgb(213,158,20)"/><text x="311.00" y="318.50"></text></g><g><title>0x7f0d9e1ec9a8 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="311" y="324" width="3" height="15" fill="rgb(238,199,29)"/><text x="314.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.50%)</title><rect x="314" y="308" width="6" height="15" fill="rgb(209,53,37)"/><text x="317.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.50%)</title><rect x="314" y="324" width="6" height="15" fill="rgb(239,12,30)"/><text x="317.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.50%)</title><rect x="314" y="340" width="6" height="15" fill="rgb(221,187,49)"/><text x="317.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 2.26%)</title><rect x="296" y="292" width="27" height="15" fill="rgb(225,69,50)"/><text x="299.00" y="302.50">i..</text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="320" y="308" width="3" height="15" fill="rgb(254,90,45)"/><text x="323.00" y="318.50"></text></g><g><title>0x7f0d894f6254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="323" y="324" width="3" height="15" fill="rgb(218,127,20)"/><text x="326.00" y="334.50"></text></g><g><title>0x7f0d9e3381b0 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="347" y="356" width="3" height="15" fill="rgb(220,19,47)"/><text x="350.00" y="366.50"></text></g><g><title>0x7f0d9e3beba0 (libm-2.29.so) (2 samples, 0.50%)</title><rect x="350" y="356" width="6" height="15" fill="rgb(246,81,47)"/><text x="353.00" y="366.50"></text></g><g><title>0x7f0d9e3bebb4 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="356" y="356" width="2" height="15" fill="rgb(213,127,16)"/><text x="359.00" y="366.50"></text></g><g><title>0x7f0d9e3bebd3 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="358" y="356" width="3" height="15" fill="rgb(242,24,26)"/><text x="361.00" y="366.50"></text></g><g><title>0x7f0d9e3bebe7 (libm-2.29.so) (3 samples, 0.75%)</title><rect x="361" y="356" width="9" height="15" fill="rgb(214,22,26)"/><text x="364.00" y="366.50"></text></g><g><title>0x7f0d9e3bec07 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(245,113,32)"/><text x="373.00" y="366.50"></text></g><g><title>0x7f0d9e3bec18 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="373" y="356" width="3" height="15" fill="rgb(229,220,36)"/><text x="376.00" y="366.50"></text></g><g><title>0x7f0d9e3bec2e (libm-2.29.so) (2 samples, 0.50%)</title><rect x="376" y="356" width="6" height="15" fill="rgb(240,177,1)"/><text x="379.00" y="366.50"></text></g><g><title>0x7f0d894f6265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (22 samples, 5.51%)</title><rect x="326" y="324" width="65" height="15" fill="rgb(254,191,1)"/><text x="329.00" y="334.50">0x7f0d8..</text></g><g><title>exp (libm-2.29.so) (21 samples, 5.26%)</title><rect x="329" y="340" width="62" height="15" fill="rgb(220,179,25)"/><text x="332.00" y="350.50">exp (l..</text></g><g><title>0x7f0d9e3bec7b (libm-2.29.so) (3 samples, 0.75%)</title><rect x="382" y="356" width="9" height="15" fill="rgb(234,212,48)"/><text x="385.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (39 samples, 9.77%)</title><rect x="296" y="276" width="116" height="15" fill="rgb(219,223,31)"/><text x="299.00" y="286.50">execute_legacy..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (30 samples, 7.52%)</title><rect x="323" y="292" width="89" height="15" fill="rgb(224,167,37)"/><text x="326.00" y="302.50">trivial_tw..</text></g><g><title>0x7f0d894d59dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (30 samples, 7.52%)</title><rect x="323" y="308" width="89" height="15" fill="rgb(253,13,9)"/><text x="326.00" y="318.50">0x7f0d894d..</text></g><g><title>0x7f0d894f6279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.75%)</title><rect x="391" y="324" width="21" height="15" fill="rgb(212,161,25)"/><text x="394.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (106 samples, 26.57%)</title><rect x="101" y="228" width="314" height="15" fill="rgb(230,82,32)"/><text x="104.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_linear_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (43 samples, 10.78%)</title><rect x="287" y="244" width="128" height="15" fill="rgb(232,144,13)"/><text x="290.00" y="254.50">ufunc_generic_ca..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (42 samples, 10.53%)</title><rect x="290" y="260" width="125" height="15" fill="rgb(228,58,5)"/><text x="293.00" y="270.50">PyUFunc_Generic..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.25%)</title><rect x="412" y="276" width="3" height="15" fill="rgb(229,3,30)"/><text x="415.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="421" y="276" width="3" height="15" fill="rgb(252,157,40)"/><text x="424.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="424" y="276" width="2" height="15" fill="rgb(221,99,53)"/><text x="427.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="424" y="292" width="2" height="15" fill="rgb(235,214,32)"/><text x="427.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="424" y="308" width="2" height="15" fill="rgb(224,210,49)"/><text x="427.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.25%)</title><rect x="424" y="324" width="2" height="15" fill="rgb(233,184,36)"/><text x="427.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="424" y="340" width="2" height="15" fill="rgb(213,152,32)"/><text x="427.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.75%)</title><rect x="421" y="260" width="8" height="15" fill="rgb(218,35,14)"/><text x="424.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="426" y="276" width="3" height="15" fill="rgb(248,84,22)"/><text x="429.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="426" y="292" width="3" height="15" fill="rgb(211,206,30)"/><text x="429.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.25%)</title><rect x="426" y="308" width="3" height="15" fill="rgb(227,77,52)"/><text x="429.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.25%)</title><rect x="429" y="260" width="3" height="15" fill="rgb(251,154,36)"/><text x="432.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="429" y="276" width="3" height="15" fill="rgb(225,229,12)"/><text x="432.00" y="286.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.25%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(242,192,23)"/><text x="432.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.25%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(234,185,51)"/><text x="432.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.25%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(213,85,53)"/><text x="432.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.25%)</title><rect x="435" y="340" width="3" height="15" fill="rgb(211,50,54)"/><text x="438.00" y="350.50"></text></g><g><title>0x7f0d9d40e7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="435" y="356" width="3" height="15" fill="rgb(228,217,19)"/><text x="438.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.25%)</title><rect x="438" y="372" width="3" height="15" fill="rgb(213,225,10)"/><text x="441.00" y="382.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.25%)</title><rect x="438" y="388" width="3" height="15" fill="rgb(226,54,8)"/><text x="441.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="438" y="404" width="3" height="15" fill="rgb(229,203,8)"/><text x="441.00" y="414.50"></text></g><g><title>0x7f0d9e1ee700 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="438" y="420" width="3" height="15" fill="rgb(229,144,25)"/><text x="441.00" y="430.50"></text></g><g><title>0x7f0d9e1ebab9 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="438" y="436" width="3" height="15" fill="rgb(211,119,2)"/><text x="441.00" y="446.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="441" y="404" width="3" height="15" fill="rgb(240,46,11)"/><text x="444.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="441" y="420" width="3" height="15" fill="rgb(223,121,45)"/><text x="444.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="441" y="436" width="3" height="15" fill="rgb(250,176,18)"/><text x="444.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="441" y="452" width="3" height="15" fill="rgb(249,92,11)"/><text x="444.00" y="462.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.50%)</title><rect x="441" y="372" width="6" height="15" fill="rgb(232,22,36)"/><text x="444.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.50%)</title><rect x="441" y="388" width="6" height="15" fill="rgb(218,114,45)"/><text x="444.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.25%)</title><rect x="444" y="404" width="3" height="15" fill="rgb(227,221,2)"/><text x="447.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="444" y="420" width="3" height="15" fill="rgb(222,113,42)"/><text x="447.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src) (7 samples, 1.75%)</title><rect x="447" y="388" width="21" height="15" fill="rgb(209,150,13)"/><text x="450.00" y="398.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.25%)</title><rect x="465" y="404" width="3" height="15" fill="rgb(207,103,0)"/><text x="468.00" y="414.50"></text></g><g><title>array_sum (methods.c) (19 samples, 4.76%)</title><rect x="432" y="260" width="57" height="15" fill="rgb(219,205,11)"/><text x="435.00" y="270.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 4.76%)</title><rect x="432" y="276" width="57" height="15" fill="rgb(221,166,51)"/><text x="435.00" y="286.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (19 samples, 4.76%)</title><rect x="432" y="292" width="57" height="15" fill="rgb(229,80,1)"/><text x="435.00" y="302.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (18 samples, 4.51%)</title><rect x="435" y="308" width="54" height="15" fill="rgb(235,58,13)"/><text x="438.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (18 samples, 4.51%)</title><rect x="435" y="324" width="54" height="15" fill="rgb(250,144,51)"/><text x="438.00" y="334.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (17 samples, 4.26%)</title><rect x="438" y="340" width="51" height="15" fill="rgb(246,63,34)"/><text x="441.00" y="350.50">PyUFu..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (17 samples, 4.26%)</title><rect x="438" y="356" width="51" height="15" fill="rgb(247,10,40)"/><text x="441.00" y="366.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 3.51%)</title><rect x="447" y="372" width="42" height="15" fill="rgb(209,130,47)"/><text x="450.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (7 samples, 1.75%)</title><rect x="468" y="388" width="21" height="15" fill="rgb(248,134,9)"/><text x="471.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.25%)</title><rect x="489" y="276" width="3" height="15" fill="rgb(247,114,30)"/><text x="492.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.25%)</title><rect x="489" y="292" width="3" height="15" fill="rgb(215,146,3)"/><text x="492.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.25%)</title><rect x="489" y="308" width="3" height="15" fill="rgb(245,180,37)"/><text x="492.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.25%)</title><rect x="495" y="292" width="2" height="15" fill="rgb(252,142,47)"/><text x="498.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.25%)</title><rect x="497" y="292" width="3" height="15" fill="rgb(217,229,32)"/><text x="500.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 1.50%)</title><rect x="500" y="324" width="18" height="15" fill="rgb(254,210,52)"/><text x="503.00" y="334.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 1.50%)</title><rect x="500" y="340" width="18" height="15" fill="rgb(217,211,50)"/><text x="503.00" y="350.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (6 samples, 1.50%)</title><rect x="500" y="356" width="18" height="15" fill="rgb(212,136,12)"/><text x="503.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 1.50%)</title><rect x="500" y="372" width="18" height="15" fill="rgb(246,226,1)"/><text x="503.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.50%)</title><rect x="518" y="324" width="6" height="15" fill="rgb(216,195,5)"/><text x="521.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.25%)</title><rect x="521" y="340" width="3" height="15" fill="rgb(234,213,9)"/><text x="524.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (12 samples, 3.01%)</title><rect x="500" y="308" width="36" height="15" fill="rgb(224,4,50)"/><text x="503.00" y="318.50">ite..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (4 samples, 1.00%)</title><rect x="524" y="324" width="12" height="15" fill="rgb(228,93,20)"/><text x="527.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (4 samples, 1.00%)</title><rect x="524" y="340" width="12" height="15" fill="rgb(237,174,27)"/><text x="527.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 1.00%)</title><rect x="524" y="356" width="12" height="15" fill="rgb(209,108,6)"/><text x="527.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.50%)</title><rect x="530" y="372" width="6" height="15" fill="rgb(239,12,4)"/><text x="533.00" y="382.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (159 samples, 39.85%)</title><rect x="69" y="100" width="470" height="15" fill="rgb(239,16,21)"/><text x="72.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblin..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 39.60%)</title><rect x="72" y="116" width="467" height="15" fill="rgb(251,148,53)"/><text x="75.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (158 samples, 39.60%)</title><rect x="72" y="132" width="467" height="15" fill="rgb(247,183,29)"/><text x="75.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (158 samples, 39.60%)</title><rect x="72" y="148" width="467" height="15" fill="rgb(253,183,11)"/><text x="75.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (158 samples, 39.60%)</title><rect x="72" y="164" width="467" height="15" fill="rgb(242,139,17)"/><text x="75.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (154 samples, 38.60%)</title><rect x="83" y="180" width="456" height="15" fill="rgb(238,222,4)"/><text x="86.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (150 samples, 37.59%)</title><rect x="95" y="196" width="444" height="15" fill="rgb(247,201,19)"/><text x="98.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (148 samples, 37.09%)</title><rect x="101" y="212" width="438" height="15" fill="rgb(229,32,53)"/><text x="104.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (42 samples, 10.53%)</title><rect x="415" y="228" width="124" height="15" fill="rgb(239,117,43)"/><text x="418.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (41 samples, 10.28%)</title><rect x="418" y="244" width="121" height="15" fill="rgb(214,32,27)"/><text x="421.00" y="254.50">norm_l1 (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 4.26%)</title><rect x="489" y="260" width="50" height="15" fill="rgb(222,14,27)"/><text x="492.00" y="270.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 4.01%)</title><rect x="492" y="276" width="47" height="15" fill="rgb(249,59,10)"/><text x="495.00" y="286.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (13 samples, 3.26%)</title><rect x="500" y="292" width="39" height="15" fill="rgb(206,18,34)"/><text x="503.00" y="302.50">exe..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.25%)</title><rect x="536" y="308" width="3" height="15" fill="rgb(231,173,39)"/><text x="539.00" y="318.50"></text></g><g><title>DOUBLE_absolute (loops.c.src) (1 samples, 0.25%)</title><rect x="536" y="324" width="3" height="15" fill="rgb(217,174,41)"/><text x="539.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="536" y="340" width="3" height="15" fill="rgb(227,57,44)"/><text x="539.00" y="350.50"></text></g><g><title>sse2_absolute_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="536" y="356" width="3" height="15" fill="rgb(215,223,52)"/><text x="539.00" y="366.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.25%)</title><rect x="536" y="372" width="3" height="15" fill="rgb(205,61,1)"/><text x="539.00" y="382.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (160 samples, 40.10%)</title><rect x="69" y="68" width="473" height="15" fill="rgb(208,77,18)"/><text x="72.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (160 samples, 40.10%)</title><rect x="69" y="84" width="473" height="15" fill="rgb(208,118,17)"/><text x="72.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solver..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="539" y="100" width="3" height="15" fill="rgb(240,18,13)"/><text x="542.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="539" y="116" width="3" height="15" fill="rgb(205,122,16)"/><text x="542.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="539" y="132" width="3" height="15" fill="rgb(238,35,20)"/><text x="542.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="539" y="148" width="3" height="15" fill="rgb(243,163,11)"/><text x="542.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="539" y="164" width="3" height="15" fill="rgb(214,93,5)"/><text x="542.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.25%)</title><rect x="539" y="180" width="3" height="15" fill="rgb(211,66,28)"/><text x="542.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.25%)</title><rect x="539" y="196" width="3" height="15" fill="rgb(217,142,20)"/><text x="542.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="212" width="3" height="15" fill="rgb(210,156,6)"/><text x="542.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="228" width="3" height="15" fill="rgb(251,129,10)"/><text x="542.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="244" width="3" height="15" fill="rgb(237,79,11)"/><text x="542.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="539" y="260" width="3" height="15" fill="rgb(236,122,41)"/><text x="542.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="276" width="3" height="15" fill="rgb(205,141,23)"/><text x="542.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.25%)</title><rect x="539" y="292" width="3" height="15" fill="rgb(217,123,16)"/><text x="542.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="308" width="3" height="15" fill="rgb(254,123,33)"/><text x="542.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="324" width="3" height="15" fill="rgb(224,19,6)"/><text x="542.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="340" width="3" height="15" fill="rgb(241,22,53)"/><text x="542.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="539" y="356" width="3" height="15" fill="rgb(206,37,24)"/><text x="542.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="372" width="3" height="15" fill="rgb(216,52,50)"/><text x="542.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.25%)</title><rect x="539" y="388" width="3" height="15" fill="rgb(254,68,41)"/><text x="542.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="404" width="3" height="15" fill="rgb(223,127,15)"/><text x="542.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="420" width="3" height="15" fill="rgb(230,27,18)"/><text x="542.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="436" width="3" height="15" fill="rgb(223,228,26)"/><text x="542.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="539" y="452" width="3" height="15" fill="rgb(249,154,53)"/><text x="542.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="539" y="468" width="3" height="15" fill="rgb(235,54,15)"/><text x="542.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.25%)</title><rect x="539" y="484" width="3" height="15" fill="rgb(212,136,17)"/><text x="542.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.25%)</title><rect x="539" y="500" width="3" height="15" fill="rgb(236,210,8)"/><text x="542.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="539" y="516" width="3" height="15" fill="rgb(233,126,8)"/><text x="542.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="539" y="532" width="3" height="15" fill="rgb(207,56,29)"/><text x="542.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="539" y="548" width="3" height="15" fill="rgb(211,40,36)"/><text x="542.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="539" y="564" width="3" height="15" fill="rgb(210,81,7)"/><text x="542.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="539" y="580" width="3" height="15" fill="rgb(210,37,2)"/><text x="542.00" y="590.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.25%)</title><rect x="554" y="180" width="3" height="15" fill="rgb(217,30,49)"/><text x="557.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="554" y="196" width="3" height="15" fill="rgb(252,160,11)"/><text x="557.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.25%)</title><rect x="554" y="212" width="3" height="15" fill="rgb(214,159,35)"/><text x="557.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.50%)</title><rect x="557" y="244" width="6" height="15" fill="rgb(249,161,28)"/><text x="560.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.50%)</title><rect x="557" y="260" width="6" height="15" fill="rgb(254,121,54)"/><text x="560.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.50%)</title><rect x="557" y="276" width="6" height="15" fill="rgb(218,86,52)"/><text x="560.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.50%)</title><rect x="557" y="292" width="6" height="15" fill="rgb(243,56,11)"/><text x="560.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.50%)</title><rect x="557" y="308" width="6" height="15" fill="rgb(216,45,28)"/><text x="560.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.25%)</title><rect x="563" y="292" width="2" height="15" fill="rgb(210,70,6)"/><text x="566.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.25%)</title><rect x="563" y="308" width="2" height="15" fill="rgb(217,52,42)"/><text x="566.00" y="318.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.25%)</title><rect x="565" y="292" width="3" height="15" fill="rgb(234,51,14)"/><text x="568.00" y="302.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.25%)</title><rect x="568" y="292" width="3" height="15" fill="rgb(211,22,26)"/><text x="571.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.25%)</title><rect x="568" y="308" width="3" height="15" fill="rgb(242,169,0)"/><text x="571.00" y="318.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.25%)</title><rect x="568" y="324" width="3" height="15" fill="rgb(216,109,10)"/><text x="571.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (10 samples, 2.51%)</title><rect x="577" y="308" width="30" height="15" fill="rgb(253,91,43)"/><text x="580.00" y="318.50">DO..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 1.00%)</title><rect x="595" y="324" width="12" height="15" fill="rgb(227,115,34)"/><text x="598.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="607" y="308" width="3" height="15" fill="rgb(218,183,18)"/><text x="610.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (18 samples, 4.51%)</title><rect x="563" y="276" width="53" height="15" fill="rgb(237,124,50)"/><text x="566.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (15 samples, 3.76%)</title><rect x="571" y="292" width="45" height="15" fill="rgb(245,187,3)"/><text x="574.00" y="302.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.50%)</title><rect x="610" y="308" width="6" height="15" fill="rgb(239,165,20)"/><text x="613.00" y="318.50"></text></g><g><title>array_sum (methods.c) (21 samples, 5.26%)</title><rect x="557" y="180" width="62" height="15" fill="rgb(223,125,41)"/><text x="560.00" y="190.50">array_..</text></g><g><title>forward_ndarray_method (methods.c) (21 samples, 5.26%)</title><rect x="557" y="196" width="62" height="15" fill="rgb(210,158,22)"/><text x="560.00" y="206.50">forwar..</text></g><g><title>_sum (numpy/core/_methods.py) (21 samples, 5.26%)</title><rect x="557" y="212" width="62" height="15" fill="rgb(212,37,37)"/><text x="560.00" y="222.50">_sum (..</text></g><g><title>ufunc_reduce (ufunc_object.c) (21 samples, 5.26%)</title><rect x="557" y="228" width="62" height="15" fill="rgb(221,91,36)"/><text x="560.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (19 samples, 4.76%)</title><rect x="563" y="244" width="56" height="15" fill="rgb(208,222,2)"/><text x="566.00" y="254.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (19 samples, 4.76%)</title><rect x="563" y="260" width="56" height="15" fill="rgb(219,37,1)"/><text x="566.00" y="270.50">PyUFu..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.25%)</title><rect x="616" y="276" width="3" height="15" fill="rgb(242,197,51)"/><text x="619.00" y="286.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c) (1 samples, 0.25%)</title><rect x="628" y="212" width="3" height="15" fill="rgb(227,213,9)"/><text x="631.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="631" y="244" width="3" height="15" fill="rgb(227,80,44)"/><text x="634.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.25%)</title><rect x="631" y="260" width="3" height="15" fill="rgb(235,54,37)"/><text x="634.00" y="270.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.25%)</title><rect x="631" y="276" width="3" height="15" fill="rgb(220,38,42)"/><text x="634.00" y="286.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.25%)</title><rect x="631" y="292" width="3" height="15" fill="rgb(209,66,14)"/><text x="634.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.25%)</title><rect x="634" y="276" width="2" height="15" fill="rgb(232,184,52)"/><text x="637.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="634" y="292" width="2" height="15" fill="rgb(206,93,23)"/><text x="637.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="634" y="308" width="2" height="15" fill="rgb(208,61,52)"/><text x="637.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.25%)</title><rect x="634" y="324" width="2" height="15" fill="rgb(212,179,33)"/><text x="637.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="639" y="356" width="3" height="15" fill="rgb(215,205,14)"/><text x="642.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="639" y="372" width="3" height="15" fill="rgb(218,29,5)"/><text x="642.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.25%)</title><rect x="639" y="388" width="3" height="15" fill="rgb(217,204,14)"/><text x="642.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="639" y="404" width="3" height="15" fill="rgb(246,80,26)"/><text x="642.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (3 samples, 0.75%)</title><rect x="636" y="292" width="9" height="15" fill="rgb(229,109,16)"/><text x="639.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (3 samples, 0.75%)</title><rect x="636" y="308" width="9" height="15" fill="rgb(206,185,26)"/><text x="639.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.50%)</title><rect x="639" y="324" width="6" height="15" fill="rgb(238,206,19)"/><text x="642.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.50%)</title><rect x="639" y="340" width="6" height="15" fill="rgb(213,24,43)"/><text x="642.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.25%)</title><rect x="642" y="356" width="3" height="15" fill="rgb(212,117,40)"/><text x="645.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.00%)</title><rect x="636" y="276" width="12" height="15" fill="rgb(227,80,24)"/><text x="639.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.25%)</title><rect x="645" y="292" width="3" height="15" fill="rgb(253,53,48)"/><text x="648.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="645" y="308" width="3" height="15" fill="rgb(253,128,4)"/><text x="648.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c) (1 samples, 0.25%)</title><rect x="645" y="324" width="3" height="15" fill="rgb(222,7,0)"/><text x="648.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="645" y="340" width="3" height="15" fill="rgb(209,162,2)"/><text x="648.00" y="350.50"></text></g><g><title>array_add (number.c) (12 samples, 3.01%)</title><rect x="628" y="196" width="35" height="15" fill="rgb(239,42,44)"/><text x="631.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.76%)</title><rect x="631" y="212" width="32" height="15" fill="rgb(248,78,52)"/><text x="634.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.76%)</title><rect x="631" y="228" width="32" height="15" fill="rgb(234,71,3)"/><text x="634.00" y="238.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 2.51%)</title><rect x="634" y="244" width="29" height="15" fill="rgb(254,20,0)"/><text x="637.00" y="254.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 2.51%)</title><rect x="634" y="260" width="29" height="15" fill="rgb(246,139,45)"/><text x="637.00" y="270.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.25%)</title><rect x="648" y="276" width="15" height="15" fill="rgb(234,28,41)"/><text x="651.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.25%)</title><rect x="648" y="292" width="15" height="15" fill="rgb(226,94,24)"/><text x="651.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (4 samples, 1.00%)</title><rect x="651" y="308" width="12" height="15" fill="rgb(220,116,29)"/><text x="654.00" y="318.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.25%)</title><rect x="660" y="324" width="3" height="15" fill="rgb(242,100,36)"/><text x="663.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="663" y="196" width="3" height="15" fill="rgb(246,5,37)"/><text x="666.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="663" y="212" width="3" height="15" fill="rgb(240,87,45)"/><text x="666.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.50%)</title><rect x="678" y="212" width="6" height="15" fill="rgb(216,106,21)"/><text x="681.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.25%)</title><rect x="684" y="212" width="3" height="15" fill="rgb(221,190,49)"/><text x="687.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.25%)</title><rect x="687" y="212" width="3" height="15" fill="rgb(208,65,38)"/><text x="690.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="702" y="228" width="5" height="15" fill="rgb(248,29,49)"/><text x="705.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.25%)</title><rect x="707" y="228" width="3" height="15" fill="rgb(225,51,25)"/><text x="710.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="710" y="228" width="3" height="15" fill="rgb(231,98,5)"/><text x="713.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 2.26%)</title><rect x="690" y="212" width="26" height="15" fill="rgb(229,177,50)"/><text x="693.00" y="222.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="713" y="228" width="3" height="15" fill="rgb(215,164,30)"/><text x="716.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.25%)</title><rect x="719" y="228" width="3" height="15" fill="rgb(220,35,16)"/><text x="722.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.75%)</title><rect x="716" y="212" width="9" height="15" fill="rgb(228,140,37)"/><text x="719.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="722" y="228" width="3" height="15" fill="rgb(214,188,13)"/><text x="725.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.25%)</title><rect x="725" y="212" width="3" height="15" fill="rgb(209,207,14)"/><text x="728.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.50%)</title><rect x="728" y="212" width="6" height="15" fill="rgb(216,127,22)"/><text x="731.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.25%)</title><rect x="731" y="228" width="3" height="15" fill="rgb(249,199,43)"/><text x="734.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (27 samples, 6.77%)</title><rect x="666" y="196" width="80" height="15" fill="rgb(230,119,46)"/><text x="669.00" y="206.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.00%)</title><rect x="734" y="212" width="12" height="15" fill="rgb(243,3,24)"/><text x="737.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.75%)</title><rect x="737" y="228" width="9" height="15" fill="rgb(223,203,13)"/><text x="740.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.75%)</title><rect x="746" y="196" width="9" height="15" fill="rgb(221,132,18)"/><text x="749.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.75%)</title><rect x="746" y="212" width="9" height="15" fill="rgb(254,50,35)"/><text x="749.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="752" y="228" width="3" height="15" fill="rgb(216,22,2)"/><text x="755.00" y="238.50"></text></g><g><title>array_matrix_multiply (number.c) (1 samples, 0.25%)</title><rect x="767" y="212" width="3" height="15" fill="rgb(212,194,7)"/><text x="770.00" y="222.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.25%)</title><rect x="770" y="212" width="3" height="15" fill="rgb(246,23,40)"/><text x="773.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (46 samples, 11.53%)</title><rect x="773" y="212" width="136" height="15" fill="rgb(212,104,28)"/><text x="776.00" y="222.50">dgemm_kernel_SAND..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.50%)</title><rect x="909" y="212" width="5" height="15" fill="rgb(212,26,23)"/><text x="912.00" y="222.50"></text></g><g><title>0x7f0d9e1ecbdc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="914" y="260" width="3" height="15" fill="rgb(247,16,12)"/><text x="917.00" y="270.50"></text></g><g><title>dgemm_itcopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.50%)</title><rect x="920" y="308" width="6" height="15" fill="rgb(234,178,43)"/><text x="923.00" y="318.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (22 samples, 5.51%)</title><rect x="917" y="260" width="65" height="15" fill="rgb(224,19,26)"/><text x="920.00" y="270.50">DOUBLE_..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.26%)</title><rect x="920" y="276" width="62" height="15" fill="rgb(237,4,9)"/><text x="923.00" y="286.50">cblas_..</text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 5.26%)</title><rect x="920" y="292" width="62" height="15" fill="rgb(212,196,14)"/><text x="923.00" y="302.50">dgemm_..</text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.76%)</title><rect x="926" y="308" width="56" height="15" fill="rgb(210,108,42)"/><text x="929.00" y="318.50">dgemm..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.50%)</title><rect x="982" y="260" width="6" height="15" fill="rgb(252,52,24)"/><text x="985.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.50%)</title><rect x="982" y="276" width="6" height="15" fill="rgb(216,160,31)"/><text x="985.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.25%)</title><rect x="985" y="292" width="3" height="15" fill="rgb(208,62,36)"/><text x="988.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.25%)</title><rect x="985" y="308" width="3" height="15" fill="rgb(249,8,27)"/><text x="988.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="985" y="324" width="3" height="15" fill="rgb(223,175,33)"/><text x="988.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="985" y="340" width="3" height="15" fill="rgb(237,91,18)"/><text x="988.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="985" y="356" width="3" height="15" fill="rgb(215,43,1)"/><text x="988.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.25%)</title><rect x="985" y="372" width="3" height="15" fill="rgb(220,29,49)"/><text x="988.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="985" y="388" width="3" height="15" fill="rgb(233,157,50)"/><text x="988.00" y="398.50"></text></g><g><title>0x7f0d9e1ee8ae (libc-2.29.so) (1 samples, 0.25%)</title><rect x="985" y="404" width="3" height="15" fill="rgb(225,114,13)"/><text x="988.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="988" y="260" width="3" height="15" fill="rgb(251,141,2)"/><text x="991.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (27 samples, 6.77%)</title><rect x="914" y="228" width="80" height="15" fill="rgb(226,136,16)"/><text x="917.00" y="238.50">PyUFunc_G..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (27 samples, 6.77%)</title><rect x="914" y="244" width="80" height="15" fill="rgb(231,5,44)"/><text x="917.00" y="254.50">PyUFunc_G..</text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="991" y="260" width="3" height="15" fill="rgb(215,130,15)"/><text x="994.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (128 samples, 32.08%)</title><rect x="619" y="180" width="378" height="15" fill="rgb(211,177,48)"/><text x="622.00" y="190.50">decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (82 samples, 20.55%)</title><rect x="755" y="196" width="242" height="15" fill="rgb(211,100,10)"/><text x="758.00" y="206.50">safe_sparse_dot (sklearn/utils/e..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (28 samples, 7.02%)</title><rect x="914" y="212" width="83" height="15" fill="rgb(215,228,20)"/><text x="917.00" y="222.50">ufunc_gen..</text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.25%)</title><rect x="994" y="228" width="3" height="15" fill="rgb(232,158,47)"/><text x="997.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.25%)</title><rect x="997" y="196" width="3" height="15" fill="rgb(237,101,7)"/><text x="1000.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.25%)</title><rect x="997" y="212" width="3" height="15" fill="rgb(218,189,17)"/><text x="1000.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.25%)</title><rect x="997" y="228" width="3" height="15" fill="rgb(231,6,13)"/><text x="1000.00" y="238.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.50%)</title><rect x="1003" y="228" width="6" height="15" fill="rgb(242,22,16)"/><text x="1006.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1003" y="244" width="6" height="15" fill="rgb(225,0,2)"/><text x="1006.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1003" y="260" width="6" height="15" fill="rgb(234,157,31)"/><text x="1006.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1003" y="276" width="6" height="15" fill="rgb(219,68,53)"/><text x="1006.00" y="286.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1006" y="292" width="3" height="15" fill="rgb(221,15,52)"/><text x="1009.00" y="302.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1006" y="308" width="3" height="15" fill="rgb(240,47,2)"/><text x="1009.00" y="318.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.25%)</title><rect x="1009" y="276" width="3" height="15" fill="rgb(237,123,30)"/><text x="1012.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (3 samples, 0.75%)</title><rect x="1009" y="244" width="9" height="15" fill="rgb(220,181,18)"/><text x="1012.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (3 samples, 0.75%)</title><rect x="1009" y="260" width="9" height="15" fill="rgb(216,54,44)"/><text x="1012.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (2 samples, 0.50%)</title><rect x="1012" y="276" width="6" height="15" fill="rgb(205,183,21)"/><text x="1015.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.50%)</title><rect x="1012" y="292" width="6" height="15" fill="rgb(227,86,23)"/><text x="1015.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.25%)</title><rect x="1018" y="244" width="3" height="15" fill="rgb(234,38,52)"/><text x="1021.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 2.26%)</title><rect x="1009" y="228" width="27" height="15" fill="rgb(252,225,30)"/><text x="1012.00" y="238.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (5 samples, 1.25%)</title><rect x="1021" y="244" width="15" height="15" fill="rgb(209,218,0)"/><text x="1024.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.25%)</title><rect x="1021" y="260" width="15" height="15" fill="rgb(214,153,7)"/><text x="1024.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.25%)</title><rect x="1021" y="276" width="15" height="15" fill="rgb(224,228,1)"/><text x="1024.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (4 samples, 1.00%)</title><rect x="1024" y="292" width="12" height="15" fill="rgb(220,0,43)"/><text x="1027.00" y="302.50"></text></g><g><title>0x7f0d894d59dd (?) (1 samples, 0.25%)</title><rect x="1036" y="244" width="3" height="15" fill="rgb(238,44,28)"/><text x="1039.00" y="254.50"></text></g><g><title>0x7f0d894f6279 (?) (1 samples, 0.25%)</title><rect x="1036" y="260" width="3" height="15" fill="rgb(219,169,10)"/><text x="1039.00" y="270.50"></text></g><g><title>0x7f0d894f6254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1039" y="260" width="3" height="15" fill="rgb(241,81,47)"/><text x="1042.00" y="270.50"></text></g><g><title>0x7f0d895ff9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1045" y="276" width="3" height="15" fill="rgb(254,208,44)"/><text x="1048.00" y="286.50"></text></g><g><title>0x7f0d9e3bebe7 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1062" y="292" width="3" height="15" fill="rgb(211,165,29)"/><text x="1065.00" y="302.50"></text></g><g><title>0x7f0d9e3bebf9 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1065" y="292" width="3" height="15" fill="rgb(227,197,16)"/><text x="1068.00" y="302.50"></text></g><g><title>0x7f0d9e3bec07 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1068" y="292" width="3" height="15" fill="rgb(213,179,27)"/><text x="1071.00" y="302.50"></text></g><g><title>0x7f0d9e3bec18 (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1071" y="292" width="3" height="15" fill="rgb(239,191,54)"/><text x="1074.00" y="302.50"></text></g><g><title>0x7f0d9e3bec2e (libm-2.29.so) (1 samples, 0.25%)</title><rect x="1074" y="292" width="3" height="15" fill="rgb(227,110,12)"/><text x="1077.00" y="302.50"></text></g><g><title>0x7f0d9e3bec3e (libm-2.29.so) (2 samples, 0.50%)</title><rect x="1077" y="292" width="6" height="15" fill="rgb(218,161,10)"/><text x="1080.00" y="302.50"></text></g><g><title>0x7f0d9e3bec56 (libm-2.29.so) (2 samples, 0.50%)</title><rect x="1083" y="292" width="6" height="15" fill="rgb(248,198,7)"/><text x="1086.00" y="302.50"></text></g><g><title>0x7f0d894f6265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 4.51%)</title><rect x="1042" y="260" width="53" height="15" fill="rgb(249,11,34)"/><text x="1045.00" y="270.50">0x7f0..</text></g><g><title>exp (libm-2.29.so) (16 samples, 4.01%)</title><rect x="1048" y="276" width="47" height="15" fill="rgb(242,149,34)"/><text x="1051.00" y="286.50">exp ..</text></g><g><title>0x7f0d9e3bec7b (libm-2.29.so) (2 samples, 0.50%)</title><rect x="1089" y="292" width="6" height="15" fill="rgb(215,42,24)"/><text x="1092.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (43 samples, 10.78%)</title><rect x="1003" y="212" width="127" height="15" fill="rgb(212,226,14)"/><text x="1006.00" y="222.50">execute_legacy_..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (32 samples, 8.02%)</title><rect x="1036" y="228" width="94" height="15" fill="rgb(248,28,3)"/><text x="1039.00" y="238.50">trivial_two..</text></g><g><title>0x7f0d894d59dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (31 samples, 7.77%)</title><rect x="1039" y="244" width="91" height="15" fill="rgb(227,129,13)"/><text x="1042.00" y="254.50">0x7f0d894d..</text></g><g><title>0x7f0d894f6279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.01%)</title><rect x="1095" y="260" width="35" height="15" fill="rgb(213,112,24)"/><text x="1098.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (198 samples, 49.62%)</title><rect x="548" y="164" width="585" height="15" fill="rgb(230,203,46)"/><text x="551.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (46 samples, 11.53%)</title><rect x="997" y="180" width="136" height="15" fill="rgb(224,121,38)"/><text x="1000.00" y="190.50">ufunc_generic_cal..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (45 samples, 11.28%)</title><rect x="1000" y="196" width="133" height="15" fill="rgb(213,59,45)"/><text x="1003.00" y="206.50">PyUFunc_GenericF..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="1130" y="212" width="3" height="15" fill="rgb(236,23,5)"/><text x="1133.00" y="222.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="1130" y="228" width="3" height="15" fill="rgb(247,73,20)"/><text x="1133.00" y="238.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1130" y="244" width="3" height="15" fill="rgb(222,132,2)"/><text x="1133.00" y="254.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1130" y="260" width="3" height="15" fill="rgb(241,87,3)"/><text x="1133.00" y="270.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.25%)</title><rect x="1154" y="196" width="15" height="15" fill="rgb(217,9,18)"/><text x="1157.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 3.01%)</title><rect x="1139" y="180" width="36" height="15" fill="rgb(228,9,35)"/><text x="1142.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.50%)</title><rect x="1169" y="196" width="6" height="15" fill="rgb(222,183,30)"/><text x="1172.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (213 samples, 53.38%)</title><rect x="548" y="132" width="630" height="15" fill="rgb(240,13,45)"/><text x="551.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (213 samples, 53.38%)</title><rect x="548" y="148" width="630" height="15" fill="rgb(248,90,7)"/><text x="551.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 3.76%)</title><rect x="1133" y="164" width="45" height="15" fill="rgb(241,195,25)"/><text x="1136.00" y="174.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.25%)</title><rect x="1175" y="180" width="3" height="15" fill="rgb(235,190,41)"/><text x="1178.00" y="190.50"></text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (216 samples, 54.14%)</title><rect x="542" y="68" width="639" height="15" fill="rgb(231,144,2)"/><text x="545.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_doubl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (216 samples, 54.14%)</title><rect x="542" y="84" width="639" height="15" fill="rgb(223,204,34)"/><text x="545.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_dou..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (216 samples, 54.14%)</title><rect x="542" y="100" width="639" height="15" fill="rgb(222,119,28)"/><text x="545.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_no..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (215 samples, 53.88%)</title><rect x="545" y="116" width="636" height="15" fill="rgb(217,106,42)"/><text x="548.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="1178" y="132" width="3" height="15" fill="rgb(227,27,44)"/><text x="1181.00" y="142.50"></text></g><g><title>all (399 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,171,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (399 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(206,181,5)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py)</text></g><g><title>start (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_50_12_double_nozipmap.py) (3 samples, 0.75%)</title><rect x="1181" y="68" width="9" height="15" fill="rgb(250,180,14)"/><text x="1184.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (3 samples, 0.75%)</title><rect x="1181" y="84" width="9" height="15" fill="rgb(218,38,15)"/><text x="1184.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.75%)</title><rect x="1181" y="100" width="9" height="15" fill="rgb(222,214,5)"/><text x="1184.00" y="110.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.25%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(225,202,9)"/><text x="1190.00" y="126.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(228,174,41)"/><text x="1190.00" y="142.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(246,157,48)"/><text x="1190.00" y="158.50"></text></g></g></svg>