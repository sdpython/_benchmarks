<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(251,82,54)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(236,69,41)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(217,62,52)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="996" width="2" height="15" fill="rgb(232,117,18)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="12" y="1012" width="2" height="15" fill="rgb(220,228,7)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="12" y="1028" width="2" height="15" fill="rgb(242,52,15)"/><text x="15.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="12" y="1044" width="2" height="15" fill="rgb(213,215,4)"/><text x="15.00" y="1054.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(248,50,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(210,73,4)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(240,81,1)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.59%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(219,52,0)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(222,121,11)"/><text x="13.00" y="942.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(208,94,33)"/><text x="17.00" y="958.50"></text></g><g><title>0x7fe946d8014a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(224,98,27)"/><text x="22.00" y="1038.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (3 samples, 0.59%)</title><rect x="16" y="1012" width="7" height="15" fill="rgb(208,28,26)"/><text x="19.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(222,164,3)"/><text x="24.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.20%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(254,56,36)"/><text x="24.00" y="1054.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (4 samples, 0.79%)</title><rect x="16" y="932" width="10" height="15" fill="rgb(250,166,41)"/><text x="19.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (4 samples, 0.79%)</title><rect x="16" y="948" width="10" height="15" fill="rgb(218,175,19)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (4 samples, 0.79%)</title><rect x="16" y="964" width="10" height="15" fill="rgb(245,120,41)"/><text x="19.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (4 samples, 0.79%)</title><rect x="16" y="980" width="10" height="15" fill="rgb(236,149,37)"/><text x="19.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (4 samples, 0.79%)</title><rect x="16" y="996" width="10" height="15" fill="rgb(221,119,28)"/><text x="19.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.20%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(232,104,54)"/><text x="26.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(231,101,21)"/><text x="26.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(217,190,4)"/><text x="26.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(208,70,23)"/><text x="29.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(236,215,15)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(229,140,46)"/><text x="29.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(240,60,19)"/><text x="29.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(250,34,32)"/><text x="29.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.20%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(246,123,12)"/><text x="29.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.20%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(250,226,53)"/><text x="29.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(245,59,38)"/><text x="29.00" y="1054.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (6 samples, 1.19%)</title><rect x="16" y="868" width="14" height="15" fill="rgb(254,30,17)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (6 samples, 1.19%)</title><rect x="16" y="884" width="14" height="15" fill="rgb(216,212,43)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (6 samples, 1.19%)</title><rect x="16" y="900" width="14" height="15" fill="rgb(248,150,22)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (6 samples, 1.19%)</title><rect x="16" y="916" width="14" height="15" fill="rgb(224,180,20)"/><text x="19.00" y="926.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(234,27,36)"/><text x="31.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.20%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(252,196,32)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (10 samples, 1.98%)</title><rect x="10" y="292" width="23" height="15" fill="rgb(244,40,51)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="308" width="23" height="15" fill="rgb(230,36,26)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="324" width="23" height="15" fill="rgb(243,187,47)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="340" width="23" height="15" fill="rgb(209,136,6)"/><text x="13.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="10" y="356" width="23" height="15" fill="rgb(248,196,6)"/><text x="13.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="372" width="23" height="15" fill="rgb(211,215,53)"/><text x="13.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (10 samples, 1.98%)</title><rect x="10" y="388" width="23" height="15" fill="rgb(213,180,48)"/><text x="13.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="404" width="23" height="15" fill="rgb(212,39,43)"/><text x="13.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="420" width="23" height="15" fill="rgb(225,211,47)"/><text x="13.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="436" width="23" height="15" fill="rgb(240,85,34)"/><text x="13.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="10" y="452" width="23" height="15" fill="rgb(221,78,50)"/><text x="13.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="468" width="23" height="15" fill="rgb(223,85,24)"/><text x="13.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (10 samples, 1.98%)</title><rect x="10" y="484" width="23" height="15" fill="rgb(207,90,38)"/><text x="13.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="500" width="23" height="15" fill="rgb(229,24,38)"/><text x="13.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="516" width="23" height="15" fill="rgb(225,134,23)"/><text x="13.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="532" width="23" height="15" fill="rgb(250,209,13)"/><text x="13.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="10" y="548" width="23" height="15" fill="rgb(250,140,39)"/><text x="13.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="564" width="23" height="15" fill="rgb(246,139,50)"/><text x="13.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (10 samples, 1.98%)</title><rect x="10" y="580" width="23" height="15" fill="rgb(210,107,45)"/><text x="13.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="596" width="23" height="15" fill="rgb(251,121,27)"/><text x="13.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="612" width="23" height="15" fill="rgb(217,206,48)"/><text x="13.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="628" width="23" height="15" fill="rgb(240,134,43)"/><text x="13.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="644" width="23" height="15" fill="rgb(249,203,40)"/><text x="13.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="660" width="23" height="15" fill="rgb(245,123,30)"/><text x="13.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="676" width="23" height="15" fill="rgb(209,55,8)"/><text x="13.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="10" y="692" width="23" height="15" fill="rgb(218,205,29)"/><text x="13.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="708" width="23" height="15" fill="rgb(247,189,9)"/><text x="13.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (10 samples, 1.98%)</title><rect x="10" y="724" width="23" height="15" fill="rgb(218,165,49)"/><text x="13.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="740" width="23" height="15" fill="rgb(248,63,47)"/><text x="13.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="756" width="23" height="15" fill="rgb(240,99,29)"/><text x="13.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="772" width="23" height="15" fill="rgb(253,135,46)"/><text x="13.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="10" y="788" width="23" height="15" fill="rgb(246,33,41)"/><text x="13.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="10" y="804" width="23" height="15" fill="rgb(208,178,48)"/><text x="13.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (10 samples, 1.98%)</title><rect x="10" y="820" width="23" height="15" fill="rgb(225,211,31)"/><text x="13.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (10 samples, 1.98%)</title><rect x="10" y="836" width="23" height="15" fill="rgb(226,156,29)"/><text x="13.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (10 samples, 1.98%)</title><rect x="10" y="852" width="23" height="15" fill="rgb(251,91,12)"/><text x="13.00" y="862.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(223,115,38)"/><text x="33.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(225,90,50)"/><text x="33.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(241,205,50)"/><text x="33.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(216,54,10)"/><text x="33.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(254,115,43)"/><text x="33.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.20%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(249,6,13)"/><text x="33.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.20%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(245,24,28)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(237,0,54)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(221,151,38)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(252,175,24)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(252,41,34)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(221,220,0)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(205,217,12)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(239,225,53)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(216,80,33)"/><text x="36.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(241,10,9)"/><text x="36.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(213,209,23)"/><text x="36.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(223,147,32)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.20%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(244,199,48)"/><text x="36.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(206,53,18)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(238,103,22)"/><text x="36.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(236,199,30)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(208,201,32)"/><text x="36.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(222,48,17)"/><text x="36.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(250,129,20)"/><text x="36.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(223,104,30)"/><text x="36.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.20%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(209,155,34)"/><text x="36.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(213,97,31)"/><text x="36.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(243,226,6)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(231,171,30)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(230,229,41)"/><text x="36.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(216,40,35)"/><text x="36.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(252,137,52)"/><text x="36.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(220,74,53)"/><text x="36.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.20%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(248,16,36)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(231,138,44)"/><text x="36.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(245,167,53)"/><text x="36.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(222,131,43)"/><text x="36.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(235,24,21)"/><text x="36.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(238,27,22)"/><text x="36.00" y="1310.50"></text></g><g><title>0x7fe92778954b (?) (1 samples, 0.20%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(224,3,53)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(244,71,50)"/><text x="36.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(208,75,32)"/><text x="36.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(234,26,45)"/><text x="36.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(213,209,25)"/><text x="36.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(223,110,10)"/><text x="36.00" y="1406.50"></text></g><g><title>0x7fe92754c01d (?) (1 samples, 0.20%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(254,41,8)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1012" width="2" height="15" fill="rgb(210,149,51)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1028" width="2" height="15" fill="rgb(205,214,11)"/><text x="38.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1044" width="2" height="15" fill="rgb(238,29,46)"/><text x="38.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="35" y="1060" width="2" height="15" fill="rgb(217,24,26)"/><text x="38.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1076" width="2" height="15" fill="rgb(253,195,39)"/><text x="38.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/misc/__init__.py) (1 samples, 0.20%)</title><rect x="35" y="1092" width="2" height="15" fill="rgb(213,212,34)"/><text x="38.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1108" width="2" height="15" fill="rgb(214,155,13)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1124" width="2" height="15" fill="rgb(243,166,20)"/><text x="38.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1140" width="2" height="15" fill="rgb(216,104,40)"/><text x="38.00" y="1150.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1156" width="2" height="15" fill="rgb(229,208,42)"/><text x="38.00" y="1166.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="35" y="1172" width="2" height="15" fill="rgb(209,16,38)"/><text x="38.00" y="1182.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.20%)</title><rect x="37" y="1220" width="3" height="15" fill="rgb(254,200,47)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1236" width="3" height="15" fill="rgb(228,12,37)"/><text x="40.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1252" width="3" height="15" fill="rgb(239,46,52)"/><text x="40.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1268" width="3" height="15" fill="rgb(214,146,28)"/><text x="40.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="1284" width="3" height="15" fill="rgb(216,224,52)"/><text x="40.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1300" width="3" height="15" fill="rgb(225,224,49)"/><text x="40.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.20%)</title><rect x="37" y="1316" width="3" height="15" fill="rgb(247,212,15)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1332" width="3" height="15" fill="rgb(219,228,16)"/><text x="40.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1348" width="3" height="15" fill="rgb(230,213,28)"/><text x="40.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1364" width="3" height="15" fill="rgb(248,227,48)"/><text x="40.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="1380" width="3" height="15" fill="rgb(239,22,26)"/><text x="40.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1396" width="3" height="15" fill="rgb(237,62,30)"/><text x="40.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.20%)</title><rect x="37" y="1412" width="3" height="15" fill="rgb(230,27,25)"/><text x="40.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1428" width="3" height="15" fill="rgb(215,133,27)"/><text x="40.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1444" width="3" height="15" fill="rgb(208,87,1)"/><text x="40.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1460" width="3" height="15" fill="rgb(245,122,7)"/><text x="40.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="37" y="1476" width="3" height="15" fill="rgb(251,87,39)"/><text x="40.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="37" y="1492" width="3" height="15" fill="rgb(216,1,13)"/><text x="40.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/report.py) (1 samples, 0.20%)</title><rect x="37" y="1508" width="3" height="15" fill="rgb(208,53,10)"/><text x="40.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.77%)</title><rect x="10" y="196" width="32" height="15" fill="rgb(218,217,28)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.77%)</title><rect x="10" y="212" width="32" height="15" fill="rgb(205,26,44)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.77%)</title><rect x="10" y="228" width="32" height="15" fill="rgb(224,46,27)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.77%)</title><rect x="10" y="244" width="32" height="15" fill="rgb(227,33,37)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.77%)</title><rect x="10" y="260" width="32" height="15" fill="rgb(224,42,51)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.77%)</title><rect x="10" y="276" width="32" height="15" fill="rgb(220,53,35)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.79%)</title><rect x="33" y="292" width="9" height="15" fill="rgb(214,142,53)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="308" width="9" height="15" fill="rgb(247,154,22)"/><text x="36.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="324" width="9" height="15" fill="rgb(224,185,12)"/><text x="36.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="340" width="9" height="15" fill="rgb(235,43,2)"/><text x="36.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="33" y="356" width="9" height="15" fill="rgb(247,114,28)"/><text x="36.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="372" width="9" height="15" fill="rgb(217,181,21)"/><text x="36.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.79%)</title><rect x="33" y="388" width="9" height="15" fill="rgb(237,165,12)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="404" width="9" height="15" fill="rgb(217,209,1)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="420" width="9" height="15" fill="rgb(217,77,9)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="436" width="9" height="15" fill="rgb(212,203,18)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="33" y="452" width="9" height="15" fill="rgb(218,154,43)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="468" width="9" height="15" fill="rgb(249,223,40)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.79%)</title><rect x="33" y="484" width="9" height="15" fill="rgb(236,70,2)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="500" width="9" height="15" fill="rgb(243,7,19)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="516" width="9" height="15" fill="rgb(207,55,31)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="532" width="9" height="15" fill="rgb(219,41,43)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="33" y="548" width="9" height="15" fill="rgb(248,212,24)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="564" width="9" height="15" fill="rgb(224,93,23)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 0.79%)</title><rect x="33" y="580" width="9" height="15" fill="rgb(231,67,37)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="596" width="9" height="15" fill="rgb(215,111,51)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="612" width="9" height="15" fill="rgb(242,23,9)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="628" width="9" height="15" fill="rgb(241,81,32)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="33" y="644" width="9" height="15" fill="rgb(236,78,34)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="660" width="9" height="15" fill="rgb(252,98,11)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (4 samples, 0.79%)</title><rect x="33" y="676" width="9" height="15" fill="rgb(208,206,27)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="692" width="9" height="15" fill="rgb(220,227,9)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="708" width="9" height="15" fill="rgb(253,190,53)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="724" width="9" height="15" fill="rgb(206,14,48)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.79%)</title><rect x="33" y="740" width="9" height="15" fill="rgb(250,204,40)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.79%)</title><rect x="33" y="756" width="9" height="15" fill="rgb(205,55,40)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (4 samples, 0.79%)</title><rect x="33" y="772" width="9" height="15" fill="rgb(213,67,21)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="788" width="7" height="15" fill="rgb(251,41,53)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="804" width="7" height="15" fill="rgb(241,78,19)"/><text x="38.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="820" width="7" height="15" fill="rgb(210,220,8)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="836" width="7" height="15" fill="rgb(222,224,16)"/><text x="38.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="852" width="7" height="15" fill="rgb(210,179,7)"/><text x="38.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="35" y="868" width="7" height="15" fill="rgb(245,224,48)"/><text x="38.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="884" width="7" height="15" fill="rgb(216,30,24)"/><text x="38.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.59%)</title><rect x="35" y="900" width="7" height="15" fill="rgb(222,1,52)"/><text x="38.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="916" width="7" height="15" fill="rgb(211,179,52)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="932" width="7" height="15" fill="rgb(209,190,26)"/><text x="38.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="948" width="7" height="15" fill="rgb(228,94,26)"/><text x="38.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="35" y="964" width="7" height="15" fill="rgb(252,39,25)"/><text x="38.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="35" y="980" width="7" height="15" fill="rgb(220,115,48)"/><text x="38.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (3 samples, 0.59%)</title><rect x="35" y="996" width="7" height="15" fill="rgb(249,194,32)"/><text x="38.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1012" width="5" height="15" fill="rgb(230,70,53)"/><text x="40.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1028" width="5" height="15" fill="rgb(218,22,47)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1044" width="5" height="15" fill="rgb(226,227,33)"/><text x="40.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1060" width="5" height="15" fill="rgb(215,223,43)"/><text x="40.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1076" width="5" height="15" fill="rgb(227,143,23)"/><text x="40.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="37" y="1092" width="5" height="15" fill="rgb(238,164,48)"/><text x="40.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1108" width="5" height="15" fill="rgb(236,103,26)"/><text x="40.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (2 samples, 0.40%)</title><rect x="37" y="1124" width="5" height="15" fill="rgb(210,104,39)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1140" width="5" height="15" fill="rgb(246,41,21)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1156" width="5" height="15" fill="rgb(226,225,2)"/><text x="40.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1172" width="5" height="15" fill="rgb(241,68,24)"/><text x="40.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="37" y="1188" width="5" height="15" fill="rgb(227,211,52)"/><text x="40.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="37" y="1204" width="5" height="15" fill="rgb(214,205,45)"/><text x="40.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py) (1 samples, 0.20%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(235,36,19)"/><text x="43.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(243,46,25)"/><text x="43.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1252" width="2" height="15" fill="rgb(214,41,33)"/><text x="43.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1268" width="2" height="15" fill="rgb(219,89,31)"/><text x="43.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1284" width="2" height="15" fill="rgb(241,102,16)"/><text x="43.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1300" width="2" height="15" fill="rgb(206,111,25)"/><text x="43.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="1316" width="2" height="15" fill="rgb(252,102,8)"/><text x="43.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1332" width="2" height="15" fill="rgb(209,11,25)"/><text x="43.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py) (1 samples, 0.20%)</title><rect x="40" y="1348" width="2" height="15" fill="rgb(254,201,19)"/><text x="43.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1364" width="2" height="15" fill="rgb(213,105,42)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1380" width="2" height="15" fill="rgb(240,90,30)"/><text x="43.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1396" width="2" height="15" fill="rgb(231,25,38)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1412" width="2" height="15" fill="rgb(206,24,42)"/><text x="43.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1428" width="2" height="15" fill="rgb(252,52,32)"/><text x="43.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="1444" width="2" height="15" fill="rgb(213,142,28)"/><text x="43.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1460" width="2" height="15" fill="rgb(240,148,48)"/><text x="43.00" y="1470.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/transform/__init__.py) (1 samples, 0.20%)</title><rect x="40" y="1476" width="2" height="15" fill="rgb(237,35,36)"/><text x="43.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1492" width="2" height="15" fill="rgb(207,214,20)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1508" width="2" height="15" fill="rgb(225,120,19)"/><text x="43.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="40" y="1524" width="2" height="15" fill="rgb(253,140,22)"/><text x="43.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="1540" width="2" height="15" fill="rgb(227,104,52)"/><text x="43.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="1556" width="2" height="15" fill="rgb(220,31,51)"/><text x="43.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="40" y="1572" width="2" height="15" fill="rgb(222,113,21)"/><text x="43.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1124" width="2" height="15" fill="rgb(228,202,11)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1140" width="2" height="15" fill="rgb(234,148,36)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1156" width="2" height="15" fill="rgb(230,93,11)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1172" width="2" height="15" fill="rgb(221,201,20)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1188" width="2" height="15" fill="rgb(214,174,1)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="42" y="1204" width="2" height="15" fill="rgb(250,203,6)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1220" width="2" height="15" fill="rgb(225,207,46)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1236" width="2" height="15" fill="rgb(242,36,37)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1252" width="2" height="15" fill="rgb(213,227,46)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="42" y="1268" width="2" height="15" fill="rgb(236,229,8)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="42" y="1284" width="2" height="15" fill="rgb(241,199,49)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="42" y="1300" width="2" height="15" fill="rgb(241,217,40)"/><text x="45.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="42" y="1316" width="2" height="15" fill="rgb(218,74,10)"/><text x="45.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.20%)</title><rect x="42" y="1332" width="2" height="15" fill="rgb(251,226,38)"/><text x="45.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.20%)</title><rect x="42" y="1348" width="2" height="15" fill="rgb(213,64,49)"/><text x="45.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.20%)</title><rect x="42" y="1364" width="2" height="15" fill="rgb(223,135,37)"/><text x="45.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.20%)</title><rect x="42" y="1380" width="2" height="15" fill="rgb(225,164,15)"/><text x="45.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="484" width="5" height="15" fill="rgb(246,126,38)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="500" width="5" height="15" fill="rgb(241,212,30)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="516" width="5" height="15" fill="rgb(227,17,38)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="532" width="5" height="15" fill="rgb(252,109,33)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="548" width="5" height="15" fill="rgb(208,129,8)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="564" width="5" height="15" fill="rgb(248,217,20)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.40%)</title><rect x="42" y="580" width="5" height="15" fill="rgb(212,175,29)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="596" width="5" height="15" fill="rgb(226,6,5)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="612" width="5" height="15" fill="rgb(219,136,48)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="628" width="5" height="15" fill="rgb(247,136,40)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="644" width="5" height="15" fill="rgb(207,195,44)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="660" width="5" height="15" fill="rgb(228,60,1)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.40%)</title><rect x="42" y="676" width="5" height="15" fill="rgb(228,50,36)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="692" width="5" height="15" fill="rgb(251,209,46)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="708" width="5" height="15" fill="rgb(209,117,3)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(245,160,16)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(251,20,6)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(248,95,7)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.40%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(214,194,53)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(237,78,13)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(221,128,52)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(207,113,14)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(250,17,5)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(224,9,26)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.40%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(225,153,12)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(223,5,23)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(213,96,44)"/><text x="45.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(205,67,35)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(221,69,12)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(247,39,8)"/><text x="45.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(239,44,24)"/><text x="45.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(218,40,11)"/><text x="45.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(223,188,23)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.40%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(224,44,35)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(232,42,19)"/><text x="45.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(221,102,26)"/><text x="45.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(225,75,23)"/><text x="45.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(208,79,3)"/><text x="45.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(220,152,45)"/><text x="45.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.40%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(244,161,40)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1124" width="3" height="15" fill="rgb(219,123,7)"/><text x="47.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1140" width="3" height="15" fill="rgb(248,171,45)"/><text x="47.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1156" width="3" height="15" fill="rgb(224,95,2)"/><text x="47.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1172" width="3" height="15" fill="rgb(250,153,48)"/><text x="47.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1188" width="3" height="15" fill="rgb(246,179,37)"/><text x="47.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="44" y="1204" width="3" height="15" fill="rgb(250,193,3)"/><text x="47.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1220" width="3" height="15" fill="rgb(227,218,33)"/><text x="47.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.20%)</title><rect x="44" y="1236" width="3" height="15" fill="rgb(237,55,19)"/><text x="47.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1252" width="3" height="15" fill="rgb(208,185,46)"/><text x="47.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1268" width="3" height="15" fill="rgb(218,36,15)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1284" width="3" height="15" fill="rgb(239,225,38)"/><text x="47.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1300" width="3" height="15" fill="rgb(230,72,43)"/><text x="47.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1316" width="3" height="15" fill="rgb(241,98,26)"/><text x="47.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="44" y="1332" width="3" height="15" fill="rgb(251,81,50)"/><text x="47.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1348" width="3" height="15" fill="rgb(234,200,2)"/><text x="47.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.20%)</title><rect x="44" y="1364" width="3" height="15" fill="rgb(236,6,11)"/><text x="47.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1380" width="3" height="15" fill="rgb(253,28,34)"/><text x="47.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1396" width="3" height="15" fill="rgb(229,196,28)"/><text x="47.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1412" width="3" height="15" fill="rgb(239,165,44)"/><text x="47.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="44" y="1428" width="3" height="15" fill="rgb(222,31,35)"/><text x="47.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="44" y="1444" width="3" height="15" fill="rgb(248,140,48)"/><text x="47.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.20%)</title><rect x="44" y="1460" width="3" height="15" fill="rgb(224,67,7)"/><text x="47.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.20%)</title><rect x="44" y="1476" width="3" height="15" fill="rgb(254,141,45)"/><text x="47.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.20%)</title><rect x="44" y="1492" width="3" height="15" fill="rgb(248,112,54)"/><text x="47.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.20%)</title><rect x="47" y="628" width="2" height="15" fill="rgb(206,183,11)"/><text x="50.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="644" width="2" height="15" fill="rgb(243,66,28)"/><text x="50.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="660" width="2" height="15" fill="rgb(218,100,34)"/><text x="50.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="676" width="2" height="15" fill="rgb(237,101,12)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="692" width="2" height="15" fill="rgb(246,159,45)"/><text x="50.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="708" width="2" height="15" fill="rgb(252,120,3)"/><text x="50.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="47" y="724" width="2" height="15" fill="rgb(245,87,32)"/><text x="50.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="47" y="740" width="2" height="15" fill="rgb(223,136,52)"/><text x="50.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.20%)</title><rect x="47" y="756" width="2" height="15" fill="rgb(224,114,43)"/><text x="50.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.20%)</title><rect x="47" y="772" width="2" height="15" fill="rgb(245,173,12)"/><text x="50.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.20%)</title><rect x="47" y="788" width="2" height="15" fill="rgb(247,127,15)"/><text x="50.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.20%)</title><rect x="47" y="804" width="2" height="15" fill="rgb(252,24,48)"/><text x="50.00" y="814.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.20%)</title><rect x="47" y="820" width="2" height="15" fill="rgb(217,101,33)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1892" width="2" height="15" fill="rgb(206,40,18)"/><text x="52.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1908" width="2" height="15" fill="rgb(215,45,15)"/><text x="52.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1924" width="2" height="15" fill="rgb(244,83,5)"/><text x="52.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="1940" width="2" height="15" fill="rgb(246,169,50)"/><text x="52.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1956" width="2" height="15" fill="rgb(205,178,7)"/><text x="52.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.20%)</title><rect x="49" y="1972" width="2" height="15" fill="rgb(225,122,38)"/><text x="52.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="1988" width="2" height="15" fill="rgb(244,16,15)"/><text x="52.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="2004" width="2" height="15" fill="rgb(216,146,35)"/><text x="52.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="2020" width="2" height="15" fill="rgb(234,17,2)"/><text x="52.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="2036" width="2" height="15" fill="rgb(251,26,21)"/><text x="52.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="49" y="2052" width="2" height="15" fill="rgb(239,30,39)"/><text x="52.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="2068" width="2" height="15" fill="rgb(211,223,23)"/><text x="52.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="2084" width="2" height="15" fill="rgb(237,2,20)"/><text x="52.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="49" y="2100" width="2" height="15" fill="rgb(207,212,12)"/><text x="52.00" y="2110.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.99%)</title><rect x="42" y="340" width="12" height="15" fill="rgb(215,214,26)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="356" width="12" height="15" fill="rgb(214,183,35)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="372" width="12" height="15" fill="rgb(220,192,47)"/><text x="45.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="388" width="12" height="15" fill="rgb(243,103,19)"/><text x="45.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.99%)</title><rect x="42" y="404" width="12" height="15" fill="rgb(218,12,9)"/><text x="45.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="420" width="12" height="15" fill="rgb(250,181,17)"/><text x="45.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.99%)</title><rect x="42" y="436" width="12" height="15" fill="rgb(243,100,7)"/><text x="45.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="452" width="12" height="15" fill="rgb(236,173,39)"/><text x="45.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.99%)</title><rect x="42" y="468" width="12" height="15" fill="rgb(206,1,22)"/><text x="45.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="484" width="7" height="15" fill="rgb(228,154,11)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="47" y="500" width="7" height="15" fill="rgb(229,58,52)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="516" width="7" height="15" fill="rgb(250,226,37)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.59%)</title><rect x="47" y="532" width="7" height="15" fill="rgb(219,65,44)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="548" width="7" height="15" fill="rgb(239,141,41)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="564" width="7" height="15" fill="rgb(226,7,8)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="580" width="7" height="15" fill="rgb(239,28,25)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="47" y="596" width="7" height="15" fill="rgb(213,83,21)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="47" y="612" width="7" height="15" fill="rgb(209,90,37)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.40%)</title><rect x="49" y="628" width="5" height="15" fill="rgb(231,186,14)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="644" width="5" height="15" fill="rgb(230,148,35)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="660" width="5" height="15" fill="rgb(221,44,38)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="676" width="5" height="15" fill="rgb(249,226,14)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="692" width="5" height="15" fill="rgb(251,178,33)"/><text x="52.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="708" width="5" height="15" fill="rgb(233,165,5)"/><text x="52.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.40%)</title><rect x="49" y="724" width="5" height="15" fill="rgb(245,41,11)"/><text x="52.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="740" width="5" height="15" fill="rgb(211,40,26)"/><text x="52.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="756" width="5" height="15" fill="rgb(219,38,5)"/><text x="52.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="772" width="5" height="15" fill="rgb(221,115,10)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="788" width="5" height="15" fill="rgb(241,21,43)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="804" width="5" height="15" fill="rgb(208,195,30)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.40%)</title><rect x="49" y="820" width="5" height="15" fill="rgb(235,37,50)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="836" width="5" height="15" fill="rgb(232,212,22)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="852" width="5" height="15" fill="rgb(238,180,34)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="868" width="5" height="15" fill="rgb(226,128,53)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="884" width="5" height="15" fill="rgb(214,146,31)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="900" width="5" height="15" fill="rgb(211,27,49)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.40%)</title><rect x="49" y="916" width="5" height="15" fill="rgb(210,74,43)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="932" width="5" height="15" fill="rgb(247,122,11)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="948" width="5" height="15" fill="rgb(226,117,20)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="964" width="5" height="15" fill="rgb(229,23,17)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="980" width="5" height="15" fill="rgb(212,113,26)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="996" width="5" height="15" fill="rgb(232,68,49)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.40%)</title><rect x="49" y="1012" width="5" height="15" fill="rgb(226,119,39)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1028" width="5" height="15" fill="rgb(223,198,49)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1044" width="5" height="15" fill="rgb(211,59,5)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1060" width="5" height="15" fill="rgb(210,187,7)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1076" width="5" height="15" fill="rgb(218,41,30)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1092" width="5" height="15" fill="rgb(214,0,25)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.40%)</title><rect x="49" y="1108" width="5" height="15" fill="rgb(253,171,10)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1124" width="5" height="15" fill="rgb(243,4,30)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1140" width="5" height="15" fill="rgb(234,27,45)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1156" width="5" height="15" fill="rgb(254,208,26)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1172" width="5" height="15" fill="rgb(231,130,42)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1188" width="5" height="15" fill="rgb(219,176,28)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.40%)</title><rect x="49" y="1204" width="5" height="15" fill="rgb(241,54,0)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1220" width="5" height="15" fill="rgb(220,165,13)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1236" width="5" height="15" fill="rgb(212,104,1)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1252" width="5" height="15" fill="rgb(208,179,51)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1268" width="5" height="15" fill="rgb(224,105,47)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1284" width="5" height="15" fill="rgb(244,40,49)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.40%)</title><rect x="49" y="1300" width="5" height="15" fill="rgb(251,48,6)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1316" width="5" height="15" fill="rgb(220,4,23)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1332" width="5" height="15" fill="rgb(205,73,7)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1348" width="5" height="15" fill="rgb(249,86,32)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1364" width="5" height="15" fill="rgb(253,183,14)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1380" width="5" height="15" fill="rgb(218,23,35)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.40%)</title><rect x="49" y="1396" width="5" height="15" fill="rgb(213,140,5)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1412" width="5" height="15" fill="rgb(213,39,35)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1428" width="5" height="15" fill="rgb(250,54,18)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1444" width="5" height="15" fill="rgb(206,61,47)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1460" width="5" height="15" fill="rgb(229,76,2)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1476" width="5" height="15" fill="rgb(234,167,12)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.40%)</title><rect x="49" y="1492" width="5" height="15" fill="rgb(216,188,23)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1508" width="5" height="15" fill="rgb(223,189,3)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1524" width="5" height="15" fill="rgb(216,38,9)"/><text x="52.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1540" width="5" height="15" fill="rgb(229,197,16)"/><text x="52.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1556" width="5" height="15" fill="rgb(222,115,25)"/><text x="52.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1572" width="5" height="15" fill="rgb(213,73,10)"/><text x="52.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.40%)</title><rect x="49" y="1588" width="5" height="15" fill="rgb(229,183,54)"/><text x="52.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1604" width="5" height="15" fill="rgb(211,53,1)"/><text x="52.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1620" width="5" height="15" fill="rgb(245,217,17)"/><text x="52.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1636" width="5" height="15" fill="rgb(216,116,13)"/><text x="52.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1652" width="5" height="15" fill="rgb(216,117,47)"/><text x="52.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1668" width="5" height="15" fill="rgb(217,200,42)"/><text x="52.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.40%)</title><rect x="49" y="1684" width="5" height="15" fill="rgb(244,159,21)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1700" width="5" height="15" fill="rgb(219,56,22)"/><text x="52.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1716" width="5" height="15" fill="rgb(206,101,9)"/><text x="52.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1732" width="5" height="15" fill="rgb(224,124,54)"/><text x="52.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1748" width="5" height="15" fill="rgb(205,162,37)"/><text x="52.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1764" width="5" height="15" fill="rgb(217,98,9)"/><text x="52.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.40%)</title><rect x="49" y="1780" width="5" height="15" fill="rgb(215,102,30)"/><text x="52.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1796" width="5" height="15" fill="rgb(225,29,51)"/><text x="52.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1812" width="5" height="15" fill="rgb(225,104,52)"/><text x="52.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1828" width="5" height="15" fill="rgb(241,47,7)"/><text x="52.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="49" y="1844" width="5" height="15" fill="rgb(234,138,52)"/><text x="52.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="49" y="1860" width="5" height="15" fill="rgb(210,165,53)"/><text x="52.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.40%)</title><rect x="49" y="1876" width="5" height="15" fill="rgb(252,88,10)"/><text x="52.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.20%)</title><rect x="51" y="1892" width="3" height="15" fill="rgb(249,138,14)"/><text x="54.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.20%)</title><rect x="51" y="1908" width="3" height="15" fill="rgb(207,204,22)"/><text x="54.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.20%)</title><rect x="51" y="1924" width="3" height="15" fill="rgb(252,130,54)"/><text x="54.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.20%)</title><rect x="51" y="1940" width="3" height="15" fill="rgb(210,227,32)"/><text x="54.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.20%)</title><rect x="54" y="580" width="2" height="15" fill="rgb(240,84,20)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="596" width="2" height="15" fill="rgb(237,72,0)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="612" width="2" height="15" fill="rgb(231,191,25)"/><text x="57.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="628" width="2" height="15" fill="rgb(239,68,33)"/><text x="57.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="644" width="2" height="15" fill="rgb(217,7,46)"/><text x="57.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="660" width="2" height="15" fill="rgb(246,137,10)"/><text x="57.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="676" width="2" height="15" fill="rgb(222,27,2)"/><text x="57.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="54" y="692" width="2" height="15" fill="rgb(224,100,42)"/><text x="57.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="708" width="2" height="15" fill="rgb(211,41,12)"/><text x="57.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.20%)</title><rect x="54" y="724" width="2" height="15" fill="rgb(209,100,5)"/><text x="57.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="740" width="2" height="15" fill="rgb(244,156,33)"/><text x="57.00" y="750.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="756" width="2" height="15" fill="rgb(241,222,38)"/><text x="57.00" y="766.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="54" y="772" width="2" height="15" fill="rgb(208,61,26)"/><text x="57.00" y="782.50"></text></g><g><title>&lt;module&gt; (requests/packages.py) (1 samples, 0.20%)</title><rect x="56" y="900" width="2" height="15" fill="rgb(217,146,28)"/><text x="59.00" y="910.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="56" y="916" width="2" height="15" fill="rgb(230,76,11)"/><text x="59.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 1.58%)</title><rect x="42" y="244" width="19" height="15" fill="rgb(253,63,2)"/><text x="45.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="42" y="260" width="19" height="15" fill="rgb(229,41,25)"/><text x="45.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="42" y="276" width="19" height="15" fill="rgb(214,29,18)"/><text x="45.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="42" y="292" width="19" height="15" fill="rgb(254,201,31)"/><text x="45.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.58%)</title><rect x="42" y="308" width="19" height="15" fill="rgb(217,90,27)"/><text x="45.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.58%)</title><rect x="42" y="324" width="19" height="15" fill="rgb(248,118,11)"/><text x="45.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.59%)</title><rect x="54" y="340" width="7" height="15" fill="rgb(239,5,49)"/><text x="57.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="356" width="7" height="15" fill="rgb(215,76,31)"/><text x="57.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="372" width="7" height="15" fill="rgb(239,21,28)"/><text x="57.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="388" width="7" height="15" fill="rgb(222,199,30)"/><text x="57.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="404" width="7" height="15" fill="rgb(212,122,12)"/><text x="57.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="420" width="7" height="15" fill="rgb(216,52,29)"/><text x="57.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="436" width="7" height="15" fill="rgb(233,152,45)"/><text x="57.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="54" y="452" width="7" height="15" fill="rgb(250,61,6)"/><text x="57.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="468" width="7" height="15" fill="rgb(226,6,44)"/><text x="57.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.59%)</title><rect x="54" y="484" width="7" height="15" fill="rgb(237,102,4)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="500" width="7" height="15" fill="rgb(219,87,20)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="516" width="7" height="15" fill="rgb(241,95,13)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="532" width="7" height="15" fill="rgb(242,169,34)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.59%)</title><rect x="54" y="548" width="7" height="15" fill="rgb(227,178,40)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="54" y="564" width="7" height="15" fill="rgb(239,19,52)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.40%)</title><rect x="56" y="580" width="5" height="15" fill="rgb(205,93,47)"/><text x="59.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="596" width="5" height="15" fill="rgb(214,213,35)"/><text x="59.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="612" width="5" height="15" fill="rgb(233,155,32)"/><text x="59.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="628" width="5" height="15" fill="rgb(243,48,3)"/><text x="59.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="56" y="644" width="5" height="15" fill="rgb(236,146,26)"/><text x="59.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="660" width="5" height="15" fill="rgb(233,147,52)"/><text x="59.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.40%)</title><rect x="56" y="676" width="5" height="15" fill="rgb(246,104,38)"/><text x="59.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="692" width="5" height="15" fill="rgb(231,216,16)"/><text x="59.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="708" width="5" height="15" fill="rgb(239,99,28)"/><text x="59.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="724" width="5" height="15" fill="rgb(226,38,24)"/><text x="59.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="56" y="740" width="5" height="15" fill="rgb(236,93,10)"/><text x="59.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="756" width="5" height="15" fill="rgb(227,63,6)"/><text x="59.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.40%)</title><rect x="56" y="772" width="5" height="15" fill="rgb(244,177,37)"/><text x="59.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="788" width="5" height="15" fill="rgb(243,113,16)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="804" width="5" height="15" fill="rgb(219,89,44)"/><text x="59.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="820" width="5" height="15" fill="rgb(250,64,11)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="836" width="5" height="15" fill="rgb(249,89,36)"/><text x="59.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="852" width="5" height="15" fill="rgb(234,107,8)"/><text x="59.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="56" y="868" width="5" height="15" fill="rgb(227,79,12)"/><text x="59.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="56" y="884" width="5" height="15" fill="rgb(208,64,37)"/><text x="59.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.20%)</title><rect x="58" y="900" width="3" height="15" fill="rgb(205,107,23)"/><text x="61.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="916" width="3" height="15" fill="rgb(221,62,3)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="932" width="3" height="15" fill="rgb(254,42,43)"/><text x="61.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="948" width="3" height="15" fill="rgb(235,130,52)"/><text x="61.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="964" width="3" height="15" fill="rgb(220,191,11)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="980" width="3" height="15" fill="rgb(206,109,8)"/><text x="61.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="996" width="3" height="15" fill="rgb(238,29,48)"/><text x="61.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1012" width="3" height="15" fill="rgb(231,35,38)"/><text x="61.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1028" width="3" height="15" fill="rgb(231,218,5)"/><text x="61.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.20%)</title><rect x="58" y="1044" width="3" height="15" fill="rgb(229,54,13)"/><text x="61.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1060" width="3" height="15" fill="rgb(208,96,12)"/><text x="61.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1076" width="3" height="15" fill="rgb(238,62,16)"/><text x="61.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1092" width="3" height="15" fill="rgb(233,8,7)"/><text x="61.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1108" width="3" height="15" fill="rgb(230,85,11)"/><text x="61.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1124" width="3" height="15" fill="rgb(216,96,6)"/><text x="61.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1140" width="3" height="15" fill="rgb(216,19,47)"/><text x="61.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1156" width="3" height="15" fill="rgb(228,130,8)"/><text x="61.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.20%)</title><rect x="58" y="1172" width="3" height="15" fill="rgb(243,129,46)"/><text x="61.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1188" width="3" height="15" fill="rgb(249,7,45)"/><text x="61.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1204" width="3" height="15" fill="rgb(206,191,39)"/><text x="61.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1220" width="3" height="15" fill="rgb(242,97,2)"/><text x="61.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1236" width="3" height="15" fill="rgb(205,15,41)"/><text x="61.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1252" width="3" height="15" fill="rgb(246,34,33)"/><text x="61.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.20%)</title><rect x="58" y="1268" width="3" height="15" fill="rgb(249,36,20)"/><text x="61.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1284" width="3" height="15" fill="rgb(251,10,53)"/><text x="61.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1300" width="3" height="15" fill="rgb(205,125,49)"/><text x="61.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1316" width="3" height="15" fill="rgb(219,42,45)"/><text x="61.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="58" y="1332" width="3" height="15" fill="rgb(245,204,28)"/><text x="61.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="58" y="1348" width="3" height="15" fill="rgb(234,180,26)"/><text x="61.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.20%)</title><rect x="58" y="1364" width="3" height="15" fill="rgb(232,198,47)"/><text x="61.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.20%)</title><rect x="58" y="1380" width="3" height="15" fill="rgb(241,36,40)"/><text x="61.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.20%)</title><rect x="58" y="1396" width="3" height="15" fill="rgb(251,36,8)"/><text x="61.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.20%)</title><rect x="58" y="1412" width="3" height="15" fill="rgb(223,53,14)"/><text x="61.00" y="1422.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="61" y="436" width="2" height="15" fill="rgb(213,193,23)"/><text x="64.00" y="446.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="61" y="452" width="2" height="15" fill="rgb(221,3,10)"/><text x="64.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="68" width="55" height="15" fill="rgb(224,16,10)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="84" width="55" height="15" fill="rgb(223,178,53)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="100" width="55" height="15" fill="rgb(217,5,27)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (24 samples, 4.74%)</title><rect x="10" y="116" width="55" height="15" fill="rgb(235,214,34)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="132" width="55" height="15" fill="rgb(247,103,10)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (24 samples, 4.74%)</title><rect x="10" y="148" width="55" height="15" fill="rgb(250,30,12)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="164" width="55" height="15" fill="rgb(218,138,3)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (24 samples, 4.74%)</title><rect x="10" y="180" width="55" height="15" fill="rgb(215,130,48)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="42" y="196" width="23" height="15" fill="rgb(224,108,27)"/><text x="45.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.98%)</title><rect x="42" y="212" width="23" height="15" fill="rgb(226,66,42)"/><text x="45.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.98%)</title><rect x="42" y="228" width="23" height="15" fill="rgb(226,61,40)"/><text x="45.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.40%)</title><rect x="61" y="244" width="4" height="15" fill="rgb(250,152,25)"/><text x="64.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="260" width="4" height="15" fill="rgb(206,15,53)"/><text x="64.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="276" width="4" height="15" fill="rgb(208,157,13)"/><text x="64.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="292" width="4" height="15" fill="rgb(218,225,26)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(221,8,45)"/><text x="64.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="324" width="4" height="15" fill="rgb(206,83,37)"/><text x="64.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.40%)</title><rect x="61" y="340" width="4" height="15" fill="rgb(229,24,30)"/><text x="64.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="356" width="4" height="15" fill="rgb(207,212,51)"/><text x="64.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.40%)</title><rect x="61" y="372" width="4" height="15" fill="rgb(233,40,53)"/><text x="64.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="388" width="4" height="15" fill="rgb(226,58,0)"/><text x="64.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="404" width="4" height="15" fill="rgb(241,82,6)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="61" y="420" width="4" height="15" fill="rgb(244,98,32)"/><text x="64.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="63" y="436" width="2" height="15" fill="rgb(210,206,12)"/><text x="66.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="63" y="452" width="2" height="15" fill="rgb(249,1,35)"/><text x="66.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.20%)</title><rect x="63" y="468" width="2" height="15" fill="rgb(229,210,51)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="63" y="484" width="2" height="15" fill="rgb(244,210,20)"/><text x="66.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.20%)</title><rect x="63" y="500" width="2" height="15" fill="rgb(251,117,25)"/><text x="66.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.20%)</title><rect x="63" y="516" width="2" height="15" fill="rgb(232,149,48)"/><text x="66.00" y="526.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.20%)</title><rect x="63" y="532" width="2" height="15" fill="rgb(212,139,29)"/><text x="66.00" y="542.50"></text></g><g><title>0x7fe906a1dff9 (?) (1 samples, 0.20%)</title><rect x="68" y="212" width="2" height="15" fill="rgb(237,148,42)"/><text x="71.00" y="222.50"></text></g><g><title>0x7fe906a18ef6 (?) (1 samples, 0.20%)</title><rect x="68" y="228" width="2" height="15" fill="rgb(238,161,17)"/><text x="71.00" y="238.50"></text></g><g><title>0x7fe906a0d962 (?) (1 samples, 0.20%)</title><rect x="68" y="244" width="2" height="15" fill="rgb(223,140,23)"/><text x="71.00" y="254.50"></text></g><g><title>0x7fe906a417a7 (?) (1 samples, 0.20%)</title><rect x="68" y="260" width="2" height="15" fill="rgb(206,225,18)"/><text x="71.00" y="270.50"></text></g><g><title>0x7fe906a41379 (?) (1 samples, 0.20%)</title><rect x="68" y="276" width="2" height="15" fill="rgb(245,84,11)"/><text x="71.00" y="286.50"></text></g><g><title>0x7fe906e9f8b8 (?) (1 samples, 0.20%)</title><rect x="68" y="292" width="2" height="15" fill="rgb(229,85,35)"/><text x="71.00" y="302.50"></text></g><g><title>0x7fe906e9dc7f (?) (1 samples, 0.20%)</title><rect x="68" y="308" width="2" height="15" fill="rgb(224,60,24)"/><text x="71.00" y="318.50"></text></g><g><title>0x7fe906eb099c (?) (1 samples, 0.20%)</title><rect x="68" y="324" width="2" height="15" fill="rgb(250,229,48)"/><text x="71.00" y="334.50"></text></g><g><title>0x7fe906ad2ccd (?) (1 samples, 0.20%)</title><rect x="68" y="340" width="2" height="15" fill="rgb(232,108,0)"/><text x="71.00" y="350.50"></text></g><g><title>0x7fe906e6c5e6 (?) (1 samples, 0.20%)</title><rect x="68" y="356" width="2" height="15" fill="rgb(211,80,19)"/><text x="71.00" y="366.50"></text></g><g><title>0x7fe906e6c486 (?) (1 samples, 0.20%)</title><rect x="68" y="372" width="2" height="15" fill="rgb(236,128,38)"/><text x="71.00" y="382.50"></text></g><g><title>0x7fe906e56c8d (?) (1 samples, 0.20%)</title><rect x="68" y="388" width="2" height="15" fill="rgb(224,118,36)"/><text x="71.00" y="398.50"></text></g><g><title>0x7fe906e56202 (?) (1 samples, 0.20%)</title><rect x="68" y="404" width="2" height="15" fill="rgb(236,160,5)"/><text x="71.00" y="414.50"></text></g><g><title>0x7fe906e55913 (?) (1 samples, 0.20%)</title><rect x="68" y="420" width="2" height="15" fill="rgb(218,91,27)"/><text x="71.00" y="430.50"></text></g><g><title>0x7fe906e544b3 (?) (1 samples, 0.20%)</title><rect x="68" y="436" width="2" height="15" fill="rgb(249,216,48)"/><text x="71.00" y="446.50"></text></g><g><title>0x7fe906e4f620 (?) (1 samples, 0.20%)</title><rect x="68" y="452" width="2" height="15" fill="rgb(220,104,2)"/><text x="71.00" y="462.50"></text></g><g><title>0x7fe906e9be17 (?) (1 samples, 0.20%)</title><rect x="68" y="468" width="2" height="15" fill="rgb(233,6,7)"/><text x="71.00" y="478.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="340" width="2" height="15" fill="rgb(249,139,10)"/><text x="73.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="356" width="2" height="15" fill="rgb(244,47,39)"/><text x="73.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="372" width="2" height="15" fill="rgb(253,160,5)"/><text x="73.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="388" width="2" height="15" fill="rgb(216,86,51)"/><text x="73.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="404" width="2" height="15" fill="rgb(213,69,10)"/><text x="73.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="420" width="2" height="15" fill="rgb(228,199,21)"/><text x="73.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="436" width="2" height="15" fill="rgb(217,56,9)"/><text x="73.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="452" width="2" height="15" fill="rgb(206,81,41)"/><text x="73.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="70" y="468" width="2" height="15" fill="rgb(211,31,21)"/><text x="73.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="70" y="484" width="2" height="15" fill="rgb(225,102,21)"/><text x="73.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="70" y="500" width="2" height="15" fill="rgb(242,86,54)"/><text x="73.00" y="510.50"></text></g><g><title>0x7fe946d60dec (libc-2.29.so) (1 samples, 0.20%)</title><rect x="70" y="516" width="2" height="15" fill="rgb(235,53,43)"/><text x="73.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="372" width="3" height="15" fill="rgb(225,163,28)"/><text x="75.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="388" width="3" height="15" fill="rgb(246,0,25)"/><text x="75.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="404" width="3" height="15" fill="rgb(220,121,37)"/><text x="75.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="420" width="3" height="15" fill="rgb(252,209,51)"/><text x="75.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="436" width="3" height="15" fill="rgb(206,139,21)"/><text x="75.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="452" width="3" height="15" fill="rgb(235,210,5)"/><text x="75.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="72" y="468" width="3" height="15" fill="rgb(233,41,31)"/><text x="75.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="72" y="484" width="3" height="15" fill="rgb(240,124,6)"/><text x="75.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="72" y="500" width="3" height="15" fill="rgb(224,117,23)"/><text x="75.00" y="510.50"></text></g><g><title>onnxruntime::ReduceSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="72" y="340" width="7" height="15" fill="rgb(216,127,5)"/><text x="75.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.59%)</title><rect x="72" y="356" width="7" height="15" fill="rgb(238,147,16)"/><text x="75.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.40%)</title><rect x="75" y="372" width="4" height="15" fill="rgb(243,23,27)"/><text x="78.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.40%)</title><rect x="75" y="388" width="4" height="15" fill="rgb(219,61,0)"/><text x="78.00" y="398.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="79" y="372" width="3" height="15" fill="rgb(237,213,35)"/><text x="82.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="79" y="388" width="3" height="15" fill="rgb(227,153,13)"/><text x="82.00" y="398.50"></text></g><g><title>onnxruntime::Sub&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="79" y="340" width="5" height="15" fill="rgb(215,200,3)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sub&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="79" y="356" width="5" height="15" fill="rgb(232,123,38)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; [clone .constprop.2248] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(231,163,52)"/><text x="85.00" y="382.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="388" width="2" height="15" fill="rgb(206,132,48)"/><text x="85.00" y="398.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="82" y="404" width="2" height="15" fill="rgb(229,200,17)"/><text x="85.00" y="414.50"></text></g><g><title>0x7fe946d5f9b7 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="84" y="372" width="2" height="15" fill="rgb(237,158,0)"/><text x="87.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="86" y="372" width="3" height="15" fill="rgb(231,44,23)"/><text x="89.00" y="382.50"></text></g><g><title>0x7fe946d8014a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="86" y="388" width="3" height="15" fill="rgb(231,77,36)"/><text x="89.00" y="398.50"></text></g><g><title>onnxruntime::Sum_8&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.79%)</title><rect x="84" y="340" width="9" height="15" fill="rgb(218,76,22)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastVariadic&lt;float, float, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Sum_8&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; [clone .isra.816] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.79%)</title><rect x="84" y="356" width="9" height="15" fill="rgb(209,35,9)"/><text x="87.00" y="366.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="89" y="372" width="4" height="15" fill="rgb(241,83,50)"/><text x="92.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="91" y="388" width="2" height="15" fill="rgb(220,132,48)"/><text x="94.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="91" y="404" width="2" height="15" fill="rgb(215,192,12)"/><text x="94.00" y="414.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="91" y="420" width="2" height="15" fill="rgb(244,128,52)"/><text x="94.00" y="430.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="91" y="436" width="2" height="15" fill="rgb(229,19,17)"/><text x="94.00" y="446.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="91" y="452" width="2" height="15" fill="rgb(217,166,54)"/><text x="94.00" y="462.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (13 samples, 2.57%)</title><rect x="65" y="100" width="31" height="15" fill="rgb(231,155,30)"/><text x="68.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 2.57%)</title><rect x="65" y="116" width="31" height="15" fill="rgb(206,43,40)"/><text x="68.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 2.57%)</title><rect x="65" y="132" width="31" height="15" fill="rgb(223,200,25)"/><text x="68.00" y="142.50">&lt;l..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (13 samples, 2.57%)</title><rect x="65" y="148" width="31" height="15" fill="rgb(214,154,33)"/><text x="68.00" y="158.50">ru..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (13 samples, 2.57%)</title><rect x="65" y="164" width="31" height="15" fill="rgb(214,12,12)"/><text x="68.00" y="174.50">_r..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (13 samples, 2.57%)</title><rect x="65" y="180" width="31" height="15" fill="rgb(245,13,31)"/><text x="68.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py) (12 samples, 2.37%)</title><rect x="68" y="196" width="28" height="15" fill="rgb(211,55,28)"/><text x="71.00" y="206.50">r..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="212" width="26" height="15" fill="rgb(234,138,52)"/><text x="73.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="228" width="26" height="15" fill="rgb(253,221,44)"/><text x="73.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="244" width="26" height="15" fill="rgb(217,73,8)"/><text x="73.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="260" width="26" height="15" fill="rgb(237,190,42)"/><text x="73.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="276" width="26" height="15" fill="rgb(233,159,41)"/><text x="73.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="292" width="26" height="15" fill="rgb(248,96,16)"/><text x="73.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="308" width="26" height="15" fill="rgb(207,221,18)"/><text x="73.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.17%)</title><rect x="70" y="324" width="26" height="15" fill="rgb(250,192,38)"/><text x="73.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="93" y="340" width="3" height="15" fill="rgb(230,90,26)"/><text x="96.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="93" y="356" width="3" height="15" fill="rgb(237,132,34)"/><text x="96.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="93" y="372" width="3" height="15" fill="rgb(236,80,39)"/><text x="96.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOutputArgIndex (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="93" y="388" width="3" height="15" fill="rgb(211,97,4)"/><text x="96.00" y="398.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="96" y="132" width="2" height="15" fill="rgb(232,96,27)"/><text x="99.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="96" y="148" width="2" height="15" fill="rgb(234,166,11)"/><text x="99.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="96" y="164" width="2" height="15" fill="rgb(250,94,21)"/><text x="99.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.20%)</title><rect x="96" y="180" width="2" height="15" fill="rgb(208,68,53)"/><text x="99.00" y="190.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="96" y="196" width="2" height="15" fill="rgb(224,135,7)"/><text x="99.00" y="206.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.20%)</title><rect x="96" y="212" width="2" height="15" fill="rgb(205,68,41)"/><text x="99.00" y="222.50"></text></g><g><title>0x7fe9350a98f1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="96" y="228" width="2" height="15" fill="rgb(222,174,22)"/><text x="99.00" y="238.50"></text></g><g><title>google::protobuf::python::ToStringObject (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="96" y="244" width="2" height="15" fill="rgb(232,227,27)"/><text x="99.00" y="254.50"></text></g><g><title>profile_ort (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (15 samples, 2.96%)</title><rect x="65" y="68" width="35" height="15" fill="rgb(229,52,30)"/><text x="68.00" y="78.50">pr..</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (15 samples, 2.96%)</title><rect x="65" y="84" width="35" height="15" fill="rgb(228,112,1)"/><text x="68.00" y="94.50">se..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="96" y="100" width="4" height="15" fill="rgb(243,210,29)"/><text x="99.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="96" y="116" width="4" height="15" fill="rgb(236,106,43)"/><text x="99.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.20%)</title><rect x="98" y="132" width="2" height="15" fill="rgb(229,143,16)"/><text x="101.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.20%)</title><rect x="98" y="148" width="2" height="15" fill="rgb(226,160,18)"/><text x="101.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.20%)</title><rect x="98" y="164" width="2" height="15" fill="rgb(227,71,24)"/><text x="101.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.20%)</title><rect x="98" y="180" width="2" height="15" fill="rgb(241,187,49)"/><text x="101.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_classifier (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(218,75,49)"/><text x="101.00" y="206.50"></text></g><g><title>_samme_r_proba (skl2onnx/operator_converters/ada_boost.py) (1 samples, 0.20%)</title><rect x="98" y="212" width="2" height="15" fill="rgb(211,149,32)"/><text x="101.00" y="222.50"></text></g><g><title>apply_mul (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="98" y="228" width="2" height="15" fill="rgb(246,223,7)"/><text x="101.00" y="238.50"></text></g><g><title>_apply_basic_numerical_operation (onnxconverter_common/onnx_ops.py) (1 samples, 0.20%)</title><rect x="98" y="244" width="2" height="15" fill="rgb(232,16,13)"/><text x="101.00" y="254.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="98" y="260" width="2" height="15" fill="rgb(231,206,50)"/><text x="101.00" y="270.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.20%)</title><rect x="98" y="276" width="2" height="15" fill="rgb(220,165,24)"/><text x="101.00" y="286.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.20%)</title><rect x="98" y="292" width="2" height="15" fill="rgb(215,19,35)"/><text x="101.00" y="302.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.20%)</title><rect x="98" y="308" width="2" height="15" fill="rgb(225,213,8)"/><text x="101.00" y="318.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.20%)</title><rect x="98" y="324" width="2" height="15" fill="rgb(245,39,40)"/><text x="101.00" y="334.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.40%)</title><rect x="222" y="196" width="4" height="15" fill="rgb(238,225,42)"/><text x="225.00" y="206.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.20%)</title><rect x="247" y="244" width="3" height="15" fill="rgb(232,229,2)"/><text x="250.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="247" y="260" width="3" height="15" fill="rgb(247,198,37)"/><text x="250.00" y="270.50"></text></g><g><title>0x7fe946d61028 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="247" y="276" width="3" height="15" fill="rgb(244,175,19)"/><text x="250.00" y="286.50"></text></g><g><title>0x7fe946d5ec3d (libc-2.29.so) (1 samples, 0.20%)</title><rect x="247" y="292" width="3" height="15" fill="rgb(229,205,15)"/><text x="250.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (2 samples, 0.40%)</title><rect x="247" y="212" width="5" height="15" fill="rgb(220,62,25)"/><text x="250.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.40%)</title><rect x="247" y="228" width="5" height="15" fill="rgb(235,96,31)"/><text x="250.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="250" y="244" width="2" height="15" fill="rgb(228,222,10)"/><text x="253.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.20%)</title><rect x="250" y="260" width="2" height="15" fill="rgb(242,39,46)"/><text x="253.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="250" y="276" width="2" height="15" fill="rgb(253,128,44)"/><text x="253.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.20%)</title><rect x="252" y="212" width="2" height="15" fill="rgb(224,98,42)"/><text x="255.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.20%)</title><rect x="252" y="228" width="2" height="15" fill="rgb(207,64,51)"/><text x="255.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.20%)</title><rect x="252" y="244" width="2" height="15" fill="rgb(222,8,4)"/><text x="255.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_equal.py) (1 samples, 0.20%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(248,199,44)"/><text x="257.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.20%)</title><rect x="254" y="228" width="3" height="15" fill="rgb(223,151,36)"/><text x="257.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="254" y="244" width="3" height="15" fill="rgb(206,61,51)"/><text x="257.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="254" y="260" width="3" height="15" fill="rgb(222,10,28)"/><text x="257.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="254" y="276" width="3" height="15" fill="rgb(223,170,29)"/><text x="257.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="254" y="292" width="3" height="15" fill="rgb(241,61,47)"/><text x="257.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.20%)</title><rect x="257" y="244" width="2" height="15" fill="rgb(226,163,28)"/><text x="260.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.20%)</title><rect x="261" y="276" width="3" height="15" fill="rgb(229,37,18)"/><text x="264.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="261" y="292" width="3" height="15" fill="rgb(226,148,21)"/><text x="264.00" y="302.50"></text></g><g><title>0x7fe945f83090 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="261" y="308" width="3" height="15" fill="rgb(244,56,16)"/><text x="264.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (3 samples, 0.59%)</title><rect x="259" y="244" width="7" height="15" fill="rgb(238,112,33)"/><text x="262.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.40%)</title><rect x="261" y="260" width="5" height="15" fill="rgb(254,116,24)"/><text x="264.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="264" y="276" width="2" height="15" fill="rgb(251,65,54)"/><text x="267.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="264" y="292" width="2" height="15" fill="rgb(215,182,2)"/><text x="267.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="264" y="308" width="2" height="15" fill="rgb(221,177,51)"/><text x="267.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (5 samples, 0.99%)</title><rect x="257" y="212" width="11" height="15" fill="rgb(227,15,22)"/><text x="260.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (5 samples, 0.99%)</title><rect x="257" y="228" width="11" height="15" fill="rgb(234,80,20)"/><text x="260.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.20%)</title><rect x="266" y="244" width="2" height="15" fill="rgb(218,123,7)"/><text x="269.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.20%)</title><rect x="266" y="260" width="2" height="15" fill="rgb(239,172,5)"/><text x="269.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="266" y="276" width="2" height="15" fill="rgb(229,117,21)"/><text x="269.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.20%)</title><rect x="268" y="212" width="3" height="15" fill="rgb(207,65,51)"/><text x="271.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.20%)</title><rect x="282" y="244" width="3" height="15" fill="rgb(245,141,42)"/><text x="285.00" y="254.50"></text></g><g><title>0x7fe946d8014e (libc-2.29.so) (1 samples, 0.20%)</title><rect x="282" y="260" width="3" height="15" fill="rgb(251,13,52)"/><text x="285.00" y="270.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.20%)</title><rect x="285" y="244" width="2" height="15" fill="rgb(236,127,16)"/><text x="288.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.59%)</title><rect x="289" y="260" width="7" height="15" fill="rgb(245,115,6)"/><text x="292.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.40%)</title><rect x="292" y="276" width="4" height="15" fill="rgb(241,15,25)"/><text x="295.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (2 samples, 0.40%)</title><rect x="292" y="292" width="4" height="15" fill="rgb(247,108,23)"/><text x="295.00" y="302.50"></text></g><g><title>0x7fe945f80f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="296" y="276" width="3" height="15" fill="rgb(214,2,25)"/><text x="299.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="299" y="276" width="4" height="15" fill="rgb(209,121,47)"/><text x="302.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(219,117,8)"/><text x="304.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.20%)</title><rect x="303" y="276" width="3" height="15" fill="rgb(229,43,42)"/><text x="306.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="306" y="276" width="2" height="15" fill="rgb(241,89,30)"/><text x="309.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.20%)</title><rect x="313" y="340" width="2" height="15" fill="rgb(233,5,8)"/><text x="316.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="313" y="356" width="2" height="15" fill="rgb(246,176,21)"/><text x="316.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="313" y="372" width="2" height="15" fill="rgb(208,97,4)"/><text x="316.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="313" y="388" width="2" height="15" fill="rgb(244,133,33)"/><text x="316.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="313" y="404" width="2" height="15" fill="rgb(219,74,9)"/><text x="316.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.20%)</title><rect x="313" y="420" width="2" height="15" fill="rgb(225,228,39)"/><text x="316.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="313" y="436" width="2" height="15" fill="rgb(216,75,47)"/><text x="316.00" y="446.50"></text></g><g><title>0x7fe946d616df (libc-2.29.so) (1 samples, 0.20%)</title><rect x="313" y="452" width="2" height="15" fill="rgb(229,82,13)"/><text x="316.00" y="462.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.40%)</title><rect x="313" y="324" width="4" height="15" fill="rgb(253,145,19)"/><text x="316.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.20%)</title><rect x="315" y="340" width="2" height="15" fill="rgb(216,159,26)"/><text x="318.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.20%)</title><rect x="315" y="356" width="2" height="15" fill="rgb(249,36,25)"/><text x="318.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.20%)</title><rect x="315" y="372" width="2" height="15" fill="rgb(236,179,0)"/><text x="318.00" y="382.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="317" y="324" width="3" height="15" fill="rgb(210,219,30)"/><text x="320.00" y="334.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="320" y="324" width="2" height="15" fill="rgb(214,9,2)"/><text x="323.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.99%)</title><rect x="313" y="308" width="11" height="15" fill="rgb(233,80,50)"/><text x="316.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.20%)</title><rect x="322" y="324" width="2" height="15" fill="rgb(219,46,10)"/><text x="325.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="324" y="308" width="3" height="15" fill="rgb(243,88,26)"/><text x="327.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 1.78%)</title><rect x="308" y="276" width="21" height="15" fill="rgb(247,50,45)"/><text x="311.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (9 samples, 1.78%)</title><rect x="308" y="292" width="21" height="15" fill="rgb(214,113,53)"/><text x="311.00" y="302.50"></text></g><g><title>sse2_binary_scalar2_multiply_FLOAT (simd.inc.src) (1 samples, 0.20%)</title><rect x="327" y="308" width="2" height="15" fill="rgb(213,79,44)"/><text x="330.00" y="318.50"></text></g><g><title>_mm_set1_ps (xmmintrin.h) (1 samples, 0.20%)</title><rect x="327" y="324" width="2" height="15" fill="rgb(214,100,18)"/><text x="330.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="329" y="276" width="2" height="15" fill="rgb(246,162,23)"/><text x="332.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 5.34%)</title><rect x="273" y="228" width="63" height="15" fill="rgb(235,178,0)"/><text x="276.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (21 samples, 4.15%)</title><rect x="287" y="244" width="49" height="15" fill="rgb(252,16,19)"/><text x="290.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (17 samples, 3.36%)</title><rect x="296" y="260" width="40" height="15" fill="rgb(226,85,35)"/><text x="299.00" y="270.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (2 samples, 0.40%)</title><rect x="331" y="276" width="5" height="15" fill="rgb(241,195,15)"/><text x="334.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="334" y="292" width="2" height="15" fill="rgb(254,186,50)"/><text x="337.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="334" y="308" width="2" height="15" fill="rgb(254,79,27)"/><text x="337.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="336" y="228" width="2" height="15" fill="rgb(232,42,9)"/><text x="339.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="336" y="244" width="2" height="15" fill="rgb(248,111,6)"/><text x="339.00" y="254.50"></text></g><g><title>_argmax (mlprodict/onnxrt/ops_cpu/op_argmax.py) (1 samples, 0.20%)</title><rect x="336" y="260" width="2" height="15" fill="rgb(229,31,4)"/><text x="339.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="336" y="276" width="2" height="15" fill="rgb(217,219,24)"/><text x="339.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="336" y="292" width="2" height="15" fill="rgb(208,40,50)"/><text x="339.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.20%)</title><rect x="336" y="308" width="2" height="15" fill="rgb(246,182,21)"/><text x="339.00" y="318.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.20%)</title><rect x="336" y="324" width="2" height="15" fill="rgb(241,7,33)"/><text x="339.00" y="334.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="336" y="340" width="2" height="15" fill="rgb(220,139,54)"/><text x="339.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.20%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(252,224,52)"/><text x="339.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.20%)</title><rect x="336" y="372" width="2" height="15" fill="rgb(238,189,38)"/><text x="339.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_div.py) (1 samples, 0.20%)</title><rect x="338" y="228" width="3" height="15" fill="rgb(233,221,9)"/><text x="341.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.20%)</title><rect x="338" y="244" width="3" height="15" fill="rgb(217,11,3)"/><text x="341.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="338" y="260" width="3" height="15" fill="rgb(210,139,3)"/><text x="341.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.20%)</title><rect x="338" y="276" width="3" height="15" fill="rgb(225,107,47)"/><text x="341.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="338" y="292" width="3" height="15" fill="rgb(224,135,45)"/><text x="341.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="343" y="260" width="2" height="15" fill="rgb(243,211,53)"/><text x="346.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="343" y="276" width="2" height="15" fill="rgb(235,59,13)"/><text x="346.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="343" y="292" width="2" height="15" fill="rgb(210,221,21)"/><text x="346.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="343" y="308" width="2" height="15" fill="rgb(212,26,7)"/><text x="346.00" y="318.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="348" y="292" width="2" height="15" fill="rgb(223,71,21)"/><text x="351.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.20%)</title><rect x="350" y="324" width="2" height="15" fill="rgb(251,192,4)"/><text x="353.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="350" y="340" width="2" height="15" fill="rgb(253,50,9)"/><text x="353.00" y="350.50"></text></g><g><title>0x7fe946d177a5 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="350" y="356" width="2" height="15" fill="rgb(245,9,27)"/><text x="353.00" y="366.50"></text></g><g><title>0x7fe946d178b8 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="350" y="372" width="2" height="15" fill="rgb(214,53,28)"/><text x="353.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.20%)</title><rect x="352" y="340" width="3" height="15" fill="rgb(243,192,7)"/><text x="355.00" y="350.50"></text></g><g><title>to_64 (npy_extint128.h) (1 samples, 0.20%)</title><rect x="352" y="356" width="3" height="15" fill="rgb(232,84,42)"/><text x="355.00" y="366.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.59%)</title><rect x="350" y="292" width="7" height="15" fill="rgb(221,14,0)"/><text x="353.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.59%)</title><rect x="350" y="308" width="7" height="15" fill="rgb(250,188,40)"/><text x="353.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.40%)</title><rect x="352" y="324" width="5" height="15" fill="rgb(209,166,9)"/><text x="355.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="355" y="340" width="2" height="15" fill="rgb(206,110,50)"/><text x="358.00" y="350.50"></text></g><g><title>0x7fe946d61700 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="355" y="356" width="2" height="15" fill="rgb(242,211,33)"/><text x="358.00" y="366.50"></text></g><g><title>0x7fe946d5eaa4 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="355" y="372" width="2" height="15" fill="rgb(239,6,47)"/><text x="358.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.99%)</title><rect x="348" y="276" width="11" height="15" fill="rgb(241,114,3)"/><text x="351.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="357" y="292" width="2" height="15" fill="rgb(208,151,27)"/><text x="360.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_log.py) (9 samples, 1.78%)</title><rect x="341" y="228" width="21" height="15" fill="rgb(226,77,15)"/><text x="344.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.58%)</title><rect x="343" y="244" width="19" height="15" fill="rgb(239,97,37)"/><text x="346.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.38%)</title><rect x="345" y="260" width="17" height="15" fill="rgb(208,34,6)"/><text x="348.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="359" y="276" width="3" height="15" fill="rgb(233,82,30)"/><text x="362.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="359" y="292" width="3" height="15" fill="rgb(235,101,39)"/><text x="362.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.20%)</title><rect x="359" y="308" width="3" height="15" fill="rgb(252,200,35)"/><text x="362.00" y="318.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="366" y="276" width="3" height="15" fill="rgb(233,75,16)"/><text x="369.00" y="286.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="366" y="292" width="3" height="15" fill="rgb(210,160,54)"/><text x="369.00" y="302.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="366" y="308" width="3" height="15" fill="rgb(251,10,28)"/><text x="369.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.20%)</title><rect x="366" y="324" width="3" height="15" fill="rgb(217,19,9)"/><text x="369.00" y="334.50"></text></g><g><title>npy_cache_import (npy_import.h) (1 samples, 0.20%)</title><rect x="369" y="276" width="2" height="15" fill="rgb(211,132,19)"/><text x="372.00" y="286.50"></text></g><g><title>0x7fe946e3e74a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="376" y="292" width="2" height="15" fill="rgb(207,119,44)"/><text x="379.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="383" y="308" width="2" height="15" fill="rgb(216,23,0)"/><text x="386.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="385" y="324" width="2" height="15" fill="rgb(225,201,31)"/><text x="388.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="385" y="340" width="2" height="15" fill="rgb(215,211,54)"/><text x="388.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="385" y="356" width="2" height="15" fill="rgb(250,5,6)"/><text x="388.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="385" y="372" width="2" height="15" fill="rgb(213,63,27)"/><text x="388.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="385" y="388" width="2" height="15" fill="rgb(246,209,44)"/><text x="388.00" y="398.50"></text></g><g><title>0x7fe945f81600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="394" y="388" width="3" height="15" fill="rgb(209,61,1)"/><text x="397.00" y="398.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (2 samples, 0.40%)</title><rect x="394" y="340" width="5" height="15" fill="rgb(206,155,47)"/><text x="397.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (2 samples, 0.40%)</title><rect x="394" y="356" width="5" height="15" fill="rgb(216,57,19)"/><text x="397.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 0.40%)</title><rect x="394" y="372" width="5" height="15" fill="rgb(247,196,24)"/><text x="397.00" y="382.50"></text></g><g><title>long_index (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="397" y="388" width="2" height="15" fill="rgb(223,140,13)"/><text x="400.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.40%)</title><rect x="399" y="372" width="5" height="15" fill="rgb(219,176,49)"/><text x="402.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="401" y="388" width="3" height="15" fill="rgb(217,141,47)"/><text x="404.00" y="398.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.20%)</title><rect x="404" y="372" width="2" height="15" fill="rgb(224,141,18)"/><text x="407.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.40%)</title><rect x="406" y="404" width="5" height="15" fill="rgb(224,120,2)"/><text x="409.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.40%)</title><rect x="406" y="420" width="5" height="15" fill="rgb(225,144,46)"/><text x="409.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.40%)</title><rect x="406" y="436" width="5" height="15" fill="rgb(240,129,26)"/><text x="409.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.40%)</title><rect x="406" y="452" width="5" height="15" fill="rgb(224,59,31)"/><text x="409.00" y="462.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (3 samples, 0.59%)</title><rect x="406" y="372" width="7" height="15" fill="rgb(209,166,49)"/><text x="409.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (3 samples, 0.59%)</title><rect x="406" y="388" width="7" height="15" fill="rgb(236,183,20)"/><text x="409.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="411" y="404" width="2" height="15" fill="rgb(216,36,41)"/><text x="414.00" y="414.50"></text></g><g><title>0x7fe946d178b8 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="411" y="420" width="2" height="15" fill="rgb(232,95,47)"/><text x="414.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.38%)</title><rect x="399" y="356" width="16" height="15" fill="rgb(228,24,16)"/><text x="402.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.20%)</title><rect x="413" y="372" width="2" height="15" fill="rgb(224,59,36)"/><text x="416.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_sum.py) (24 samples, 4.74%)</title><rect x="362" y="228" width="56" height="15" fill="rgb(224,64,21)"/><text x="365.00" y="238.50">_run ..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (23 samples, 4.55%)</title><rect x="364" y="244" width="54" height="15" fill="rgb(232,216,40)"/><text x="367.00" y="254.50">sum (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (23 samples, 4.55%)</title><rect x="364" y="260" width="54" height="15" fill="rgb(228,213,6)"/><text x="367.00" y="270.50">array..</text></g><g><title>sum (numpy/core/fromnumeric.py) (20 samples, 3.95%)</title><rect x="371" y="276" width="47" height="15" fill="rgb(210,68,12)"/><text x="374.00" y="286.50">sum ..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (17 samples, 3.36%)</title><rect x="378" y="292" width="40" height="15" fill="rgb(246,56,50)"/><text x="381.00" y="302.50">_wr..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 2.77%)</title><rect x="385" y="308" width="33" height="15" fill="rgb(246,229,43)"/><text x="388.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 2.57%)</title><rect x="387" y="324" width="31" height="15" fill="rgb(208,26,45)"/><text x="390.00" y="334.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (8 samples, 1.58%)</title><rect x="399" y="340" width="19" height="15" fill="rgb(234,51,7)"/><text x="402.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="415" y="356" width="3" height="15" fill="rgb(220,227,1)"/><text x="418.00" y="366.50"></text></g><g><title>0x7fe9078bd422 (?) (1 samples, 0.20%)</title><rect x="418" y="244" width="2" height="15" fill="rgb(218,112,13)"/><text x="421.00" y="254.50"></text></g><g><title>0x7fe9078c389e (?) (1 samples, 0.20%)</title><rect x="418" y="260" width="2" height="15" fill="rgb(226,159,22)"/><text x="421.00" y="270.50"></text></g><g><title>0x7fe9078c374f (?) (1 samples, 0.20%)</title><rect x="418" y="276" width="2" height="15" fill="rgb(242,38,20)"/><text x="421.00" y="286.50"></text></g><g><title>0x7fe9078c9a3a (?) (1 samples, 0.20%)</title><rect x="418" y="292" width="2" height="15" fill="rgb(224,44,54)"/><text x="421.00" y="302.50"></text></g><g><title>0x7fe910d25ab9 (?) (1 samples, 0.20%)</title><rect x="418" y="308" width="2" height="15" fill="rgb(232,159,11)"/><text x="421.00" y="318.50"></text></g><g><title>0x7fe910d26ea9 (?) (1 samples, 0.20%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(236,76,7)"/><text x="421.00" y="334.50"></text></g><g><title>0x7fe910d26ea0 (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="420" y="468" width="2" height="15" fill="rgb(213,47,6)"/><text x="423.00" y="478.50"></text></g><g><title>0x7fe910d26ea9 (libgomp.so.1.0.0) (4 samples, 0.79%)</title><rect x="422" y="468" width="10" height="15" fill="rgb(222,200,25)"/><text x="425.00" y="478.50"></text></g><g><title>0x7fe910d26eab (libgomp.so.1.0.0) (5 samples, 0.99%)</title><rect x="432" y="468" width="11" height="15" fill="rgb(248,10,40)"/><text x="435.00" y="478.50"></text></g><g><title>0x7fe910d25ab9 (libgomp.so.1.0.0) (19 samples, 3.75%)</title><rect x="420" y="452" width="44" height="15" fill="rgb(219,128,38)"/><text x="423.00" y="462.50">0x7f..</text></g><g><title>0x7fe910d26ead (libgomp.so.1.0.0) (9 samples, 1.78%)</title><rect x="443" y="468" width="21" height="15" fill="rgb(245,186,34)"/><text x="446.00" y="478.50"></text></g><g><title>0x7fe910d26cfb (libgomp.so.1.0.0) (1 samples, 0.20%)</title><rect x="464" y="484" width="3" height="15" fill="rgb(218,194,28)"/><text x="467.00" y="494.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (22 samples, 4.35%)</title><rect x="420" y="292" width="51" height="15" fill="rgb(249,22,46)"/><text x="423.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (22 samples, 4.35%)</title><rect x="420" y="308" width="51" height="15" fill="rgb(227,15,25)"/><text x="423.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (22 samples, 4.35%)</title><rect x="420" y="324" width="51" height="15" fill="rgb(244,141,49)"/><text x="423.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (22 samples, 4.35%)</title><rect x="420" y="340" width="51" height="15" fill="rgb(206,222,38)"/><text x="423.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h) (22 samples, 4.35%)</title><rect x="420" y="356" width="51" height="15" fill="rgb(227,128,48)"/><text x="423.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (22 samples, 4.35%)</title><rect x="420" y="372" width="51" height="15" fill="rgb(221,180,0)"/><text x="423.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h) (22 samples, 4.35%)</title><rect x="420" y="388" width="51" height="15" fill="rgb(212,102,23)"/><text x="423.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (22 samples, 4.35%)</title><rect x="420" y="404" width="51" height="15" fill="rgb(239,13,33)"/><text x="423.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp) (22 samples, 4.35%)</title><rect x="420" y="420" width="51" height="15" fill="rgb(235,89,7)"/><text x="423.00" y="430.50">Runti..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (22 samples, 4.35%)</title><rect x="420" y="436" width="51" height="15" fill="rgb(227,210,2)"/><text x="423.00" y="446.50">pybin..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.59%)</title><rect x="464" y="452" width="7" height="15" fill="rgb(235,52,7)"/><text x="467.00" y="462.50"></text></g><g><title>0x7fe910d24daa (libgomp.so.1.0.0) (3 samples, 0.59%)</title><rect x="464" y="468" width="7" height="15" fill="rgb(253,15,5)"/><text x="467.00" y="478.50"></text></g><g><title>0x7fe910d26cfd (libgomp.so.1.0.0) (2 samples, 0.40%)</title><rect x="467" y="484" width="4" height="15" fill="rgb(235,202,5)"/><text x="470.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (106 samples, 20.95%)</title><rect x="226" y="196" width="248" height="15" fill="rgb(250,65,31)"/><text x="229.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (87 samples, 17.19%)</title><rect x="271" y="212" width="203" height="15" fill="rgb(223,118,17)"/><text x="274.00" y="222.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py) (24 samples, 4.74%)</title><rect x="418" y="228" width="56" height="15" fill="rgb(207,98,10)"/><text x="421.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (23 samples, 4.55%)</title><rect x="420" y="244" width="54" height="15" fill="rgb(221,165,37)"/><text x="423.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (23 samples, 4.55%)</title><rect x="420" y="260" width="54" height="15" fill="rgb(239,93,28)"/><text x="423.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (23 samples, 4.55%)</title><rect x="420" y="276" width="54" height="15" fill="rgb(236,195,25)"/><text x="423.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.20%)</title><rect x="471" y="292" width="3" height="15" fill="rgb(210,81,9)"/><text x="474.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.20%)</title><rect x="471" y="308" width="3" height="15" fill="rgb(214,124,13)"/><text x="474.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h) (1 samples, 0.20%)</title><rect x="471" y="324" width="3" height="15" fill="rgb(224,84,25)"/><text x="474.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="483" y="228" width="2" height="15" fill="rgb(220,108,44)"/><text x="486.00" y="238.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="483" y="244" width="2" height="15" fill="rgb(241,149,13)"/><text x="486.00" y="254.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="483" y="260" width="2" height="15" fill="rgb(226,29,27)"/><text x="486.00" y="270.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.20%)</title><rect x="483" y="276" width="2" height="15" fill="rgb(244,223,37)"/><text x="486.00" y="286.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.20%)</title><rect x="483" y="292" width="2" height="15" fill="rgb(221,127,43)"/><text x="486.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="483" y="308" width="2" height="15" fill="rgb(228,92,12)"/><text x="486.00" y="318.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="483" y="324" width="2" height="15" fill="rgb(254,166,27)"/><text x="486.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.20%)</title><rect x="483" y="340" width="2" height="15" fill="rgb(234,113,42)"/><text x="486.00" y="350.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="483" y="356" width="2" height="15" fill="rgb(226,180,7)"/><text x="486.00" y="366.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="485" y="244" width="3" height="15" fill="rgb(212,74,31)"/><text x="488.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="506" y="388" width="3" height="15" fill="rgb(249,203,27)"/><text x="509.00" y="398.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="506" y="404" width="3" height="15" fill="rgb(234,206,7)"/><text x="509.00" y="414.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="509" y="404" width="2" height="15" fill="rgb(253,157,22)"/><text x="512.00" y="414.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="513" y="436" width="3" height="15" fill="rgb(209,93,20)"/><text x="516.00" y="446.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.20%)</title><rect x="516" y="436" width="2" height="15" fill="rgb(247,143,17)"/><text x="519.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 0.99%)</title><rect x="511" y="420" width="12" height="15" fill="rgb(244,22,22)"/><text x="514.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.40%)</title><rect x="518" y="436" width="5" height="15" fill="rgb(253,195,13)"/><text x="521.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (2 samples, 0.40%)</title><rect x="518" y="452" width="5" height="15" fill="rgb(208,107,6)"/><text x="521.00" y="462.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (2 samples, 0.40%)</title><rect x="518" y="468" width="5" height="15" fill="rgb(245,77,19)"/><text x="521.00" y="478.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.38%)</title><rect x="509" y="388" width="16" height="15" fill="rgb(224,223,15)"/><text x="512.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.19%)</title><rect x="511" y="404" width="14" height="15" fill="rgb(215,4,25)"/><text x="514.00" y="414.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="523" y="420" width="2" height="15" fill="rgb(207,79,20)"/><text x="526.00" y="430.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="523" y="436" width="2" height="15" fill="rgb(231,229,28)"/><text x="526.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.78%)</title><rect x="506" y="372" width="21" height="15" fill="rgb(254,70,9)"/><text x="509.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="525" y="388" width="2" height="15" fill="rgb(238,124,15)"/><text x="528.00" y="398.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.20%)</title><rect x="525" y="404" width="2" height="15" fill="rgb(213,202,53)"/><text x="528.00" y="414.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.20%)</title><rect x="525" y="420" width="2" height="15" fill="rgb(209,200,20)"/><text x="528.00" y="430.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (11 samples, 2.17%)</title><rect x="504" y="340" width="26" height="15" fill="rgb(205,104,37)"/><text x="507.00" y="350.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.98%)</title><rect x="506" y="356" width="24" height="15" fill="rgb(238,130,24)"/><text x="509.00" y="366.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="527" y="372" width="3" height="15" fill="rgb(238,116,17)"/><text x="530.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="527" y="388" width="3" height="15" fill="rgb(253,191,39)"/><text x="530.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="527" y="404" width="3" height="15" fill="rgb(222,154,4)"/><text x="530.00" y="414.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (3 samples, 0.59%)</title><rect x="530" y="340" width="7" height="15" fill="rgb(218,205,7)"/><text x="533.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.59%)</title><rect x="548" y="356" width="7" height="15" fill="rgb(244,210,14)"/><text x="551.00" y="366.50"></text></g><g><title>_ndim_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="558" y="372" width="2" height="15" fill="rgb(228,95,31)"/><text x="561.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="567" y="404" width="2" height="15" fill="rgb(238,114,50)"/><text x="570.00" y="414.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.20%)</title><rect x="567" y="420" width="2" height="15" fill="rgb(242,53,48)"/><text x="570.00" y="430.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.20%)</title><rect x="567" y="436" width="2" height="15" fill="rgb(234,94,12)"/><text x="570.00" y="446.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.20%)</title><rect x="572" y="436" width="2" height="15" fill="rgb(236,94,49)"/><text x="575.00" y="446.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="572" y="452" width="2" height="15" fill="rgb(237,64,1)"/><text x="575.00" y="462.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="574" y="436" width="2" height="15" fill="rgb(244,128,15)"/><text x="577.00" y="446.50"></text></g><g><title>0x7fe946e3d151 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="574" y="452" width="2" height="15" fill="rgb(213,195,44)"/><text x="577.00" y="462.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.98%)</title><rect x="555" y="356" width="24" height="15" fill="rgb(246,174,13)"/><text x="558.00" y="366.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.58%)</title><rect x="560" y="372" width="19" height="15" fill="rgb(247,18,4)"/><text x="563.00" y="382.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 1.38%)</title><rect x="562" y="388" width="17" height="15" fill="rgb(228,136,11)"/><text x="565.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.79%)</title><rect x="569" y="404" width="10" height="15" fill="rgb(229,206,4)"/><text x="572.00" y="414.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.79%)</title><rect x="569" y="420" width="10" height="15" fill="rgb(214,116,38)"/><text x="572.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="576" y="436" width="3" height="15" fill="rgb(223,75,14)"/><text x="579.00" y="446.50"></text></g><g><title>0x7fe945f80f00 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="579" y="388" width="2" height="15" fill="rgb(212,0,0)"/><text x="582.00" y="398.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="581" y="388" width="2" height="15" fill="rgb(233,163,11)"/><text x="584.00" y="398.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="583" y="388" width="3" height="15" fill="rgb(229,178,16)"/><text x="586.00" y="398.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.20%)</title><rect x="586" y="404" width="2" height="15" fill="rgb(229,129,33)"/><text x="589.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.40%)</title><rect x="586" y="388" width="4" height="15" fill="rgb(214,24,24)"/><text x="589.00" y="398.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="588" y="404" width="2" height="15" fill="rgb(219,73,14)"/><text x="591.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.20%)</title><rect x="590" y="388" width="3" height="15" fill="rgb(214,165,12)"/><text x="593.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.78%)</title><rect x="579" y="372" width="21" height="15" fill="rgb(216,78,13)"/><text x="582.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="593" y="388" width="7" height="15" fill="rgb(216,46,38)"/><text x="596.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (3 samples, 0.59%)</title><rect x="593" y="404" width="7" height="15" fill="rgb(205,105,34)"/><text x="596.00" y="414.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="597" y="420" width="3" height="15" fill="rgb(254,189,48)"/><text x="600.00" y="430.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="597" y="436" width="3" height="15" fill="rgb(232,92,50)"/><text x="600.00" y="446.50"></text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (215 samples, 42.49%)</title><rect x="100" y="100" width="502" height="15" fill="rgb(245,174,18)"/><text x="103.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (215 samples, 42.49%)</title><rect x="100" y="116" width="502" height="15" fill="rgb(223,111,11)"/><text x="103.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (215 samples, 42.49%)</title><rect x="100" y="132" width="502" height="15" fill="rgb(239,165,52)"/><text x="103.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (215 samples, 42.49%)</title><rect x="100" y="148" width="502" height="15" fill="rgb(248,211,28)"/><text x="103.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (215 samples, 42.49%)</title><rect x="100" y="164" width="502" height="15" fill="rgb(254,128,45)"/><text x="103.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (209 samples, 41.30%)</title><rect x="114" y="180" width="488" height="15" fill="rgb(222,220,49)"/><text x="117.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/op_clip.py) (55 samples, 10.87%)</title><rect x="474" y="196" width="128" height="15" fill="rgb(250,71,52)"/><text x="477.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_clip.py) (53 samples, 10.47%)</title><rect x="478" y="212" width="124" height="15" fill="rgb(232,140,7)"/><text x="481.00" y="222.50">_run (mlprodict..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (50 samples, 9.88%)</title><rect x="485" y="228" width="117" height="15" fill="rgb(211,116,48)"/><text x="488.00" y="238.50">clip (&lt;__array..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (49 samples, 9.68%)</title><rect x="488" y="244" width="114" height="15" fill="rgb(228,66,50)"/><text x="491.00" y="254.50">array_implemen..</text></g><g><title>clip (numpy/core/fromnumeric.py) (46 samples, 9.09%)</title><rect x="495" y="260" width="107" height="15" fill="rgb(208,61,18)"/><text x="498.00" y="270.50">clip (numpy/c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (45 samples, 8.89%)</title><rect x="497" y="276" width="105" height="15" fill="rgb(251,16,49)"/><text x="500.00" y="286.50">_wrapfunc (n..</text></g><g><title>array_clip (methods.c) (44 samples, 8.70%)</title><rect x="499" y="292" width="103" height="15" fill="rgb(238,214,13)"/><text x="502.00" y="302.50">array_clip (..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 8.70%)</title><rect x="499" y="308" width="103" height="15" fill="rgb(208,124,44)"/><text x="502.00" y="318.50">forward_ndar..</text></g><g><title>_clip (numpy/core/_methods.py) (44 samples, 8.70%)</title><rect x="499" y="324" width="103" height="15" fill="rgb(237,8,54)"/><text x="502.00" y="334.50">_clip (numpy..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (28 samples, 5.53%)</title><rect x="537" y="340" width="65" height="15" fill="rgb(213,193,37)"/><text x="540.00" y="350.50">_clip_d..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 1.98%)</title><rect x="579" y="356" width="23" height="15" fill="rgb(246,175,41)"/><text x="582.00" y="366.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="600" y="372" width="2" height="15" fill="rgb(225,102,27)"/><text x="603.00" y="382.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(214,1,21)"/><text x="605.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.20%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(217,60,7)"/><text x="605.00" y="286.50"></text></g><g><title>0x7fe9350ad6d5 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="292" width="2" height="15" fill="rgb(223,59,34)"/><text x="605.00" y="302.50"></text></g><g><title>google::protobuf::DynamicMessage::New (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(233,164,25)"/><text x="605.00" y="318.50"></text></g><g><title>google::protobuf::DynamicMessage::DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="324" width="2" height="15" fill="rgb(246,194,6)"/><text x="605.00" y="334.50"></text></g><g><title>google::protobuf::DynamicMessage::SharedCtor (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="602" y="340" width="2" height="15" fill="rgb(252,131,22)"/><text x="605.00" y="350.50"></text></g><g><title>profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (217 samples, 42.89%)</title><rect x="100" y="68" width="506" height="15" fill="rgb(242,91,16)"/><text x="103.00" y="78.50">profile_pyrt (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (217 samples, 42.89%)</title><rect x="100" y="84" width="506" height="15" fill="rgb(236,58,32)"/><text x="103.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="602" y="100" width="4" height="15" fill="rgb(223,202,41)"/><text x="605.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="602" y="116" width="4" height="15" fill="rgb(207,54,6)"/><text x="605.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.40%)</title><rect x="602" y="132" width="4" height="15" fill="rgb(214,171,10)"/><text x="605.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (2 samples, 0.40%)</title><rect x="602" y="148" width="4" height="15" fill="rgb(249,23,40)"/><text x="605.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (2 samples, 0.40%)</title><rect x="602" y="164" width="4" height="15" fill="rgb(217,36,36)"/><text x="605.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (2 samples, 0.40%)</title><rect x="602" y="180" width="4" height="15" fill="rgb(243,147,22)"/><text x="605.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_classifier (skl2onnx/operator_converters/decision_tree.py) (2 samples, 0.40%)</title><rect x="602" y="196" width="4" height="15" fill="rgb(215,33,2)"/><text x="605.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (2 samples, 0.40%)</title><rect x="602" y="212" width="4" height="15" fill="rgb(222,224,48)"/><text x="605.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (2 samples, 0.40%)</title><rect x="602" y="228" width="4" height="15" fill="rgb(209,71,34)"/><text x="605.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="602" y="244" width="4" height="15" fill="rgb(218,173,14)"/><text x="605.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="604" y="260" width="2" height="15" fill="rgb(225,115,22)"/><text x="607.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="604" y="276" width="2" height="15" fill="rgb(220,48,10)"/><text x="607.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="604" y="292" width="2" height="15" fill="rgb(206,131,41)"/><text x="607.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::GetMessageFactory (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="604" y="308" width="2" height="15" fill="rgb(220,45,54)"/><text x="607.00" y="318.50"></text></g><g><title>_compute_proba_from_decision (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.20%)</title><rect x="606" y="164" width="3" height="15" fill="rgb(211,223,36)"/><text x="609.00" y="174.50"></text></g><g><title>softmax (sklearn/utils/extmath.py) (1 samples, 0.20%)</title><rect x="606" y="180" width="3" height="15" fill="rgb(235,117,7)"/><text x="609.00" y="190.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;) (1 samples, 0.20%)</title><rect x="606" y="196" width="3" height="15" fill="rgb(214,135,51)"/><text x="609.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.20%)</title><rect x="606" y="212" width="3" height="15" fill="rgb(211,140,48)"/><text x="609.00" y="222.50"></text></g><g><title>amax (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="606" y="228" width="3" height="15" fill="rgb(243,198,28)"/><text x="609.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.20%)</title><rect x="606" y="244" width="3" height="15" fill="rgb(227,92,16)"/><text x="609.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="606" y="260" width="3" height="15" fill="rgb(251,87,13)"/><text x="609.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.20%)</title><rect x="606" y="276" width="3" height="15" fill="rgb(236,207,21)"/><text x="609.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.20%)</title><rect x="606" y="292" width="3" height="15" fill="rgb(223,44,33)"/><text x="609.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.20%)</title><rect x="606" y="308" width="3" height="15" fill="rgb(242,81,41)"/><text x="609.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="606" y="324" width="3" height="15" fill="rgb(241,113,52)"/><text x="609.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="606" y="340" width="3" height="15" fill="rgb(232,104,41)"/><text x="609.00" y="350.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (3 samples, 0.59%)</title><rect x="634" y="212" width="7" height="15" fill="rgb(212,105,7)"/><text x="637.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.40%)</title><rect x="641" y="212" width="5" height="15" fill="rgb(224,177,4)"/><text x="644.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="644" y="228" width="2" height="15" fill="rgb(237,15,1)"/><text x="647.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="644" y="244" width="2" height="15" fill="rgb(244,37,41)"/><text x="647.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="644" y="260" width="2" height="15" fill="rgb(225,89,7)"/><text x="647.00" y="270.50"></text></g><g><title>PyUFunc_MultiplicationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="651" y="260" width="2" height="15" fill="rgb(221,167,33)"/><text x="654.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="653" y="260" width="2" height="15" fill="rgb(208,213,15)"/><text x="656.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="655" y="260" width="3" height="15" fill="rgb(218,60,20)"/><text x="658.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="658" y="260" width="2" height="15" fill="rgb(254,222,7)"/><text x="661.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="658" y="276" width="2" height="15" fill="rgb(212,45,0)"/><text x="661.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.20%)</title><rect x="658" y="292" width="2" height="15" fill="rgb(245,89,42)"/><text x="661.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="658" y="308" width="2" height="15" fill="rgb(242,16,21)"/><text x="661.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="662" y="292" width="3" height="15" fill="rgb(210,68,51)"/><text x="665.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.20%)</title><rect x="662" y="308" width="3" height="15" fill="rgb(246,16,11)"/><text x="665.00" y="318.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h) (1 samples, 0.20%)</title><rect x="662" y="324" width="3" height="15" fill="rgb(219,122,36)"/><text x="665.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="665" y="292" width="2" height="15" fill="rgb(226,206,4)"/><text x="668.00" y="302.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="667" y="308" width="2" height="15" fill="rgb(216,43,28)"/><text x="670.00" y="318.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="667" y="324" width="2" height="15" fill="rgb(209,15,44)"/><text x="670.00" y="334.50"></text></g><g><title>0x7fe945f82350 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="667" y="340" width="2" height="15" fill="rgb(230,69,12)"/><text x="670.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.78%)</title><rect x="651" y="244" width="21" height="15" fill="rgb(238,217,40)"/><text x="654.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 0.99%)</title><rect x="660" y="260" width="12" height="15" fill="rgb(213,26,18)"/><text x="663.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.79%)</title><rect x="662" y="276" width="10" height="15" fill="rgb(242,126,25)"/><text x="665.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (2 samples, 0.40%)</title><rect x="667" y="292" width="5" height="15" fill="rgb(226,23,54)"/><text x="670.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="669" y="308" width="3" height="15" fill="rgb(205,197,20)"/><text x="672.00" y="318.50"></text></g><g><title>array_multiply (number.c) (12 samples, 2.37%)</title><rect x="646" y="212" width="28" height="15" fill="rgb(209,104,0)"/><text x="649.00" y="222.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.17%)</title><rect x="648" y="228" width="26" height="15" fill="rgb(225,177,26)"/><text x="651.00" y="238.50">u..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="672" y="244" width="2" height="15" fill="rgb(246,131,45)"/><text x="675.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="672" y="260" width="2" height="15" fill="rgb(243,61,35)"/><text x="675.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(214,39,44)"/><text x="675.00" y="286.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.40%)</title><rect x="676" y="228" width="5" height="15" fill="rgb(223,0,53)"/><text x="679.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.40%)</title><rect x="676" y="244" width="5" height="15" fill="rgb(237,180,36)"/><text x="679.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.40%)</title><rect x="676" y="260" width="5" height="15" fill="rgb(212,66,48)"/><text x="679.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="679" y="276" width="2" height="15" fill="rgb(239,150,11)"/><text x="682.00" y="286.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 0.79%)</title><rect x="674" y="212" width="9" height="15" fill="rgb(235,128,9)"/><text x="677.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="681" y="228" width="2" height="15" fill="rgb(207,26,43)"/><text x="684.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="683" y="244" width="3" height="15" fill="rgb(235,93,25)"/><text x="686.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="683" y="260" width="3" height="15" fill="rgb(214,156,50)"/><text x="686.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.20%)</title><rect x="683" y="276" width="3" height="15" fill="rgb(252,82,0)"/><text x="686.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="686" y="308" width="2" height="15" fill="rgb(248,217,40)"/><text x="689.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.20%)</title><rect x="688" y="308" width="2" height="15" fill="rgb(253,102,18)"/><text x="691.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="686" y="292" width="7" height="15" fill="rgb(220,98,19)"/><text x="689.00" y="302.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.20%)</title><rect x="690" y="308" width="3" height="15" fill="rgb(252,73,3)"/><text x="693.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="693" y="292" width="2" height="15" fill="rgb(220,215,44)"/><text x="696.00" y="302.50"></text></g><g><title>array_subtract (number.c) (6 samples, 1.19%)</title><rect x="683" y="212" width="14" height="15" fill="rgb(232,87,7)"/><text x="686.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.19%)</title><rect x="683" y="228" width="14" height="15" fill="rgb(253,168,36)"/><text x="686.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.99%)</title><rect x="686" y="244" width="11" height="15" fill="rgb(227,28,30)"/><text x="689.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 0.99%)</title><rect x="686" y="260" width="11" height="15" fill="rgb(240,199,2)"/><text x="689.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 0.99%)</title><rect x="686" y="276" width="11" height="15" fill="rgb(236,53,33)"/><text x="689.00" y="286.50"></text></g><g><title>prepare_ufunc_output (ufunc_object.c) (1 samples, 0.20%)</title><rect x="695" y="292" width="2" height="15" fill="rgb(248,102,30)"/><text x="698.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="704" y="276" width="3" height="15" fill="rgb(252,113,45)"/><text x="707.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="704" y="292" width="3" height="15" fill="rgb(238,175,34)"/><text x="707.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="704" y="308" width="3" height="15" fill="rgb(228,54,46)"/><text x="707.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="704" y="324" width="3" height="15" fill="rgb(251,41,17)"/><text x="707.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="704" y="340" width="3" height="15" fill="rgb(215,11,15)"/><text x="707.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="707" y="292" width="2" height="15" fill="rgb(208,200,8)"/><text x="710.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.20%)</title><rect x="709" y="292" width="2" height="15" fill="rgb(218,173,32)"/><text x="712.00" y="302.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="709" y="308" width="2" height="15" fill="rgb(212,127,11)"/><text x="712.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="709" y="324" width="2" height="15" fill="rgb(205,20,33)"/><text x="712.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="711" y="340" width="3" height="15" fill="rgb(206,60,51)"/><text x="714.00" y="350.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.20%)</title><rect x="714" y="340" width="2" height="15" fill="rgb(232,103,23)"/><text x="717.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="711" y="324" width="7" height="15" fill="rgb(225,214,53)"/><text x="714.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="716" y="340" width="2" height="15" fill="rgb(205,142,25)"/><text x="719.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.20%)</title><rect x="716" y="356" width="2" height="15" fill="rgb(207,110,45)"/><text x="719.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.20%)</title><rect x="718" y="324" width="3" height="15" fill="rgb(207,89,48)"/><text x="721.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="718" y="340" width="3" height="15" fill="rgb(242,53,37)"/><text x="721.00" y="350.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.20%)</title><rect x="721" y="324" width="2" height="15" fill="rgb(227,99,46)"/><text x="724.00" y="334.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="723" y="324" width="2" height="15" fill="rgb(243,19,17)"/><text x="726.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.20%)</title><rect x="723" y="340" width="2" height="15" fill="rgb(215,71,3)"/><text x="726.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="723" y="356" width="2" height="15" fill="rgb(219,143,20)"/><text x="726.00" y="366.50"></text></g><g><title>0x7fe946d17a19 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="723" y="372" width="2" height="15" fill="rgb(214,177,38)"/><text x="726.00" y="382.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.20%)</title><rect x="723" y="388" width="2" height="15" fill="rgb(225,37,48)"/><text x="726.00" y="398.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (4 samples, 0.79%)</title><rect x="725" y="324" width="10" height="15" fill="rgb(212,5,3)"/><text x="728.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (3 samples, 0.59%)</title><rect x="728" y="340" width="7" height="15" fill="rgb(220,88,41)"/><text x="731.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="732" y="356" width="3" height="15" fill="rgb(232,33,44)"/><text x="735.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.20%)</title><rect x="732" y="372" width="3" height="15" fill="rgb(205,159,30)"/><text x="735.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="732" y="388" width="3" height="15" fill="rgb(232,177,39)"/><text x="735.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="732" y="404" width="3" height="15" fill="rgb(213,189,9)"/><text x="735.00" y="414.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (11 samples, 2.17%)</title><rect x="711" y="308" width="26" height="15" fill="rgb(220,34,24)"/><text x="714.00" y="318.50">P..</text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="735" y="324" width="2" height="15" fill="rgb(246,123,32)"/><text x="738.00" y="334.50"></text></g><g><title>array_sum (methods.c) (19 samples, 3.75%)</title><rect x="697" y="212" width="45" height="15" fill="rgb(253,15,13)"/><text x="700.00" y="222.50">arra..</text></g><g><title>forward_ndarray_method (methods.c) (19 samples, 3.75%)</title><rect x="697" y="228" width="45" height="15" fill="rgb(246,116,52)"/><text x="700.00" y="238.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py) (16 samples, 3.16%)</title><rect x="704" y="244" width="38" height="15" fill="rgb(207,38,26)"/><text x="707.00" y="254.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c) (16 samples, 3.16%)</title><rect x="704" y="260" width="38" height="15" fill="rgb(245,95,19)"/><text x="707.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (15 samples, 2.96%)</title><rect x="707" y="276" width="35" height="15" fill="rgb(232,143,10)"/><text x="710.00" y="286.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (13 samples, 2.57%)</title><rect x="711" y="292" width="31" height="15" fill="rgb(207,180,34)"/><text x="714.00" y="302.50">Py..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.40%)</title><rect x="737" y="308" width="5" height="15" fill="rgb(211,110,3)"/><text x="740.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="737" y="324" width="5" height="15" fill="rgb(217,223,52)"/><text x="740.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="737" y="340" width="5" height="15" fill="rgb(217,189,45)"/><text x="740.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="770" y="356" width="2" height="15" fill="rgb(207,157,14)"/><text x="773.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="770" y="372" width="2" height="15" fill="rgb(228,162,34)"/><text x="773.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="770" y="388" width="2" height="15" fill="rgb(218,220,6)"/><text x="773.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="770" y="404" width="2" height="15" fill="rgb(238,7,30)"/><text x="773.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.20%)</title><rect x="770" y="420" width="2" height="15" fill="rgb(210,47,50)"/><text x="773.00" y="430.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.20%)</title><rect x="772" y="372" width="2" height="15" fill="rgb(232,116,46)"/><text x="775.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="774" y="372" width="3" height="15" fill="rgb(249,23,18)"/><text x="777.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.20%)</title><rect x="774" y="388" width="3" height="15" fill="rgb(245,15,0)"/><text x="777.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.20%)</title><rect x="774" y="404" width="3" height="15" fill="rgb(225,126,18)"/><text x="777.00" y="414.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.20%)</title><rect x="774" y="420" width="3" height="15" fill="rgb(234,184,19)"/><text x="777.00" y="430.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.20%)</title><rect x="774" y="436" width="3" height="15" fill="rgb(249,18,29)"/><text x="777.00" y="446.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.79%)</title><rect x="772" y="356" width="9" height="15" fill="rgb(205,153,39)"/><text x="775.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.40%)</title><rect x="777" y="372" width="4" height="15" fill="rgb(211,19,32)"/><text x="780.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="779" y="388" width="2" height="15" fill="rgb(248,26,2)"/><text x="782.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="779" y="404" width="2" height="15" fill="rgb(223,14,8)"/><text x="782.00" y="414.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (7 samples, 1.38%)</title><rect x="767" y="324" width="17" height="15" fill="rgb(206,137,47)"/><text x="770.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.19%)</title><rect x="770" y="340" width="14" height="15" fill="rgb(247,137,46)"/><text x="773.00" y="350.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.20%)</title><rect x="781" y="356" width="3" height="15" fill="rgb(250,63,21)"/><text x="784.00" y="366.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py) (3 samples, 0.59%)</title><rect x="784" y="324" width="7" height="15" fill="rgb(245,68,32)"/><text x="787.00" y="334.50"></text></g><g><title>0x7fe946e3e161 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="807" y="340" width="2" height="15" fill="rgb(214,194,32)"/><text x="810.00" y="350.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.40%)</title><rect x="809" y="340" width="5" height="15" fill="rgb(249,67,23)"/><text x="812.00" y="350.50"></text></g><g><title>0x7fe946d75e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="821" y="436" width="2" height="15" fill="rgb(231,96,40)"/><text x="824.00" y="446.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (3 samples, 0.59%)</title><rect x="819" y="372" width="7" height="15" fill="rgb(212,164,31)"/><text x="822.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (3 samples, 0.59%)</title><rect x="819" y="388" width="7" height="15" fill="rgb(248,140,21)"/><text x="822.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.40%)</title><rect x="821" y="404" width="5" height="15" fill="rgb(238,85,42)"/><text x="824.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.40%)</title><rect x="821" y="420" width="5" height="15" fill="rgb(248,128,24)"/><text x="824.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="823" y="436" width="3" height="15" fill="rgb(228,2,10)"/><text x="826.00" y="446.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.20%)</title><rect x="828" y="452" width="2" height="15" fill="rgb(224,40,8)"/><text x="831.00" y="462.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.40%)</title><rect x="828" y="420" width="5" height="15" fill="rgb(227,222,50)"/><text x="831.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.40%)</title><rect x="828" y="436" width="5" height="15" fill="rgb(249,16,53)"/><text x="831.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="830" y="452" width="3" height="15" fill="rgb(233,102,18)"/><text x="833.00" y="462.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.20%)</title><rect x="833" y="420" width="2" height="15" fill="rgb(209,169,16)"/><text x="836.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (10 samples, 1.98%)</title><rect x="814" y="340" width="23" height="15" fill="rgb(217,192,23)"/><text x="817.00" y="350.50">n..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 1.58%)</title><rect x="819" y="356" width="18" height="15" fill="rgb(212,58,15)"/><text x="822.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (5 samples, 0.99%)</title><rect x="826" y="372" width="11" height="15" fill="rgb(211,79,42)"/><text x="829.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.99%)</title><rect x="826" y="388" width="11" height="15" fill="rgb(211,89,34)"/><text x="829.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.99%)</title><rect x="826" y="404" width="11" height="15" fill="rgb(226,81,28)"/><text x="829.00" y="414.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.20%)</title><rect x="835" y="420" width="2" height="15" fill="rgb(237,130,22)"/><text x="838.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="837" y="356" width="3" height="15" fill="rgb(252,58,33)"/><text x="840.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="837" y="372" width="3" height="15" fill="rgb(235,48,0)"/><text x="840.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.20%)</title><rect x="837" y="388" width="3" height="15" fill="rgb(228,210,11)"/><text x="840.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.20%)</title><rect x="837" y="404" width="3" height="15" fill="rgb(237,26,21)"/><text x="840.00" y="414.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.20%)</title><rect x="837" y="420" width="3" height="15" fill="rgb(230,4,33)"/><text x="840.00" y="430.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.20%)</title><rect x="842" y="372" width="2" height="15" fill="rgb(223,4,13)"/><text x="845.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="842" y="388" width="2" height="15" fill="rgb(250,193,3)"/><text x="845.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="842" y="404" width="2" height="15" fill="rgb(247,68,24)"/><text x="845.00" y="414.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="844" y="372" width="3" height="15" fill="rgb(249,176,49)"/><text x="847.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="847" y="372" width="2" height="15" fill="rgb(239,199,15)"/><text x="850.00" y="382.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="847" y="388" width="2" height="15" fill="rgb(216,144,16)"/><text x="850.00" y="398.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="847" y="404" width="2" height="15" fill="rgb(215,61,3)"/><text x="850.00" y="414.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="847" y="420" width="2" height="15" fill="rgb(223,8,13)"/><text x="850.00" y="430.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="847" y="436" width="2" height="15" fill="rgb(241,117,49)"/><text x="850.00" y="446.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.20%)</title><rect x="849" y="420" width="2" height="15" fill="rgb(211,62,25)"/><text x="852.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.40%)</title><rect x="849" y="372" width="5" height="15" fill="rgb(243,224,46)"/><text x="852.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.40%)</title><rect x="849" y="388" width="5" height="15" fill="rgb(236,201,37)"/><text x="852.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.40%)</title><rect x="849" y="404" width="5" height="15" fill="rgb(213,156,32)"/><text x="852.00" y="414.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.20%)</title><rect x="851" y="420" width="3" height="15" fill="rgb(215,122,30)"/><text x="854.00" y="430.50"></text></g><g><title>0x7fe946d75e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="858" y="388" width="3" height="15" fill="rgb(247,185,15)"/><text x="861.00" y="398.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="861" y="388" width="2" height="15" fill="rgb(246,143,25)"/><text x="864.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.20%)</title><rect x="863" y="404" width="2" height="15" fill="rgb(232,41,31)"/><text x="866.00" y="414.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="863" y="420" width="2" height="15" fill="rgb(254,44,20)"/><text x="866.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="863" y="436" width="2" height="15" fill="rgb(211,101,18)"/><text x="866.00" y="446.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (6 samples, 1.19%)</title><rect x="854" y="372" width="14" height="15" fill="rgb(251,109,17)"/><text x="857.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (2 samples, 0.40%)</title><rect x="863" y="388" width="5" height="15" fill="rgb(250,195,29)"/><text x="866.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.20%)</title><rect x="865" y="404" width="3" height="15" fill="rgb(240,101,24)"/><text x="868.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (52 samples, 10.28%)</title><rect x="749" y="244" width="121" height="15" fill="rgb(233,199,9)"/><text x="752.00" y="254.50">clip (numpy/cor..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (50 samples, 9.88%)</title><rect x="753" y="260" width="117" height="15" fill="rgb(213,192,17)"/><text x="756.00" y="270.50">_wrapfunc (num..</text></g><g><title>array_clip (methods.c) (48 samples, 9.49%)</title><rect x="758" y="276" width="112" height="15" fill="rgb(207,78,24)"/><text x="761.00" y="286.50">array_clip (m..</text></g><g><title>forward_ndarray_method (methods.c) (48 samples, 9.49%)</title><rect x="758" y="292" width="112" height="15" fill="rgb(240,107,22)"/><text x="761.00" y="302.50">forward_ndarr..</text></g><g><title>_clip (numpy/core/_methods.py) (48 samples, 9.49%)</title><rect x="758" y="308" width="112" height="15" fill="rgb(235,140,6)"/><text x="761.00" y="318.50">_clip (numpy/..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (34 samples, 6.72%)</title><rect x="791" y="324" width="79" height="15" fill="rgb(214,212,19)"/><text x="794.00" y="334.50">_clip_dep..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (14 samples, 2.77%)</title><rect x="837" y="340" width="33" height="15" fill="rgb(216,228,50)"/><text x="840.00" y="350.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.57%)</title><rect x="840" y="356" width="30" height="15" fill="rgb(247,96,32)"/><text x="843.00" y="366.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="868" y="372" width="2" height="15" fill="rgb(244,150,49)"/><text x="871.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.20%)</title><rect x="868" y="388" width="2" height="15" fill="rgb(228,75,23)"/><text x="871.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="868" y="404" width="2" height="15" fill="rgb(222,213,42)"/><text x="871.00" y="414.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (61 samples, 12.06%)</title><rect x="742" y="212" width="142" height="15" fill="rgb(206,73,51)"/><text x="745.00" y="222.50">clip (&lt;__array_fun..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (61 samples, 12.06%)</title><rect x="742" y="228" width="142" height="15" fill="rgb(251,82,30)"/><text x="745.00" y="238.50">array_implement_ar..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (6 samples, 1.19%)</title><rect x="870" y="244" width="14" height="15" fill="rgb(229,204,30)"/><text x="873.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (5 samples, 0.99%)</title><rect x="872" y="260" width="12" height="15" fill="rgb(246,66,30)"/><text x="875.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (5 samples, 0.99%)</title><rect x="872" y="276" width="12" height="15" fill="rgb(214,203,35)"/><text x="875.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (5 samples, 0.99%)</title><rect x="872" y="292" width="12" height="15" fill="rgb(225,118,31)"/><text x="875.00" y="302.50"></text></g><g><title>0x7fe946d75e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="882" y="308" width="2" height="15" fill="rgb(208,175,49)"/><text x="885.00" y="318.50"></text></g><g><title>0x7fe9207a3d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="889" y="228" width="2" height="15" fill="rgb(224,106,46)"/><text x="892.00" y="238.50"></text></g><g><title>0x7fe9207b22bd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="891" y="260" width="2" height="15" fill="rgb(245,134,26)"/><text x="894.00" y="270.50"></text></g><g><title>0x7fe920795604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="893" y="308" width="3" height="15" fill="rgb(238,149,17)"/><text x="896.00" y="318.50"></text></g><g><title>0x7fe92078b10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="898" y="324" width="2" height="15" fill="rgb(239,149,23)"/><text x="901.00" y="334.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.20%)</title><rect x="907" y="372" width="3" height="15" fill="rgb(213,59,37)"/><text x="910.00" y="382.50"></text></g><g><title>0x7fe946d6e6a2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="907" y="388" width="3" height="15" fill="rgb(212,154,24)"/><text x="910.00" y="398.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.20%)</title><rect x="910" y="372" width="2" height="15" fill="rgb(243,182,34)"/><text x="913.00" y="382.50"></text></g><g><title>0x7fe946d5f902 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="910" y="388" width="2" height="15" fill="rgb(220,57,51)"/><text x="913.00" y="398.50"></text></g><g><title>0x7fe9207b12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.78%)</title><rect x="893" y="276" width="21" height="15" fill="rgb(242,94,49)"/><text x="896.00" y="286.50"></text></g><g><title>0x7fe920795d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.78%)</title><rect x="893" y="292" width="21" height="15" fill="rgb(216,92,9)"/><text x="896.00" y="302.50"></text></g><g><title>0x7fe920795666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.58%)</title><rect x="896" y="308" width="18" height="15" fill="rgb(250,74,11)"/><text x="899.00" y="318.50"></text></g><g><title>0x7fe92078b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.19%)</title><rect x="900" y="324" width="14" height="15" fill="rgb(232,197,36)"/><text x="903.00" y="334.50"></text></g><g><title>array_getbuffer (buffer.c) (6 samples, 1.19%)</title><rect x="900" y="340" width="14" height="15" fill="rgb(211,100,10)"/><text x="903.00" y="350.50"></text></g><g><title>_buffer_get_info (buffer.c) (6 samples, 1.19%)</title><rect x="900" y="356" width="14" height="15" fill="rgb(224,4,22)"/><text x="903.00" y="366.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.20%)</title><rect x="912" y="372" width="2" height="15" fill="rgb(243,112,5)"/><text x="915.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.20%)</title><rect x="912" y="388" width="2" height="15" fill="rgb(223,170,43)"/><text x="915.00" y="398.50"></text></g><g><title>0x7fe9207b1364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="914" y="276" width="3" height="15" fill="rgb(228,18,48)"/><text x="917.00" y="286.50"></text></g><g><title>0x7fe9207b14a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="917" y="276" width="2" height="15" fill="rgb(236,42,31)"/><text x="920.00" y="286.50"></text></g><g><title>0x7fe9207b1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.79%)</title><rect x="919" y="276" width="9" height="15" fill="rgb(235,132,34)"/><text x="922.00" y="286.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 0.79%)</title><rect x="919" y="292" width="9" height="15" fill="rgb(220,133,2)"/><text x="922.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="926" y="308" width="2" height="15" fill="rgb(209,79,42)"/><text x="929.00" y="318.50"></text></g><g><title>0x7fe9207b1644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="928" y="276" width="3" height="15" fill="rgb(242,82,32)"/><text x="931.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="928" y="292" width="3" height="15" fill="rgb(210,68,36)"/><text x="931.00" y="302.50"></text></g><g><title>0x7fe9207b16fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="931" y="276" width="2" height="15" fill="rgb(236,66,54)"/><text x="934.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="931" y="292" width="2" height="15" fill="rgb(233,104,13)"/><text x="934.00" y="302.50"></text></g><g><title>0x7fe9207b2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 3.56%)</title><rect x="893" y="260" width="42" height="15" fill="rgb(253,108,38)"/><text x="896.00" y="270.50">0x7..</text></g><g><title>0x7fe9207b1c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="933" y="276" width="2" height="15" fill="rgb(246,178,37)"/><text x="936.00" y="286.50"></text></g><g><title>0x7fe920789529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="933" y="292" width="2" height="15" fill="rgb(223,106,27)"/><text x="936.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.20%)</title><rect x="933" y="308" width="2" height="15" fill="rgb(236,115,24)"/><text x="936.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.20%)</title><rect x="933" y="324" width="2" height="15" fill="rgb(239,69,2)"/><text x="936.00" y="334.50"></text></g><g><title>0x7fe9207a2fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 3.95%)</title><rect x="891" y="244" width="47" height="15" fill="rgb(225,141,53)"/><text x="894.00" y="254.50">0x7f..</text></g><g><title>0x7fe9207b2540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="935" y="260" width="3" height="15" fill="rgb(217,150,30)"/><text x="938.00" y="270.50"></text></g><g><title>0x7fe920787178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="935" y="276" width="3" height="15" fill="rgb(247,74,38)"/><text x="938.00" y="286.50"></text></g><g><title>0x7fe9207a3011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="938" y="244" width="2" height="15" fill="rgb(244,88,16)"/><text x="941.00" y="254.50"></text></g><g><title>0x7fe946d75e7a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="942" y="276" width="3" height="15" fill="rgb(228,158,40)"/><text x="945.00" y="286.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (2 samples, 0.40%)</title><rect x="945" y="276" width="4" height="15" fill="rgb(222,96,53)"/><text x="948.00" y="286.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="947" y="292" width="2" height="15" fill="rgb(225,185,2)"/><text x="950.00" y="302.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.20%)</title><rect x="947" y="308" width="2" height="15" fill="rgb(228,204,27)"/><text x="950.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="949" y="276" width="3" height="15" fill="rgb(209,47,18)"/><text x="952.00" y="286.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.20%)</title><rect x="949" y="292" width="3" height="15" fill="rgb(232,134,31)"/><text x="952.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.40%)</title><rect x="952" y="292" width="4" height="15" fill="rgb(229,218,28)"/><text x="955.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="954" y="308" width="2" height="15" fill="rgb(236,219,51)"/><text x="957.00" y="318.50"></text></g><g><title>0x7fe9207a305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.58%)</title><rect x="940" y="244" width="19" height="15" fill="rgb(238,140,1)"/><text x="943.00" y="254.50"></text></g><g><title>array_take (methods.c) (8 samples, 1.58%)</title><rect x="940" y="260" width="19" height="15" fill="rgb(239,136,45)"/><text x="943.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.59%)</title><rect x="952" y="276" width="7" height="15" fill="rgb(238,23,41)"/><text x="955.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.20%)</title><rect x="956" y="292" width="3" height="15" fill="rgb(242,41,12)"/><text x="959.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.20%)</title><rect x="956" y="308" width="3" height="15" fill="rgb(206,212,37)"/><text x="959.00" y="318.50"></text></g><g><title>0x7fe9207a314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="959" y="244" width="4" height="15" fill="rgb(213,23,24)"/><text x="962.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="961" y="260" width="2" height="15" fill="rgb(231,194,27)"/><text x="964.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="961" y="276" width="2" height="15" fill="rgb(240,77,44)"/><text x="964.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="961" y="292" width="2" height="15" fill="rgb(231,69,37)"/><text x="964.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.20%)</title><rect x="961" y="308" width="2" height="15" fill="rgb(247,205,5)"/><text x="964.00" y="318.50"></text></g><g><title>0x7fe9207a3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 6.32%)</title><rect x="891" y="228" width="75" height="15" fill="rgb(249,187,6)"/><text x="894.00" y="238.50">0x7fe920..</text></g><g><title>0x7fe9207a3522 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="963" y="244" width="3" height="15" fill="rgb(217,139,54)"/><text x="966.00" y="254.50"></text></g><g><title>0x7fe946d80120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="966" y="228" width="2" height="15" fill="rgb(223,143,18)"/><text x="969.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.40%)</title><rect x="991" y="260" width="5" height="15" fill="rgb(222,125,43)"/><text x="994.00" y="270.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.20%)</title><rect x="996" y="260" width="2" height="15" fill="rgb(205,133,9)"/><text x="999.00" y="270.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.59%)</title><rect x="998" y="260" width="7" height="15" fill="rgb(222,146,10)"/><text x="1001.00" y="270.50"></text></g><g><title>0x7fe946e3d143 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1010" y="276" width="2" height="15" fill="rgb(205,136,3)"/><text x="1013.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (4 samples, 0.79%)</title><rect x="1005" y="260" width="10" height="15" fill="rgb(238,77,34)"/><text x="1008.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.20%)</title><rect x="1012" y="276" width="3" height="15" fill="rgb(248,161,52)"/><text x="1015.00" y="286.50"></text></g><g><title>0x7fe946d706d0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1012" y="292" width="3" height="15" fill="rgb(225,39,5)"/><text x="1015.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 1.58%)</title><rect x="1015" y="260" width="18" height="15" fill="rgb(235,69,53)"/><text x="1018.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.40%)</title><rect x="1033" y="260" width="5" height="15" fill="rgb(218,66,49)"/><text x="1036.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.20%)</title><rect x="1036" y="276" width="2" height="15" fill="rgb(228,11,33)"/><text x="1039.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.20%)</title><rect x="1036" y="292" width="2" height="15" fill="rgb(215,154,17)"/><text x="1039.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="1036" y="308" width="2" height="15" fill="rgb(206,168,15)"/><text x="1039.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.20%)</title><rect x="1036" y="324" width="2" height="15" fill="rgb(222,96,16)"/><text x="1039.00" y="334.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.40%)</title><rect x="1038" y="260" width="5" height="15" fill="rgb(251,95,40)"/><text x="1041.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1040" y="276" width="3" height="15" fill="rgb(224,54,51)"/><text x="1043.00" y="286.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.20%)</title><rect x="1040" y="292" width="3" height="15" fill="rgb(250,136,10)"/><text x="1043.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (39 samples, 7.71%)</title><rect x="968" y="228" width="91" height="15" fill="rgb(224,97,41)"/><text x="971.00" y="238.50">_validate_..</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 7.11%)</title><rect x="975" y="244" width="84" height="15" fill="rgb(237,64,16)"/><text x="978.00" y="254.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.38%)</title><rect x="1043" y="260" width="16" height="15" fill="rgb(225,0,6)"/><text x="1046.00" y="270.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.19%)</title><rect x="1045" y="276" width="14" height="15" fill="rgb(227,35,19)"/><text x="1048.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1059" y="260" width="2" height="15" fill="rgb(243,104,54)"/><text x="1062.00" y="270.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c) (2 samples, 0.40%)</title><rect x="1059" y="244" width="5" height="15" fill="rgb(231,35,19)"/><text x="1062.00" y="254.50"></text></g><g><title>count_boolean_trues (item_selection.c) (1 samples, 0.20%)</title><rect x="1061" y="260" width="3" height="15" fill="rgb(236,88,5)"/><text x="1064.00" y="270.50"></text></g><g><title>array_assign_subscript (mapping.c) (3 samples, 0.59%)</title><rect x="1059" y="228" width="7" height="15" fill="rgb(205,110,22)"/><text x="1062.00" y="238.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.20%)</title><rect x="1064" y="244" width="2" height="15" fill="rgb(217,205,25)"/><text x="1067.00" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1071" y="276" width="2" height="15" fill="rgb(242,119,46)"/><text x="1074.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1071" y="292" width="2" height="15" fill="rgb(230,179,53)"/><text x="1074.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1071" y="308" width="2" height="15" fill="rgb(246,28,21)"/><text x="1074.00" y="318.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.20%)</title><rect x="1071" y="324" width="2" height="15" fill="rgb(239,134,28)"/><text x="1074.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1073" y="276" width="2" height="15" fill="rgb(245,198,38)"/><text x="1076.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1073" y="292" width="2" height="15" fill="rgb(247,111,19)"/><text x="1076.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1075" y="276" width="3" height="15" fill="rgb(222,6,1)"/><text x="1078.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1075" y="292" width="3" height="15" fill="rgb(235,22,32)"/><text x="1078.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c) (7 samples, 1.38%)</title><rect x="1066" y="228" width="16" height="15" fill="rgb(230,228,32)"/><text x="1069.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.19%)</title><rect x="1068" y="244" width="14" height="15" fill="rgb(211,203,42)"/><text x="1071.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.19%)</title><rect x="1068" y="260" width="14" height="15" fill="rgb(231,8,49)"/><text x="1071.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1078" y="276" width="4" height="15" fill="rgb(217,77,19)"/><text x="1081.00" y="286.50"></text></g><g><title>0x7fe946d80120 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1080" y="292" width="2" height="15" fill="rgb(232,164,19)"/><text x="1083.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (5 samples, 0.99%)</title><rect x="1082" y="292" width="12" height="15" fill="rgb(253,33,21)"/><text x="1085.00" y="302.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (5 samples, 0.99%)</title><rect x="1082" y="308" width="12" height="15" fill="rgb(207,200,51)"/><text x="1085.00" y="318.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (5 samples, 0.99%)</title><rect x="1082" y="324" width="12" height="15" fill="rgb(230,45,23)"/><text x="1085.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.59%)</title><rect x="1087" y="340" width="7" height="15" fill="rgb(249,23,19)"/><text x="1090.00" y="350.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.59%)</title><rect x="1087" y="356" width="7" height="15" fill="rgb(246,225,41)"/><text x="1090.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.20%)</title><rect x="1094" y="308" width="2" height="15" fill="rgb(244,175,26)"/><text x="1097.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.20%)</title><rect x="1094" y="324" width="2" height="15" fill="rgb(237,201,35)"/><text x="1097.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1101" y="356" width="2" height="15" fill="rgb(245,10,52)"/><text x="1104.00" y="366.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c) (1 samples, 0.20%)</title><rect x="1101" y="372" width="2" height="15" fill="rgb(205,91,34)"/><text x="1104.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.59%)</title><rect x="1099" y="340" width="7" height="15" fill="rgb(232,155,48)"/><text x="1102.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1103" y="356" width="3" height="15" fill="rgb(232,65,49)"/><text x="1106.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.20%)</title><rect x="1106" y="340" width="2" height="15" fill="rgb(248,79,5)"/><text x="1109.00" y="350.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.20%)</title><rect x="1106" y="356" width="2" height="15" fill="rgb(217,39,13)"/><text x="1109.00" y="366.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1106" y="372" width="2" height="15" fill="rgb(246,172,15)"/><text x="1109.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.20%)</title><rect x="1108" y="340" width="2" height="15" fill="rgb(210,188,39)"/><text x="1111.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="1108" y="356" width="2" height="15" fill="rgb(209,191,20)"/><text x="1111.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.20%)</title><rect x="1108" y="372" width="2" height="15" fill="rgb(240,160,47)"/><text x="1111.00" y="382.50"></text></g><g><title>array_sum (methods.c) (13 samples, 2.57%)</title><rect x="1082" y="228" width="31" height="15" fill="rgb(240,37,47)"/><text x="1085.00" y="238.50">ar..</text></g><g><title>forward_ndarray_method (methods.c) (13 samples, 2.57%)</title><rect x="1082" y="244" width="31" height="15" fill="rgb(219,134,31)"/><text x="1085.00" y="254.50">fo..</text></g><g><title>_sum (numpy/core/_methods.py) (13 samples, 2.57%)</title><rect x="1082" y="260" width="31" height="15" fill="rgb(228,8,43)"/><text x="1085.00" y="270.50">_s..</text></g><g><title>ufunc_reduce (ufunc_object.c) (13 samples, 2.57%)</title><rect x="1082" y="276" width="31" height="15" fill="rgb(252,136,43)"/><text x="1085.00" y="286.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (8 samples, 1.58%)</title><rect x="1094" y="292" width="19" height="15" fill="rgb(206,88,32)"/><text x="1097.00" y="302.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 1.38%)</title><rect x="1096" y="308" width="17" height="15" fill="rgb(212,7,41)"/><text x="1099.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (7 samples, 1.38%)</title><rect x="1096" y="324" width="17" height="15" fill="rgb(227,122,46)"/><text x="1099.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.20%)</title><rect x="1110" y="340" width="3" height="15" fill="rgb(250,102,30)"/><text x="1113.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.99%)</title><rect x="1131" y="260" width="12" height="15" fill="rgb(207,5,49)"/><text x="1134.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 2.57%)</title><rect x="1115" y="244" width="30" height="15" fill="rgb(254,194,53)"/><text x="1118.00" y="254.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="1143" y="260" width="2" height="15" fill="rgb(230,66,7)"/><text x="1146.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 2.96%)</title><rect x="1113" y="228" width="35" height="15" fill="rgb(217,203,32)"/><text x="1116.00" y="238.50">ch..</text></g><g><title>isclass (inspect.py) (1 samples, 0.20%)</title><rect x="1145" y="244" width="3" height="15" fill="rgb(215,180,47)"/><text x="1148.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.20%)</title><rect x="1148" y="244" width="2" height="15" fill="rgb(254,209,52)"/><text x="1151.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.20%)</title><rect x="1148" y="260" width="2" height="15" fill="rgb(237,156,34)"/><text x="1151.00" y="270.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.20%)</title><rect x="1150" y="276" width="2" height="15" fill="rgb(207,79,12)"/><text x="1153.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1152" y="276" width="3" height="15" fill="rgb(244,143,25)"/><text x="1155.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1155" y="292" width="2" height="15" fill="rgb(232,225,31)"/><text x="1158.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1155" y="308" width="2" height="15" fill="rgb(254,181,39)"/><text x="1158.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.20%)</title><rect x="1155" y="324" width="2" height="15" fill="rgb(233,171,13)"/><text x="1158.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.79%)</title><rect x="1150" y="260" width="9" height="15" fill="rgb(243,133,9)"/><text x="1153.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1155" y="276" width="4" height="15" fill="rgb(228,142,5)"/><text x="1158.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1157" y="292" width="2" height="15" fill="rgb(209,205,21)"/><text x="1160.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.20%)</title><rect x="1157" y="308" width="2" height="15" fill="rgb(234,89,5)"/><text x="1160.00" y="318.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1159" y="260" width="3" height="15" fill="rgb(245,178,4)"/><text x="1162.00" y="270.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py) (120 samples, 23.72%)</title><rect x="884" y="212" width="280" height="15" fill="rgb(235,5,41)"/><text x="887.00" y="222.50">predict_proba (sklearn/tree/_classes...</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.38%)</title><rect x="1148" y="228" width="16" height="15" fill="rgb(221,121,31)"/><text x="1151.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.19%)</title><rect x="1150" y="244" width="14" height="15" fill="rgb(211,152,39)"/><text x="1153.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1162" y="260" width="2" height="15" fill="rgb(232,89,24)"/><text x="1165.00" y="270.50"></text></g><g><title>tuple_all_none (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1162" y="276" width="2" height="15" fill="rgb(219,97,2)"/><text x="1165.00" y="286.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1164" y="244" width="2" height="15" fill="rgb(243,8,25)"/><text x="1167.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py) (240 samples, 47.43%)</title><rect x="609" y="180" width="560" height="15" fill="rgb(225,144,9)"/><text x="612.00" y="190.50">&lt;genexpr&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_samme_proba (sklearn/ensemble/_weight_boosting.py) (240 samples, 47.43%)</title><rect x="609" y="196" width="560" height="15" fill="rgb(207,176,24)"/><text x="612.00" y="206.50">_samme_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1164" y="212" width="5" height="15" fill="rgb(211,102,21)"/><text x="1167.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.40%)</title><rect x="1164" y="228" width="5" height="15" fill="rgb(252,189,4)"/><text x="1167.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1166" y="244" width="3" height="15" fill="rgb(245,140,9)"/><text x="1169.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(212,227,28)"/><text x="1169.00" y="270.50"></text></g><g><title>PyUFunc_d_d (loops.c.src) (1 samples, 0.20%)</title><rect x="1166" y="276" width="3" height="15" fill="rgb(231,40,39)"/><text x="1169.00" y="286.50"></text></g><g><title>0x7fe946f31fcb (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1166" y="292" width="3" height="15" fill="rgb(247,222,46)"/><text x="1169.00" y="302.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1169" y="228" width="2" height="15" fill="rgb(219,74,29)"/><text x="1172.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.20%)</title><rect x="1171" y="228" width="2" height="15" fill="rgb(216,115,39)"/><text x="1174.00" y="238.50"></text></g><g><title>array_add (number.c) (3 samples, 0.59%)</title><rect x="1169" y="180" width="7" height="15" fill="rgb(251,227,38)"/><text x="1172.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1169" y="196" width="7" height="15" fill="rgb(235,177,36)"/><text x="1172.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.59%)</title><rect x="1169" y="212" width="7" height="15" fill="rgb(250,42,36)"/><text x="1172.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1173" y="228" width="3" height="15" fill="rgb(221,129,9)"/><text x="1176.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.20%)</title><rect x="1173" y="244" width="3" height="15" fill="rgb(223,115,43)"/><text x="1176.00" y="254.50"></text></g><g><title>profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (245 samples, 48.42%)</title><rect x="606" y="68" width="572" height="15" fill="rgb(234,55,27)"/><text x="609.00" y="78.50">profile_skl (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (245 samples, 48.42%)</title><rect x="606" y="84" width="572" height="15" fill="rgb(230,94,41)"/><text x="609.00" y="94.50">setup_profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (245 samples, 48.42%)</title><rect x="606" y="100" width="572" height="15" fill="rgb(212,60,29)"/><text x="609.00" y="110.50">profile (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (245 samples, 48.42%)</title><rect x="606" y="116" width="572" height="15" fill="rgb(230,34,18)"/><text x="609.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (245 samples, 48.42%)</title><rect x="606" y="132" width="572" height="15" fill="rgb(212,93,42)"/><text x="609.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/ensemble/_weight_boosting.py) (245 samples, 48.42%)</title><rect x="606" y="148" width="572" height="15" fill="rgb(225,20,5)"/><text x="609.00" y="158.50">predict_proba (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>decision_function (sklearn/ensemble/_weight_boosting.py) (244 samples, 48.22%)</title><rect x="609" y="164" width="569" height="15" fill="rgb(233,119,32)"/><text x="612.00" y="174.50">decision_function (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.20%)</title><rect x="1176" y="180" width="2" height="15" fill="rgb(244,55,37)"/><text x="1179.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.20%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(234,147,51)"/><text x="1179.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.20%)</title><rect x="1176" y="212" width="2" height="15" fill="rgb(216,220,24)"/><text x="1179.00" y="222.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (3 samples, 0.59%)</title><rect x="1178" y="180" width="7" height="15" fill="rgb(212,183,13)"/><text x="1181.00" y="190.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (3 samples, 0.59%)</title><rect x="1178" y="196" width="7" height="15" fill="rgb(218,32,49)"/><text x="1181.00" y="206.50"></text></g><g><title>get_params (sklearn/base.py) (3 samples, 0.59%)</title><rect x="1178" y="212" width="7" height="15" fill="rgb(213,182,18)"/><text x="1181.00" y="222.50"></text></g><g><title>_get_param_names (sklearn/base.py) (3 samples, 0.59%)</title><rect x="1178" y="228" width="7" height="15" fill="rgb(214,83,40)"/><text x="1181.00" y="238.50"></text></g><g><title>signature (inspect.py) (2 samples, 0.40%)</title><rect x="1180" y="244" width="5" height="15" fill="rgb(245,80,38)"/><text x="1183.00" y="254.50"></text></g><g><title>from_callable (inspect.py) (2 samples, 0.40%)</title><rect x="1180" y="260" width="5" height="15" fill="rgb(230,139,15)"/><text x="1183.00" y="270.50"></text></g><g><title>_signature_from_callable (inspect.py) (2 samples, 0.40%)</title><rect x="1180" y="276" width="5" height="15" fill="rgb(211,154,47)"/><text x="1183.00" y="286.50"></text></g><g><title>_signature_from_function (inspect.py) (2 samples, 0.40%)</title><rect x="1180" y="292" width="5" height="15" fill="rgb(234,105,3)"/><text x="1183.00" y="302.50"></text></g><g><title>__init__ (inspect.py) (2 samples, 0.40%)</title><rect x="1180" y="308" width="5" height="15" fill="rgb(215,9,9)"/><text x="1183.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py) (1 samples, 0.20%)</title><rect x="1183" y="324" width="2" height="15" fill="rgb(233,212,20)"/><text x="1186.00" y="334.50"></text></g><g><title>0x7fe920797b11 (?) (1 samples, 0.20%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(208,138,46)"/><text x="1188.00" y="222.50"></text></g><g><title>0x7fe9207c910a (?) (1 samples, 0.20%)</title><rect x="1185" y="228" width="2" height="15" fill="rgb(214,47,34)"/><text x="1188.00" y="238.50"></text></g><g><title>0x7fe9209f4d8c (?) (1 samples, 0.20%)</title><rect x="1185" y="244" width="2" height="15" fill="rgb(222,62,51)"/><text x="1188.00" y="254.50"></text></g><g><title>0x7fe9209edd50 (?) (1 samples, 0.20%)</title><rect x="1185" y="260" width="2" height="15" fill="rgb(254,182,11)"/><text x="1188.00" y="270.50"></text></g><g><title>0x7fe9209edcf3 (?) (1 samples, 0.20%)</title><rect x="1185" y="276" width="2" height="15" fill="rgb(216,183,24)"/><text x="1188.00" y="286.50"></text></g><g><title>all (506 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,193,48)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (506 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(229,142,35)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py)</text></g><g><title>start (bench_AdaBoostClassifier_default_b_cl_1_4_12_float_.py) (5 samples, 0.99%)</title><rect x="1178" y="68" width="12" height="15" fill="rgb(209,58,45)"/><text x="1181.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostClassifier/bench_AdaBoostClassifier_default_b_cl.py) (5 samples, 0.99%)</title><rect x="1178" y="84" width="12" height="15" fill="rgb(217,22,40)"/><text x="1181.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.99%)</title><rect x="1178" y="100" width="12" height="15" fill="rgb(205,80,12)"/><text x="1181.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.99%)</title><rect x="1178" y="116" width="12" height="15" fill="rgb(240,61,6)"/><text x="1181.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.99%)</title><rect x="1178" y="132" width="12" height="15" fill="rgb(240,16,17)"/><text x="1181.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.99%)</title><rect x="1178" y="148" width="12" height="15" fill="rgb(225,65,39)"/><text x="1181.00" y="158.50"></text></g><g><title>_boost_real (sklearn/ensemble/_weight_boosting.py) (5 samples, 0.99%)</title><rect x="1178" y="164" width="12" height="15" fill="rgb(232,147,28)"/><text x="1181.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.40%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(248,4,22)"/><text x="1188.00" y="190.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.40%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(235,225,24)"/><text x="1188.00" y="206.50"></text></g><g><title>0x7fe920797b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(223,128,22)"/><text x="1190.00" y="222.50"></text></g><g><title>0x7fe9207c910a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(218,45,41)"/><text x="1190.00" y="238.50"></text></g><g><title>0x7fe9209f4e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(236,119,53)"/><text x="1190.00" y="254.50"></text></g><g><title>0x7fe920c30e33 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(221,142,10)"/><text x="1190.00" y="270.50"></text></g></g></svg>