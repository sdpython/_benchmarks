<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(234,60,13)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(230,120,6)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(253,17,31)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(235,46,19)"/><text x="13.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="868" width="1" height="15" fill="rgb(226,225,36)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="884" width="1" height="15" fill="rgb(226,61,31)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="900" width="1" height="15" fill="rgb(221,117,52)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="916" width="1" height="15" fill="rgb(239,116,34)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(206,61,5)"/><text x="14.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(239,199,18)"/><text x="14.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(241,78,32)"/><text x="14.00" y="974.50"></text></g><g><title>0x7fb885795237 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(219,193,22)"/><text x="14.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(232,137,28)"/><text x="15.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(208,174,39)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(211,66,27)"/><text x="15.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.25%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(238,111,28)"/><text x="15.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(245,61,40)"/><text x="17.00" y="974.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(225,22,27)"/><text x="18.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(252,83,48)"/><text x="18.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(212,205,3)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(228,176,18)"/><text x="18.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(235,44,6)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.88%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(232,144,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(235,9,38)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(219,95,52)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(241,137,1)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(206,221,17)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(224,222,53)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 0.88%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(211,6,33)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(237,62,31)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(219,168,22)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(244,12,32)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(213,187,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(251,69,21)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 0.88%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(212,141,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(235,111,13)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(236,29,39)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(230,81,46)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(206,169,4)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(219,121,21)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 0.88%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(237,111,36)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(231,167,10)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(213,57,36)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(221,110,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(237,216,46)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(212,122,25)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(245,105,22)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(221,161,16)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(244,210,28)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.88%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(233,141,45)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(254,111,32)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(207,200,16)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(218,127,32)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(221,154,11)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(242,61,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.88%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(239,112,2)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 0.88%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(250,223,27)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 0.88%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(221,0,2)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 0.63%)</title><rect x="12" y="868" width="8" height="15" fill="rgb(239,59,39)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (5 samples, 0.63%)</title><rect x="12" y="884" width="8" height="15" fill="rgb(225,117,29)"/><text x="15.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.38%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(239,178,18)"/><text x="18.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.13%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(229,191,4)"/><text x="21.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.13%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(249,97,2)"/><text x="21.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.13%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(207,191,48)"/><text x="21.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(230,139,7)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(240,210,31)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(245,138,38)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(205,181,29)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(211,3,11)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.13%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(251,112,13)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(225,42,10)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(220,186,51)"/><text x="23.00" y="910.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(224,46,25)"/><text x="23.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(238,163,21)"/><text x="23.00" y="942.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(224,7,1)"/><text x="23.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(236,110,46)"/><text x="23.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(254,197,24)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(252,41,9)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(230,18,45)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(251,8,41)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(251,121,45)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.13%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(251,36,54)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(249,0,8)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.25%)</title><rect x="20" y="292" width="3" height="15" fill="rgb(235,176,17)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="308" width="3" height="15" fill="rgb(222,128,50)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="324" width="3" height="15" fill="rgb(250,220,26)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="340" width="3" height="15" fill="rgb(219,36,24)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="20" y="356" width="3" height="15" fill="rgb(243,89,8)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="372" width="3" height="15" fill="rgb(231,124,22)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.25%)</title><rect x="20" y="388" width="3" height="15" fill="rgb(224,93,16)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="404" width="3" height="15" fill="rgb(218,88,21)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="420" width="3" height="15" fill="rgb(233,30,50)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="436" width="3" height="15" fill="rgb(229,27,14)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="20" y="452" width="3" height="15" fill="rgb(219,122,3)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="468" width="3" height="15" fill="rgb(232,216,15)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.25%)</title><rect x="20" y="484" width="3" height="15" fill="rgb(234,35,4)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(206,161,3)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(207,204,53)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="532" width="3" height="15" fill="rgb(230,203,3)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="20" y="548" width="3" height="15" fill="rgb(236,95,13)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="564" width="3" height="15" fill="rgb(220,79,27)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.25%)</title><rect x="20" y="580" width="3" height="15" fill="rgb(238,224,42)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="596" width="3" height="15" fill="rgb(238,64,15)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="612" width="3" height="15" fill="rgb(236,100,34)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="628" width="3" height="15" fill="rgb(242,132,17)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="20" y="644" width="3" height="15" fill="rgb(207,63,23)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="660" width="3" height="15" fill="rgb(211,57,5)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.25%)</title><rect x="20" y="676" width="3" height="15" fill="rgb(218,176,19)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="692" width="3" height="15" fill="rgb(236,147,3)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="708" width="3" height="15" fill="rgb(245,199,22)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="724" width="3" height="15" fill="rgb(216,196,14)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="20" y="740" width="3" height="15" fill="rgb(236,84,51)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="20" y="756" width="3" height="15" fill="rgb(226,168,42)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.25%)</title><rect x="20" y="772" width="3" height="15" fill="rgb(210,102,10)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(208,228,31)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(218,77,18)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(242,211,35)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(224,25,47)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(248,210,33)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(235,202,42)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(210,48,29)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.13%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(238,101,23)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(229,207,26)"/><text x="24.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(250,114,27)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(233,20,35)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(217,214,38)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(207,30,15)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(232,101,35)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(210,113,3)"/><text x="24.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.13%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(224,227,35)"/><text x="24.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.13%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(223,138,49)"/><text x="24.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.13%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(213,225,32)"/><text x="24.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(246,118,33)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(226,9,43)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(215,36,51)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(240,144,30)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(217,178,8)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.13%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(208,153,52)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(227,8,27)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(238,15,48)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(232,116,7)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(210,138,45)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(213,79,42)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(206,39,23)"/><text x="26.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(217,227,21)"/><text x="26.00" y="1326.50"></text></g><g><title>compile (re.py) (1 samples, 0.13%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(236,200,35)"/><text x="26.00" y="1342.50"></text></g><g><title>_compile (re.py) (1 samples, 0.13%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(243,66,42)"/><text x="26.00" y="1358.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.13%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(239,1,4)"/><text x="26.00" y="1374.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(225,123,3)"/><text x="26.00" y="1390.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.13%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(246,4,34)"/><text x="26.00" y="1406.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.13%)</title><rect x="23" y="1412" width="1" height="15" fill="rgb(254,210,34)"/><text x="26.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="484" width="3" height="15" fill="rgb(247,82,4)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="500" width="3" height="15" fill="rgb(240,16,2)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="516" width="3" height="15" fill="rgb(219,25,27)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(248,125,38)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="548" width="3" height="15" fill="rgb(233,62,32)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="564" width="3" height="15" fill="rgb(208,113,20)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.25%)</title><rect x="23" y="580" width="3" height="15" fill="rgb(241,80,22)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="596" width="3" height="15" fill="rgb(248,138,47)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="612" width="3" height="15" fill="rgb(235,59,38)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(232,152,38)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(224,202,42)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(223,99,28)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.25%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(218,107,21)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(215,152,12)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(211,85,5)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(221,71,36)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(215,153,7)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(214,22,37)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.25%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(211,170,29)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(245,104,40)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(226,52,6)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(206,6,31)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(225,39,26)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(242,85,20)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.25%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(221,125,33)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(233,75,15)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(225,2,44)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(246,118,34)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(229,9,27)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(231,156,35)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(219,119,45)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(218,154,37)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(232,26,27)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.25%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(233,163,41)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(212,88,18)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(239,133,11)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(216,184,12)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(251,13,33)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(224,5,12)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.25%)</title><rect x="23" y="1108" width="3" height="15" fill="rgb(226,100,22)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(250,187,21)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(246,84,26)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(224,171,49)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(217,84,15)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(218,7,16)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(211,163,13)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(221,17,46)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(235,227,39)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(242,6,47)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(221,23,31)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(245,216,14)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(237,208,9)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(247,2,46)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(221,132,44)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(253,140,0)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.13%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(211,33,47)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(253,182,14)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(226,121,14)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(215,167,1)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(245,165,26)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(238,197,1)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(251,111,32)"/><text x="27.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(253,150,40)"/><text x="27.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(251,71,5)"/><text x="27.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(207,187,43)"/><text x="27.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(242,58,28)"/><text x="27.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(219,68,22)"/><text x="27.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(211,10,43)"/><text x="27.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.13%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(228,65,22)"/><text x="27.00" y="1582.50"></text></g><g><title>0x7fb873aa27d7 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(248,221,28)"/><text x="27.00" y="1598.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(252,38,52)"/><text x="27.00" y="1614.50"></text></g><g><title>google::protobuf::DynamicMessage::~DynamicMessage (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(232,84,41)"/><text x="27.00" y="1630.50"></text></g><g><title>0x7fb85c8dc40e (?) (1 samples, 0.13%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(215,97,20)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(221,43,44)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(244,116,51)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(234,168,12)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(207,38,1)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(221,137,22)"/><text x="29.00" y="1006.50"></text></g><g><title>0x7fb85c695cd2 (?) (1 samples, 0.13%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(252,103,20)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(237,216,31)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(253,171,12)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(240,125,17)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(205,85,50)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(244,95,13)"/><text x="29.00" y="1102.50"></text></g><g><title>0x7fb85bd8b0e5 (?) (1 samples, 0.13%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(226,145,44)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(237,189,11)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(218,159,19)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(236,156,37)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(224,126,19)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(220,202,51)"/><text x="29.00" y="1198.50"></text></g><g><title>0x7fb85bb0fe68 (?) (1 samples, 0.13%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(223,107,38)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(212,32,28)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(228,173,7)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(237,172,40)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="1268" width="1" height="15" fill="rgb(232,100,30)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1284" width="1" height="15" fill="rgb(250,40,34)"/><text x="29.00" y="1294.50"></text></g><g><title>0x7fb85b8a02fb (?) (1 samples, 0.13%)</title><rect x="26" y="1300" width="1" height="15" fill="rgb(243,113,9)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1316" width="1" height="15" fill="rgb(225,135,9)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1332" width="1" height="15" fill="rgb(246,150,0)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1348" width="1" height="15" fill="rgb(230,113,7)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="1364" width="1" height="15" fill="rgb(219,13,10)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1380" width="1" height="15" fill="rgb(239,37,31)"/><text x="29.00" y="1390.50"></text></g><g><title>0x7fb85b684153 (?) (1 samples, 0.13%)</title><rect x="26" y="1396" width="1" height="15" fill="rgb(241,197,46)"/><text x="29.00" y="1406.50"></text></g><g><title>0x7fb85b682c13 (?) (1 samples, 0.13%)</title><rect x="26" y="1412" width="1" height="15" fill="rgb(249,67,43)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1428" width="1" height="15" fill="rgb(229,161,46)"/><text x="29.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1444" width="1" height="15" fill="rgb(225,226,9)"/><text x="29.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1460" width="1" height="15" fill="rgb(205,51,26)"/><text x="29.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="26" y="1476" width="1" height="15" fill="rgb(253,177,17)"/><text x="29.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="26" y="1492" width="1" height="15" fill="rgb(252,54,52)"/><text x="29.00" y="1502.50"></text></g><g><title>0x7fb85b3df181 (?) (1 samples, 0.13%)</title><rect x="26" y="1508" width="1" height="15" fill="rgb(248,125,49)"/><text x="29.00" y="1518.50"></text></g><g><title>0x7fb85b3e21c9 (?) (1 samples, 0.13%)</title><rect x="26" y="1524" width="1" height="15" fill="rgb(242,167,6)"/><text x="29.00" y="1534.50"></text></g><g><title>0x7fb85b40e167 (?) (1 samples, 0.13%)</title><rect x="26" y="1540" width="1" height="15" fill="rgb(248,36,13)"/><text x="29.00" y="1550.50"></text></g><g><title>0x7fb85b409b64 (?) (1 samples, 0.13%)</title><rect x="26" y="1556" width="1" height="15" fill="rgb(218,191,35)"/><text x="29.00" y="1566.50"></text></g><g><title>0x7fb85b3ed07b (?) (1 samples, 0.13%)</title><rect x="26" y="1572" width="1" height="15" fill="rgb(229,168,32)"/><text x="29.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.13%)</title><rect x="26" y="1588" width="1" height="15" fill="rgb(244,124,46)"/><text x="29.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="1604" width="1" height="15" fill="rgb(205,61,52)"/><text x="29.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.13%)</title><rect x="26" y="1620" width="1" height="15" fill="rgb(207,161,31)"/><text x="29.00" y="1630.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="26" y="1636" width="1" height="15" fill="rgb(239,212,38)"/><text x="29.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.38%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(210,162,22)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(228,104,46)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(252,195,2)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(228,165,3)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(241,193,51)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(240,150,23)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.38%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(213,182,14)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(210,29,0)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(220,101,40)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(214,129,2)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.38%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(230,107,24)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.38%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(235,28,0)"/><text x="29.00" y="910.50"></text></g><g><title>0x7fb85c8dc40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(239,144,48)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(226,30,19)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(228,14,52)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(211,22,10)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(246,13,32)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(240,134,33)"/><text x="30.00" y="1006.50"></text></g><g><title>0x7fb85c695cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(211,163,38)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(226,62,49)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(233,122,31)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(216,63,8)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(250,70,1)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(207,153,25)"/><text x="30.00" y="1102.50"></text></g><g><title>0x7fb85bd8b0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(246,169,45)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(218,226,17)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(233,145,12)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(231,221,8)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(221,35,4)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(216,142,29)"/><text x="30.00" y="1198.50"></text></g><g><title>0x7fb85bb0fe68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(214,198,1)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1220" width="3" height="15" fill="rgb(228,144,17)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1236" width="3" height="15" fill="rgb(242,180,25)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1252" width="3" height="15" fill="rgb(219,33,20)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="1268" width="3" height="15" fill="rgb(206,202,49)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1284" width="3" height="15" fill="rgb(241,47,33)"/><text x="30.00" y="1294.50"></text></g><g><title>0x7fb85b8a02fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(241,8,36)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(213,180,10)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(213,88,36)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(253,32,7)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="1364" width="3" height="15" fill="rgb(246,209,18)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1380" width="3" height="15" fill="rgb(244,226,19)"/><text x="30.00" y="1390.50"></text></g><g><title>0x7fb85b684153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1396" width="3" height="15" fill="rgb(249,24,53)"/><text x="30.00" y="1406.50"></text></g><g><title>0x7fb85b682c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1412" width="3" height="15" fill="rgb(233,125,29)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1428" width="3" height="15" fill="rgb(205,219,5)"/><text x="30.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1444" width="3" height="15" fill="rgb(224,71,5)"/><text x="30.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1460" width="3" height="15" fill="rgb(243,185,23)"/><text x="30.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="27" y="1476" width="3" height="15" fill="rgb(240,1,21)"/><text x="30.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="27" y="1492" width="3" height="15" fill="rgb(252,42,1)"/><text x="30.00" y="1502.50"></text></g><g><title>0x7fb85b3df181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1508" width="3" height="15" fill="rgb(224,1,50)"/><text x="30.00" y="1518.50"></text></g><g><title>0x7fb85b3e21c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1524" width="3" height="15" fill="rgb(229,34,8)"/><text x="30.00" y="1534.50"></text></g><g><title>0x7fb85b40e167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1540" width="3" height="15" fill="rgb(245,21,35)"/><text x="30.00" y="1550.50"></text></g><g><title>0x7fb85b409b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1556" width="3" height="15" fill="rgb(221,151,6)"/><text x="30.00" y="1566.50"></text></g><g><title>0x7fb85b3ed07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="27" y="1572" width="3" height="15" fill="rgb(247,219,1)"/><text x="30.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (2 samples, 0.25%)</title><rect x="27" y="1588" width="3" height="15" fill="rgb(231,35,24)"/><text x="30.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (2 samples, 0.25%)</title><rect x="27" y="1604" width="3" height="15" fill="rgb(247,145,35)"/><text x="30.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (2 samples, 0.25%)</title><rect x="27" y="1620" width="3" height="15" fill="rgb(222,119,49)"/><text x="30.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (2 samples, 0.25%)</title><rect x="27" y="1636" width="3" height="15" fill="rgb(228,86,48)"/><text x="30.00" y="1646.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="29" y="1652" width="1" height="15" fill="rgb(235,202,42)"/><text x="32.00" y="1662.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.13%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(208,50,5)"/><text x="33.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.13%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(247,157,54)"/><text x="33.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.63%)</title><rect x="26" y="708" width="7" height="15" fill="rgb(237,46,19)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.25%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(230,64,50)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(244,124,29)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(222,30,15)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(215,102,10)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(252,31,24)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(240,71,45)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.25%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(250,27,27)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(249,216,35)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(249,223,54)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(227,221,13)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(234,2,12)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(236,177,53)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.25%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(205,183,19)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(252,39,32)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(237,132,22)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(205,95,37)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="30" y="980" width="3" height="15" fill="rgb(209,217,3)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="30" y="996" width="3" height="15" fill="rgb(248,68,33)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.25%)</title><rect x="30" y="1012" width="3" height="15" fill="rgb(221,192,17)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1028" width="1" height="15" fill="rgb(237,147,10)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1044" width="1" height="15" fill="rgb(207,92,4)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1060" width="1" height="15" fill="rgb(209,137,45)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1076" width="1" height="15" fill="rgb(237,50,10)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1092" width="1" height="15" fill="rgb(206,12,34)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="32" y="1108" width="1" height="15" fill="rgb(240,219,20)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1124" width="1" height="15" fill="rgb(210,117,9)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1140" width="1" height="15" fill="rgb(254,192,26)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1156" width="1" height="15" fill="rgb(228,6,33)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1172" width="1" height="15" fill="rgb(247,71,53)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1188" width="1" height="15" fill="rgb(243,174,33)"/><text x="35.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="1204" width="1" height="15" fill="rgb(227,75,5)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1220" width="1" height="15" fill="rgb(234,120,11)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1236" width="1" height="15" fill="rgb(232,102,46)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1252" width="1" height="15" fill="rgb(240,161,9)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1268" width="1" height="15" fill="rgb(232,78,29)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1284" width="1" height="15" fill="rgb(246,6,2)"/><text x="35.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="32" y="1300" width="1" height="15" fill="rgb(250,46,12)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1316" width="1" height="15" fill="rgb(249,144,36)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1332" width="1" height="15" fill="rgb(205,141,30)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1348" width="1" height="15" fill="rgb(219,79,16)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1364" width="1" height="15" fill="rgb(206,69,51)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1380" width="1" height="15" fill="rgb(241,114,5)"/><text x="35.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="32" y="1396" width="1" height="15" fill="rgb(213,98,31)"/><text x="35.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1412" width="1" height="15" fill="rgb(207,191,49)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1428" width="1" height="15" fill="rgb(244,47,0)"/><text x="35.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1444" width="1" height="15" fill="rgb(254,85,3)"/><text x="35.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="32" y="1460" width="1" height="15" fill="rgb(232,85,20)"/><text x="35.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="32" y="1476" width="1" height="15" fill="rgb(239,27,27)"/><text x="35.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/hist.py) (1 samples, 0.13%)</title><rect x="32" y="1492" width="1" height="15" fill="rgb(210,206,54)"/><text x="35.00" y="1502.50"></text></g><g><title>KdePlot (pandas/plotting/_matplotlib/hist.py) (1 samples, 0.13%)</title><rect x="32" y="1508" width="1" height="15" fill="rgb(231,61,46)"/><text x="35.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.76%)</title><rect x="26" y="660" width="9" height="15" fill="rgb(240,219,21)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.76%)</title><rect x="26" y="676" width="9" height="15" fill="rgb(221,36,45)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.76%)</title><rect x="26" y="692" width="9" height="15" fill="rgb(236,61,3)"/><text x="29.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="708" width="2" height="15" fill="rgb(242,34,5)"/><text x="36.00" y="718.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(239,137,23)"/><text x="36.00" y="734.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 1.13%)</title><rect x="23" y="340" width="13" height="15" fill="rgb(248,175,24)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="356" width="13" height="15" fill="rgb(227,39,30)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="372" width="13" height="15" fill="rgb(253,92,19)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="388" width="13" height="15" fill="rgb(210,147,42)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.13%)</title><rect x="23" y="404" width="13" height="15" fill="rgb(246,95,12)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="420" width="13" height="15" fill="rgb(228,127,48)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 1.13%)</title><rect x="23" y="436" width="13" height="15" fill="rgb(241,14,18)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="452" width="13" height="15" fill="rgb(242,138,2)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.13%)</title><rect x="23" y="468" width="13" height="15" fill="rgb(234,170,51)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="484" width="10" height="15" fill="rgb(228,172,35)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="26" y="500" width="10" height="15" fill="rgb(211,194,34)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="516" width="10" height="15" fill="rgb(250,202,14)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (7 samples, 0.88%)</title><rect x="26" y="532" width="10" height="15" fill="rgb(219,22,14)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="548" width="10" height="15" fill="rgb(248,198,14)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="564" width="10" height="15" fill="rgb(229,41,16)"/><text x="29.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="580" width="10" height="15" fill="rgb(212,160,27)"/><text x="29.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.88%)</title><rect x="26" y="596" width="10" height="15" fill="rgb(248,156,48)"/><text x="29.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="612" width="10" height="15" fill="rgb(246,87,36)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (7 samples, 0.88%)</title><rect x="26" y="628" width="10" height="15" fill="rgb(208,54,35)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.88%)</title><rect x="26" y="644" width="10" height="15" fill="rgb(207,123,52)"/><text x="29.00" y="654.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="35" y="660" width="1" height="15" fill="rgb(253,144,42)"/><text x="38.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="788" width="2" height="15" fill="rgb(207,4,44)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="804" width="2" height="15" fill="rgb(226,8,32)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="820" width="2" height="15" fill="rgb(228,131,1)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="836" width="2" height="15" fill="rgb(230,29,29)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="852" width="2" height="15" fill="rgb(218,113,1)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.13%)</title><rect x="36" y="868" width="2" height="15" fill="rgb(228,40,5)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="884" width="2" height="15" fill="rgb(253,206,47)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="900" width="2" height="15" fill="rgb(254,43,36)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="916" width="2" height="15" fill="rgb(228,39,1)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="932" width="2" height="15" fill="rgb(215,38,41)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="948" width="2" height="15" fill="rgb(206,79,35)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.13%)</title><rect x="36" y="964" width="2" height="15" fill="rgb(251,119,23)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="980" width="2" height="15" fill="rgb(222,104,34)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="996" width="2" height="15" fill="rgb(224,140,14)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1012" width="2" height="15" fill="rgb(251,128,32)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1028" width="2" height="15" fill="rgb(225,167,29)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1044" width="2" height="15" fill="rgb(220,113,29)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/request.py) (1 samples, 0.13%)</title><rect x="36" y="1060" width="2" height="15" fill="rgb(217,14,33)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1076" width="2" height="15" fill="rgb(230,19,54)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1092" width="2" height="15" fill="rgb(228,170,43)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1108" width="2" height="15" fill="rgb(227,144,14)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1124" width="2" height="15" fill="rgb(211,178,43)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1140" width="2" height="15" fill="rgb(232,124,48)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (urllib3/filepost.py) (1 samples, 0.13%)</title><rect x="36" y="1156" width="2" height="15" fill="rgb(226,100,37)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1172" width="2" height="15" fill="rgb(227,103,3)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1188" width="2" height="15" fill="rgb(210,16,46)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1204" width="2" height="15" fill="rgb(205,140,24)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1220" width="2" height="15" fill="rgb(207,215,31)"/><text x="39.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1236" width="2" height="15" fill="rgb(254,192,39)"/><text x="39.00" y="1246.50"></text></g><g><title>&lt;module&gt; (urllib3/fields.py) (1 samples, 0.13%)</title><rect x="36" y="1252" width="2" height="15" fill="rgb(254,64,38)"/><text x="39.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1268" width="2" height="15" fill="rgb(214,203,1)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1284" width="2" height="15" fill="rgb(224,141,18)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="36" y="1300" width="2" height="15" fill="rgb(206,120,26)"/><text x="39.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1316" width="2" height="15" fill="rgb(248,91,3)"/><text x="39.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1332" width="2" height="15" fill="rgb(237,198,8)"/><text x="39.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="36" y="1348" width="2" height="15" fill="rgb(206,86,23)"/><text x="39.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="68" width="29" height="15" fill="rgb(243,126,39)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="84" width="29" height="15" fill="rgb(240,160,13)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="100" width="29" height="15" fill="rgb(218,44,47)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 2.52%)</title><rect x="10" y="116" width="29" height="15" fill="rgb(218,28,5)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="132" width="29" height="15" fill="rgb(247,222,37)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVC/bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf.py) (20 samples, 2.52%)</title><rect x="10" y="148" width="29" height="15" fill="rgb(243,157,20)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="164" width="29" height="15" fill="rgb(243,137,33)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 2.52%)</title><rect x="10" y="180" width="29" height="15" fill="rgb(243,112,52)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="196" width="16" height="15" fill="rgb(252,50,32)"/><text x="26.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.39%)</title><rect x="23" y="212" width="16" height="15" fill="rgb(241,227,35)"/><text x="26.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="228" width="16" height="15" fill="rgb(215,98,44)"/><text x="26.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 1.39%)</title><rect x="23" y="244" width="16" height="15" fill="rgb(211,45,54)"/><text x="26.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="260" width="16" height="15" fill="rgb(212,121,51)"/><text x="26.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="276" width="16" height="15" fill="rgb(207,38,46)"/><text x="26.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="292" width="16" height="15" fill="rgb(207,36,42)"/><text x="26.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.39%)</title><rect x="23" y="308" width="16" height="15" fill="rgb(239,198,7)"/><text x="26.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.39%)</title><rect x="23" y="324" width="16" height="15" fill="rgb(219,137,49)"/><text x="26.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.25%)</title><rect x="36" y="340" width="3" height="15" fill="rgb(209,217,26)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="356" width="3" height="15" fill="rgb(228,123,44)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="372" width="3" height="15" fill="rgb(215,28,13)"/><text x="39.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="388" width="3" height="15" fill="rgb(231,110,3)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="404" width="3" height="15" fill="rgb(231,81,3)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="420" width="3" height="15" fill="rgb(217,206,51)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="436" width="3" height="15" fill="rgb(248,194,49)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="36" y="452" width="3" height="15" fill="rgb(254,167,40)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="468" width="3" height="15" fill="rgb(223,205,4)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.25%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(215,189,9)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(219,218,16)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(245,30,44)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(238,36,8)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(248,52,53)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(223,186,27)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.25%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(250,20,48)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(247,159,0)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(212,7,2)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(222,6,11)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(242,58,11)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(240,5,4)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.25%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(207,187,14)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(230,35,36)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(236,152,9)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(222,204,26)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(234,80,21)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(212,42,23)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.25%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(216,110,37)"/><text x="39.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="788" width="1" height="15" fill="rgb(234,138,18)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="804" width="1" height="15" fill="rgb(232,0,35)"/><text x="41.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="820" width="1" height="15" fill="rgb(249,137,19)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="836" width="1" height="15" fill="rgb(228,139,32)"/><text x="41.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="852" width="1" height="15" fill="rgb(229,113,1)"/><text x="41.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="868" width="1" height="15" fill="rgb(207,19,16)"/><text x="41.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="884" width="1" height="15" fill="rgb(232,92,7)"/><text x="41.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.13%)</title><rect x="38" y="900" width="1" height="15" fill="rgb(214,135,9)"/><text x="41.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="916" width="1" height="15" fill="rgb(226,215,30)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="932" width="1" height="15" fill="rgb(220,150,47)"/><text x="41.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="948" width="1" height="15" fill="rgb(218,140,47)"/><text x="41.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="964" width="1" height="15" fill="rgb(246,64,36)"/><text x="41.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="980" width="1" height="15" fill="rgb(254,134,53)"/><text x="41.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="996" width="1" height="15" fill="rgb(212,74,52)"/><text x="41.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="1012" width="1" height="15" fill="rgb(205,128,42)"/><text x="41.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1028" width="1" height="15" fill="rgb(246,105,3)"/><text x="41.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.13%)</title><rect x="38" y="1044" width="1" height="15" fill="rgb(220,198,4)"/><text x="41.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1060" width="1" height="15" fill="rgb(242,140,2)"/><text x="41.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1076" width="1" height="15" fill="rgb(228,17,17)"/><text x="41.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1092" width="1" height="15" fill="rgb(219,105,48)"/><text x="41.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1108" width="1" height="15" fill="rgb(211,6,21)"/><text x="41.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1124" width="1" height="15" fill="rgb(222,157,24)"/><text x="41.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="1140" width="1" height="15" fill="rgb(242,88,21)"/><text x="41.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1156" width="1" height="15" fill="rgb(223,34,18)"/><text x="41.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.13%)</title><rect x="38" y="1172" width="1" height="15" fill="rgb(225,17,21)"/><text x="41.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1188" width="1" height="15" fill="rgb(228,178,21)"/><text x="41.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1204" width="1" height="15" fill="rgb(250,7,17)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1220" width="1" height="15" fill="rgb(251,121,11)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1236" width="1" height="15" fill="rgb(237,181,21)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1252" width="1" height="15" fill="rgb(232,172,20)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="1268" width="1" height="15" fill="rgb(245,213,3)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1284" width="1" height="15" fill="rgb(205,125,35)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.13%)</title><rect x="38" y="1300" width="1" height="15" fill="rgb(217,32,9)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1316" width="1" height="15" fill="rgb(227,0,25)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1332" width="1" height="15" fill="rgb(227,187,27)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1348" width="1" height="15" fill="rgb(240,15,7)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="38" y="1364" width="1" height="15" fill="rgb(227,133,39)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="38" y="1380" width="1" height="15" fill="rgb(206,178,2)"/><text x="41.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.13%)</title><rect x="38" y="1396" width="1" height="15" fill="rgb(252,56,37)"/><text x="41.00" y="1406.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.13%)</title><rect x="38" y="1412" width="1" height="15" fill="rgb(228,171,51)"/><text x="41.00" y="1422.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.13%)</title><rect x="38" y="1428" width="1" height="15" fill="rgb(245,81,19)"/><text x="41.00" y="1438.50"></text></g><g><title>0x7fb885754bc6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="45" y="132" width="2" height="15" fill="rgb(239,93,50)"/><text x="48.00" y="142.50"></text></g><g><title>0x7fb885755eb0 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="45" y="116" width="3" height="15" fill="rgb(225,17,41)"/><text x="48.00" y="126.50"></text></g><g><title>0x7fb885754c1c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="47" y="132" width="1" height="15" fill="rgb(238,192,43)"/><text x="50.00" y="142.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="50" y="340" width="1" height="15" fill="rgb(249,160,1)"/><text x="53.00" y="350.50"></text></g><g><title>0x7fb8752227a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="155" y="356" width="2" height="15" fill="rgb(214,83,23)"/><text x="158.00" y="366.50"></text></g><g><title>0x7fb88575591e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="157" y="356" width="1" height="15" fill="rgb(245,99,42)"/><text x="160.00" y="366.50"></text></g><g><title>0x7fb88575592c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="158" y="356" width="2" height="15" fill="rgb(232,11,13)"/><text x="161.00" y="366.50"></text></g><g><title>0x7fb885755a55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="160" y="356" width="1" height="15" fill="rgb(234,35,13)"/><text x="163.00" y="366.50"></text></g><g><title>0x7fb88577612f (libc-2.29.so) (1 samples, 0.13%)</title><rect x="161" y="356" width="2" height="15" fill="rgb(239,144,41)"/><text x="164.00" y="366.50"></text></g><g><title>0x7fb8858d4e96 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="163" y="356" width="3" height="15" fill="rgb(228,148,27)"/><text x="166.00" y="366.50"></text></g><g><title>0x7fb8858d4ea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="166" y="356" width="1" height="15" fill="rgb(228,169,25)"/><text x="169.00" y="366.50"></text></g><g><title>0x7fb8858a11b0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="188" y="372" width="2" height="15" fill="rgb(207,187,50)"/><text x="191.00" y="382.50"></text></g><g><title>0x7fb885927ba0 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="190" y="372" width="1" height="15" fill="rgb(234,1,19)"/><text x="193.00" y="382.50"></text></g><g><title>0x7fb885927bb4 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="191" y="372" width="2" height="15" fill="rgb(250,200,39)"/><text x="194.00" y="382.50"></text></g><g><title>0x7fb885927bba (libm-2.29.so) (1 samples, 0.13%)</title><rect x="193" y="372" width="1" height="15" fill="rgb(213,137,32)"/><text x="196.00" y="382.50"></text></g><g><title>0x7fb885927bd3 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="194" y="372" width="2" height="15" fill="rgb(250,19,51)"/><text x="197.00" y="382.50"></text></g><g><title>0x7fb885927be2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="196" y="372" width="1" height="15" fill="rgb(207,180,27)"/><text x="199.00" y="382.50"></text></g><g><title>0x7fb885927be7 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="197" y="372" width="1" height="15" fill="rgb(242,118,44)"/><text x="200.00" y="382.50"></text></g><g><title>0x7fb885927bf9 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="198" y="372" width="2" height="15" fill="rgb(212,214,28)"/><text x="201.00" y="382.50"></text></g><g><title>0x7fb885927c07 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="200" y="372" width="4" height="15" fill="rgb(208,58,26)"/><text x="203.00" y="382.50"></text></g><g><title>0x7fb885927c10 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="204" y="372" width="2" height="15" fill="rgb(238,68,52)"/><text x="207.00" y="382.50"></text></g><g><title>0x7fb885927c18 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="206" y="372" width="4" height="15" fill="rgb(251,121,23)"/><text x="209.00" y="382.50"></text></g><g><title>0x7fb885927c28 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="210" y="372" width="2" height="15" fill="rgb(243,210,15)"/><text x="213.00" y="382.50"></text></g><g><title>0x7fb885927c2e (libm-2.29.so) (2 samples, 0.25%)</title><rect x="212" y="372" width="3" height="15" fill="rgb(241,141,33)"/><text x="215.00" y="382.50"></text></g><g><title>0x7fb885927c32 (libm-2.29.so) (6 samples, 0.76%)</title><rect x="215" y="372" width="9" height="15" fill="rgb(229,63,6)"/><text x="218.00" y="382.50"></text></g><g><title>0x7fb885927c3e (libm-2.29.so) (4 samples, 0.50%)</title><rect x="224" y="372" width="6" height="15" fill="rgb(253,139,22)"/><text x="227.00" y="382.50"></text></g><g><title>0x7fb885927c46 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="230" y="372" width="4" height="15" fill="rgb(227,162,8)"/><text x="233.00" y="382.50"></text></g><g><title>0x7fb885927c52 (libm-2.29.so) (9 samples, 1.13%)</title><rect x="234" y="372" width="14" height="15" fill="rgb(210,27,10)"/><text x="237.00" y="382.50"></text></g><g><title>0x7fb885927c5a (libm-2.29.so) (4 samples, 0.50%)</title><rect x="248" y="372" width="6" height="15" fill="rgb(226,128,29)"/><text x="251.00" y="382.50"></text></g><g><title>0x7fb885927c6e (libm-2.29.so) (3 samples, 0.38%)</title><rect x="254" y="372" width="4" height="15" fill="rgb(251,43,3)"/><text x="257.00" y="382.50"></text></g><g><title>0x7fb885927c7b (libm-2.29.so) (15 samples, 1.89%)</title><rect x="258" y="372" width="22" height="15" fill="rgb(249,220,33)"/><text x="261.00" y="382.50">0..</text></g><g><title>expf32x (libm-2.29.so) (81 samples, 10.21%)</title><rect x="167" y="356" width="121" height="15" fill="rgb(205,124,52)"/><text x="170.00" y="366.50">expf32x (libm-2..</text></g><g><title>0x7fb885927c7f (libm-2.29.so) (5 samples, 0.63%)</title><rect x="280" y="372" width="8" height="15" fill="rgb(235,225,54)"/><text x="283.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="288" y="356" width="1" height="15" fill="rgb(227,4,34)"/><text x="291.00" y="366.50"></text></g><g><title>0x7fb84574d0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="346" y="372" width="1" height="15" fill="rgb(222,137,38)"/><text x="349.00" y="382.50"></text></g><g><title>0x7fb88575590e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="347" y="372" width="2" height="15" fill="rgb(234,226,25)"/><text x="350.00" y="382.50"></text></g><g><title>0x7fb88575597c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="353" y="388" width="2" height="15" fill="rgb(211,114,48)"/><text x="356.00" y="398.50"></text></g><g><title>0x7fb885755a51 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="355" y="388" width="1" height="15" fill="rgb(217,202,18)"/><text x="358.00" y="398.50"></text></g><g><title>0x7fb885775dae (libc-2.29.so) (1 samples, 0.13%)</title><rect x="356" y="388" width="2" height="15" fill="rgb(227,143,9)"/><text x="359.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="358" y="388" width="1" height="15" fill="rgb(215,118,34)"/><text x="361.00" y="398.50"></text></g><g><title>onnxruntime::ml::multiclass_probability (onnxruntime/capi/onnxruntime_pybind11_state.so) (54 samples, 6.81%)</title><rect x="289" y="356" width="81" height="15" fill="rgb(217,69,49)"/><text x="292.00" y="366.50">onnxrunti..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.77%)</title><rect x="349" y="372" width="21" height="15" fill="rgb(254,113,9)"/><text x="352.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.88%)</title><rect x="359" y="388" width="11" height="15" fill="rgb(208,212,40)"/><text x="362.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.76%)</title><rect x="361" y="404" width="9" height="15" fill="rgb(230,190,3)"/><text x="364.00" y="414.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="370" y="356" width="3" height="15" fill="rgb(219,78,21)"/><text x="373.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.25%)</title><rect x="373" y="356" width="3" height="15" fill="rgb(248,114,13)"/><text x="376.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="374" y="372" width="2" height="15" fill="rgb(225,219,37)"/><text x="377.00" y="382.50"></text></g><g><title>0x7fb88575590e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="384" y="372" width="2" height="15" fill="rgb(222,108,8)"/><text x="387.00" y="382.50"></text></g><g><title>0x7fb885755929 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="386" y="372" width="1" height="15" fill="rgb(245,21,36)"/><text x="389.00" y="382.50"></text></g><g><title>0x7fb885755982 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="387" y="372" width="3" height="15" fill="rgb(241,147,3)"/><text x="390.00" y="382.50"></text></g><g><title>0x7fb885755be4 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="390" y="372" width="3" height="15" fill="rgb(241,226,13)"/><text x="393.00" y="382.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.14%)</title><rect x="376" y="356" width="25" height="15" fill="rgb(215,179,15)"/><text x="379.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.63%)</title><rect x="393" y="372" width="8" height="15" fill="rgb(225,227,3)"/><text x="396.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.63%)</title><rect x="393" y="388" width="8" height="15" fill="rgb(211,193,50)"/><text x="396.00" y="398.50"></text></g><g><title>onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (236 samples, 29.76%)</title><rect x="51" y="340" width="351" height="15" fill="rgb(245,52,32)"/><text x="54.00" y="350.50">onnxruntime::ml::SVMClassifier&lt;float&gt;::Compute ..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="401" y="356" width="1" height="15" fill="rgb(220,43,1)"/><text x="404.00" y="366.50"></text></g><g><title>0x7fb84574c930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="401" y="372" width="1" height="15" fill="rgb(244,165,42)"/><text x="404.00" y="382.50"></text></g><g><title>0x7fb885756db4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="413" y="388" width="1" height="15" fill="rgb(228,119,43)"/><text x="416.00" y="398.50"></text></g><g><title>0x7fb885756f2a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="414" y="388" width="2" height="15" fill="rgb(214,197,48)"/><text x="417.00" y="398.50"></text></g><g><title>0x7fb88575708c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="416" y="388" width="1" height="15" fill="rgb(237,46,13)"/><text x="419.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.13%)</title><rect x="405" y="356" width="14" height="15" fill="rgb(224,145,50)"/><text x="408.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.13%)</title><rect x="405" y="372" width="14" height="15" fill="rgb(226,155,41)"/><text x="408.00" y="382.50"></text></g><g><title>0x7fb885757097 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="417" y="388" width="2" height="15" fill="rgb(246,213,31)"/><text x="420.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="419" y="356" width="1" height="15" fill="rgb(232,215,33)"/><text x="422.00" y="366.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="420" y="356" width="2" height="15" fill="rgb(224,17,47)"/><text x="423.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (252 samples, 31.78%)</title><rect x="50" y="260" width="375" height="15" fill="rgb(253,50,5)"/><text x="53.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (252 samples, 31.78%)</title><rect x="50" y="276" width="375" height="15" fill="rgb(229,97,31)"/><text x="53.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (252 samples, 31.78%)</title><rect x="50" y="292" width="375" height="15" fill="rgb(246,177,20)"/><text x="53.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (252 samples, 31.78%)</title><rect x="50" y="308" width="375" height="15" fill="rgb(228,96,47)"/><text x="53.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (252 samples, 31.78%)</title><rect x="50" y="324" width="375" height="15" fill="rgb(219,100,7)"/><text x="53.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.89%)</title><rect x="402" y="340" width="23" height="15" fill="rgb(245,37,39)"/><text x="405.00" y="350.50">o..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.25%)</title><rect x="422" y="356" width="3" height="15" fill="rgb(242,95,5)"/><text x="425.00" y="366.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 1.89%)</title><rect x="425" y="260" width="22" height="15" fill="rgb(219,157,7)"/><text x="428.00" y="270.50">p..</text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.38%)</title><rect x="443" y="276" width="4" height="15" fill="rgb(222,24,41)"/><text x="446.00" y="286.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="276" width="1" height="15" fill="rgb(217,160,29)"/><text x="450.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="292" width="1" height="15" fill="rgb(208,124,18)"/><text x="450.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="308" width="1" height="15" fill="rgb(212,29,3)"/><text x="450.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="324" width="1" height="15" fill="rgb(211,161,47)"/><text x="450.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="340" width="1" height="15" fill="rgb(242,37,54)"/><text x="450.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="356" width="1" height="15" fill="rgb(216,163,42)"/><text x="450.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="372" width="1" height="15" fill="rgb(232,205,37)"/><text x="450.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="447" y="388" width="1" height="15" fill="rgb(241,173,49)"/><text x="450.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="447" y="404" width="1" height="15" fill="rgb(249,206,20)"/><text x="450.00" y="414.50"></text></g><g><title>0x7fb885755971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="448" y="292" width="2" height="15" fill="rgb(215,122,24)"/><text x="451.00" y="302.50"></text></g><g><title>0x7fb885755d07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="450" y="292" width="1" height="15" fill="rgb(205,21,20)"/><text x="453.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="451" y="292" width="2" height="15" fill="rgb(249,71,9)"/><text x="454.00" y="302.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (279 samples, 35.18%)</title><rect x="39" y="100" width="415" height="15" fill="rgb(250,21,51)"/><text x="42.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_10..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 34.43%)</title><rect x="48" y="116" width="406" height="15" fill="rgb(246,70,2)"/><text x="51.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (273 samples, 34.43%)</title><rect x="48" y="132" width="406" height="15" fill="rgb(220,227,36)"/><text x="51.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (273 samples, 34.43%)</title><rect x="48" y="148" width="406" height="15" fill="rgb(240,39,51)"/><text x="51.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (273 samples, 34.43%)</title><rect x="48" y="164" width="406" height="15" fill="rgb(215,92,11)"/><text x="51.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (273 samples, 34.43%)</title><rect x="48" y="180" width="406" height="15" fill="rgb(243,75,26)"/><text x="51.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (273 samples, 34.43%)</title><rect x="48" y="196" width="406" height="15" fill="rgb(219,135,40)"/><text x="51.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (273 samples, 34.43%)</title><rect x="48" y="212" width="406" height="15" fill="rgb(249,211,47)"/><text x="51.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/on..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (273 samples, 34.43%)</title><rect x="48" y="228" width="406" height="15" fill="rgb(251,77,0)"/><text x="51.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (273 samples, 34.43%)</title><rect x="48" y="244" width="406" height="15" fill="rgb(209,109,2)"/><text x="51.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.63%)</title><rect x="447" y="260" width="7" height="15" fill="rgb(240,142,8)"/><text x="450.00" y="270.50"></text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.50%)</title><rect x="448" y="276" width="6" height="15" fill="rgb(212,34,19)"/><text x="451.00" y="286.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="453" y="292" width="1" height="15" fill="rgb(242,184,12)"/><text x="456.00" y="302.50"></text></g><g><title>0x7fb8857559ed (libc-2.29.so) (1 samples, 0.13%)</title><rect x="453" y="308" width="1" height="15" fill="rgb(205,64,44)"/><text x="456.00" y="318.50"></text></g><g><title>0x7fb84578daf0 (?) (1 samples, 0.13%)</title><rect x="454" y="564" width="2" height="15" fill="rgb(235,43,48)"/><text x="457.00" y="574.50"></text></g><g><title>0x7fb8457a01d2 (?) (1 samples, 0.13%)</title><rect x="454" y="580" width="2" height="15" fill="rgb(240,42,51)"/><text x="457.00" y="590.50"></text></g><g><title>0x7fb84579f7b8 (?) (1 samples, 0.13%)</title><rect x="454" y="596" width="2" height="15" fill="rgb(252,14,39)"/><text x="457.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="454" y="612" width="2" height="15" fill="rgb(207,12,45)"/><text x="457.00" y="622.50"></text></g><g><title>0x7fb84579d926 (?) (1 samples, 0.13%)</title><rect x="454" y="628" width="2" height="15" fill="rgb(238,197,31)"/><text x="457.00" y="638.50"></text></g><g><title>0x7fb84579bc83 (?) (1 samples, 0.13%)</title><rect x="454" y="644" width="2" height="15" fill="rgb(211,20,34)"/><text x="457.00" y="654.50"></text></g><g><title>0x7fb845ccc581 (?) (1 samples, 0.13%)</title><rect x="454" y="660" width="2" height="15" fill="rgb(249,158,49)"/><text x="457.00" y="670.50"></text></g><g><title>0x7fb8457ca009 (?) (1 samples, 0.13%)</title><rect x="454" y="676" width="2" height="15" fill="rgb(225,159,10)"/><text x="457.00" y="686.50"></text></g><g><title>0x7fb8457c9898 (?) (1 samples, 0.13%)</title><rect x="454" y="692" width="2" height="15" fill="rgb(216,99,29)"/><text x="457.00" y="702.50"></text></g><g><title>0x7fb8457c9898 (?) (1 samples, 0.13%)</title><rect x="454" y="708" width="2" height="15" fill="rgb(244,70,52)"/><text x="457.00" y="718.50"></text></g><g><title>0x7fb8457c9719 (?) (1 samples, 0.13%)</title><rect x="454" y="724" width="2" height="15" fill="rgb(243,61,48)"/><text x="457.00" y="734.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="454" y="740" width="2" height="15" fill="rgb(248,175,42)"/><text x="457.00" y="750.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="454" y="756" width="2" height="15" fill="rgb(213,205,18)"/><text x="457.00" y="766.50"></text></g><g><title>0x7fb8857578a4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="454" y="772" width="2" height="15" fill="rgb(214,82,0)"/><text x="457.00" y="782.50"></text></g><g><title>profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (281 samples, 35.44%)</title><rect x="39" y="68" width="418" height="15" fill="rgb(210,1,53)"/><text x="42.00" y="78.50">profile_ort (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (281 samples, 35.44%)</title><rect x="39" y="84" width="418" height="15" fill="rgb(234,127,8)"/><text x="42.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelr..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="454" y="100" width="3" height="15" fill="rgb(233,15,11)"/><text x="457.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="454" y="116" width="3" height="15" fill="rgb(244,80,10)"/><text x="457.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="454" y="132" width="3" height="15" fill="rgb(247,211,9)"/><text x="457.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.25%)</title><rect x="454" y="148" width="3" height="15" fill="rgb(246,131,48)"/><text x="457.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.25%)</title><rect x="454" y="164" width="3" height="15" fill="rgb(216,13,7)"/><text x="457.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="180" width="3" height="15" fill="rgb(237,156,39)"/><text x="457.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="196" width="3" height="15" fill="rgb(247,118,18)"/><text x="457.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="212" width="3" height="15" fill="rgb(245,77,18)"/><text x="457.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="454" y="228" width="3" height="15" fill="rgb(215,53,40)"/><text x="457.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="244" width="3" height="15" fill="rgb(244,127,46)"/><text x="457.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.25%)</title><rect x="454" y="260" width="3" height="15" fill="rgb(245,107,22)"/><text x="457.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="276" width="3" height="15" fill="rgb(226,40,4)"/><text x="457.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="292" width="3" height="15" fill="rgb(236,7,12)"/><text x="457.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="308" width="3" height="15" fill="rgb(205,203,23)"/><text x="457.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="454" y="324" width="3" height="15" fill="rgb(253,57,18)"/><text x="457.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="340" width="3" height="15" fill="rgb(223,1,1)"/><text x="457.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.25%)</title><rect x="454" y="356" width="3" height="15" fill="rgb(227,206,34)"/><text x="457.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="372" width="3" height="15" fill="rgb(224,100,12)"/><text x="457.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="388" width="3" height="15" fill="rgb(239,220,52)"/><text x="457.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="404" width="3" height="15" fill="rgb(222,35,36)"/><text x="457.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="454" y="420" width="3" height="15" fill="rgb(210,13,41)"/><text x="457.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="436" width="3" height="15" fill="rgb(243,116,13)"/><text x="457.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.25%)</title><rect x="454" y="452" width="3" height="15" fill="rgb(247,3,23)"/><text x="457.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="468" width="3" height="15" fill="rgb(252,112,16)"/><text x="457.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="484" width="3" height="15" fill="rgb(217,194,16)"/><text x="457.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="500" width="3" height="15" fill="rgb(241,146,23)"/><text x="457.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="516" width="3" height="15" fill="rgb(233,154,7)"/><text x="457.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="454" y="532" width="3" height="15" fill="rgb(238,30,5)"/><text x="457.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="454" y="548" width="3" height="15" fill="rgb(238,119,9)"/><text x="457.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="564" width="1" height="15" fill="rgb(242,211,29)"/><text x="459.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="580" width="1" height="15" fill="rgb(231,128,27)"/><text x="459.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="596" width="1" height="15" fill="rgb(241,156,32)"/><text x="459.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="456" y="612" width="1" height="15" fill="rgb(227,90,14)"/><text x="459.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="628" width="1" height="15" fill="rgb(242,220,36)"/><text x="459.00" y="638.50"></text></g><g><title>onnx::OpSet_Onnx_ver9::ForEachSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="644" width="1" height="15" fill="rgb(216,194,35)"/><text x="459.00" y="654.50"></text></g><g><title>onnx::RegisterSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="660" width="1" height="15" fill="rgb(232,113,29)"/><text x="459.00" y="670.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="676" width="1" height="15" fill="rgb(251,160,18)"/><text x="459.00" y="686.50"></text></g><g><title>onnx::OpSchema::Finalize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="692" width="1" height="15" fill="rgb(233,54,37)"/><text x="459.00" y="702.50"></text></g><g><title>onnx::OpSchema::ParseAndSetTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="456" y="708" width="1" height="15" fill="rgb(231,33,43)"/><text x="459.00" y="718.50"></text></g><g><title>0x7fb885755d07 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="456" y="724" width="1" height="15" fill="rgb(237,186,39)"/><text x="459.00" y="734.50"></text></g><g><title>0x7fb8468c4c29 (?) (1 samples, 0.13%)</title><rect x="457" y="244" width="2" height="15" fill="rgb(254,189,0)"/><text x="460.00" y="254.50"></text></g><g><title>0x7fb8468cbd9e (?) (1 samples, 0.13%)</title><rect x="457" y="260" width="2" height="15" fill="rgb(252,19,19)"/><text x="460.00" y="270.50"></text></g><g><title>0x7fb8468cbc56 (?) (1 samples, 0.13%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(237,206,11)"/><text x="460.00" y="286.50"></text></g><g><title>0x7fb8468d1ac7 (?) (1 samples, 0.13%)</title><rect x="457" y="292" width="2" height="15" fill="rgb(217,143,39)"/><text x="460.00" y="302.50"></text></g><g><title>0x7fb8468d1023 (?) (1 samples, 0.13%)</title><rect x="457" y="308" width="2" height="15" fill="rgb(231,18,18)"/><text x="460.00" y="318.50"></text></g><g><title>0x7fb8468c8fa3 (?) (1 samples, 0.13%)</title><rect x="457" y="324" width="2" height="15" fill="rgb(206,183,9)"/><text x="460.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.13%)</title><rect x="459" y="244" width="1" height="15" fill="rgb(218,192,13)"/><text x="462.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.13%)</title><rect x="459" y="260" width="1" height="15" fill="rgb(239,34,17)"/><text x="462.00" y="270.50"></text></g><g><title>0x7fb8468b4440 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="504" y="468" width="2" height="15" fill="rgb(221,102,19)"/><text x="507.00" y="478.50"></text></g><g><title>0x7fb885755965 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="506" y="468" width="2" height="15" fill="rgb(236,18,34)"/><text x="509.00" y="478.50"></text></g><g><title>0x7fb885755998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="508" y="468" width="1" height="15" fill="rgb(252,78,38)"/><text x="511.00" y="478.50"></text></g><g><title>0x7fb8468b4830 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.25%)</title><rect x="570" y="484" width="3" height="15" fill="rgb(209,57,40)"/><text x="573.00" y="494.50"></text></g><g><title>0x7fb885927ba0 (libm-2.29.so) (4 samples, 0.50%)</title><rect x="600" y="500" width="6" height="15" fill="rgb(225,169,37)"/><text x="603.00" y="510.50"></text></g><g><title>0x7fb885927bb4 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="606" y="500" width="5" height="15" fill="rgb(247,144,34)"/><text x="609.00" y="510.50"></text></g><g><title>0x7fb885927be2 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="611" y="500" width="1" height="15" fill="rgb(248,50,19)"/><text x="614.00" y="510.50"></text></g><g><title>0x7fb885927beb (libm-2.29.so) (1 samples, 0.13%)</title><rect x="612" y="500" width="2" height="15" fill="rgb(227,129,48)"/><text x="615.00" y="510.50"></text></g><g><title>0x7fb885927bf9 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="614" y="500" width="4" height="15" fill="rgb(250,135,38)"/><text x="617.00" y="510.50"></text></g><g><title>0x7fb885927c04 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="618" y="500" width="2" height="15" fill="rgb(213,165,8)"/><text x="621.00" y="510.50"></text></g><g><title>0x7fb885927c07 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="620" y="500" width="4" height="15" fill="rgb(237,115,15)"/><text x="623.00" y="510.50"></text></g><g><title>0x7fb885927c0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="624" y="500" width="2" height="15" fill="rgb(219,86,6)"/><text x="627.00" y="510.50"></text></g><g><title>0x7fb885927c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="626" y="500" width="1" height="15" fill="rgb(218,142,15)"/><text x="629.00" y="510.50"></text></g><g><title>0x7fb885927c28 (libm-2.29.so) (5 samples, 0.63%)</title><rect x="627" y="500" width="7" height="15" fill="rgb(210,217,17)"/><text x="630.00" y="510.50"></text></g><g><title>0x7fb885927c32 (libm-2.29.so) (7 samples, 0.88%)</title><rect x="634" y="500" width="11" height="15" fill="rgb(252,229,0)"/><text x="637.00" y="510.50"></text></g><g><title>0x7fb885927c3e (libm-2.29.so) (3 samples, 0.38%)</title><rect x="645" y="500" width="4" height="15" fill="rgb(241,37,45)"/><text x="648.00" y="510.50"></text></g><g><title>0x7fb885927c46 (libm-2.29.so) (4 samples, 0.50%)</title><rect x="649" y="500" width="6" height="15" fill="rgb(217,75,23)"/><text x="652.00" y="510.50"></text></g><g><title>0x7fb885927c52 (libm-2.29.so) (12 samples, 1.51%)</title><rect x="655" y="500" width="18" height="15" fill="rgb(205,38,38)"/><text x="658.00" y="510.50"></text></g><g><title>0x7fb885927c5a (libm-2.29.so) (4 samples, 0.50%)</title><rect x="673" y="500" width="6" height="15" fill="rgb(232,24,25)"/><text x="676.00" y="510.50"></text></g><g><title>0x7fb885927c6e (libm-2.29.so) (7 samples, 0.88%)</title><rect x="679" y="500" width="11" height="15" fill="rgb(226,117,42)"/><text x="682.00" y="510.50"></text></g><g><title>0x7fb885927c7b (libm-2.29.so) (11 samples, 1.39%)</title><rect x="690" y="500" width="16" height="15" fill="rgb(247,112,16)"/><text x="693.00" y="510.50"></text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (137 samples, 17.28%)</title><rect x="509" y="468" width="204" height="15" fill="rgb(220,146,28)"/><text x="512.00" y="478.50">RuntimeSVMClassifier&lt;float..</text></g><g><title>expf32x (libm-2.29.so) (94 samples, 11.85%)</title><rect x="573" y="484" width="140" height="15" fill="rgb(218,84,44)"/><text x="576.00" y="494.50">expf32x (libm-2.2..</text></g><g><title>0x7fb885927c7f (libm-2.29.so) (5 samples, 0.63%)</title><rect x="706" y="500" width="7" height="15" fill="rgb(228,1,53)"/><text x="709.00" y="510.50"></text></g><g><title>0x7fb8858d4e37 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="721" y="500" width="1" height="15" fill="rgb(229,47,15)"/><text x="724.00" y="510.50"></text></g><g><title>0x7fb8858d4ea2 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="722" y="500" width="3" height="15" fill="rgb(229,189,39)"/><text x="725.00" y="510.50"></text></g><g><title>sigmoid_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (9 samples, 1.13%)</title><rect x="713" y="468" width="14" height="15" fill="rgb(234,89,18)"/><text x="716.00" y="478.50"></text></g><g><title>ComputeLogistic (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (7 samples, 0.88%)</title><rect x="716" y="484" width="11" height="15" fill="rgb(251,80,32)"/><text x="719.00" y="494.50"></text></g><g><title>0x7fb8858d4ea6 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="725" y="500" width="2" height="15" fill="rgb(220,193,52)"/><text x="728.00" y="510.50"></text></g><g><title>std::min&lt;float&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="727" y="468" width="1" height="15" fill="rgb(222,62,11)"/><text x="730.00" y="478.50"></text></g><g><title>0x7fb885755971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="734" y="484" width="2" height="15" fill="rgb(231,92,36)"/><text x="737.00" y="494.50"></text></g><g><title>0x7fb885755991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="736" y="484" width="1" height="15" fill="rgb(211,222,36)"/><text x="739.00" y="494.50"></text></g><g><title>0x7fb885775df8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="737" y="484" width="2" height="15" fill="rgb(223,118,25)"/><text x="740.00" y="494.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.25%)</title><rect x="739" y="484" width="3" height="15" fill="rgb(219,169,25)"/><text x="742.00" y="494.50"></text></g><g><title>0x7fb875221d50 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="743" y="548" width="2" height="15" fill="rgb(233,96,19)"/><text x="746.00" y="558.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (4 samples, 0.50%)</title><rect x="742" y="484" width="6" height="15" fill="rgb(229,137,30)"/><text x="745.00" y="494.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (4 samples, 0.50%)</title><rect x="742" y="500" width="6" height="15" fill="rgb(225,117,5)"/><text x="745.00" y="510.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (4 samples, 0.50%)</title><rect x="742" y="516" width="6" height="15" fill="rgb(205,81,45)"/><text x="745.00" y="526.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.50%)</title><rect x="742" y="532" width="6" height="15" fill="rgb(228,33,20)"/><text x="745.00" y="542.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.25%)</title><rect x="745" y="548" width="3" height="15" fill="rgb(225,22,42)"/><text x="748.00" y="558.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="748" y="484" width="1" height="15" fill="rgb(222,213,41)"/><text x="751.00" y="494.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="748" y="500" width="1" height="15" fill="rgb(254,167,39)"/><text x="751.00" y="510.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="748" y="516" width="1" height="15" fill="rgb(234,96,18)"/><text x="751.00" y="526.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (1 samples, 0.13%)</title><rect x="748" y="532" width="1" height="15" fill="rgb(214,145,40)"/><text x="751.00" y="542.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="748" y="548" width="1" height="15" fill="rgb(231,165,0)"/><text x="751.00" y="558.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="748" y="564" width="1" height="15" fill="rgb(222,156,12)"/><text x="751.00" y="574.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="748" y="580" width="1" height="15" fill="rgb(218,153,37)"/><text x="751.00" y="590.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (1 samples, 0.13%)</title><rect x="748" y="596" width="1" height="15" fill="rgb(206,191,45)"/><text x="751.00" y="606.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (15 samples, 1.89%)</title><rect x="728" y="468" width="23" height="15" fill="rgb(251,45,54)"/><text x="731.00" y="478.50">s..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (1 samples, 0.13%)</title><rect x="749" y="484" width="2" height="15" fill="rgb(217,17,35)"/><text x="752.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.13%)</title><rect x="749" y="500" width="2" height="15" fill="rgb(254,135,8)"/><text x="752.00" y="510.50"></text></g><g><title>0x7fb8752227a0 (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="755" y="516" width="1" height="15" fill="rgb(248,135,9)"/><text x="758.00" y="526.50"></text></g><g><title>0x7fb885755906 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="756" y="516" width="2" height="15" fill="rgb(207,128,1)"/><text x="759.00" y="526.50"></text></g><g><title>0x7fb885755991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="758" y="516" width="1" height="15" fill="rgb(228,162,41)"/><text x="761.00" y="526.50"></text></g><g><title>0x7fb885755bc0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="759" y="516" width="2" height="15" fill="rgb(241,162,16)"/><text x="762.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (2 samples, 0.25%)</title><rect x="761" y="516" width="3" height="15" fill="rgb(208,62,27)"/><text x="764.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (2 samples, 0.25%)</title><rect x="761" y="532" width="3" height="15" fill="rgb(248,106,23)"/><text x="764.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (2 samples, 0.25%)</title><rect x="761" y="548" width="3" height="15" fill="rgb(214,183,35)"/><text x="764.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.25%)</title><rect x="761" y="564" width="3" height="15" fill="rgb(251,109,48)"/><text x="764.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="762" y="580" width="2" height="15" fill="rgb(212,22,53)"/><text x="765.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.13%)</title><rect x="764" y="516" width="1" height="15" fill="rgb(247,100,41)"/><text x="767.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (11 samples, 1.39%)</title><rect x="751" y="468" width="16" height="15" fill="rgb(219,131,41)"/><text x="754.00" y="478.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (10 samples, 1.26%)</title><rect x="752" y="484" width="15" height="15" fill="rgb(235,164,13)"/><text x="755.00" y="494.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (10 samples, 1.26%)</title><rect x="752" y="500" width="15" height="15" fill="rgb(220,154,17)"/><text x="755.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.13%)</title><rect x="765" y="516" width="2" height="15" fill="rgb(221,75,32)"/><text x="768.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="801" y="500" width="2" height="15" fill="rgb(242,151,37)"/><text x="804.00" y="510.50"></text></g><g><title>0x7fb885755998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="806" y="516" width="1" height="15" fill="rgb(223,142,37)"/><text x="809.00" y="526.50"></text></g><g><title>0x7fb885755a55 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="807" y="516" width="2" height="15" fill="rgb(221,142,8)"/><text x="810.00" y="526.50"></text></g><g><title>0x7fb885755be0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="809" y="516" width="1" height="15" fill="rgb(223,213,40)"/><text x="812.00" y="526.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.13%)</title><rect x="810" y="516" width="2" height="15" fill="rgb(239,184,4)"/><text x="813.00" y="526.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (4 samples, 0.50%)</title><rect x="812" y="516" width="5" height="15" fill="rgb(226,223,30)"/><text x="815.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (4 samples, 0.50%)</title><rect x="812" y="532" width="5" height="15" fill="rgb(244,213,48)"/><text x="815.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (4 samples, 0.50%)</title><rect x="812" y="548" width="5" height="15" fill="rgb(233,132,1)"/><text x="815.00" y="558.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.50%)</title><rect x="812" y="564" width="5" height="15" fill="rgb(217,133,48)"/><text x="815.00" y="574.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.50%)</title><rect x="812" y="580" width="5" height="15" fill="rgb(238,20,39)"/><text x="815.00" y="590.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.13%)</title><rect x="817" y="516" width="2" height="15" fill="rgb(243,127,51)"/><text x="820.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (1 samples, 0.13%)</title><rect x="817" y="532" width="2" height="15" fill="rgb(247,190,8)"/><text x="820.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (1 samples, 0.13%)</title><rect x="817" y="548" width="2" height="15" fill="rgb(215,4,7)"/><text x="820.00" y="558.50"></text></g><g><title>std::__uninitialized_move_if_noexcept_a&lt;float*, float*, std::allocator&lt;float&gt; &gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="819" y="516" width="3" height="15" fill="rgb(242,212,40)"/><text x="822.00" y="526.50"></text></g><g><title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;float*&gt;, float*, float&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="819" y="532" width="3" height="15" fill="rgb(237,171,16)"/><text x="822.00" y="542.50"></text></g><g><title>std::uninitialized_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="819" y="548" width="3" height="15" fill="rgb(212,137,52)"/><text x="822.00" y="558.50"></text></g><g><title>std::__uninitialized_copy&lt;true&gt;::__uninit_copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="819" y="564" width="3" height="15" fill="rgb(253,139,17)"/><text x="822.00" y="574.50"></text></g><g><title>std::copy&lt;std::move_iterator&lt;float*&gt;, float*&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="819" y="580" width="3" height="15" fill="rgb(234,149,19)"/><text x="822.00" y="590.50"></text></g><g><title>std::__copy_move_a2&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="819" y="596" width="3" height="15" fill="rgb(227,214,9)"/><text x="822.00" y="606.50"></text></g><g><title>std::__copy_move_a&lt;true, float*, float*&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="819" y="612" width="3" height="15" fill="rgb(235,94,40)"/><text x="822.00" y="622.50"></text></g><g><title>std::__copy_move&lt;true, true, std::random_access_iterator_tag&gt;::__copy_m&lt;float&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="819" y="628" width="3" height="15" fill="rgb(216,95,40)"/><text x="822.00" y="638.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_check_len (stl_vector.h) (2 samples, 0.25%)</title><rect x="822" y="516" width="3" height="15" fill="rgb(216,153,33)"/><text x="825.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (2 samples, 0.25%)</title><rect x="822" y="532" width="3" height="15" fill="rgb(210,49,49)"/><text x="825.00" y="542.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (vector.tcc) (16 samples, 2.02%)</title><rect x="803" y="500" width="23" height="15" fill="rgb(253,44,53)"/><text x="806.00" y="510.50">s..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (1 samples, 0.13%)</title><rect x="825" y="516" width="1" height="15" fill="rgb(237,34,38)"/><text x="828.00" y="526.50"></text></g><g><title>multiclass_probability&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (42 samples, 5.30%)</title><rect x="767" y="484" width="62" height="15" fill="rgb(231,72,13)"/><text x="770.00" y="494.50">multic..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::push_back (stl_vector.h) (2 samples, 0.25%)</title><rect x="826" y="500" width="3" height="15" fill="rgb(246,20,54)"/><text x="829.00" y="510.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::emplace_back&lt;float&gt; (vector.tcc) (2 samples, 0.25%)</title><rect x="826" y="516" width="3" height="15" fill="rgb(205,128,14)"/><text x="829.00" y="526.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::size (stl_vector.h) (43 samples, 5.42%)</title><rect x="767" y="468" width="64" height="15" fill="rgb(246,167,28)"/><text x="770.00" y="478.50">std::ve..</text></g><g><title>write_scores&lt;float&gt; (mlprodict/onnxrt/ops_cpu/op_common_.hpp) (1 samples, 0.13%)</title><rect x="829" y="484" width="2" height="15" fill="rgb(233,175,35)"/><text x="832.00" y="494.50"></text></g><g><title>0x7fb8468b41b0 (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="829" y="500" width="2" height="15" fill="rgb(242,213,48)"/><text x="832.00" y="510.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.50%)</title><rect x="832" y="516" width="6" height="15" fill="rgb(244,169,25)"/><text x="835.00" y="526.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.50%)</title><rect x="832" y="532" width="6" height="15" fill="rgb(242,219,19)"/><text x="835.00" y="542.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_create_storage (stl_vector.h) (6 samples, 0.76%)</title><rect x="831" y="500" width="9" height="15" fill="rgb(227,31,40)"/><text x="834.00" y="510.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_allocate (stl_vector.h) (1 samples, 0.13%)</title><rect x="838" y="516" width="2" height="15" fill="rgb(205,51,5)"/><text x="841.00" y="526.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::allocate (alloc_traits.h) (1 samples, 0.13%)</title><rect x="838" y="532" width="2" height="15" fill="rgb(215,141,32)"/><text x="841.00" y="542.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::allocate (new_allocator.h) (1 samples, 0.13%)</title><rect x="838" y="548" width="2" height="15" fill="rgb(211,70,52)"/><text x="841.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::vector (stl_vector.h) (7 samples, 0.88%)</title><rect x="831" y="468" width="10" height="15" fill="rgb(243,219,6)"/><text x="834.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_base (stl_vector.h) (7 samples, 0.88%)</title><rect x="831" y="484" width="10" height="15" fill="rgb(226,169,47)"/><text x="834.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_Vector_impl::_Vector_impl (stl_vector.h) (1 samples, 0.13%)</title><rect x="840" y="500" width="1" height="15" fill="rgb(207,140,5)"/><text x="843.00" y="510.50"></text></g><g><title>0x7fb88575591c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="841" y="484" width="2" height="15" fill="rgb(219,149,1)"/><text x="844.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.13%)</title><rect x="843" y="484" width="1" height="15" fill="rgb(237,203,40)"/><text x="846.00" y="494.50"></text></g><g><title>0x7fb88575590a (libc-2.29.so) (1 samples, 0.13%)</title><rect x="846" y="548" width="1" height="15" fill="rgb(236,88,53)"/><text x="849.00" y="558.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::~vector (stl_vector.h) (5 samples, 0.63%)</title><rect x="841" y="468" width="8" height="15" fill="rgb(251,46,28)"/><text x="844.00" y="478.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::~_Vector_base (stl_vector.h) (3 samples, 0.38%)</title><rect x="844" y="484" width="5" height="15" fill="rgb(238,7,10)"/><text x="847.00" y="494.50"></text></g><g><title>std::_Vector_base&lt;float, std::allocator&lt;float&gt; &gt;::_M_deallocate (stl_vector.h) (3 samples, 0.38%)</title><rect x="844" y="500" width="5" height="15" fill="rgb(251,204,32)"/><text x="847.00" y="510.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;float&gt; &gt;::deallocate (alloc_traits.h) (3 samples, 0.38%)</title><rect x="844" y="516" width="5" height="15" fill="rgb(248,157,49)"/><text x="847.00" y="526.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;float&gt;::deallocate (new_allocator.h) (3 samples, 0.38%)</title><rect x="844" y="532" width="5" height="15" fill="rgb(249,93,6)"/><text x="847.00" y="542.50"></text></g><g><title>0x7fb885755998 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="847" y="548" width="2" height="15" fill="rgb(210,175,40)"/><text x="850.00" y="558.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (265 samples, 33.42%)</title><rect x="457" y="100" width="395" height="15" fill="rgb(222,194,38)"/><text x="460.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (265 samples, 33.42%)</title><rect x="457" y="116" width="395" height="15" fill="rgb(244,64,7)"/><text x="460.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (265 samples, 33.42%)</title><rect x="457" y="132" width="395" height="15" fill="rgb(242,168,4)"/><text x="460.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (265 samples, 33.42%)</title><rect x="457" y="148" width="395" height="15" fill="rgb(228,189,10)"/><text x="460.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (265 samples, 33.42%)</title><rect x="457" y="164" width="395" height="15" fill="rgb(247,216,28)"/><text x="460.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (265 samples, 33.42%)</title><rect x="457" y="180" width="395" height="15" fill="rgb(251,37,41)"/><text x="460.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (265 samples, 33.42%)</title><rect x="457" y="196" width="395" height="15" fill="rgb(241,0,39)"/><text x="460.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (265 samples, 33.42%)</title><rect x="457" y="212" width="395" height="15" fill="rgb(233,118,7)"/><text x="460.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py) (265 samples, 33.42%)</title><rect x="457" y="228" width="395" height="15" fill="rgb(233,205,2)"/><text x="460.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_svm_classifier.py)</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (263 samples, 33.17%)</title><rect x="460" y="244" width="392" height="15" fill="rgb(213,41,6)"/><text x="463.00" y="254.50">pybind11::cpp_function::dispatcher (pybind11.h)</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (263 samples, 33.17%)</title><rect x="460" y="260" width="392" height="15" fill="rgb(212,114,0)"/><text x="463.00" y="270.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (263 samples, 33.17%)</title><rect x="460" y="276" width="392" height="15" fill="rgb(239,172,39)"/><text x="463.00" y="286.50">void pybind11::cpp_function::initialize&lt;pybind11::cpp..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (263 samples, 33.17%)</title><rect x="460" y="292" width="392" height="15" fill="rgb(215,103,54)"/><text x="463.00" y="302.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifie..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (263 samples, 33.17%)</title><rect x="460" y="308" width="392" height="15" fill="rgb(224,204,50)"/><text x="463.00" y="318.50">pybind11::detail::argument_loader&lt;RuntimeSVMClassifie..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeSVMClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [49]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [49])::{lambda(RuntimeSVMClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (263 samples, 33.17%)</title><rect x="460" y="324" width="392" height="15" fill="rgb(223,128,21)"/><text x="463.00" y="334.50">pybind11::cpp_function::cpp_function&lt;pybind11::tuple,..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (263 samples, 33.17%)</title><rect x="460" y="340" width="392" height="15" fill="rgb(219,220,6)"/><text x="463.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h)</text></g><g><title>pybind11::array::~array (numpy.h) (263 samples, 33.17%)</title><rect x="460" y="356" width="392" height="15" fill="rgb(244,47,9)"/><text x="463.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (263 samples, 33.17%)</title><rect x="460" y="372" width="392" height="15" fill="rgb(253,157,25)"/><text x="463.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (263 samples, 33.17%)</title><rect x="460" y="388" width="392" height="15" fill="rgb(224,170,52)"/><text x="463.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (263 samples, 33.17%)</title><rect x="460" y="404" width="392" height="15" fill="rgb(209,105,45)"/><text x="463.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (263 samples, 33.17%)</title><rect x="460" y="420" width="392" height="15" fill="rgb(236,0,43)"/><text x="463.00" y="430.50">RuntimeSVMClassifier&lt;float&gt;::compute (mlprodict/onnxr..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (263 samples, 33.17%)</title><rect x="460" y="436" width="392" height="15" fill="rgb(208,225,51)"/><text x="463.00" y="446.50">pybind11::gil_scoped_release::~gil_scoped_release (py..</text></g><g><title>RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_classifier_.cpp) (263 samples, 33.17%)</title><rect x="460" y="452" width="392" height="15" fill="rgb(205,89,28)"/><text x="463.00" y="462.50">RuntimeSVMClassifier&lt;float&gt;::compute_gil_free (mlprod..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::resize (stl_vector.h) (2 samples, 0.25%)</title><rect x="849" y="468" width="3" height="15" fill="rgb(246,61,24)"/><text x="852.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::insert (stl_vector.h) (2 samples, 0.25%)</title><rect x="849" y="484" width="3" height="15" fill="rgb(226,223,19)"/><text x="852.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (vector.tcc) (2 samples, 0.25%)</title><rect x="849" y="500" width="3" height="15" fill="rgb(248,144,10)"/><text x="852.00" y="510.50"></text></g><g><title>std::__uninitialized_fill_n_a&lt;long*, unsigned long, long, long&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="849" y="516" width="3" height="15" fill="rgb(250,186,41)"/><text x="852.00" y="526.50"></text></g><g><title>std::uninitialized_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="849" y="532" width="3" height="15" fill="rgb(215,180,50)"/><text x="852.00" y="542.50"></text></g><g><title>std::__uninitialized_fill_n&lt;true&gt;::__uninit_fill_n&lt;long*, unsigned long, long&gt; (stl_uninitialized.h) (2 samples, 0.25%)</title><rect x="849" y="548" width="3" height="15" fill="rgb(231,228,9)"/><text x="852.00" y="558.50"></text></g><g><title>std::fill_n&lt;long*, unsigned long, long&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="849" y="564" width="3" height="15" fill="rgb(207,99,12)"/><text x="852.00" y="574.50"></text></g><g><title>std::__fill_n_a&lt;long*, unsigned long, long&gt; (stl_algobase.h) (2 samples, 0.25%)</title><rect x="849" y="580" width="3" height="15" fill="rgb(221,65,7)"/><text x="852.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="852" y="452" width="1" height="15" fill="rgb(213,153,38)"/><text x="855.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="852" y="468" width="1" height="15" fill="rgb(208,151,54)"/><text x="855.00" y="478.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="852" y="484" width="1" height="15" fill="rgb(220,203,29)"/><text x="855.00" y="494.50"></text></g><g><title>profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (267 samples, 33.67%)</title><rect x="457" y="68" width="398" height="15" fill="rgb(230,40,18)"/><text x="460.00" y="78.50">profile_pyrt (bench_SVC_rbf_b_cl_probabilityTrue_kerne..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (267 samples, 33.67%)</title><rect x="457" y="84" width="398" height="15" fill="rgb(240,56,48)"/><text x="460.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kern..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="852" y="100" width="3" height="15" fill="rgb(219,92,7)"/><text x="855.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="852" y="116" width="3" height="15" fill="rgb(251,43,18)"/><text x="855.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.25%)</title><rect x="852" y="132" width="3" height="15" fill="rgb(227,65,38)"/><text x="855.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.25%)</title><rect x="852" y="148" width="3" height="15" fill="rgb(243,200,22)"/><text x="855.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.25%)</title><rect x="852" y="164" width="3" height="15" fill="rgb(245,27,42)"/><text x="855.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.25%)</title><rect x="852" y="180" width="3" height="15" fill="rgb(221,31,21)"/><text x="855.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.25%)</title><rect x="852" y="196" width="3" height="15" fill="rgb(215,149,31)"/><text x="855.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="212" width="3" height="15" fill="rgb(235,98,21)"/><text x="855.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="228" width="3" height="15" fill="rgb(233,96,6)"/><text x="855.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="244" width="3" height="15" fill="rgb(236,140,49)"/><text x="855.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="852" y="260" width="3" height="15" fill="rgb(206,93,13)"/><text x="855.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="276" width="3" height="15" fill="rgb(246,63,49)"/><text x="855.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.25%)</title><rect x="852" y="292" width="3" height="15" fill="rgb(245,188,31)"/><text x="855.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="308" width="3" height="15" fill="rgb(249,201,38)"/><text x="855.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="324" width="3" height="15" fill="rgb(216,57,3)"/><text x="855.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="340" width="3" height="15" fill="rgb(225,173,48)"/><text x="855.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.25%)</title><rect x="852" y="356" width="3" height="15" fill="rgb(226,79,21)"/><text x="855.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="372" width="3" height="15" fill="rgb(218,206,1)"/><text x="855.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.25%)</title><rect x="852" y="388" width="3" height="15" fill="rgb(244,187,48)"/><text x="855.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="404" width="3" height="15" fill="rgb(248,81,42)"/><text x="855.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="420" width="3" height="15" fill="rgb(205,29,13)"/><text x="855.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.25%)</title><rect x="852" y="436" width="3" height="15" fill="rgb(209,95,16)"/><text x="855.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="853" y="452" width="2" height="15" fill="rgb(237,219,18)"/><text x="856.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="853" y="468" width="2" height="15" fill="rgb(227,7,4)"/><text x="856.00" y="478.50"></text></g><g><title>0x7fb885755b87 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="856" y="228" width="2" height="15" fill="rgb(244,129,13)"/><text x="859.00" y="238.50"></text></g><g><title>0x7fb88575592c (libc-2.29.so) (2 samples, 0.25%)</title><rect x="914" y="244" width="3" height="15" fill="rgb(217,166,36)"/><text x="917.00" y="254.50"></text></g><g><title>0x7fb885755945 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="917" y="244" width="2" height="15" fill="rgb(253,164,49)"/><text x="920.00" y="254.50"></text></g><g><title>0x7fb88575597c (libc-2.29.so) (1 samples, 0.13%)</title><rect x="919" y="244" width="1" height="15" fill="rgb(238,1,14)"/><text x="922.00" y="254.50"></text></g><g><title>0x7fb885755991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="920" y="244" width="2" height="15" fill="rgb(217,198,0)"/><text x="923.00" y="254.50"></text></g><g><title>0x7fb88575599b (libc-2.29.so) (1 samples, 0.13%)</title><rect x="922" y="244" width="1" height="15" fill="rgb(247,207,35)"/><text x="925.00" y="254.50"></text></g><g><title>0x7fb8857559d9 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="923" y="244" width="2" height="15" fill="rgb(248,181,50)"/><text x="926.00" y="254.50"></text></g><g><title>0x7fb8857559f0 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="925" y="244" width="1" height="15" fill="rgb(213,42,28)"/><text x="928.00" y="254.50"></text></g><g><title>0x7fb885755bd4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="926" y="244" width="2" height="15" fill="rgb(209,29,50)"/><text x="929.00" y="254.50"></text></g><g><title>0x7fb885755d02 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="928" y="244" width="1" height="15" fill="rgb(215,160,52)"/><text x="931.00" y="254.50"></text></g><g><title>0x7fb885755d07 (libc-2.29.so) (2 samples, 0.25%)</title><rect x="929" y="244" width="3" height="15" fill="rgb(225,116,21)"/><text x="932.00" y="254.50"></text></g><g><title>0x7fb885927c07 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="934" y="260" width="1" height="15" fill="rgb(208,195,11)"/><text x="937.00" y="270.50"></text></g><g><title>0x7fb885927c0c (libm-2.29.so) (1 samples, 0.13%)</title><rect x="935" y="260" width="2" height="15" fill="rgb(227,29,41)"/><text x="938.00" y="270.50"></text></g><g><title>0x7fb885927c18 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="937" y="260" width="1" height="15" fill="rgb(228,199,38)"/><text x="940.00" y="270.50"></text></g><g><title>0x7fb885927c3e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="938" y="260" width="2" height="15" fill="rgb(247,6,38)"/><text x="941.00" y="270.50"></text></g><g><title>0x7fb885927c52 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="940" y="260" width="1" height="15" fill="rgb(211,88,18)"/><text x="943.00" y="270.50"></text></g><g><title>0x7fb885927c6e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="941" y="260" width="1" height="15" fill="rgb(236,154,28)"/><text x="944.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (8 samples, 1.01%)</title><rect x="932" y="244" width="12" height="15" fill="rgb(229,201,8)"/><text x="935.00" y="254.50"></text></g><g><title>0x7fb885927c7b (libm-2.29.so) (1 samples, 0.13%)</title><rect x="942" y="260" width="2" height="15" fill="rgb(228,23,28)"/><text x="945.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (3 samples, 0.38%)</title><rect x="944" y="244" width="4" height="15" fill="rgb(231,152,52)"/><text x="947.00" y="254.50"></text></g><g><title>0x7fb885756c38 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="954" y="260" width="2" height="15" fill="rgb(243,105,0)"/><text x="957.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.88%)</title><rect x="948" y="244" width="11" height="15" fill="rgb(253,74,5)"/><text x="951.00" y="254.50"></text></g><g><title>0x7fb885756f0a (libc-2.29.so) (2 samples, 0.25%)</title><rect x="956" y="260" width="3" height="15" fill="rgb(229,69,14)"/><text x="959.00" y="270.50"></text></g><g><title>0x7fb88575590e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="995" y="260" width="1" height="15" fill="rgb(249,153,39)"/><text x="998.00" y="270.50"></text></g><g><title>0x7fb885755971 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="996" y="260" width="2" height="15" fill="rgb(223,218,48)"/><text x="999.00" y="270.50"></text></g><g><title>0x7fb885755991 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="998" y="260" width="1" height="15" fill="rgb(242,43,3)"/><text x="1001.00" y="270.50"></text></g><g><title>0x7fb885927ba0 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="1026" y="276" width="3" height="15" fill="rgb(252,16,28)"/><text x="1029.00" y="286.50"></text></g><g><title>0x7fb885927bb4 (libm-2.29.so) (4 samples, 0.50%)</title><rect x="1029" y="276" width="6" height="15" fill="rgb(232,47,26)"/><text x="1032.00" y="286.50"></text></g><g><title>0x7fb885927bd3 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="1035" y="276" width="4" height="15" fill="rgb(230,72,46)"/><text x="1038.00" y="286.50"></text></g><g><title>0x7fb885927be7 (libm-2.29.so) (3 samples, 0.38%)</title><rect x="1039" y="276" width="5" height="15" fill="rgb(234,171,45)"/><text x="1042.00" y="286.50"></text></g><g><title>0x7fb885927bf9 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="1044" y="276" width="3" height="15" fill="rgb(221,82,46)"/><text x="1047.00" y="286.50"></text></g><g><title>0x7fb885927c18 (libm-2.29.so) (5 samples, 0.63%)</title><rect x="1047" y="276" width="7" height="15" fill="rgb(226,34,24)"/><text x="1050.00" y="286.50"></text></g><g><title>0x7fb885927c2e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1054" y="276" width="2" height="15" fill="rgb(253,51,41)"/><text x="1057.00" y="286.50"></text></g><g><title>0x7fb885927c32 (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1056" y="276" width="1" height="15" fill="rgb(234,139,38)"/><text x="1059.00" y="286.50"></text></g><g><title>0x7fb885927c3e (libm-2.29.so) (1 samples, 0.13%)</title><rect x="1057" y="276" width="2" height="15" fill="rgb(217,65,20)"/><text x="1060.00" y="286.50"></text></g><g><title>0x7fb885927c46 (libm-2.29.so) (2 samples, 0.25%)</title><rect x="1059" y="276" width="3" height="15" fill="rgb(226,134,13)"/><text x="1062.00" y="286.50"></text></g><g><title>0x7fb885927c52 (libm-2.29.so) (5 samples, 0.63%)</title><rect x="1062" y="276" width="7" height="15" fill="rgb(227,144,38)"/><text x="1065.00" y="286.50"></text></g><g><title>0x7fb885927c5a (libm-2.29.so) (6 samples, 0.76%)</title><rect x="1069" y="276" width="9" height="15" fill="rgb(222,63,47)"/><text x="1072.00" y="286.50"></text></g><g><title>0x7fb885927c6e (libm-2.29.so) (3 samples, 0.38%)</title><rect x="1078" y="276" width="4" height="15" fill="rgb(215,117,13)"/><text x="1081.00" y="286.50"></text></g><g><title>0x7fb885927c7b (libm-2.29.so) (5 samples, 0.63%)</title><rect x="1082" y="276" width="8" height="15" fill="rgb(216,124,45)"/><text x="1085.00" y="286.50"></text></g><g><title>exp (libm-2.29.so) (69 samples, 8.70%)</title><rect x="999" y="260" width="103" height="15" fill="rgb(235,41,46)"/><text x="1002.00" y="270.50">exp (libm-2...</text></g><g><title>0x7fb885927c7f (libm-2.29.so) (8 samples, 1.01%)</title><rect x="1090" y="276" width="12" height="15" fill="rgb(245,72,1)"/><text x="1093.00" y="286.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.25%)</title><rect x="1102" y="260" width="3" height="15" fill="rgb(240,50,0)"/><text x="1105.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.25%)</title><rect x="1105" y="260" width="3" height="15" fill="rgb(241,3,51)"/><text x="1108.00" y="270.50"></text></g><g><title>0x7fb860244553 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (209 samples, 26.36%)</title><rect x="856" y="196" width="311" height="15" fill="rgb(241,133,6)"/><text x="859.00" y="206.50">0x7fb860244553 (sklearn/svm/_libsvm.cpyth..</text></g><g><title>copy_predict_proba (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (209 samples, 26.36%)</title><rect x="856" y="212" width="311" height="15" fill="rgb(221,29,44)"/><text x="859.00" y="222.50">copy_predict_proba (sklearn/svm/_libsvm.c..</text></g><g><title>svm_predict_probability (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (208 samples, 26.23%)</title><rect x="858" y="228" width="309" height="15" fill="rgb(246,65,44)"/><text x="861.00" y="238.50">svm_predict_probability (sklearn/svm/_lib..</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (140 samples, 17.65%)</title><rect x="959" y="244" width="208" height="15" fill="rgb(230,40,4)"/><text x="962.00" y="254.50">svm_predict_values (sklearn..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (40 samples, 5.04%)</title><rect x="1108" y="260" width="59" height="15" fill="rgb(239,145,42)"/><text x="1111.00" y="270.50">svm::K..</text></g><g><title>_dense_predict_proba (sklearn/svm/_base.py) (210 samples, 26.48%)</title><rect x="856" y="164" width="313" height="15" fill="rgb(229,32,10)"/><text x="859.00" y="174.50">_dense_predict_proba (sklearn/svm/_base.py)</text></g><g><title>0x7fb8602463fd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (210 samples, 26.48%)</title><rect x="856" y="180" width="313" height="15" fill="rgb(205,202,46)"/><text x="859.00" y="190.50">0x7fb8602463fd (sklearn/svm/_libsvm.cpytho..</text></g><g><title>0x7fb8602447b4 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="1167" y="196" width="2" height="15" fill="rgb(225,169,31)"/><text x="1170.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1167" y="212" width="2" height="15" fill="rgb(219,49,0)"/><text x="1170.00" y="222.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.13%)</title><rect x="1167" y="228" width="2" height="15" fill="rgb(227,185,8)"/><text x="1170.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1167" y="244" width="2" height="15" fill="rgb(236,137,23)"/><text x="1170.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.13%)</title><rect x="1172" y="196" width="1" height="15" fill="rgb(238,23,10)"/><text x="1175.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.25%)</title><rect x="1173" y="196" width="3" height="15" fill="rgb(224,99,23)"/><text x="1176.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="1176" y="196" width="2" height="15" fill="rgb(245,157,16)"/><text x="1179.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (7 samples, 0.88%)</title><rect x="1169" y="180" width="10" height="15" fill="rgb(251,47,13)"/><text x="1172.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.13%)</title><rect x="1178" y="196" width="1" height="15" fill="rgb(206,148,1)"/><text x="1181.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1178" y="212" width="1" height="15" fill="rgb(249,4,34)"/><text x="1181.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.13%)</title><rect x="1178" y="228" width="1" height="15" fill="rgb(215,95,50)"/><text x="1181.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="1178" y="244" width="1" height="15" fill="rgb(225,47,6)"/><text x="1181.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="1178" y="260" width="1" height="15" fill="rgb(238,92,3)"/><text x="1181.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1178" y="276" width="1" height="15" fill="rgb(234,98,16)"/><text x="1181.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="1178" y="292" width="1" height="15" fill="rgb(223,71,41)"/><text x="1181.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1178" y="308" width="1" height="15" fill="rgb(205,124,31)"/><text x="1181.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 0.63%)</title><rect x="1179" y="196" width="8" height="15" fill="rgb(253,99,49)"/><text x="1182.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.13%)</title><rect x="1185" y="212" width="2" height="15" fill="rgb(208,97,30)"/><text x="1188.00" y="222.50"></text></g><g><title>profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (224 samples, 28.25%)</title><rect x="855" y="100" width="333" height="15" fill="rgb(239,86,28)"/><text x="858.00" y="110.50">profile (bench_SVC_rbf_b_cl_probabilityTrue_k..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 28.25%)</title><rect x="855" y="116" width="333" height="15" fill="rgb(237,65,5)"/><text x="858.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (224 samples, 28.25%)</title><rect x="855" y="132" width="333" height="15" fill="rgb(206,181,26)"/><text x="858.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>_predict_proba (sklearn/svm/_base.py) (224 samples, 28.25%)</title><rect x="855" y="148" width="333" height="15" fill="rgb(207,48,6)"/><text x="858.00" y="158.50">_predict_proba (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (13 samples, 1.64%)</title><rect x="1169" y="164" width="19" height="15" fill="rgb(233,56,53)"/><text x="1172.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 0.76%)</title><rect x="1179" y="180" width="9" height="15" fill="rgb(251,39,1)"/><text x="1182.00" y="190.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.13%)</title><rect x="1187" y="196" width="1" height="15" fill="rgb(252,193,45)"/><text x="1190.00" y="206.50"></text></g><g><title>all (793 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,46,5)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (793 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,101,1)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (225 samples, 28.37%)</title><rect x="855" y="68" width="335" height="15" fill="rgb(236,155,3)"/><text x="858.00" y="78.50">profile_skl (bench_SVC_rbf_b_cl_probabilityTr..</text></g><g><title>setup_profile (bench_SVC_rbf_b_cl_probabilityTrue_kernelrbf_1000_4_12_float_.py) (225 samples, 28.37%)</title><rect x="855" y="84" width="335" height="15" fill="rgb(230,162,11)"/><text x="858.00" y="94.50">setup_profile (bench_SVC_rbf_b_cl_probability..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(250,222,32)"/><text x="1191.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.13%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(240,62,36)"/><text x="1191.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.13%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(240,46,40)"/><text x="1191.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(243,29,46)"/><text x="1191.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(216,78,35)"/><text x="1191.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(218,137,9)"/><text x="1191.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(227,77,23)"/><text x="1191.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(209,165,13)"/><text x="1191.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.13%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(210,224,29)"/><text x="1191.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(247,127,53)"/><text x="1191.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(219,207,18)"/><text x="1191.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(211,130,1)"/><text x="1191.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(207,126,51)"/><text x="1191.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(217,144,41)"/><text x="1191.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (1 samples, 0.13%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(240,179,35)"/><text x="1191.00" y="334.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.13%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(240,150,35)"/><text x="1191.00" y="350.50"></text></g></g></svg>