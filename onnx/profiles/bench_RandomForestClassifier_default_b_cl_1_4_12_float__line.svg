<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1526" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="1509.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1509.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (3 samples, 1.28%)</title><rect x="0.0000%" y="148" width="1.2766%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="164" width="1.2766%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="0.0000%" y="180" width="1.2766%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="196" width="1.2766%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="212" width="1.2766%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="228" width="1.2766%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="244" width="1.2766%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="260" width="1.2766%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="276" width="1.2766%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.28%)</title><rect x="0.0000%" y="292" width="1.2766%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="308" width="1.2766%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="324" width="1.2766%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="340" width="1.2766%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="356" width="1.2766%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="372" width="1.2766%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.28%)</title><rect x="0.0000%" y="388" width="1.2766%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="404" width="1.2766%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="420" width="1.2766%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="436" width="1.2766%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="452" width="1.2766%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="468" width="1.2766%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.28%)</title><rect x="0.0000%" y="484" width="1.2766%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="500" width="1.2766%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="516" width="1.2766%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="532" width="1.2766%" height="15" fill="rgb(241,131,45)"/><text x="0.2500%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="548" width="1.2766%" height="15" fill="rgb(249,31,29)"/><text x="0.2500%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="564" width="1.2766%" height="15" fill="rgb(225,111,53)"/><text x="0.2500%" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.28%)</title><rect x="0.0000%" y="580" width="1.2766%" height="15" fill="rgb(238,160,17)"/><text x="0.2500%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="596" width="1.2766%" height="15" fill="rgb(214,148,48)"/><text x="0.2500%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="0.0000%" y="612" width="1.2766%" height="15" fill="rgb(232,36,49)"/><text x="0.2500%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="628" width="1.2766%" height="15" fill="rgb(209,103,24)"/><text x="0.2500%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="644" width="1.2766%" height="15" fill="rgb(229,88,8)"/><text x="0.2500%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="660" width="1.2766%" height="15" fill="rgb(213,181,19)"/><text x="0.2500%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="676" width="1.2766%" height="15" fill="rgb(254,191,54)"/><text x="0.2500%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="692" width="1.2766%" height="15" fill="rgb(241,83,37)"/><text x="0.2500%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="708" width="1.2766%" height="15" fill="rgb(233,36,39)"/><text x="0.2500%" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.28%)</title><rect x="0.0000%" y="724" width="1.2766%" height="15" fill="rgb(226,3,54)"/><text x="0.2500%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="0.0000%" y="740" width="1.2766%" height="15" fill="rgb(245,192,40)"/><text x="0.2500%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="0.0000%" y="756" width="1.2766%" height="15" fill="rgb(238,167,29)"/><text x="0.2500%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="0.0000%" y="772" width="1.2766%" height="15" fill="rgb(232,182,51)"/><text x="0.2500%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="0.0000%" y="788" width="1.2766%" height="15" fill="rgb(231,60,39)"/><text x="0.2500%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="0.0000%" y="804" width="1.2766%" height="15" fill="rgb(208,69,12)"/><text x="0.2500%" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.28%)</title><rect x="0.0000%" y="820" width="1.2766%" height="15" fill="rgb(235,93,37)"/><text x="0.2500%" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.28%)</title><rect x="0.0000%" y="836" width="1.2766%" height="15" fill="rgb(213,116,39)"/><text x="0.2500%" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.28%)</title><rect x="0.0000%" y="852" width="1.2766%" height="15" fill="rgb(222,207,29)"/><text x="0.2500%" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.28%)</title><rect x="0.0000%" y="868" width="1.2766%" height="15" fill="rgb(206,96,30)"/><text x="0.2500%" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.28%)</title><rect x="0.0000%" y="884" width="1.2766%" height="15" fill="rgb(218,138,4)"/><text x="0.2500%" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.28%)</title><rect x="0.0000%" y="900" width="1.2766%" height="15" fill="rgb(250,191,14)"/><text x="0.2500%" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 1.28%)</title><rect x="0.0000%" y="916" width="1.2766%" height="15" fill="rgb(239,60,40)"/><text x="0.2500%" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (3 samples, 1.28%)</title><rect x="1.2766%" y="148" width="1.2766%" height="15" fill="rgb(206,27,48)"/><text x="1.5266%" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="1.2766%" y="164" width="1.2766%" height="15" fill="rgb(225,35,8)"/><text x="1.5266%" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="1.2766%" y="180" width="1.2766%" height="15" fill="rgb(250,213,24)"/><text x="1.5266%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="1.2766%" y="196" width="1.2766%" height="15" fill="rgb(247,123,22)"/><text x="1.5266%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="1.2766%" y="212" width="1.2766%" height="15" fill="rgb(231,138,38)"/><text x="1.5266%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="1.2766%" y="228" width="1.2766%" height="15" fill="rgb(231,145,46)"/><text x="1.5266%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="1.2766%" y="244" width="1.2766%" height="15" fill="rgb(251,118,11)"/><text x="1.5266%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="1.2766%" y="260" width="1.2766%" height="15" fill="rgb(217,147,25)"/><text x="1.5266%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="1.2766%" y="276" width="1.2766%" height="15" fill="rgb(247,81,37)"/><text x="1.5266%" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 1.28%)</title><rect x="1.2766%" y="292" width="1.2766%" height="15" fill="rgb(209,12,38)"/><text x="1.5266%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="1.2766%" y="308" width="1.2766%" height="15" fill="rgb(227,1,9)"/><text x="1.5266%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="1.2766%" y="324" width="1.2766%" height="15" fill="rgb(248,47,43)"/><text x="1.5266%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="1.2766%" y="340" width="1.2766%" height="15" fill="rgb(221,10,30)"/><text x="1.5266%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="1.2766%" y="356" width="1.2766%" height="15" fill="rgb(210,229,1)"/><text x="1.5266%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="1.2766%" y="372" width="1.2766%" height="15" fill="rgb(222,148,37)"/><text x="1.5266%" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 1.28%)</title><rect x="1.2766%" y="388" width="1.2766%" height="15" fill="rgb(234,67,33)"/><text x="1.5266%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="1.2766%" y="404" width="1.2766%" height="15" fill="rgb(247,98,35)"/><text x="1.5266%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="1.2766%" y="420" width="1.2766%" height="15" fill="rgb(247,138,52)"/><text x="1.5266%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="1.2766%" y="436" width="1.2766%" height="15" fill="rgb(213,79,30)"/><text x="1.5266%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="1.2766%" y="452" width="1.2766%" height="15" fill="rgb(246,177,23)"/><text x="1.5266%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="1.2766%" y="468" width="1.2766%" height="15" fill="rgb(230,62,27)"/><text x="1.5266%" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.70%)</title><rect x="3.4043%" y="436" width="1.7021%" height="15" fill="rgb(216,154,8)"/><text x="3.6543%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.70%)</title><rect x="3.4043%" y="452" width="1.7021%" height="15" fill="rgb(244,35,45)"/><text x="3.6543%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.70%)</title><rect x="3.4043%" y="468" width="1.7021%" height="15" fill="rgb(251,115,12)"/><text x="3.6543%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.70%)</title><rect x="3.4043%" y="484" width="1.7021%" height="15" fill="rgb(240,54,50)"/><text x="3.6543%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.70%)</title><rect x="3.4043%" y="500" width="1.7021%" height="15" fill="rgb(233,84,52)"/><text x="3.6543%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.70%)</title><rect x="3.4043%" y="516" width="1.7021%" height="15" fill="rgb(207,117,47)"/><text x="3.6543%" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:13) (4 samples, 1.70%)</title><rect x="3.4043%" y="532" width="1.7021%" height="15" fill="rgb(249,43,39)"/><text x="3.6543%" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.70%)</title><rect x="3.4043%" y="548" width="1.7021%" height="15" fill="rgb(209,38,44)"/><text x="3.6543%" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.70%)</title><rect x="3.4043%" y="564" width="1.7021%" height="15" fill="rgb(236,212,23)"/><text x="3.6543%" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.70%)</title><rect x="3.4043%" y="580" width="1.7021%" height="15" fill="rgb(242,79,21)"/><text x="3.6543%" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.70%)</title><rect x="3.4043%" y="596" width="1.7021%" height="15" fill="rgb(211,96,35)"/><text x="3.6543%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.70%)</title><rect x="3.4043%" y="612" width="1.7021%" height="15" fill="rgb(253,215,40)"/><text x="3.6543%" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.28%)</title><rect x="3.8298%" y="628" width="1.2766%" height="15" fill="rgb(211,81,21)"/><text x="4.0798%" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="644" width="1.2766%" height="15" fill="rgb(208,190,38)"/><text x="4.0798%" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="660" width="1.2766%" height="15" fill="rgb(235,213,38)"/><text x="4.0798%" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="676" width="1.2766%" height="15" fill="rgb(237,122,38)"/><text x="4.0798%" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="692" width="1.2766%" height="15" fill="rgb(244,218,35)"/><text x="4.0798%" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="708" width="1.2766%" height="15" fill="rgb(240,68,47)"/><text x="4.0798%" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.28%)</title><rect x="3.8298%" y="724" width="1.2766%" height="15" fill="rgb(210,16,53)"/><text x="4.0798%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="740" width="1.2766%" height="15" fill="rgb(235,124,12)"/><text x="4.0798%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="756" width="1.2766%" height="15" fill="rgb(224,169,11)"/><text x="4.0798%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="772" width="1.2766%" height="15" fill="rgb(250,166,2)"/><text x="4.0798%" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="788" width="1.2766%" height="15" fill="rgb(242,216,29)"/><text x="4.0798%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="804" width="1.2766%" height="15" fill="rgb(230,116,27)"/><text x="4.0798%" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.28%)</title><rect x="3.8298%" y="820" width="1.2766%" height="15" fill="rgb(228,99,48)"/><text x="4.0798%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="836" width="1.2766%" height="15" fill="rgb(253,11,6)"/><text x="4.0798%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="852" width="1.2766%" height="15" fill="rgb(247,143,39)"/><text x="4.0798%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="868" width="1.2766%" height="15" fill="rgb(236,97,10)"/><text x="4.0798%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="884" width="1.2766%" height="15" fill="rgb(233,208,19)"/><text x="4.0798%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="900" width="1.2766%" height="15" fill="rgb(216,164,2)"/><text x="4.0798%" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 1.28%)</title><rect x="3.8298%" y="916" width="1.2766%" height="15" fill="rgb(220,129,5)"/><text x="4.0798%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="932" width="1.2766%" height="15" fill="rgb(242,17,10)"/><text x="4.0798%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="948" width="1.2766%" height="15" fill="rgb(242,107,0)"/><text x="4.0798%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="964" width="1.2766%" height="15" fill="rgb(251,28,31)"/><text x="4.0798%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="980" width="1.2766%" height="15" fill="rgb(233,223,10)"/><text x="4.0798%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="996" width="1.2766%" height="15" fill="rgb(215,21,27)"/><text x="4.0798%" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (3 samples, 1.28%)</title><rect x="3.8298%" y="1012" width="1.2766%" height="15" fill="rgb(232,23,21)"/><text x="4.0798%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="1028" width="1.2766%" height="15" fill="rgb(244,5,23)"/><text x="4.0798%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="1044" width="1.2766%" height="15" fill="rgb(226,81,46)"/><text x="4.0798%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="1060" width="1.2766%" height="15" fill="rgb(247,70,30)"/><text x="4.0798%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="1076" width="1.2766%" height="15" fill="rgb(212,68,19)"/><text x="4.0798%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="1092" width="1.2766%" height="15" fill="rgb(240,187,13)"/><text x="4.0798%" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (3 samples, 1.28%)</title><rect x="3.8298%" y="1108" width="1.2766%" height="15" fill="rgb(223,113,26)"/><text x="4.0798%" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="1124" width="1.2766%" height="15" fill="rgb(206,192,2)"/><text x="4.0798%" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="1140" width="1.2766%" height="15" fill="rgb(241,108,4)"/><text x="4.0798%" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="1156" width="1.2766%" height="15" fill="rgb(247,173,49)"/><text x="4.0798%" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="1172" width="1.2766%" height="15" fill="rgb(224,114,35)"/><text x="4.0798%" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="1188" width="1.2766%" height="15" fill="rgb(245,159,27)"/><text x="4.0798%" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (3 samples, 1.28%)</title><rect x="3.8298%" y="1204" width="1.2766%" height="15" fill="rgb(245,172,44)"/><text x="4.0798%" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="1220" width="1.2766%" height="15" fill="rgb(236,23,11)"/><text x="4.0798%" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="1236" width="1.2766%" height="15" fill="rgb(205,117,38)"/><text x="4.0798%" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="1252" width="1.2766%" height="15" fill="rgb(237,72,25)"/><text x="4.0798%" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="1268" width="1.2766%" height="15" fill="rgb(244,70,9)"/><text x="4.0798%" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="1284" width="1.2766%" height="15" fill="rgb(217,125,39)"/><text x="4.0798%" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (3 samples, 1.28%)</title><rect x="3.8298%" y="1300" width="1.2766%" height="15" fill="rgb(235,36,10)"/><text x="4.0798%" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="1316" width="1.2766%" height="15" fill="rgb(251,123,47)"/><text x="4.0798%" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="1332" width="1.2766%" height="15" fill="rgb(221,13,13)"/><text x="4.0798%" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="1348" width="1.2766%" height="15" fill="rgb(238,131,9)"/><text x="4.0798%" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="1364" width="1.2766%" height="15" fill="rgb(211,50,8)"/><text x="4.0798%" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="1380" width="1.2766%" height="15" fill="rgb(245,182,24)"/><text x="4.0798%" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (3 samples, 1.28%)</title><rect x="3.8298%" y="1396" width="1.2766%" height="15" fill="rgb(242,14,37)"/><text x="4.0798%" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="3.8298%" y="1412" width="1.2766%" height="15" fill="rgb(246,228,12)"/><text x="4.0798%" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="3.8298%" y="1428" width="1.2766%" height="15" fill="rgb(213,55,15)"/><text x="4.0798%" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="3.8298%" y="1444" width="1.2766%" height="15" fill="rgb(209,9,3)"/><text x="4.0798%" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="3.8298%" y="1460" width="1.2766%" height="15" fill="rgb(230,59,30)"/><text x="4.0798%" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="3.8298%" y="1476" width="1.2766%" height="15" fill="rgb(209,121,21)"/><text x="4.0798%" y="1486.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:4) (15 samples, 6.38%)</title><rect x="0.0000%" y="52" width="6.3830%" height="15" fill="rgb(220,109,13)"/><text x="0.2500%" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 6.38%)</title><rect x="0.0000%" y="68" width="6.3830%" height="15" fill="rgb(232,18,1)"/><text x="0.2500%" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 6.38%)</title><rect x="0.0000%" y="84" width="6.3830%" height="15" fill="rgb(215,41,42)"/><text x="0.2500%" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 6.38%)</title><rect x="0.0000%" y="100" width="6.3830%" height="15" fill="rgb(224,123,36)"/><text x="0.2500%" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 6.38%)</title><rect x="0.0000%" y="116" width="6.3830%" height="15" fill="rgb(240,125,3)"/><text x="0.2500%" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 6.38%)</title><rect x="0.0000%" y="132" width="6.3830%" height="15" fill="rgb(205,98,50)"/><text x="0.2500%" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (9 samples, 3.83%)</title><rect x="2.5532%" y="148" width="3.8298%" height="15" fill="rgb(205,185,37)"/><text x="2.8032%" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.83%)</title><rect x="2.5532%" y="164" width="3.8298%" height="15" fill="rgb(238,207,15)"/><text x="2.8032%" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.83%)</title><rect x="2.5532%" y="180" width="3.8298%" height="15" fill="rgb(213,199,42)"/><text x="2.8032%" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.83%)</title><rect x="2.5532%" y="196" width="3.8298%" height="15" fill="rgb(235,201,11)"/><text x="2.8032%" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.83%)</title><rect x="2.5532%" y="212" width="3.8298%" height="15" fill="rgb(207,46,11)"/><text x="2.8032%" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.83%)</title><rect x="2.5532%" y="228" width="3.8298%" height="15" fill="rgb(241,35,35)"/><text x="2.8032%" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 2.98%)</title><rect x="3.4043%" y="244" width="2.9787%" height="15" fill="rgb(243,32,47)"/><text x="3.6543%" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.98%)</title><rect x="3.4043%" y="260" width="2.9787%" height="15" fill="rgb(247,202,23)"/><text x="3.6543%" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.98%)</title><rect x="3.4043%" y="276" width="2.9787%" height="15" fill="rgb(219,102,11)"/><text x="3.6543%" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.98%)</title><rect x="3.4043%" y="292" width="2.9787%" height="15" fill="rgb(243,110,44)"/><text x="3.6543%" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.98%)</title><rect x="3.4043%" y="308" width="2.9787%" height="15" fill="rgb(222,74,54)"/><text x="3.6543%" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.98%)</title><rect x="3.4043%" y="324" width="2.9787%" height="15" fill="rgb(216,99,12)"/><text x="3.6543%" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 2.98%)</title><rect x="3.4043%" y="340" width="2.9787%" height="15" fill="rgb(226,22,26)"/><text x="3.6543%" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.98%)</title><rect x="3.4043%" y="356" width="2.9787%" height="15" fill="rgb(217,163,10)"/><text x="3.6543%" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.98%)</title><rect x="3.4043%" y="372" width="2.9787%" height="15" fill="rgb(213,25,53)"/><text x="3.6543%" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.98%)</title><rect x="3.4043%" y="388" width="2.9787%" height="15" fill="rgb(252,105,26)"/><text x="3.6543%" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.98%)</title><rect x="3.4043%" y="404" width="2.9787%" height="15" fill="rgb(220,39,43)"/><text x="3.6543%" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.98%)</title><rect x="3.4043%" y="420" width="2.9787%" height="15" fill="rgb(229,68,48)"/><text x="3.6543%" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.28%)</title><rect x="5.1064%" y="436" width="1.2766%" height="15" fill="rgb(252,8,32)"/><text x="5.3564%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="452" width="1.2766%" height="15" fill="rgb(223,20,43)"/><text x="5.3564%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="5.1064%" y="468" width="1.2766%" height="15" fill="rgb(229,81,49)"/><text x="5.3564%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="484" width="1.2766%" height="15" fill="rgb(236,28,36)"/><text x="5.3564%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="500" width="1.2766%" height="15" fill="rgb(249,185,26)"/><text x="5.3564%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="516" width="1.2766%" height="15" fill="rgb(249,174,33)"/><text x="5.3564%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="532" width="1.2766%" height="15" fill="rgb(233,201,37)"/><text x="5.3564%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="548" width="1.2766%" height="15" fill="rgb(221,78,26)"/><text x="5.3564%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="564" width="1.2766%" height="15" fill="rgb(250,127,30)"/><text x="5.3564%" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.28%)</title><rect x="5.1064%" y="580" width="1.2766%" height="15" fill="rgb(230,49,44)"/><text x="5.3564%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="596" width="1.2766%" height="15" fill="rgb(229,67,23)"/><text x="5.3564%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="612" width="1.2766%" height="15" fill="rgb(249,83,47)"/><text x="5.3564%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="628" width="1.2766%" height="15" fill="rgb(215,43,3)"/><text x="5.3564%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="644" width="1.2766%" height="15" fill="rgb(238,154,13)"/><text x="5.3564%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="660" width="1.2766%" height="15" fill="rgb(219,56,2)"/><text x="5.3564%" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.28%)</title><rect x="5.1064%" y="676" width="1.2766%" height="15" fill="rgb(233,0,4)"/><text x="5.3564%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="692" width="1.2766%" height="15" fill="rgb(235,30,7)"/><text x="5.3564%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="708" width="1.2766%" height="15" fill="rgb(250,79,13)"/><text x="5.3564%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="724" width="1.2766%" height="15" fill="rgb(211,146,34)"/><text x="5.3564%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="740" width="1.2766%" height="15" fill="rgb(228,22,38)"/><text x="5.3564%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="756" width="1.2766%" height="15" fill="rgb(235,168,5)"/><text x="5.3564%" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.28%)</title><rect x="5.1064%" y="772" width="1.2766%" height="15" fill="rgb(221,155,16)"/><text x="5.3564%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="788" width="1.2766%" height="15" fill="rgb(215,215,53)"/><text x="5.3564%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="804" width="1.2766%" height="15" fill="rgb(223,4,10)"/><text x="5.3564%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="820" width="1.2766%" height="15" fill="rgb(234,103,6)"/><text x="5.3564%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="836" width="1.2766%" height="15" fill="rgb(227,97,0)"/><text x="5.3564%" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="852" width="1.2766%" height="15" fill="rgb(234,150,53)"/><text x="5.3564%" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.28%)</title><rect x="5.1064%" y="868" width="1.2766%" height="15" fill="rgb(228,201,54)"/><text x="5.3564%" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="884" width="1.2766%" height="15" fill="rgb(222,22,37)"/><text x="5.3564%" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="5.1064%" y="900" width="1.2766%" height="15" fill="rgb(237,53,32)"/><text x="5.3564%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="916" width="1.2766%" height="15" fill="rgb(233,25,53)"/><text x="5.3564%" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="932" width="1.2766%" height="15" fill="rgb(210,40,34)"/><text x="5.3564%" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="948" width="1.2766%" height="15" fill="rgb(241,220,44)"/><text x="5.3564%" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="964" width="1.2766%" height="15" fill="rgb(235,28,35)"/><text x="5.3564%" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="980" width="1.2766%" height="15" fill="rgb(210,56,17)"/><text x="5.3564%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="996" width="1.2766%" height="15" fill="rgb(224,130,29)"/><text x="5.3564%" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.28%)</title><rect x="5.1064%" y="1012" width="1.2766%" height="15" fill="rgb(235,212,8)"/><text x="5.3564%" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="1028" width="1.2766%" height="15" fill="rgb(223,33,50)"/><text x="5.3564%" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="1044" width="1.2766%" height="15" fill="rgb(219,149,13)"/><text x="5.3564%" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="1060" width="1.2766%" height="15" fill="rgb(250,156,29)"/><text x="5.3564%" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="1076" width="1.2766%" height="15" fill="rgb(216,193,19)"/><text x="5.3564%" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1092" width="1.2766%" height="15" fill="rgb(216,135,14)"/><text x="5.3564%" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.28%)</title><rect x="5.1064%" y="1108" width="1.2766%" height="15" fill="rgb(241,47,5)"/><text x="5.3564%" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.28%)</title><rect x="5.1064%" y="1124" width="1.2766%" height="15" fill="rgb(233,42,35)"/><text x="5.3564%" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1140" width="1.2766%" height="15" fill="rgb(231,13,6)"/><text x="5.3564%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="1156" width="1.2766%" height="15" fill="rgb(207,181,40)"/><text x="5.3564%" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="1172" width="1.2766%" height="15" fill="rgb(254,173,49)"/><text x="5.3564%" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="1188" width="1.2766%" height="15" fill="rgb(221,1,38)"/><text x="5.3564%" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="1204" width="1.2766%" height="15" fill="rgb(206,124,46)"/><text x="5.3564%" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1220" width="1.2766%" height="15" fill="rgb(249,21,11)"/><text x="5.3564%" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.28%)</title><rect x="5.1064%" y="1236" width="1.2766%" height="15" fill="rgb(222,201,40)"/><text x="5.3564%" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.28%)</title><rect x="5.1064%" y="1252" width="1.2766%" height="15" fill="rgb(235,61,29)"/><text x="5.3564%" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1268" width="1.2766%" height="15" fill="rgb(219,207,3)"/><text x="5.3564%" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="1284" width="1.2766%" height="15" fill="rgb(222,56,46)"/><text x="5.3564%" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="1300" width="1.2766%" height="15" fill="rgb(239,76,54)"/><text x="5.3564%" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="1316" width="1.2766%" height="15" fill="rgb(231,124,27)"/><text x="5.3564%" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="1332" width="1.2766%" height="15" fill="rgb(249,195,6)"/><text x="5.3564%" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1348" width="1.2766%" height="15" fill="rgb(237,174,47)"/><text x="5.3564%" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.28%)</title><rect x="5.1064%" y="1364" width="1.2766%" height="15" fill="rgb(206,201,31)"/><text x="5.3564%" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="5.1064%" y="1380" width="1.2766%" height="15" fill="rgb(231,57,52)"/><text x="5.3564%" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="5.1064%" y="1396" width="1.2766%" height="15" fill="rgb(248,177,22)"/><text x="5.3564%" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="5.1064%" y="1412" width="1.2766%" height="15" fill="rgb(215,211,37)"/><text x="5.3564%" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="5.1064%" y="1428" width="1.2766%" height="15" fill="rgb(241,128,51)"/><text x="5.3564%" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="5.1064%" y="1444" width="1.2766%" height="15" fill="rgb(227,165,31)"/><text x="5.3564%" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.28%)</title><rect x="5.1064%" y="1460" width="1.2766%" height="15" fill="rgb(228,167,24)"/><text x="5.3564%" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.28%)</title><rect x="5.1064%" y="1476" width="1.2766%" height="15" fill="rgb(228,143,12)"/><text x="5.3564%" y="1486.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:40) (3 samples, 1.28%)</title><rect x="6.3830%" y="52" width="1.2766%" height="15" fill="rgb(249,149,8)"/><text x="6.6330%" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:11) (3 samples, 1.28%)</title><rect x="6.3830%" y="68" width="1.2766%" height="15" fill="rgb(243,35,44)"/><text x="6.6330%" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (3 samples, 1.28%)</title><rect x="6.3830%" y="84" width="1.2766%" height="15" fill="rgb(246,89,9)"/><text x="6.6330%" y="94.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:827) (5 samples, 2.13%)</title><rect x="8.9362%" y="180" width="2.1277%" height="15" fill="rgb(233,213,13)"/><text x="9.1862%" y="190.50">d..</text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:47) (13 samples, 5.53%)</title><rect x="7.6596%" y="52" width="5.5319%" height="15" fill="rgb(233,141,41)"/><text x="7.9096%" y="62.50">&lt;module..</text></g><g><title>profile0_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:46) (13 samples, 5.53%)</title><rect x="7.6596%" y="68" width="5.5319%" height="15" fill="rgb(239,167,4)"/><text x="7.9096%" y="78.50">profile..</text></g><g><title>setup_profile0 (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:26) (12 samples, 5.11%)</title><rect x="8.0851%" y="84" width="5.1064%" height="15" fill="rgb(209,217,16)"/><text x="8.3351%" y="94.50">setup_..</text></g><g><title>profile0 (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (12 samples, 5.11%)</title><rect x="8.0851%" y="100" width="5.1064%" height="15" fill="rgb(219,88,35)"/><text x="8.3351%" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:183) (12 samples, 5.11%)</title><rect x="8.0851%" y="116" width="5.1064%" height="15" fill="rgb(220,193,23)"/><text x="8.3351%" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:229) (12 samples, 5.11%)</title><rect x="8.0851%" y="132" width="5.1064%" height="15" fill="rgb(230,90,52)"/><text x="8.3351%" y="142.50">&lt;lambd..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (12 samples, 5.11%)</title><rect x="8.0851%" y="148" width="5.1064%" height="15" fill="rgb(252,106,19)"/><text x="8.3351%" y="158.50">predic..</text></g><g><title>__call__ (joblib/parallel.py:1007) (12 samples, 5.11%)</title><rect x="8.0851%" y="164" width="5.1064%" height="15" fill="rgb(206,74,20)"/><text x="8.3351%" y="174.50">__call..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (3 samples, 1.28%)</title><rect x="11.9149%" y="180" width="1.2766%" height="15" fill="rgb(230,138,44)"/><text x="12.1649%" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:754) (3 samples, 1.28%)</title><rect x="11.9149%" y="196" width="1.2766%" height="15" fill="rgb(235,182,43)"/><text x="12.1649%" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:209) (3 samples, 1.28%)</title><rect x="11.9149%" y="212" width="1.2766%" height="15" fill="rgb(242,16,51)"/><text x="12.1649%" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:590) (3 samples, 1.28%)</title><rect x="11.9149%" y="228" width="1.2766%" height="15" fill="rgb(248,9,4)"/><text x="12.1649%" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 1.28%)</title><rect x="11.9149%" y="244" width="1.2766%" height="15" fill="rgb(210,31,22)"/><text x="12.1649%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 1.28%)</title><rect x="11.9149%" y="260" width="1.2766%" height="15" fill="rgb(239,54,39)"/><text x="12.1649%" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (3 samples, 1.28%)</title><rect x="11.9149%" y="276" width="1.2766%" height="15" fill="rgb(230,99,41)"/><text x="12.1649%" y="286.50"></text></g><g><title>get (queue.py:164) (3 samples, 1.28%)</title><rect x="16.1702%" y="196" width="1.2766%" height="15" fill="rgb(253,106,12)"/><text x="16.4202%" y="206.50"></text></g><g><title>get (queue.py:167) (4 samples, 1.70%)</title><rect x="17.4468%" y="196" width="1.7021%" height="15" fill="rgb(213,46,41)"/><text x="17.6968%" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (10 samples, 4.26%)</title><rect x="15.7447%" y="180" width="4.2553%" height="15" fill="rgb(215,133,35)"/><text x="15.9947%" y="190.50">dispa..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (12 samples, 5.11%)</title><rect x="20.4255%" y="180" width="5.1064%" height="15" fill="rgb(213,28,5)"/><text x="20.6755%" y="190.50">dispat..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (8 samples, 3.40%)</title><rect x="22.1277%" y="196" width="3.4043%" height="15" fill="rgb(215,77,49)"/><text x="22.3777%" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:308) (6 samples, 2.55%)</title><rect x="22.9787%" y="212" width="2.5532%" height="15" fill="rgb(248,100,22)"/><text x="23.2287%" y="222.50">de..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:216) (7 samples, 2.98%)</title><rect x="27.2340%" y="196" width="2.9787%" height="15" fill="rgb(208,67,9)"/><text x="27.4840%" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.70%)</title><rect x="30.2128%" y="212" width="1.7021%" height="15" fill="rgb(219,133,21)"/><text x="30.4628%" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (3 samples, 1.28%)</title><rect x="33.6170%" y="212" width="1.2766%" height="15" fill="rgb(246,46,29)"/><text x="33.8670%" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (19 samples, 8.09%)</title><rect x="27.2340%" y="180" width="8.0851%" height="15" fill="rgb(246,185,52)"/><text x="27.4840%" y="190.50">dispatch_on..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:220) (12 samples, 5.11%)</title><rect x="30.2128%" y="196" width="5.1064%" height="15" fill="rgb(252,136,11)"/><text x="30.4628%" y="206.50">get_ne..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:827) (8 samples, 3.40%)</title><rect x="35.7447%" y="180" width="3.4043%" height="15" fill="rgb(219,138,53)"/><text x="35.9947%" y="190.50">dis..</text></g><g><title>put (queue.py:151) (6 samples, 2.55%)</title><rect x="36.5957%" y="196" width="2.5532%" height="15" fill="rgb(211,51,23)"/><text x="36.8457%" y="206.50">pu..</text></g><g><title>notify (threading.py:348) (3 samples, 1.28%)</title><rect x="37.8723%" y="212" width="1.2766%" height="15" fill="rgb(247,221,28)"/><text x="38.1223%" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (6 samples, 2.55%)</title><rect x="39.1489%" y="180" width="2.5532%" height="15" fill="rgb(251,222,45)"/><text x="39.3989%" y="190.50">di..</text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 1.28%)</title><rect x="45.1064%" y="244" width="1.2766%" height="15" fill="rgb(217,162,53)"/><text x="45.3564%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 3.40%)</title><rect x="51.0638%" y="324" width="3.4043%" height="15" fill="rgb(229,93,14)"/><text x="51.3138%" y="334.50">&lt;li..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (15 samples, 6.38%)</title><rect x="48.5106%" y="292" width="6.3830%" height="15" fill="rgb(209,67,49)"/><text x="48.7606%" y="302.50">predict_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 5.11%)</title><rect x="49.7872%" y="308" width="5.1064%" height="15" fill="rgb(213,87,29)"/><text x="50.0372%" y="318.50">check_..</text></g><g><title>0x7f9e1ea23405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.55%)</title><rect x="55.7447%" y="340" width="2.5532%" height="15" fill="rgb(205,151,52)"/><text x="55.9947%" y="350.50">0x..</text></g><g><title>0x7f9e1ea13fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.40%)</title><rect x="55.7447%" y="324" width="3.4043%" height="15" fill="rgb(253,215,39)"/><text x="55.9947%" y="334.50">0x7..</text></g><g><title>0x7f9e1ea1405a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.70%)</title><rect x="59.1489%" y="324" width="1.7021%" height="15" fill="rgb(221,220,41)"/><text x="59.3989%" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (16 samples, 6.81%)</title><rect x="55.7447%" y="292" width="6.8085%" height="15" fill="rgb(218,133,21)"/><text x="55.9947%" y="302.50">predict_p..</text></g><g><title>0x7f9e1ea14d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 6.81%)</title><rect x="55.7447%" y="308" width="6.8085%" height="15" fill="rgb(221,193,43)"/><text x="55.9947%" y="318.50">0x7f9e1ea..</text></g><g><title>0x7f9e1ea14328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.28%)</title><rect x="61.2766%" y="324" width="1.2766%" height="15" fill="rgb(240,128,52)"/><text x="61.5266%" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (5 samples, 2.13%)</title><rect x="62.9787%" y="292" width="2.1277%" height="15" fill="rgb(253,114,12)"/><text x="63.2287%" y="302.50">p..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (13 samples, 5.53%)</title><rect x="65.1064%" y="292" width="5.5319%" height="15" fill="rgb(215,223,47)"/><text x="65.3564%" y="302.50">predict..</text></g><g><title>array_sum (methods.c:2215) (11 samples, 4.68%)</title><rect x="65.9574%" y="308" width="4.6809%" height="15" fill="rgb(248,225,23)"/><text x="66.2074%" y="318.50">array..</text></g><g><title>forward_ndarray_method (methods.c:108) (11 samples, 4.68%)</title><rect x="65.9574%" y="324" width="4.6809%" height="15" fill="rgb(250,108,0)"/><text x="66.2074%" y="334.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py:38) (8 samples, 3.40%)</title><rect x="67.2340%" y="340" width="3.4043%" height="15" fill="rgb(228,208,7)"/><text x="67.4840%" y="350.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (6 samples, 2.55%)</title><rect x="68.0851%" y="356" width="2.5532%" height="15" fill="rgb(244,45,10)"/><text x="68.3351%" y="366.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.70%)</title><rect x="68.9362%" y="372" width="1.7021%" height="15" fill="rgb(207,125,25)"/><text x="69.1862%" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.28%)</title><rect x="69.3617%" y="388" width="1.2766%" height="15" fill="rgb(210,195,18)"/><text x="69.6117%" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 1.28%)</title><rect x="69.3617%" y="404" width="1.2766%" height="15" fill="rgb(249,80,12)"/><text x="69.6117%" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 1.28%)</title><rect x="74.0426%" y="340" width="1.2766%" height="15" fill="rgb(221,65,9)"/><text x="74.2926%" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (15 samples, 6.38%)</title><rect x="70.6383%" y="292" width="6.3830%" height="15" fill="rgb(235,49,36)"/><text x="70.8883%" y="302.50">predict_..</text></g><g><title>array_richcompare (arrayobject.c:1445) (11 samples, 4.68%)</title><rect x="72.3404%" y="308" width="4.6809%" height="15" fill="rgb(225,32,20)"/><text x="72.5904%" y="318.50">array..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.83%)</title><rect x="73.1915%" y="324" width="3.8298%" height="15" fill="rgb(215,141,46)"/><text x="73.4415%" y="334.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 1.28%)</title><rect x="75.7447%" y="340" width="1.2766%" height="15" fill="rgb(250,160,47)"/><text x="75.9947%" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.28%)</title><rect x="77.8723%" y="356" width="1.2766%" height="15" fill="rgb(216,222,40)"/><text x="78.1223%" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (8 samples, 3.40%)</title><rect x="77.8723%" y="340" width="3.4043%" height="15" fill="rgb(234,217,39)"/><text x="78.1223%" y="350.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c:1586) (3 samples, 1.28%)</title><rect x="80.0000%" y="356" width="1.2766%" height="15" fill="rgb(207,178,40)"/><text x="80.2500%" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (10 samples, 4.26%)</title><rect x="77.4468%" y="308" width="4.2553%" height="15" fill="rgb(221,136,13)"/><text x="77.6968%" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 3.83%)</title><rect x="77.8723%" y="324" width="3.8298%" height="15" fill="rgb(249,199,10)"/><text x="78.1223%" y="334.50">PyUF..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (80 samples, 34.04%)</title><rect x="48.0851%" y="276" width="34.0426%" height="15" fill="rgb(249,222,13)"/><text x="48.3351%" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py:449)</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (12 samples, 5.11%)</title><rect x="77.0213%" y="292" width="5.1064%" height="15" fill="rgb(244,185,38)"/><text x="77.2713%" y="302.50">predic..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (3 samples, 1.28%)</title><rect x="82.1277%" y="276" width="1.2766%" height="15" fill="rgb(236,202,9)"/><text x="82.3777%" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (4 samples, 1.70%)</title><rect x="85.9574%" y="324" width="1.7021%" height="15" fill="rgb(250,229,37)"/><text x="86.2074%" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (4 samples, 1.70%)</title><rect x="85.9574%" y="340" width="1.7021%" height="15" fill="rgb(206,174,23)"/><text x="86.2074%" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (3 samples, 1.28%)</title><rect x="86.3830%" y="356" width="1.2766%" height="15" fill="rgb(211,33,43)"/><text x="86.6330%" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (95 samples, 40.43%)</title><rect x="47.6596%" y="260" width="40.4255%" height="15" fill="rgb(245,58,50)"/><text x="47.9096%" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (10 samples, 4.26%)</title><rect x="83.8298%" y="276" width="4.2553%" height="15" fill="rgb(244,68,36)"/><text x="84.0798%" y="286.50">_accu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 2.98%)</title><rect x="85.1064%" y="292" width="2.9787%" height="15" fill="rgb(232,229,15)"/><text x="85.3564%" y="302.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 2.13%)</title><rect x="85.9574%" y="308" width="2.1277%" height="15" fill="rgb(254,30,23)"/><text x="86.2074%" y="318.50">P..</text></g><g><title>apply_async (joblib/_parallel_backends.py:209) (107 samples, 45.53%)</title><rect x="44.6809%" y="212" width="45.5319%" height="15" fill="rgb(235,160,14)"/><text x="44.9309%" y="222.50">apply_async (joblib/_parallel_backends.py:209)</text></g><g><title>__init__ (joblib/_parallel_backends.py:590) (106 samples, 45.11%)</title><rect x="45.1064%" y="228" width="45.1064%" height="15" fill="rgb(212,155,44)"/><text x="45.3564%" y="238.50">__init__ (joblib/_parallel_backends.py:590)</text></g><g><title>__call__ (joblib/parallel.py:256) (103 samples, 43.83%)</title><rect x="46.3830%" y="244" width="43.8298%" height="15" fill="rgb(226,2,50)"/><text x="46.6330%" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (5 samples, 2.13%)</title><rect x="88.0851%" y="260" width="2.1277%" height="15" fill="rgb(234,177,6)"/><text x="88.3351%" y="270.50">_..</text></g><g><title>__call__ (joblib/parallel.py:1007) (190 samples, 80.85%)</title><rect x="14.0426%" y="164" width="80.8511%" height="15" fill="rgb(217,24,9)"/><text x="14.2926%" y="174.50">__call__ (joblib/parallel.py:1007)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (125 samples, 53.19%)</title><rect x="41.7021%" y="180" width="53.1915%" height="15" fill="rgb(220,13,46)"/><text x="41.9521%" y="190.50">dispatch_one_batch (joblib/parallel.py:835)</text></g><g><title>_dispatch (joblib/parallel.py:754) (119 samples, 50.64%)</title><rect x="44.2553%" y="196" width="50.6383%" height="15" fill="rgb(239,221,27)"/><text x="44.5053%" y="206.50">_dispatch (joblib/parallel.py:754)</text></g><g><title>apply_async (joblib/_parallel_backends.py:211) (11 samples, 4.68%)</title><rect x="90.2128%" y="212" width="4.6809%" height="15" fill="rgb(222,198,25)"/><text x="90.4628%" y="222.50">apply..</text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:54) (197 samples, 83.83%)</title><rect x="13.1915%" y="52" width="83.8298%" height="15" fill="rgb(211,99,13)"/><text x="13.4415%" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:53) (197 samples, 83.83%)</title><rect x="13.1915%" y="68" width="83.8298%" height="15" fill="rgb(232,111,31)"/><text x="13.4415%" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37) (197 samples, 83.83%)</title><rect x="13.1915%" y="84" width="83.8298%" height="15" fill="rgb(245,82,37)"/><text x="13.4415%" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:31) (197 samples, 83.83%)</title><rect x="13.1915%" y="100" width="83.8298%" height="15" fill="rgb(227,149,46)"/><text x="13.4415%" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:183) (197 samples, 83.83%)</title><rect x="13.1915%" y="116" width="83.8298%" height="15" fill="rgb(218,36,50)"/><text x="13.4415%" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:183)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:229) (197 samples, 83.83%)</title><rect x="13.1915%" y="132" width="83.8298%" height="15" fill="rgb(226,80,48)"/><text x="13.4415%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:229)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (196 samples, 83.40%)</title><rect x="13.6170%" y="148" width="83.4043%" height="15" fill="rgb(238,224,15)"/><text x="13.8670%" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1017) (5 samples, 2.13%)</title><rect x="94.8936%" y="164" width="2.1277%" height="15" fill="rgb(241,136,10)"/><text x="95.1436%" y="174.50">_..</text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:61) (3 samples, 1.28%)</title><rect x="97.0213%" y="52" width="1.2766%" height="15" fill="rgb(208,32,45)"/><text x="97.2713%" y="62.50"></text></g><g><title>profile_pyrtc (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:60) (3 samples, 1.28%)</title><rect x="97.0213%" y="68" width="1.2766%" height="15" fill="rgb(207,135,9)"/><text x="97.2713%" y="78.50"></text></g><g><title>all (235 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(206,86,44)"/><text x="0.2500%" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:68) (4 samples, 1.70%)</title><rect x="98.2979%" y="52" width="1.7021%" height="15" fill="rgb(245,177,15)"/><text x="98.5479%" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:67) (4 samples, 1.70%)</title><rect x="98.2979%" y="68" width="1.7021%" height="15" fill="rgb(206,64,50)"/><text x="98.5479%" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37) (3 samples, 1.28%)</title><rect x="98.7234%" y="84" width="1.2766%" height="15" fill="rgb(234,36,40)"/><text x="98.9734%" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:31) (3 samples, 1.28%)</title><rect x="98.7234%" y="100" width="1.2766%" height="15" fill="rgb(213,64,8)"/><text x="98.9734%" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:183) (3 samples, 1.28%)</title><rect x="98.7234%" y="116" width="1.2766%" height="15" fill="rgb(210,75,36)"/><text x="98.9734%" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:233) (3 samples, 1.28%)</title><rect x="98.7234%" y="132" width="1.2766%" height="15" fill="rgb(229,88,21)"/><text x="98.9734%" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:442) (3 samples, 1.28%)</title><rect x="98.7234%" y="148" width="1.2766%" height="15" fill="rgb(252,204,47)"/><text x="98.9734%" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:650) (3 samples, 1.28%)</title><rect x="98.7234%" y="164" width="1.2766%" height="15" fill="rgb(208,77,27)"/><text x="98.9734%" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (3 samples, 1.28%)</title><rect x="98.7234%" y="180" width="1.2766%" height="15" fill="rgb(221,76,26)"/><text x="98.9734%" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:140) (3 samples, 1.28%)</title><rect x="98.7234%" y="196" width="1.2766%" height="15" fill="rgb(225,139,18)"/><text x="98.9734%" y="206.50"></text></g></svg></svg>