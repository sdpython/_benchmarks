<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.29%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(211,6,48)"/><text x="13.00" y="270.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (2 samples, 0.58%)</title><rect x="10" y="116" width="6" height="15" fill="rgb(254,67,40)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (2 samples, 0.58%)</title><rect x="10" y="132" width="6" height="15" fill="rgb(220,201,53)"/><text x="13.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:149) (2 samples, 0.58%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(224,26,29)"/><text x="13.00" y="158.50"></text></g><g><title>clone (sklearn/base.py:69) (2 samples, 0.58%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(210,173,48)"/><text x="13.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (2 samples, 0.58%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(236,220,3)"/><text x="13.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (2 samples, 0.58%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(211,60,39)"/><text x="13.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (2 samples, 0.58%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(251,181,12)"/><text x="13.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (2 samples, 0.58%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(243,158,50)"/><text x="13.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (2 samples, 0.58%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(232,74,13)"/><text x="13.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.29%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(216,213,48)"/><text x="16.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.29%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(238,101,26)"/><text x="16.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (inspect.py:2800) (1 samples, 0.29%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(253,158,34)"/><text x="16.00" y="302.50"></text></g><g><title>name (inspect.py:2519) (1 samples, 0.29%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(213,40,26)"/><text x="16.00" y="318.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16688) (1 samples, 0.29%)</title><rect x="16" y="308" width="4" height="15" fill="rgb(224,71,39)"/><text x="19.00" y="318.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (2 samples, 0.58%)</title><rect x="16" y="244" width="7" height="15" fill="rgb(221,177,25)"/><text x="19.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:120) (2 samples, 0.58%)</title><rect x="16" y="260" width="7" height="15" fill="rgb(227,207,16)"/><text x="19.00" y="270.50"></text></g><g><title>randint (mtrand.c:6007) (2 samples, 0.58%)</title><rect x="16" y="276" width="7" height="15" fill="rgb(216,2,18)"/><text x="19.00" y="286.50"></text></g><g><title>randint (mtrand.c:6250) (2 samples, 0.58%)</title><rect x="16" y="292" width="7" height="15" fill="rgb(228,22,10)"/><text x="19.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16928) (1 samples, 0.29%)</title><rect x="20" y="308" width="3" height="15" fill="rgb(244,178,20)"/><text x="23.00" y="318.50"></text></g><g><title>__Pyx_PyObject_LookupSpecial (bounded_integers.c:1516) (1 samples, 0.29%)</title><rect x="20" y="324" width="3" height="15" fill="rgb(250,86,32)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:31) (5 samples, 1.45%)</title><rect x="10" y="52" width="17" height="15" fill="rgb(242,155,31)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:11) (5 samples, 1.45%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(230,187,52)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (5 samples, 1.45%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(222,6,28)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (5 samples, 1.45%)</title><rect x="10" y="100" width="17" height="15" fill="rgb(234,63,29)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 0.87%)</title><rect x="16" y="116" width="11" height="15" fill="rgb(231,222,11)"/><text x="19.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 0.87%)</title><rect x="16" y="132" width="11" height="15" fill="rgb(246,174,33)"/><text x="19.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.87%)</title><rect x="16" y="148" width="11" height="15" fill="rgb(233,76,1)"/><text x="19.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.87%)</title><rect x="16" y="164" width="11" height="15" fill="rgb(246,3,53)"/><text x="19.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.87%)</title><rect x="16" y="180" width="11" height="15" fill="rgb(239,27,7)"/><text x="19.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.87%)</title><rect x="16" y="196" width="11" height="15" fill="rgb(226,37,39)"/><text x="19.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.87%)</title><rect x="16" y="212" width="11" height="15" fill="rgb(247,136,23)"/><text x="19.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.87%)</title><rect x="16" y="228" width="11" height="15" fill="rgb(219,81,15)"/><text x="19.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.29%)</title><rect x="23" y="244" width="4" height="15" fill="rgb(212,142,24)"/><text x="26.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (1 samples, 0.29%)</title><rect x="23" y="260" width="4" height="15" fill="rgb(218,71,5)"/><text x="26.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:280) (1 samples, 0.29%)</title><rect x="23" y="276" width="4" height="15" fill="rgb(207,216,5)"/><text x="26.00" y="286.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py:1231) (1 samples, 0.29%)</title><rect x="23" y="292" width="4" height="15" fill="rgb(216,179,46)"/><text x="26.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.29%)</title><rect x="23" y="308" width="4" height="15" fill="rgb(228,140,20)"/><text x="26.00" y="318.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.29%)</title><rect x="23" y="324" width="4" height="15" fill="rgb(237,33,16)"/><text x="26.00" y="334.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.29%)</title><rect x="23" y="340" width="4" height="15" fill="rgb(241,189,46)"/><text x="26.00" y="350.50"></text></g><g><title>0x7f129aacfe93 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="23" y="356" width="4" height="15" fill="rgb(240,82,5)"/><text x="26.00" y="366.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.29%)</title><rect x="27" y="100" width="3" height="15" fill="rgb(219,77,45)"/><text x="30.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.29%)</title><rect x="27" y="116" width="3" height="15" fill="rgb(230,109,38)"/><text x="30.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.29%)</title><rect x="27" y="132" width="3" height="15" fill="rgb(215,120,22)"/><text x="30.00" y="142.50"></text></g><g><title>load (_pickle.c:6414) (1 samples, 0.29%)</title><rect x="27" y="148" width="3" height="15" fill="rgb(228,205,46)"/><text x="30.00" y="158.50"></text></g><g><title>_Unpickler_ReadImpl (_pickle.c:1297) (1 samples, 0.29%)</title><rect x="27" y="164" width="3" height="15" fill="rgb(239,199,46)"/><text x="30.00" y="174.50"></text></g><g><title>_Unpickler_ReadFromFile (_pickle.c:1249) (1 samples, 0.29%)</title><rect x="27" y="180" width="3" height="15" fill="rgb(242,215,44)"/><text x="30.00" y="190.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (1 samples, 0.29%)</title><rect x="27" y="196" width="3" height="15" fill="rgb(227,22,36)"/><text x="30.00" y="206.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (2 samples, 0.58%)</title><rect x="30" y="196" width="7" height="15" fill="rgb(233,132,0)"/><text x="33.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (2 samples, 0.58%)</title><rect x="30" y="212" width="7" height="15" fill="rgb(236,168,47)"/><text x="33.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.29%)</title><rect x="34" y="228" width="3" height="15" fill="rgb(245,77,6)"/><text x="37.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:92) (1 samples, 0.29%)</title><rect x="34" y="244" width="3" height="15" fill="rgb(234,94,15)"/><text x="37.00" y="254.50"></text></g><g><title>double_arrtype_new (scalartypes.c.src:2784) (1 samples, 0.29%)</title><rect x="34" y="260" width="3" height="15" fill="rgb(246,55,37)"/><text x="37.00" y="270.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:137) (1 samples, 0.29%)</title><rect x="34" y="276" width="3" height="15" fill="rgb(217,80,28)"/><text x="37.00" y="286.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (4 samples, 1.16%)</title><rect x="27" y="84" width="13" height="15" fill="rgb(218,133,42)"/><text x="30.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.87%)</title><rect x="30" y="100" width="10" height="15" fill="rgb(233,132,26)"/><text x="33.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (3 samples, 0.87%)</title><rect x="30" y="116" width="10" height="15" fill="rgb(231,156,42)"/><text x="33.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 0.87%)</title><rect x="30" y="132" width="10" height="15" fill="rgb(220,28,48)"/><text x="33.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 0.87%)</title><rect x="30" y="148" width="10" height="15" fill="rgb(233,2,42)"/><text x="33.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 0.87%)</title><rect x="30" y="164" width="10" height="15" fill="rgb(224,199,14)"/><text x="33.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 0.87%)</title><rect x="30" y="180" width="10" height="15" fill="rgb(232,97,40)"/><text x="33.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.29%)</title><rect x="37" y="196" width="3" height="15" fill="rgb(221,181,30)"/><text x="40.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.29%)</title><rect x="37" y="212" width="3" height="15" fill="rgb(241,84,51)"/><text x="40.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.29%)</title><rect x="37" y="228" width="3" height="15" fill="rgb(212,129,25)"/><text x="40.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="37" y="244" width="3" height="15" fill="rgb(231,117,36)"/><text x="40.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.29%)</title><rect x="37" y="260" width="3" height="15" fill="rgb(214,127,42)"/><text x="40.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.29%)</title><rect x="37" y="276" width="3" height="15" fill="rgb(248,150,21)"/><text x="40.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.29%)</title><rect x="37" y="292" width="3" height="15" fill="rgb(230,56,13)"/><text x="40.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:206) (1 samples, 0.29%)</title><rect x="37" y="308" width="3" height="15" fill="rgb(225,143,49)"/><text x="40.00" y="318.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.29%)</title><rect x="40" y="148" width="4" height="15" fill="rgb(216,25,47)"/><text x="43.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:181) (1 samples, 0.29%)</title><rect x="40" y="164" width="4" height="15" fill="rgb(212,207,1)"/><text x="43.00" y="174.50"></text></g><g><title>full (numpy/core/numeric.py:333) (1 samples, 0.29%)</title><rect x="40" y="180" width="4" height="15" fill="rgb(239,224,51)"/><text x="43.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.29%)</title><rect x="44" y="148" width="3" height="15" fill="rgb(245,37,45)"/><text x="47.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:645) (1 samples, 0.29%)</title><rect x="44" y="164" width="3" height="15" fill="rgb(209,111,34)"/><text x="47.00" y="174.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (1 samples, 0.29%)</title><rect x="47" y="292" width="4" height="15" fill="rgb(229,170,7)"/><text x="50.00" y="302.50"></text></g><g><title>0x7f12744fdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="308" width="4" height="15" fill="rgb(253,35,14)"/><text x="50.00" y="318.50"></text></g><g><title>0x7f12744fcf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="324" width="4" height="15" fill="rgb(235,23,27)"/><text x="50.00" y="334.50"></text></g><g><title>0x7f12744ecd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="340" width="4" height="15" fill="rgb(244,86,30)"/><text x="50.00" y="350.50"></text></g><g><title>0x7f12744d9bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="356" width="4" height="15" fill="rgb(208,18,43)"/><text x="50.00" y="366.50"></text></g><g><title>0x7f12744e0d65 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="47" y="372" width="4" height="15" fill="rgb(239,182,39)"/><text x="50.00" y="382.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.58%)</title><rect x="47" y="164" width="7" height="15" fill="rgb(241,159,7)"/><text x="50.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.58%)</title><rect x="47" y="180" width="7" height="15" fill="rgb(251,228,8)"/><text x="50.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.58%)</title><rect x="47" y="196" width="7" height="15" fill="rgb(224,44,28)"/><text x="50.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.58%)</title><rect x="47" y="212" width="7" height="15" fill="rgb(249,139,39)"/><text x="50.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.58%)</title><rect x="47" y="228" width="7" height="15" fill="rgb(212,162,18)"/><text x="50.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.58%)</title><rect x="47" y="244" width="7" height="15" fill="rgb(210,200,46)"/><text x="50.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.58%)</title><rect x="47" y="260" width="7" height="15" fill="rgb(254,191,33)"/><text x="50.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.58%)</title><rect x="47" y="276" width="7" height="15" fill="rgb(218,169,14)"/><text x="50.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.29%)</title><rect x="51" y="292" width="3" height="15" fill="rgb(248,125,41)"/><text x="54.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.29%)</title><rect x="51" y="308" width="3" height="15" fill="rgb(217,159,39)"/><text x="54.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.29%)</title><rect x="51" y="324" width="3" height="15" fill="rgb(236,70,6)"/><text x="54.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.29%)</title><rect x="51" y="340" width="3" height="15" fill="rgb(215,171,37)"/><text x="54.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.29%)</title><rect x="51" y="356" width="3" height="15" fill="rgb(238,219,24)"/><text x="54.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.29%)</title><rect x="51" y="372" width="3" height="15" fill="rgb(248,207,1)"/><text x="54.00" y="382.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.29%)</title><rect x="58" y="180" width="3" height="15" fill="rgb(237,190,23)"/><text x="61.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.29%)</title><rect x="61" y="180" width="3" height="15" fill="rgb(209,223,24)"/><text x="64.00" y="190.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.29%)</title><rect x="61" y="196" width="3" height="15" fill="rgb(245,117,19)"/><text x="64.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:804) (1 samples, 0.29%)</title><rect x="64" y="180" width="4" height="15" fill="rgb(234,206,10)"/><text x="67.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.29%)</title><rect x="75" y="228" width="3" height="15" fill="rgb(247,68,41)"/><text x="78.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (4 samples, 1.16%)</title><rect x="68" y="180" width="14" height="15" fill="rgb(238,166,10)"/><text x="71.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (4 samples, 1.16%)</title><rect x="68" y="196" width="14" height="15" fill="rgb(239,134,16)"/><text x="71.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (3 samples, 0.87%)</title><rect x="71" y="212" width="11" height="15" fill="rgb(209,218,26)"/><text x="74.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.29%)</title><rect x="78" y="228" width="4" height="15" fill="rgb(231,77,36)"/><text x="81.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.29%)</title><rect x="82" y="180" width="3" height="15" fill="rgb(227,1,3)"/><text x="85.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.29%)</title><rect x="85" y="180" width="3" height="15" fill="rgb(207,122,42)"/><text x="88.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (2 samples, 0.58%)</title><rect x="88" y="180" width="7" height="15" fill="rgb(219,7,11)"/><text x="91.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (2 samples, 0.58%)</title><rect x="88" y="196" width="7" height="15" fill="rgb(245,78,6)"/><text x="91.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (2 samples, 0.58%)</title><rect x="88" y="212" width="7" height="15" fill="rgb(208,119,50)"/><text x="91.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.58%)</title><rect x="88" y="228" width="7" height="15" fill="rgb(236,183,22)"/><text x="91.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.29%)</title><rect x="92" y="244" width="3" height="15" fill="rgb(223,115,2)"/><text x="95.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.29%)</title><rect x="95" y="180" width="4" height="15" fill="rgb(250,200,30)"/><text x="98.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.29%)</title><rect x="95" y="196" width="4" height="15" fill="rgb(207,19,24)"/><text x="98.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.29%)</title><rect x="99" y="196" width="3" height="15" fill="rgb(222,178,34)"/><text x="102.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.29%)</title><rect x="99" y="212" width="3" height="15" fill="rgb(238,155,17)"/><text x="102.00" y="222.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.29%)</title><rect x="102" y="196" width="4" height="15" fill="rgb(226,213,23)"/><text x="105.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.29%)</title><rect x="116" y="212" width="3" height="15" fill="rgb(214,191,7)"/><text x="119.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.29%)</title><rect x="116" y="228" width="3" height="15" fill="rgb(206,43,2)"/><text x="119.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.29%)</title><rect x="116" y="244" width="3" height="15" fill="rgb(237,112,24)"/><text x="119.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="116" y="260" width="3" height="15" fill="rgb(250,104,16)"/><text x="119.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 2.33%)</title><rect x="99" y="180" width="27" height="15" fill="rgb(215,163,4)"/><text x="102.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (6 samples, 1.74%)</title><rect x="106" y="196" width="20" height="15" fill="rgb(230,33,17)"/><text x="109.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.58%)</title><rect x="119" y="212" width="7" height="15" fill="rgb(235,31,40)"/><text x="122.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.29%)</title><rect x="130" y="196" width="3" height="15" fill="rgb(206,192,42)"/><text x="133.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.29%)</title><rect x="130" y="212" width="3" height="15" fill="rgb(238,16,4)"/><text x="133.00" y="222.50"></text></g><g><title>get (queue.py:180) (2 samples, 0.58%)</title><rect x="133" y="196" width="7" height="15" fill="rgb(229,157,26)"/><text x="136.00" y="206.50"></text></g><g><title>_get (queue.py:217) (2 samples, 0.58%)</title><rect x="133" y="212" width="7" height="15" fill="rgb(241,108,44)"/><text x="136.00" y="222.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.29%)</title><rect x="140" y="196" width="3" height="15" fill="rgb(212,91,45)"/><text x="143.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.29%)</title><rect x="140" y="212" width="3" height="15" fill="rgb(234,205,39)"/><text x="143.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 1.74%)</title><rect x="126" y="180" width="21" height="15" fill="rgb(239,130,51)"/><text x="129.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.29%)</title><rect x="143" y="196" width="4" height="15" fill="rgb(233,39,21)"/><text x="146.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.29%)</title><rect x="143" y="212" width="4" height="15" fill="rgb(232,176,20)"/><text x="146.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.29%)</title><rect x="147" y="196" width="3" height="15" fill="rgb(224,189,12)"/><text x="150.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.58%)</title><rect x="150" y="196" width="7" height="15" fill="rgb(212,33,52)"/><text x="153.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.29%)</title><rect x="157" y="196" width="3" height="15" fill="rgb(221,93,3)"/><text x="160.00" y="206.50"></text></g><g><title>__enter__ (joblib/parallel.py:212) (2 samples, 0.58%)</title><rect x="164" y="260" width="7" height="15" fill="rgb(209,195,13)"/><text x="167.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 1.16%)</title><rect x="164" y="244" width="14" height="15" fill="rgb(250,198,14)"/><text x="167.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.58%)</title><rect x="171" y="260" width="7" height="15" fill="rgb(249,145,45)"/><text x="174.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.29%)</title><rect x="184" y="308" width="4" height="15" fill="rgb(208,99,11)"/><text x="187.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.29%)</title><rect x="184" y="324" width="4" height="15" fill="rgb(240,186,5)"/><text x="187.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.29%)</title><rect x="212" y="340" width="3" height="15" fill="rgb(205,152,50)"/><text x="215.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (10 samples, 2.91%)</title><rect x="184" y="292" width="35" height="15" fill="rgb(242,202,35)"/><text x="187.00" y="302.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 2.62%)</title><rect x="188" y="308" width="31" height="15" fill="rgb(225,220,21)"/><text x="191.00" y="318.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.33%)</title><rect x="191" y="324" width="28" height="15" fill="rgb(249,123,44)"/><text x="194.00" y="334.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.29%)</title><rect x="215" y="340" width="4" height="15" fill="rgb(227,146,51)"/><text x="218.00" y="350.50"></text></g><g><title>0x7f12744fcf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="219" y="324" width="3" height="15" fill="rgb(206,200,34)"/><text x="222.00" y="334.50"></text></g><g><title>0x7f127450b1c8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="222" y="356" width="4" height="15" fill="rgb(209,184,53)"/><text x="225.00" y="366.50"></text></g><g><title>0x7f127450b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="226" y="356" width="3" height="15" fill="rgb(216,80,23)"/><text x="229.00" y="366.50"></text></g><g><title>0x7f12744efd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="226" y="372" width="3" height="15" fill="rgb(235,123,43)"/><text x="229.00" y="382.50"></text></g><g><title>0x7f12744ef666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="226" y="388" width="3" height="15" fill="rgb(254,162,40)"/><text x="229.00" y="398.50"></text></g><g><title>0x7f12744e52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="226" y="404" width="3" height="15" fill="rgb(225,145,36)"/><text x="229.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.29%)</title><rect x="226" y="420" width="3" height="15" fill="rgb(223,182,19)"/><text x="229.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.29%)</title><rect x="226" y="436" width="3" height="15" fill="rgb(234,191,8)"/><text x="229.00" y="446.50"></text></g><g><title>0x7f127450b456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="229" y="356" width="3" height="15" fill="rgb(205,211,26)"/><text x="232.00" y="366.50"></text></g><g><title>0x7f127450b511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="232" y="356" width="4" height="15" fill="rgb(213,173,34)"/><text x="235.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.29%)</title><rect x="236" y="372" width="3" height="15" fill="rgb(215,177,1)"/><text x="239.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="236" y="388" width="3" height="15" fill="rgb(254,106,27)"/><text x="239.00" y="398.50"></text></g><g><title>0x7f127450b592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="236" y="356" width="7" height="15" fill="rgb(240,18,43)"/><text x="239.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.29%)</title><rect x="239" y="372" width="4" height="15" fill="rgb(252,33,48)"/><text x="242.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.29%)</title><rect x="239" y="388" width="4" height="15" fill="rgb(227,48,22)"/><text x="242.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.29%)</title><rect x="239" y="404" width="4" height="15" fill="rgb(242,176,28)"/><text x="242.00" y="414.50"></text></g><g><title>0x7f127450b89f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="243" y="356" width="3" height="15" fill="rgb(245,126,13)"/><text x="246.00" y="366.50"></text></g><g><title>0x7f127450c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.33%)</title><rect x="222" y="340" width="28" height="15" fill="rgb(244,182,46)"/><text x="225.00" y="350.50">0..</text></g><g><title>0x7f127450bc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="246" y="356" width="4" height="15" fill="rgb(210,192,4)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f12744e3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="246" y="372" width="4" height="15" fill="rgb(225,112,37)"/><text x="249.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.29%)</title><rect x="246" y="388" width="4" height="15" fill="rgb(209,69,6)"/><text x="249.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:678) (1 samples, 0.29%)</title><rect x="246" y="404" width="4" height="15" fill="rgb(213,135,0)"/><text x="249.00" y="414.50"></text></g><g><title>0x7f12744fcfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.62%)</title><rect x="222" y="324" width="31" height="15" fill="rgb(248,71,49)"/><text x="225.00" y="334.50">0x..</text></g><g><title>0x7f127450c540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="250" y="340" width="3" height="15" fill="rgb(253,70,35)"/><text x="253.00" y="350.50"></text></g><g><title>0x7f12744e11ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="250" y="356" width="3" height="15" fill="rgb(215,86,29)"/><text x="253.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.29%)</title><rect x="256" y="340" width="4" height="15" fill="rgb(226,71,8)"/><text x="259.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="256" y="356" width="4" height="15" fill="rgb(211,42,28)"/><text x="259.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3960) (1 samples, 0.29%)</title><rect x="260" y="372" width="3" height="15" fill="rgb(216,160,1)"/><text x="263.00" y="382.50"></text></g><g><title>0x7f12744fd05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.16%)</title><rect x="253" y="324" width="14" height="15" fill="rgb(207,147,22)"/><text x="256.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.58%)</title><rect x="260" y="340" width="7" height="15" fill="rgb(219,171,21)"/><text x="263.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.58%)</title><rect x="260" y="356" width="7" height="15" fill="rgb(230,90,24)"/><text x="263.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.29%)</title><rect x="263" y="372" width="4" height="15" fill="rgb(239,1,3)"/><text x="266.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="263" y="388" width="4" height="15" fill="rgb(244,135,42)"/><text x="266.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (15 samples, 4.36%)</title><rect x="219" y="292" width="51" height="15" fill="rgb(228,26,54)"/><text x="222.00" y="302.50">predi..</text></g><g><title>0x7f12744fdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.36%)</title><rect x="219" y="308" width="51" height="15" fill="rgb(250,141,39)"/><text x="222.00" y="318.50">0x7f1..</text></g><g><title>0x7f12744fd13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="267" y="324" width="3" height="15" fill="rgb(212,69,6)"/><text x="270.00" y="334.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.29%)</title><rect x="274" y="372" width="3" height="15" fill="rgb(220,135,29)"/><text x="277.00" y="382.50"></text></g><g><title>_wheremask_converter (ufunc_object.c:993) (1 samples, 0.29%)</title><rect x="274" y="388" width="3" height="15" fill="rgb(231,150,10)"/><text x="277.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.29%)</title><rect x="277" y="452" width="3" height="15" fill="rgb(205,216,9)"/><text x="280.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.58%)</title><rect x="277" y="404" width="7" height="15" fill="rgb(231,165,32)"/><text x="280.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.58%)</title><rect x="277" y="420" width="7" height="15" fill="rgb(242,171,28)"/><text x="280.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.58%)</title><rect x="277" y="436" width="7" height="15" fill="rgb(223,195,11)"/><text x="280.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.29%)</title><rect x="280" y="452" width="4" height="15" fill="rgb(213,155,5)"/><text x="283.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.29%)</title><rect x="280" y="468" width="4" height="15" fill="rgb(249,204,54)"/><text x="283.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (1 samples, 0.29%)</title><rect x="284" y="420" width="3" height="15" fill="rgb(229,74,31)"/><text x="287.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (6 samples, 1.74%)</title><rect x="270" y="292" width="21" height="15" fill="rgb(213,27,1)"/><text x="273.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (5 samples, 1.45%)</title><rect x="274" y="308" width="17" height="15" fill="rgb(205,30,21)"/><text x="277.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (5 samples, 1.45%)</title><rect x="274" y="324" width="17" height="15" fill="rgb(219,18,32)"/><text x="277.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (5 samples, 1.45%)</title><rect x="274" y="340" width="17" height="15" fill="rgb(227,51,13)"/><text x="277.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (5 samples, 1.45%)</title><rect x="274" y="356" width="17" height="15" fill="rgb(217,134,37)"/><text x="277.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (4 samples, 1.16%)</title><rect x="277" y="372" width="14" height="15" fill="rgb(239,86,13)"/><text x="280.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (4 samples, 1.16%)</title><rect x="277" y="388" width="14" height="15" fill="rgb(253,110,28)"/><text x="280.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.58%)</title><rect x="284" y="404" width="7" height="15" fill="rgb(205,108,39)"/><text x="287.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.29%)</title><rect x="287" y="420" width="4" height="15" fill="rgb(242,132,27)"/><text x="290.00" y="430.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.29%)</title><rect x="287" y="436" width="4" height="15" fill="rgb(227,66,6)"/><text x="290.00" y="446.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.29%)</title><rect x="291" y="308" width="3" height="15" fill="rgb(220,150,6)"/><text x="294.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.29%)</title><rect x="291" y="324" width="3" height="15" fill="rgb(246,78,29)"/><text x="294.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2080) (1 samples, 0.29%)</title><rect x="291" y="340" width="3" height="15" fill="rgb(235,57,36)"/><text x="294.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.29%)</title><rect x="294" y="372" width="4" height="15" fill="rgb(243,23,1)"/><text x="297.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="294" y="388" width="4" height="15" fill="rgb(230,26,22)"/><text x="297.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.29%)</title><rect x="294" y="404" width="4" height="15" fill="rgb(228,116,37)"/><text x="297.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.87%)</title><rect x="291" y="292" width="10" height="15" fill="rgb(217,217,30)"/><text x="294.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.58%)</title><rect x="294" y="308" width="7" height="15" fill="rgb(234,0,7)"/><text x="297.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.58%)</title><rect x="294" y="324" width="7" height="15" fill="rgb(235,128,2)"/><text x="297.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.58%)</title><rect x="294" y="340" width="7" height="15" fill="rgb(246,96,41)"/><text x="297.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.58%)</title><rect x="294" y="356" width="7" height="15" fill="rgb(227,159,9)"/><text x="297.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.29%)</title><rect x="298" y="372" width="3" height="15" fill="rgb(205,185,42)"/><text x="301.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.29%)</title><rect x="298" y="388" width="3" height="15" fill="rgb(224,97,2)"/><text x="301.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:208) (1 samples, 0.29%)</title><rect x="298" y="404" width="3" height="15" fill="rgb(213,117,48)"/><text x="301.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.29%)</title><rect x="305" y="372" width="3" height="15" fill="rgb(205,204,27)"/><text x="308.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (38 samples, 11.05%)</title><rect x="181" y="276" width="130" height="15" fill="rgb(220,128,2)"/><text x="184.00" y="286.50">_accumulate_pred..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (3 samples, 0.87%)</title><rect x="301" y="292" width="10" height="15" fill="rgb(210,4,34)"/><text x="304.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.58%)</title><rect x="305" y="308" width="6" height="15" fill="rgb(227,125,41)"/><text x="308.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.58%)</title><rect x="305" y="324" width="6" height="15" fill="rgb(218,95,19)"/><text x="308.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.58%)</title><rect x="305" y="340" width="6" height="15" fill="rgb(223,164,22)"/><text x="308.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.58%)</title><rect x="305" y="356" width="6" height="15" fill="rgb(248,155,23)"/><text x="308.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.29%)</title><rect x="308" y="372" width="3" height="15" fill="rgb(245,176,16)"/><text x="311.00" y="382.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2167) (1 samples, 0.29%)</title><rect x="308" y="388" width="3" height="15" fill="rgb(220,44,22)"/><text x="311.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.29%)</title><rect x="315" y="308" width="3" height="15" fill="rgb(217,59,26)"/><text x="318.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.29%)</title><rect x="315" y="324" width="3" height="15" fill="rgb(221,47,43)"/><text x="318.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:369) (1 samples, 0.29%)</title><rect x="318" y="388" width="4" height="15" fill="rgb(234,58,42)"/><text x="321.00" y="398.50"></text></g><g><title>mul_64_64 (npy_extint128.h:106) (1 samples, 0.29%)</title><rect x="318" y="404" width="4" height="15" fill="rgb(250,187,53)"/><text x="321.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.58%)</title><rect x="318" y="324" width="7" height="15" fill="rgb(236,103,19)"/><text x="321.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.58%)</title><rect x="318" y="340" width="7" height="15" fill="rgb(249,5,46)"/><text x="321.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.58%)</title><rect x="318" y="356" width="7" height="15" fill="rgb(252,8,36)"/><text x="321.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.58%)</title><rect x="318" y="372" width="7" height="15" fill="rgb(210,211,52)"/><text x="321.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:395) (1 samples, 0.29%)</title><rect x="322" y="388" width="3" height="15" fill="rgb(250,73,42)"/><text x="325.00" y="398.50"></text></g><g><title>to_64 (npy_extint128.h:81) (1 samples, 0.29%)</title><rect x="322" y="404" width="3" height="15" fill="rgb(224,38,51)"/><text x="325.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (5 samples, 1.45%)</title><rect x="311" y="276" width="18" height="15" fill="rgb(205,154,45)"/><text x="314.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (4 samples, 1.16%)</title><rect x="315" y="292" width="14" height="15" fill="rgb(210,215,50)"/><text x="318.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.87%)</title><rect x="318" y="308" width="11" height="15" fill="rgb(227,160,38)"/><text x="321.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.29%)</title><rect x="325" y="324" width="4" height="15" fill="rgb(242,168,8)"/><text x="328.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:794) (1 samples, 0.29%)</title><rect x="325" y="340" width="4" height="15" fill="rgb(235,160,7)"/><text x="328.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (44 samples, 12.79%)</title><rect x="181" y="260" width="151" height="15" fill="rgb(243,225,17)"/><text x="184.00" y="270.50">&lt;listcomp&gt; (joblib/..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.29%)</title><rect x="329" y="276" width="3" height="15" fill="rgb(242,71,37)"/><text x="332.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.29%)</title><rect x="335" y="276" width="4" height="15" fill="rgb(233,147,18)"/><text x="338.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (53 samples, 15.41%)</title><rect x="160" y="212" width="182" height="15" fill="rgb(231,1,7)"/><text x="163.00" y="222.50">apply_async (joblib/_pa..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (52 samples, 15.12%)</title><rect x="164" y="228" width="178" height="15" fill="rgb(222,161,30)"/><text x="167.00" y="238.50">__init__ (joblib/_paral..</text></g><g><title>__call__ (joblib/parallel.py:256) (48 samples, 13.95%)</title><rect x="178" y="244" width="164" height="15" fill="rgb(209,214,10)"/><text x="181.00" y="254.50">__call__ (joblib/para..</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.87%)</title><rect x="332" y="260" width="10" height="15" fill="rgb(213,213,18)"/><text x="335.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.29%)</title><rect x="339" y="276" width="3" height="15" fill="rgb(238,203,11)"/><text x="342.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (54 samples, 15.70%)</title><rect x="160" y="196" width="186" height="15" fill="rgb(232,67,54)"/><text x="163.00" y="206.50">_dispatch (joblib/parall..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.29%)</title><rect x="342" y="212" width="4" height="15" fill="rgb(208,214,53)"/><text x="345.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.29%)</title><rect x="342" y="228" width="4" height="15" fill="rgb(252,181,10)"/><text x="345.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (60 samples, 17.44%)</title><rect x="147" y="180" width="206" height="15" fill="rgb(252,98,48)"/><text x="150.00" y="190.50">dispatch_one_batch (joblib/..</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.58%)</title><rect x="346" y="196" width="7" height="15" fill="rgb(230,145,28)"/><text x="349.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (88 samples, 25.58%)</title><rect x="54" y="164" width="302" height="15" fill="rgb(226,113,25)"/><text x="57.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.29%)</title><rect x="353" y="180" width="3" height="15" fill="rgb(205,16,20)"/><text x="356.00" y="190.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.29%)</title><rect x="353" y="196" width="3" height="15" fill="rgb(229,135,28)"/><text x="356.00" y="206.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="353" y="212" width="3" height="15" fill="rgb(248,168,12)"/><text x="356.00" y="222.50"></text></g><g><title>retrieve (joblib/parallel.py:896) (1 samples, 0.29%)</title><rect x="356" y="180" width="3" height="15" fill="rgb(207,110,17)"/><text x="359.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.29%)</title><rect x="359" y="180" width="4" height="15" fill="rgb(232,0,53)"/><text x="362.00" y="190.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (96 samples, 27.91%)</title><rect x="40" y="100" width="330" height="15" fill="rgb(248,103,11)"/><text x="43.00" y="110.50">profile (bench_RandomForestClassifier_defaul..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (96 samples, 27.91%)</title><rect x="40" y="116" width="330" height="15" fill="rgb(212,180,5)"/><text x="43.00" y="126.50">time_predict (mlprodict/asv_benchmark/common..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (96 samples, 27.91%)</title><rect x="40" y="132" width="330" height="15" fill="rgb(208,75,37)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (94 samples, 27.33%)</title><rect x="47" y="148" width="323" height="15" fill="rgb(245,105,29)"/><text x="50.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:..</text></g><g><title>__call__ (joblib/parallel.py:1016) (4 samples, 1.16%)</title><rect x="356" y="164" width="14" height="15" fill="rgb(215,165,21)"/><text x="359.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (2 samples, 0.58%)</title><rect x="363" y="180" width="7" height="15" fill="rgb(231,134,17)"/><text x="366.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:654) (1 samples, 0.29%)</title><rect x="370" y="148" width="3" height="15" fill="rgb(212,62,45)"/><text x="373.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="370" y="164" width="3" height="15" fill="rgb(219,136,5)"/><text x="373.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="370" y="180" width="3" height="15" fill="rgb(212,25,14)"/><text x="373.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:659) (1 samples, 0.29%)</title><rect x="373" y="148" width="4" height="15" fill="rgb(212,118,14)"/><text x="376.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:182) (1 samples, 0.29%)</title><rect x="373" y="164" width="4" height="15" fill="rgb(252,31,26)"/><text x="376.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.29%)</title><rect x="373" y="180" width="4" height="15" fill="rgb(227,205,18)"/><text x="376.00" y="190.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2019) (1 samples, 0.29%)</title><rect x="373" y="196" width="4" height="15" fill="rgb(207,189,28)"/><text x="376.00" y="206.50"></text></g><g><title>tuple_all_none (ufunc_object.c:1926) (1 samples, 0.29%)</title><rect x="373" y="212" width="4" height="15" fill="rgb(223,108,20)"/><text x="376.00" y="222.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (1 samples, 0.29%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(215,118,0)"/><text x="380.00" y="302.50"></text></g><g><title>0x7f12744fdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(241,106,31)"/><text x="380.00" y="318.50"></text></g><g><title>0x7f12744fcfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="324" width="3" height="15" fill="rgb(239,144,38)"/><text x="380.00" y="334.50"></text></g><g><title>0x7f127450c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="340" width="3" height="15" fill="rgb(226,188,34)"/><text x="380.00" y="350.50"></text></g><g><title>0x7f127450b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="356" width="3" height="15" fill="rgb(231,125,41)"/><text x="380.00" y="366.50"></text></g><g><title>0x7f12744efd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="372" width="3" height="15" fill="rgb(209,26,44)"/><text x="380.00" y="382.50"></text></g><g><title>0x7f12744ef666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="388" width="3" height="15" fill="rgb(245,62,49)"/><text x="380.00" y="398.50"></text></g><g><title>0x7f12744e52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="377" y="404" width="3" height="15" fill="rgb(245,16,7)"/><text x="380.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.29%)</title><rect x="377" y="420" width="3" height="15" fill="rgb(232,79,8)"/><text x="380.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.29%)</title><rect x="377" y="436" width="3" height="15" fill="rgb(238,20,20)"/><text x="380.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.29%)</title><rect x="377" y="452" width="3" height="15" fill="rgb(227,153,50)"/><text x="380.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.29%)</title><rect x="377" y="468" width="3" height="15" fill="rgb(220,122,32)"/><text x="380.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.29%)</title><rect x="377" y="484" width="3" height="15" fill="rgb(236,137,42)"/><text x="380.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.29%)</title><rect x="377" y="500" width="3" height="15" fill="rgb(240,164,3)"/><text x="380.00" y="510.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.58%)</title><rect x="377" y="164" width="6" height="15" fill="rgb(206,123,45)"/><text x="380.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.58%)</title><rect x="377" y="180" width="6" height="15" fill="rgb(227,220,7)"/><text x="380.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.58%)</title><rect x="377" y="196" width="6" height="15" fill="rgb(233,62,54)"/><text x="380.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.58%)</title><rect x="377" y="212" width="6" height="15" fill="rgb(210,204,6)"/><text x="380.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.58%)</title><rect x="377" y="228" width="6" height="15" fill="rgb(219,187,6)"/><text x="380.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.58%)</title><rect x="377" y="244" width="6" height="15" fill="rgb(213,133,51)"/><text x="380.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.58%)</title><rect x="377" y="260" width="6" height="15" fill="rgb(211,75,31)"/><text x="380.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.58%)</title><rect x="377" y="276" width="6" height="15" fill="rgb(236,136,20)"/><text x="380.00" y="286.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (1 samples, 0.29%)</title><rect x="380" y="292" width="3" height="15" fill="rgb(215,83,34)"/><text x="383.00" y="302.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.29%)</title><rect x="380" y="308" width="3" height="15" fill="rgb(251,189,6)"/><text x="383.00" y="318.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.29%)</title><rect x="380" y="324" width="3" height="15" fill="rgb(209,110,17)"/><text x="383.00" y="334.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.29%)</title><rect x="380" y="340" width="3" height="15" fill="rgb(215,70,26)"/><text x="383.00" y="350.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.29%)</title><rect x="380" y="356" width="3" height="15" fill="rgb(207,184,17)"/><text x="383.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.29%)</title><rect x="380" y="372" width="3" height="15" fill="rgb(248,190,25)"/><text x="383.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.29%)</title><rect x="380" y="388" width="3" height="15" fill="rgb(254,14,38)"/><text x="383.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.29%)</title><rect x="380" y="404" width="3" height="15" fill="rgb(217,41,48)"/><text x="383.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="380" y="420" width="3" height="15" fill="rgb(243,125,18)"/><text x="383.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.29%)</title><rect x="380" y="436" width="3" height="15" fill="rgb(210,211,4)"/><text x="383.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.29%)</title><rect x="380" y="452" width="3" height="15" fill="rgb(225,106,47)"/><text x="383.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.29%)</title><rect x="380" y="468" width="3" height="15" fill="rgb(230,83,39)"/><text x="383.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:895) (1 samples, 0.29%)</title><rect x="380" y="484" width="3" height="15" fill="rgb(247,115,48)"/><text x="383.00" y="494.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.29%)</title><rect x="383" y="180" width="4" height="15" fill="rgb(214,200,23)"/><text x="386.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (2 samples, 0.58%)</title><rect x="387" y="180" width="7" height="15" fill="rgb(229,25,0)"/><text x="390.00" y="190.50"></text></g><g><title>get (queue.py:164) (3 samples, 0.87%)</title><rect x="397" y="196" width="10" height="15" fill="rgb(224,97,12)"/><text x="400.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.58%)</title><rect x="401" y="212" width="6" height="15" fill="rgb(230,47,20)"/><text x="404.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="404" y="228" width="3" height="15" fill="rgb(245,113,28)"/><text x="407.00" y="238.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.58%)</title><rect x="407" y="196" width="7" height="15" fill="rgb(252,29,30)"/><text x="410.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (9 samples, 2.62%)</title><rect x="394" y="180" width="31" height="15" fill="rgb(228,29,13)"/><text x="397.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (3 samples, 0.87%)</title><rect x="414" y="196" width="11" height="15" fill="rgb(235,23,6)"/><text x="417.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.29%)</title><rect x="421" y="212" width="4" height="15" fill="rgb(244,130,36)"/><text x="424.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:804) (1 samples, 0.29%)</title><rect x="425" y="180" width="3" height="15" fill="rgb(238,94,34)"/><text x="428.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:667) (1 samples, 0.29%)</title><rect x="438" y="196" width="4" height="15" fill="rgb(233,140,23)"/><text x="441.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.29%)</title><rect x="449" y="212" width="3" height="15" fill="rgb(221,151,44)"/><text x="452.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:53) (1 samples, 0.29%)</title><rect x="459" y="228" width="3" height="15" fill="rgb(234,141,33)"/><text x="462.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (3 samples, 0.87%)</title><rect x="462" y="228" width="11" height="15" fill="rgb(219,27,18)"/><text x="465.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.29%)</title><rect x="473" y="228" width="3" height="15" fill="rgb(244,126,29)"/><text x="476.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (15 samples, 4.36%)</title><rect x="428" y="180" width="51" height="15" fill="rgb(215,45,52)"/><text x="431.00" y="190.50">dispa..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (11 samples, 3.20%)</title><rect x="442" y="196" width="37" height="15" fill="rgb(213,148,19)"/><text x="445.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 2.33%)</title><rect x="452" y="212" width="27" height="15" fill="rgb(217,97,6)"/><text x="455.00" y="222.50">d..</text></g><g><title>wraps (functools.py:78) (1 samples, 0.29%)</title><rect x="476" y="228" width="3" height="15" fill="rgb(213,192,53)"/><text x="479.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.29%)</title><rect x="479" y="180" width="4" height="15" fill="rgb(253,97,28)"/><text x="482.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:810) (1 samples, 0.29%)</title><rect x="483" y="180" width="3" height="15" fill="rgb(245,172,7)"/><text x="486.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (2 samples, 0.58%)</title><rect x="486" y="180" width="7" height="15" fill="rgb(253,167,28)"/><text x="489.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.29%)</title><rect x="493" y="180" width="4" height="15" fill="rgb(221,147,2)"/><text x="496.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.87%)</title><rect x="521" y="212" width="10" height="15" fill="rgb(237,96,44)"/><text x="524.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 2.91%)</title><rect x="500" y="196" width="34" height="15" fill="rgb(237,10,46)"/><text x="503.00" y="206.50">ge..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.29%)</title><rect x="531" y="212" width="3" height="15" fill="rgb(243,13,30)"/><text x="534.00" y="222.50"></text></g><g><title>0x7f129aaca880 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="531" y="228" width="3" height="15" fill="rgb(207,57,21)"/><text x="534.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.29%)</title><rect x="545" y="228" width="3" height="15" fill="rgb(228,222,11)"/><text x="548.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (8 samples, 2.33%)</title><rect x="538" y="212" width="27" height="15" fill="rgb(225,212,15)"/><text x="541.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (5 samples, 1.45%)</title><rect x="548" y="228" width="17" height="15" fill="rgb(242,121,15)"/><text x="551.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (2 samples, 0.58%)</title><rect x="565" y="212" width="7" height="15" fill="rgb(215,221,10)"/><text x="568.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (25 samples, 7.27%)</title><rect x="497" y="180" width="85" height="15" fill="rgb(216,145,21)"/><text x="500.00" y="190.50">dispatch_o..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (14 samples, 4.07%)</title><rect x="534" y="196" width="48" height="15" fill="rgb(236,117,35)"/><text x="537.00" y="206.50">get_..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (3 samples, 0.87%)</title><rect x="572" y="212" width="10" height="15" fill="rgb(229,30,32)"/><text x="575.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.58%)</title><rect x="586" y="196" width="7" height="15" fill="rgb(220,33,23)"/><text x="589.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.29%)</title><rect x="593" y="196" width="3" height="15" fill="rgb(215,60,36)"/><text x="596.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (5 samples, 1.45%)</title><rect x="582" y="180" width="18" height="15" fill="rgb(232,87,17)"/><text x="585.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.29%)</title><rect x="596" y="196" width="4" height="15" fill="rgb(244,187,43)"/><text x="599.00" y="206.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.29%)</title><rect x="603" y="196" width="3" height="15" fill="rgb(219,128,46)"/><text x="606.00" y="206.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.29%)</title><rect x="606" y="196" width="4" height="15" fill="rgb(237,117,54)"/><text x="609.00" y="206.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.58%)</title><rect x="617" y="212" width="7" height="15" fill="rgb(241,7,54)"/><text x="620.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.58%)</title><rect x="617" y="228" width="7" height="15" fill="rgb(209,214,28)"/><text x="620.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.29%)</title><rect x="620" y="244" width="4" height="15" fill="rgb(220,63,41)"/><text x="623.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.29%)</title><rect x="620" y="260" width="4" height="15" fill="rgb(212,225,13)"/><text x="623.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="620" y="276" width="4" height="15" fill="rgb(213,173,50)"/><text x="623.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 2.33%)</title><rect x="600" y="180" width="27" height="15" fill="rgb(229,52,43)"/><text x="603.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (5 samples, 1.45%)</title><rect x="610" y="196" width="17" height="15" fill="rgb(245,136,7)"/><text x="613.00" y="206.50"></text></g><g><title>notify (threading.py:349) (1 samples, 0.29%)</title><rect x="624" y="212" width="3" height="15" fill="rgb(217,158,40)"/><text x="627.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.29%)</title><rect x="627" y="196" width="3" height="15" fill="rgb(240,28,24)"/><text x="630.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.29%)</title><rect x="627" y="212" width="3" height="15" fill="rgb(224,72,12)"/><text x="630.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (2 samples, 0.58%)</title><rect x="627" y="180" width="7" height="15" fill="rgb(244,53,29)"/><text x="630.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.29%)</title><rect x="630" y="196" width="4" height="15" fill="rgb(247,121,13)"/><text x="633.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.29%)</title><rect x="630" y="212" width="4" height="15" fill="rgb(251,132,30)"/><text x="633.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (3 samples, 0.87%)</title><rect x="634" y="180" width="10" height="15" fill="rgb(221,30,15)"/><text x="637.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.29%)</title><rect x="641" y="196" width="3" height="15" fill="rgb(230,203,41)"/><text x="644.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.29%)</title><rect x="648" y="196" width="3" height="15" fill="rgb(218,201,42)"/><text x="651.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (4 samples, 1.16%)</title><rect x="651" y="196" width="14" height="15" fill="rgb(213,96,11)"/><text x="654.00" y="206.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.29%)</title><rect x="661" y="212" width="4" height="15" fill="rgb(240,95,48)"/><text x="664.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.58%)</title><rect x="665" y="196" width="7" height="15" fill="rgb(253,115,39)"/><text x="668.00" y="206.50"></text></g><g><title>__enter__ (joblib/parallel.py:212) (1 samples, 0.29%)</title><rect x="675" y="260" width="3" height="15" fill="rgb(219,106,53)"/><text x="678.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.29%)</title><rect x="678" y="260" width="4" height="15" fill="rgb(216,57,28)"/><text x="681.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.58%)</title><rect x="682" y="260" width="7" height="15" fill="rgb(222,119,53)"/><text x="685.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:197) (1 samples, 0.29%)</title><rect x="689" y="260" width="3" height="15" fill="rgb(242,140,5)"/><text x="692.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (7 samples, 2.03%)</title><rect x="672" y="244" width="24" height="15" fill="rgb(241,208,34)"/><text x="675.00" y="254.50">_..</text></g><g><title>__init__ (joblib/parallel.py:206) (1 samples, 0.29%)</title><rect x="692" y="260" width="4" height="15" fill="rgb(224,78,46)"/><text x="695.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.29%)</title><rect x="726" y="308" width="4" height="15" fill="rgb(222,169,11)"/><text x="729.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.29%)</title><rect x="730" y="308" width="3" height="15" fill="rgb(235,147,41)"/><text x="733.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.29%)</title><rect x="744" y="324" width="3" height="15" fill="rgb(212,126,11)"/><text x="747.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 2.91%)</title><rect x="747" y="324" width="34" height="15" fill="rgb(208,100,22)"/><text x="750.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.58%)</title><rect x="774" y="340" width="7" height="15" fill="rgb(210,158,34)"/><text x="777.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (17 samples, 4.94%)</title><rect x="726" y="292" width="59" height="15" fill="rgb(216,76,17)"/><text x="729.00" y="302.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 4.36%)</title><rect x="733" y="308" width="52" height="15" fill="rgb(209,69,33)"/><text x="736.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.29%)</title><rect x="781" y="324" width="4" height="15" fill="rgb(239,207,15)"/><text x="784.00" y="334.50"></text></g><g><title>0x7f127450b225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="792" y="356" width="3" height="15" fill="rgb(210,18,52)"/><text x="795.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.29%)</title><rect x="792" y="372" width="3" height="15" fill="rgb(210,160,23)"/><text x="795.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.29%)</title><rect x="792" y="388" width="3" height="15" fill="rgb(216,79,7)"/><text x="795.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.29%)</title><rect x="792" y="404" width="3" height="15" fill="rgb(237,102,25)"/><text x="795.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.29%)</title><rect x="792" y="420" width="3" height="15" fill="rgb(237,102,19)"/><text x="795.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.29%)</title><rect x="792" y="436" width="3" height="15" fill="rgb(221,109,42)"/><text x="795.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.58%)</title><rect x="795" y="436" width="7" height="15" fill="rgb(226,128,17)"/><text x="798.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (2 samples, 0.58%)</title><rect x="795" y="452" width="7" height="15" fill="rgb(212,122,20)"/><text x="798.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.58%)</title><rect x="795" y="468" width="7" height="15" fill="rgb(214,217,54)"/><text x="798.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.29%)</title><rect x="802" y="436" width="3" height="15" fill="rgb(219,34,49)"/><text x="805.00" y="446.50"></text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.16%)</title><rect x="795" y="420" width="14" height="15" fill="rgb(227,154,40)"/><text x="798.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.29%)</title><rect x="805" y="436" width="4" height="15" fill="rgb(253,132,41)"/><text x="808.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.29%)</title><rect x="805" y="452" width="4" height="15" fill="rgb(230,87,23)"/><text x="808.00" y="462.50"></text></g><g><title>0x7f12744efd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.45%)</title><rect x="795" y="372" width="17" height="15" fill="rgb(212,39,38)"/><text x="798.00" y="382.50"></text></g><g><title>0x7f12744ef666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.45%)</title><rect x="795" y="388" width="17" height="15" fill="rgb(228,146,30)"/><text x="798.00" y="398.50"></text></g><g><title>0x7f12744e52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.45%)</title><rect x="795" y="404" width="17" height="15" fill="rgb(242,152,31)"/><text x="798.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:815) (1 samples, 0.29%)</title><rect x="809" y="420" width="3" height="15" fill="rgb(230,146,16)"/><text x="812.00" y="430.50"></text></g><g><title>0x7f127450b2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.74%)</title><rect x="795" y="356" width="21" height="15" fill="rgb(205,3,22)"/><text x="798.00" y="366.50"></text></g><g><title>0x7f12744efe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="812" y="372" width="4" height="15" fill="rgb(238,131,50)"/><text x="815.00" y="382.50"></text></g><g><title>0x7f12744e32bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="812" y="388" width="4" height="15" fill="rgb(205,82,7)"/><text x="815.00" y="398.50"></text></g><g><title>0x7f12744e292e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="812" y="404" width="4" height="15" fill="rgb(253,68,46)"/><text x="815.00" y="414.50"></text></g><g><title>0x7f127450b511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="816" y="356" width="3" height="15" fill="rgb(214,58,30)"/><text x="819.00" y="366.50"></text></g><g><title>0x7f129ab97151 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="816" y="372" width="3" height="15" fill="rgb(252,10,29)"/><text x="819.00" y="382.50"></text></g><g><title>0x7f127450b592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="819" y="356" width="10" height="15" fill="rgb(235,85,13)"/><text x="822.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.87%)</title><rect x="819" y="372" width="10" height="15" fill="rgb(205,85,1)"/><text x="822.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.29%)</title><rect x="826" y="388" width="3" height="15" fill="rgb(240,165,53)"/><text x="829.00" y="398.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (2 samples, 0.58%)</title><rect x="829" y="372" width="7" height="15" fill="rgb(235,52,31)"/><text x="832.00" y="382.50"></text></g><g><title>0x7f127450b644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.87%)</title><rect x="829" y="356" width="11" height="15" fill="rgb(235,20,12)"/><text x="832.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="836" y="372" width="4" height="15" fill="rgb(207,197,44)"/><text x="839.00" y="382.50"></text></g><g><title>0x7f127450b8aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="840" y="356" width="3" height="15" fill="rgb(252,121,6)"/><text x="843.00" y="366.50"></text></g><g><title>0x7f127450c405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.65%)</title><rect x="792" y="340" width="54" height="15" fill="rgb(224,118,51)"/><text x="795.00" y="350.50">0x7f1..</text></g><g><title>0x7f127450b8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="843" y="356" width="3" height="15" fill="rgb(235,183,5)"/><text x="846.00" y="366.50"></text></g><g><title>0x7f12744e117b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="846" y="356" width="4" height="15" fill="rgb(235,30,31)"/><text x="849.00" y="366.50"></text></g><g><title>0x7f12744fcfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 5.23%)</title><rect x="792" y="324" width="61" height="15" fill="rgb(233,114,20)"/><text x="795.00" y="334.50">0x7f12..</text></g><g><title>0x7f127450c540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="846" y="340" width="7" height="15" fill="rgb(247,199,23)"/><text x="849.00" y="350.50"></text></g><g><title>0x7f12744e12f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(248,44,48)"/><text x="853.00" y="366.50"></text></g><g><title>0x7f12744e04dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="850" y="372" width="3" height="15" fill="rgb(205,113,40)"/><text x="853.00" y="382.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.29%)</title><rect x="853" y="340" width="4" height="15" fill="rgb(248,1,50)"/><text x="856.00" y="350.50"></text></g><g><title>0x7f12744fd05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="853" y="324" width="7" height="15" fill="rgb(217,124,39)"/><text x="856.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.29%)</title><rect x="857" y="340" width="3" height="15" fill="rgb(216,219,12)"/><text x="860.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.29%)</title><rect x="857" y="356" width="3" height="15" fill="rgb(212,96,37)"/><text x="860.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.29%)</title><rect x="857" y="372" width="3" height="15" fill="rgb(212,120,18)"/><text x="860.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.29%)</title><rect x="857" y="388" width="3" height="15" fill="rgb(225,122,1)"/><text x="860.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.29%)</title><rect x="857" y="404" width="3" height="15" fill="rgb(223,86,5)"/><text x="860.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.29%)</title><rect x="857" y="420" width="3" height="15" fill="rgb(230,216,0)"/><text x="860.00" y="430.50"></text></g><g><title>0x7f12744fd14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="860" y="324" width="4" height="15" fill="rgb(218,163,41)"/><text x="863.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="860" y="340" width="4" height="15" fill="rgb(216,22,26)"/><text x="863.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="860" y="356" width="4" height="15" fill="rgb(251,68,30)"/><text x="863.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.29%)</title><rect x="860" y="372" width="4" height="15" fill="rgb(223,99,18)"/><text x="863.00" y="382.50"></text></g><g><title>0x7f12744fd18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="864" y="324" width="3" height="15" fill="rgb(219,159,23)"/><text x="867.00" y="334.50"></text></g><g><title>0x7f12744fd1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="867" y="324" width="3" height="15" fill="rgb(218,172,8)"/><text x="870.00" y="334.50"></text></g><g><title>PyArray_Newshape (shape.c:240) (1 samples, 0.29%)</title><rect x="870" y="372" width="4" height="15" fill="rgb(227,83,53)"/><text x="873.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (27 samples, 7.85%)</title><rect x="785" y="292" width="92" height="15" fill="rgb(232,191,47)"/><text x="788.00" y="302.50">predict_pr..</text></g><g><title>0x7f12744fdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 7.27%)</title><rect x="792" y="308" width="85" height="15" fill="rgb(205,144,22)"/><text x="795.00" y="318.50">0x7f12744f..</text></g><g><title>0x7f12744fd328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.58%)</title><rect x="870" y="324" width="7" height="15" fill="rgb(247,70,5)"/><text x="873.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.58%)</title><rect x="870" y="340" width="7" height="15" fill="rgb(253,224,47)"/><text x="873.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.58%)</title><rect x="870" y="356" width="7" height="15" fill="rgb(246,159,22)"/><text x="873.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.29%)</title><rect x="874" y="372" width="3" height="15" fill="rgb(222,25,4)"/><text x="877.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.29%)</title><rect x="874" y="388" width="3" height="15" fill="rgb(210,13,4)"/><text x="877.00" y="398.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.29%)</title><rect x="874" y="404" width="3" height="15" fill="rgb(224,31,53)"/><text x="877.00" y="414.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.29%)</title><rect x="877" y="308" width="4" height="15" fill="rgb(237,165,26)"/><text x="880.00" y="318.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.58%)</title><rect x="877" y="292" width="7" height="15" fill="rgb(217,0,38)"/><text x="880.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.29%)</title><rect x="881" y="308" width="3" height="15" fill="rgb(216,197,54)"/><text x="884.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.29%)</title><rect x="881" y="324" width="3" height="15" fill="rgb(222,104,53)"/><text x="884.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1584) (2 samples, 0.58%)</title><rect x="891" y="308" width="7" height="15" fill="rgb(225,194,30)"/><text x="894.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:955) (2 samples, 0.58%)</title><rect x="891" y="324" width="7" height="15" fill="rgb(208,12,27)"/><text x="894.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.29%)</title><rect x="905" y="404" width="3" height="15" fill="rgb(232,91,45)"/><text x="908.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.29%)</title><rect x="908" y="436" width="4" height="15" fill="rgb(241,164,45)"/><text x="911.00" y="446.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (5 samples, 1.45%)</title><rect x="905" y="356" width="17" height="15" fill="rgb(213,174,49)"/><text x="908.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (5 samples, 1.45%)</title><rect x="905" y="372" width="17" height="15" fill="rgb(240,118,28)"/><text x="908.00" y="382.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (5 samples, 1.45%)</title><rect x="905" y="388" width="17" height="15" fill="rgb(233,23,37)"/><text x="908.00" y="398.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (4 samples, 1.16%)</title><rect x="908" y="404" width="14" height="15" fill="rgb(205,147,13)"/><text x="911.00" y="414.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (4 samples, 1.16%)</title><rect x="908" y="420" width="14" height="15" fill="rgb(218,175,48)"/><text x="911.00" y="430.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (3 samples, 0.87%)</title><rect x="912" y="436" width="10" height="15" fill="rgb(231,89,25)"/><text x="915.00" y="446.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.29%)</title><rect x="922" y="372" width="3" height="15" fill="rgb(232,160,35)"/><text x="925.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.29%)</title><rect x="929" y="388" width="3" height="15" fill="rgb(220,218,52)"/><text x="932.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.29%)</title><rect x="929" y="404" width="3" height="15" fill="rgb(216,154,53)"/><text x="932.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.29%)</title><rect x="929" y="420" width="3" height="15" fill="rgb(244,48,17)"/><text x="932.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2195) (1 samples, 0.29%)</title><rect x="929" y="436" width="3" height="15" fill="rgb(247,151,18)"/><text x="932.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.29%)</title><rect x="932" y="404" width="4" height="15" fill="rgb(245,60,51)"/><text x="935.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.29%)</title><rect x="932" y="420" width="4" height="15" fill="rgb(222,62,34)"/><text x="935.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.29%)</title><rect x="932" y="436" width="4" height="15" fill="rgb(222,171,17)"/><text x="935.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.29%)</title><rect x="932" y="452" width="4" height="15" fill="rgb(238,175,28)"/><text x="935.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.29%)</title><rect x="932" y="468" width="4" height="15" fill="rgb(228,210,13)"/><text x="935.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.29%)</title><rect x="932" y="484" width="4" height="15" fill="rgb(219,174,37)"/><text x="935.00" y="494.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:436) (1 samples, 0.29%)</title><rect x="936" y="420" width="3" height="15" fill="rgb(239,51,14)"/><text x="939.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.58%)</title><rect x="936" y="404" width="7" height="15" fill="rgb(237,122,54)"/><text x="939.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.29%)</title><rect x="939" y="420" width="4" height="15" fill="rgb(240,74,12)"/><text x="942.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.29%)</title><rect x="939" y="436" width="4" height="15" fill="rgb(246,171,42)"/><text x="942.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.29%)</title><rect x="939" y="452" width="4" height="15" fill="rgb(248,27,29)"/><text x="942.00" y="462.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.29%)</title><rect x="939" y="468" width="4" height="15" fill="rgb(228,176,11)"/><text x="942.00" y="478.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.29%)</title><rect x="939" y="484" width="4" height="15" fill="rgb(231,153,31)"/><text x="942.00" y="494.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.29%)</title><rect x="943" y="420" width="3" height="15" fill="rgb(230,51,48)"/><text x="946.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.29%)</title><rect x="943" y="436" width="3" height="15" fill="rgb(212,59,28)"/><text x="946.00" y="446.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1060) (1 samples, 0.29%)</title><rect x="943" y="452" width="3" height="15" fill="rgb(219,67,12)"/><text x="946.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.29%)</title><rect x="946" y="420" width="3" height="15" fill="rgb(227,2,5)"/><text x="949.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1456) (1 samples, 0.29%)</title><rect x="946" y="436" width="3" height="15" fill="rgb(209,183,28)"/><text x="949.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (2 samples, 0.58%)</title><rect x="949" y="420" width="7" height="15" fill="rgb(230,102,14)"/><text x="952.00" y="430.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2326) (1 samples, 0.29%)</title><rect x="953" y="436" width="3" height="15" fill="rgb(245,12,37)"/><text x="956.00" y="446.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.29%)</title><rect x="956" y="436" width="4" height="15" fill="rgb(236,105,39)"/><text x="959.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.58%)</title><rect x="956" y="420" width="7" height="15" fill="rgb(227,21,15)"/><text x="959.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3034) (1 samples, 0.29%)</title><rect x="960" y="436" width="3" height="15" fill="rgb(211,99,40)"/><text x="963.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (7 samples, 2.03%)</title><rect x="943" y="404" width="24" height="15" fill="rgb(212,131,7)"/><text x="946.00" y="414.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.29%)</title><rect x="963" y="420" width="4" height="15" fill="rgb(223,162,25)"/><text x="966.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2183) (1 samples, 0.29%)</title><rect x="963" y="436" width="4" height="15" fill="rgb(240,18,26)"/><text x="966.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3483) (1 samples, 0.29%)</title><rect x="967" y="420" width="3" height="15" fill="rgb(210,120,54)"/><text x="970.00" y="430.50"></text></g><g><title>NpyIter_GetDescrArray (nditer_api.c:1082) (1 samples, 0.29%)</title><rect x="967" y="436" width="3" height="15" fill="rgb(221,181,2)"/><text x="970.00" y="446.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.29%)</title><rect x="970" y="436" width="3" height="15" fill="rgb(240,116,21)"/><text x="973.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (3 samples, 0.87%)</title><rect x="967" y="404" width="10" height="15" fill="rgb(223,144,25)"/><text x="970.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3486) (2 samples, 0.58%)</title><rect x="970" y="420" width="7" height="15" fill="rgb(246,169,8)"/><text x="973.00" y="430.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1478) (1 samples, 0.29%)</title><rect x="973" y="436" width="4" height="15" fill="rgb(243,217,26)"/><text x="976.00" y="446.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (28 samples, 8.14%)</title><rect x="884" y="292" width="96" height="15" fill="rgb(221,69,13)"/><text x="887.00" y="302.50">predict_pro..</text></g><g><title>array_sum (methods.c:2215) (24 samples, 6.98%)</title><rect x="898" y="308" width="82" height="15" fill="rgb(228,35,11)"/><text x="901.00" y="318.50">array_sum..</text></g><g><title>forward_ndarray_method (methods.c:108) (24 samples, 6.98%)</title><rect x="898" y="324" width="82" height="15" fill="rgb(245,211,19)"/><text x="901.00" y="334.50">forward_n..</text></g><g><title>_sum (numpy/core/_methods.py:38) (23 samples, 6.69%)</title><rect x="901" y="340" width="79" height="15" fill="rgb(229,7,44)"/><text x="904.00" y="350.50">_sum (num..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (17 samples, 4.94%)</title><rect x="922" y="356" width="58" height="15" fill="rgb(225,43,39)"/><text x="925.00" y="366.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (16 samples, 4.65%)</title><rect x="925" y="372" width="55" height="15" fill="rgb(207,134,40)"/><text x="928.00" y="382.50">PyUFu..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 4.07%)</title><rect x="932" y="388" width="48" height="15" fill="rgb(226,31,7)"/><text x="935.00" y="398.50">PyUF..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:595) (1 samples, 0.29%)</title><rect x="977" y="404" width="3" height="15" fill="rgb(222,30,42)"/><text x="980.00" y="414.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.29%)</title><rect x="977" y="420" width="3" height="15" fill="rgb(227,213,4)"/><text x="980.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.29%)</title><rect x="991" y="308" width="3" height="15" fill="rgb(253,150,7)"/><text x="994.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1191) (1 samples, 0.29%)</title><rect x="991" y="324" width="3" height="15" fill="rgb(247,175,38)"/><text x="994.00" y="334.50"></text></g><g><title>count_boolean_trues (item_selection.c:2080) (1 samples, 0.29%)</title><rect x="991" y="340" width="3" height="15" fill="rgb(250,24,44)"/><text x="994.00" y="350.50"></text></g><g><title>array_assign_subscript (mapping.c:2065) (1 samples, 0.29%)</title><rect x="994" y="308" width="3" height="15" fill="rgb(230,21,29)"/><text x="997.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.29%)</title><rect x="994" y="324" width="3" height="15" fill="rgb(225,20,0)"/><text x="997.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.29%)</title><rect x="994" y="340" width="3" height="15" fill="rgb(221,79,9)"/><text x="997.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.29%)</title><rect x="994" y="356" width="3" height="15" fill="rgb(254,203,36)"/><text x="997.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.29%)</title><rect x="997" y="308" width="4" height="15" fill="rgb(213,1,33)"/><text x="1000.00" y="318.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.29%)</title><rect x="997" y="324" width="4" height="15" fill="rgb(246,66,25)"/><text x="1000.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.29%)</title><rect x="997" y="340" width="4" height="15" fill="rgb(212,22,7)"/><text x="1000.00" y="350.50"></text></g><g><title>binop_should_defer (binop_override.h:123) (1 samples, 0.29%)</title><rect x="1001" y="324" width="3" height="15" fill="rgb(233,124,28)"/><text x="1004.00" y="334.50"></text></g><g><title>is_anyscalar_exact (scalartypes.c.src:4574) (1 samples, 0.29%)</title><rect x="1001" y="340" width="3" height="15" fill="rgb(206,24,13)"/><text x="1004.00" y="350.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.29%)</title><rect x="1001" y="356" width="3" height="15" fill="rgb(251,157,22)"/><text x="1004.00" y="366.50"></text></g><g><title>array_richcompare (arrayobject.c:1398) (2 samples, 0.58%)</title><rect x="1001" y="308" width="7" height="15" fill="rgb(209,127,49)"/><text x="1004.00" y="318.50"></text></g><g><title>binop_should_defer (binop_override.h:147) (1 samples, 0.29%)</title><rect x="1004" y="324" width="4" height="15" fill="rgb(213,54,31)"/><text x="1007.00" y="334.50"></text></g><g><title>PyArray_GetPriority (multiarraymodule.c:121) (1 samples, 0.29%)</title><rect x="1004" y="340" width="4" height="15" fill="rgb(247,160,46)"/><text x="1007.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.29%)</title><rect x="1015" y="340" width="3" height="15" fill="rgb(206,139,19)"/><text x="1018.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.29%)</title><rect x="1018" y="356" width="3" height="15" fill="rgb(218,97,21)"/><text x="1021.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.29%)</title><rect x="1021" y="356" width="4" height="15" fill="rgb(225,49,32)"/><text x="1024.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.29%)</title><rect x="1021" y="372" width="4" height="15" fill="rgb(253,12,33)"/><text x="1024.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.29%)</title><rect x="1021" y="388" width="4" height="15" fill="rgb(246,135,25)"/><text x="1024.00" y="398.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.29%)</title><rect x="1021" y="404" width="4" height="15" fill="rgb(207,34,26)"/><text x="1024.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.29%)</title><rect x="1021" y="420" width="4" height="15" fill="rgb(223,146,38)"/><text x="1024.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.87%)</title><rect x="1018" y="340" width="10" height="15" fill="rgb(239,115,54)"/><text x="1021.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.29%)</title><rect x="1025" y="356" width="3" height="15" fill="rgb(244,51,39)"/><text x="1028.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.29%)</title><rect x="1028" y="340" width="4" height="15" fill="rgb(208,220,34)"/><text x="1031.00" y="350.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:296) (1 samples, 0.29%)</title><rect x="1028" y="356" width="4" height="15" fill="rgb(239,110,15)"/><text x="1031.00" y="366.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.74%)</title><rect x="1015" y="324" width="20" height="15" fill="rgb(226,191,1)"/><text x="1018.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.29%)</title><rect x="1032" y="340" width="3" height="15" fill="rgb(245,200,52)"/><text x="1035.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.29%)</title><rect x="1032" y="356" width="3" height="15" fill="rgb(225,114,35)"/><text x="1035.00" y="366.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.29%)</title><rect x="1032" y="372" width="3" height="15" fill="rgb(244,26,44)"/><text x="1035.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.29%)</title><rect x="1035" y="324" width="4" height="15" fill="rgb(243,53,39)"/><text x="1038.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.29%)</title><rect x="1035" y="340" width="4" height="15" fill="rgb(238,30,52)"/><text x="1038.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1035" y="356" width="4" height="15" fill="rgb(230,162,48)"/><text x="1038.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (18 samples, 5.23%)</title><rect x="980" y="292" width="62" height="15" fill="rgb(242,22,7)"/><text x="983.00" y="302.50">predic..</text></g><g><title>array_richcompare (arrayobject.c:1445) (10 samples, 2.91%)</title><rect x="1008" y="308" width="34" height="15" fill="rgb(226,42,19)"/><text x="1011.00" y="318.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.29%)</title><rect x="1039" y="324" width="3" height="15" fill="rgb(246,57,6)"/><text x="1042.00" y="334.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:412) (1 samples, 0.29%)</title><rect x="1039" y="340" width="3" height="15" fill="rgb(205,33,40)"/><text x="1042.00" y="350.50"></text></g><g><title>0x7f129aada120 (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1042" y="308" width="3" height="15" fill="rgb(240,77,48)"/><text x="1045.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.29%)</title><rect x="1045" y="308" width="4" height="15" fill="rgb(227,172,36)"/><text x="1048.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.29%)</title><rect x="1045" y="324" width="4" height="15" fill="rgb(254,46,3)"/><text x="1048.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.29%)</title><rect x="1045" y="340" width="4" height="15" fill="rgb(221,34,26)"/><text x="1048.00" y="350.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1346) (1 samples, 0.29%)</title><rect x="1049" y="340" width="3" height="15" fill="rgb(226,43,8)"/><text x="1052.00" y="350.50"></text></g><g><title>PyUFunc_DivisionTypeResolver (ufunc_type_resolution.c:1165) (1 samples, 0.29%)</title><rect x="1049" y="356" width="3" height="15" fill="rgb(218,181,52)"/><text x="1052.00" y="366.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c:293) (1 samples, 0.29%)</title><rect x="1049" y="372" width="3" height="15" fill="rgb(246,47,23)"/><text x="1052.00" y="382.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:1956) (1 samples, 0.29%)</title><rect x="1052" y="340" width="4" height="15" fill="rgb(252,35,38)"/><text x="1055.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.87%)</title><rect x="1049" y="324" width="10" height="15" fill="rgb(253,3,21)"/><text x="1052.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.29%)</title><rect x="1056" y="340" width="3" height="15" fill="rgb(252,101,48)"/><text x="1059.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1620) (1 samples, 0.29%)</title><rect x="1056" y="356" width="3" height="15" fill="rgb(236,73,8)"/><text x="1059.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.29%)</title><rect x="1059" y="356" width="4" height="15" fill="rgb(252,222,30)"/><text x="1062.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.29%)</title><rect x="1059" y="372" width="4" height="15" fill="rgb(218,99,53)"/><text x="1062.00" y="382.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2224) (1 samples, 0.29%)</title><rect x="1059" y="388" width="4" height="15" fill="rgb(205,140,1)"/><text x="1062.00" y="398.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.29%)</title><rect x="1063" y="372" width="3" height="15" fill="rgb(251,93,19)"/><text x="1066.00" y="382.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:245) (1 samples, 0.29%)</title><rect x="1063" y="388" width="3" height="15" fill="rgb(232,64,38)"/><text x="1066.00" y="398.50"></text></g><g><title>abs_ptrdiff (simd.inc.src:40) (1 samples, 0.29%)</title><rect x="1063" y="404" width="3" height="15" fill="rgb(232,108,1)"/><text x="1066.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (103 samples, 29.94%)</title><rect x="716" y="276" width="353" height="15" fill="rgb(235,5,36)"/><text x="719.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_fores..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (8 samples, 2.33%)</title><rect x="1042" y="292" width="27" height="15" fill="rgb(245,76,37)"/><text x="1045.00" y="302.50">p..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.74%)</title><rect x="1049" y="308" width="20" height="15" fill="rgb(254,75,43)"/><text x="1052.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.87%)</title><rect x="1059" y="324" width="10" height="15" fill="rgb(213,226,6)"/><text x="1062.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.87%)</title><rect x="1059" y="340" width="10" height="15" fill="rgb(214,154,21)"/><text x="1062.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.58%)</title><rect x="1063" y="356" width="6" height="15" fill="rgb(206,143,30)"/><text x="1066.00" y="366.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:777) (1 samples, 0.29%)</title><rect x="1066" y="372" width="3" height="15" fill="rgb(227,161,12)"/><text x="1069.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.29%)</title><rect x="1069" y="276" width="4" height="15" fill="rgb(254,93,27)"/><text x="1072.00" y="286.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (3 samples, 0.87%)</title><rect x="1073" y="276" width="10" height="15" fill="rgb(242,198,2)"/><text x="1076.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1054) (1 samples, 0.29%)</title><rect x="1083" y="324" width="4" height="15" fill="rgb(214,193,26)"/><text x="1086.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.58%)</title><rect x="1083" y="292" width="7" height="15" fill="rgb(229,100,40)"/><text x="1086.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.58%)</title><rect x="1083" y="308" width="7" height="15" fill="rgb(237,70,25)"/><text x="1086.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.29%)</title><rect x="1087" y="324" width="3" height="15" fill="rgb(254,203,52)"/><text x="1090.00" y="334.50"></text></g><g><title>0x7f1299cdac90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1087" y="340" width="3" height="15" fill="rgb(213,7,1)"/><text x="1090.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (3 samples, 0.87%)</title><rect x="1083" y="276" width="10" height="15" fill="rgb(248,0,0)"/><text x="1086.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.29%)</title><rect x="1090" y="292" width="3" height="15" fill="rgb(206,110,14)"/><text x="1093.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.29%)</title><rect x="1090" y="308" width="3" height="15" fill="rgb(233,27,31)"/><text x="1093.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (114 samples, 33.14%)</title><rect x="706" y="260" width="391" height="15" fill="rgb(210,191,9)"/><text x="709.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.29%)</title><rect x="1093" y="276" width="4" height="15" fill="rgb(206,26,11)"/><text x="1096.00" y="286.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.58%)</title><rect x="1100" y="276" width="7" height="15" fill="rgb(210,16,6)"/><text x="1103.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (128 samples, 37.21%)</title><rect x="672" y="212" width="439" height="15" fill="rgb(240,178,12)"/><text x="675.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (128 samples, 37.21%)</title><rect x="672" y="228" width="439" height="15" fill="rgb(215,96,48)"/><text x="675.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (121 samples, 35.17%)</title><rect x="696" y="244" width="415" height="15" fill="rgb(226,16,9)"/><text x="699.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (4 samples, 1.16%)</title><rect x="1097" y="260" width="14" height="15" fill="rgb(208,157,21)"/><text x="1100.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.29%)</title><rect x="1107" y="276" width="4" height="15" fill="rgb(217,62,51)"/><text x="1110.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.58%)</title><rect x="1111" y="228" width="6" height="15" fill="rgb(222,140,38)"/><text x="1114.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.29%)</title><rect x="1114" y="244" width="3" height="15" fill="rgb(216,95,34)"/><text x="1117.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1114" y="260" width="3" height="15" fill="rgb(223,79,46)"/><text x="1117.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.29%)</title><rect x="1117" y="228" width="4" height="15" fill="rgb(247,215,49)"/><text x="1120.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (216 samples, 62.79%)</title><rect x="383" y="164" width="741" height="15" fill="rgb(251,70,13)"/><text x="386.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (140 samples, 40.70%)</title><rect x="644" y="180" width="480" height="15" fill="rgb(215,37,42)"/><text x="647.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (132 samples, 38.37%)</title><rect x="672" y="196" width="452" height="15" fill="rgb(234,62,54)"/><text x="675.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (4 samples, 1.16%)</title><rect x="1111" y="212" width="13" height="15" fill="rgb(246,115,32)"/><text x="1114.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.29%)</title><rect x="1121" y="228" width="3" height="15" fill="rgb(251,167,33)"/><text x="1124.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:38) (321 samples, 93.31%)</title><rect x="27" y="52" width="1101" height="15" fill="rgb(209,60,52)"/><text x="30.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37) (321 samples, 93.31%)</title><rect x="27" y="68" width="1101" height="15" fill="rgb(239,55,25)"/><text x="30.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (317 samples, 92.15%)</title><rect x="40" y="84" width="1088" height="15" fill="rgb(210,146,37)"/><text x="43.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (221 samples, 64.24%)</title><rect x="370" y="100" width="758" height="15" fill="rgb(212,12,39)"/><text x="373.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (221 samples, 64.24%)</title><rect x="370" y="116" width="758" height="15" fill="rgb(249,76,18)"/><text x="373.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (221 samples, 64.24%)</title><rect x="370" y="132" width="758" height="15" fill="rgb(245,118,16)"/><text x="373.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (219 samples, 63.66%)</title><rect x="377" y="148" width="751" height="15" fill="rgb(209,209,38)"/><text x="380.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.29%)</title><rect x="1124" y="164" width="4" height="15" fill="rgb(226,192,48)"/><text x="1127.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.29%)</title><rect x="1124" y="180" width="4" height="15" fill="rgb(239,217,26)"/><text x="1127.00" y="190.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.29%)</title><rect x="1128" y="884" width="3" height="15" fill="rgb(252,220,11)"/><text x="1131.00" y="894.50"></text></g><g><title>join (posixpath.py:80) (1 samples, 0.29%)</title><rect x="1128" y="900" width="3" height="15" fill="rgb(232,189,27)"/><text x="1131.00" y="910.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.29%)</title><rect x="1128" y="916" width="3" height="15" fill="rgb(243,188,24)"/><text x="1131.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.29%)</title><rect x="1131" y="900" width="4" height="15" fill="rgb(245,147,52)"/><text x="1134.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.29%)</title><rect x="1131" y="916" width="4" height="15" fill="rgb(218,171,26)"/><text x="1134.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1131" y="932" width="4" height="15" fill="rgb(222,53,45)"/><text x="1134.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.87%)</title><rect x="1128" y="820" width="10" height="15" fill="rgb(206,104,12)"/><text x="1131.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.87%)</title><rect x="1128" y="836" width="10" height="15" fill="rgb(223,205,53)"/><text x="1131.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 0.87%)</title><rect x="1128" y="852" width="10" height="15" fill="rgb(249,116,53)"/><text x="1131.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 0.87%)</title><rect x="1128" y="868" width="10" height="15" fill="rgb(247,89,34)"/><text x="1131.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.58%)</title><rect x="1131" y="884" width="7" height="15" fill="rgb(219,197,31)"/><text x="1134.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.29%)</title><rect x="1135" y="900" width="3" height="15" fill="rgb(222,125,36)"/><text x="1138.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.29%)</title><rect x="1135" y="916" width="3" height="15" fill="rgb(231,145,24)"/><text x="1138.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.29%)</title><rect x="1135" y="932" width="3" height="15" fill="rgb(250,6,1)"/><text x="1138.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.29%)</title><rect x="1135" y="948" width="3" height="15" fill="rgb(219,152,44)"/><text x="1138.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.29%)</title><rect x="1135" y="964" width="3" height="15" fill="rgb(237,80,24)"/><text x="1138.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.29%)</title><rect x="1135" y="980" width="3" height="15" fill="rgb(215,65,27)"/><text x="1138.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.29%)</title><rect x="1135" y="996" width="3" height="15" fill="rgb(239,193,45)"/><text x="1138.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.29%)</title><rect x="1135" y="1012" width="3" height="15" fill="rgb(237,110,6)"/><text x="1138.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.16%)</title><rect x="1128" y="580" width="13" height="15" fill="rgb(243,152,38)"/><text x="1131.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.16%)</title><rect x="1128" y="596" width="13" height="15" fill="rgb(210,126,11)"/><text x="1131.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.16%)</title><rect x="1128" y="612" width="13" height="15" fill="rgb(243,187,45)"/><text x="1131.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.16%)</title><rect x="1128" y="628" width="13" height="15" fill="rgb(246,0,39)"/><text x="1131.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.16%)</title><rect x="1128" y="644" width="13" height="15" fill="rgb(238,106,23)"/><text x="1131.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.16%)</title><rect x="1128" y="660" width="13" height="15" fill="rgb(238,2,54)"/><text x="1131.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.16%)</title><rect x="1128" y="676" width="13" height="15" fill="rgb(226,153,4)"/><text x="1131.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.16%)</title><rect x="1128" y="692" width="13" height="15" fill="rgb(209,37,37)"/><text x="1131.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.16%)</title><rect x="1128" y="708" width="13" height="15" fill="rgb(237,68,33)"/><text x="1131.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.16%)</title><rect x="1128" y="724" width="13" height="15" fill="rgb(211,43,12)"/><text x="1131.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.16%)</title><rect x="1128" y="740" width="13" height="15" fill="rgb(227,41,30)"/><text x="1131.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.16%)</title><rect x="1128" y="756" width="13" height="15" fill="rgb(209,15,3)"/><text x="1131.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.16%)</title><rect x="1128" y="772" width="13" height="15" fill="rgb(237,176,3)"/><text x="1131.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.16%)</title><rect x="1128" y="788" width="13" height="15" fill="rgb(220,165,34)"/><text x="1131.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.16%)</title><rect x="1128" y="804" width="13" height="15" fill="rgb(234,218,34)"/><text x="1131.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:82) (1 samples, 0.29%)</title><rect x="1138" y="820" width="3" height="15" fill="rgb(224,219,21)"/><text x="1141.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1138" y="836" width="3" height="15" fill="rgb(241,226,42)"/><text x="1141.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1138" y="852" width="3" height="15" fill="rgb(207,28,15)"/><text x="1141.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1138" y="868" width="3" height="15" fill="rgb(209,28,26)"/><text x="1141.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1138" y="884" width="3" height="15" fill="rgb(239,31,50)"/><text x="1141.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1138" y="900" width="3" height="15" fill="rgb(218,89,35)"/><text x="1141.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py:329) (1 samples, 0.29%)</title><rect x="1138" y="916" width="3" height="15" fill="rgb(216,26,10)"/><text x="1141.00" y="926.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.29%)</title><rect x="1138" y="932" width="3" height="15" fill="rgb(233,47,38)"/><text x="1141.00" y="942.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.29%)</title><rect x="1138" y="948" width="3" height="15" fill="rgb(216,174,17)"/><text x="1141.00" y="958.50"></text></g><g><title>compile (sre_compile.py:783) (1 samples, 0.29%)</title><rect x="1138" y="964" width="3" height="15" fill="rgb(222,204,4)"/><text x="1141.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (5 samples, 1.45%)</title><rect x="1128" y="148" width="17" height="15" fill="rgb(218,119,24)"/><text x="1131.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1128" y="164" width="17" height="15" fill="rgb(220,12,29)"/><text x="1131.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.45%)</title><rect x="1128" y="180" width="17" height="15" fill="rgb(224,126,39)"/><text x="1131.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1128" y="196" width="17" height="15" fill="rgb(226,97,9)"/><text x="1131.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1128" y="212" width="17" height="15" fill="rgb(238,136,29)"/><text x="1131.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1128" y="228" width="17" height="15" fill="rgb(216,48,44)"/><text x="1131.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1128" y="244" width="17" height="15" fill="rgb(230,161,47)"/><text x="1131.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1128" y="260" width="17" height="15" fill="rgb(242,228,8)"/><text x="1131.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1128" y="276" width="17" height="15" fill="rgb(236,227,13)"/><text x="1131.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.45%)</title><rect x="1128" y="292" width="17" height="15" fill="rgb(231,99,17)"/><text x="1131.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1128" y="308" width="17" height="15" fill="rgb(247,140,0)"/><text x="1131.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1128" y="324" width="17" height="15" fill="rgb(239,27,37)"/><text x="1131.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1128" y="340" width="17" height="15" fill="rgb(238,145,26)"/><text x="1131.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1128" y="356" width="17" height="15" fill="rgb(213,210,31)"/><text x="1131.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1128" y="372" width="17" height="15" fill="rgb(226,104,16)"/><text x="1131.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.45%)</title><rect x="1128" y="388" width="17" height="15" fill="rgb(215,22,36)"/><text x="1131.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1128" y="404" width="17" height="15" fill="rgb(223,174,48)"/><text x="1131.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1128" y="420" width="17" height="15" fill="rgb(247,83,37)"/><text x="1131.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1128" y="436" width="17" height="15" fill="rgb(254,169,11)"/><text x="1131.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1128" y="452" width="17" height="15" fill="rgb(222,217,34)"/><text x="1131.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1128" y="468" width="17" height="15" fill="rgb(246,65,4)"/><text x="1131.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.45%)</title><rect x="1128" y="484" width="17" height="15" fill="rgb(236,119,40)"/><text x="1131.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1128" y="500" width="17" height="15" fill="rgb(207,2,54)"/><text x="1131.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1128" y="516" width="17" height="15" fill="rgb(233,44,37)"/><text x="1131.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1128" y="532" width="17" height="15" fill="rgb(230,143,19)"/><text x="1131.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1128" y="548" width="17" height="15" fill="rgb(230,112,22)"/><text x="1131.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1128" y="564" width="17" height="15" fill="rgb(235,72,22)"/><text x="1131.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:9) (1 samples, 0.29%)</title><rect x="1141" y="580" width="4" height="15" fill="rgb(206,114,43)"/><text x="1144.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1141" y="596" width="4" height="15" fill="rgb(238,208,53)"/><text x="1144.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="612" width="4" height="15" fill="rgb(215,32,0)"/><text x="1144.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1141" y="628" width="4" height="15" fill="rgb(205,201,30)"/><text x="1144.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1141" y="644" width="4" height="15" fill="rgb(214,123,17)"/><text x="1144.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1141" y="660" width="4" height="15" fill="rgb(235,127,48)"/><text x="1144.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1141" y="676" width="4" height="15" fill="rgb(241,182,39)"/><text x="1144.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="692" width="4" height="15" fill="rgb(227,129,16)"/><text x="1144.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/reflection.py:51) (1 samples, 0.29%)</title><rect x="1141" y="708" width="4" height="15" fill="rgb(228,96,22)"/><text x="1144.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1141" y="724" width="4" height="15" fill="rgb(209,96,43)"/><text x="1144.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="740" width="4" height="15" fill="rgb(225,74,38)"/><text x="1144.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1141" y="756" width="4" height="15" fill="rgb(242,171,30)"/><text x="1144.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1141" y="772" width="4" height="15" fill="rgb(254,48,9)"/><text x="1144.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1141" y="788" width="4" height="15" fill="rgb(215,214,19)"/><text x="1144.00" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1141" y="804" width="4" height="15" fill="rgb(245,224,47)"/><text x="1144.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="820" width="4" height="15" fill="rgb(239,16,42)"/><text x="1144.00" y="830.50"></text></g><g><title>&lt;module&gt; (protobuf/message_factory.py:43) (1 samples, 0.29%)</title><rect x="1141" y="836" width="4" height="15" fill="rgb(238,160,1)"/><text x="1144.00" y="846.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1141" y="852" width="4" height="15" fill="rgb(253,71,17)"/><text x="1144.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="868" width="4" height="15" fill="rgb(206,148,38)"/><text x="1144.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1141" y="884" width="4" height="15" fill="rgb(206,30,28)"/><text x="1144.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1141" y="900" width="4" height="15" fill="rgb(221,202,20)"/><text x="1144.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1141" y="916" width="4" height="15" fill="rgb(231,204,46)"/><text x="1144.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1141" y="932" width="4" height="15" fill="rgb(217,86,51)"/><text x="1144.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="948" width="4" height="15" fill="rgb(213,113,47)"/><text x="1144.00" y="958.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pool.py:64) (1 samples, 0.29%)</title><rect x="1141" y="964" width="4" height="15" fill="rgb(220,72,46)"/><text x="1144.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1141" y="980" width="4" height="15" fill="rgb(220,128,47)"/><text x="1144.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="996" width="4" height="15" fill="rgb(234,0,18)"/><text x="1144.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1141" y="1012" width="4" height="15" fill="rgb(210,76,2)"/><text x="1144.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1141" y="1028" width="4" height="15" fill="rgb(246,164,42)"/><text x="1144.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1141" y="1044" width="4" height="15" fill="rgb(254,217,20)"/><text x="1144.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1141" y="1060" width="4" height="15" fill="rgb(232,172,44)"/><text x="1144.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1141" y="1076" width="4" height="15" fill="rgb(211,64,36)"/><text x="1144.00" y="1086.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_database.py:46) (1 samples, 0.29%)</title><rect x="1141" y="1092" width="4" height="15" fill="rgb(205,143,18)"/><text x="1144.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.29%)</title><rect x="1145" y="340" width="3" height="15" fill="rgb(219,91,46)"/><text x="1148.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="356" width="3" height="15" fill="rgb(252,88,9)"/><text x="1148.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="372" width="3" height="15" fill="rgb(243,62,44)"/><text x="1148.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="388" width="3" height="15" fill="rgb(210,226,33)"/><text x="1148.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="404" width="3" height="15" fill="rgb(224,50,24)"/><text x="1148.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="420" width="3" height="15" fill="rgb(243,87,18)"/><text x="1148.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (1 samples, 0.29%)</title><rect x="1145" y="436" width="3" height="15" fill="rgb(236,118,37)"/><text x="1148.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="452" width="3" height="15" fill="rgb(225,211,44)"/><text x="1148.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="468" width="3" height="15" fill="rgb(216,14,15)"/><text x="1148.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="484" width="3" height="15" fill="rgb(226,202,12)"/><text x="1148.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1145" y="500" width="3" height="15" fill="rgb(247,137,18)"/><text x="1148.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1145" y="516" width="3" height="15" fill="rgb(248,195,10)"/><text x="1148.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:10) (1 samples, 0.29%)</title><rect x="1145" y="532" width="3" height="15" fill="rgb(250,3,46)"/><text x="1148.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1145" y="548" width="3" height="15" fill="rgb(252,52,8)"/><text x="1148.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1145" y="564" width="3" height="15" fill="rgb(239,190,32)"/><text x="1148.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1145" y="580" width="3" height="15" fill="rgb(227,131,52)"/><text x="1148.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.29%)</title><rect x="1145" y="596" width="3" height="15" fill="rgb(223,20,39)"/><text x="1148.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.29%)</title><rect x="1145" y="612" width="3" height="15" fill="rgb(209,78,41)"/><text x="1148.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.29%)</title><rect x="1145" y="628" width="3" height="15" fill="rgb(235,78,37)"/><text x="1148.00" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.29%)</title><rect x="1148" y="628" width="4" height="15" fill="rgb(241,185,21)"/><text x="1151.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="644" width="4" height="15" fill="rgb(212,107,52)"/><text x="1151.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="660" width="4" height="15" fill="rgb(250,175,12)"/><text x="1151.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="676" width="4" height="15" fill="rgb(250,118,42)"/><text x="1151.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1148" y="692" width="4" height="15" fill="rgb(237,96,44)"/><text x="1151.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="708" width="4" height="15" fill="rgb(248,94,54)"/><text x="1151.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.29%)</title><rect x="1148" y="724" width="4" height="15" fill="rgb(236,87,37)"/><text x="1151.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="740" width="4" height="15" fill="rgb(236,121,49)"/><text x="1151.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="756" width="4" height="15" fill="rgb(207,227,12)"/><text x="1151.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="772" width="4" height="15" fill="rgb(222,57,20)"/><text x="1151.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1148" y="788" width="4" height="15" fill="rgb(208,80,50)"/><text x="1151.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="804" width="4" height="15" fill="rgb(229,70,23)"/><text x="1151.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.29%)</title><rect x="1148" y="820" width="4" height="15" fill="rgb(214,91,4)"/><text x="1151.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="836" width="4" height="15" fill="rgb(241,154,39)"/><text x="1151.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="852" width="4" height="15" fill="rgb(245,189,10)"/><text x="1151.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="868" width="4" height="15" fill="rgb(241,60,31)"/><text x="1151.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="884" width="4" height="15" fill="rgb(239,83,9)"/><text x="1151.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="900" width="4" height="15" fill="rgb(230,16,47)"/><text x="1151.00" y="910.50"></text></g><g><title>0x7f126ffea40e (?) (1 samples, 0.29%)</title><rect x="1148" y="916" width="4" height="15" fill="rgb(242,123,47)"/><text x="1151.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="932" width="4" height="15" fill="rgb(214,205,19)"/><text x="1151.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="948" width="4" height="15" fill="rgb(236,162,45)"/><text x="1151.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="964" width="4" height="15" fill="rgb(228,135,16)"/><text x="1151.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="980" width="4" height="15" fill="rgb(212,125,2)"/><text x="1151.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="996" width="4" height="15" fill="rgb(246,227,8)"/><text x="1151.00" y="1006.50"></text></g><g><title>0x7f126fda3cd2 (?) (1 samples, 0.29%)</title><rect x="1148" y="1012" width="4" height="15" fill="rgb(233,134,14)"/><text x="1151.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="1028" width="4" height="15" fill="rgb(212,145,21)"/><text x="1151.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="1044" width="4" height="15" fill="rgb(226,157,8)"/><text x="1151.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="1060" width="4" height="15" fill="rgb(209,179,34)"/><text x="1151.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="1076" width="4" height="15" fill="rgb(231,53,30)"/><text x="1151.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="1092" width="4" height="15" fill="rgb(237,47,38)"/><text x="1151.00" y="1102.50"></text></g><g><title>0x7f126f4990e5 (?) (1 samples, 0.29%)</title><rect x="1148" y="1108" width="4" height="15" fill="rgb(234,9,34)"/><text x="1151.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="1124" width="4" height="15" fill="rgb(226,152,16)"/><text x="1151.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="1140" width="4" height="15" fill="rgb(214,165,52)"/><text x="1151.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="1156" width="4" height="15" fill="rgb(218,174,50)"/><text x="1151.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="1172" width="4" height="15" fill="rgb(252,208,42)"/><text x="1151.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="1188" width="4" height="15" fill="rgb(217,58,45)"/><text x="1151.00" y="1198.50"></text></g><g><title>0x7f126f21de68 (?) (1 samples, 0.29%)</title><rect x="1148" y="1204" width="4" height="15" fill="rgb(215,94,49)"/><text x="1151.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="1220" width="4" height="15" fill="rgb(246,223,24)"/><text x="1151.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="1236" width="4" height="15" fill="rgb(220,78,33)"/><text x="1151.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="1252" width="4" height="15" fill="rgb(252,168,1)"/><text x="1151.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="1268" width="4" height="15" fill="rgb(234,144,15)"/><text x="1151.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="1284" width="4" height="15" fill="rgb(231,120,13)"/><text x="1151.00" y="1294.50"></text></g><g><title>0x7f126efae2fb (?) (1 samples, 0.29%)</title><rect x="1148" y="1300" width="4" height="15" fill="rgb(218,73,12)"/><text x="1151.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="1316" width="4" height="15" fill="rgb(213,8,34)"/><text x="1151.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="1332" width="4" height="15" fill="rgb(242,123,19)"/><text x="1151.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="1348" width="4" height="15" fill="rgb(247,5,10)"/><text x="1151.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="1364" width="4" height="15" fill="rgb(216,202,1)"/><text x="1151.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="1380" width="4" height="15" fill="rgb(230,125,11)"/><text x="1151.00" y="1390.50"></text></g><g><title>0x7f126ed92153 (?) (1 samples, 0.29%)</title><rect x="1148" y="1396" width="4" height="15" fill="rgb(241,221,46)"/><text x="1151.00" y="1406.50"></text></g><g><title>0x7f126ed90c13 (?) (1 samples, 0.29%)</title><rect x="1148" y="1412" width="4" height="15" fill="rgb(215,4,35)"/><text x="1151.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1148" y="1428" width="4" height="15" fill="rgb(217,150,37)"/><text x="1151.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1148" y="1444" width="4" height="15" fill="rgb(230,64,10)"/><text x="1151.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1148" y="1460" width="4" height="15" fill="rgb(245,77,15)"/><text x="1151.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.29%)</title><rect x="1148" y="1476" width="4" height="15" fill="rgb(229,215,19)"/><text x="1151.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1148" y="1492" width="4" height="15" fill="rgb(229,83,37)"/><text x="1151.00" y="1502.50"></text></g><g><title>0x7f126eb2d181 (?) (1 samples, 0.29%)</title><rect x="1148" y="1508" width="4" height="15" fill="rgb(243,211,13)"/><text x="1151.00" y="1518.50"></text></g><g><title>0x7f126eb301c9 (?) (1 samples, 0.29%)</title><rect x="1148" y="1524" width="4" height="15" fill="rgb(239,116,11)"/><text x="1151.00" y="1534.50"></text></g><g><title>0x7f126eb5c167 (?) (1 samples, 0.29%)</title><rect x="1148" y="1540" width="4" height="15" fill="rgb(249,199,39)"/><text x="1151.00" y="1550.50"></text></g><g><title>0x7f126eb57b64 (?) (1 samples, 0.29%)</title><rect x="1148" y="1556" width="4" height="15" fill="rgb(245,163,35)"/><text x="1151.00" y="1566.50"></text></g><g><title>0x7f126eb3b07b (?) (1 samples, 0.29%)</title><rect x="1148" y="1572" width="4" height="15" fill="rgb(206,119,20)"/><text x="1151.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.29%)</title><rect x="1148" y="1588" width="4" height="15" fill="rgb(207,62,2)"/><text x="1151.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.29%)</title><rect x="1148" y="1604" width="4" height="15" fill="rgb(214,192,53)"/><text x="1151.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.29%)</title><rect x="1148" y="1620" width="4" height="15" fill="rgb(238,109,31)"/><text x="1151.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.29%)</title><rect x="1148" y="1636" width="4" height="15" fill="rgb(254,38,32)"/><text x="1151.00" y="1646.50"></text></g><g><title>isatty (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1148" y="1652" width="4" height="15" fill="rgb(238,16,18)"/><text x="1151.00" y="1662.50"></text></g><g><title>tcgetattr (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1148" y="1668" width="4" height="15" fill="rgb(235,114,22)"/><text x="1151.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.87%)</title><rect x="1148" y="436" width="11" height="15" fill="rgb(205,103,4)"/><text x="1151.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.87%)</title><rect x="1148" y="452" width="11" height="15" fill="rgb(252,169,40)"/><text x="1151.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.87%)</title><rect x="1148" y="468" width="11" height="15" fill="rgb(249,201,19)"/><text x="1151.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.87%)</title><rect x="1148" y="484" width="11" height="15" fill="rgb(223,56,37)"/><text x="1151.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.87%)</title><rect x="1148" y="500" width="11" height="15" fill="rgb(245,32,2)"/><text x="1151.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.87%)</title><rect x="1148" y="516" width="11" height="15" fill="rgb(229,13,4)"/><text x="1151.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.87%)</title><rect x="1148" y="532" width="11" height="15" fill="rgb(246,92,14)"/><text x="1151.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.87%)</title><rect x="1148" y="548" width="11" height="15" fill="rgb(231,199,25)"/><text x="1151.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.87%)</title><rect x="1148" y="564" width="11" height="15" fill="rgb(246,85,52)"/><text x="1151.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.87%)</title><rect x="1148" y="580" width="11" height="15" fill="rgb(216,59,51)"/><text x="1151.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.87%)</title><rect x="1148" y="596" width="11" height="15" fill="rgb(239,192,45)"/><text x="1151.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.87%)</title><rect x="1148" y="612" width="11" height="15" fill="rgb(207,60,2)"/><text x="1151.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.58%)</title><rect x="1152" y="628" width="7" height="15" fill="rgb(230,191,45)"/><text x="1155.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="644" width="7" height="15" fill="rgb(245,207,53)"/><text x="1155.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="660" width="7" height="15" fill="rgb(223,47,28)"/><text x="1155.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="676" width="7" height="15" fill="rgb(243,225,20)"/><text x="1155.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="692" width="7" height="15" fill="rgb(223,35,4)"/><text x="1155.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="708" width="7" height="15" fill="rgb(224,93,46)"/><text x="1155.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.58%)</title><rect x="1152" y="724" width="7" height="15" fill="rgb(236,98,11)"/><text x="1155.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="740" width="7" height="15" fill="rgb(212,170,33)"/><text x="1155.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="756" width="7" height="15" fill="rgb(233,216,37)"/><text x="1155.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="772" width="7" height="15" fill="rgb(242,88,15)"/><text x="1155.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="788" width="7" height="15" fill="rgb(237,163,10)"/><text x="1155.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="804" width="7" height="15" fill="rgb(223,18,9)"/><text x="1155.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.58%)</title><rect x="1152" y="820" width="7" height="15" fill="rgb(214,84,49)"/><text x="1155.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="836" width="7" height="15" fill="rgb(252,41,22)"/><text x="1155.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="852" width="7" height="15" fill="rgb(245,130,42)"/><text x="1155.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="868" width="7" height="15" fill="rgb(235,118,35)"/><text x="1155.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="884" width="7" height="15" fill="rgb(250,160,8)"/><text x="1155.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="900" width="7" height="15" fill="rgb(228,39,26)"/><text x="1155.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.58%)</title><rect x="1152" y="916" width="7" height="15" fill="rgb(238,83,36)"/><text x="1155.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="932" width="7" height="15" fill="rgb(217,79,49)"/><text x="1155.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="948" width="7" height="15" fill="rgb(207,143,12)"/><text x="1155.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="964" width="7" height="15" fill="rgb(214,20,42)"/><text x="1155.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="980" width="7" height="15" fill="rgb(223,43,39)"/><text x="1155.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="996" width="7" height="15" fill="rgb(209,79,51)"/><text x="1155.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.58%)</title><rect x="1152" y="1012" width="7" height="15" fill="rgb(222,87,16)"/><text x="1155.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="1028" width="7" height="15" fill="rgb(245,205,51)"/><text x="1155.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="1044" width="7" height="15" fill="rgb(219,197,15)"/><text x="1155.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="1060" width="7" height="15" fill="rgb(236,114,34)"/><text x="1155.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="1076" width="7" height="15" fill="rgb(235,206,37)"/><text x="1155.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="1092" width="7" height="15" fill="rgb(236,103,13)"/><text x="1155.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.58%)</title><rect x="1152" y="1108" width="7" height="15" fill="rgb(228,48,7)"/><text x="1155.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="1124" width="7" height="15" fill="rgb(229,48,10)"/><text x="1155.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="1140" width="7" height="15" fill="rgb(220,173,28)"/><text x="1155.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="1156" width="7" height="15" fill="rgb(217,97,15)"/><text x="1155.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="1172" width="7" height="15" fill="rgb(252,91,36)"/><text x="1155.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="1188" width="7" height="15" fill="rgb(225,114,18)"/><text x="1155.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.58%)</title><rect x="1152" y="1204" width="7" height="15" fill="rgb(238,77,45)"/><text x="1155.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="1220" width="7" height="15" fill="rgb(238,208,32)"/><text x="1155.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="1236" width="7" height="15" fill="rgb(210,15,8)"/><text x="1155.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="1252" width="7" height="15" fill="rgb(245,66,25)"/><text x="1155.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="1268" width="7" height="15" fill="rgb(219,70,33)"/><text x="1155.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="1284" width="7" height="15" fill="rgb(214,184,41)"/><text x="1155.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (2 samples, 0.58%)</title><rect x="1152" y="1300" width="7" height="15" fill="rgb(213,73,10)"/><text x="1155.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="1316" width="7" height="15" fill="rgb(238,188,21)"/><text x="1155.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="1332" width="7" height="15" fill="rgb(230,57,10)"/><text x="1155.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="1348" width="7" height="15" fill="rgb(241,47,34)"/><text x="1155.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1152" y="1364" width="7" height="15" fill="rgb(211,183,16)"/><text x="1155.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1152" y="1380" width="7" height="15" fill="rgb(244,183,41)"/><text x="1155.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (2 samples, 0.58%)</title><rect x="1152" y="1396" width="7" height="15" fill="rgb(244,163,36)"/><text x="1155.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1152" y="1412" width="7" height="15" fill="rgb(240,118,6)"/><text x="1155.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1152" y="1428" width="7" height="15" fill="rgb(228,36,33)"/><text x="1155.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1152" y="1444" width="7" height="15" fill="rgb(221,139,34)"/><text x="1155.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.58%)</title><rect x="1152" y="1460" width="7" height="15" fill="rgb(238,71,14)"/><text x="1155.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.58%)</title><rect x="1152" y="1476" width="7" height="15" fill="rgb(228,219,20)"/><text x="1155.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.58%)</title><rect x="1152" y="1492" width="7" height="15" fill="rgb(247,163,45)"/><text x="1155.00" y="1502.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:4) (10 samples, 2.91%)</title><rect x="1128" y="52" width="34" height="15" fill="rgb(224,159,4)"/><text x="1131.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.91%)</title><rect x="1128" y="68" width="34" height="15" fill="rgb(216,39,7)"/><text x="1131.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.91%)</title><rect x="1128" y="84" width="34" height="15" fill="rgb(254,154,5)"/><text x="1131.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.91%)</title><rect x="1128" y="100" width="34" height="15" fill="rgb(224,64,8)"/><text x="1131.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.91%)</title><rect x="1128" y="116" width="34" height="15" fill="rgb(234,92,30)"/><text x="1131.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.91%)</title><rect x="1128" y="132" width="34" height="15" fill="rgb(226,67,14)"/><text x="1131.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (5 samples, 1.45%)</title><rect x="1145" y="148" width="17" height="15" fill="rgb(251,212,40)"/><text x="1148.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1145" y="164" width="17" height="15" fill="rgb(219,153,52)"/><text x="1148.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1145" y="180" width="17" height="15" fill="rgb(225,105,34)"/><text x="1148.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1145" y="196" width="17" height="15" fill="rgb(242,201,15)"/><text x="1148.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1145" y="212" width="17" height="15" fill="rgb(227,112,12)"/><text x="1148.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1145" y="228" width="17" height="15" fill="rgb(236,61,6)"/><text x="1148.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.45%)</title><rect x="1145" y="244" width="17" height="15" fill="rgb(232,149,10)"/><text x="1148.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.45%)</title><rect x="1145" y="260" width="17" height="15" fill="rgb(210,26,38)"/><text x="1148.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.45%)</title><rect x="1145" y="276" width="17" height="15" fill="rgb(246,157,19)"/><text x="1148.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.45%)</title><rect x="1145" y="292" width="17" height="15" fill="rgb(228,135,7)"/><text x="1148.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.45%)</title><rect x="1145" y="308" width="17" height="15" fill="rgb(241,110,40)"/><text x="1148.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.45%)</title><rect x="1145" y="324" width="17" height="15" fill="rgb(227,36,47)"/><text x="1148.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.16%)</title><rect x="1148" y="340" width="14" height="15" fill="rgb(223,4,5)"/><text x="1151.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.16%)</title><rect x="1148" y="356" width="14" height="15" fill="rgb(233,26,20)"/><text x="1151.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.16%)</title><rect x="1148" y="372" width="14" height="15" fill="rgb(209,105,33)"/><text x="1151.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.16%)</title><rect x="1148" y="388" width="14" height="15" fill="rgb(208,66,16)"/><text x="1151.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.16%)</title><rect x="1148" y="404" width="14" height="15" fill="rgb(217,138,10)"/><text x="1151.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.16%)</title><rect x="1148" y="420" width="14" height="15" fill="rgb(219,181,10)"/><text x="1151.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.29%)</title><rect x="1159" y="436" width="3" height="15" fill="rgb(218,34,46)"/><text x="1162.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="452" width="3" height="15" fill="rgb(213,50,48)"/><text x="1162.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="1159" y="468" width="3" height="15" fill="rgb(218,21,20)"/><text x="1162.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="484" width="3" height="15" fill="rgb(241,105,22)"/><text x="1162.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="500" width="3" height="15" fill="rgb(224,174,38)"/><text x="1162.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="516" width="3" height="15" fill="rgb(232,13,26)"/><text x="1162.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="532" width="3" height="15" fill="rgb(212,199,45)"/><text x="1162.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="548" width="3" height="15" fill="rgb(238,51,43)"/><text x="1162.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="564" width="3" height="15" fill="rgb(223,201,2)"/><text x="1162.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.29%)</title><rect x="1159" y="580" width="3" height="15" fill="rgb(245,177,46)"/><text x="1162.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="596" width="3" height="15" fill="rgb(254,13,31)"/><text x="1162.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="612" width="3" height="15" fill="rgb(230,190,49)"/><text x="1162.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="628" width="3" height="15" fill="rgb(214,89,54)"/><text x="1162.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="644" width="3" height="15" fill="rgb(252,170,6)"/><text x="1162.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="660" width="3" height="15" fill="rgb(218,49,41)"/><text x="1162.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.29%)</title><rect x="1159" y="676" width="3" height="15" fill="rgb(213,164,17)"/><text x="1162.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="692" width="3" height="15" fill="rgb(247,194,0)"/><text x="1162.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="708" width="3" height="15" fill="rgb(218,226,18)"/><text x="1162.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="724" width="3" height="15" fill="rgb(221,80,42)"/><text x="1162.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="740" width="3" height="15" fill="rgb(233,79,43)"/><text x="1162.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="756" width="3" height="15" fill="rgb(235,104,6)"/><text x="1162.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.29%)</title><rect x="1159" y="772" width="3" height="15" fill="rgb(221,112,15)"/><text x="1162.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="788" width="3" height="15" fill="rgb(226,58,28)"/><text x="1162.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="804" width="3" height="15" fill="rgb(206,209,2)"/><text x="1162.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="820" width="3" height="15" fill="rgb(205,64,4)"/><text x="1162.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="836" width="3" height="15" fill="rgb(220,171,1)"/><text x="1162.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="852" width="3" height="15" fill="rgb(237,117,11)"/><text x="1162.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.29%)</title><rect x="1159" y="868" width="3" height="15" fill="rgb(209,146,52)"/><text x="1162.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="884" width="3" height="15" fill="rgb(220,8,14)"/><text x="1162.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.29%)</title><rect x="1159" y="900" width="3" height="15" fill="rgb(239,11,31)"/><text x="1162.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="916" width="3" height="15" fill="rgb(215,68,26)"/><text x="1162.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="932" width="3" height="15" fill="rgb(247,110,26)"/><text x="1162.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="948" width="3" height="15" fill="rgb(208,107,34)"/><text x="1162.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="964" width="3" height="15" fill="rgb(239,94,54)"/><text x="1162.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="980" width="3" height="15" fill="rgb(230,4,53)"/><text x="1162.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="996" width="3" height="15" fill="rgb(251,75,4)"/><text x="1162.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.29%)</title><rect x="1159" y="1012" width="3" height="15" fill="rgb(225,131,51)"/><text x="1162.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="1028" width="3" height="15" fill="rgb(221,10,4)"/><text x="1162.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="1044" width="3" height="15" fill="rgb(236,167,2)"/><text x="1162.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="1060" width="3" height="15" fill="rgb(235,129,17)"/><text x="1162.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="1076" width="3" height="15" fill="rgb(207,186,7)"/><text x="1162.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1092" width="3" height="15" fill="rgb(247,23,9)"/><text x="1162.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.29%)</title><rect x="1159" y="1108" width="3" height="15" fill="rgb(230,221,54)"/><text x="1162.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1159" y="1124" width="3" height="15" fill="rgb(228,141,24)"/><text x="1162.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1140" width="3" height="15" fill="rgb(253,180,49)"/><text x="1162.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="1156" width="3" height="15" fill="rgb(233,85,11)"/><text x="1162.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="1172" width="3" height="15" fill="rgb(237,37,2)"/><text x="1162.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="1188" width="3" height="15" fill="rgb(219,154,22)"/><text x="1162.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="1204" width="3" height="15" fill="rgb(231,171,0)"/><text x="1162.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1220" width="3" height="15" fill="rgb(233,198,24)"/><text x="1162.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.29%)</title><rect x="1159" y="1236" width="3" height="15" fill="rgb(211,71,14)"/><text x="1162.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.29%)</title><rect x="1159" y="1252" width="3" height="15" fill="rgb(237,72,36)"/><text x="1162.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1268" width="3" height="15" fill="rgb(253,56,7)"/><text x="1162.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="1284" width="3" height="15" fill="rgb(241,156,21)"/><text x="1162.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="1300" width="3" height="15" fill="rgb(214,0,54)"/><text x="1162.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="1316" width="3" height="15" fill="rgb(232,60,24)"/><text x="1162.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="1332" width="3" height="15" fill="rgb(211,49,41)"/><text x="1162.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1348" width="3" height="15" fill="rgb(211,147,36)"/><text x="1162.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.29%)</title><rect x="1159" y="1364" width="3" height="15" fill="rgb(210,81,2)"/><text x="1162.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.29%)</title><rect x="1159" y="1380" width="3" height="15" fill="rgb(248,87,16)"/><text x="1162.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.29%)</title><rect x="1159" y="1396" width="3" height="15" fill="rgb(210,135,7)"/><text x="1162.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.29%)</title><rect x="1159" y="1412" width="3" height="15" fill="rgb(250,21,46)"/><text x="1162.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.29%)</title><rect x="1159" y="1428" width="3" height="15" fill="rgb(236,44,33)"/><text x="1162.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.29%)</title><rect x="1159" y="1444" width="3" height="15" fill="rgb(224,8,33)"/><text x="1162.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.29%)</title><rect x="1159" y="1460" width="3" height="15" fill="rgb(233,35,28)"/><text x="1162.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.29%)</title><rect x="1159" y="1476" width="3" height="15" fill="rgb(205,93,11)"/><text x="1162.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.29%)</title><rect x="1159" y="1492" width="3" height="15" fill="rgb(215,155,39)"/><text x="1162.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.29%)</title><rect x="1159" y="1508" width="3" height="15" fill="rgb(217,137,3)"/><text x="1162.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.29%)</title><rect x="1159" y="1524" width="3" height="15" fill="rgb(241,9,14)"/><text x="1162.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.29%)</title><rect x="1159" y="1540" width="3" height="15" fill="rgb(213,211,22)"/><text x="1162.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.29%)</title><rect x="1159" y="1556" width="3" height="15" fill="rgb(241,47,44)"/><text x="1162.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:28) (1 samples, 0.29%)</title><rect x="1159" y="1572" width="3" height="15" fill="rgb(213,191,44)"/><text x="1162.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.29%)</title><rect x="1159" y="1588" width="3" height="15" fill="rgb(242,163,6)"/><text x="1162.00" y="1598.50"></text></g><g><title>root (&lt;template&gt;:130) (1 samples, 0.29%)</title><rect x="1162" y="468" width="3" height="15" fill="rgb(219,120,24)"/><text x="1165.00" y="478.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.29%)</title><rect x="1162" y="484" width="3" height="15" fill="rgb(229,124,37)"/><text x="1165.00" y="494.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (2 samples, 0.58%)</title><rect x="1162" y="84" width="7" height="15" fill="rgb(246,112,23)"/><text x="1165.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.58%)</title><rect x="1162" y="100" width="7" height="15" fill="rgb(223,182,12)"/><text x="1165.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (2 samples, 0.58%)</title><rect x="1162" y="116" width="7" height="15" fill="rgb(205,139,49)"/><text x="1165.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.58%)</title><rect x="1162" y="132" width="7" height="15" fill="rgb(234,39,18)"/><text x="1165.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.58%)</title><rect x="1162" y="148" width="7" height="15" fill="rgb(247,97,50)"/><text x="1165.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.58%)</title><rect x="1162" y="164" width="7" height="15" fill="rgb(227,76,35)"/><text x="1165.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.58%)</title><rect x="1162" y="180" width="7" height="15" fill="rgb(209,200,51)"/><text x="1165.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.58%)</title><rect x="1162" y="196" width="7" height="15" fill="rgb(239,133,35)"/><text x="1165.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1162" y="212" width="7" height="15" fill="rgb(239,12,32)"/><text x="1165.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1162" y="228" width="7" height="15" fill="rgb(250,34,31)"/><text x="1165.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1162" y="244" width="7" height="15" fill="rgb(236,182,11)"/><text x="1165.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1162" y="260" width="7" height="15" fill="rgb(220,59,2)"/><text x="1165.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1162" y="276" width="7" height="15" fill="rgb(215,20,27)"/><text x="1165.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.58%)</title><rect x="1162" y="292" width="7" height="15" fill="rgb(211,164,19)"/><text x="1165.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.58%)</title><rect x="1162" y="308" width="7" height="15" fill="rgb(216,174,24)"/><text x="1165.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.58%)</title><rect x="1162" y="324" width="7" height="15" fill="rgb(231,153,41)"/><text x="1165.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.58%)</title><rect x="1162" y="340" width="7" height="15" fill="rgb(254,135,18)"/><text x="1165.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.58%)</title><rect x="1162" y="356" width="7" height="15" fill="rgb(209,75,45)"/><text x="1165.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.58%)</title><rect x="1162" y="372" width="7" height="15" fill="rgb(234,36,40)"/><text x="1165.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (2 samples, 0.58%)</title><rect x="1162" y="388" width="7" height="15" fill="rgb(224,9,35)"/><text x="1165.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (2 samples, 0.58%)</title><rect x="1162" y="404" width="7" height="15" fill="rgb(227,101,26)"/><text x="1165.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.58%)</title><rect x="1162" y="420" width="7" height="15" fill="rgb(254,63,8)"/><text x="1165.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.58%)</title><rect x="1162" y="436" width="7" height="15" fill="rgb(229,96,14)"/><text x="1165.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.58%)</title><rect x="1162" y="452" width="7" height="15" fill="rgb(230,128,34)"/><text x="1165.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:44) (1 samples, 0.29%)</title><rect x="1165" y="468" width="4" height="15" fill="rgb(217,49,17)"/><text x="1168.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.29%)</title><rect x="1165" y="484" width="4" height="15" fill="rgb(242,90,50)"/><text x="1168.00" y="494.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.29%)</title><rect x="1165" y="500" width="4" height="15" fill="rgb(210,191,20)"/><text x="1168.00" y="510.50"></text></g><g><title>0x7f1288e076b3 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1165" y="516" width="4" height="15" fill="rgb(238,55,15)"/><text x="1168.00" y="526.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototype (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1165" y="532" width="4" height="15" fill="rgb(211,216,3)"/><text x="1168.00" y="542.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototypeNoLock (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1165" y="548" width="4" height="15" fill="rgb(245,10,16)"/><text x="1168.00" y="558.50"></text></g><g><title>google::protobuf::DescriptorPool::generated_pool (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1165" y="564" width="4" height="15" fill="rgb(247,209,28)"/><text x="1168.00" y="574.50"></text></g><g><title>google::protobuf::internal::AssignDescriptors (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.29%)</title><rect x="1165" y="580" width="4" height="15" fill="rgb(241,87,3)"/><text x="1168.00" y="590.50"></text></g><g><title>__pthread_once (libpthread-2.29.so) (1 samples, 0.29%)</title><rect x="1165" y="596" width="4" height="15" fill="rgb(247,182,6)"/><text x="1168.00" y="606.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (1 samples, 0.29%)</title><rect x="1169" y="100" width="3" height="15" fill="rgb(245,127,18)"/><text x="1172.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.29%)</title><rect x="1169" y="116" width="3" height="15" fill="rgb(221,59,54)"/><text x="1172.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.29%)</title><rect x="1169" y="132" width="3" height="15" fill="rgb(251,48,30)"/><text x="1172.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.29%)</title><rect x="1169" y="148" width="3" height="15" fill="rgb(205,114,32)"/><text x="1172.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.29%)</title><rect x="1169" y="164" width="3" height="15" fill="rgb(223,216,1)"/><text x="1172.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.29%)</title><rect x="1169" y="180" width="3" height="15" fill="rgb(218,44,26)"/><text x="1172.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.29%)</title><rect x="1169" y="196" width="3" height="15" fill="rgb(230,8,46)"/><text x="1172.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.29%)</title><rect x="1169" y="212" width="3" height="15" fill="rgb(217,5,51)"/><text x="1172.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.29%)</title><rect x="1169" y="228" width="3" height="15" fill="rgb(218,77,30)"/><text x="1172.00" y="238.50"></text></g><g><title>0x7f125b757422 (?) (1 samples, 0.29%)</title><rect x="1169" y="244" width="3" height="15" fill="rgb(208,34,43)"/><text x="1172.00" y="254.50"></text></g><g><title>0x7f125b75d89e (?) (1 samples, 0.29%)</title><rect x="1169" y="260" width="3" height="15" fill="rgb(243,14,19)"/><text x="1172.00" y="270.50"></text></g><g><title>0x7f125b75d74f (?) (1 samples, 0.29%)</title><rect x="1169" y="276" width="3" height="15" fill="rgb(245,210,10)"/><text x="1172.00" y="286.50"></text></g><g><title>0x7f125b763a3a (?) (1 samples, 0.29%)</title><rect x="1169" y="292" width="3" height="15" fill="rgb(214,204,5)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7f1264a75cfa (?) (1 samples, 0.29%)</title><rect x="1169" y="308" width="3" height="15" fill="rgb(249,69,24)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f1264a7edaa (?) (1 samples, 0.29%)</title><rect x="1169" y="324" width="3" height="15" fill="rgb(206,219,34)"/><text x="1172.00" y="334.50"></text></g><g><title>0x7f1264a80cfb (?) (1 samples, 0.29%)</title><rect x="1169" y="340" width="3" height="15" fill="rgb(244,199,4)"/><text x="1172.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:45) (4 samples, 1.16%)</title><rect x="1162" y="52" width="14" height="15" fill="rgb(217,144,12)"/><text x="1165.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:44) (4 samples, 1.16%)</title><rect x="1162" y="68" width="14" height="15" fill="rgb(241,200,10)"/><text x="1165.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (2 samples, 0.58%)</title><rect x="1169" y="84" width="7" height="15" fill="rgb(212,53,13)"/><text x="1172.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (1 samples, 0.29%)</title><rect x="1172" y="100" width="4" height="15" fill="rgb(253,209,27)"/><text x="1175.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.29%)</title><rect x="1172" y="116" width="4" height="15" fill="rgb(211,101,50)"/><text x="1175.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.29%)</title><rect x="1172" y="132" width="4" height="15" fill="rgb(213,219,42)"/><text x="1175.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.29%)</title><rect x="1172" y="148" width="4" height="15" fill="rgb(206,217,28)"/><text x="1175.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.29%)</title><rect x="1172" y="164" width="4" height="15" fill="rgb(243,56,24)"/><text x="1175.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.29%)</title><rect x="1172" y="180" width="4" height="15" fill="rgb(236,110,16)"/><text x="1175.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.29%)</title><rect x="1172" y="196" width="4" height="15" fill="rgb(252,202,30)"/><text x="1175.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.29%)</title><rect x="1172" y="212" width="4" height="15" fill="rgb(218,36,54)"/><text x="1175.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (1 samples, 0.29%)</title><rect x="1172" y="228" width="4" height="15" fill="rgb(236,182,41)"/><text x="1175.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (1 samples, 0.29%)</title><rect x="1172" y="244" width="4" height="15" fill="rgb(229,164,35)"/><text x="1175.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (1 samples, 0.29%)</title><rect x="1172" y="260" width="4" height="15" fill="rgb(232,179,35)"/><text x="1175.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (1 samples, 0.29%)</title><rect x="1172" y="276" width="4" height="15" fill="rgb(207,92,22)"/><text x="1175.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (1 samples, 0.29%)</title><rect x="1172" y="292" width="4" height="15" fill="rgb(249,33,11)"/><text x="1175.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (1 samples, 0.29%)</title><rect x="1172" y="308" width="4" height="15" fill="rgb(254,160,28)"/><text x="1175.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (1 samples, 0.29%)</title><rect x="1172" y="324" width="4" height="15" fill="rgb(227,209,16)"/><text x="1175.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.29%)</title><rect x="1172" y="340" width="4" height="15" fill="rgb(214,198,49)"/><text x="1175.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.29%)</title><rect x="1172" y="356" width="4" height="15" fill="rgb(238,175,17)"/><text x="1175.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.29%)</title><rect x="1172" y="372" width="4" height="15" fill="rgb(227,133,14)"/><text x="1175.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.29%)</title><rect x="1172" y="388" width="4" height="15" fill="rgb(225,31,42)"/><text x="1175.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.29%)</title><rect x="1172" y="404" width="4" height="15" fill="rgb(225,191,45)"/><text x="1175.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (1 samples, 0.29%)</title><rect x="1172" y="420" width="4" height="15" fill="rgb(219,11,41)"/><text x="1175.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (1 samples, 0.29%)</title><rect x="1172" y="436" width="4" height="15" fill="rgb(231,21,18)"/><text x="1175.00" y="446.50"></text></g><g><title>0x7f1264a7fab9 (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="1172" y="452" width="4" height="15" fill="rgb(246,165,17)"/><text x="1175.00" y="462.50"></text></g><g><title>0x7f1264a80eab (libgomp.so.1.0.0) (1 samples, 0.29%)</title><rect x="1172" y="468" width="4" height="15" fill="rgb(206,1,33)"/><text x="1175.00" y="478.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.29%)</title><rect x="1176" y="84" width="3" height="15" fill="rgb(224,50,53)"/><text x="1179.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.29%)</title><rect x="1176" y="100" width="3" height="15" fill="rgb(234,197,15)"/><text x="1179.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.29%)</title><rect x="1176" y="116" width="3" height="15" fill="rgb(221,156,52)"/><text x="1179.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.29%)</title><rect x="1176" y="132" width="3" height="15" fill="rgb(219,76,8)"/><text x="1179.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.29%)</title><rect x="1176" y="148" width="3" height="15" fill="rgb(249,69,3)"/><text x="1179.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.29%)</title><rect x="1176" y="164" width="3" height="15" fill="rgb(234,68,10)"/><text x="1179.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.29%)</title><rect x="1176" y="180" width="3" height="15" fill="rgb(237,154,5)"/><text x="1179.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.29%)</title><rect x="1176" y="196" width="3" height="15" fill="rgb(216,212,51)"/><text x="1179.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.29%)</title><rect x="1176" y="212" width="3" height="15" fill="rgb(252,21,9)"/><text x="1179.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.29%)</title><rect x="1176" y="228" width="3" height="15" fill="rgb(209,60,46)"/><text x="1179.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:89) (1 samples, 0.29%)</title><rect x="1176" y="244" width="3" height="15" fill="rgb(249,110,26)"/><text x="1179.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src:1526) (1 samples, 0.29%)</title><rect x="1176" y="260" width="3" height="15" fill="rgb(228,107,33)"/><text x="1179.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src:1220) (1 samples, 0.29%)</title><rect x="1176" y="276" width="3" height="15" fill="rgb(248,190,6)"/><text x="1179.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (1 samples, 0.29%)</title><rect x="1176" y="292" width="3" height="15" fill="rgb(212,44,32)"/><text x="1179.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.29%)</title><rect x="1176" y="308" width="3" height="15" fill="rgb(246,53,12)"/><text x="1179.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.29%)</title><rect x="1176" y="324" width="3" height="15" fill="rgb(206,190,16)"/><text x="1179.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.29%)</title><rect x="1176" y="340" width="3" height="15" fill="rgb(210,211,17)"/><text x="1179.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.29%)</title><rect x="1176" y="356" width="3" height="15" fill="rgb(206,14,53)"/><text x="1179.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.29%)</title><rect x="1176" y="372" width="3" height="15" fill="rgb(242,167,7)"/><text x="1179.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.29%)</title><rect x="1176" y="388" width="3" height="15" fill="rgb(237,63,22)"/><text x="1179.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.29%)</title><rect x="1176" y="404" width="3" height="15" fill="rgb(246,54,39)"/><text x="1179.00" y="414.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.29%)</title><rect x="1176" y="420" width="3" height="15" fill="rgb(208,220,28)"/><text x="1179.00" y="430.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (1 samples, 0.29%)</title><rect x="1179" y="100" width="4" height="15" fill="rgb(214,222,15)"/><text x="1182.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.29%)</title><rect x="1179" y="116" width="4" height="15" fill="rgb(213,182,54)"/><text x="1182.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.29%)</title><rect x="1179" y="132" width="4" height="15" fill="rgb(253,193,6)"/><text x="1182.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.29%)</title><rect x="1179" y="148" width="4" height="15" fill="rgb(232,104,27)"/><text x="1182.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.29%)</title><rect x="1179" y="164" width="4" height="15" fill="rgb(241,50,49)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.29%)</title><rect x="1179" y="180" width="4" height="15" fill="rgb(207,224,22)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.29%)</title><rect x="1179" y="196" width="4" height="15" fill="rgb(252,198,32)"/><text x="1182.00" y="206.50"></text></g><g><title>0x7f125aa77ff9 (?) (1 samples, 0.29%)</title><rect x="1179" y="212" width="4" height="15" fill="rgb(234,164,5)"/><text x="1182.00" y="222.50"></text></g><g><title>0x7f125aa72ef6 (?) (1 samples, 0.29%)</title><rect x="1179" y="228" width="4" height="15" fill="rgb(225,102,52)"/><text x="1182.00" y="238.50"></text></g><g><title>0x7f125aa67962 (?) (1 samples, 0.29%)</title><rect x="1179" y="244" width="4" height="15" fill="rgb(251,86,6)"/><text x="1182.00" y="254.50"></text></g><g><title>0x7f125aa9b7a7 (?) (1 samples, 0.29%)</title><rect x="1179" y="260" width="4" height="15" fill="rgb(211,25,6)"/><text x="1182.00" y="270.50"></text></g><g><title>0x7f125aa9b379 (?) (1 samples, 0.29%)</title><rect x="1179" y="276" width="4" height="15" fill="rgb(253,79,54)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7f125aef98b8 (?) (1 samples, 0.29%)</title><rect x="1179" y="292" width="4" height="15" fill="rgb(224,48,51)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7f125aef7c7f (?) (1 samples, 0.29%)</title><rect x="1179" y="308" width="4" height="15" fill="rgb(234,218,5)"/><text x="1182.00" y="318.50"></text></g><g><title>0x7f125af0a99c (?) (1 samples, 0.29%)</title><rect x="1179" y="324" width="4" height="15" fill="rgb(226,115,37)"/><text x="1182.00" y="334.50"></text></g><g><title>0x7f125ac28396 (?) (1 samples, 0.29%)</title><rect x="1179" y="340" width="4" height="15" fill="rgb(215,74,17)"/><text x="1182.00" y="350.50"></text></g><g><title>0x7f125aa55dfc (?) (1 samples, 0.29%)</title><rect x="1179" y="356" width="4" height="15" fill="rgb(217,39,24)"/><text x="1182.00" y="366.50"></text></g><g><title>0x7f125aa8378a (?) (1 samples, 0.29%)</title><rect x="1179" y="372" width="4" height="15" fill="rgb(232,84,49)"/><text x="1182.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.29%)</title><rect x="1179" y="388" width="4" height="15" fill="rgb(226,115,8)"/><text x="1182.00" y="398.50"></text></g><g><title>all (344 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,41,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:52) (4 samples, 1.16%)</title><rect x="1176" y="52" width="14" height="15" fill="rgb(245,198,45)"/><text x="1179.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:51) (4 samples, 1.16%)</title><rect x="1176" y="68" width="14" height="15" fill="rgb(206,24,49)"/><text x="1179.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (3 samples, 0.87%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(248,191,44)"/><text x="1182.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (2 samples, 0.58%)</title><rect x="1183" y="100" width="7" height="15" fill="rgb(207,107,14)"/><text x="1186.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.58%)</title><rect x="1183" y="116" width="7" height="15" fill="rgb(217,59,5)"/><text x="1186.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.58%)</title><rect x="1183" y="132" width="7" height="15" fill="rgb(228,16,28)"/><text x="1186.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.58%)</title><rect x="1183" y="148" width="7" height="15" fill="rgb(216,179,16)"/><text x="1186.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.58%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(251,197,21)"/><text x="1186.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.58%)</title><rect x="1183" y="180" width="7" height="15" fill="rgb(206,140,37)"/><text x="1186.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (2 samples, 0.58%)</title><rect x="1183" y="196" width="7" height="15" fill="rgb(217,47,2)"/><text x="1186.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1183" y="212" width="7" height="15" fill="rgb(207,116,18)"/><text x="1186.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.58%)</title><rect x="1183" y="228" width="7" height="15" fill="rgb(233,37,29)"/><text x="1186.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(221,127,7)"/><text x="1189.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(249,159,22)"/><text x="1189.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(213,43,28)"/><text x="1189.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(228,115,33)"/><text x="1189.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(248,32,43)"/><text x="1189.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(216,178,19)"/><text x="1189.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(249,57,22)"/><text x="1189.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::GetOrCreateOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(215,110,34)"/><text x="1189.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(250,132,18)"/><text x="1189.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.29%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(210,126,42)"/><text x="1189.00" y="398.50"></text></g></g></svg>