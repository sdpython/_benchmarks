<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.30%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(221,201,29)"/><text x="13.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.30%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(244,192,29)"/><text x="13.00" y="302.50"></text></g><g><title>0x7f770eea7a66 (?) (1 samples, 0.30%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(249,146,2)"/><text x="13.00" y="318.50"></text></g><g><title>0x7f770ee99579 (?) (1 samples, 0.30%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(247,193,11)"/><text x="13.00" y="334.50"></text></g><g><title>0x7f770e7da32a (?) (1 samples, 0.30%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(237,20,45)"/><text x="13.00" y="350.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.30%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(210,141,52)"/><text x="13.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(252,133,21)"/><text x="13.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(217,182,19)"/><text x="13.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:31) (2 samples, 0.60%)</title><rect x="10" y="52" width="7" height="15" fill="rgb(205,91,39)"/><text x="13.00" y="62.50"></text></g><g><title>start (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:11) (2 samples, 0.60%)</title><rect x="10" y="68" width="7" height="15" fill="rgb(209,133,49)"/><text x="13.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:39) (2 samples, 0.60%)</title><rect x="10" y="84" width="7" height="15" fill="rgb(252,179,14)"/><text x="13.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.60%)</title><rect x="10" y="100" width="7" height="15" fill="rgb(229,96,12)"/><text x="13.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (2 samples, 0.60%)</title><rect x="10" y="116" width="7" height="15" fill="rgb(250,18,21)"/><text x="13.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (2 samples, 0.60%)</title><rect x="10" y="132" width="7" height="15" fill="rgb(242,107,25)"/><text x="13.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.60%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(233,82,42)"/><text x="13.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.60%)</title><rect x="10" y="164" width="7" height="15" fill="rgb(222,170,49)"/><text x="13.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.60%)</title><rect x="10" y="180" width="7" height="15" fill="rgb(246,12,51)"/><text x="13.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.60%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(238,123,3)"/><text x="13.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.60%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(216,51,2)"/><text x="13.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.60%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(208,182,12)"/><text x="13.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (2 samples, 0.60%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(236,146,24)"/><text x="13.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:876) (2 samples, 0.60%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(247,6,54)"/><text x="13.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.30%)</title><rect x="13" y="276" width="4" height="15" fill="rgb(238,49,8)"/><text x="16.00" y="286.50"></text></g><g><title>0x7f76f6004b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="13" y="292" width="4" height="15" fill="rgb(210,74,26)"/><text x="16.00" y="302.50"></text></g><g><title>0x7f76f603610a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="13" y="308" width="4" height="15" fill="rgb(226,206,44)"/><text x="16.00" y="318.50"></text></g><g><title>0x7f76f6261d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="13" y="324" width="4" height="15" fill="rgb(227,47,40)"/><text x="16.00" y="334.50"></text></g><g><title>0x7f76f625ad00 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="13" y="340" width="4" height="15" fill="rgb(217,51,32)"/><text x="16.00" y="350.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.30%)</title><rect x="17" y="84" width="3" height="15" fill="rgb(223,4,51)"/><text x="20.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="17" y="100" width="3" height="15" fill="rgb(209,214,8)"/><text x="20.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.30%)</title><rect x="17" y="116" width="3" height="15" fill="rgb(254,215,1)"/><text x="20.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.30%)</title><rect x="17" y="132" width="3" height="15" fill="rgb(240,70,12)"/><text x="20.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.30%)</title><rect x="17" y="148" width="3" height="15" fill="rgb(233,165,54)"/><text x="20.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.30%)</title><rect x="17" y="164" width="3" height="15" fill="rgb(225,21,37)"/><text x="20.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.30%)</title><rect x="17" y="180" width="3" height="15" fill="rgb(248,11,17)"/><text x="20.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:60) (1 samples, 0.30%)</title><rect x="17" y="196" width="3" height="15" fill="rgb(238,208,41)"/><text x="20.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.30%)</title><rect x="17" y="212" width="3" height="15" fill="rgb(210,209,33)"/><text x="20.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.30%)</title><rect x="17" y="228" width="3" height="15" fill="rgb(251,180,14)"/><text x="20.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.30%)</title><rect x="17" y="244" width="3" height="15" fill="rgb(234,57,30)"/><text x="20.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:975) (1 samples, 0.30%)</title><rect x="17" y="260" width="3" height="15" fill="rgb(221,1,3)"/><text x="20.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2904) (1 samples, 0.30%)</title><rect x="17" y="276" width="3" height="15" fill="rgb(248,131,30)"/><text x="20.00" y="286.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="17" y="292" width="3" height="15" fill="rgb(226,98,52)"/><text x="20.00" y="302.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.30%)</title><rect x="20" y="180" width="4" height="15" fill="rgb(237,126,2)"/><text x="23.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.30%)</title><rect x="20" y="196" width="4" height="15" fill="rgb(229,216,20)"/><text x="23.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.30%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(227,170,15)"/><text x="23.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.60%)</title><rect x="20" y="164" width="7" height="15" fill="rgb(235,76,27)"/><text x="23.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.30%)</title><rect x="24" y="180" width="3" height="15" fill="rgb(212,84,14)"/><text x="27.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.30%)</title><rect x="24" y="196" width="3" height="15" fill="rgb(252,10,5)"/><text x="27.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.30%)</title><rect x="24" y="212" width="3" height="15" fill="rgb(219,189,15)"/><text x="27.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.30%)</title><rect x="24" y="228" width="3" height="15" fill="rgb(239,159,18)"/><text x="27.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.30%)</title><rect x="24" y="244" width="3" height="15" fill="rgb(221,179,42)"/><text x="27.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.30%)</title><rect x="24" y="260" width="3" height="15" fill="rgb(243,79,13)"/><text x="27.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.30%)</title><rect x="24" y="276" width="3" height="15" fill="rgb(244,99,42)"/><text x="27.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="24" y="292" width="3" height="15" fill="rgb(207,16,16)"/><text x="27.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="24" y="308" width="3" height="15" fill="rgb(213,71,40)"/><text x="27.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.30%)</title><rect x="24" y="324" width="3" height="15" fill="rgb(239,22,22)"/><text x="27.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.30%)</title><rect x="24" y="340" width="3" height="15" fill="rgb(239,115,50)"/><text x="27.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.30%)</title><rect x="24" y="356" width="3" height="15" fill="rgb(242,213,14)"/><text x="27.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.30%)</title><rect x="24" y="372" width="3" height="15" fill="rgb(212,32,37)"/><text x="27.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.30%)</title><rect x="24" y="388" width="3" height="15" fill="rgb(217,20,39)"/><text x="27.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.30%)</title><rect x="24" y="404" width="3" height="15" fill="rgb(244,188,41)"/><text x="27.00" y="414.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.30%)</title><rect x="27" y="180" width="4" height="15" fill="rgb(230,78,11)"/><text x="30.00" y="190.50"></text></g><g><title>compute_batch_size (joblib/_parallel_backends.py:89) (1 samples, 0.30%)</title><rect x="27" y="196" width="4" height="15" fill="rgb(228,168,38)"/><text x="30.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (2 samples, 0.60%)</title><rect x="31" y="180" width="7" height="15" fill="rgb(220,189,36)"/><text x="34.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.30%)</title><rect x="34" y="196" width="4" height="15" fill="rgb(253,177,19)"/><text x="37.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.30%)</title><rect x="38" y="180" width="4" height="15" fill="rgb(232,146,45)"/><text x="41.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.30%)</title><rect x="38" y="196" width="4" height="15" fill="rgb(246,27,51)"/><text x="41.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.30%)</title><rect x="38" y="212" width="4" height="15" fill="rgb(217,192,27)"/><text x="41.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (4 samples, 1.21%)</title><rect x="42" y="180" width="14" height="15" fill="rgb(218,56,53)"/><text x="45.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:805) (1 samples, 0.30%)</title><rect x="56" y="180" width="3" height="15" fill="rgb(231,226,5)"/><text x="59.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.30%)</title><rect x="59" y="212" width="4" height="15" fill="rgb(250,51,54)"/><text x="62.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.60%)</title><rect x="67" y="228" width="7" height="15" fill="rgb(248,94,8)"/><text x="70.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (5 samples, 1.51%)</title><rect x="59" y="180" width="18" height="15" fill="rgb(228,101,10)"/><text x="62.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (5 samples, 1.51%)</title><rect x="59" y="196" width="18" height="15" fill="rgb(218,137,27)"/><text x="62.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (4 samples, 1.21%)</title><rect x="63" y="212" width="14" height="15" fill="rgb(224,218,44)"/><text x="66.00" y="222.50"></text></g><g><title>wraps (functools.py:78) (1 samples, 0.30%)</title><rect x="74" y="228" width="3" height="15" fill="rgb(251,89,40)"/><text x="77.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.30%)</title><rect x="77" y="180" width="4" height="15" fill="rgb(230,8,8)"/><text x="80.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.60%)</title><rect x="81" y="180" width="7" height="15" fill="rgb(247,157,31)"/><text x="84.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (3 samples, 0.91%)</title><rect x="91" y="212" width="11" height="15" fill="rgb(241,6,42)"/><text x="94.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.30%)</title><rect x="99" y="228" width="3" height="15" fill="rgb(231,16,37)"/><text x="102.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.30%)</title><rect x="102" y="212" width="4" height="15" fill="rgb(250,227,26)"/><text x="105.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (6 samples, 1.81%)</title><rect x="88" y="180" width="21" height="15" fill="rgb(215,195,49)"/><text x="91.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (6 samples, 1.81%)</title><rect x="88" y="196" width="21" height="15" fill="rgb(210,221,54)"/><text x="91.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.30%)</title><rect x="106" y="212" width="3" height="15" fill="rgb(206,170,29)"/><text x="109.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.30%)</title><rect x="109" y="180" width="4" height="15" fill="rgb(218,137,30)"/><text x="112.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.30%)</title><rect x="109" y="196" width="4" height="15" fill="rgb(207,221,13)"/><text x="112.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.30%)</title><rect x="113" y="212" width="3" height="15" fill="rgb(241,55,30)"/><text x="116.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.30%)</title><rect x="113" y="228" width="3" height="15" fill="rgb(252,102,22)"/><text x="116.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="113" y="244" width="3" height="15" fill="rgb(242,60,11)"/><text x="116.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.60%)</title><rect x="113" y="180" width="7" height="15" fill="rgb(226,133,26)"/><text x="116.00" y="190.50"></text></g><g><title>put (queue.py:151) (2 samples, 0.60%)</title><rect x="113" y="196" width="7" height="15" fill="rgb(212,1,23)"/><text x="116.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.30%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(247,98,9)"/><text x="119.00" y="222.50"></text></g><g><title>get (queue.py:180) (2 samples, 0.60%)</title><rect x="124" y="196" width="7" height="15" fill="rgb(250,190,8)"/><text x="127.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 1.21%)</title><rect x="120" y="180" width="14" height="15" fill="rgb(235,54,13)"/><text x="123.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.30%)</title><rect x="131" y="196" width="3" height="15" fill="rgb(228,99,23)"/><text x="134.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.30%)</title><rect x="131" y="212" width="3" height="15" fill="rgb(220,25,41)"/><text x="134.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.30%)</title><rect x="131" y="228" width="3" height="15" fill="rgb(242,130,38)"/><text x="134.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.60%)</title><rect x="134" y="196" width="7" height="15" fill="rgb(232,215,36)"/><text x="137.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (3 samples, 0.91%)</title><rect x="141" y="196" width="11" height="15" fill="rgb(214,141,20)"/><text x="144.00" y="206.50"></text></g><g><title>__enter__ (joblib/parallel.py:212) (1 samples, 0.30%)</title><rect x="156" y="260" width="3" height="15" fill="rgb(229,24,7)"/><text x="159.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.91%)</title><rect x="156" y="244" width="10" height="15" fill="rgb(225,100,3)"/><text x="159.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.60%)</title><rect x="159" y="260" width="7" height="15" fill="rgb(252,117,36)"/><text x="162.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="181" y="292" width="3" height="15" fill="rgb(241,224,9)"/><text x="184.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="181" y="308" width="3" height="15" fill="rgb(230,173,18)"/><text x="184.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="181" y="324" width="3" height="15" fill="rgb(217,178,20)"/><text x="184.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (5 samples, 1.51%)</title><rect x="188" y="324" width="18" height="15" fill="rgb(231,0,37)"/><text x="191.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="198" y="340" width="8" height="15" fill="rgb(211,213,53)"/><text x="201.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (8 samples, 2.42%)</title><rect x="184" y="292" width="29" height="15" fill="rgb(212,73,16)"/><text x="187.00" y="302.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.42%)</title><rect x="184" y="308" width="29" height="15" fill="rgb(238,64,2)"/><text x="187.00" y="318.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.60%)</title><rect x="206" y="324" width="7" height="15" fill="rgb(232,13,51)"/><text x="209.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.60%)</title><rect x="206" y="340" width="7" height="15" fill="rgb(253,126,42)"/><text x="209.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (1 samples, 0.30%)</title><rect x="213" y="292" width="3" height="15" fill="rgb(226,127,47)"/><text x="216.00" y="302.50"></text></g><g><title>0x7f76f6010d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="220" y="308" width="3" height="15" fill="rgb(206,153,44)"/><text x="223.00" y="318.50"></text></g><g><title>0x7f76f600ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="223" y="324" width="4" height="15" fill="rgb(218,111,30)"/><text x="226.00" y="334.50"></text></g><g><title>0x7f76f5fffd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="223" y="340" width="4" height="15" fill="rgb(216,102,42)"/><text x="226.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="223" y="356" width="4" height="15" fill="rgb(226,69,9)"/><text x="226.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="223" y="372" width="4" height="15" fill="rgb(234,69,6)"/><text x="226.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="223" y="388" width="4" height="15" fill="rgb(211,174,22)"/><text x="226.00" y="398.50"></text></g><g><title>0x7f76f601e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="227" y="356" width="4" height="15" fill="rgb(216,51,26)"/><text x="230.00" y="366.50"></text></g><g><title>0x7f76f6002d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="227" y="372" width="4" height="15" fill="rgb(209,22,1)"/><text x="230.00" y="382.50"></text></g><g><title>0x7f76f6002666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="227" y="388" width="4" height="15" fill="rgb(222,217,30)"/><text x="230.00" y="398.50"></text></g><g><title>0x7f76f5ff82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="227" y="404" width="4" height="15" fill="rgb(242,20,14)"/><text x="230.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.30%)</title><rect x="227" y="420" width="4" height="15" fill="rgb(252,168,41)"/><text x="230.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.30%)</title><rect x="227" y="436" width="4" height="15" fill="rgb(227,182,10)"/><text x="230.00" y="446.50"></text></g><g><title>0x7f76f601e456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="231" y="356" width="3" height="15" fill="rgb(210,223,14)"/><text x="234.00" y="366.50"></text></g><g><title>0x7f76f601e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="234" y="356" width="4" height="15" fill="rgb(233,167,26)"/><text x="237.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.30%)</title><rect x="234" y="372" width="4" height="15" fill="rgb(245,17,0)"/><text x="237.00" y="382.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.30%)</title><rect x="234" y="388" width="4" height="15" fill="rgb(239,20,52)"/><text x="237.00" y="398.50"></text></g><g><title>0x7f76f601e887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="238" y="356" width="3" height="15" fill="rgb(228,165,52)"/><text x="241.00" y="366.50"></text></g><g><title>0x7f76f600ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="227" y="324" width="18" height="15" fill="rgb(229,77,5)"/><text x="230.00" y="334.50"></text></g><g><title>0x7f76f601f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="227" y="340" width="18" height="15" fill="rgb(244,211,50)"/><text x="230.00" y="350.50"></text></g><g><title>0x7f76f601ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="241" y="356" width="4" height="15" fill="rgb(208,98,6)"/><text x="244.00" y="366.50"></text></g><g><title>0x7f76f5ff6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="241" y="372" width="4" height="15" fill="rgb(216,21,3)"/><text x="244.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.30%)</title><rect x="241" y="388" width="4" height="15" fill="rgb(209,197,25)"/><text x="244.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.30%)</title><rect x="241" y="404" width="4" height="15" fill="rgb(236,71,46)"/><text x="244.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.30%)</title><rect x="241" y="420" width="4" height="15" fill="rgb(230,196,36)"/><text x="244.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:360) (1 samples, 0.30%)</title><rect x="241" y="436" width="4" height="15" fill="rgb(246,69,52)"/><text x="244.00" y="446.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.30%)</title><rect x="245" y="356" width="3" height="15" fill="rgb(224,172,22)"/><text x="248.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.60%)</title><rect x="245" y="340" width="7" height="15" fill="rgb(248,27,44)"/><text x="248.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.30%)</title><rect x="248" y="356" width="4" height="15" fill="rgb(216,223,14)"/><text x="251.00" y="366.50"></text></g><g><title>0x7f76f601005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.91%)</title><rect x="245" y="324" width="10" height="15" fill="rgb(250,178,28)"/><text x="248.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.30%)</title><rect x="252" y="340" width="3" height="15" fill="rgb(209,128,49)"/><text x="255.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.30%)</title><rect x="252" y="356" width="3" height="15" fill="rgb(228,38,19)"/><text x="255.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.30%)</title><rect x="252" y="372" width="3" height="15" fill="rgb(230,212,48)"/><text x="255.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="252" y="388" width="3" height="15" fill="rgb(223,21,47)"/><text x="255.00" y="398.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (12 samples, 3.63%)</title><rect x="216" y="292" width="43" height="15" fill="rgb(228,53,45)"/><text x="219.00" y="302.50">pred..</text></g><g><title>0x7f76f6010d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 3.02%)</title><rect x="223" y="308" width="36" height="15" fill="rgb(224,134,38)"/><text x="226.00" y="318.50">0x7..</text></g><g><title>0x7f76f6010328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="255" y="324" width="4" height="15" fill="rgb(241,26,46)"/><text x="258.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.30%)</title><rect x="255" y="340" width="4" height="15" fill="rgb(246,63,53)"/><text x="258.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.30%)</title><rect x="255" y="356" width="4" height="15" fill="rgb(224,172,42)"/><text x="258.00" y="366.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (2 samples, 0.60%)</title><rect x="259" y="292" width="7" height="15" fill="rgb(221,152,46)"/><text x="262.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.30%)</title><rect x="273" y="308" width="4" height="15" fill="rgb(253,85,12)"/><text x="276.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4416) (1 samples, 0.30%)</title><rect x="277" y="372" width="3" height="15" fill="rgb(231,163,54)"/><text x="280.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.30%)</title><rect x="280" y="388" width="4" height="15" fill="rgb(231,175,37)"/><text x="283.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.30%)</title><rect x="280" y="404" width="4" height="15" fill="rgb(206,187,18)"/><text x="283.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.30%)</title><rect x="280" y="420" width="4" height="15" fill="rgb(226,85,33)"/><text x="283.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2194) (1 samples, 0.30%)</title><rect x="280" y="436" width="4" height="15" fill="rgb(231,129,48)"/><text x="283.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.30%)</title><rect x="284" y="468" width="4" height="15" fill="rgb(243,155,5)"/><text x="287.00" y="478.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.30%)</title><rect x="284" y="484" width="4" height="15" fill="rgb(208,123,25)"/><text x="287.00" y="494.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.60%)</title><rect x="284" y="404" width="7" height="15" fill="rgb(218,165,39)"/><text x="287.00" y="414.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.60%)</title><rect x="284" y="420" width="7" height="15" fill="rgb(213,213,20)"/><text x="287.00" y="430.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (2 samples, 0.60%)</title><rect x="284" y="436" width="7" height="15" fill="rgb(225,170,4)"/><text x="287.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.60%)</title><rect x="284" y="452" width="7" height="15" fill="rgb(214,146,40)"/><text x="287.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.30%)</title><rect x="288" y="468" width="3" height="15" fill="rgb(249,170,37)"/><text x="291.00" y="478.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.30%)</title><rect x="288" y="484" width="3" height="15" fill="rgb(232,200,26)"/><text x="291.00" y="494.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.30%)</title><rect x="288" y="500" width="3" height="15" fill="rgb(222,114,24)"/><text x="291.00" y="510.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.30%)</title><rect x="288" y="516" width="3" height="15" fill="rgb(244,97,15)"/><text x="291.00" y="526.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:415) (1 samples, 0.30%)</title><rect x="291" y="420" width="4" height="15" fill="rgb(241,143,1)"/><text x="294.00" y="430.50"></text></g><g><title>0x7f771b7ef710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="291" y="436" width="4" height="15" fill="rgb(216,81,11)"/><text x="294.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.60%)</title><rect x="291" y="404" width="7" height="15" fill="rgb(225,47,30)"/><text x="294.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.30%)</title><rect x="295" y="420" width="3" height="15" fill="rgb(241,45,21)"/><text x="298.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.30%)</title><rect x="295" y="436" width="3" height="15" fill="rgb(225,155,6)"/><text x="298.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.30%)</title><rect x="295" y="452" width="3" height="15" fill="rgb(219,50,29)"/><text x="298.00" y="462.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.30%)</title><rect x="295" y="468" width="3" height="15" fill="rgb(230,178,41)"/><text x="298.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="298" y="420" width="4" height="15" fill="rgb(252,12,1)"/><text x="301.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2722) (1 samples, 0.30%)</title><rect x="298" y="436" width="4" height="15" fill="rgb(238,215,18)"/><text x="301.00" y="446.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.30%)</title><rect x="302" y="420" width="3" height="15" fill="rgb(232,86,31)"/><text x="305.00" y="430.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1647) (1 samples, 0.30%)</title><rect x="302" y="436" width="3" height="15" fill="rgb(234,218,34)"/><text x="305.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.91%)</title><rect x="298" y="404" width="11" height="15" fill="rgb(243,93,38)"/><text x="301.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.30%)</title><rect x="305" y="420" width="4" height="15" fill="rgb(253,223,45)"/><text x="308.00" y="430.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2032) (1 samples, 0.30%)</title><rect x="305" y="436" width="4" height="15" fill="rgb(241,77,20)"/><text x="308.00" y="446.50"></text></g><g><title>reduce_loop (ufunc_object.c:3559) (1 samples, 0.30%)</title><rect x="313" y="420" width="3" height="15" fill="rgb(235,227,49)"/><text x="316.00" y="430.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.30%)</title><rect x="316" y="420" width="4" height="15" fill="rgb(240,95,45)"/><text x="319.00" y="430.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.30%)</title><rect x="316" y="436" width="4" height="15" fill="rgb(210,199,4)"/><text x="319.00" y="446.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.30%)</title><rect x="316" y="452" width="4" height="15" fill="rgb(232,74,34)"/><text x="319.00" y="462.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (16 samples, 4.83%)</title><rect x="266" y="292" width="57" height="15" fill="rgb(205,3,1)"/><text x="269.00" y="302.50">predic..</text></g><g><title>array_sum (methods.c:2215) (13 samples, 3.93%)</title><rect x="277" y="308" width="46" height="15" fill="rgb(214,191,40)"/><text x="280.00" y="318.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.93%)</title><rect x="277" y="324" width="46" height="15" fill="rgb(208,107,43)"/><text x="280.00" y="334.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (13 samples, 3.93%)</title><rect x="277" y="340" width="46" height="15" fill="rgb(206,135,22)"/><text x="280.00" y="350.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 3.93%)</title><rect x="277" y="356" width="46" height="15" fill="rgb(223,57,20)"/><text x="280.00" y="366.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 3.63%)</title><rect x="280" y="372" width="43" height="15" fill="rgb(220,212,46)"/><text x="283.00" y="382.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (11 samples, 3.32%)</title><rect x="284" y="388" width="39" height="15" fill="rgb(222,8,30)"/><text x="287.00" y="398.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 1.21%)</title><rect x="309" y="404" width="14" height="15" fill="rgb(246,176,23)"/><text x="312.00" y="414.50"></text></g><g><title>reduce_loop (ufunc_object.c:3572) (1 samples, 0.30%)</title><rect x="320" y="420" width="3" height="15" fill="rgb(253,122,25)"/><text x="323.00" y="430.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.30%)</title><rect x="323" y="308" width="4" height="15" fill="rgb(226,206,43)"/><text x="326.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.30%)</title><rect x="327" y="324" width="3" height="15" fill="rgb(233,91,32)"/><text x="330.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="327" y="340" width="3" height="15" fill="rgb(229,147,35)"/><text x="330.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.30%)</title><rect x="327" y="356" width="3" height="15" fill="rgb(234,52,47)"/><text x="330.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.30%)</title><rect x="327" y="372" width="3" height="15" fill="rgb(246,58,45)"/><text x="330.00" y="382.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.30%)</title><rect x="327" y="388" width="3" height="15" fill="rgb(205,203,4)"/><text x="330.00" y="398.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:218) (1 samples, 0.30%)</title><rect x="327" y="404" width="3" height="15" fill="rgb(224,36,31)"/><text x="330.00" y="414.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (3 samples, 0.91%)</title><rect x="323" y="292" width="11" height="15" fill="rgb(208,34,4)"/><text x="326.00" y="302.50"></text></g><g><title>array_richcompare (arrayobject.c:1445) (2 samples, 0.60%)</title><rect x="327" y="308" width="7" height="15" fill="rgb(224,25,19)"/><text x="330.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.30%)</title><rect x="330" y="324" width="4" height="15" fill="rgb(252,121,52)"/><text x="333.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="330" y="340" width="4" height="15" fill="rgb(232,118,8)"/><text x="333.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="330" y="356" width="4" height="15" fill="rgb(213,228,3)"/><text x="333.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.30%)</title><rect x="330" y="372" width="4" height="15" fill="rgb(230,144,32)"/><text x="333.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="334" y="324" width="3" height="15" fill="rgb(247,79,51)"/><text x="337.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.30%)</title><rect x="334" y="340" width="3" height="15" fill="rgb(233,220,53)"/><text x="337.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1500) (1 samples, 0.30%)</title><rect x="337" y="356" width="4" height="15" fill="rgb(216,38,4)"/><text x="340.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.30%)</title><rect x="341" y="356" width="4" height="15" fill="rgb(240,132,52)"/><text x="344.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="341" y="372" width="4" height="15" fill="rgb(207,76,41)"/><text x="344.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.30%)</title><rect x="341" y="388" width="4" height="15" fill="rgb(245,110,13)"/><text x="344.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.91%)</title><rect x="337" y="324" width="11" height="15" fill="rgb(245,164,31)"/><text x="340.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.91%)</title><rect x="337" y="340" width="11" height="15" fill="rgb(216,218,6)"/><text x="340.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.30%)</title><rect x="345" y="356" width="3" height="15" fill="rgb(212,1,8)"/><text x="348.00" y="366.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:275) (1 samples, 0.30%)</title><rect x="345" y="372" width="3" height="15" fill="rgb(252,181,29)"/><text x="348.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (50 samples, 15.11%)</title><rect x="173" y="276" width="179" height="15" fill="rgb(238,102,38)"/><text x="176.00" y="286.50">_accumulate_prediction ..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (5 samples, 1.51%)</title><rect x="334" y="292" width="18" height="15" fill="rgb(243,82,34)"/><text x="337.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.51%)</title><rect x="334" y="308" width="18" height="15" fill="rgb(205,56,5)"/><text x="337.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.30%)</title><rect x="348" y="324" width="4" height="15" fill="rgb(226,22,54)"/><text x="351.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.60%)</title><rect x="352" y="276" width="7" height="15" fill="rgb(226,101,4)"/><text x="355.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.30%)</title><rect x="359" y="308" width="3" height="15" fill="rgb(228,21,27)"/><text x="362.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.30%)</title><rect x="359" y="324" width="3" height="15" fill="rgb(236,84,26)"/><text x="362.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (55 samples, 16.62%)</title><rect x="170" y="260" width="196" height="15" fill="rgb(228,77,41)"/><text x="173.00" y="270.50">&lt;listcomp&gt; (joblib/parall..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (2 samples, 0.60%)</title><rect x="359" y="276" width="7" height="15" fill="rgb(212,13,35)"/><text x="362.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.60%)</title><rect x="359" y="292" width="7" height="15" fill="rgb(246,101,38)"/><text x="362.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="362" y="308" width="4" height="15" fill="rgb(206,7,53)"/><text x="365.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.30%)</title><rect x="362" y="324" width="4" height="15" fill="rgb(229,184,14)"/><text x="365.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.30%)</title><rect x="362" y="340" width="4" height="15" fill="rgb(233,160,50)"/><text x="365.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.30%)</title><rect x="362" y="356" width="4" height="15" fill="rgb(235,192,51)"/><text x="365.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.30%)</title><rect x="362" y="372" width="4" height="15" fill="rgb(251,106,51)"/><text x="365.00" y="382.50"></text></g><g><title>0x7f771c5ccbd8 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="362" y="388" width="4" height="15" fill="rgb(228,152,43)"/><text x="365.00" y="398.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (61 samples, 18.43%)</title><rect x="152" y="212" width="218" height="15" fill="rgb(211,197,36)"/><text x="155.00" y="222.50">apply_async (joblib/_paralle..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (61 samples, 18.43%)</title><rect x="152" y="228" width="218" height="15" fill="rgb(250,174,26)"/><text x="155.00" y="238.50">__init__ (joblib/_parallel_b..</text></g><g><title>__call__ (joblib/parallel.py:256) (57 samples, 17.22%)</title><rect x="166" y="244" width="204" height="15" fill="rgb(240,183,38)"/><text x="169.00" y="254.50">__call__ (joblib/parallel...</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.30%)</title><rect x="366" y="260" width="4" height="15" fill="rgb(211,63,35)"/><text x="369.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.30%)</title><rect x="370" y="228" width="3" height="15" fill="rgb(217,199,41)"/><text x="373.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.30%)</title><rect x="373" y="228" width="4" height="15" fill="rgb(230,170,9)"/><text x="376.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.30%)</title><rect x="377" y="228" width="3" height="15" fill="rgb(240,110,1)"/><text x="380.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (70 samples, 21.15%)</title><rect x="134" y="180" width="250" height="15" fill="rgb(241,3,49)"/><text x="137.00" y="190.50">dispatch_one_batch (joblib/parall..</text></g><g><title>_dispatch (joblib/parallel.py:753) (65 samples, 19.64%)</title><rect x="152" y="196" width="232" height="15" fill="rgb(226,169,39)"/><text x="155.00" y="206.50">_dispatch (joblib/parallel.py:..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (4 samples, 1.21%)</title><rect x="370" y="212" width="14" height="15" fill="rgb(226,36,49)"/><text x="373.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.30%)</title><rect x="380" y="228" width="4" height="15" fill="rgb(239,225,41)"/><text x="383.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (101 samples, 30.51%)</title><rect x="27" y="164" width="360" height="15" fill="rgb(221,155,28)"/><text x="30.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.30%)</title><rect x="384" y="180" width="3" height="15" fill="rgb(247,188,48)"/><text x="387.00" y="190.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.30%)</title><rect x="384" y="196" width="3" height="15" fill="rgb(246,57,20)"/><text x="387.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="384" y="212" width="3" height="15" fill="rgb(249,215,43)"/><text x="387.00" y="222.50"></text></g><g><title>retrieve (joblib/parallel.py:895) (1 samples, 0.30%)</title><rect x="387" y="180" width="4" height="15" fill="rgb(243,76,41)"/><text x="390.00" y="190.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (106 samples, 32.02%)</title><rect x="20" y="100" width="378" height="15" fill="rgb(213,180,35)"/><text x="23.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 32.02%)</title><rect x="20" y="116" width="378" height="15" fill="rgb(239,121,2)"/><text x="23.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (106 samples, 32.02%)</title><rect x="20" y="132" width="378" height="15" fill="rgb(250,91,22)"/><text x="23.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (106 samples, 32.02%)</title><rect x="20" y="148" width="378" height="15" fill="rgb(213,197,16)"/><text x="23.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (3 samples, 0.91%)</title><rect x="387" y="164" width="11" height="15" fill="rgb(218,222,24)"/><text x="390.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (2 samples, 0.60%)</title><rect x="391" y="180" width="7" height="15" fill="rgb(231,71,32)"/><text x="394.00" y="190.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:656) (1 samples, 0.30%)</title><rect x="398" y="148" width="4" height="15" fill="rgb(218,168,27)"/><text x="401.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:410) (1 samples, 0.30%)</title><rect x="398" y="164" width="4" height="15" fill="rgb(244,127,5)"/><text x="401.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="398" y="180" width="4" height="15" fill="rgb(232,64,15)"/><text x="401.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.30%)</title><rect x="398" y="196" width="4" height="15" fill="rgb(225,159,5)"/><text x="401.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.30%)</title><rect x="398" y="212" width="4" height="15" fill="rgb(241,212,49)"/><text x="401.00" y="222.50"></text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:666) (1 samples, 0.30%)</title><rect x="402" y="148" width="3" height="15" fill="rgb(247,226,44)"/><text x="405.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.30%)</title><rect x="402" y="164" width="3" height="15" fill="rgb(228,29,14)"/><text x="405.00" y="174.50"></text></g><g><title>__init__ (queue.py:34) (1 samples, 0.30%)</title><rect x="402" y="180" width="3" height="15" fill="rgb(238,52,30)"/><text x="405.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.30%)</title><rect x="405" y="180" width="4" height="15" fill="rgb(220,155,16)"/><text x="408.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.60%)</title><rect x="405" y="164" width="7" height="15" fill="rgb(236,85,47)"/><text x="408.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.30%)</title><rect x="409" y="180" width="3" height="15" fill="rgb(227,102,2)"/><text x="412.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.30%)</title><rect x="409" y="196" width="3" height="15" fill="rgb(230,94,41)"/><text x="412.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.30%)</title><rect x="409" y="212" width="3" height="15" fill="rgb(213,40,22)"/><text x="412.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.30%)</title><rect x="416" y="180" width="3" height="15" fill="rgb(226,42,5)"/><text x="419.00" y="190.50"></text></g><g><title>compute_batch_size (joblib/_parallel_backends.py:89) (1 samples, 0.30%)</title><rect x="416" y="196" width="3" height="15" fill="rgb(213,133,38)"/><text x="419.00" y="206.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.60%)</title><rect x="430" y="196" width="7" height="15" fill="rgb(237,16,30)"/><text x="433.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.30%)</title><rect x="434" y="212" width="3" height="15" fill="rgb(234,187,5)"/><text x="437.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="434" y="228" width="3" height="15" fill="rgb(218,150,40)"/><text x="437.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.30%)</title><rect x="434" y="244" width="3" height="15" fill="rgb(227,27,50)"/><text x="437.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="434" y="260" width="3" height="15" fill="rgb(222,81,4)"/><text x="437.00" y="270.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.60%)</title><rect x="437" y="196" width="7" height="15" fill="rgb(250,164,18)"/><text x="440.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (10 samples, 3.02%)</title><rect x="419" y="180" width="36" height="15" fill="rgb(227,106,39)"/><text x="422.00" y="190.50">dis..</text></g><g><title>get (queue.py:182) (3 samples, 0.91%)</title><rect x="444" y="196" width="11" height="15" fill="rgb(211,157,41)"/><text x="447.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.30%)</title><rect x="452" y="212" width="3" height="15" fill="rgb(246,123,30)"/><text x="455.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.30%)</title><rect x="477" y="228" width="3" height="15" fill="rgb(215,211,49)"/><text x="480.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (3 samples, 0.91%)</title><rect x="480" y="228" width="11" height="15" fill="rgb(211,58,6)"/><text x="483.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.30%)</title><rect x="491" y="228" width="3" height="15" fill="rgb(207,165,3)"/><text x="494.00" y="238.50"></text></g><g><title>wraps (functools.py:78) (1 samples, 0.30%)</title><rect x="494" y="228" width="4" height="15" fill="rgb(239,179,44)"/><text x="497.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (14 samples, 4.23%)</title><rect x="455" y="180" width="50" height="15" fill="rgb(231,50,52)"/><text x="458.00" y="190.50">dispa..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:669) (11 samples, 3.32%)</title><rect x="466" y="196" width="39" height="15" fill="rgb(213,26,29)"/><text x="469.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:308) (10 samples, 3.02%)</title><rect x="469" y="212" width="36" height="15" fill="rgb(220,167,53)"/><text x="472.00" y="222.50">del..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.60%)</title><rect x="498" y="228" width="7" height="15" fill="rgb(219,62,14)"/><text x="501.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.30%)</title><rect x="505" y="180" width="4" height="15" fill="rgb(218,169,30)"/><text x="508.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.30%)</title><rect x="509" y="180" width="3" height="15" fill="rgb(249,75,5)"/><text x="512.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.60%)</title><rect x="548" y="212" width="7" height="15" fill="rgb(238,14,40)"/><text x="551.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (11 samples, 3.32%)</title><rect x="523" y="196" width="39" height="15" fill="rgb(205,227,17)"/><text x="526.00" y="206.50">get..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.60%)</title><rect x="555" y="212" width="7" height="15" fill="rgb(219,207,47)"/><text x="558.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (2 samples, 0.60%)</title><rect x="562" y="228" width="7" height="15" fill="rgb(210,180,14)"/><text x="565.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (6 samples, 1.81%)</title><rect x="562" y="212" width="21" height="15" fill="rgb(208,54,44)"/><text x="565.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (4 samples, 1.21%)</title><rect x="569" y="228" width="14" height="15" fill="rgb(245,122,16)"/><text x="572.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.30%)</title><rect x="580" y="244" width="3" height="15" fill="rgb(239,176,31)"/><text x="583.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (1 samples, 0.30%)</title><rect x="583" y="212" width="4" height="15" fill="rgb(251,44,8)"/><text x="586.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.30%)</title><rect x="587" y="212" width="4" height="15" fill="rgb(244,227,54)"/><text x="590.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (24 samples, 7.25%)</title><rect x="512" y="180" width="86" height="15" fill="rgb(234,104,26)"/><text x="515.00" y="190.50">dispatch_o..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (10 samples, 3.02%)</title><rect x="562" y="196" width="36" height="15" fill="rgb(232,15,0)"/><text x="565.00" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.60%)</title><rect x="591" y="212" width="7" height="15" fill="rgb(222,195,2)"/><text x="594.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.91%)</title><rect x="598" y="180" width="10" height="15" fill="rgb(208,15,32)"/><text x="601.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (2 samples, 0.60%)</title><rect x="601" y="196" width="7" height="15" fill="rgb(251,208,50)"/><text x="604.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.30%)</title><rect x="612" y="196" width="4" height="15" fill="rgb(220,60,38)"/><text x="615.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.30%)</title><rect x="612" y="212" width="4" height="15" fill="rgb(236,157,12)"/><text x="615.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="612" y="228" width="4" height="15" fill="rgb(238,65,46)"/><text x="615.00" y="238.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.60%)</title><rect x="616" y="212" width="7" height="15" fill="rgb(229,2,54)"/><text x="619.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.30%)</title><rect x="619" y="228" width="4" height="15" fill="rgb(213,193,47)"/><text x="622.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.30%)</title><rect x="619" y="244" width="4" height="15" fill="rgb(241,156,26)"/><text x="622.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (7 samples, 2.11%)</title><rect x="608" y="180" width="25" height="15" fill="rgb(205,217,53)"/><text x="611.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (5 samples, 1.51%)</title><rect x="616" y="196" width="17" height="15" fill="rgb(253,89,18)"/><text x="619.00" y="206.50"></text></g><g><title>notify (threading.py:348) (3 samples, 0.91%)</title><rect x="623" y="212" width="10" height="15" fill="rgb(249,96,38)"/><text x="626.00" y="222.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.60%)</title><rect x="640" y="196" width="8" height="15" fill="rgb(239,207,28)"/><text x="643.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (2 samples, 0.60%)</title><rect x="640" y="212" width="8" height="15" fill="rgb(224,16,14)"/><text x="643.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 1.81%)</title><rect x="633" y="180" width="22" height="15" fill="rgb(241,221,5)"/><text x="636.00" y="190.50">d..</text></g><g><title>get (queue.py:181) (2 samples, 0.60%)</title><rect x="648" y="196" width="7" height="15" fill="rgb(234,205,22)"/><text x="651.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.60%)</title><rect x="648" y="212" width="7" height="15" fill="rgb(221,190,11)"/><text x="651.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.30%)</title><rect x="655" y="180" width="3" height="15" fill="rgb(212,152,30)"/><text x="658.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.30%)</title><rect x="662" y="196" width="3" height="15" fill="rgb(249,175,1)"/><text x="665.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.30%)</title><rect x="665" y="196" width="4" height="15" fill="rgb(251,124,26)"/><text x="668.00" y="206.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.30%)</title><rect x="665" y="212" width="4" height="15" fill="rgb(236,141,16)"/><text x="668.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.30%)</title><rect x="669" y="196" width="4" height="15" fill="rgb(240,134,41)"/><text x="672.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.30%)</title><rect x="673" y="196" width="3" height="15" fill="rgb(254,132,41)"/><text x="676.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.30%)</title><rect x="680" y="260" width="3" height="15" fill="rgb(229,62,54)"/><text x="683.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (5 samples, 1.51%)</title><rect x="676" y="244" width="18" height="15" fill="rgb(207,58,18)"/><text x="679.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (3 samples, 0.91%)</title><rect x="683" y="260" width="11" height="15" fill="rgb(220,175,45)"/><text x="686.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:479) (1 samples, 0.30%)</title><rect x="698" y="292" width="3" height="15" fill="rgb(221,193,4)"/><text x="701.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.30%)</title><rect x="701" y="292" width="4" height="15" fill="rgb(245,153,45)"/><text x="704.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.30%)</title><rect x="701" y="308" width="4" height="15" fill="rgb(210,229,47)"/><text x="704.00" y="318.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.30%)</title><rect x="701" y="324" width="4" height="15" fill="rgb(227,114,49)"/><text x="704.00" y="334.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.30%)</title><rect x="701" y="340" width="4" height="15" fill="rgb(220,187,39)"/><text x="704.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.91%)</title><rect x="705" y="308" width="10" height="15" fill="rgb(206,187,30)"/><text x="708.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.60%)</title><rect x="708" y="324" width="7" height="15" fill="rgb(254,204,22)"/><text x="711.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.30%)</title><rect x="715" y="308" width="4" height="15" fill="rgb(240,46,0)"/><text x="718.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.30%)</title><rect x="722" y="324" width="4" height="15" fill="rgb(227,216,33)"/><text x="725.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 3.02%)</title><rect x="726" y="324" width="36" height="15" fill="rgb(227,74,20)"/><text x="729.00" y="334.50">&lt;li..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.91%)</title><rect x="751" y="340" width="11" height="15" fill="rgb(214,138,3)"/><text x="754.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:906) (17 samples, 5.14%)</title><rect x="705" y="292" width="60" height="15" fill="rgb(233,66,21)"/><text x="708.00" y="302.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (13 samples, 3.93%)</title><rect x="719" y="308" width="46" height="15" fill="rgb(222,194,17)"/><text x="722.00" y="318.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.30%)</title><rect x="762" y="324" width="3" height="15" fill="rgb(234,97,43)"/><text x="765.00" y="334.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:907) (2 samples, 0.60%)</title><rect x="765" y="292" width="7" height="15" fill="rgb(218,119,7)"/><text x="768.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.30%)</title><rect x="769" y="308" width="3" height="15" fill="rgb(228,68,49)"/><text x="772.00" y="318.50"></text></g><g><title>0x7f76f600ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="772" y="324" width="4" height="15" fill="rgb(246,180,27)"/><text x="775.00" y="334.50"></text></g><g><title>0x7f76f5fffd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="772" y="340" width="4" height="15" fill="rgb(245,146,53)"/><text x="775.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.30%)</title><rect x="772" y="356" width="4" height="15" fill="rgb(236,23,36)"/><text x="775.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.30%)</title><rect x="772" y="372" width="4" height="15" fill="rgb(249,100,8)"/><text x="775.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:166) (1 samples, 0.30%)</title><rect x="772" y="388" width="4" height="15" fill="rgb(226,184,15)"/><text x="775.00" y="398.50"></text></g><g><title>0x7f76f600ff81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="776" y="324" width="4" height="15" fill="rgb(240,94,40)"/><text x="779.00" y="334.50"></text></g><g><title>0x7f76f601f2d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="780" y="340" width="3" height="15" fill="rgb(242,226,0)"/><text x="783.00" y="350.50"></text></g><g><title>0x7f76f601e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="783" y="356" width="4" height="15" fill="rgb(210,87,12)"/><text x="786.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.30%)</title><rect x="783" y="372" width="4" height="15" fill="rgb(222,123,39)"/><text x="786.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.30%)</title><rect x="783" y="388" width="4" height="15" fill="rgb(232,184,4)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.30%)</title><rect x="783" y="404" width="4" height="15" fill="rgb(210,128,37)"/><text x="786.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.30%)</title><rect x="783" y="420" width="4" height="15" fill="rgb(208,96,7)"/><text x="786.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.30%)</title><rect x="783" y="436" width="4" height="15" fill="rgb(218,196,10)"/><text x="786.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.30%)</title><rect x="787" y="436" width="3" height="15" fill="rgb(208,72,0)"/><text x="790.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:548) (1 samples, 0.30%)</title><rect x="787" y="452" width="3" height="15" fill="rgb(245,181,38)"/><text x="790.00" y="462.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.30%)</title><rect x="790" y="452" width="4" height="15" fill="rgb(238,135,53)"/><text x="793.00" y="462.50"></text></g><g><title>0x7f771c5db6a2 (libc-2.29.so) (2 samples, 0.60%)</title><rect x="794" y="468" width="7" height="15" fill="rgb(241,40,11)"/><text x="797.00" y="478.50"></text></g><g><title>0x7f76f6002d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="787" y="372" width="17" height="15" fill="rgb(239,74,26)"/><text x="790.00" y="382.50"></text></g><g><title>0x7f76f6002666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="787" y="388" width="17" height="15" fill="rgb(252,76,14)"/><text x="790.00" y="398.50"></text></g><g><title>0x7f76f5ff82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.51%)</title><rect x="787" y="404" width="17" height="15" fill="rgb(235,113,39)"/><text x="790.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (5 samples, 1.51%)</title><rect x="787" y="420" width="17" height="15" fill="rgb(226,128,21)"/><text x="790.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (4 samples, 1.21%)</title><rect x="790" y="436" width="14" height="15" fill="rgb(206,15,9)"/><text x="793.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (3 samples, 0.91%)</title><rect x="794" y="452" width="10" height="15" fill="rgb(222,21,29)"/><text x="797.00" y="462.50"></text></g><g><title>0x7f771c5db6d6 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="801" y="468" width="3" height="15" fill="rgb(237,77,30)"/><text x="804.00" y="478.50"></text></g><g><title>0x7f76f601e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.81%)</title><rect x="787" y="356" width="21" height="15" fill="rgb(229,202,14)"/><text x="790.00" y="366.50"></text></g><g><title>0x7f76f6002fc3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="804" y="372" width="4" height="15" fill="rgb(218,135,25)"/><text x="807.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.30%)</title><rect x="812" y="388" width="3" height="15" fill="rgb(235,104,33)"/><text x="815.00" y="398.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.60%)</title><rect x="812" y="372" width="7" height="15" fill="rgb(209,193,28)"/><text x="815.00" y="382.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.30%)</title><rect x="815" y="388" width="4" height="15" fill="rgb(241,170,36)"/><text x="818.00" y="398.50"></text></g><g><title>0x7f76f601e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.21%)</title><rect x="808" y="356" width="14" height="15" fill="rgb(223,63,34)"/><text x="811.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.30%)</title><rect x="819" y="372" width="3" height="15" fill="rgb(243,57,8)"/><text x="822.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.30%)</title><rect x="819" y="388" width="3" height="15" fill="rgb(210,90,5)"/><text x="822.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.30%)</title><rect x="819" y="404" width="3" height="15" fill="rgb(209,105,50)"/><text x="822.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.30%)</title><rect x="819" y="420" width="3" height="15" fill="rgb(253,192,25)"/><text x="822.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.30%)</title><rect x="819" y="436" width="3" height="15" fill="rgb(238,220,11)"/><text x="822.00" y="446.50"></text></g><g><title>0x7f771c5ed1ef (libc-2.29.so) (1 samples, 0.30%)</title><rect x="819" y="452" width="3" height="15" fill="rgb(230,199,46)"/><text x="822.00" y="462.50"></text></g><g><title>0x7f76f601e644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="822" y="356" width="4" height="15" fill="rgb(237,89,9)"/><text x="825.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="822" y="372" width="4" height="15" fill="rgb(224,25,20)"/><text x="825.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.30%)</title><rect x="826" y="404" width="3" height="15" fill="rgb(209,94,24)"/><text x="829.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.30%)</title><rect x="826" y="420" width="3" height="15" fill="rgb(241,174,9)"/><text x="829.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.30%)</title><rect x="826" y="436" width="3" height="15" fill="rgb(209,185,40)"/><text x="829.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.30%)</title><rect x="829" y="404" width="4" height="15" fill="rgb(247,131,5)"/><text x="832.00" y="414.50"></text></g><g><title>0x7f76f5ff6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.91%)</title><rect x="826" y="372" width="11" height="15" fill="rgb(205,79,22)"/><text x="829.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.91%)</title><rect x="826" y="388" width="11" height="15" fill="rgb(220,73,54)"/><text x="829.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.30%)</title><rect x="833" y="404" width="4" height="15" fill="rgb(222,135,18)"/><text x="836.00" y="414.50"></text></g><g><title>0x7f76f600ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 5.14%)</title><rect x="780" y="324" width="60" height="15" fill="rgb(227,193,53)"/><text x="783.00" y="334.50">0x7f76..</text></g><g><title>0x7f76f601f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.83%)</title><rect x="783" y="340" width="57" height="15" fill="rgb(221,67,49)"/><text x="786.00" y="350.50">0x7f76..</text></g><g><title>0x7f76f601ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.21%)</title><rect x="826" y="356" width="14" height="15" fill="rgb(244,193,42)"/><text x="829.00" y="366.50"></text></g><g><title>0x7f76f5ff6557 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="837" y="372" width="3" height="15" fill="rgb(216,22,20)"/><text x="840.00" y="382.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:629) (1 samples, 0.30%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(254,101,15)"/><text x="847.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.91%)</title><rect x="840" y="340" width="11" height="15" fill="rgb(234,60,29)"/><text x="843.00" y="350.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.30%)</title><rect x="847" y="356" width="4" height="15" fill="rgb(229,100,45)"/><text x="850.00" y="366.50"></text></g><g><title>0x7f771c6aad24 (libc-2.29.so) (1 samples, 0.30%)</title><rect x="847" y="372" width="4" height="15" fill="rgb(253,63,34)"/><text x="850.00" y="382.50"></text></g><g><title>0x7f76f601005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.21%)</title><rect x="840" y="324" width="14" height="15" fill="rgb(247,85,13)"/><text x="843.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.30%)</title><rect x="851" y="340" width="3" height="15" fill="rgb(232,151,47)"/><text x="854.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.30%)</title><rect x="851" y="356" width="3" height="15" fill="rgb(213,72,38)"/><text x="854.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.30%)</title><rect x="851" y="372" width="3" height="15" fill="rgb(252,113,36)"/><text x="854.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.30%)</title><rect x="851" y="388" width="3" height="15" fill="rgb(205,28,50)"/><text x="854.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.30%)</title><rect x="851" y="404" width="3" height="15" fill="rgb(242,101,16)"/><text x="854.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2149) (1 samples, 0.30%)</title><rect x="851" y="420" width="3" height="15" fill="rgb(248,92,8)"/><text x="854.00" y="430.50"></text></g><g><title>0x7f76f6010113 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="854" y="324" width="4" height="15" fill="rgb(208,226,31)"/><text x="857.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.30%)</title><rect x="858" y="340" width="4" height="15" fill="rgb(233,178,24)"/><text x="861.00" y="350.50"></text></g><g><title>0x7f76f60101bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.60%)</title><rect x="858" y="324" width="7" height="15" fill="rgb(246,228,23)"/><text x="861.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.30%)</title><rect x="862" y="340" width="3" height="15" fill="rgb(250,87,25)"/><text x="865.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:908) (27 samples, 8.16%)</title><rect x="772" y="292" width="97" height="15" fill="rgb(245,211,3)"/><text x="775.00" y="302.50">predict_pro..</text></g><g><title>0x7f76f6010d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 8.16%)</title><rect x="772" y="308" width="97" height="15" fill="rgb(230,127,0)"/><text x="775.00" y="318.50">0x7f76f6010..</text></g><g><title>0x7f76f6010328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="865" y="324" width="4" height="15" fill="rgb(250,206,37)"/><text x="868.00" y="334.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.30%)</title><rect x="865" y="340" width="4" height="15" fill="rgb(225,31,19)"/><text x="868.00" y="350.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:910) (2 samples, 0.60%)</title><rect x="869" y="292" width="7" height="15" fill="rgb(214,117,33)"/><text x="872.00" y="302.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:911) (1 samples, 0.30%)</title><rect x="876" y="292" width="3" height="15" fill="rgb(231,82,17)"/><text x="879.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.30%)</title><rect x="876" y="308" width="3" height="15" fill="rgb(231,31,49)"/><text x="879.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.30%)</title><rect x="876" y="324" width="3" height="15" fill="rgb(227,50,37)"/><text x="879.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3619) (1 samples, 0.30%)</title><rect x="919" y="388" width="3" height="15" fill="rgb(221,183,53)"/><text x="922.00" y="398.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.30%)</title><rect x="922" y="388" width="4" height="15" fill="rgb(242,34,19)"/><text x="925.00" y="398.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.30%)</title><rect x="922" y="404" width="4" height="15" fill="rgb(222,79,6)"/><text x="925.00" y="414.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.30%)</title><rect x="922" y="420" width="4" height="15" fill="rgb(238,46,50)"/><text x="925.00" y="430.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.30%)</title><rect x="922" y="436" width="4" height="15" fill="rgb(210,18,11)"/><text x="925.00" y="446.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.30%)</title><rect x="922" y="452" width="4" height="15" fill="rgb(234,140,7)"/><text x="925.00" y="462.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:46) (1 samples, 0.30%)</title><rect x="926" y="452" width="3" height="15" fill="rgb(209,69,26)"/><text x="929.00" y="462.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.60%)</title><rect x="926" y="404" width="7" height="15" fill="rgb(243,80,32)"/><text x="929.00" y="414.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.60%)</title><rect x="926" y="420" width="7" height="15" fill="rgb(236,104,54)"/><text x="929.00" y="430.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.60%)</title><rect x="926" y="436" width="7" height="15" fill="rgb(216,154,21)"/><text x="929.00" y="446.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.30%)</title><rect x="929" y="452" width="4" height="15" fill="rgb(211,168,16)"/><text x="932.00" y="462.50"></text></g><g><title>_aligned_cast_longlong_to_double (lowlevel_strided_loops.c.src:873) (1 samples, 0.30%)</title><rect x="929" y="468" width="4" height="15" fill="rgb(248,79,17)"/><text x="932.00" y="478.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.30%)</title><rect x="933" y="420" width="3" height="15" fill="rgb(254,105,25)"/><text x="936.00" y="430.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.30%)</title><rect x="933" y="436" width="3" height="15" fill="rgb(241,4,2)"/><text x="936.00" y="446.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:947) (1 samples, 0.30%)</title><rect x="933" y="452" width="3" height="15" fill="rgb(247,141,44)"/><text x="936.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.30%)</title><rect x="936" y="420" width="4" height="15" fill="rgb(208,45,32)"/><text x="939.00" y="430.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1442) (1 samples, 0.30%)</title><rect x="936" y="436" width="4" height="15" fill="rgb(214,206,10)"/><text x="939.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.91%)</title><rect x="933" y="404" width="11" height="15" fill="rgb(238,30,3)"/><text x="936.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="940" y="420" width="4" height="15" fill="rgb(245,81,35)"/><text x="943.00" y="430.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2711) (1 samples, 0.30%)</title><rect x="940" y="436" width="4" height="15" fill="rgb(209,7,32)"/><text x="943.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.30%)</title><rect x="944" y="404" width="3" height="15" fill="rgb(214,57,51)"/><text x="947.00" y="414.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.30%)</title><rect x="944" y="420" width="3" height="15" fill="rgb(220,206,23)"/><text x="947.00" y="430.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.30%)</title><rect x="944" y="436" width="3" height="15" fill="rgb(209,93,10)"/><text x="947.00" y="446.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.30%)</title><rect x="944" y="452" width="3" height="15" fill="rgb(213,36,50)"/><text x="947.00" y="462.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (13 samples, 3.93%)</title><rect x="904" y="324" width="47" height="15" fill="rgb(213,69,19)"/><text x="907.00" y="334.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (12 samples, 3.63%)</title><rect x="908" y="340" width="43" height="15" fill="rgb(233,98,6)"/><text x="911.00" y="350.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 2.72%)</title><rect x="919" y="356" width="32" height="15" fill="rgb(246,70,0)"/><text x="922.00" y="366.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 2.72%)</title><rect x="919" y="372" width="32" height="15" fill="rgb(247,62,22)"/><text x="922.00" y="382.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (7 samples, 2.11%)</title><rect x="926" y="388" width="25" height="15" fill="rgb(233,28,4)"/><text x="929.00" y="398.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.30%)</title><rect x="947" y="404" width="4" height="15" fill="rgb(229,97,54)"/><text x="950.00" y="414.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.30%)</title><rect x="947" y="420" width="4" height="15" fill="rgb(230,88,49)"/><text x="950.00" y="430.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:912) (21 samples, 6.34%)</title><rect x="879" y="292" width="75" height="15" fill="rgb(244,191,52)"/><text x="882.00" y="302.50">predict_..</text></g><g><title>array_sum (methods.c:2215) (14 samples, 4.23%)</title><rect x="904" y="308" width="50" height="15" fill="rgb(211,150,6)"/><text x="907.00" y="318.50">array..</text></g><g><title>forward_ndarray_method (methods.c:95) (1 samples, 0.30%)</title><rect x="951" y="324" width="3" height="15" fill="rgb(237,116,9)"/><text x="954.00" y="334.50"></text></g><g><title>array_assign_subscript (mapping.c:1859) (1 samples, 0.30%)</title><rect x="954" y="308" width="4" height="15" fill="rgb(210,182,33)"/><text x="957.00" y="318.50"></text></g><g><title>array_assign_boolean_subscript (mapping.c:1305) (1 samples, 0.30%)</title><rect x="954" y="324" width="4" height="15" fill="rgb(252,127,29)"/><text x="957.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.30%)</title><rect x="958" y="324" width="3" height="15" fill="rgb(219,195,22)"/><text x="961.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.30%)</title><rect x="958" y="340" width="3" height="15" fill="rgb(221,183,50)"/><text x="961.00" y="350.50"></text></g><g><title>get_array_ufunc_overrides (override.c:35) (1 samples, 0.30%)</title><rect x="958" y="356" width="3" height="15" fill="rgb(219,206,28)"/><text x="961.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="961" y="340" width="4" height="15" fill="rgb(215,15,1)"/><text x="964.00" y="350.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.30%)</title><rect x="961" y="356" width="4" height="15" fill="rgb(226,102,29)"/><text x="964.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.30%)</title><rect x="965" y="372" width="3" height="15" fill="rgb(219,125,22)"/><text x="968.00" y="382.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.30%)</title><rect x="965" y="388" width="3" height="15" fill="rgb(228,31,7)"/><text x="968.00" y="398.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1630) (1 samples, 0.30%)</title><rect x="965" y="404" width="3" height="15" fill="rgb(222,180,10)"/><text x="968.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1902) (1 samples, 0.30%)</title><rect x="968" y="372" width="4" height="15" fill="rgb(245,188,36)"/><text x="971.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (3 samples, 0.91%)</title><rect x="965" y="340" width="11" height="15" fill="rgb(232,68,46)"/><text x="968.00" y="350.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:363) (3 samples, 0.91%)</title><rect x="965" y="356" width="11" height="15" fill="rgb(209,98,9)"/><text x="968.00" y="366.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.30%)</title><rect x="972" y="372" width="4" height="15" fill="rgb(211,209,25)"/><text x="975.00" y="382.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.30%)</title><rect x="972" y="388" width="4" height="15" fill="rgb(212,111,21)"/><text x="975.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.30%)</title><rect x="972" y="404" width="4" height="15" fill="rgb(249,74,19)"/><text x="975.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.51%)</title><rect x="961" y="324" width="18" height="15" fill="rgb(227,3,12)"/><text x="964.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.30%)</title><rect x="976" y="340" width="3" height="15" fill="rgb(219,50,5)"/><text x="979.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.30%)</title><rect x="976" y="356" width="3" height="15" fill="rgb(225,57,40)"/><text x="979.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.30%)</title><rect x="976" y="372" width="3" height="15" fill="rgb(235,46,34)"/><text x="979.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.30%)</title><rect x="976" y="388" width="3" height="15" fill="rgb(240,18,17)"/><text x="979.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.30%)</title><rect x="976" y="404" width="3" height="15" fill="rgb(249,29,15)"/><text x="979.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.30%)</title><rect x="976" y="420" width="3" height="15" fill="rgb(217,125,0)"/><text x="979.00" y="430.50"></text></g><g><title>0x7f771b7ee710 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="976" y="436" width="3" height="15" fill="rgb(215,199,41)"/><text x="979.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.30%)</title><rect x="979" y="324" width="4" height="15" fill="rgb(253,31,14)"/><text x="982.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="979" y="340" width="4" height="15" fill="rgb(248,47,54)"/><text x="982.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="979" y="356" width="4" height="15" fill="rgb(234,154,35)"/><text x="982.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.30%)</title><rect x="979" y="372" width="4" height="15" fill="rgb(228,70,40)"/><text x="982.00" y="382.50"></text></g><g><title>predict_proba (sklearn/tree/_classes.py:913) (9 samples, 2.72%)</title><rect x="954" y="292" width="32" height="15" fill="rgb(222,90,38)"/><text x="957.00" y="302.50">pr..</text></g><g><title>array_richcompare (arrayobject.c:1445) (8 samples, 2.42%)</title><rect x="958" y="308" width="28" height="15" fill="rgb(231,107,28)"/><text x="961.00" y="318.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4757) (1 samples, 0.30%)</title><rect x="983" y="324" width="3" height="15" fill="rgb(238,184,6)"/><text x="986.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.30%)</title><rect x="986" y="324" width="4" height="15" fill="rgb(245,208,53)"/><text x="989.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2021) (1 samples, 0.30%)</title><rect x="986" y="340" width="4" height="15" fill="rgb(220,173,44)"/><text x="989.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1471) (1 samples, 0.30%)</title><rect x="990" y="356" width="3" height="15" fill="rgb(233,121,34)"/><text x="993.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.30%)</title><rect x="993" y="372" width="4" height="15" fill="rgb(254,114,32)"/><text x="996.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.30%)</title><rect x="993" y="388" width="4" height="15" fill="rgb(252,54,53)"/><text x="996.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:235) (1 samples, 0.30%)</title><rect x="997" y="372" width="4" height="15" fill="rgb(238,179,26)"/><text x="1000.00" y="382.50"></text></g><g><title>0x7f771c5ed14a (libc-2.29.so) (1 samples, 0.30%)</title><rect x="997" y="388" width="4" height="15" fill="rgb(246,65,18)"/><text x="1000.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.30%)</title><rect x="1001" y="372" width="3" height="15" fill="rgb(233,67,16)"/><text x="1004.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.21%)</title><rect x="993" y="356" width="15" height="15" fill="rgb(247,21,12)"/><text x="996.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.30%)</title><rect x="1004" y="372" width="4" height="15" fill="rgb(230,196,33)"/><text x="1007.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.30%)</title><rect x="1004" y="388" width="4" height="15" fill="rgb(208,141,5)"/><text x="1007.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:767) (1 samples, 0.30%)</title><rect x="1004" y="404" width="4" height="15" fill="rgb(223,74,5)"/><text x="1007.00" y="414.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.30%)</title><rect x="1004" y="420" width="4" height="15" fill="rgb(241,54,44)"/><text x="1007.00" y="430.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:676) (1 samples, 0.30%)</title><rect x="1004" y="436" width="4" height="15" fill="rgb(217,167,40)"/><text x="1007.00" y="446.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.30%)</title><rect x="1008" y="388" width="3" height="15" fill="rgb(213,138,42)"/><text x="1011.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 2.11%)</title><rect x="990" y="324" width="25" height="15" fill="rgb(217,92,22)"/><text x="993.00" y="334.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 2.11%)</title><rect x="990" y="340" width="25" height="15" fill="rgb(222,112,31)"/><text x="993.00" y="350.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.60%)</title><rect x="1008" y="356" width="7" height="15" fill="rgb(246,158,46)"/><text x="1011.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (2 samples, 0.60%)</title><rect x="1008" y="372" width="7" height="15" fill="rgb(206,145,24)"/><text x="1011.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2176) (1 samples, 0.30%)</title><rect x="1011" y="388" width="4" height="15" fill="rgb(213,18,47)"/><text x="1014.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (90 samples, 27.19%)</title><rect x="698" y="276" width="320" height="15" fill="rgb(218,88,36)"/><text x="701.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_f..</text></g><g><title>predict_proba (sklearn/tree/_classes.py:914) (9 samples, 2.72%)</title><rect x="986" y="292" width="32" height="15" fill="rgb(224,84,30)"/><text x="989.00" y="302.50">pr..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.72%)</title><rect x="986" y="308" width="32" height="15" fill="rgb(253,40,45)"/><text x="989.00" y="318.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.30%)</title><rect x="1015" y="324" width="3" height="15" fill="rgb(231,149,31)"/><text x="1018.00" y="334.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.30%)</title><rect x="1015" y="340" width="3" height="15" fill="rgb(245,34,53)"/><text x="1018.00" y="350.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.30%)</title><rect x="1015" y="356" width="3" height="15" fill="rgb(239,108,44)"/><text x="1018.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.30%)</title><rect x="1018" y="276" width="4" height="15" fill="rgb(247,144,18)"/><text x="1021.00" y="286.50"></text></g><g><title>array_inplace_add (number.c:711) (1 samples, 0.30%)</title><rect x="1026" y="292" width="3" height="15" fill="rgb(209,178,52)"/><text x="1029.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.30%)</title><rect x="1029" y="308" width="4" height="15" fill="rgb(210,133,7)"/><text x="1032.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.30%)</title><rect x="1029" y="324" width="4" height="15" fill="rgb(231,187,52)"/><text x="1032.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.30%)</title><rect x="1029" y="340" width="4" height="15" fill="rgb(246,101,19)"/><text x="1032.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.30%)</title><rect x="1033" y="356" width="3" height="15" fill="rgb(247,125,12)"/><text x="1036.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:596) (1 samples, 0.30%)</title><rect x="1033" y="372" width="3" height="15" fill="rgb(208,0,18)"/><text x="1036.00" y="382.50"></text></g><g><title>solve_diophantine (mem_overlap.c:513) (1 samples, 0.30%)</title><rect x="1036" y="372" width="4" height="15" fill="rgb(251,201,28)"/><text x="1039.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.91%)</title><rect x="1033" y="308" width="10" height="15" fill="rgb(245,41,31)"/><text x="1036.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.91%)</title><rect x="1033" y="324" width="10" height="15" fill="rgb(215,89,25)"/><text x="1036.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.91%)</title><rect x="1033" y="340" width="10" height="15" fill="rgb(239,175,27)"/><text x="1036.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.60%)</title><rect x="1036" y="356" width="7" height="15" fill="rgb(205,216,34)"/><text x="1039.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.30%)</title><rect x="1040" y="372" width="3" height="15" fill="rgb(233,90,8)"/><text x="1043.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.30%)</title><rect x="1040" y="388" width="3" height="15" fill="rgb(221,205,36)"/><text x="1043.00" y="398.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.30%)</title><rect x="1040" y="404" width="3" height="15" fill="rgb(240,57,15)"/><text x="1043.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.30%)</title><rect x="1040" y="420" width="3" height="15" fill="rgb(254,96,34)"/><text x="1043.00" y="430.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (7 samples, 2.11%)</title><rect x="1022" y="276" width="25" height="15" fill="rgb(213,133,36)"/><text x="1025.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.51%)</title><rect x="1029" y="292" width="18" height="15" fill="rgb(220,126,53)"/><text x="1032.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.30%)</title><rect x="1043" y="308" width="4" height="15" fill="rgb(239,24,49)"/><text x="1046.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="1047" y="276" width="3" height="15" fill="rgb(209,39,43)"/><text x="1050.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="1047" y="292" width="3" height="15" fill="rgb(239,1,42)"/><text x="1050.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="1047" y="308" width="3" height="15" fill="rgb(207,181,37)"/><text x="1050.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (101 samples, 30.51%)</title><rect x="694" y="260" width="360" height="15" fill="rgb(214,59,36)"/><text x="697.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.30%)</title><rect x="1050" y="276" width="4" height="15" fill="rgb(226,74,35)"/><text x="1053.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.30%)</title><rect x="1050" y="292" width="4" height="15" fill="rgb(214,42,11)"/><text x="1053.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.30%)</title><rect x="1050" y="308" width="4" height="15" fill="rgb(209,73,50)"/><text x="1053.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.30%)</title><rect x="1050" y="324" width="4" height="15" fill="rgb(207,131,28)"/><text x="1053.00" y="334.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (108 samples, 32.63%)</title><rect x="676" y="212" width="385" height="15" fill="rgb(232,100,20)"/><text x="679.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (108 samples, 32.63%)</title><rect x="676" y="228" width="385" height="15" fill="rgb(222,44,35)"/><text x="679.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (103 samples, 31.12%)</title><rect x="694" y="244" width="367" height="15" fill="rgb(230,119,42)"/><text x="697.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (2 samples, 0.60%)</title><rect x="1054" y="260" width="7" height="15" fill="rgb(253,196,6)"/><text x="1057.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.30%)</title><rect x="1065" y="228" width="3" height="15" fill="rgb(225,83,19)"/><text x="1068.00" y="238.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.30%)</title><rect x="1065" y="244" width="3" height="15" fill="rgb(250,148,42)"/><text x="1068.00" y="254.50"></text></g><g><title>0x7ffc7199faf9 ([vdso]) (1 samples, 0.30%)</title><rect x="1065" y="260" width="3" height="15" fill="rgb(241,212,47)"/><text x="1068.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (2 samples, 0.60%)</title><rect x="1068" y="228" width="7" height="15" fill="rgb(216,106,12)"/><text x="1071.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.30%)</title><rect x="1072" y="244" width="3" height="15" fill="rgb(230,164,20)"/><text x="1075.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1072" y="260" width="3" height="15" fill="rgb(248,14,26)"/><text x="1075.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (113 samples, 34.14%)</title><rect x="676" y="196" width="403" height="15" fill="rgb(207,147,0)"/><text x="679.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (5 samples, 1.51%)</title><rect x="1061" y="212" width="18" height="15" fill="rgb(242,59,20)"/><text x="1064.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.30%)</title><rect x="1075" y="228" width="4" height="15" fill="rgb(246,159,43)"/><text x="1078.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (189 samples, 57.10%)</title><rect x="412" y="164" width="674" height="15" fill="rgb(254,14,18)"/><text x="415.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (120 samples, 36.25%)</title><rect x="658" y="180" width="428" height="15" fill="rgb(233,98,36)"/><text x="661.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.60%)</title><rect x="1079" y="196" width="7" height="15" fill="rgb(250,125,13)"/><text x="1082.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:38) (301 samples, 90.94%)</title><rect x="17" y="52" width="1073" height="15" fill="rgb(236,177,1)"/><text x="20.00" y="62.50">&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:38)</text></g><g><title>profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37) (301 samples, 90.94%)</title><rect x="17" y="68" width="1073" height="15" fill="rgb(249,129,53)"/><text x="20.00" y="78.50">profile_skl (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:37)</text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (300 samples, 90.63%)</title><rect x="20" y="84" width="1070" height="15" fill="rgb(231,90,54)"/><text x="23.00" y="94.50">setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29)</text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (194 samples, 58.61%)</title><rect x="398" y="100" width="692" height="15" fill="rgb(234,160,53)"/><text x="401.00" y="110.50">profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (194 samples, 58.61%)</title><rect x="398" y="116" width="692" height="15" fill="rgb(223,71,51)"/><text x="401.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (194 samples, 58.61%)</title><rect x="398" y="132" width="692" height="15" fill="rgb(221,224,49)"/><text x="401.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/ensemble/_forest.py:669) (192 samples, 58.01%)</title><rect x="405" y="148" width="685" height="15" fill="rgb(243,188,15)"/><text x="408.00" y="158.50">predict_proba (sklearn/ensemble/_forest.py:669)</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.30%)</title><rect x="1086" y="164" width="4" height="15" fill="rgb(252,61,23)"/><text x="1089.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.30%)</title><rect x="1086" y="180" width="4" height="15" fill="rgb(206,122,47)"/><text x="1089.00" y="190.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.30%)</title><rect x="1090" y="244" width="3" height="15" fill="rgb(243,216,48)"/><text x="1093.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1090" y="260" width="3" height="15" fill="rgb(221,98,32)"/><text x="1093.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1090" y="276" width="3" height="15" fill="rgb(210,216,29)"/><text x="1093.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1090" y="292" width="3" height="15" fill="rgb(217,54,17)"/><text x="1093.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1090" y="308" width="3" height="15" fill="rgb(209,143,16)"/><text x="1093.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1090" y="324" width="3" height="15" fill="rgb(208,76,11)"/><text x="1093.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1090" y="340" width="3" height="15" fill="rgb(238,129,14)"/><text x="1093.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1090" y="356" width="3" height="15" fill="rgb(211,32,21)"/><text x="1093.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:86) (1 samples, 0.30%)</title><rect x="1090" y="372" width="3" height="15" fill="rgb(206,121,9)"/><text x="1093.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1090" y="388" width="3" height="15" fill="rgb(217,181,14)"/><text x="1093.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1090" y="404" width="3" height="15" fill="rgb(245,7,15)"/><text x="1093.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1090" y="420" width="3" height="15" fill="rgb(241,200,9)"/><text x="1093.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1090" y="436" width="3" height="15" fill="rgb(211,112,37)"/><text x="1093.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1090" y="452" width="3" height="15" fill="rgb(209,98,52)"/><text x="1093.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1090" y="468" width="3" height="15" fill="rgb(234,29,1)"/><text x="1093.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1090" y="484" width="3" height="15" fill="rgb(246,128,12)"/><text x="1093.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/shape_base.py:357) (1 samples, 0.30%)</title><rect x="1090" y="500" width="3" height="15" fill="rgb(224,137,23)"/><text x="1093.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:172) (1 samples, 0.30%)</title><rect x="1090" y="516" width="3" height="15" fill="rgb(234,221,0)"/><text x="1093.00" y="526.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.30%)</title><rect x="1090" y="532" width="3" height="15" fill="rgb(240,96,46)"/><text x="1093.00" y="542.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.30%)</title><rect x="1090" y="548" width="3" height="15" fill="rgb(240,227,46)"/><text x="1093.00" y="558.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.30%)</title><rect x="1090" y="564" width="3" height="15" fill="rgb(230,32,26)"/><text x="1093.00" y="574.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.30%)</title><rect x="1090" y="580" width="3" height="15" fill="rgb(234,40,23)"/><text x="1093.00" y="590.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.30%)</title><rect x="1090" y="596" width="3" height="15" fill="rgb(224,221,22)"/><text x="1093.00" y="606.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:1) (2 samples, 0.60%)</title><rect x="1090" y="148" width="7" height="15" fill="rgb(243,107,30)"/><text x="1093.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1090" y="164" width="7" height="15" fill="rgb(230,224,9)"/><text x="1093.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1090" y="180" width="7" height="15" fill="rgb(208,139,40)"/><text x="1093.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1090" y="196" width="7" height="15" fill="rgb(239,151,49)"/><text x="1093.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1090" y="212" width="7" height="15" fill="rgb(216,121,14)"/><text x="1093.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1090" y="228" width="7" height="15" fill="rgb(205,229,50)"/><text x="1093.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.30%)</title><rect x="1093" y="244" width="4" height="15" fill="rgb(235,13,29)"/><text x="1096.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1093" y="260" width="4" height="15" fill="rgb(233,154,23)"/><text x="1096.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1093" y="276" width="4" height="15" fill="rgb(220,176,46)"/><text x="1096.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1093" y="292" width="4" height="15" fill="rgb(244,151,0)"/><text x="1096.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1093" y="308" width="4" height="15" fill="rgb(247,194,10)"/><text x="1096.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1093" y="324" width="4" height="15" fill="rgb(211,182,49)"/><text x="1096.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1093" y="340" width="4" height="15" fill="rgb(232,15,26)"/><text x="1096.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1093" y="356" width="4" height="15" fill="rgb(240,189,53)"/><text x="1096.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.30%)</title><rect x="1093" y="372" width="4" height="15" fill="rgb(218,214,3)"/><text x="1096.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1093" y="388" width="4" height="15" fill="rgb(219,137,4)"/><text x="1096.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1093" y="404" width="4" height="15" fill="rgb(225,186,11)"/><text x="1096.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1093" y="420" width="4" height="15" fill="rgb(253,55,24)"/><text x="1096.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1093" y="436" width="4" height="15" fill="rgb(218,102,32)"/><text x="1096.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1093" y="452" width="4" height="15" fill="rgb(219,101,47)"/><text x="1096.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.30%)</title><rect x="1093" y="468" width="4" height="15" fill="rgb(232,92,25)"/><text x="1096.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1093" y="484" width="4" height="15" fill="rgb(209,176,36)"/><text x="1096.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1093" y="500" width="4" height="15" fill="rgb(230,68,10)"/><text x="1096.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1093" y="516" width="4" height="15" fill="rgb(231,140,11)"/><text x="1096.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1093" y="532" width="4" height="15" fill="rgb(238,229,34)"/><text x="1096.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1093" y="548" width="4" height="15" fill="rgb(230,105,6)"/><text x="1096.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:3330) (1 samples, 0.30%)</title><rect x="1093" y="564" width="4" height="15" fill="rgb(227,165,26)"/><text x="1096.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.30%)</title><rect x="1093" y="580" width="4" height="15" fill="rgb(208,132,40)"/><text x="1096.00" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="1097" y="772" width="3" height="15" fill="rgb(224,4,40)"/><text x="1100.00" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.30%)</title><rect x="1097" y="788" width="3" height="15" fill="rgb(211,162,38)"/><text x="1100.00" y="798.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:556) (1 samples, 0.30%)</title><rect x="1097" y="804" width="3" height="15" fill="rgb(217,64,29)"/><text x="1100.00" y="814.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.30%)</title><rect x="1100" y="852" width="4" height="15" fill="rgb(224,77,36)"/><text x="1103.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.30%)</title><rect x="1100" y="868" width="4" height="15" fill="rgb(206,5,50)"/><text x="1103.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.30%)</title><rect x="1100" y="884" width="4" height="15" fill="rgb(215,85,43)"/><text x="1103.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.30%)</title><rect x="1100" y="900" width="4" height="15" fill="rgb(222,208,53)"/><text x="1103.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.30%)</title><rect x="1100" y="916" width="4" height="15" fill="rgb(206,135,14)"/><text x="1103.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.30%)</title><rect x="1100" y="932" width="4" height="15" fill="rgb(242,91,6)"/><text x="1103.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.30%)</title><rect x="1100" y="948" width="4" height="15" fill="rgb(233,199,24)"/><text x="1103.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.30%)</title><rect x="1100" y="964" width="4" height="15" fill="rgb(224,133,33)"/><text x="1103.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.30%)</title><rect x="1100" y="980" width="4" height="15" fill="rgb(230,141,42)"/><text x="1103.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.30%)</title><rect x="1100" y="996" width="4" height="15" fill="rgb(215,103,10)"/><text x="1103.00" y="1006.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.30%)</title><rect x="1104" y="916" width="4" height="15" fill="rgb(218,12,3)"/><text x="1107.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.30%)</title><rect x="1104" y="932" width="4" height="15" fill="rgb(217,36,44)"/><text x="1107.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.30%)</title><rect x="1104" y="948" width="4" height="15" fill="rgb(229,71,54)"/><text x="1107.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.91%)</title><rect x="1100" y="820" width="11" height="15" fill="rgb(239,29,51)"/><text x="1103.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.91%)</title><rect x="1100" y="836" width="11" height="15" fill="rgb(225,45,0)"/><text x="1103.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="1104" y="852" width="7" height="15" fill="rgb(245,160,48)"/><text x="1107.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.60%)</title><rect x="1104" y="868" width="7" height="15" fill="rgb(205,164,40)"/><text x="1107.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.60%)</title><rect x="1104" y="884" width="7" height="15" fill="rgb(226,164,38)"/><text x="1107.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.60%)</title><rect x="1104" y="900" width="7" height="15" fill="rgb(239,112,32)"/><text x="1107.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.30%)</title><rect x="1108" y="916" width="3" height="15" fill="rgb(229,47,34)"/><text x="1111.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.30%)</title><rect x="1108" y="932" width="3" height="15" fill="rgb(233,43,20)"/><text x="1111.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.30%)</title><rect x="1108" y="948" width="3" height="15" fill="rgb(228,70,0)"/><text x="1111.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1398) (1 samples, 0.30%)</title><rect x="1108" y="964" width="3" height="15" fill="rgb(239,115,2)"/><text x="1111.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.30%)</title><rect x="1108" y="980" width="3" height="15" fill="rgb(239,17,26)"/><text x="1111.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:2) (5 samples, 1.51%)</title><rect x="1097" y="148" width="18" height="15" fill="rgb(245,106,16)"/><text x="1100.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="164" width="18" height="15" fill="rgb(228,157,46)"/><text x="1100.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.51%)</title><rect x="1097" y="180" width="18" height="15" fill="rgb(241,54,15)"/><text x="1100.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="196" width="18" height="15" fill="rgb(245,114,5)"/><text x="1100.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="212" width="18" height="15" fill="rgb(237,65,13)"/><text x="1100.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="228" width="18" height="15" fill="rgb(228,172,49)"/><text x="1100.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1097" y="244" width="18" height="15" fill="rgb(215,168,24)"/><text x="1100.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1097" y="260" width="18" height="15" fill="rgb(212,64,21)"/><text x="1100.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="276" width="18" height="15" fill="rgb(210,223,49)"/><text x="1100.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.51%)</title><rect x="1097" y="292" width="18" height="15" fill="rgb(207,23,16)"/><text x="1100.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="308" width="18" height="15" fill="rgb(251,124,6)"/><text x="1100.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="324" width="18" height="15" fill="rgb(215,27,26)"/><text x="1100.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1097" y="340" width="18" height="15" fill="rgb(205,79,52)"/><text x="1100.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1097" y="356" width="18" height="15" fill="rgb(244,134,51)"/><text x="1100.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="372" width="18" height="15" fill="rgb(252,174,23)"/><text x="1100.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.51%)</title><rect x="1097" y="388" width="18" height="15" fill="rgb(241,50,50)"/><text x="1100.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="404" width="18" height="15" fill="rgb(221,217,22)"/><text x="1100.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="420" width="18" height="15" fill="rgb(216,14,7)"/><text x="1100.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1097" y="436" width="18" height="15" fill="rgb(248,33,26)"/><text x="1100.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1097" y="452" width="18" height="15" fill="rgb(238,169,4)"/><text x="1100.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="468" width="18" height="15" fill="rgb(237,192,5)"/><text x="1100.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.51%)</title><rect x="1097" y="484" width="18" height="15" fill="rgb(209,118,26)"/><text x="1100.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="500" width="18" height="15" fill="rgb(215,51,45)"/><text x="1100.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="516" width="18" height="15" fill="rgb(245,215,37)"/><text x="1100.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1097" y="532" width="18" height="15" fill="rgb(235,224,16)"/><text x="1100.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1097" y="548" width="18" height="15" fill="rgb(226,70,20)"/><text x="1100.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="564" width="18" height="15" fill="rgb(239,36,23)"/><text x="1100.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.51%)</title><rect x="1097" y="580" width="18" height="15" fill="rgb(235,129,9)"/><text x="1100.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="596" width="18" height="15" fill="rgb(237,193,1)"/><text x="1100.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.51%)</title><rect x="1097" y="612" width="18" height="15" fill="rgb(205,138,0)"/><text x="1100.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="628" width="18" height="15" fill="rgb(212,5,49)"/><text x="1100.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="644" width="18" height="15" fill="rgb(207,176,12)"/><text x="1100.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="660" width="18" height="15" fill="rgb(250,25,18)"/><text x="1100.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1097" y="676" width="18" height="15" fill="rgb(245,42,49)"/><text x="1100.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1097" y="692" width="18" height="15" fill="rgb(243,178,22)"/><text x="1100.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1097" y="708" width="18" height="15" fill="rgb(207,42,53)"/><text x="1100.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.51%)</title><rect x="1097" y="724" width="18" height="15" fill="rgb(240,220,44)"/><text x="1100.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1097" y="740" width="18" height="15" fill="rgb(212,51,6)"/><text x="1100.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1097" y="756" width="18" height="15" fill="rgb(254,123,53)"/><text x="1100.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.21%)</title><rect x="1100" y="772" width="15" height="15" fill="rgb(218,26,5)"/><text x="1103.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.21%)</title><rect x="1100" y="788" width="15" height="15" fill="rgb(225,80,23)"/><text x="1103.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.21%)</title><rect x="1100" y="804" width="15" height="15" fill="rgb(227,98,13)"/><text x="1103.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:35) (1 samples, 0.30%)</title><rect x="1111" y="820" width="4" height="15" fill="rgb(219,206,10)"/><text x="1114.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1111" y="836" width="4" height="15" fill="rgb(231,189,10)"/><text x="1114.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1111" y="852" width="4" height="15" fill="rgb(232,152,12)"/><text x="1114.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1111" y="868" width="4" height="15" fill="rgb(236,10,2)"/><text x="1114.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1111" y="884" width="4" height="15" fill="rgb(217,43,28)"/><text x="1114.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1111" y="900" width="4" height="15" fill="rgb(241,49,0)"/><text x="1114.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py:65) (1 samples, 0.30%)</title><rect x="1111" y="916" width="4" height="15" fill="rgb(246,180,28)"/><text x="1114.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1111" y="932" width="4" height="15" fill="rgb(205,98,2)"/><text x="1114.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="1111" y="948" width="4" height="15" fill="rgb(211,3,34)"/><text x="1114.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1111" y="964" width="4" height="15" fill="rgb(247,65,32)"/><text x="1114.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1111" y="980" width="4" height="15" fill="rgb(219,200,51)"/><text x="1114.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.30%)</title><rect x="1111" y="996" width="4" height="15" fill="rgb(246,19,50)"/><text x="1114.00" y="1006.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.30%)</title><rect x="1111" y="1012" width="4" height="15" fill="rgb(250,33,51)"/><text x="1114.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.30%)</title><rect x="1111" y="1028" width="4" height="15" fill="rgb(245,155,46)"/><text x="1114.00" y="1038.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.30%)</title><rect x="1111" y="1044" width="4" height="15" fill="rgb(243,39,17)"/><text x="1114.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.30%)</title><rect x="1111" y="1060" width="4" height="15" fill="rgb(234,190,1)"/><text x="1114.00" y="1070.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.30%)</title><rect x="1111" y="1076" width="4" height="15" fill="rgb(247,116,22)"/><text x="1114.00" y="1086.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.30%)</title><rect x="1111" y="1092" width="4" height="15" fill="rgb(250,131,11)"/><text x="1114.00" y="1102.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.30%)</title><rect x="1111" y="1108" width="4" height="15" fill="rgb(211,124,31)"/><text x="1114.00" y="1118.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.30%)</title><rect x="1111" y="1124" width="4" height="15" fill="rgb(214,100,48)"/><text x="1114.00" y="1134.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.30%)</title><rect x="1111" y="1140" width="4" height="15" fill="rgb(211,11,16)"/><text x="1114.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="1115" y="724" width="3" height="15" fill="rgb(249,182,32)"/><text x="1118.00" y="734.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.30%)</title><rect x="1115" y="740" width="3" height="15" fill="rgb(231,163,5)"/><text x="1118.00" y="750.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.30%)</title><rect x="1118" y="772" width="4" height="15" fill="rgb(226,112,48)"/><text x="1121.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1118" y="788" width="4" height="15" fill="rgb(254,199,48)"/><text x="1121.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1118" y="804" width="4" height="15" fill="rgb(227,175,18)"/><text x="1121.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1118" y="820" width="4" height="15" fill="rgb(250,119,16)"/><text x="1121.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1118" y="836" width="4" height="15" fill="rgb(253,88,54)"/><text x="1121.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1118" y="852" width="4" height="15" fill="rgb(224,100,13)"/><text x="1121.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1118" y="868" width="4" height="15" fill="rgb(236,6,1)"/><text x="1121.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1118" y="884" width="4" height="15" fill="rgb(251,124,17)"/><text x="1121.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.30%)</title><rect x="1118" y="900" width="4" height="15" fill="rgb(234,183,17)"/><text x="1121.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1118" y="916" width="4" height="15" fill="rgb(239,107,31)"/><text x="1121.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1118" y="932" width="4" height="15" fill="rgb(223,62,46)"/><text x="1121.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1118" y="948" width="4" height="15" fill="rgb(245,229,25)"/><text x="1121.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1118" y="964" width="4" height="15" fill="rgb(254,174,34)"/><text x="1121.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1118" y="980" width="4" height="15" fill="rgb(253,21,11)"/><text x="1121.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1118" y="996" width="4" height="15" fill="rgb(239,61,11)"/><text x="1121.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1118" y="1012" width="4" height="15" fill="rgb(245,196,37)"/><text x="1121.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1533) (1 samples, 0.30%)</title><rect x="1118" y="1028" width="4" height="15" fill="rgb(212,38,29)"/><text x="1121.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.30%)</title><rect x="1118" y="1044" width="4" height="15" fill="rgb(227,64,53)"/><text x="1121.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.30%)</title><rect x="1118" y="1060" width="4" height="15" fill="rgb(253,72,18)"/><text x="1121.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.30%)</title><rect x="1118" y="1076" width="4" height="15" fill="rgb(205,13,12)"/><text x="1121.00" y="1086.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.30%)</title><rect x="1118" y="1092" width="4" height="15" fill="rgb(211,220,39)"/><text x="1121.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:4) (3 samples, 0.91%)</title><rect x="1115" y="148" width="10" height="15" fill="rgb(225,3,18)"/><text x="1118.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="164" width="10" height="15" fill="rgb(237,134,26)"/><text x="1118.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.91%)</title><rect x="1115" y="180" width="10" height="15" fill="rgb(253,183,17)"/><text x="1118.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="196" width="10" height="15" fill="rgb(239,120,33)"/><text x="1118.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="212" width="10" height="15" fill="rgb(212,201,41)"/><text x="1118.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="228" width="10" height="15" fill="rgb(252,31,28)"/><text x="1118.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1115" y="244" width="10" height="15" fill="rgb(249,176,52)"/><text x="1118.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1115" y="260" width="10" height="15" fill="rgb(249,152,27)"/><text x="1118.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="276" width="10" height="15" fill="rgb(243,163,20)"/><text x="1118.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (3 samples, 0.91%)</title><rect x="1115" y="292" width="10" height="15" fill="rgb(211,162,11)"/><text x="1118.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="308" width="10" height="15" fill="rgb(207,98,33)"/><text x="1118.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="324" width="10" height="15" fill="rgb(234,226,52)"/><text x="1118.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1115" y="340" width="10" height="15" fill="rgb(233,217,42)"/><text x="1118.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1115" y="356" width="10" height="15" fill="rgb(215,110,5)"/><text x="1118.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="372" width="10" height="15" fill="rgb(235,148,32)"/><text x="1118.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (3 samples, 0.91%)</title><rect x="1115" y="388" width="10" height="15" fill="rgb(247,115,30)"/><text x="1118.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="404" width="10" height="15" fill="rgb(231,151,39)"/><text x="1118.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="420" width="10" height="15" fill="rgb(221,130,0)"/><text x="1118.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1115" y="436" width="10" height="15" fill="rgb(234,23,36)"/><text x="1118.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1115" y="452" width="10" height="15" fill="rgb(221,213,45)"/><text x="1118.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="468" width="10" height="15" fill="rgb(246,155,3)"/><text x="1118.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (3 samples, 0.91%)</title><rect x="1115" y="484" width="10" height="15" fill="rgb(237,84,28)"/><text x="1118.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="500" width="10" height="15" fill="rgb(236,5,13)"/><text x="1118.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="516" width="10" height="15" fill="rgb(230,67,5)"/><text x="1118.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1115" y="532" width="10" height="15" fill="rgb(223,118,40)"/><text x="1118.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1115" y="548" width="10" height="15" fill="rgb(245,39,54)"/><text x="1118.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="564" width="10" height="15" fill="rgb(249,18,29)"/><text x="1118.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (3 samples, 0.91%)</title><rect x="1115" y="580" width="10" height="15" fill="rgb(207,144,25)"/><text x="1118.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="596" width="10" height="15" fill="rgb(205,188,8)"/><text x="1118.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="612" width="10" height="15" fill="rgb(231,74,29)"/><text x="1118.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1115" y="628" width="10" height="15" fill="rgb(205,211,1)"/><text x="1118.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1115" y="644" width="10" height="15" fill="rgb(247,192,47)"/><text x="1118.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1115" y="660" width="10" height="15" fill="rgb(254,125,38)"/><text x="1118.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (3 samples, 0.91%)</title><rect x="1115" y="676" width="10" height="15" fill="rgb(220,15,47)"/><text x="1118.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1115" y="692" width="10" height="15" fill="rgb(221,103,34)"/><text x="1118.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1115" y="708" width="10" height="15" fill="rgb(241,2,16)"/><text x="1118.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1118" y="724" width="7" height="15" fill="rgb(219,20,51)"/><text x="1121.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1118" y="740" width="7" height="15" fill="rgb(205,29,4)"/><text x="1121.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1118" y="756" width="7" height="15" fill="rgb(218,162,53)"/><text x="1121.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:183) (1 samples, 0.30%)</title><rect x="1122" y="772" width="3" height="15" fill="rgb(243,64,35)"/><text x="1125.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1122" y="788" width="3" height="15" fill="rgb(220,114,43)"/><text x="1125.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1122" y="804" width="3" height="15" fill="rgb(208,96,3)"/><text x="1125.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1122" y="820" width="3" height="15" fill="rgb(216,81,9)"/><text x="1125.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1122" y="836" width="3" height="15" fill="rgb(250,0,7)"/><text x="1125.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1122" y="852" width="3" height="15" fill="rgb(246,150,26)"/><text x="1125.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1122" y="868" width="3" height="15" fill="rgb(235,139,45)"/><text x="1125.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1122" y="884" width="3" height="15" fill="rgb(216,112,52)"/><text x="1125.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py:2834) (1 samples, 0.30%)</title><rect x="1122" y="900" width="3" height="15" fill="rgb(232,162,27)"/><text x="1125.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.30%)</title><rect x="1122" y="916" width="3" height="15" fill="rgb(218,48,22)"/><text x="1125.00" y="926.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.30%)</title><rect x="1125" y="772" width="4" height="15" fill="rgb(215,215,26)"/><text x="1128.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1125" y="788" width="4" height="15" fill="rgb(239,162,3)"/><text x="1128.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1125" y="804" width="4" height="15" fill="rgb(237,74,47)"/><text x="1128.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1125" y="820" width="4" height="15" fill="rgb(207,98,23)"/><text x="1128.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1125" y="836" width="4" height="15" fill="rgb(254,159,38)"/><text x="1128.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1125" y="852" width="4" height="15" fill="rgb(246,84,21)"/><text x="1128.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.30%)</title><rect x="1125" y="868" width="4" height="15" fill="rgb(254,116,15)"/><text x="1128.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1125" y="884" width="4" height="15" fill="rgb(249,108,54)"/><text x="1128.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1125" y="900" width="4" height="15" fill="rgb(242,104,51)"/><text x="1128.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1125" y="916" width="4" height="15" fill="rgb(221,146,46)"/><text x="1128.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1125" y="932" width="4" height="15" fill="rgb(218,182,52)"/><text x="1128.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1125" y="948" width="4" height="15" fill="rgb(226,144,41)"/><text x="1128.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.30%)</title><rect x="1125" y="964" width="4" height="15" fill="rgb(220,37,31)"/><text x="1128.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1125" y="980" width="4" height="15" fill="rgb(207,210,52)"/><text x="1128.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1125" y="996" width="4" height="15" fill="rgb(208,100,34)"/><text x="1128.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1125" y="1012" width="4" height="15" fill="rgb(214,192,8)"/><text x="1128.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1125" y="1028" width="4" height="15" fill="rgb(226,31,54)"/><text x="1128.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1125" y="1044" width="4" height="15" fill="rgb(205,100,29)"/><text x="1128.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (1 samples, 0.30%)</title><rect x="1125" y="1060" width="4" height="15" fill="rgb(222,179,26)"/><text x="1128.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.30%)</title><rect x="1125" y="1076" width="4" height="15" fill="rgb(212,71,27)"/><text x="1128.00" y="1086.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.30%)</title><rect x="1125" y="1092" width="4" height="15" fill="rgb(247,128,40)"/><text x="1128.00" y="1102.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:157) (1 samples, 0.30%)</title><rect x="1125" y="1108" width="4" height="15" fill="rgb(235,144,46)"/><text x="1128.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.60%)</title><rect x="1125" y="244" width="7" height="15" fill="rgb(233,64,50)"/><text x="1128.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="260" width="7" height="15" fill="rgb(211,142,17)"/><text x="1128.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1125" y="276" width="7" height="15" fill="rgb(246,59,42)"/><text x="1128.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1125" y="292" width="7" height="15" fill="rgb(241,86,48)"/><text x="1128.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1125" y="308" width="7" height="15" fill="rgb(231,29,47)"/><text x="1128.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="324" width="7" height="15" fill="rgb(246,56,6)"/><text x="1128.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.60%)</title><rect x="1125" y="340" width="7" height="15" fill="rgb(223,9,12)"/><text x="1128.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="356" width="7" height="15" fill="rgb(234,61,28)"/><text x="1128.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.60%)</title><rect x="1125" y="372" width="7" height="15" fill="rgb(237,200,12)"/><text x="1128.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="388" width="7" height="15" fill="rgb(229,31,41)"/><text x="1128.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="404" width="7" height="15" fill="rgb(251,132,53)"/><text x="1128.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1125" y="420" width="7" height="15" fill="rgb(246,46,7)"/><text x="1128.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1125" y="436" width="7" height="15" fill="rgb(254,178,5)"/><text x="1128.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1125" y="452" width="7" height="15" fill="rgb(254,74,29)"/><text x="1128.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="468" width="7" height="15" fill="rgb(233,108,43)"/><text x="1128.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.60%)</title><rect x="1125" y="484" width="7" height="15" fill="rgb(235,180,25)"/><text x="1128.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="500" width="7" height="15" fill="rgb(246,58,43)"/><text x="1128.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1125" y="516" width="7" height="15" fill="rgb(208,191,6)"/><text x="1128.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1125" y="532" width="7" height="15" fill="rgb(241,9,3)"/><text x="1128.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1125" y="548" width="7" height="15" fill="rgb(216,13,19)"/><text x="1128.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="564" width="7" height="15" fill="rgb(241,28,48)"/><text x="1128.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.60%)</title><rect x="1125" y="580" width="7" height="15" fill="rgb(225,93,18)"/><text x="1128.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="596" width="7" height="15" fill="rgb(229,12,40)"/><text x="1128.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1125" y="612" width="7" height="15" fill="rgb(229,200,31)"/><text x="1128.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1125" y="628" width="7" height="15" fill="rgb(239,4,28)"/><text x="1128.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1125" y="644" width="7" height="15" fill="rgb(206,225,20)"/><text x="1128.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="660" width="7" height="15" fill="rgb(205,174,53)"/><text x="1128.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.60%)</title><rect x="1125" y="676" width="7" height="15" fill="rgb(209,131,22)"/><text x="1128.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1125" y="692" width="7" height="15" fill="rgb(217,25,24)"/><text x="1128.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1125" y="708" width="7" height="15" fill="rgb(228,152,27)"/><text x="1128.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1125" y="724" width="7" height="15" fill="rgb(209,12,44)"/><text x="1128.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1125" y="740" width="7" height="15" fill="rgb(213,55,23)"/><text x="1128.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1125" y="756" width="7" height="15" fill="rgb(244,65,41)"/><text x="1128.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.30%)</title><rect x="1129" y="772" width="3" height="15" fill="rgb(229,3,18)"/><text x="1132.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1129" y="788" width="3" height="15" fill="rgb(222,53,49)"/><text x="1132.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="804" width="3" height="15" fill="rgb(214,64,18)"/><text x="1132.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="820" width="3" height="15" fill="rgb(224,152,33)"/><text x="1132.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="836" width="3" height="15" fill="rgb(225,153,6)"/><text x="1132.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="852" width="3" height="15" fill="rgb(239,133,36)"/><text x="1132.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="868" width="3" height="15" fill="rgb(219,28,18)"/><text x="1132.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="884" width="3" height="15" fill="rgb(250,152,48)"/><text x="1132.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.30%)</title><rect x="1129" y="900" width="3" height="15" fill="rgb(226,114,31)"/><text x="1132.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="916" width="3" height="15" fill="rgb(226,134,46)"/><text x="1132.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="1129" y="932" width="3" height="15" fill="rgb(215,106,22)"/><text x="1132.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="948" width="3" height="15" fill="rgb(225,173,4)"/><text x="1132.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="964" width="3" height="15" fill="rgb(230,223,44)"/><text x="1132.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="980" width="3" height="15" fill="rgb(233,133,6)"/><text x="1132.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="996" width="3" height="15" fill="rgb(247,87,7)"/><text x="1132.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1012" width="3" height="15" fill="rgb(234,73,9)"/><text x="1132.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1028" width="3" height="15" fill="rgb(219,216,20)"/><text x="1132.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.30%)</title><rect x="1129" y="1044" width="3" height="15" fill="rgb(254,188,49)"/><text x="1132.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1129" y="1060" width="3" height="15" fill="rgb(205,50,4)"/><text x="1132.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1076" width="3" height="15" fill="rgb(227,89,1)"/><text x="1132.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1092" width="3" height="15" fill="rgb(230,117,49)"/><text x="1132.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1108" width="3" height="15" fill="rgb(207,117,17)"/><text x="1132.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1124" width="3" height="15" fill="rgb(233,171,41)"/><text x="1132.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1140" width="3" height="15" fill="rgb(234,50,3)"/><text x="1132.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1156" width="3" height="15" fill="rgb(224,198,7)"/><text x="1132.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.30%)</title><rect x="1129" y="1172" width="3" height="15" fill="rgb(223,147,39)"/><text x="1132.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1129" y="1188" width="3" height="15" fill="rgb(234,118,35)"/><text x="1132.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1204" width="3" height="15" fill="rgb(238,203,22)"/><text x="1132.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1220" width="3" height="15" fill="rgb(254,40,47)"/><text x="1132.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1236" width="3" height="15" fill="rgb(222,170,0)"/><text x="1132.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1252" width="3" height="15" fill="rgb(226,204,47)"/><text x="1132.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1268" width="3" height="15" fill="rgb(224,120,7)"/><text x="1132.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1284" width="3" height="15" fill="rgb(252,186,31)"/><text x="1132.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.30%)</title><rect x="1129" y="1300" width="3" height="15" fill="rgb(208,223,10)"/><text x="1132.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1316" width="3" height="15" fill="rgb(210,3,1)"/><text x="1132.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1332" width="3" height="15" fill="rgb(250,40,14)"/><text x="1132.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1348" width="3" height="15" fill="rgb(236,226,4)"/><text x="1132.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1364" width="3" height="15" fill="rgb(245,116,0)"/><text x="1132.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1380" width="3" height="15" fill="rgb(231,88,25)"/><text x="1132.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:18) (1 samples, 0.30%)</title><rect x="1129" y="1396" width="3" height="15" fill="rgb(220,1,30)"/><text x="1132.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1412" width="3" height="15" fill="rgb(230,203,20)"/><text x="1132.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1428" width="3" height="15" fill="rgb(229,75,7)"/><text x="1132.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1444" width="3" height="15" fill="rgb(225,212,47)"/><text x="1132.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1460" width="3" height="15" fill="rgb(249,134,1)"/><text x="1132.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1476" width="3" height="15" fill="rgb(252,42,2)"/><text x="1132.00" y="1486.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/extensions.py:20) (1 samples, 0.30%)</title><rect x="1129" y="1492" width="3" height="15" fill="rgb(238,10,22)"/><text x="1132.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1129" y="1508" width="3" height="15" fill="rgb(235,24,33)"/><text x="1132.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1524" width="3" height="15" fill="rgb(234,215,27)"/><text x="1132.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1540" width="3" height="15" fill="rgb(246,36,3)"/><text x="1132.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1556" width="3" height="15" fill="rgb(221,4,51)"/><text x="1132.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1572" width="3" height="15" fill="rgb(209,57,1)"/><text x="1132.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1588" width="3" height="15" fill="rgb(252,154,30)"/><text x="1132.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1604" width="3" height="15" fill="rgb(245,178,18)"/><text x="1132.00" y="1614.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/serialization/__init__.py:7) (1 samples, 0.30%)</title><rect x="1129" y="1620" width="3" height="15" fill="rgb(234,170,45)"/><text x="1132.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1129" y="1636" width="3" height="15" fill="rgb(217,188,23)"/><text x="1132.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1129" y="1652" width="3" height="15" fill="rgb(219,209,29)"/><text x="1132.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1129" y="1668" width="3" height="15" fill="rgb(215,38,11)"/><text x="1132.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1129" y="1684" width="3" height="15" fill="rgb(223,194,31)"/><text x="1132.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1129" y="1700" width="3" height="15" fill="rgb(252,146,16)"/><text x="1132.00" y="1710.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/serialization/base.py:39) (1 samples, 0.30%)</title><rect x="1129" y="1716" width="3" height="15" fill="rgb(252,34,52)"/><text x="1132.00" y="1726.50"></text></g><g><title>__prepare__ (enum.py:129) (1 samples, 0.30%)</title><rect x="1129" y="1732" width="3" height="15" fill="rgb(207,42,41)"/><text x="1132.00" y="1742.50"></text></g><g><title>_get_mixins_ (enum.py:468) (1 samples, 0.30%)</title><rect x="1129" y="1748" width="3" height="15" fill="rgb(251,127,30)"/><text x="1132.00" y="1758.50"></text></g><g><title>_find_data_type (enum.py:454) (1 samples, 0.30%)</title><rect x="1129" y="1764" width="3" height="15" fill="rgb(234,104,45)"/><text x="1132.00" y="1774.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.30%)</title><rect x="1132" y="1012" width="4" height="15" fill="rgb(245,0,47)"/><text x="1135.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1028" width="4" height="15" fill="rgb(224,175,9)"/><text x="1135.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1044" width="4" height="15" fill="rgb(213,15,20)"/><text x="1135.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1060" width="4" height="15" fill="rgb(238,171,42)"/><text x="1135.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1076" width="4" height="15" fill="rgb(240,69,24)"/><text x="1135.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1092" width="4" height="15" fill="rgb(224,123,29)"/><text x="1135.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.30%)</title><rect x="1132" y="1108" width="4" height="15" fill="rgb(219,163,23)"/><text x="1135.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1124" width="4" height="15" fill="rgb(239,218,9)"/><text x="1135.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1140" width="4" height="15" fill="rgb(217,21,12)"/><text x="1135.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1156" width="4" height="15" fill="rgb(222,199,7)"/><text x="1135.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1172" width="4" height="15" fill="rgb(237,220,36)"/><text x="1135.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1188" width="4" height="15" fill="rgb(244,20,19)"/><text x="1135.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.30%)</title><rect x="1132" y="1204" width="4" height="15" fill="rgb(225,94,36)"/><text x="1135.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1220" width="4" height="15" fill="rgb(209,134,41)"/><text x="1135.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1236" width="4" height="15" fill="rgb(246,114,28)"/><text x="1135.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1252" width="4" height="15" fill="rgb(247,60,16)"/><text x="1135.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1268" width="4" height="15" fill="rgb(206,207,44)"/><text x="1135.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1284" width="4" height="15" fill="rgb(208,171,16)"/><text x="1135.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.30%)</title><rect x="1132" y="1300" width="4" height="15" fill="rgb(208,196,47)"/><text x="1135.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1316" width="4" height="15" fill="rgb(209,19,48)"/><text x="1135.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1332" width="4" height="15" fill="rgb(210,220,47)"/><text x="1135.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1348" width="4" height="15" fill="rgb(225,46,40)"/><text x="1135.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1364" width="4" height="15" fill="rgb(211,148,31)"/><text x="1135.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1380" width="4" height="15" fill="rgb(241,58,38)"/><text x="1135.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.30%)</title><rect x="1132" y="1396" width="4" height="15" fill="rgb(221,173,51)"/><text x="1135.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1412" width="4" height="15" fill="rgb(239,70,28)"/><text x="1135.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1428" width="4" height="15" fill="rgb(208,86,7)"/><text x="1135.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1444" width="4" height="15" fill="rgb(217,173,21)"/><text x="1135.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1460" width="4" height="15" fill="rgb(243,102,9)"/><text x="1135.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1476" width="4" height="15" fill="rgb(215,200,7)"/><text x="1135.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.30%)</title><rect x="1132" y="1492" width="4" height="15" fill="rgb(245,88,51)"/><text x="1135.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1508" width="4" height="15" fill="rgb(235,32,44)"/><text x="1135.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="1132" y="1524" width="4" height="15" fill="rgb(205,50,17)"/><text x="1135.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1540" width="4" height="15" fill="rgb(216,43,6)"/><text x="1135.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1556" width="4" height="15" fill="rgb(245,75,15)"/><text x="1135.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1572" width="4" height="15" fill="rgb(222,137,15)"/><text x="1135.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1588" width="4" height="15" fill="rgb(252,94,46)"/><text x="1135.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1604" width="4" height="15" fill="rgb(216,173,7)"/><text x="1135.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1620" width="4" height="15" fill="rgb(225,115,1)"/><text x="1135.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.30%)</title><rect x="1132" y="1636" width="4" height="15" fill="rgb(253,200,0)"/><text x="1135.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1132" y="1652" width="4" height="15" fill="rgb(219,71,19)"/><text x="1135.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1668" width="4" height="15" fill="rgb(254,132,5)"/><text x="1135.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1684" width="4" height="15" fill="rgb(215,212,47)"/><text x="1135.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1700" width="4" height="15" fill="rgb(231,15,28)"/><text x="1135.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1716" width="4" height="15" fill="rgb(222,206,22)"/><text x="1135.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1732" width="4" height="15" fill="rgb(242,199,2)"/><text x="1135.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1748" width="4" height="15" fill="rgb(215,44,54)"/><text x="1135.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.30%)</title><rect x="1132" y="1764" width="4" height="15" fill="rgb(219,198,28)"/><text x="1135.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1780" width="4" height="15" fill="rgb(227,82,50)"/><text x="1135.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1796" width="4" height="15" fill="rgb(252,15,52)"/><text x="1135.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1812" width="4" height="15" fill="rgb(226,84,29)"/><text x="1135.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1132" y="1828" width="4" height="15" fill="rgb(212,93,51)"/><text x="1135.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1132" y="1844" width="4" height="15" fill="rgb(243,134,7)"/><text x="1135.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py:68) (1 samples, 0.30%)</title><rect x="1132" y="1860" width="4" height="15" fill="rgb(206,82,47)"/><text x="1135.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1132" y="1876" width="4" height="15" fill="rgb(253,137,21)"/><text x="1135.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1132" y="1892" width="4" height="15" fill="rgb(222,28,43)"/><text x="1135.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1132" y="1908" width="4" height="15" fill="rgb(234,227,0)"/><text x="1135.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="1132" y="1924" width="4" height="15" fill="rgb(242,75,21)"/><text x="1135.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.30%)</title><rect x="1132" y="1940" width="4" height="15" fill="rgb(216,196,46)"/><text x="1135.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.30%)</title><rect x="1132" y="1956" width="4" height="15" fill="rgb(211,142,39)"/><text x="1135.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.60%)</title><rect x="1132" y="724" width="8" height="15" fill="rgb(222,110,4)"/><text x="1135.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1132" y="740" width="8" height="15" fill="rgb(230,5,53)"/><text x="1135.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1132" y="756" width="8" height="15" fill="rgb(222,47,30)"/><text x="1135.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1132" y="772" width="8" height="15" fill="rgb(242,76,44)"/><text x="1135.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1132" y="788" width="8" height="15" fill="rgb(234,181,54)"/><text x="1135.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1132" y="804" width="8" height="15" fill="rgb(237,64,33)"/><text x="1135.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.60%)</title><rect x="1132" y="820" width="8" height="15" fill="rgb(209,40,37)"/><text x="1135.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1132" y="836" width="8" height="15" fill="rgb(224,170,4)"/><text x="1135.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1132" y="852" width="8" height="15" fill="rgb(207,148,18)"/><text x="1135.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1132" y="868" width="8" height="15" fill="rgb(218,208,2)"/><text x="1135.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1132" y="884" width="8" height="15" fill="rgb(240,105,34)"/><text x="1135.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1132" y="900" width="8" height="15" fill="rgb(254,204,38)"/><text x="1135.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.60%)</title><rect x="1132" y="916" width="8" height="15" fill="rgb(216,123,53)"/><text x="1135.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.60%)</title><rect x="1132" y="932" width="8" height="15" fill="rgb(218,156,0)"/><text x="1135.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.60%)</title><rect x="1132" y="948" width="8" height="15" fill="rgb(240,58,28)"/><text x="1135.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.60%)</title><rect x="1132" y="964" width="8" height="15" fill="rgb(220,120,53)"/><text x="1135.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.60%)</title><rect x="1132" y="980" width="8" height="15" fill="rgb(232,163,19)"/><text x="1135.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.60%)</title><rect x="1132" y="996" width="8" height="15" fill="rgb(219,183,40)"/><text x="1135.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.30%)</title><rect x="1136" y="1012" width="4" height="15" fill="rgb(218,108,33)"/><text x="1139.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:4270) (1 samples, 0.30%)</title><rect x="1136" y="1028" width="4" height="15" fill="rgb(218,49,40)"/><text x="1139.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.30%)</title><rect x="1136" y="1044" width="4" height="15" fill="rgb(221,83,9)"/><text x="1139.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.30%)</title><rect x="1136" y="1060" width="4" height="15" fill="rgb(205,140,21)"/><text x="1139.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.30%)</title><rect x="1136" y="1076" width="4" height="15" fill="rgb(248,98,9)"/><text x="1139.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.91%)</title><rect x="1132" y="436" width="11" height="15" fill="rgb(241,190,10)"/><text x="1135.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1132" y="452" width="11" height="15" fill="rgb(241,128,5)"/><text x="1135.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1132" y="468" width="11" height="15" fill="rgb(207,103,4)"/><text x="1135.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1132" y="484" width="11" height="15" fill="rgb(248,123,20)"/><text x="1135.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1132" y="500" width="11" height="15" fill="rgb(233,169,4)"/><text x="1135.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1132" y="516" width="11" height="15" fill="rgb(243,107,52)"/><text x="1135.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.91%)</title><rect x="1132" y="532" width="11" height="15" fill="rgb(231,84,11)"/><text x="1135.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1132" y="548" width="11" height="15" fill="rgb(211,48,3)"/><text x="1135.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1132" y="564" width="11" height="15" fill="rgb(247,228,47)"/><text x="1135.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1132" y="580" width="11" height="15" fill="rgb(251,34,9)"/><text x="1135.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1132" y="596" width="11" height="15" fill="rgb(243,116,51)"/><text x="1135.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1132" y="612" width="11" height="15" fill="rgb(216,195,17)"/><text x="1135.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.91%)</title><rect x="1132" y="628" width="11" height="15" fill="rgb(254,168,1)"/><text x="1135.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1132" y="644" width="11" height="15" fill="rgb(208,65,47)"/><text x="1135.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1132" y="660" width="11" height="15" fill="rgb(246,193,31)"/><text x="1135.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1132" y="676" width="11" height="15" fill="rgb(221,207,36)"/><text x="1135.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1132" y="692" width="11" height="15" fill="rgb(205,27,26)"/><text x="1135.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1132" y="708" width="11" height="15" fill="rgb(214,136,26)"/><text x="1135.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.30%)</title><rect x="1140" y="724" width="3" height="15" fill="rgb(218,5,51)"/><text x="1143.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1140" y="740" width="3" height="15" fill="rgb(236,191,43)"/><text x="1143.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.30%)</title><rect x="1140" y="756" width="3" height="15" fill="rgb(233,106,11)"/><text x="1143.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1140" y="772" width="3" height="15" fill="rgb(251,160,44)"/><text x="1143.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1140" y="788" width="3" height="15" fill="rgb(254,126,41)"/><text x="1143.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1140" y="804" width="3" height="15" fill="rgb(230,28,17)"/><text x="1143.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1140" y="820" width="3" height="15" fill="rgb(224,193,6)"/><text x="1143.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1140" y="836" width="3" height="15" fill="rgb(230,224,34)"/><text x="1143.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1140" y="852" width="3" height="15" fill="rgb(253,26,0)"/><text x="1143.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (1 samples, 0.30%)</title><rect x="1140" y="868" width="3" height="15" fill="rgb(248,126,30)"/><text x="1143.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1140" y="884" width="3" height="15" fill="rgb(248,226,10)"/><text x="1143.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1140" y="900" width="3" height="15" fill="rgb(210,204,9)"/><text x="1143.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1140" y="916" width="3" height="15" fill="rgb(227,130,18)"/><text x="1143.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1140" y="932" width="3" height="15" fill="rgb(254,113,38)"/><text x="1143.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1140" y="948" width="3" height="15" fill="rgb(237,102,44)"/><text x="1143.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py:7) (1 samples, 0.30%)</title><rect x="1140" y="964" width="3" height="15" fill="rgb(214,33,18)"/><text x="1143.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1140" y="980" width="3" height="15" fill="rgb(246,35,5)"/><text x="1143.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1140" y="996" width="3" height="15" fill="rgb(236,116,35)"/><text x="1143.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1140" y="1012" width="3" height="15" fill="rgb(239,77,33)"/><text x="1143.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1140" y="1028" width="3" height="15" fill="rgb(238,33,20)"/><text x="1143.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1140" y="1044" width="3" height="15" fill="rgb(206,176,33)"/><text x="1143.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py:11) (1 samples, 0.30%)</title><rect x="1140" y="1060" width="3" height="15" fill="rgb(212,100,7)"/><text x="1143.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1140" y="1076" width="3" height="15" fill="rgb(217,29,45)"/><text x="1143.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1140" y="1092" width="3" height="15" fill="rgb(250,207,26)"/><text x="1143.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1140" y="1108" width="3" height="15" fill="rgb(215,218,34)"/><text x="1143.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1140" y="1124" width="3" height="15" fill="rgb(229,14,53)"/><text x="1143.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1140" y="1140" width="3" height="15" fill="rgb(235,29,19)"/><text x="1143.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py:780) (1 samples, 0.30%)</title><rect x="1140" y="1156" width="3" height="15" fill="rgb(235,161,43)"/><text x="1143.00" y="1166.50"></text></g><g><title>PeriodDtype (pandas/core/dtypes/dtypes.py:814) (1 samples, 0.30%)</title><rect x="1140" y="1172" width="3" height="15" fill="rgb(230,144,50)"/><text x="1143.00" y="1182.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.30%)</title><rect x="1140" y="1188" width="3" height="15" fill="rgb(222,195,8)"/><text x="1143.00" y="1198.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.30%)</title><rect x="1140" y="1204" width="3" height="15" fill="rgb(246,93,39)"/><text x="1143.00" y="1214.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.30%)</title><rect x="1140" y="1220" width="3" height="15" fill="rgb(210,149,35)"/><text x="1143.00" y="1230.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.30%)</title><rect x="1140" y="1236" width="3" height="15" fill="rgb(238,156,16)"/><text x="1143.00" y="1246.50"></text></g><g><title>_compile_info (sre_compile.py:540) (1 samples, 0.30%)</title><rect x="1140" y="1252" width="3" height="15" fill="rgb(236,218,12)"/><text x="1143.00" y="1262.50"></text></g><g><title>getwidth (sre_parse.py:194) (1 samples, 0.30%)</title><rect x="1140" y="1268" width="3" height="15" fill="rgb(238,116,34)"/><text x="1143.00" y="1278.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.30%)</title><rect x="1143" y="1108" width="4" height="15" fill="rgb(224,6,26)"/><text x="1146.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1143" y="1124" width="4" height="15" fill="rgb(251,91,35)"/><text x="1146.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1143" y="1140" width="4" height="15" fill="rgb(226,127,42)"/><text x="1146.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1143" y="1156" width="4" height="15" fill="rgb(246,74,39)"/><text x="1146.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1143" y="1172" width="4" height="15" fill="rgb(211,214,50)"/><text x="1146.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1143" y="1188" width="4" height="15" fill="rgb(228,115,11)"/><text x="1146.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.30%)</title><rect x="1143" y="1204" width="4" height="15" fill="rgb(220,4,52)"/><text x="1146.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1143" y="1220" width="4" height="15" fill="rgb(236,90,6)"/><text x="1146.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1143" y="1236" width="4" height="15" fill="rgb(246,184,6)"/><text x="1146.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1143" y="1252" width="4" height="15" fill="rgb(241,180,25)"/><text x="1146.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1143" y="1268" width="4" height="15" fill="rgb(218,127,28)"/><text x="1146.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1143" y="1284" width="4" height="15" fill="rgb(242,18,18)"/><text x="1146.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.30%)</title><rect x="1143" y="1300" width="4" height="15" fill="rgb(205,144,22)"/><text x="1146.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.30%)</title><rect x="1143" y="1316" width="4" height="15" fill="rgb(254,79,27)"/><text x="1146.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.30%)</title><rect x="1143" y="1332" width="4" height="15" fill="rgb(241,36,3)"/><text x="1146.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.30%)</title><rect x="1143" y="1348" width="4" height="15" fill="rgb(243,75,23)"/><text x="1146.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.30%)</title><rect x="1143" y="1364" width="4" height="15" fill="rgb(234,221,42)"/><text x="1146.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:656) (1 samples, 0.30%)</title><rect x="1143" y="1380" width="4" height="15" fill="rgb(254,212,38)"/><text x="1146.00" y="1390.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.30%)</title><rect x="1147" y="1476" width="3" height="15" fill="rgb(207,136,35)"/><text x="1150.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.30%)</title><rect x="1147" y="1492" width="3" height="15" fill="rgb(218,229,14)"/><text x="1150.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.30%)</title><rect x="1147" y="1508" width="3" height="15" fill="rgb(218,197,19)"/><text x="1150.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.30%)</title><rect x="1147" y="1524" width="3" height="15" fill="rgb(229,125,5)"/><text x="1150.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.30%)</title><rect x="1147" y="1540" width="3" height="15" fill="rgb(240,16,31)"/><text x="1150.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.30%)</title><rect x="1147" y="1556" width="3" height="15" fill="rgb(248,3,5)"/><text x="1150.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:41) (1 samples, 0.30%)</title><rect x="1147" y="1572" width="3" height="15" fill="rgb(214,23,40)"/><text x="1150.00" y="1582.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.30%)</title><rect x="1147" y="1588" width="3" height="15" fill="rgb(240,200,37)"/><text x="1150.00" y="1598.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.60%)</title><rect x="1147" y="1460" width="7" height="15" fill="rgb(248,46,49)"/><text x="1150.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:156) (1 samples, 0.30%)</title><rect x="1150" y="1476" width="4" height="15" fill="rgb(226,82,35)"/><text x="1153.00" y="1486.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.91%)</title><rect x="1147" y="1236" width="10" height="15" fill="rgb(246,209,12)"/><text x="1150.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.91%)</title><rect x="1147" y="1252" width="10" height="15" fill="rgb(214,35,39)"/><text x="1150.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1147" y="1268" width="10" height="15" fill="rgb(249,79,19)"/><text x="1150.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1147" y="1284" width="10" height="15" fill="rgb(217,45,35)"/><text x="1150.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1147" y="1300" width="10" height="15" fill="rgb(226,112,40)"/><text x="1150.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1147" y="1316" width="10" height="15" fill="rgb(240,2,47)"/><text x="1150.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1147" y="1332" width="10" height="15" fill="rgb(237,19,0)"/><text x="1150.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1147" y="1348" width="10" height="15" fill="rgb(245,161,9)"/><text x="1150.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.91%)</title><rect x="1147" y="1364" width="10" height="15" fill="rgb(236,186,21)"/><text x="1150.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.91%)</title><rect x="1147" y="1380" width="10" height="15" fill="rgb(232,126,27)"/><text x="1150.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.91%)</title><rect x="1147" y="1396" width="10" height="15" fill="rgb(238,132,52)"/><text x="1150.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.91%)</title><rect x="1147" y="1412" width="10" height="15" fill="rgb(241,217,17)"/><text x="1150.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.91%)</title><rect x="1147" y="1428" width="10" height="15" fill="rgb(220,191,46)"/><text x="1150.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.91%)</title><rect x="1147" y="1444" width="10" height="15" fill="rgb(233,163,4)"/><text x="1150.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.30%)</title><rect x="1154" y="1460" width="3" height="15" fill="rgb(241,82,43)"/><text x="1157.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1154" y="1476" width="3" height="15" fill="rgb(252,95,14)"/><text x="1157.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1154" y="1492" width="3" height="15" fill="rgb(240,182,5)"/><text x="1157.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1154" y="1508" width="3" height="15" fill="rgb(245,63,8)"/><text x="1157.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1154" y="1524" width="3" height="15" fill="rgb(239,210,27)"/><text x="1157.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1154" y="1540" width="3" height="15" fill="rgb(210,108,4)"/><text x="1157.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.30%)</title><rect x="1154" y="1556" width="3" height="15" fill="rgb(211,194,35)"/><text x="1157.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.30%)</title><rect x="1154" y="1572" width="3" height="15" fill="rgb(242,173,21)"/><text x="1157.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1154" y="1588" width="3" height="15" fill="rgb(220,9,53)"/><text x="1157.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1154" y="1604" width="3" height="15" fill="rgb(213,157,40)"/><text x="1157.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1154" y="1620" width="3" height="15" fill="rgb(246,50,29)"/><text x="1157.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1154" y="1636" width="3" height="15" fill="rgb(241,158,23)"/><text x="1157.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1154" y="1652" width="3" height="15" fill="rgb(228,182,48)"/><text x="1157.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.30%)</title><rect x="1154" y="1668" width="3" height="15" fill="rgb(224,19,40)"/><text x="1157.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1154" y="1684" width="3" height="15" fill="rgb(252,98,54)"/><text x="1157.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1154" y="1700" width="3" height="15" fill="rgb(216,85,53)"/><text x="1157.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1154" y="1716" width="3" height="15" fill="rgb(254,47,16)"/><text x="1157.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.30%)</title><rect x="1154" y="1732" width="3" height="15" fill="rgb(220,131,20)"/><text x="1157.00" y="1742.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.30%)</title><rect x="1154" y="1748" width="3" height="15" fill="rgb(222,182,10)"/><text x="1157.00" y="1758.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.30%)</title><rect x="1154" y="1764" width="3" height="15" fill="rgb(242,61,52)"/><text x="1157.00" y="1774.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:4) (20 samples, 6.04%)</title><rect x="1090" y="52" width="71" height="15" fill="rgb(214,173,37)"/><text x="1093.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 6.04%)</title><rect x="1090" y="68" width="71" height="15" fill="rgb(215,162,29)"/><text x="1093.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 6.04%)</title><rect x="1090" y="84" width="71" height="15" fill="rgb(241,101,12)"/><text x="1093.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 6.04%)</title><rect x="1090" y="100" width="71" height="15" fill="rgb(216,53,1)"/><text x="1093.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 6.04%)</title><rect x="1090" y="116" width="71" height="15" fill="rgb(214,182,50)"/><text x="1093.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 6.04%)</title><rect x="1090" y="132" width="71" height="15" fill="rgb(225,114,22)"/><text x="1093.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestClassifier/bench_RandomForestClassifier_default_b_cl.py:7) (10 samples, 3.02%)</title><rect x="1125" y="148" width="36" height="15" fill="rgb(219,80,49)"/><text x="1128.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.02%)</title><rect x="1125" y="164" width="36" height="15" fill="rgb(223,41,39)"/><text x="1128.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.02%)</title><rect x="1125" y="180" width="36" height="15" fill="rgb(211,138,51)"/><text x="1128.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.02%)</title><rect x="1125" y="196" width="36" height="15" fill="rgb(214,224,23)"/><text x="1128.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.02%)</title><rect x="1125" y="212" width="36" height="15" fill="rgb(240,63,44)"/><text x="1128.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.02%)</title><rect x="1125" y="228" width="36" height="15" fill="rgb(244,148,5)"/><text x="1128.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.42%)</title><rect x="1132" y="244" width="29" height="15" fill="rgb(244,87,31)"/><text x="1135.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.42%)</title><rect x="1132" y="260" width="29" height="15" fill="rgb(227,134,7)"/><text x="1135.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.42%)</title><rect x="1132" y="276" width="29" height="15" fill="rgb(247,148,29)"/><text x="1135.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.42%)</title><rect x="1132" y="292" width="29" height="15" fill="rgb(243,184,22)"/><text x="1135.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.42%)</title><rect x="1132" y="308" width="29" height="15" fill="rgb(235,26,19)"/><text x="1135.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.42%)</title><rect x="1132" y="324" width="29" height="15" fill="rgb(214,169,50)"/><text x="1135.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 2.42%)</title><rect x="1132" y="340" width="29" height="15" fill="rgb(236,69,22)"/><text x="1135.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.42%)</title><rect x="1132" y="356" width="29" height="15" fill="rgb(249,135,18)"/><text x="1135.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.42%)</title><rect x="1132" y="372" width="29" height="15" fill="rgb(247,140,19)"/><text x="1135.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.42%)</title><rect x="1132" y="388" width="29" height="15" fill="rgb(236,1,5)"/><text x="1135.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.42%)</title><rect x="1132" y="404" width="29" height="15" fill="rgb(212,85,21)"/><text x="1135.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.42%)</title><rect x="1132" y="420" width="29" height="15" fill="rgb(244,112,47)"/><text x="1135.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.51%)</title><rect x="1143" y="436" width="18" height="15" fill="rgb(241,107,23)"/><text x="1146.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="452" width="18" height="15" fill="rgb(234,142,27)"/><text x="1146.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.51%)</title><rect x="1143" y="468" width="18" height="15" fill="rgb(207,34,50)"/><text x="1146.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="484" width="18" height="15" fill="rgb(216,187,25)"/><text x="1146.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="500" width="18" height="15" fill="rgb(229,196,29)"/><text x="1146.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="516" width="18" height="15" fill="rgb(230,202,5)"/><text x="1146.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="532" width="18" height="15" fill="rgb(238,32,35)"/><text x="1146.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="548" width="18" height="15" fill="rgb(253,215,45)"/><text x="1146.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="564" width="18" height="15" fill="rgb(242,147,46)"/><text x="1146.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.51%)</title><rect x="1143" y="580" width="18" height="15" fill="rgb(222,42,46)"/><text x="1146.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="596" width="18" height="15" fill="rgb(216,94,1)"/><text x="1146.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="612" width="18" height="15" fill="rgb(208,190,38)"/><text x="1146.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="628" width="18" height="15" fill="rgb(243,155,8)"/><text x="1146.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="644" width="18" height="15" fill="rgb(248,35,37)"/><text x="1146.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="660" width="18" height="15" fill="rgb(232,226,50)"/><text x="1146.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.51%)</title><rect x="1143" y="676" width="18" height="15" fill="rgb(207,163,23)"/><text x="1146.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="692" width="18" height="15" fill="rgb(234,113,10)"/><text x="1146.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="708" width="18" height="15" fill="rgb(234,170,26)"/><text x="1146.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="724" width="18" height="15" fill="rgb(237,36,46)"/><text x="1146.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="740" width="18" height="15" fill="rgb(241,101,12)"/><text x="1146.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="756" width="18" height="15" fill="rgb(212,106,32)"/><text x="1146.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.51%)</title><rect x="1143" y="772" width="18" height="15" fill="rgb(249,3,6)"/><text x="1146.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="788" width="18" height="15" fill="rgb(227,218,1)"/><text x="1146.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="804" width="18" height="15" fill="rgb(242,63,38)"/><text x="1146.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="820" width="18" height="15" fill="rgb(237,27,32)"/><text x="1146.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="836" width="18" height="15" fill="rgb(206,207,52)"/><text x="1146.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="852" width="18" height="15" fill="rgb(205,168,4)"/><text x="1146.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.51%)</title><rect x="1143" y="868" width="18" height="15" fill="rgb(229,92,10)"/><text x="1146.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="884" width="18" height="15" fill="rgb(205,123,22)"/><text x="1146.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.51%)</title><rect x="1143" y="900" width="18" height="15" fill="rgb(233,44,13)"/><text x="1146.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="916" width="18" height="15" fill="rgb(240,138,43)"/><text x="1146.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="932" width="18" height="15" fill="rgb(216,154,54)"/><text x="1146.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="948" width="18" height="15" fill="rgb(219,120,46)"/><text x="1146.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="964" width="18" height="15" fill="rgb(252,145,41)"/><text x="1146.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="980" width="18" height="15" fill="rgb(241,102,0)"/><text x="1146.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="996" width="18" height="15" fill="rgb(227,17,38)"/><text x="1146.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.51%)</title><rect x="1143" y="1012" width="18" height="15" fill="rgb(209,89,33)"/><text x="1146.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.51%)</title><rect x="1143" y="1028" width="18" height="15" fill="rgb(253,107,45)"/><text x="1146.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.51%)</title><rect x="1143" y="1044" width="18" height="15" fill="rgb(248,37,0)"/><text x="1146.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.51%)</title><rect x="1143" y="1060" width="18" height="15" fill="rgb(247,211,19)"/><text x="1146.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.51%)</title><rect x="1143" y="1076" width="18" height="15" fill="rgb(214,105,4)"/><text x="1146.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.51%)</title><rect x="1143" y="1092" width="18" height="15" fill="rgb(233,143,27)"/><text x="1146.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.21%)</title><rect x="1147" y="1108" width="14" height="15" fill="rgb(222,217,38)"/><text x="1150.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.21%)</title><rect x="1147" y="1124" width="14" height="15" fill="rgb(231,146,34)"/><text x="1150.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.21%)</title><rect x="1147" y="1140" width="14" height="15" fill="rgb(239,41,46)"/><text x="1150.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.21%)</title><rect x="1147" y="1156" width="14" height="15" fill="rgb(226,131,40)"/><text x="1150.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.21%)</title><rect x="1147" y="1172" width="14" height="15" fill="rgb(237,167,36)"/><text x="1150.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.21%)</title><rect x="1147" y="1188" width="14" height="15" fill="rgb(233,43,25)"/><text x="1150.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.21%)</title><rect x="1147" y="1204" width="14" height="15" fill="rgb(207,197,25)"/><text x="1150.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.21%)</title><rect x="1147" y="1220" width="14" height="15" fill="rgb(221,31,53)"/><text x="1150.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:39) (1 samples, 0.30%)</title><rect x="1157" y="1236" width="4" height="15" fill="rgb(249,86,23)"/><text x="1160.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.30%)</title><rect x="1157" y="1252" width="4" height="15" fill="rgb(223,100,32)"/><text x="1160.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1157" y="1268" width="4" height="15" fill="rgb(214,151,23)"/><text x="1160.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1157" y="1284" width="4" height="15" fill="rgb(205,117,2)"/><text x="1160.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.30%)</title><rect x="1157" y="1300" width="4" height="15" fill="rgb(238,103,10)"/><text x="1160.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.30%)</title><rect x="1157" y="1316" width="4" height="15" fill="rgb(246,43,22)"/><text x="1160.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.30%)</title><rect x="1157" y="1332" width="4" height="15" fill="rgb(236,57,54)"/><text x="1160.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.30%)</title><rect x="1157" y="1348" width="4" height="15" fill="rgb(231,0,26)"/><text x="1160.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.30%)</title><rect x="1157" y="1364" width="4" height="15" fill="rgb(223,18,5)"/><text x="1160.00" y="1374.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (1 samples, 0.30%)</title><rect x="1161" y="84" width="4" height="15" fill="rgb(247,185,18)"/><text x="1164.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="1161" y="100" width="4" height="15" fill="rgb(229,220,41)"/><text x="1164.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:222) (1 samples, 0.30%)</title><rect x="1161" y="116" width="4" height="15" fill="rgb(229,35,4)"/><text x="1164.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.30%)</title><rect x="1161" y="132" width="4" height="15" fill="rgb(237,162,47)"/><text x="1164.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.30%)</title><rect x="1161" y="148" width="4" height="15" fill="rgb(212,9,2)"/><text x="1164.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.30%)</title><rect x="1161" y="164" width="4" height="15" fill="rgb(212,103,49)"/><text x="1164.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.30%)</title><rect x="1161" y="180" width="4" height="15" fill="rgb(221,29,16)"/><text x="1164.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_classifier (skl2onnx/operator_converters/random_forest.py:65) (1 samples, 0.30%)</title><rect x="1161" y="196" width="4" height="15" fill="rgb(239,163,46)"/><text x="1164.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.30%)</title><rect x="1161" y="212" width="4" height="15" fill="rgb(211,205,22)"/><text x="1164.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.30%)</title><rect x="1161" y="228" width="4" height="15" fill="rgb(212,177,41)"/><text x="1164.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.30%)</title><rect x="1161" y="244" width="4" height="15" fill="rgb(254,128,28)"/><text x="1164.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.30%)</title><rect x="1161" y="260" width="4" height="15" fill="rgb(227,135,0)"/><text x="1164.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.30%)</title><rect x="1161" y="276" width="4" height="15" fill="rgb(239,189,28)"/><text x="1164.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.30%)</title><rect x="1161" y="292" width="4" height="15" fill="rgb(236,114,36)"/><text x="1164.00" y="302.50"></text></g><g><title>0x7f76dd26a422 (?) (1 samples, 0.30%)</title><rect x="1165" y="244" width="3" height="15" fill="rgb(205,200,0)"/><text x="1168.00" y="254.50"></text></g><g><title>0x7f76dd27089e (?) (1 samples, 0.30%)</title><rect x="1165" y="260" width="3" height="15" fill="rgb(243,113,52)"/><text x="1168.00" y="270.50"></text></g><g><title>0x7f76dd27074f (?) (1 samples, 0.30%)</title><rect x="1165" y="276" width="3" height="15" fill="rgb(210,78,9)"/><text x="1168.00" y="286.50"></text></g><g><title>0x7f76dd276a3a (?) (1 samples, 0.30%)</title><rect x="1165" y="292" width="3" height="15" fill="rgb(253,193,30)"/><text x="1168.00" y="302.50"></text></g><g><title>0x7f76e6592ab9 (?) (1 samples, 0.30%)</title><rect x="1165" y="308" width="3" height="15" fill="rgb(215,66,9)"/><text x="1168.00" y="318.50"></text></g><g><title>0x7f76e6593eab (?) (1 samples, 0.30%)</title><rect x="1165" y="324" width="3" height="15" fill="rgb(240,224,23)"/><text x="1168.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:45) (3 samples, 0.91%)</title><rect x="1161" y="52" width="11" height="15" fill="rgb(210,150,39)"/><text x="1164.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:44) (3 samples, 0.91%)</title><rect x="1161" y="68" width="11" height="15" fill="rgb(231,206,53)"/><text x="1164.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (2 samples, 0.60%)</title><rect x="1165" y="84" width="7" height="15" fill="rgb(231,167,29)"/><text x="1168.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (2 samples, 0.60%)</title><rect x="1165" y="100" width="7" height="15" fill="rgb(217,139,38)"/><text x="1168.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.60%)</title><rect x="1165" y="116" width="7" height="15" fill="rgb(230,29,23)"/><text x="1168.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.60%)</title><rect x="1165" y="132" width="7" height="15" fill="rgb(228,117,30)"/><text x="1168.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.60%)</title><rect x="1165" y="148" width="7" height="15" fill="rgb(246,195,31)"/><text x="1168.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (2 samples, 0.60%)</title><rect x="1165" y="164" width="7" height="15" fill="rgb(251,100,23)"/><text x="1168.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (2 samples, 0.60%)</title><rect x="1165" y="180" width="7" height="15" fill="rgb(235,178,14)"/><text x="1168.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (2 samples, 0.60%)</title><rect x="1165" y="196" width="7" height="15" fill="rgb(227,0,24)"/><text x="1168.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (2 samples, 0.60%)</title><rect x="1165" y="212" width="7" height="15" fill="rgb(223,34,6)"/><text x="1168.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier.py:59) (2 samples, 0.60%)</title><rect x="1165" y="228" width="7" height="15" fill="rgb(226,204,23)"/><text x="1168.00" y="238.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (1 samples, 0.30%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(228,35,14)"/><text x="1171.00" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (1 samples, 0.30%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(241,213,43)"/><text x="1171.00" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::tuple, RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::tuple (*)(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (1 samples, 0.30%)</title><rect x="1168" y="276" width="4" height="15" fill="rgb(245,163,29)"/><text x="1171.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::tuple, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (1 samples, 0.30%)</title><rect x="1168" y="292" width="4" height="15" fill="rgb(219,223,2)"/><text x="1171.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::tuple, pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (1 samples, 0.30%)</title><rect x="1168" y="308" width="4" height="15" fill="rgb(210,148,44)"/><text x="1171.00" y="318.50"></text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::tuple, RuntimeTreeEnsembleClassifierFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleClassifierFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (1 samples, 0.30%)</title><rect x="1168" y="324" width="4" height="15" fill="rgb(249,46,27)"/><text x="1171.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (1 samples, 0.30%)</title><rect x="1168" y="340" width="4" height="15" fill="rgb(244,58,27)"/><text x="1171.00" y="350.50"></text></g><g><title>pybind11::array::~array (numpy.h:538) (1 samples, 0.30%)</title><rect x="1168" y="356" width="4" height="15" fill="rgb(211,25,50)"/><text x="1171.00" y="366.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (1 samples, 0.30%)</title><rect x="1168" y="372" width="4" height="15" fill="rgb(247,220,53)"/><text x="1171.00" y="382.50"></text></g><g><title>pybind11::object::~object (pytypes.h:240) (1 samples, 0.30%)</title><rect x="1168" y="388" width="4" height="15" fill="rgb(250,115,34)"/><text x="1171.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.30%)</title><rect x="1168" y="404" width="4" height="15" fill="rgb(222,67,4)"/><text x="1171.00" y="414.50"></text></g><g><title>RuntimeTreeEnsembleClassifier&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_classifier_.cpp:392) (1 samples, 0.30%)</title><rect x="1168" y="420" width="4" height="15" fill="rgb(228,61,18)"/><text x="1171.00" y="430.50"></text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h:1983) (1 samples, 0.30%)</title><rect x="1168" y="436" width="4" height="15" fill="rgb(211,88,52)"/><text x="1171.00" y="446.50"></text></g><g><title>0x7f76e6592ab9 (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="1168" y="452" width="4" height="15" fill="rgb(228,3,43)"/><text x="1171.00" y="462.50"></text></g><g><title>0x7f76e6593ea9 (libgomp.so.1.0.0) (1 samples, 0.30%)</title><rect x="1168" y="468" width="4" height="15" fill="rgb(250,119,52)"/><text x="1171.00" y="478.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.30%)</title><rect x="1172" y="100" width="3" height="15" fill="rgb(249,144,44)"/><text x="1175.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.30%)</title><rect x="1172" y="116" width="3" height="15" fill="rgb(227,120,24)"/><text x="1175.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.30%)</title><rect x="1172" y="132" width="3" height="15" fill="rgb(233,159,15)"/><text x="1175.00" y="142.50"></text></g><g><title>load (_pickle.c:6479) (1 samples, 0.30%)</title><rect x="1172" y="148" width="3" height="15" fill="rgb(218,189,17)"/><text x="1175.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c:6335) (1 samples, 0.30%)</title><rect x="1172" y="164" width="3" height="15" fill="rgb(250,6,26)"/><text x="1175.00" y="174.50"></text></g><g><title>array__reconstruct (multiarraymodule.c:2830) (1 samples, 0.30%)</title><rect x="1172" y="180" width="3" height="15" fill="rgb(243,50,21)"/><text x="1175.00" y="190.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:28) (2 samples, 0.60%)</title><rect x="1172" y="84" width="7" height="15" fill="rgb(243,224,37)"/><text x="1175.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.30%)</title><rect x="1175" y="100" width="4" height="15" fill="rgb(210,164,46)"/><text x="1178.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.30%)</title><rect x="1175" y="116" width="4" height="15" fill="rgb(252,79,19)"/><text x="1178.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.30%)</title><rect x="1175" y="132" width="4" height="15" fill="rgb(230,218,26)"/><text x="1178.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.30%)</title><rect x="1175" y="148" width="4" height="15" fill="rgb(216,83,19)"/><text x="1178.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.30%)</title><rect x="1175" y="164" width="4" height="15" fill="rgb(253,187,16)"/><text x="1178.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1175" y="180" width="4" height="15" fill="rgb(244,96,22)"/><text x="1178.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1175" y="196" width="4" height="15" fill="rgb(243,83,53)"/><text x="1178.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1175" y="212" width="4" height="15" fill="rgb(246,177,12)"/><text x="1178.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1175" y="228" width="4" height="15" fill="rgb(240,73,18)"/><text x="1178.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(232,174,22)"/><text x="1178.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.30%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(210,26,15)"/><text x="1178.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(239,168,26)"/><text x="1178.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(230,65,28)"/><text x="1178.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1175" y="308" width="4" height="15" fill="rgb(219,145,32)"/><text x="1178.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1175" y="324" width="4" height="15" fill="rgb(225,66,14)"/><text x="1178.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1175" y="340" width="4" height="15" fill="rgb(208,81,49)"/><text x="1178.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.30%)</title><rect x="1175" y="356" width="4" height="15" fill="rgb(244,125,2)"/><text x="1178.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1175" y="372" width="4" height="15" fill="rgb(213,113,36)"/><text x="1178.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1175" y="388" width="4" height="15" fill="rgb(234,206,29)"/><text x="1178.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.30%)</title><rect x="1175" y="404" width="4" height="15" fill="rgb(244,20,47)"/><text x="1178.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.30%)</title><rect x="1175" y="420" width="4" height="15" fill="rgb(209,159,21)"/><text x="1178.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1175" y="436" width="4" height="15" fill="rgb(244,80,50)"/><text x="1178.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.30%)</title><rect x="1175" y="452" width="4" height="15" fill="rgb(218,19,11)"/><text x="1178.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.30%)</title><rect x="1175" y="468" width="4" height="15" fill="rgb(234,121,35)"/><text x="1178.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.30%)</title><rect x="1175" y="484" width="4" height="15" fill="rgb(241,100,22)"/><text x="1178.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.30%)</title><rect x="1175" y="500" width="4" height="15" fill="rgb(222,159,47)"/><text x="1178.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.30%)</title><rect x="1175" y="516" width="4" height="15" fill="rgb(252,20,21)"/><text x="1178.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.30%)</title><rect x="1175" y="532" width="4" height="15" fill="rgb(244,157,48)"/><text x="1178.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.30%)</title><rect x="1175" y="548" width="4" height="15" fill="rgb(214,2,24)"/><text x="1178.00" y="558.50"></text></g><g><title>0x7f76dc5d2af0 (?) (1 samples, 0.30%)</title><rect x="1175" y="564" width="4" height="15" fill="rgb(228,161,0)"/><text x="1178.00" y="574.50"></text></g><g><title>0x7f76dc5e51d2 (?) (1 samples, 0.30%)</title><rect x="1175" y="580" width="4" height="15" fill="rgb(223,56,14)"/><text x="1178.00" y="590.50"></text></g><g><title>0x7f76dc5e47b8 (?) (1 samples, 0.30%)</title><rect x="1175" y="596" width="4" height="15" fill="rgb(216,36,42)"/><text x="1178.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.30%)</title><rect x="1175" y="612" width="4" height="15" fill="rgb(249,209,28)"/><text x="1178.00" y="622.50"></text></g><g><title>0x7f76dc5e2994 (?) (1 samples, 0.30%)</title><rect x="1175" y="628" width="4" height="15" fill="rgb(237,1,30)"/><text x="1178.00" y="638.50"></text></g><g><title>0x7f76dc5e13c3 (?) (1 samples, 0.30%)</title><rect x="1175" y="644" width="4" height="15" fill="rgb(227,74,12)"/><text x="1178.00" y="654.50"></text></g><g><title>0x7f76dcba0842 (?) (1 samples, 0.30%)</title><rect x="1175" y="660" width="4" height="15" fill="rgb(225,67,47)"/><text x="1178.00" y="670.50"></text></g><g><title>0x7f76dcb887b0 (?) (1 samples, 0.30%)</title><rect x="1175" y="676" width="4" height="15" fill="rgb(225,115,39)"/><text x="1178.00" y="686.50"></text></g><g><title>0x7f76dcb17017 (?) (1 samples, 0.30%)</title><rect x="1175" y="692" width="4" height="15" fill="rgb(245,101,42)"/><text x="1178.00" y="702.50"></text></g><g><title>0x7f76dcb16c81 (?) (1 samples, 0.30%)</title><rect x="1175" y="708" width="4" height="15" fill="rgb(238,55,54)"/><text x="1178.00" y="718.50"></text></g><g><title>0x7f76dcb171db (?) (1 samples, 0.30%)</title><rect x="1175" y="724" width="4" height="15" fill="rgb(218,149,35)"/><text x="1178.00" y="734.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:18) (1 samples, 0.30%)</title><rect x="1179" y="100" width="3" height="15" fill="rgb(210,103,16)"/><text x="1182.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.30%)</title><rect x="1179" y="116" width="3" height="15" fill="rgb(252,25,38)"/><text x="1182.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.30%)</title><rect x="1179" y="132" width="3" height="15" fill="rgb(212,139,39)"/><text x="1182.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.30%)</title><rect x="1179" y="148" width="3" height="15" fill="rgb(253,90,43)"/><text x="1182.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.30%)</title><rect x="1179" y="164" width="3" height="15" fill="rgb(230,139,21)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.30%)</title><rect x="1179" y="180" width="3" height="15" fill="rgb(248,17,39)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.30%)</title><rect x="1179" y="196" width="3" height="15" fill="rgb(229,124,33)"/><text x="1182.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(241,172,17)"/><text x="1182.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="228" width="3" height="15" fill="rgb(221,179,52)"/><text x="1182.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(251,75,15)"/><text x="1182.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="260" width="3" height="15" fill="rgb(237,195,54)"/><text x="1182.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="276" width="3" height="15" fill="rgb(234,26,19)"/><text x="1182.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="292" width="3" height="15" fill="rgb(214,113,53)"/><text x="1182.00" y="302.50"></text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="308" width="3" height="15" fill="rgb(252,167,3)"/><text x="1182.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1179" y="324" width="3" height="15" fill="rgb(225,23,5)"/><text x="1182.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.30%)</title><rect x="1179" y="340" width="3" height="15" fill="rgb(253,200,33)"/><text x="1182.00" y="350.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.30%)</title><rect x="1182" y="196" width="4" height="15" fill="rgb(214,8,25)"/><text x="1185.00" y="206.50"></text></g><g><title>all (331 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(212,187,49)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:52) (5 samples, 1.51%)</title><rect x="1172" y="52" width="18" height="15" fill="rgb(246,49,12)"/><text x="1175.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:51) (5 samples, 1.51%)</title><rect x="1172" y="68" width="18" height="15" fill="rgb(253,143,36)"/><text x="1175.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:29) (3 samples, 0.91%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(225,124,30)"/><text x="1182.00" y="94.50"></text></g><g><title>profile (bench_RandomForestClassifier_default_b_cl_1_4_12_float_.py:23) (2 samples, 0.60%)</title><rect x="1182" y="100" width="8" height="15" fill="rgb(210,158,23)"/><text x="1185.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (2 samples, 0.60%)</title><rect x="1182" y="116" width="8" height="15" fill="rgb(241,98,21)"/><text x="1185.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (2 samples, 0.60%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(212,182,29)"/><text x="1185.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (2 samples, 0.60%)</title><rect x="1182" y="148" width="8" height="15" fill="rgb(253,4,5)"/><text x="1185.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (2 samples, 0.60%)</title><rect x="1182" y="164" width="8" height="15" fill="rgb(249,203,34)"/><text x="1185.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (2 samples, 0.60%)</title><rect x="1182" y="180" width="8" height="15" fill="rgb(207,198,49)"/><text x="1185.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.30%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(214,50,31)"/><text x="1189.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(243,124,13)"/><text x="1189.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(224,96,26)"/><text x="1189.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(244,127,32)"/><text x="1189.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(234,94,43)"/><text x="1189.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(208,227,45)"/><text x="1189.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(217,141,20)"/><text x="1189.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(220,43,16)"/><text x="1189.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(251,207,53)"/><text x="1189.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(206,49,11)"/><text x="1189.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleClassifier&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.30%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(250,185,38)"/><text x="1189.00" y="366.50"></text></g></g></svg>