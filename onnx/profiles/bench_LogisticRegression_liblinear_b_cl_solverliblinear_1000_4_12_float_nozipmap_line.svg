<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2230" onload="init(evt)" viewBox="0 0 1200 2230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2230" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2213.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2213.00"> </text><g id="frames"><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:18) (1 samples, 0.20%)</title><rect x="10" y="100" width="2" height="15" fill="rgb(205,73,22)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.20%)</title><rect x="10" y="116" width="2" height="15" fill="rgb(212,180,3)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (1 samples, 0.20%)</title><rect x="10" y="132" width="2" height="15" fill="rgb(221,113,40)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (1 samples, 0.20%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(227,4,41)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (1 samples, 0.20%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(214,177,33)"/><text x="13.00" y="174.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (1 samples, 0.20%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(242,73,22)"/><text x="13.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.20%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(244,40,26)"/><text x="13.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.20%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(246,175,25)"/><text x="13.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.20%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(244,122,16)"/><text x="13.00" y="238.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:22) (1 samples, 0.20%)</title><rect x="12" y="100" width="2" height="15" fill="rgb(209,142,6)"/><text x="15.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="17" y="116" width="2" height="15" fill="rgb(213,153,0)"/><text x="20.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="17" y="132" width="2" height="15" fill="rgb(213,55,19)"/><text x="20.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="17" y="148" width="2" height="15" fill="rgb(221,120,31)"/><text x="20.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.20%)</title><rect x="19" y="164" width="2" height="15" fill="rgb(237,26,41)"/><text x="22.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.20%)</title><rect x="21" y="180" width="3" height="15" fill="rgb(229,148,46)"/><text x="24.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.20%)</title><rect x="28" y="196" width="3" height="15" fill="rgb(230,96,3)"/><text x="31.00" y="206.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (6 samples, 1.20%)</title><rect x="19" y="148" width="14" height="15" fill="rgb(229,124,20)"/><text x="22.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.00%)</title><rect x="21" y="164" width="12" height="15" fill="rgb(213,167,54)"/><text x="24.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.80%)</title><rect x="24" y="180" width="9" height="15" fill="rgb(222,229,41)"/><text x="27.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.20%)</title><rect x="31" y="196" width="2" height="15" fill="rgb(209,10,36)"/><text x="34.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.20%)</title><rect x="45" y="212" width="2" height="15" fill="rgb(209,108,8)"/><text x="48.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (4 samples, 0.80%)</title><rect x="40" y="180" width="10" height="15" fill="rgb(244,83,14)"/><text x="43.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.80%)</title><rect x="40" y="196" width="10" height="15" fill="rgb(225,180,37)"/><text x="43.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.20%)</title><rect x="47" y="212" width="3" height="15" fill="rgb(244,74,48)"/><text x="50.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.20%)</title><rect x="50" y="196" width="2" height="15" fill="rgb(253,180,42)"/><text x="53.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.20%)</title><rect x="52" y="196" width="2" height="15" fill="rgb(243,2,3)"/><text x="55.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.80%)</title><rect x="54" y="196" width="10" height="15" fill="rgb(245,58,51)"/><text x="57.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.20%)</title><rect x="61" y="212" width="3" height="15" fill="rgb(221,210,24)"/><text x="64.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.20%)</title><rect x="69" y="212" width="2" height="15" fill="rgb(217,108,0)"/><text x="72.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.40%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(205,217,25)"/><text x="79.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.20%)</title><rect x="80" y="228" width="3" height="15" fill="rgb(224,92,32)"/><text x="83.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (9 samples, 1.80%)</title><rect x="64" y="196" width="21" height="15" fill="rgb(232,49,5)"/><text x="67.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (6 samples, 1.20%)</title><rect x="71" y="212" width="14" height="15" fill="rgb(220,170,48)"/><text x="74.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.20%)</title><rect x="83" y="228" width="2" height="15" fill="rgb(254,63,39)"/><text x="86.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.60%)</title><rect x="85" y="196" width="7" height="15" fill="rgb(246,50,13)"/><text x="88.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.60%)</title><rect x="85" y="212" width="7" height="15" fill="rgb(230,14,30)"/><text x="88.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1631) (1 samples, 0.20%)</title><rect x="90" y="228" width="2" height="15" fill="rgb(239,27,46)"/><text x="93.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.20%)</title><rect x="92" y="196" width="2" height="15" fill="rgb(233,105,45)"/><text x="95.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.20%)</title><rect x="92" y="212" width="2" height="15" fill="rgb(223,226,53)"/><text x="95.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.40%)</title><rect x="94" y="196" width="5" height="15" fill="rgb(215,199,7)"/><text x="97.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.20%)</title><rect x="97" y="212" width="2" height="15" fill="rgb(214,205,9)"/><text x="100.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.40%)</title><rect x="99" y="196" width="5" height="15" fill="rgb(223,107,4)"/><text x="102.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.20%)</title><rect x="102" y="212" width="2" height="15" fill="rgb(249,101,24)"/><text x="105.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.20%)</title><rect x="102" y="228" width="2" height="15" fill="rgb(252,15,53)"/><text x="105.00" y="238.50"></text></g><g><title>0x7f3feb983e50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="102" y="244" width="2" height="15" fill="rgb(215,178,46)"/><text x="105.00" y="254.50"></text></g><g><title>0x7f3feba4b13a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="104" y="228" width="2" height="15" fill="rgb(211,192,52)"/><text x="107.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.20%)</title><rect x="106" y="228" width="3" height="15" fill="rgb(245,184,8)"/><text x="109.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.80%)</title><rect x="104" y="196" width="9" height="15" fill="rgb(225,37,48)"/><text x="107.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 0.80%)</title><rect x="104" y="212" width="9" height="15" fill="rgb(248,182,34)"/><text x="107.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.40%)</title><rect x="109" y="228" width="4" height="15" fill="rgb(241,9,51)"/><text x="112.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.20%)</title><rect x="116" y="212" width="2" height="15" fill="rgb(239,113,21)"/><text x="119.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.20%)</title><rect x="118" y="212" width="2" height="15" fill="rgb(245,173,49)"/><text x="121.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (34 samples, 6.80%)</title><rect x="50" y="180" width="80" height="15" fill="rgb(248,154,44)"/><text x="53.00" y="190.50">decision_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.40%)</title><rect x="113" y="196" width="17" height="15" fill="rgb(209,34,47)"/><text x="116.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 0.80%)</title><rect x="120" y="212" width="10" height="15" fill="rgb(230,229,53)"/><text x="123.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.40%)</title><rect x="125" y="228" width="5" height="15" fill="rgb(254,131,24)"/><text x="128.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.20%)</title><rect x="128" y="244" width="2" height="15" fill="rgb(248,202,20)"/><text x="131.00" y="254.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.20%)</title><rect x="130" y="180" width="2" height="15" fill="rgb(222,108,47)"/><text x="133.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.20%)</title><rect x="130" y="196" width="2" height="15" fill="rgb(232,93,43)"/><text x="133.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.20%)</title><rect x="130" y="212" width="2" height="15" fill="rgb(225,94,30)"/><text x="133.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.20%)</title><rect x="130" y="228" width="2" height="15" fill="rgb(214,57,25)"/><text x="133.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.20%)</title><rect x="142" y="228" width="2" height="15" fill="rgb(222,50,21)"/><text x="145.00" y="238.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1325) (1 samples, 0.20%)</title><rect x="142" y="244" width="2" height="15" fill="rgb(205,129,27)"/><text x="145.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="144" y="260" width="2" height="15" fill="rgb(212,56,11)"/><text x="147.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="144" y="276" width="2" height="15" fill="rgb(231,22,30)"/><text x="147.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.20%)</title><rect x="144" y="292" width="2" height="15" fill="rgb(231,76,41)"/><text x="147.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.20%)</title><rect x="144" y="308" width="2" height="15" fill="rgb(231,118,14)"/><text x="147.00" y="318.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.20%)</title><rect x="144" y="324" width="2" height="15" fill="rgb(215,66,50)"/><text x="147.00" y="334.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:347) (1 samples, 0.20%)</title><rect x="144" y="340" width="2" height="15" fill="rgb(233,96,46)"/><text x="147.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.20%)</title><rect x="146" y="308" width="3" height="15" fill="rgb(240,215,15)"/><text x="149.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.40%)</title><rect x="149" y="308" width="4" height="15" fill="rgb(232,212,5)"/><text x="152.00" y="318.50"></text></g><g><title>0x7f3feab902b0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="153" y="324" width="3" height="15" fill="rgb(237,176,43)"/><text x="156.00" y="334.50"></text></g><g><title>0x7f3feb98dd5f (libc-2.29.so) (2 samples, 0.40%)</title><rect x="156" y="324" width="5" height="15" fill="rgb(234,102,50)"/><text x="159.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.80%)</title><rect x="153" y="308" width="10" height="15" fill="rgb(209,79,9)"/><text x="156.00" y="318.50"></text></g><g><title>0x7f3feb98dd6f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="161" y="324" width="2" height="15" fill="rgb(238,96,37)"/><text x="164.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1025) (1 samples, 0.20%)</title><rect x="163" y="308" width="2" height="15" fill="rgb(251,151,30)"/><text x="166.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (9 samples, 1.80%)</title><rect x="146" y="260" width="22" height="15" fill="rgb(232,164,22)"/><text x="149.00" y="270.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (9 samples, 1.80%)</title><rect x="146" y="276" width="22" height="15" fill="rgb(211,81,24)"/><text x="149.00" y="286.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (9 samples, 1.80%)</title><rect x="146" y="292" width="22" height="15" fill="rgb(235,61,43)"/><text x="149.00" y="302.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1090) (1 samples, 0.20%)</title><rect x="165" y="308" width="3" height="15" fill="rgb(232,103,6)"/><text x="168.00" y="318.50"></text></g><g><title>array_add (number.c:330) (13 samples, 2.60%)</title><rect x="139" y="196" width="31" height="15" fill="rgb(205,26,50)"/><text x="142.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 2.40%)</title><rect x="142" y="212" width="28" height="15" fill="rgb(236,198,37)"/><text x="145.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (11 samples, 2.20%)</title><rect x="144" y="228" width="26" height="15" fill="rgb(206,44,31)"/><text x="147.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (11 samples, 2.20%)</title><rect x="144" y="244" width="26" height="15" fill="rgb(213,34,54)"/><text x="147.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.20%)</title><rect x="168" y="260" width="2" height="15" fill="rgb(216,50,27)"/><text x="171.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.20%)</title><rect x="168" y="276" width="2" height="15" fill="rgb(221,113,1)"/><text x="171.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.20%)</title><rect x="168" y="292" width="2" height="15" fill="rgb(229,171,34)"/><text x="171.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.20%)</title><rect x="168" y="308" width="2" height="15" fill="rgb(221,181,19)"/><text x="171.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.20%)</title><rect x="168" y="324" width="2" height="15" fill="rgb(217,107,0)"/><text x="171.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="170" y="196" width="2" height="15" fill="rgb(234,15,46)"/><text x="173.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="170" y="212" width="2" height="15" fill="rgb(236,28,46)"/><text x="173.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="170" y="228" width="2" height="15" fill="rgb(248,15,6)"/><text x="173.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="175" y="212" width="2" height="15" fill="rgb(246,76,0)"/><text x="178.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.20%)</title><rect x="177" y="212" width="14" height="15" fill="rgb(214,49,37)"/><text x="180.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2801) (1 samples, 0.20%)</title><rect x="191" y="244" width="3" height="15" fill="rgb(231,1,23)"/><text x="194.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.20%)</title><rect x="191" y="260" width="3" height="15" fill="rgb(242,224,46)"/><text x="194.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.20%)</title><rect x="191" y="276" width="3" height="15" fill="rgb(250,226,43)"/><text x="194.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.20%)</title><rect x="191" y="292" width="3" height="15" fill="rgb(216,50,38)"/><text x="194.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:865) (1 samples, 0.20%)</title><rect x="191" y="308" width="3" height="15" fill="rgb(244,208,43)"/><text x="194.00" y="318.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c:461) (1 samples, 0.20%)</title><rect x="191" y="324" width="3" height="15" fill="rgb(212,139,19)"/><text x="194.00" y="334.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c:402) (1 samples, 0.20%)</title><rect x="191" y="340" width="3" height="15" fill="rgb(234,114,11)"/><text x="194.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.20%)</title><rect x="194" y="356" width="2" height="15" fill="rgb(233,27,42)"/><text x="197.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.20%)</title><rect x="194" y="372" width="2" height="15" fill="rgb(252,134,20)"/><text x="197.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="194" y="388" width="2" height="15" fill="rgb(244,213,9)"/><text x="197.00" y="398.50"></text></g><g><title>0x7f3feb96f2a3 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="194" y="404" width="2" height="15" fill="rgb(254,110,31)"/><text x="197.00" y="414.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (2 samples, 0.40%)</title><rect x="194" y="276" width="4" height="15" fill="rgb(218,57,17)"/><text x="197.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (2 samples, 0.40%)</title><rect x="194" y="292" width="4" height="15" fill="rgb(211,74,31)"/><text x="197.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.40%)</title><rect x="194" y="308" width="4" height="15" fill="rgb(222,119,32)"/><text x="197.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.40%)</title><rect x="194" y="324" width="4" height="15" fill="rgb(216,112,50)"/><text x="197.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.40%)</title><rect x="194" y="340" width="4" height="15" fill="rgb(224,104,40)"/><text x="197.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.20%)</title><rect x="196" y="356" width="2" height="15" fill="rgb(223,179,40)"/><text x="199.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.20%)</title><rect x="198" y="308" width="3" height="15" fill="rgb(249,169,4)"/><text x="201.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.20%)</title><rect x="198" y="324" width="3" height="15" fill="rgb(218,161,3)"/><text x="201.00" y="334.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.20%)</title><rect x="198" y="340" width="3" height="15" fill="rgb(246,223,25)"/><text x="201.00" y="350.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:816) (1 samples, 0.20%)</title><rect x="201" y="324" width="2" height="15" fill="rgb(227,192,33)"/><text x="204.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.60%)</title><rect x="201" y="308" width="7" height="15" fill="rgb(238,206,7)"/><text x="204.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.40%)</title><rect x="203" y="324" width="5" height="15" fill="rgb(239,120,37)"/><text x="206.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:146) (1 samples, 0.20%)</title><rect x="208" y="308" width="2" height="15" fill="rgb(251,71,44)"/><text x="211.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (8 samples, 1.60%)</title><rect x="194" y="244" width="18" height="15" fill="rgb(251,113,54)"/><text x="197.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (8 samples, 1.60%)</title><rect x="194" y="260" width="18" height="15" fill="rgb(211,70,39)"/><text x="197.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (6 samples, 1.20%)</title><rect x="198" y="276" width="14" height="15" fill="rgb(220,176,36)"/><text x="201.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 1.20%)</title><rect x="198" y="292" width="14" height="15" fill="rgb(235,37,15)"/><text x="201.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.20%)</title><rect x="210" y="308" width="2" height="15" fill="rgb(248,83,19)"/><text x="213.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.20%)</title><rect x="210" y="324" width="2" height="15" fill="rgb(245,55,53)"/><text x="213.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="210" y="340" width="2" height="15" fill="rgb(229,135,37)"/><text x="213.00" y="350.50"></text></g><g><title>0x7f3feb98dd62 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(251,55,46)"/><text x="213.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.20%)</title><rect x="212" y="244" width="3" height="15" fill="rgb(213,97,14)"/><text x="215.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:184) (1 samples, 0.20%)</title><rect x="212" y="260" width="3" height="15" fill="rgb(240,199,9)"/><text x="215.00" y="270.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1679) (1 samples, 0.20%)</title><rect x="212" y="276" width="3" height="15" fill="rgb(227,197,31)"/><text x="215.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3003) (1 samples, 0.20%)</title><rect x="215" y="244" width="2" height="15" fill="rgb(208,129,34)"/><text x="218.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="215" y="260" width="2" height="15" fill="rgb(219,87,46)"/><text x="218.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:434) (1 samples, 0.20%)</title><rect x="217" y="260" width="3" height="15" fill="rgb(221,206,35)"/><text x="220.00" y="270.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="222" y="292" width="2" height="15" fill="rgb(218,95,19)"/><text x="225.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (5 samples, 1.00%)</title><rect x="217" y="244" width="12" height="15" fill="rgb(220,196,6)"/><text x="220.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (4 samples, 0.80%)</title><rect x="220" y="260" width="9" height="15" fill="rgb(231,84,13)"/><text x="223.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.80%)</title><rect x="220" y="276" width="9" height="15" fill="rgb(222,123,36)"/><text x="223.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.40%)</title><rect x="224" y="292" width="5" height="15" fill="rgb(209,2,34)"/><text x="227.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.40%)</title><rect x="224" y="308" width="5" height="15" fill="rgb(249,52,18)"/><text x="227.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (25 samples, 5.00%)</title><rect x="172" y="196" width="59" height="15" fill="rgb(243,212,19)"/><text x="175.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 3.40%)</title><rect x="191" y="212" width="40" height="15" fill="rgb(206,218,9)"/><text x="194.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 3.40%)</title><rect x="191" y="228" width="40" height="15" fill="rgb(217,57,47)"/><text x="194.00" y="238.50">PyU..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.20%)</title><rect x="229" y="244" width="2" height="15" fill="rgb(225,179,29)"/><text x="232.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.20%)</title><rect x="229" y="260" width="2" height="15" fill="rgb(234,31,46)"/><text x="232.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="229" y="276" width="2" height="15" fill="rgb(226,88,52)"/><text x="232.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="229" y="292" width="2" height="15" fill="rgb(232,52,48)"/><text x="232.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.20%)</title><rect x="229" y="308" width="2" height="15" fill="rgb(234,33,18)"/><text x="232.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.20%)</title><rect x="229" y="324" width="2" height="15" fill="rgb(206,125,25)"/><text x="232.00" y="334.50"></text></g><g><title>0x7f3feb96dace (libc-2.29.so) (1 samples, 0.20%)</title><rect x="229" y="340" width="2" height="15" fill="rgb(229,78,50)"/><text x="232.00" y="350.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (43 samples, 8.60%)</title><rect x="132" y="180" width="102" height="15" fill="rgb(240,19,16)"/><text x="135.00" y="190.50">decision_fun..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.20%)</title><rect x="231" y="196" width="3" height="15" fill="rgb(228,34,34)"/><text x="234.00" y="206.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (83 samples, 16.60%)</title><rect x="40" y="164" width="196" height="15" fill="rgb(205,46,53)"/><text x="43.00" y="174.50">_predict_proba_lr (sklear..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:277) (1 samples, 0.20%)</title><rect x="234" y="180" width="2" height="15" fill="rgb(238,132,5)"/><text x="237.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.20%)</title><rect x="236" y="196" width="2" height="15" fill="rgb(242,211,20)"/><text x="239.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.20%)</title><rect x="236" y="212" width="2" height="15" fill="rgb(254,79,18)"/><text x="239.00" y="222.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.20%)</title><rect x="238" y="244" width="3" height="15" fill="rgb(214,90,12)"/><text x="241.00" y="254.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.20%)</title><rect x="238" y="260" width="3" height="15" fill="rgb(206,139,25)"/><text x="241.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.20%)</title><rect x="238" y="276" width="3" height="15" fill="rgb(246,14,7)"/><text x="241.00" y="286.50"></text></g><g><title>0x7f3feb9257c2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="238" y="292" width="3" height="15" fill="rgb(234,220,31)"/><text x="241.00" y="302.50"></text></g><g><title>0x7f3feb9257c2 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="238" y="308" width="3" height="15" fill="rgb(230,171,48)"/><text x="241.00" y="318.50"></text></g><g><title>0x7f3feb925a19 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="238" y="324" width="3" height="15" fill="rgb(208,103,12)"/><text x="241.00" y="334.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c:575) (1 samples, 0.20%)</title><rect x="238" y="340" width="3" height="15" fill="rgb(209,193,18)"/><text x="241.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.20%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(245,81,34)"/><text x="244.00" y="286.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:312) (1 samples, 0.20%)</title><rect x="241" y="292" width="2" height="15" fill="rgb(206,120,48)"/><text x="244.00" y="302.50"></text></g><g><title>add_128 (npy_extint128.h:135) (1 samples, 0.20%)</title><rect x="241" y="308" width="2" height="15" fill="rgb(235,188,7)"/><text x="244.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.60%)</title><rect x="238" y="212" width="8" height="15" fill="rgb(233,197,40)"/><text x="241.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.60%)</title><rect x="238" y="228" width="8" height="15" fill="rgb(223,33,53)"/><text x="241.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.40%)</title><rect x="241" y="244" width="5" height="15" fill="rgb(217,190,20)"/><text x="244.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.40%)</title><rect x="241" y="260" width="5" height="15" fill="rgb(212,221,19)"/><text x="244.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:404) (1 samples, 0.20%)</title><rect x="243" y="276" width="3" height="15" fill="rgb(248,99,28)"/><text x="246.00" y="286.50"></text></g><g><title>to_64 (npy_extint128.h:80) (1 samples, 0.20%)</title><rect x="243" y="292" width="3" height="15" fill="rgb(208,27,38)"/><text x="246.00" y="302.50"></text></g><g><title>0x7f3fd6c569da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="246" y="244" width="2" height="15" fill="rgb(238,79,31)"/><text x="249.00" y="254.50"></text></g><g><title>0x7f3fd6c77254 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="248" y="260" width="2" height="15" fill="rgb(229,188,3)"/><text x="251.00" y="270.50"></text></g><g><title>0x7f3fd6c34fe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="255" y="276" width="2" height="15" fill="rgb(211,109,14)"/><text x="258.00" y="286.50"></text></g><g><title>0x7f3febab91b0 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="276" y="292" width="3" height="15" fill="rgb(245,158,8)"/><text x="279.00" y="302.50"></text></g><g><title>0x7f3febb3fba0 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="279" y="292" width="2" height="15" fill="rgb(234,88,4)"/><text x="282.00" y="302.50"></text></g><g><title>0x7f3febb3fbb4 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="281" y="292" width="2" height="15" fill="rgb(211,125,4)"/><text x="284.00" y="302.50"></text></g><g><title>0x7f3febb3fbd3 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="283" y="292" width="3" height="15" fill="rgb(222,133,25)"/><text x="286.00" y="302.50"></text></g><g><title>0x7f3febb3fbf9 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="286" y="292" width="4" height="15" fill="rgb(220,147,21)"/><text x="289.00" y="302.50"></text></g><g><title>0x7f3febb3fc07 (libm-2.29.so) (3 samples, 0.60%)</title><rect x="290" y="292" width="7" height="15" fill="rgb(252,14,51)"/><text x="293.00" y="302.50"></text></g><g><title>0x7f3febb3fc18 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="297" y="292" width="3" height="15" fill="rgb(252,187,30)"/><text x="300.00" y="302.50"></text></g><g><title>0x7f3febb3fc2e (libm-2.29.so) (2 samples, 0.40%)</title><rect x="300" y="292" width="5" height="15" fill="rgb(244,191,1)"/><text x="303.00" y="302.50"></text></g><g><title>0x7f3febb3fc3e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="305" y="292" width="2" height="15" fill="rgb(218,213,39)"/><text x="308.00" y="302.50"></text></g><g><title>0x7f3febb3fc56 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="307" y="292" width="2" height="15" fill="rgb(205,150,48)"/><text x="310.00" y="302.50"></text></g><g><title>0x7f3febb3fc6a (libm-2.29.so) (1 samples, 0.20%)</title><rect x="309" y="292" width="3" height="15" fill="rgb(242,199,29)"/><text x="312.00" y="302.50"></text></g><g><title>0x7f3fd6c77265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (28 samples, 5.60%)</title><rect x="250" y="260" width="66" height="15" fill="rgb(230,175,30)"/><text x="253.00" y="270.50">0x7f3fd..</text></g><g><title>exp (libm-2.29.so) (25 samples, 5.00%)</title><rect x="257" y="276" width="59" height="15" fill="rgb(244,63,52)"/><text x="260.00" y="286.50">exp (l..</text></g><g><title>0x7f3febb3fc7b (libm-2.29.so) (2 samples, 0.40%)</title><rect x="312" y="292" width="4" height="15" fill="rgb(211,104,9)"/><text x="315.00" y="302.50"></text></g><g><title>0x7f3fd6c569dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (41 samples, 8.20%)</title><rect x="248" y="244" width="97" height="15" fill="rgb(251,216,18)"/><text x="251.00" y="254.50">0x7f3fd6c56..</text></g><g><title>0x7f3fd6c77279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (12 samples, 2.40%)</title><rect x="316" y="260" width="29" height="15" fill="rgb(212,159,17)"/><text x="319.00" y="270.50">0x..</text></g><g><title>0x7f3fd6c569e5 (?) (1 samples, 0.20%)</title><rect x="345" y="244" width="2" height="15" fill="rgb(250,22,0)"/><text x="348.00" y="254.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (49 samples, 9.80%)</title><rect x="236" y="164" width="116" height="15" fill="rgb(247,4,48)"/><text x="239.00" y="174.50">_predict_proba..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (49 samples, 9.80%)</title><rect x="236" y="180" width="116" height="15" fill="rgb(208,7,18)"/><text x="239.00" y="190.50">ufunc_generic_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (48 samples, 9.60%)</title><rect x="238" y="196" width="114" height="15" fill="rgb(240,48,14)"/><text x="241.00" y="206.50">PyUFunc_Generi..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (45 samples, 9.00%)</title><rect x="246" y="212" width="106" height="15" fill="rgb(213,169,40)"/><text x="249.00" y="222.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (45 samples, 9.00%)</title><rect x="246" y="228" width="106" height="15" fill="rgb(211,126,21)"/><text x="249.00" y="238.50">trivial_two_..</text></g><g><title>0x7f3fd6c569e5 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="347" y="244" width="5" height="15" fill="rgb(222,29,13)"/><text x="350.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:40) (1 samples, 0.20%)</title><rect x="354" y="196" width="2" height="15" fill="rgb(218,189,49)"/><text x="357.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.40%)</title><rect x="354" y="180" width="5" height="15" fill="rgb(205,21,38)"/><text x="357.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.20%)</title><rect x="356" y="196" width="3" height="15" fill="rgb(248,156,1)"/><text x="359.00" y="206.50"></text></g><g><title>0x7f3feb983730 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="356" y="212" width="3" height="15" fill="rgb(213,172,26)"/><text x="359.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.20%)</title><rect x="361" y="196" width="3" height="15" fill="rgb(235,29,48)"/><text x="364.00" y="206.50"></text></g><g><title>array_reshape (methods.c:195) (3 samples, 0.60%)</title><rect x="359" y="180" width="7" height="15" fill="rgb(233,153,19)"/><text x="362.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.20%)</title><rect x="364" y="196" width="2" height="15" fill="rgb(228,222,3)"/><text x="367.00" y="206.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:962) (1 samples, 0.20%)</title><rect x="364" y="212" width="2" height="15" fill="rgb(206,39,20)"/><text x="367.00" y="222.50"></text></g><g><title>0x7f3feab8f7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="364" y="228" width="2" height="15" fill="rgb(217,221,38)"/><text x="367.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (2 samples, 0.40%)</title><rect x="368" y="228" width="5" height="15" fill="rgb(237,212,52)"/><text x="371.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.40%)</title><rect x="368" y="244" width="5" height="15" fill="rgb(206,37,4)"/><text x="371.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (2 samples, 0.40%)</title><rect x="368" y="260" width="5" height="15" fill="rgb(228,164,30)"/><text x="371.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (2 samples, 0.40%)</title><rect x="368" y="276" width="5" height="15" fill="rgb(237,56,33)"/><text x="371.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (2 samples, 0.40%)</title><rect x="368" y="292" width="5" height="15" fill="rgb(230,68,45)"/><text x="371.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (2 samples, 0.40%)</title><rect x="368" y="308" width="5" height="15" fill="rgb(232,141,0)"/><text x="371.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.20%)</title><rect x="373" y="276" width="2" height="15" fill="rgb(213,206,48)"/><text x="376.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.20%)</title><rect x="373" y="292" width="2" height="15" fill="rgb(219,16,16)"/><text x="376.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.20%)</title><rect x="373" y="308" width="2" height="15" fill="rgb(221,227,33)"/><text x="376.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.20%)</title><rect x="373" y="324" width="2" height="15" fill="rgb(221,218,51)"/><text x="376.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.20%)</title><rect x="373" y="340" width="2" height="15" fill="rgb(215,66,22)"/><text x="376.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.20%)</title><rect x="373" y="356" width="2" height="15" fill="rgb(236,93,45)"/><text x="376.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.20%)</title><rect x="373" y="372" width="2" height="15" fill="rgb(247,97,34)"/><text x="376.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:235) (1 samples, 0.20%)</title><rect x="375" y="292" width="3" height="15" fill="rgb(246,217,16)"/><text x="378.00" y="302.50"></text></g><g><title>0x7f3feb98e14a (libc-2.29.so) (1 samples, 0.20%)</title><rect x="375" y="308" width="3" height="15" fill="rgb(214,125,33)"/><text x="378.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3218) (1 samples, 0.20%)</title><rect x="378" y="308" width="2" height="15" fill="rgb(237,220,41)"/><text x="381.00" y="318.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.20%)</title><rect x="378" y="324" width="2" height="15" fill="rgb(246,212,3)"/><text x="381.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (2 samples, 0.40%)</title><rect x="378" y="292" width="4" height="15" fill="rgb(211,160,43)"/><text x="381.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3232) (1 samples, 0.20%)</title><rect x="380" y="308" width="2" height="15" fill="rgb(225,186,3)"/><text x="383.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (4 samples, 0.80%)</title><rect x="375" y="276" width="10" height="15" fill="rgb(218,202,24)"/><text x="378.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:471) (1 samples, 0.20%)</title><rect x="382" y="292" width="3" height="15" fill="rgb(220,140,39)"/><text x="385.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.20%)</title><rect x="382" y="308" width="3" height="15" fill="rgb(208,138,17)"/><text x="385.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="382" y="324" width="3" height="15" fill="rgb(215,162,6)"/><text x="385.00" y="334.50"></text></g><g><title>0x7f3feb96f8a8 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="382" y="340" width="3" height="15" fill="rgb(210,209,27)"/><text x="385.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (3 samples, 0.60%)</title><rect x="385" y="292" width="7" height="15" fill="rgb(205,174,12)"/><text x="388.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.20%)</title><rect x="392" y="292" width="2" height="15" fill="rgb(243,223,4)"/><text x="395.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.20%)</title><rect x="394" y="292" width="3" height="15" fill="rgb(217,42,14)"/><text x="397.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (5 samples, 1.00%)</title><rect x="397" y="308" width="11" height="15" fill="rgb(207,222,7)"/><text x="400.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.20%)</title><rect x="408" y="308" width="3" height="15" fill="rgb(237,12,31)"/><text x="411.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (4 samples, 0.80%)</title><rect x="411" y="308" width="9" height="15" fill="rgb(220,126,32)"/><text x="414.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.20%)</title><rect x="418" y="324" width="2" height="15" fill="rgb(239,165,5)"/><text x="421.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.20%)</title><rect x="420" y="308" width="3" height="15" fill="rgb(247,113,22)"/><text x="423.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:239) (3 samples, 0.60%)</title><rect x="423" y="308" width="7" height="15" fill="rgb(246,226,18)"/><text x="426.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (28 samples, 5.60%)</title><rect x="366" y="180" width="66" height="15" fill="rgb(239,58,8)"/><text x="369.00" y="190.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c:108) (28 samples, 5.60%)</title><rect x="366" y="196" width="66" height="15" fill="rgb(249,179,50)"/><text x="369.00" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py:38) (27 samples, 5.40%)</title><rect x="368" y="212" width="64" height="15" fill="rgb(240,78,13)"/><text x="371.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (25 samples, 5.00%)</title><rect x="373" y="228" width="59" height="15" fill="rgb(210,204,28)"/><text x="376.00" y="238.50">ufunc_..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (25 samples, 5.00%)</title><rect x="373" y="244" width="59" height="15" fill="rgb(240,177,18)"/><text x="376.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (25 samples, 5.00%)</title><rect x="373" y="260" width="59" height="15" fill="rgb(224,4,44)"/><text x="376.00" y="270.50">PyUFun..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (20 samples, 4.00%)</title><rect x="385" y="276" width="47" height="15" fill="rgb(244,154,22)"/><text x="388.00" y="286.50">PyUF..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (15 samples, 3.00%)</title><rect x="397" y="292" width="35" height="15" fill="rgb(245,188,26)"/><text x="400.00" y="302.50">re..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:255) (1 samples, 0.20%)</title><rect x="430" y="308" width="2" height="15" fill="rgb(213,187,26)"/><text x="433.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1844) (1 samples, 0.20%)</title><rect x="430" y="324" width="2" height="15" fill="rgb(209,174,27)"/><text x="433.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.20%)</title><rect x="432" y="196" width="2" height="15" fill="rgb(239,117,19)"/><text x="435.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.40%)</title><rect x="432" y="180" width="5" height="15" fill="rgb(252,102,29)"/><text x="435.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.20%)</title><rect x="434" y="196" width="3" height="15" fill="rgb(227,48,3)"/><text x="437.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c:85) (1 samples, 0.20%)</title><rect x="434" y="212" width="3" height="15" fill="rgb(245,174,19)"/><text x="437.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.20%)</title><rect x="437" y="196" width="2" height="15" fill="rgb(206,175,29)"/><text x="440.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="439" y="228" width="2" height="15" fill="rgb(208,44,47)"/><text x="442.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.20%)</title><rect x="439" y="244" width="2" height="15" fill="rgb(243,219,18)"/><text x="442.00" y="254.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3260) (1 samples, 0.20%)</title><rect x="439" y="260" width="2" height="15" fill="rgb(246,207,8)"/><text x="442.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (3 samples, 0.60%)</title><rect x="441" y="276" width="7" height="15" fill="rgb(252,119,37)"/><text x="444.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (7 samples, 1.40%)</title><rect x="441" y="228" width="17" height="15" fill="rgb(226,206,35)"/><text x="444.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (7 samples, 1.40%)</title><rect x="441" y="244" width="17" height="15" fill="rgb(224,162,40)"/><text x="444.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (7 samples, 1.40%)</title><rect x="441" y="260" width="17" height="15" fill="rgb(230,48,0)"/><text x="444.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (4 samples, 0.80%)</title><rect x="448" y="276" width="10" height="15" fill="rgb(225,10,36)"/><text x="451.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.20%)</title><rect x="456" y="292" width="2" height="15" fill="rgb(205,123,7)"/><text x="459.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:38) (195 samples, 39.00%)</title><rect x="10" y="52" width="460" height="15" fill="rgb(245,213,16)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblin..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:37) (195 samples, 39.00%)</title><rect x="10" y="68" width="460" height="15" fill="rgb(243,157,15)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_solverlib..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (195 samples, 39.00%)</title><rect x="10" y="84" width="460" height="15" fill="rgb(205,36,9)"/><text x="13.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_solverl..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (193 samples, 38.60%)</title><rect x="14" y="100" width="456" height="15" fill="rgb(229,2,25)"/><text x="17.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_solverlibline..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 38.20%)</title><rect x="19" y="116" width="451" height="15" fill="rgb(250,149,39)"/><text x="22.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (191 samples, 38.20%)</title><rect x="19" y="132" width="451" height="15" fill="rgb(208,30,48)"/><text x="22.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (185 samples, 37.00%)</title><rect x="33" y="148" width="437" height="15" fill="rgb(239,46,5)"/><text x="36.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py:1649)</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (50 samples, 10.00%)</title><rect x="352" y="164" width="118" height="15" fill="rgb(209,89,34)"/><text x="355.00" y="174.50">_predict_proba..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (14 samples, 2.80%)</title><rect x="437" y="180" width="33" height="15" fill="rgb(249,91,15)"/><text x="440.00" y="190.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (13 samples, 2.60%)</title><rect x="439" y="196" width="31" height="15" fill="rgb(211,77,34)"/><text x="442.00" y="206.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (13 samples, 2.60%)</title><rect x="439" y="212" width="31" height="15" fill="rgb(212,193,45)"/><text x="442.00" y="222.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (5 samples, 1.00%)</title><rect x="458" y="228" width="12" height="15" fill="rgb(253,165,6)"/><text x="461.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (5 samples, 1.00%)</title><rect x="458" y="244" width="12" height="15" fill="rgb(252,200,44)"/><text x="461.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (5 samples, 1.00%)</title><rect x="458" y="260" width="12" height="15" fill="rgb(237,102,40)"/><text x="461.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (5 samples, 1.00%)</title><rect x="458" y="276" width="12" height="15" fill="rgb(252,71,28)"/><text x="461.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (5 samples, 1.00%)</title><rect x="458" y="292" width="12" height="15" fill="rgb(247,84,9)"/><text x="461.00" y="302.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.20%)</title><rect x="470" y="244" width="2" height="15" fill="rgb(210,165,27)"/><text x="473.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="470" y="260" width="2" height="15" fill="rgb(207,158,0)"/><text x="473.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="276" width="2" height="15" fill="rgb(211,71,42)"/><text x="473.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="292" width="2" height="15" fill="rgb(212,217,21)"/><text x="473.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="470" y="308" width="2" height="15" fill="rgb(253,166,21)"/><text x="473.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="470" y="324" width="2" height="15" fill="rgb(221,46,40)"/><text x="473.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="470" y="340" width="2" height="15" fill="rgb(221,171,33)"/><text x="473.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="356" width="2" height="15" fill="rgb(236,97,19)"/><text x="473.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.20%)</title><rect x="470" y="372" width="2" height="15" fill="rgb(215,169,22)"/><text x="473.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="470" y="388" width="2" height="15" fill="rgb(206,164,28)"/><text x="473.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="404" width="2" height="15" fill="rgb(243,38,0)"/><text x="473.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="420" width="2" height="15" fill="rgb(221,209,9)"/><text x="473.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="470" y="436" width="2" height="15" fill="rgb(213,27,18)"/><text x="473.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="470" y="452" width="2" height="15" fill="rgb(220,210,49)"/><text x="473.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="470" y="468" width="2" height="15" fill="rgb(212,153,12)"/><text x="473.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="484" width="2" height="15" fill="rgb(254,180,6)"/><text x="473.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.20%)</title><rect x="470" y="500" width="2" height="15" fill="rgb(223,64,7)"/><text x="473.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="470" y="516" width="2" height="15" fill="rgb(252,113,11)"/><text x="473.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="532" width="2" height="15" fill="rgb(246,14,2)"/><text x="473.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="548" width="2" height="15" fill="rgb(245,87,1)"/><text x="473.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="470" y="564" width="2" height="15" fill="rgb(249,89,14)"/><text x="473.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="470" y="580" width="2" height="15" fill="rgb(251,108,25)"/><text x="473.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="470" y="596" width="2" height="15" fill="rgb(250,96,11)"/><text x="473.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="612" width="2" height="15" fill="rgb(230,79,49)"/><text x="473.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.20%)</title><rect x="470" y="628" width="2" height="15" fill="rgb(250,68,34)"/><text x="473.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="644" width="2" height="15" fill="rgb(219,130,13)"/><text x="473.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="470" y="660" width="2" height="15" fill="rgb(225,116,27)"/><text x="473.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="676" width="2" height="15" fill="rgb(238,61,40)"/><text x="473.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="692" width="2" height="15" fill="rgb(224,221,53)"/><text x="473.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="470" y="708" width="2" height="15" fill="rgb(225,53,33)"/><text x="473.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="470" y="724" width="2" height="15" fill="rgb(212,178,36)"/><text x="473.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="470" y="740" width="2" height="15" fill="rgb(226,182,39)"/><text x="473.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="756" width="2" height="15" fill="rgb(249,53,9)"/><text x="473.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:13) (1 samples, 0.20%)</title><rect x="470" y="772" width="2" height="15" fill="rgb(242,177,51)"/><text x="473.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="470" y="788" width="2" height="15" fill="rgb(225,41,2)"/><text x="473.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="470" y="804" width="2" height="15" fill="rgb(241,229,9)"/><text x="473.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="470" y="820" width="2" height="15" fill="rgb(239,73,14)"/><text x="473.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="470" y="836" width="2" height="15" fill="rgb(213,198,10)"/><text x="473.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.20%)</title><rect x="470" y="852" width="2" height="15" fill="rgb(242,15,10)"/><text x="473.00" y="862.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.20%)</title><rect x="470" y="868" width="2" height="15" fill="rgb(231,109,4)"/><text x="473.00" y="878.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.20%)</title><rect x="470" y="884" width="2" height="15" fill="rgb(232,73,4)"/><text x="473.00" y="894.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.20%)</title><rect x="470" y="900" width="2" height="15" fill="rgb(235,98,5)"/><text x="473.00" y="910.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.20%)</title><rect x="470" y="916" width="2" height="15" fill="rgb(252,224,20)"/><text x="473.00" y="926.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:313) (1 samples, 0.20%)</title><rect x="470" y="932" width="2" height="15" fill="rgb(229,214,48)"/><text x="473.00" y="942.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.20%)</title><rect x="470" y="948" width="2" height="15" fill="rgb(212,183,24)"/><text x="473.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.20%)</title><rect x="470" y="964" width="2" height="15" fill="rgb(225,172,39)"/><text x="473.00" y="974.50"></text></g><g><title>unicode_rstrip (python3.7) (1 samples, 0.20%)</title><rect x="470" y="980" width="2" height="15" fill="rgb(233,137,51)"/><text x="473.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:1) (2 samples, 0.40%)</title><rect x="470" y="148" width="4" height="15" fill="rgb(244,191,53)"/><text x="473.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="470" y="164" width="4" height="15" fill="rgb(238,205,45)"/><text x="473.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="470" y="180" width="4" height="15" fill="rgb(216,69,34)"/><text x="473.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="470" y="196" width="4" height="15" fill="rgb(241,92,28)"/><text x="473.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="470" y="212" width="4" height="15" fill="rgb(242,30,49)"/><text x="473.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="470" y="228" width="4" height="15" fill="rgb(245,47,19)"/><text x="473.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.20%)</title><rect x="472" y="244" width="2" height="15" fill="rgb(227,46,1)"/><text x="475.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="472" y="260" width="2" height="15" fill="rgb(229,30,8)"/><text x="475.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="472" y="276" width="2" height="15" fill="rgb(241,46,26)"/><text x="475.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="472" y="292" width="2" height="15" fill="rgb(226,107,42)"/><text x="475.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="472" y="308" width="2" height="15" fill="rgb(243,185,31)"/><text x="475.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="472" y="324" width="2" height="15" fill="rgb(251,154,31)"/><text x="475.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="472" y="340" width="2" height="15" fill="rgb(242,31,11)"/><text x="475.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="472" y="356" width="2" height="15" fill="rgb(213,32,21)"/><text x="475.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:12) (1 samples, 0.20%)</title><rect x="472" y="372" width="2" height="15" fill="rgb(251,205,45)"/><text x="475.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="472" y="388" width="2" height="15" fill="rgb(225,89,1)"/><text x="475.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="472" y="404" width="2" height="15" fill="rgb(216,74,25)"/><text x="475.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="472" y="420" width="2" height="15" fill="rgb(209,107,41)"/><text x="475.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="472" y="436" width="2" height="15" fill="rgb(233,48,3)"/><text x="475.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="472" y="452" width="2" height="15" fill="rgb(247,98,54)"/><text x="475.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/nanfunctions.py:727) (1 samples, 0.20%)</title><rect x="472" y="468" width="2" height="15" fill="rgb(210,158,46)"/><text x="475.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.20%)</title><rect x="472" y="484" width="2" height="15" fill="rgb(220,150,34)"/><text x="475.00" y="494.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.20%)</title><rect x="474" y="852" width="3" height="15" fill="rgb(247,98,27)"/><text x="477.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.20%)</title><rect x="474" y="868" width="3" height="15" fill="rgb(225,136,21)"/><text x="477.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.20%)</title><rect x="474" y="884" width="3" height="15" fill="rgb(251,46,38)"/><text x="477.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.20%)</title><rect x="474" y="900" width="3" height="15" fill="rgb(245,107,26)"/><text x="477.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.20%)</title><rect x="474" y="916" width="3" height="15" fill="rgb(210,151,23)"/><text x="477.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.20%)</title><rect x="474" y="932" width="3" height="15" fill="rgb(218,176,41)"/><text x="477.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.20%)</title><rect x="474" y="948" width="3" height="15" fill="rgb(221,179,26)"/><text x="477.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.20%)</title><rect x="474" y="964" width="3" height="15" fill="rgb(213,210,28)"/><text x="477.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.20%)</title><rect x="474" y="980" width="3" height="15" fill="rgb(252,145,50)"/><text x="477.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.20%)</title><rect x="474" y="996" width="3" height="15" fill="rgb(251,60,0)"/><text x="477.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.20%)</title><rect x="474" y="1012" width="3" height="15" fill="rgb(216,92,13)"/><text x="477.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="474" y="1028" width="3" height="15" fill="rgb(243,81,33)"/><text x="477.00" y="1038.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.20%)</title><rect x="474" y="1044" width="3" height="15" fill="rgb(208,105,2)"/><text x="477.00" y="1054.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.20%)</title><rect x="474" y="1060" width="3" height="15" fill="rgb(225,210,17)"/><text x="477.00" y="1070.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.20%)</title><rect x="477" y="852" width="2" height="15" fill="rgb(206,225,5)"/><text x="480.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.20%)</title><rect x="477" y="868" width="2" height="15" fill="rgb(216,140,26)"/><text x="480.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.20%)</title><rect x="477" y="884" width="2" height="15" fill="rgb(239,108,28)"/><text x="480.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.20%)</title><rect x="477" y="900" width="2" height="15" fill="rgb(206,187,23)"/><text x="480.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.20%)</title><rect x="477" y="916" width="2" height="15" fill="rgb(237,104,23)"/><text x="480.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.20%)</title><rect x="477" y="932" width="2" height="15" fill="rgb(228,106,53)"/><text x="480.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.20%)</title><rect x="477" y="948" width="2" height="15" fill="rgb(251,187,40)"/><text x="480.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1388) (1 samples, 0.20%)</title><rect x="477" y="964" width="2" height="15" fill="rgb(230,224,45)"/><text x="480.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;:102) (1 samples, 0.20%)</title><rect x="477" y="980" width="2" height="15" fill="rgb(210,38,47)"/><text x="480.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.20%)</title><rect x="477" y="996" width="2" height="15" fill="rgb(239,131,11)"/><text x="480.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.20%)</title><rect x="477" y="1012" width="2" height="15" fill="rgb(247,174,30)"/><text x="480.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.20%)</title><rect x="477" y="1028" width="2" height="15" fill="rgb(230,112,18)"/><text x="480.00" y="1038.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.20%)</title><rect x="479" y="884" width="3" height="15" fill="rgb(221,98,11)"/><text x="482.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.20%)</title><rect x="479" y="900" width="3" height="15" fill="rgb(251,24,50)"/><text x="482.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="479" y="916" width="3" height="15" fill="rgb(219,106,16)"/><text x="482.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.20%)</title><rect x="479" y="932" width="3" height="15" fill="rgb(239,125,9)"/><text x="482.00" y="942.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (2 samples, 0.40%)</title><rect x="482" y="900" width="4" height="15" fill="rgb(210,189,31)"/><text x="485.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.20%)</title><rect x="484" y="916" width="2" height="15" fill="rgb(208,185,39)"/><text x="487.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.20%)</title><rect x="486" y="900" width="3" height="15" fill="rgb(212,183,29)"/><text x="489.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.20%)</title><rect x="486" y="916" width="3" height="15" fill="rgb(222,164,46)"/><text x="489.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="486" y="932" width="3" height="15" fill="rgb(212,77,15)"/><text x="489.00" y="942.50"></text></g><g><title>0x7f3feb9ad237 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="486" y="948" width="3" height="15" fill="rgb(235,178,40)"/><text x="489.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:209) (1 samples, 0.20%)</title><rect x="489" y="964" width="2" height="15" fill="rgb(248,20,14)"/><text x="492.00" y="974.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.20%)</title><rect x="489" y="980" width="2" height="15" fill="rgb(244,222,7)"/><text x="492.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 1.60%)</title><rect x="474" y="820" width="19" height="15" fill="rgb(248,50,26)"/><text x="477.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 1.60%)</title><rect x="474" y="836" width="19" height="15" fill="rgb(205,50,13)"/><text x="477.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (6 samples, 1.20%)</title><rect x="479" y="852" width="14" height="15" fill="rgb(241,86,43)"/><text x="482.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (6 samples, 1.20%)</title><rect x="479" y="868" width="14" height="15" fill="rgb(222,44,14)"/><text x="482.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (5 samples, 1.00%)</title><rect x="482" y="884" width="11" height="15" fill="rgb(236,150,26)"/><text x="485.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.40%)</title><rect x="489" y="900" width="4" height="15" fill="rgb(230,100,39)"/><text x="492.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.40%)</title><rect x="489" y="916" width="4" height="15" fill="rgb(229,99,5)"/><text x="492.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (2 samples, 0.40%)</title><rect x="489" y="932" width="4" height="15" fill="rgb(208,93,26)"/><text x="492.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (2 samples, 0.40%)</title><rect x="489" y="948" width="4" height="15" fill="rgb(222,160,26)"/><text x="492.00" y="958.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.20%)</title><rect x="491" y="964" width="2" height="15" fill="rgb(249,27,23)"/><text x="494.00" y="974.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.20%)</title><rect x="491" y="980" width="2" height="15" fill="rgb(254,171,4)"/><text x="494.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:2) (9 samples, 1.80%)</title><rect x="474" y="148" width="22" height="15" fill="rgb(231,139,38)"/><text x="477.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="164" width="22" height="15" fill="rgb(209,175,9)"/><text x="477.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.80%)</title><rect x="474" y="180" width="22" height="15" fill="rgb(206,16,8)"/><text x="477.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="196" width="22" height="15" fill="rgb(224,98,36)"/><text x="477.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="212" width="22" height="15" fill="rgb(245,20,39)"/><text x="477.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="228" width="22" height="15" fill="rgb(243,161,30)"/><text x="477.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="244" width="22" height="15" fill="rgb(236,84,6)"/><text x="477.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="260" width="22" height="15" fill="rgb(235,96,30)"/><text x="477.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="276" width="22" height="15" fill="rgb(219,66,43)"/><text x="477.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 1.80%)</title><rect x="474" y="292" width="22" height="15" fill="rgb(233,215,44)"/><text x="477.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="308" width="22" height="15" fill="rgb(248,113,30)"/><text x="477.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="324" width="22" height="15" fill="rgb(216,216,8)"/><text x="477.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="340" width="22" height="15" fill="rgb(244,184,37)"/><text x="477.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="356" width="22" height="15" fill="rgb(244,11,19)"/><text x="477.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="372" width="22" height="15" fill="rgb(229,59,28)"/><text x="477.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 1.80%)</title><rect x="474" y="388" width="22" height="15" fill="rgb(210,177,13)"/><text x="477.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="404" width="22" height="15" fill="rgb(244,41,43)"/><text x="477.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="420" width="22" height="15" fill="rgb(230,131,32)"/><text x="477.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="436" width="22" height="15" fill="rgb(228,218,9)"/><text x="477.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="452" width="22" height="15" fill="rgb(241,120,46)"/><text x="477.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="468" width="22" height="15" fill="rgb(254,106,34)"/><text x="477.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 1.80%)</title><rect x="474" y="484" width="22" height="15" fill="rgb(246,0,27)"/><text x="477.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="500" width="22" height="15" fill="rgb(219,176,52)"/><text x="477.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="516" width="22" height="15" fill="rgb(223,17,14)"/><text x="477.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="532" width="22" height="15" fill="rgb(231,110,15)"/><text x="477.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="548" width="22" height="15" fill="rgb(227,95,12)"/><text x="477.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="564" width="22" height="15" fill="rgb(226,181,21)"/><text x="477.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 1.80%)</title><rect x="474" y="580" width="22" height="15" fill="rgb(250,62,23)"/><text x="477.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="596" width="22" height="15" fill="rgb(214,150,23)"/><text x="477.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.80%)</title><rect x="474" y="612" width="22" height="15" fill="rgb(224,179,28)"/><text x="477.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="628" width="22" height="15" fill="rgb(217,140,25)"/><text x="477.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="644" width="22" height="15" fill="rgb(224,61,41)"/><text x="477.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="660" width="22" height="15" fill="rgb(237,73,44)"/><text x="477.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="676" width="22" height="15" fill="rgb(237,14,33)"/><text x="477.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="692" width="22" height="15" fill="rgb(248,210,14)"/><text x="477.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="708" width="22" height="15" fill="rgb(215,112,33)"/><text x="477.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 1.80%)</title><rect x="474" y="724" width="22" height="15" fill="rgb(254,153,5)"/><text x="477.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.80%)</title><rect x="474" y="740" width="22" height="15" fill="rgb(238,117,16)"/><text x="477.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.80%)</title><rect x="474" y="756" width="22" height="15" fill="rgb(217,157,16)"/><text x="477.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.80%)</title><rect x="474" y="772" width="22" height="15" fill="rgb(243,7,14)"/><text x="477.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.80%)</title><rect x="474" y="788" width="22" height="15" fill="rgb(207,191,16)"/><text x="477.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.80%)</title><rect x="474" y="804" width="22" height="15" fill="rgb(253,34,19)"/><text x="477.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:82) (1 samples, 0.20%)</title><rect x="493" y="820" width="3" height="15" fill="rgb(237,64,43)"/><text x="496.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="493" y="836" width="3" height="15" fill="rgb(213,115,54)"/><text x="496.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="493" y="852" width="3" height="15" fill="rgb(233,11,16)"/><text x="496.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="493" y="868" width="3" height="15" fill="rgb(214,110,23)"/><text x="496.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="493" y="884" width="3" height="15" fill="rgb(208,128,5)"/><text x="496.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="493" y="900" width="3" height="15" fill="rgb(214,172,41)"/><text x="496.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py:191) (1 samples, 0.20%)</title><rect x="493" y="916" width="3" height="15" fill="rgb(214,46,51)"/><text x="496.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py:195) (1 samples, 0.20%)</title><rect x="493" y="932" width="3" height="15" fill="rgb(238,36,49)"/><text x="496.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.20%)</title><rect x="493" y="948" width="3" height="15" fill="rgb(206,191,5)"/><text x="496.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="493" y="964" width="3" height="15" fill="rgb(222,215,45)"/><text x="496.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.20%)</title><rect x="493" y="980" width="3" height="15" fill="rgb(211,203,0)"/><text x="496.00" y="990.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.20%)</title><rect x="493" y="996" width="3" height="15" fill="rgb(219,41,48)"/><text x="496.00" y="1006.50"></text></g><g><title>_compile_info (sre_compile.py:541) (1 samples, 0.20%)</title><rect x="493" y="1012" width="3" height="15" fill="rgb(211,28,21)"/><text x="496.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.20%)</title><rect x="496" y="676" width="2" height="15" fill="rgb(214,69,25)"/><text x="499.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="496" y="692" width="2" height="15" fill="rgb(232,209,34)"/><text x="499.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="496" y="708" width="2" height="15" fill="rgb(209,25,49)"/><text x="499.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="496" y="724" width="2" height="15" fill="rgb(232,153,54)"/><text x="499.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="496" y="740" width="2" height="15" fill="rgb(243,43,11)"/><text x="499.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="496" y="756" width="2" height="15" fill="rgb(216,147,36)"/><text x="499.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.20%)</title><rect x="496" y="772" width="2" height="15" fill="rgb(209,147,31)"/><text x="499.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="496" y="788" width="2" height="15" fill="rgb(219,94,4)"/><text x="499.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="496" y="804" width="2" height="15" fill="rgb(245,120,44)"/><text x="499.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="496" y="820" width="2" height="15" fill="rgb(247,124,38)"/><text x="499.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="496" y="836" width="2" height="15" fill="rgb(235,99,54)"/><text x="499.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="496" y="852" width="2" height="15" fill="rgb(206,182,24)"/><text x="499.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="496" y="868" width="2" height="15" fill="rgb(240,48,12)"/><text x="499.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="496" y="884" width="2" height="15" fill="rgb(216,78,14)"/><text x="499.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.20%)</title><rect x="496" y="900" width="2" height="15" fill="rgb(243,79,1)"/><text x="499.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="496" y="916" width="2" height="15" fill="rgb(208,111,18)"/><text x="499.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="496" y="932" width="2" height="15" fill="rgb(244,184,2)"/><text x="499.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="496" y="948" width="2" height="15" fill="rgb(247,54,5)"/><text x="499.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="496" y="964" width="2" height="15" fill="rgb(249,1,34)"/><text x="499.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="496" y="980" width="2" height="15" fill="rgb(219,191,14)"/><text x="499.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="496" y="996" width="2" height="15" fill="rgb(223,15,30)"/><text x="499.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="496" y="1012" width="2" height="15" fill="rgb(235,218,20)"/><text x="499.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2339) (1 samples, 0.20%)</title><rect x="496" y="1028" width="2" height="15" fill="rgb(250,85,50)"/><text x="499.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.20%)</title><rect x="496" y="1044" width="2" height="15" fill="rgb(240,101,36)"/><text x="499.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.20%)</title><rect x="496" y="1060" width="2" height="15" fill="rgb(212,37,19)"/><text x="499.00" y="1070.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:4) (2 samples, 0.40%)</title><rect x="496" y="148" width="4" height="15" fill="rgb(221,206,1)"/><text x="499.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="164" width="4" height="15" fill="rgb(240,54,49)"/><text x="499.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.40%)</title><rect x="496" y="180" width="4" height="15" fill="rgb(220,74,27)"/><text x="499.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="196" width="4" height="15" fill="rgb(247,60,40)"/><text x="499.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="212" width="4" height="15" fill="rgb(212,39,33)"/><text x="499.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="496" y="228" width="4" height="15" fill="rgb(217,99,11)"/><text x="499.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="496" y="244" width="4" height="15" fill="rgb(242,209,52)"/><text x="499.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="496" y="260" width="4" height="15" fill="rgb(214,88,52)"/><text x="499.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="276" width="4" height="15" fill="rgb(236,129,15)"/><text x="499.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.40%)</title><rect x="496" y="292" width="4" height="15" fill="rgb(211,58,24)"/><text x="499.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="308" width="4" height="15" fill="rgb(247,142,20)"/><text x="499.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="496" y="324" width="4" height="15" fill="rgb(212,199,37)"/><text x="499.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="496" y="340" width="4" height="15" fill="rgb(237,4,18)"/><text x="499.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="496" y="356" width="4" height="15" fill="rgb(217,145,3)"/><text x="499.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="372" width="4" height="15" fill="rgb(207,135,36)"/><text x="499.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.40%)</title><rect x="496" y="388" width="4" height="15" fill="rgb(248,157,37)"/><text x="499.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="404" width="4" height="15" fill="rgb(208,164,33)"/><text x="499.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="496" y="420" width="4" height="15" fill="rgb(227,96,21)"/><text x="499.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="496" y="436" width="4" height="15" fill="rgb(211,218,22)"/><text x="499.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="496" y="452" width="4" height="15" fill="rgb(206,69,27)"/><text x="499.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="468" width="4" height="15" fill="rgb(231,26,20)"/><text x="499.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.40%)</title><rect x="496" y="484" width="4" height="15" fill="rgb(236,30,11)"/><text x="499.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="500" width="4" height="15" fill="rgb(237,141,4)"/><text x="499.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="496" y="516" width="4" height="15" fill="rgb(238,91,53)"/><text x="499.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="496" y="532" width="4" height="15" fill="rgb(222,158,46)"/><text x="499.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="496" y="548" width="4" height="15" fill="rgb(254,36,46)"/><text x="499.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="564" width="4" height="15" fill="rgb(225,146,25)"/><text x="499.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.40%)</title><rect x="496" y="580" width="4" height="15" fill="rgb(254,21,47)"/><text x="499.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="496" y="596" width="4" height="15" fill="rgb(247,32,34)"/><text x="499.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="496" y="612" width="4" height="15" fill="rgb(205,154,0)"/><text x="499.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="496" y="628" width="4" height="15" fill="rgb(236,178,35)"/><text x="499.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="496" y="644" width="4" height="15" fill="rgb(215,103,3)"/><text x="499.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="496" y="660" width="4" height="15" fill="rgb(251,14,32)"/><text x="499.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:381) (1 samples, 0.20%)</title><rect x="498" y="676" width="2" height="15" fill="rgb(249,78,54)"/><text x="501.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="498" y="692" width="2" height="15" fill="rgb(239,134,11)"/><text x="501.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="498" y="708" width="2" height="15" fill="rgb(222,116,40)"/><text x="501.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="498" y="724" width="2" height="15" fill="rgb(237,5,33)"/><text x="501.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="498" y="740" width="2" height="15" fill="rgb(214,93,53)"/><text x="501.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="498" y="756" width="2" height="15" fill="rgb(219,60,5)"/><text x="501.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="498" y="772" width="2" height="15" fill="rgb(215,21,38)"/><text x="501.00" y="782.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.20%)</title><rect x="500" y="244" width="3" height="15" fill="rgb(230,87,25)"/><text x="503.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="260" width="3" height="15" fill="rgb(221,223,12)"/><text x="503.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="276" width="3" height="15" fill="rgb(237,103,50)"/><text x="503.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="292" width="3" height="15" fill="rgb(213,204,16)"/><text x="503.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="308" width="3" height="15" fill="rgb(249,149,8)"/><text x="503.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="324" width="3" height="15" fill="rgb(253,220,11)"/><text x="503.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.20%)</title><rect x="500" y="340" width="3" height="15" fill="rgb(240,84,42)"/><text x="503.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="356" width="3" height="15" fill="rgb(248,50,52)"/><text x="503.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="500" y="372" width="3" height="15" fill="rgb(218,133,36)"/><text x="503.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="388" width="3" height="15" fill="rgb(249,55,34)"/><text x="503.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="404" width="3" height="15" fill="rgb(247,35,5)"/><text x="503.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="420" width="3" height="15" fill="rgb(233,134,5)"/><text x="503.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="436" width="3" height="15" fill="rgb(226,85,23)"/><text x="503.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="452" width="3" height="15" fill="rgb(249,147,2)"/><text x="503.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="468" width="3" height="15" fill="rgb(247,85,19)"/><text x="503.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.20%)</title><rect x="500" y="484" width="3" height="15" fill="rgb(221,74,40)"/><text x="503.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="500" width="3" height="15" fill="rgb(213,84,27)"/><text x="503.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="516" width="3" height="15" fill="rgb(245,195,12)"/><text x="503.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="532" width="3" height="15" fill="rgb(226,129,18)"/><text x="503.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="548" width="3" height="15" fill="rgb(225,228,7)"/><text x="503.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="564" width="3" height="15" fill="rgb(227,39,47)"/><text x="503.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.20%)</title><rect x="500" y="580" width="3" height="15" fill="rgb(222,48,28)"/><text x="503.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="596" width="3" height="15" fill="rgb(247,59,7)"/><text x="503.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="612" width="3" height="15" fill="rgb(236,16,14)"/><text x="503.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="628" width="3" height="15" fill="rgb(227,139,35)"/><text x="503.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="644" width="3" height="15" fill="rgb(207,120,13)"/><text x="503.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="660" width="3" height="15" fill="rgb(246,19,16)"/><text x="503.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py:6) (1 samples, 0.20%)</title><rect x="500" y="676" width="3" height="15" fill="rgb(229,142,44)"/><text x="503.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="692" width="3" height="15" fill="rgb(241,143,43)"/><text x="503.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="708" width="3" height="15" fill="rgb(247,78,5)"/><text x="503.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="724" width="3" height="15" fill="rgb(209,164,41)"/><text x="503.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="740" width="3" height="15" fill="rgb(231,97,6)"/><text x="503.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="756" width="3" height="15" fill="rgb(205,89,2)"/><text x="503.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py:7) (1 samples, 0.20%)</title><rect x="500" y="772" width="3" height="15" fill="rgb(252,10,50)"/><text x="503.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="788" width="3" height="15" fill="rgb(205,66,36)"/><text x="503.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="804" width="3" height="15" fill="rgb(230,141,42)"/><text x="503.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="820" width="3" height="15" fill="rgb(239,128,18)"/><text x="503.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="836" width="3" height="15" fill="rgb(245,104,19)"/><text x="503.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="852" width="3" height="15" fill="rgb(214,206,48)"/><text x="503.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py:8) (1 samples, 0.20%)</title><rect x="500" y="868" width="3" height="15" fill="rgb(224,46,4)"/><text x="503.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="884" width="3" height="15" fill="rgb(212,202,41)"/><text x="503.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="500" y="900" width="3" height="15" fill="rgb(221,57,15)"/><text x="503.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="916" width="3" height="15" fill="rgb(243,133,35)"/><text x="503.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="932" width="3" height="15" fill="rgb(224,229,21)"/><text x="503.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="948" width="3" height="15" fill="rgb(254,208,45)"/><text x="503.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="964" width="3" height="15" fill="rgb(222,2,21)"/><text x="503.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="980" width="3" height="15" fill="rgb(207,198,22)"/><text x="503.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="996" width="3" height="15" fill="rgb(228,66,25)"/><text x="503.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py:6) (1 samples, 0.20%)</title><rect x="500" y="1012" width="3" height="15" fill="rgb(244,125,30)"/><text x="503.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="1028" width="3" height="15" fill="rgb(210,98,12)"/><text x="503.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="1044" width="3" height="15" fill="rgb(244,54,49)"/><text x="503.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="1060" width="3" height="15" fill="rgb(218,2,7)"/><text x="503.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="500" y="1076" width="3" height="15" fill="rgb(224,87,47)"/><text x="503.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="500" y="1092" width="3" height="15" fill="rgb(205,9,12)"/><text x="503.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py:6) (1 samples, 0.20%)</title><rect x="500" y="1108" width="3" height="15" fill="rgb(224,83,50)"/><text x="503.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="500" y="1124" width="3" height="15" fill="rgb(249,116,49)"/><text x="503.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="500" y="1140" width="3" height="15" fill="rgb(211,173,31)"/><text x="503.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="500" y="1156" width="3" height="15" fill="rgb(218,31,11)"/><text x="503.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.20%)</title><rect x="500" y="1172" width="3" height="15" fill="rgb(212,152,34)"/><text x="503.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.20%)</title><rect x="500" y="1188" width="3" height="15" fill="rgb(215,31,4)"/><text x="503.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.20%)</title><rect x="500" y="1204" width="3" height="15" fill="rgb(214,145,51)"/><text x="503.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.20%)</title><rect x="503" y="628" width="2" height="15" fill="rgb(225,103,48)"/><text x="506.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="503" y="644" width="2" height="15" fill="rgb(222,200,17)"/><text x="506.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="503" y="660" width="2" height="15" fill="rgb(217,144,45)"/><text x="506.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="503" y="676" width="2" height="15" fill="rgb(234,136,26)"/><text x="506.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="503" y="692" width="2" height="15" fill="rgb(252,150,4)"/><text x="506.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="503" y="708" width="2" height="15" fill="rgb(233,149,50)"/><text x="506.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:21) (1 samples, 0.20%)</title><rect x="503" y="724" width="2" height="15" fill="rgb(211,85,4)"/><text x="506.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="503" y="740" width="2" height="15" fill="rgb(206,194,40)"/><text x="506.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="503" y="756" width="2" height="15" fill="rgb(235,228,16)"/><text x="506.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="503" y="772" width="2" height="15" fill="rgb(234,118,47)"/><text x="506.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="503" y="788" width="2" height="15" fill="rgb(205,173,50)"/><text x="506.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="503" y="804" width="2" height="15" fill="rgb(228,16,48)"/><text x="506.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/stata.py:1044) (1 samples, 0.20%)</title><rect x="503" y="820" width="2" height="15" fill="rgb(245,186,25)"/><text x="506.00" y="830.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="503" y="836" width="2" height="15" fill="rgb(214,102,24)"/><text x="506.00" y="846.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.20%)</title><rect x="505" y="1492" width="2" height="15" fill="rgb(214,206,14)"/><text x="508.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="505" y="1508" width="2" height="15" fill="rgb(212,74,28)"/><text x="508.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="505" y="1524" width="2" height="15" fill="rgb(212,62,21)"/><text x="508.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="505" y="1540" width="2" height="15" fill="rgb(235,136,7)"/><text x="508.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="505" y="1556" width="2" height="15" fill="rgb(208,206,47)"/><text x="508.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1572" width="2" height="15" fill="rgb(211,178,24)"/><text x="508.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.20%)</title><rect x="505" y="1588" width="2" height="15" fill="rgb(253,226,32)"/><text x="508.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="505" y="1604" width="2" height="15" fill="rgb(206,21,17)"/><text x="508.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="505" y="1620" width="2" height="15" fill="rgb(219,103,44)"/><text x="508.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="505" y="1636" width="2" height="15" fill="rgb(207,104,24)"/><text x="508.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="505" y="1652" width="2" height="15" fill="rgb(217,211,48)"/><text x="508.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1668" width="2" height="15" fill="rgb(223,226,53)"/><text x="508.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.20%)</title><rect x="505" y="1684" width="2" height="15" fill="rgb(208,114,53)"/><text x="508.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="505" y="1700" width="2" height="15" fill="rgb(227,73,12)"/><text x="508.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="505" y="1716" width="2" height="15" fill="rgb(217,72,18)"/><text x="508.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="505" y="1732" width="2" height="15" fill="rgb(223,193,50)"/><text x="508.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="505" y="1748" width="2" height="15" fill="rgb(231,209,42)"/><text x="508.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1764" width="2" height="15" fill="rgb(251,127,6)"/><text x="508.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.20%)</title><rect x="505" y="1780" width="2" height="15" fill="rgb(250,3,29)"/><text x="508.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="505" y="1796" width="2" height="15" fill="rgb(244,228,16)"/><text x="508.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="505" y="1812" width="2" height="15" fill="rgb(254,56,10)"/><text x="508.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="505" y="1828" width="2" height="15" fill="rgb(215,30,8)"/><text x="508.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="505" y="1844" width="2" height="15" fill="rgb(225,118,0)"/><text x="508.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1860" width="2" height="15" fill="rgb(216,106,13)"/><text x="508.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.20%)</title><rect x="505" y="1876" width="2" height="15" fill="rgb(244,121,7)"/><text x="508.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="505" y="1892" width="2" height="15" fill="rgb(228,127,28)"/><text x="508.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1908" width="2" height="15" fill="rgb(234,25,42)"/><text x="508.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="505" y="1924" width="2" height="15" fill="rgb(248,147,41)"/><text x="508.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="505" y="1940" width="2" height="15" fill="rgb(224,16,53)"/><text x="508.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="505" y="1956" width="2" height="15" fill="rgb(252,226,35)"/><text x="508.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="505" y="1972" width="2" height="15" fill="rgb(225,26,30)"/><text x="508.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="505" y="1988" width="2" height="15" fill="rgb(242,102,20)"/><text x="508.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.20%)</title><rect x="505" y="2004" width="2" height="15" fill="rgb(249,135,14)"/><text x="508.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.20%)</title><rect x="505" y="2020" width="2" height="15" fill="rgb(243,83,53)"/><text x="508.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.20%)</title><rect x="505" y="2036" width="2" height="15" fill="rgb(213,107,26)"/><text x="508.00" y="2046.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.20%)</title><rect x="505" y="2052" width="2" height="15" fill="rgb(242,164,34)"/><text x="508.00" y="2062.50"></text></g><g><title>search (re.py:183) (1 samples, 0.20%)</title><rect x="505" y="2068" width="2" height="15" fill="rgb(239,24,47)"/><text x="508.00" y="2078.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.20%)</title><rect x="505" y="2084" width="2" height="15" fill="rgb(230,105,10)"/><text x="508.00" y="2094.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.20%)</title><rect x="505" y="2100" width="2" height="15" fill="rgb(243,97,33)"/><text x="508.00" y="2110.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.20%)</title><rect x="505" y="2116" width="2" height="15" fill="rgb(247,119,10)"/><text x="508.00" y="2126.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="505" y="2132" width="2" height="15" fill="rgb(216,103,3)"/><text x="508.00" y="2142.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.20%)</title><rect x="505" y="2148" width="2" height="15" fill="rgb(254,148,38)"/><text x="508.00" y="2158.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.20%)</title><rect x="505" y="2164" width="2" height="15" fill="rgb(245,131,21)"/><text x="508.00" y="2174.50"></text></g><g><title>_parse (sre_parse.py:488) (1 samples, 0.20%)</title><rect x="505" y="2180" width="2" height="15" fill="rgb(226,142,13)"/><text x="508.00" y="2190.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.60%)</title><rect x="503" y="436" width="7" height="15" fill="rgb(224,82,14)"/><text x="506.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="503" y="452" width="7" height="15" fill="rgb(218,174,30)"/><text x="506.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="503" y="468" width="7" height="15" fill="rgb(244,19,16)"/><text x="506.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="503" y="484" width="7" height="15" fill="rgb(206,112,35)"/><text x="506.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="503" y="500" width="7" height="15" fill="rgb(233,155,51)"/><text x="506.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="503" y="516" width="7" height="15" fill="rgb(247,104,52)"/><text x="506.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.60%)</title><rect x="503" y="532" width="7" height="15" fill="rgb(223,208,53)"/><text x="506.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="503" y="548" width="7" height="15" fill="rgb(219,31,46)"/><text x="506.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="503" y="564" width="7" height="15" fill="rgb(211,34,22)"/><text x="506.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="503" y="580" width="7" height="15" fill="rgb(208,67,9)"/><text x="506.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="503" y="596" width="7" height="15" fill="rgb(218,19,52)"/><text x="506.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="503" y="612" width="7" height="15" fill="rgb(225,138,52)"/><text x="506.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.40%)</title><rect x="505" y="628" width="5" height="15" fill="rgb(215,111,14)"/><text x="508.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="644" width="5" height="15" fill="rgb(239,153,6)"/><text x="508.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="660" width="5" height="15" fill="rgb(208,96,53)"/><text x="508.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="676" width="5" height="15" fill="rgb(240,111,10)"/><text x="508.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="692" width="5" height="15" fill="rgb(225,223,14)"/><text x="508.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="708" width="5" height="15" fill="rgb(254,172,18)"/><text x="508.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.40%)</title><rect x="505" y="724" width="5" height="15" fill="rgb(222,9,46)"/><text x="508.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="740" width="5" height="15" fill="rgb(239,178,51)"/><text x="508.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="756" width="5" height="15" fill="rgb(223,204,11)"/><text x="508.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="772" width="5" height="15" fill="rgb(246,161,37)"/><text x="508.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="788" width="5" height="15" fill="rgb(222,166,10)"/><text x="508.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="804" width="5" height="15" fill="rgb(240,195,41)"/><text x="508.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.40%)</title><rect x="505" y="820" width="5" height="15" fill="rgb(229,184,2)"/><text x="508.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="836" width="5" height="15" fill="rgb(219,129,9)"/><text x="508.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="852" width="5" height="15" fill="rgb(205,135,34)"/><text x="508.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="868" width="5" height="15" fill="rgb(251,61,51)"/><text x="508.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="884" width="5" height="15" fill="rgb(220,78,42)"/><text x="508.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="900" width="5" height="15" fill="rgb(221,16,20)"/><text x="508.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.40%)</title><rect x="505" y="916" width="5" height="15" fill="rgb(230,64,53)"/><text x="508.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="932" width="5" height="15" fill="rgb(225,126,5)"/><text x="508.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="948" width="5" height="15" fill="rgb(244,56,25)"/><text x="508.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="964" width="5" height="15" fill="rgb(234,225,22)"/><text x="508.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="980" width="5" height="15" fill="rgb(254,135,36)"/><text x="508.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="996" width="5" height="15" fill="rgb(226,158,25)"/><text x="508.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.40%)</title><rect x="505" y="1012" width="5" height="15" fill="rgb(217,86,22)"/><text x="508.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="1028" width="5" height="15" fill="rgb(228,90,42)"/><text x="508.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="1044" width="5" height="15" fill="rgb(223,208,47)"/><text x="508.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="1060" width="5" height="15" fill="rgb(223,141,8)"/><text x="508.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="1076" width="5" height="15" fill="rgb(205,126,24)"/><text x="508.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="1092" width="5" height="15" fill="rgb(209,62,47)"/><text x="508.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.40%)</title><rect x="505" y="1108" width="5" height="15" fill="rgb(205,228,38)"/><text x="508.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="1124" width="5" height="15" fill="rgb(224,20,1)"/><text x="508.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="1140" width="5" height="15" fill="rgb(212,56,49)"/><text x="508.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="1156" width="5" height="15" fill="rgb(241,157,24)"/><text x="508.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="1172" width="5" height="15" fill="rgb(223,27,2)"/><text x="508.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="1188" width="5" height="15" fill="rgb(248,125,34)"/><text x="508.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.40%)</title><rect x="505" y="1204" width="5" height="15" fill="rgb(209,117,47)"/><text x="508.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="1220" width="5" height="15" fill="rgb(238,188,10)"/><text x="508.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="1236" width="5" height="15" fill="rgb(213,139,44)"/><text x="508.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="1252" width="5" height="15" fill="rgb(220,148,0)"/><text x="508.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="1268" width="5" height="15" fill="rgb(227,190,11)"/><text x="508.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="1284" width="5" height="15" fill="rgb(246,167,9)"/><text x="508.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.40%)</title><rect x="505" y="1300" width="5" height="15" fill="rgb(254,196,28)"/><text x="508.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="1316" width="5" height="15" fill="rgb(244,20,45)"/><text x="508.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="1332" width="5" height="15" fill="rgb(234,114,48)"/><text x="508.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="1348" width="5" height="15" fill="rgb(253,22,39)"/><text x="508.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="1364" width="5" height="15" fill="rgb(252,32,23)"/><text x="508.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="1380" width="5" height="15" fill="rgb(243,195,10)"/><text x="508.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.40%)</title><rect x="505" y="1396" width="5" height="15" fill="rgb(210,3,26)"/><text x="508.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="505" y="1412" width="5" height="15" fill="rgb(208,110,30)"/><text x="508.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="505" y="1428" width="5" height="15" fill="rgb(250,131,16)"/><text x="508.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="505" y="1444" width="5" height="15" fill="rgb(225,57,43)"/><text x="508.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="505" y="1460" width="5" height="15" fill="rgb(225,201,53)"/><text x="508.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="505" y="1476" width="5" height="15" fill="rgb(228,81,0)"/><text x="508.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.20%)</title><rect x="507" y="1492" width="3" height="15" fill="rgb(209,158,6)"/><text x="510.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="507" y="1508" width="3" height="15" fill="rgb(230,170,18)"/><text x="510.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.20%)</title><rect x="507" y="1524" width="3" height="15" fill="rgb(226,161,48)"/><text x="510.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="507" y="1540" width="3" height="15" fill="rgb(234,186,42)"/><text x="510.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="507" y="1556" width="3" height="15" fill="rgb(236,86,3)"/><text x="510.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="507" y="1572" width="3" height="15" fill="rgb(247,48,47)"/><text x="510.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="507" y="1588" width="3" height="15" fill="rgb(236,208,21)"/><text x="510.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="507" y="1604" width="3" height="15" fill="rgb(230,167,16)"/><text x="510.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="507" y="1620" width="3" height="15" fill="rgb(213,207,2)"/><text x="510.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.20%)</title><rect x="507" y="1636" width="3" height="15" fill="rgb(230,211,34)"/><text x="510.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="507" y="1652" width="3" height="15" fill="rgb(243,219,9)"/><text x="510.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="507" y="1668" width="3" height="15" fill="rgb(205,53,50)"/><text x="510.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="507" y="1684" width="3" height="15" fill="rgb(243,172,5)"/><text x="510.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="507" y="1700" width="3" height="15" fill="rgb(210,33,50)"/><text x="510.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="507" y="1716" width="3" height="15" fill="rgb(231,156,33)"/><text x="510.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="507" y="1732" width="3" height="15" fill="rgb(227,56,48)"/><text x="510.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="507" y="1748" width="3" height="15" fill="rgb(227,216,26)"/><text x="510.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:25) (1 samples, 0.20%)</title><rect x="507" y="1764" width="3" height="15" fill="rgb(236,82,43)"/><text x="510.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="507" y="1780" width="3" height="15" fill="rgb(236,204,24)"/><text x="510.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="507" y="1796" width="3" height="15" fill="rgb(214,129,6)"/><text x="510.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="507" y="1812" width="3" height="15" fill="rgb(215,141,9)"/><text x="510.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="507" y="1828" width="3" height="15" fill="rgb(236,9,4)"/><text x="510.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="507" y="1844" width="3" height="15" fill="rgb(212,218,32)"/><text x="510.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py:89) (1 samples, 0.20%)</title><rect x="507" y="1860" width="3" height="15" fill="rgb(233,33,42)"/><text x="510.00" y="1870.50"></text></g><g><title>&lt;dictcomp&gt; (matplotlib/colors.py:89) (1 samples, 0.20%)</title><rect x="507" y="1876" width="3" height="15" fill="rgb(223,172,40)"/><text x="510.00" y="1886.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.20%)</title><rect x="510" y="1380" width="2" height="15" fill="rgb(222,57,52)"/><text x="513.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.20%)</title><rect x="510" y="1396" width="2" height="15" fill="rgb(209,150,53)"/><text x="513.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.20%)</title><rect x="510" y="1412" width="2" height="15" fill="rgb(210,84,31)"/><text x="513.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.40%)</title><rect x="510" y="1108" width="5" height="15" fill="rgb(208,184,19)"/><text x="513.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="510" y="1124" width="5" height="15" fill="rgb(227,211,16)"/><text x="513.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="510" y="1140" width="5" height="15" fill="rgb(218,125,7)"/><text x="513.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="510" y="1156" width="5" height="15" fill="rgb(210,56,30)"/><text x="513.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="510" y="1172" width="5" height="15" fill="rgb(226,126,5)"/><text x="513.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="510" y="1188" width="5" height="15" fill="rgb(233,164,39)"/><text x="513.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.40%)</title><rect x="510" y="1204" width="5" height="15" fill="rgb(226,20,13)"/><text x="513.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.40%)</title><rect x="510" y="1220" width="5" height="15" fill="rgb(207,94,8)"/><text x="513.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.40%)</title><rect x="510" y="1236" width="5" height="15" fill="rgb(229,198,21)"/><text x="513.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.40%)</title><rect x="510" y="1252" width="5" height="15" fill="rgb(219,65,26)"/><text x="513.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.40%)</title><rect x="510" y="1268" width="5" height="15" fill="rgb(225,85,41)"/><text x="513.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.40%)</title><rect x="510" y="1284" width="5" height="15" fill="rgb(213,145,18)"/><text x="513.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.40%)</title><rect x="510" y="1300" width="5" height="15" fill="rgb(239,95,22)"/><text x="513.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.40%)</title><rect x="510" y="1316" width="5" height="15" fill="rgb(238,102,18)"/><text x="513.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.40%)</title><rect x="510" y="1332" width="5" height="15" fill="rgb(234,190,0)"/><text x="513.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.40%)</title><rect x="510" y="1348" width="5" height="15" fill="rgb(243,139,52)"/><text x="513.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.40%)</title><rect x="510" y="1364" width="5" height="15" fill="rgb(250,159,10)"/><text x="513.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:594) (1 samples, 0.20%)</title><rect x="512" y="1380" width="3" height="15" fill="rgb(246,172,9)"/><text x="515.00" y="1390.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:4) (20 samples, 4.00%)</title><rect x="470" y="52" width="47" height="15" fill="rgb(216,172,48)"/><text x="473.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 4.00%)</title><rect x="470" y="68" width="47" height="15" fill="rgb(252,38,44)"/><text x="473.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 4.00%)</title><rect x="470" y="84" width="47" height="15" fill="rgb(244,92,1)"/><text x="473.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 4.00%)</title><rect x="470" y="100" width="47" height="15" fill="rgb(216,183,21)"/><text x="473.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 4.00%)</title><rect x="470" y="116" width="47" height="15" fill="rgb(230,88,17)"/><text x="473.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 4.00%)</title><rect x="470" y="132" width="47" height="15" fill="rgb(239,221,31)"/><text x="473.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_solverliblinear.py:7) (7 samples, 1.40%)</title><rect x="500" y="148" width="17" height="15" fill="rgb(216,55,38)"/><text x="503.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.40%)</title><rect x="500" y="164" width="17" height="15" fill="rgb(210,77,43)"/><text x="503.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.40%)</title><rect x="500" y="180" width="17" height="15" fill="rgb(216,187,10)"/><text x="503.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.40%)</title><rect x="500" y="196" width="17" height="15" fill="rgb(238,89,19)"/><text x="503.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.40%)</title><rect x="500" y="212" width="17" height="15" fill="rgb(231,202,43)"/><text x="503.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.40%)</title><rect x="500" y="228" width="17" height="15" fill="rgb(238,1,44)"/><text x="503.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.20%)</title><rect x="503" y="244" width="14" height="15" fill="rgb(222,94,28)"/><text x="506.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.20%)</title><rect x="503" y="260" width="14" height="15" fill="rgb(222,88,12)"/><text x="506.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.20%)</title><rect x="503" y="276" width="14" height="15" fill="rgb(214,217,46)"/><text x="506.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.20%)</title><rect x="503" y="292" width="14" height="15" fill="rgb(251,91,18)"/><text x="506.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.20%)</title><rect x="503" y="308" width="14" height="15" fill="rgb(243,1,45)"/><text x="506.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.20%)</title><rect x="503" y="324" width="14" height="15" fill="rgb(207,44,14)"/><text x="506.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 1.20%)</title><rect x="503" y="340" width="14" height="15" fill="rgb(253,213,26)"/><text x="506.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.20%)</title><rect x="503" y="356" width="14" height="15" fill="rgb(217,26,54)"/><text x="506.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.20%)</title><rect x="503" y="372" width="14" height="15" fill="rgb(214,16,51)"/><text x="506.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.20%)</title><rect x="503" y="388" width="14" height="15" fill="rgb(245,121,2)"/><text x="506.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.20%)</title><rect x="503" y="404" width="14" height="15" fill="rgb(207,172,26)"/><text x="506.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.20%)</title><rect x="503" y="420" width="14" height="15" fill="rgb(230,132,21)"/><text x="506.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.60%)</title><rect x="510" y="436" width="7" height="15" fill="rgb(251,195,5)"/><text x="513.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="452" width="7" height="15" fill="rgb(239,185,42)"/><text x="513.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.60%)</title><rect x="510" y="468" width="7" height="15" fill="rgb(208,39,34)"/><text x="513.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="484" width="7" height="15" fill="rgb(214,12,48)"/><text x="513.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="500" width="7" height="15" fill="rgb(236,199,18)"/><text x="513.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="516" width="7" height="15" fill="rgb(238,128,11)"/><text x="513.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="532" width="7" height="15" fill="rgb(248,38,14)"/><text x="513.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="548" width="7" height="15" fill="rgb(251,136,9)"/><text x="513.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="564" width="7" height="15" fill="rgb(243,197,34)"/><text x="513.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.60%)</title><rect x="510" y="580" width="7" height="15" fill="rgb(239,3,30)"/><text x="513.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="596" width="7" height="15" fill="rgb(221,186,14)"/><text x="513.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="612" width="7" height="15" fill="rgb(235,224,44)"/><text x="513.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="628" width="7" height="15" fill="rgb(232,166,11)"/><text x="513.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="644" width="7" height="15" fill="rgb(243,158,22)"/><text x="513.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="660" width="7" height="15" fill="rgb(228,19,49)"/><text x="513.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.60%)</title><rect x="510" y="676" width="7" height="15" fill="rgb(206,210,41)"/><text x="513.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="692" width="7" height="15" fill="rgb(248,32,15)"/><text x="513.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="708" width="7" height="15" fill="rgb(209,59,34)"/><text x="513.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="724" width="7" height="15" fill="rgb(246,68,29)"/><text x="513.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="740" width="7" height="15" fill="rgb(232,31,12)"/><text x="513.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="756" width="7" height="15" fill="rgb(225,132,7)"/><text x="513.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.60%)</title><rect x="510" y="772" width="7" height="15" fill="rgb(233,215,35)"/><text x="513.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="788" width="7" height="15" fill="rgb(216,95,17)"/><text x="513.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="804" width="7" height="15" fill="rgb(250,98,1)"/><text x="513.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="820" width="7" height="15" fill="rgb(244,70,51)"/><text x="513.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="836" width="7" height="15" fill="rgb(235,93,20)"/><text x="513.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="852" width="7" height="15" fill="rgb(236,129,1)"/><text x="513.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.60%)</title><rect x="510" y="868" width="7" height="15" fill="rgb(232,136,1)"/><text x="513.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="884" width="7" height="15" fill="rgb(251,31,29)"/><text x="513.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.60%)</title><rect x="510" y="900" width="7" height="15" fill="rgb(238,212,22)"/><text x="513.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="916" width="7" height="15" fill="rgb(207,2,30)"/><text x="513.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="932" width="7" height="15" fill="rgb(231,70,41)"/><text x="513.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="948" width="7" height="15" fill="rgb(229,165,13)"/><text x="513.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="964" width="7" height="15" fill="rgb(232,43,6)"/><text x="513.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="980" width="7" height="15" fill="rgb(232,109,45)"/><text x="513.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="996" width="7" height="15" fill="rgb(245,66,21)"/><text x="513.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.60%)</title><rect x="510" y="1012" width="7" height="15" fill="rgb(215,222,18)"/><text x="513.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.60%)</title><rect x="510" y="1028" width="7" height="15" fill="rgb(213,68,18)"/><text x="513.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.60%)</title><rect x="510" y="1044" width="7" height="15" fill="rgb(237,144,29)"/><text x="513.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.60%)</title><rect x="510" y="1060" width="7" height="15" fill="rgb(230,37,28)"/><text x="513.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.60%)</title><rect x="510" y="1076" width="7" height="15" fill="rgb(228,97,46)"/><text x="513.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.60%)</title><rect x="510" y="1092" width="7" height="15" fill="rgb(253,39,51)"/><text x="513.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.20%)</title><rect x="515" y="1108" width="2" height="15" fill="rgb(216,200,6)"/><text x="518.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="515" y="1124" width="2" height="15" fill="rgb(243,96,47)"/><text x="518.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="515" y="1140" width="2" height="15" fill="rgb(214,124,15)"/><text x="518.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="515" y="1156" width="2" height="15" fill="rgb(225,163,13)"/><text x="518.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="515" y="1172" width="2" height="15" fill="rgb(250,4,18)"/><text x="518.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="515" y="1188" width="2" height="15" fill="rgb(236,130,21)"/><text x="518.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="515" y="1204" width="2" height="15" fill="rgb(209,145,36)"/><text x="518.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="515" y="1220" width="2" height="15" fill="rgb(229,169,46)"/><text x="518.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.20%)</title><rect x="515" y="1236" width="2" height="15" fill="rgb(231,1,7)"/><text x="518.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.20%)</title><rect x="515" y="1252" width="2" height="15" fill="rgb(211,68,2)"/><text x="518.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="515" y="1268" width="2" height="15" fill="rgb(206,212,32)"/><text x="518.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="515" y="1284" width="2" height="15" fill="rgb(231,184,22)"/><text x="518.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="515" y="1300" width="2" height="15" fill="rgb(243,205,46)"/><text x="518.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="515" y="1316" width="2" height="15" fill="rgb(209,188,34)"/><text x="518.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="515" y="1332" width="2" height="15" fill="rgb(215,152,42)"/><text x="518.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="515" y="1348" width="2" height="15" fill="rgb(210,33,43)"/><text x="518.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.20%)</title><rect x="515" y="1364" width="2" height="15" fill="rgb(246,27,16)"/><text x="518.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="515" y="1380" width="2" height="15" fill="rgb(206,0,18)"/><text x="518.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="515" y="1396" width="2" height="15" fill="rgb(239,55,38)"/><text x="518.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="515" y="1412" width="2" height="15" fill="rgb(251,45,7)"/><text x="518.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="515" y="1428" width="2" height="15" fill="rgb(238,140,28)"/><text x="518.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="515" y="1444" width="2" height="15" fill="rgb(251,47,29)"/><text x="518.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.20%)</title><rect x="515" y="1460" width="2" height="15" fill="rgb(250,178,20)"/><text x="518.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.20%)</title><rect x="515" y="1476" width="2" height="15" fill="rgb(242,38,48)"/><text x="518.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.20%)</title><rect x="515" y="1492" width="2" height="15" fill="rgb(221,101,35)"/><text x="518.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.20%)</title><rect x="515" y="1508" width="2" height="15" fill="rgb(208,66,36)"/><text x="518.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.20%)</title><rect x="515" y="1524" width="2" height="15" fill="rgb(250,175,8)"/><text x="518.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.20%)</title><rect x="515" y="1540" width="2" height="15" fill="rgb(225,116,10)"/><text x="518.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.20%)</title><rect x="515" y="1556" width="2" height="15" fill="rgb(226,122,48)"/><text x="518.00" y="1566.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="515" y="1572" width="2" height="15" fill="rgb(205,156,48)"/><text x="518.00" y="1582.50"></text></g><g><title>0x7f3feb96f8cb (libc-2.29.so) (1 samples, 0.20%)</title><rect x="515" y="1588" width="2" height="15" fill="rgb(216,18,25)"/><text x="518.00" y="1598.50"></text></g><g><title>0x7f3feb96e43f (libc-2.29.so) (1 samples, 0.20%)</title><rect x="515" y="1604" width="2" height="15" fill="rgb(207,140,52)"/><text x="518.00" y="1614.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:28) (1 samples, 0.20%)</title><rect x="517" y="84" width="2" height="15" fill="rgb(216,207,35)"/><text x="520.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.20%)</title><rect x="517" y="100" width="2" height="15" fill="rgb(245,3,4)"/><text x="520.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.20%)</title><rect x="517" y="116" width="2" height="15" fill="rgb(206,28,25)"/><text x="520.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.20%)</title><rect x="517" y="132" width="2" height="15" fill="rgb(242,52,2)"/><text x="520.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.20%)</title><rect x="517" y="148" width="2" height="15" fill="rgb(251,51,8)"/><text x="520.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.20%)</title><rect x="517" y="164" width="2" height="15" fill="rgb(252,9,24)"/><text x="520.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.20%)</title><rect x="517" y="180" width="2" height="15" fill="rgb(215,36,22)"/><text x="520.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.20%)</title><rect x="517" y="196" width="2" height="15" fill="rgb(223,21,52)"/><text x="520.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="517" y="212" width="2" height="15" fill="rgb(231,94,35)"/><text x="520.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="517" y="228" width="2" height="15" fill="rgb(226,64,12)"/><text x="520.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="517" y="244" width="2" height="15" fill="rgb(209,94,10)"/><text x="520.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="517" y="260" width="2" height="15" fill="rgb(254,169,27)"/><text x="520.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="517" y="276" width="2" height="15" fill="rgb(232,33,15)"/><text x="520.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.20%)</title><rect x="517" y="292" width="2" height="15" fill="rgb(231,134,9)"/><text x="520.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="517" y="308" width="2" height="15" fill="rgb(226,6,7)"/><text x="520.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="517" y="324" width="2" height="15" fill="rgb(239,220,46)"/><text x="520.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="517" y="340" width="2" height="15" fill="rgb(244,177,2)"/><text x="520.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="517" y="356" width="2" height="15" fill="rgb(205,31,44)"/><text x="520.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="517" y="372" width="2" height="15" fill="rgb(248,128,22)"/><text x="520.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.20%)</title><rect x="517" y="388" width="2" height="15" fill="rgb(216,40,32)"/><text x="520.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.20%)</title><rect x="517" y="404" width="2" height="15" fill="rgb(244,145,49)"/><text x="520.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.20%)</title><rect x="517" y="420" width="2" height="15" fill="rgb(222,135,12)"/><text x="520.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.20%)</title><rect x="517" y="436" width="2" height="15" fill="rgb(230,164,29)"/><text x="520.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.20%)</title><rect x="517" y="452" width="2" height="15" fill="rgb(234,125,42)"/><text x="520.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.20%)</title><rect x="517" y="468" width="2" height="15" fill="rgb(246,130,17)"/><text x="520.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.20%)</title><rect x="517" y="484" width="2" height="15" fill="rgb(222,83,30)"/><text x="520.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.20%)</title><rect x="517" y="500" width="2" height="15" fill="rgb(217,14,12)"/><text x="520.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.20%)</title><rect x="517" y="516" width="2" height="15" fill="rgb(214,16,47)"/><text x="520.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.20%)</title><rect x="517" y="532" width="2" height="15" fill="rgb(218,114,17)"/><text x="520.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.20%)</title><rect x="517" y="548" width="2" height="15" fill="rgb(226,178,24)"/><text x="520.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.20%)</title><rect x="517" y="564" width="2" height="15" fill="rgb(227,104,2)"/><text x="520.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.20%)</title><rect x="517" y="580" width="2" height="15" fill="rgb(207,190,29)"/><text x="520.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.20%)</title><rect x="517" y="596" width="2" height="15" fill="rgb(238,107,12)"/><text x="520.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:722) (1 samples, 0.20%)</title><rect x="517" y="612" width="2" height="15" fill="rgb(248,177,38)"/><text x="520.00" y="622.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.20%)</title><rect x="517" y="628" width="2" height="15" fill="rgb(254,139,46)"/><text x="520.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.20%)</title><rect x="517" y="644" width="2" height="15" fill="rgb(212,3,5)"/><text x="520.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.20%)</title><rect x="517" y="660" width="2" height="15" fill="rgb(253,20,46)"/><text x="520.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.20%)</title><rect x="517" y="676" width="2" height="15" fill="rgb(227,177,13)"/><text x="520.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.20%)</title><rect x="517" y="692" width="2" height="15" fill="rgb(237,217,28)"/><text x="520.00" y="702.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:172) (1 samples, 0.20%)</title><rect x="517" y="708" width="2" height="15" fill="rgb(221,149,46)"/><text x="520.00" y="718.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.20%)</title><rect x="519" y="196" width="3" height="15" fill="rgb(231,148,43)"/><text x="522.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.20%)</title><rect x="519" y="212" width="3" height="15" fill="rgb(213,97,9)"/><text x="522.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (1 samples, 0.20%)</title><rect x="519" y="228" width="3" height="15" fill="rgb(216,136,1)"/><text x="522.00" y="238.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (1 samples, 0.20%)</title><rect x="519" y="244" width="3" height="15" fill="rgb(220,54,24)"/><text x="522.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="519" y="260" width="3" height="15" fill="rgb(254,119,0)"/><text x="522.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="519" y="276" width="3" height="15" fill="rgb(251,70,53)"/><text x="522.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.20%)</title><rect x="519" y="292" width="3" height="15" fill="rgb(235,102,2)"/><text x="522.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.20%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(225,182,47)"/><text x="522.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.20%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(235,138,37)"/><text x="522.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (1 samples, 0.20%)</title><rect x="522" y="228" width="2" height="15" fill="rgb(251,29,13)"/><text x="525.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.20%)</title><rect x="522" y="244" width="2" height="15" fill="rgb(210,211,14)"/><text x="525.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.20%)</title><rect x="522" y="260" width="2" height="15" fill="rgb(238,220,15)"/><text x="525.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.20%)</title><rect x="522" y="276" width="2" height="15" fill="rgb(246,220,48)"/><text x="525.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.20%)</title><rect x="522" y="292" width="2" height="15" fill="rgb(235,222,8)"/><text x="525.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.20%)</title><rect x="522" y="308" width="2" height="15" fill="rgb(210,59,30)"/><text x="525.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:726) (1 samples, 0.20%)</title><rect x="522" y="324" width="2" height="15" fill="rgb(226,55,19)"/><text x="525.00" y="334.50"></text></g><g><title>0x7f3fd6c77214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="524" y="324" width="2" height="15" fill="rgb(236,158,5)"/><text x="527.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (1 samples, 0.20%)</title><rect x="524" y="340" width="2" height="15" fill="rgb(242,189,5)"/><text x="527.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:18) (4 samples, 0.80%)</title><rect x="519" y="100" width="10" height="15" fill="rgb(220,23,48)"/><text x="522.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (4 samples, 0.80%)</title><rect x="519" y="116" width="10" height="15" fill="rgb(212,64,27)"/><text x="522.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (4 samples, 0.80%)</title><rect x="519" y="132" width="10" height="15" fill="rgb(218,157,0)"/><text x="522.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (4 samples, 0.80%)</title><rect x="519" y="148" width="10" height="15" fill="rgb(243,126,9)"/><text x="522.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (4 samples, 0.80%)</title><rect x="519" y="164" width="10" height="15" fill="rgb(242,0,11)"/><text x="522.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (4 samples, 0.80%)</title><rect x="519" y="180" width="10" height="15" fill="rgb(233,222,2)"/><text x="522.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (3 samples, 0.60%)</title><rect x="522" y="196" width="7" height="15" fill="rgb(249,137,53)"/><text x="525.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (3 samples, 0.60%)</title><rect x="522" y="212" width="7" height="15" fill="rgb(237,215,35)"/><text x="525.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (2 samples, 0.40%)</title><rect x="524" y="228" width="5" height="15" fill="rgb(218,184,46)"/><text x="527.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.40%)</title><rect x="524" y="244" width="5" height="15" fill="rgb(214,125,18)"/><text x="527.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.40%)</title><rect x="524" y="260" width="5" height="15" fill="rgb(237,22,37)"/><text x="527.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.40%)</title><rect x="524" y="276" width="5" height="15" fill="rgb(207,218,26)"/><text x="527.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.40%)</title><rect x="524" y="292" width="5" height="15" fill="rgb(217,134,2)"/><text x="527.00" y="302.50"></text></g><g><title>0x7f3fd6c5533d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="524" y="308" width="5" height="15" fill="rgb(233,19,39)"/><text x="527.00" y="318.50"></text></g><g><title>0x7f3fd6c77228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="526" y="324" width="3" height="15" fill="rgb(248,163,42)"/><text x="529.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.20%)</title><rect x="533" y="148" width="3" height="15" fill="rgb(225,200,12)"/><text x="536.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:426) (1 samples, 0.20%)</title><rect x="536" y="164" width="2" height="15" fill="rgb(229,36,17)"/><text x="539.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (1 samples, 0.20%)</title><rect x="538" y="164" width="3" height="15" fill="rgb(206,104,14)"/><text x="541.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (4 samples, 0.80%)</title><rect x="548" y="180" width="9" height="15" fill="rgb(214,17,17)"/><text x="551.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.20%)</title><rect x="555" y="196" width="2" height="15" fill="rgb(248,222,27)"/><text x="558.00" y="206.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.20%)</title><rect x="571" y="324" width="3" height="15" fill="rgb(236,229,52)"/><text x="574.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.20%)</title><rect x="574" y="340" width="2" height="15" fill="rgb(214,84,10)"/><text x="577.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.20%)</title><rect x="574" y="356" width="2" height="15" fill="rgb(218,223,19)"/><text x="577.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:572) (1 samples, 0.20%)</title><rect x="574" y="372" width="2" height="15" fill="rgb(246,59,28)"/><text x="577.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.20%)</title><rect x="574" y="388" width="2" height="15" fill="rgb(206,1,35)"/><text x="577.00" y="398.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.20%)</title><rect x="574" y="404" width="2" height="15" fill="rgb(214,146,37)"/><text x="577.00" y="414.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.20%)</title><rect x="574" y="420" width="2" height="15" fill="rgb(253,45,44)"/><text x="577.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.20%)</title><rect x="576" y="356" width="2" height="15" fill="rgb(244,218,34)"/><text x="579.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.20%)</title><rect x="576" y="372" width="2" height="15" fill="rgb(224,74,24)"/><text x="579.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.20%)</title><rect x="576" y="388" width="2" height="15" fill="rgb(220,142,47)"/><text x="579.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.20%)</title><rect x="576" y="404" width="2" height="15" fill="rgb(223,87,54)"/><text x="579.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="576" y="420" width="2" height="15" fill="rgb(230,59,54)"/><text x="579.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.20%)</title><rect x="578" y="356" width="3" height="15" fill="rgb(237,211,43)"/><text x="581.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.20%)</title><rect x="578" y="372" width="3" height="15" fill="rgb(230,225,40)"/><text x="581.00" y="382.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c:2035) (1 samples, 0.20%)</title><rect x="578" y="388" width="3" height="15" fill="rgb(248,224,4)"/><text x="581.00" y="398.50"></text></g><g><title>reduce_loop (ufunc_object.c:3534) (1 samples, 0.20%)</title><rect x="581" y="372" width="2" height="15" fill="rgb(252,189,0)"/><text x="584.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3535) (1 samples, 0.20%)</title><rect x="583" y="372" width="2" height="15" fill="rgb(245,50,15)"/><text x="586.00" y="382.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.20%)</title><rect x="585" y="372" width="3" height="15" fill="rgb(211,207,43)"/><text x="588.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.20%)</title><rect x="588" y="388" width="2" height="15" fill="rgb(205,173,30)"/><text x="591.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (5 samples, 1.00%)</title><rect x="590" y="388" width="12" height="15" fill="rgb(213,106,11)"/><text x="593.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (3 samples, 0.60%)</title><rect x="595" y="404" width="7" height="15" fill="rgb(226,159,54)"/><text x="598.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1762) (1 samples, 0.20%)</title><rect x="602" y="388" width="2" height="15" fill="rgb(205,180,34)"/><text x="605.00" y="398.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.20%)</title><rect x="604" y="388" width="3" height="15" fill="rgb(205,183,37)"/><text x="607.00" y="398.50"></text></g><g><title>array_sum (methods.c:2215) (19 samples, 3.80%)</title><rect x="569" y="260" width="45" height="15" fill="rgb(245,67,43)"/><text x="572.00" y="270.50">arra..</text></g><g><title>forward_ndarray_method (methods.c:108) (19 samples, 3.80%)</title><rect x="569" y="276" width="45" height="15" fill="rgb(252,149,10)"/><text x="572.00" y="286.50">forw..</text></g><g><title>_sum (numpy/core/_methods.py:38) (18 samples, 3.60%)</title><rect x="571" y="292" width="43" height="15" fill="rgb(213,6,35)"/><text x="574.00" y="302.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (18 samples, 3.60%)</title><rect x="571" y="308" width="43" height="15" fill="rgb(226,150,3)"/><text x="574.00" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (17 samples, 3.40%)</title><rect x="574" y="324" width="40" height="15" fill="rgb(224,125,8)"/><text x="577.00" y="334.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (16 samples, 3.20%)</title><rect x="576" y="340" width="38" height="15" fill="rgb(208,5,39)"/><text x="579.00" y="350.50">PyU..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (14 samples, 2.80%)</title><rect x="581" y="356" width="33" height="15" fill="rgb(230,191,49)"/><text x="584.00" y="366.50">Py..</text></g><g><title>reduce_loop (ufunc_object.c:3569) (11 samples, 2.20%)</title><rect x="588" y="372" width="26" height="15" fill="rgb(237,133,40)"/><text x="591.00" y="382.50">r..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (3 samples, 0.60%)</title><rect x="607" y="388" width="7" height="15" fill="rgb(244,168,13)"/><text x="610.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 0.60%)</title><rect x="614" y="260" width="7" height="15" fill="rgb(225,191,37)"/><text x="617.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.60%)</title><rect x="614" y="276" width="7" height="15" fill="rgb(228,181,34)"/><text x="617.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (3 samples, 0.60%)</title><rect x="614" y="292" width="7" height="15" fill="rgb(213,176,37)"/><text x="617.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (3 samples, 0.60%)</title><rect x="614" y="308" width="7" height="15" fill="rgb(212,62,51)"/><text x="617.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src:1985) (3 samples, 0.60%)</title><rect x="614" y="324" width="7" height="15" fill="rgb(223,22,10)"/><text x="617.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src:195) (3 samples, 0.60%)</title><rect x="614" y="340" width="7" height="15" fill="rgb(205,106,15)"/><text x="617.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src:1057) (3 samples, 0.60%)</title><rect x="614" y="356" width="7" height="15" fill="rgb(222,171,24)"/><text x="617.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (3 samples, 0.60%)</title><rect x="614" y="372" width="7" height="15" fill="rgb(254,139,3)"/><text x="617.00" y="382.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (25 samples, 5.00%)</title><rect x="564" y="244" width="59" height="15" fill="rgb(235,119,39)"/><text x="567.00" y="254.50">norm_l..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.20%)</title><rect x="621" y="260" width="2" height="15" fill="rgb(243,140,32)"/><text x="624.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.20%)</title><rect x="621" y="276" width="2" height="15" fill="rgb(214,171,27)"/><text x="624.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.20%)</title><rect x="621" y="292" width="2" height="15" fill="rgb(240,62,54)"/><text x="624.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.20%)</title><rect x="623" y="260" width="2" height="15" fill="rgb(229,216,37)"/><text x="626.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.20%)</title><rect x="623" y="276" width="2" height="15" fill="rgb(230,0,40)"/><text x="626.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.20%)</title><rect x="623" y="292" width="2" height="15" fill="rgb(250,100,10)"/><text x="626.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.20%)</title><rect x="623" y="308" width="2" height="15" fill="rgb(209,116,17)"/><text x="626.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.20%)</title><rect x="625" y="276" width="3" height="15" fill="rgb(226,208,22)"/><text x="628.00" y="286.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2022) (1 samples, 0.20%)</title><rect x="625" y="292" width="3" height="15" fill="rgb(220,159,22)"/><text x="628.00" y="302.50"></text></g><g><title>set_ufunc_loop_data_types (ufunc_type_resolution.c:1746) (1 samples, 0.20%)</title><rect x="625" y="308" width="3" height="15" fill="rgb(209,145,27)"/><text x="628.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.20%)</title><rect x="628" y="324" width="2" height="15" fill="rgb(215,175,25)"/><text x="631.00" y="334.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.20%)</title><rect x="628" y="340" width="2" height="15" fill="rgb(218,41,24)"/><text x="631.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.40%)</title><rect x="630" y="356" width="5" height="15" fill="rgb(254,146,45)"/><text x="633.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.20%)</title><rect x="635" y="356" width="2" height="15" fill="rgb(219,0,48)"/><text x="638.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.40%)</title><rect x="637" y="372" width="5" height="15" fill="rgb(219,108,6)"/><text x="640.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.20%)</title><rect x="642" y="372" width="2" height="15" fill="rgb(235,155,4)"/><text x="645.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (7 samples, 1.40%)</title><rect x="637" y="356" width="17" height="15" fill="rgb(224,98,43)"/><text x="640.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (4 samples, 0.80%)</title><rect x="644" y="372" width="10" height="15" fill="rgb(230,134,51)"/><text x="647.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (12 samples, 2.40%)</title><rect x="628" y="308" width="28" height="15" fill="rgb(215,65,45)"/><text x="631.00" y="318.50">i..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (11 samples, 2.20%)</title><rect x="630" y="324" width="26" height="15" fill="rgb(248,101,54)"/><text x="633.00" y="334.50">N..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (11 samples, 2.20%)</title><rect x="630" y="340" width="26" height="15" fill="rgb(233,85,4)"/><text x="633.00" y="350.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1076) (1 samples, 0.20%)</title><rect x="654" y="356" width="2" height="15" fill="rgb(225,112,9)"/><text x="657.00" y="366.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:603) (1 samples, 0.20%)</title><rect x="656" y="356" width="3" height="15" fill="rgb(205,4,9)"/><text x="659.00" y="366.50"></text></g><g><title>_mm_div_ps (xmmintrin.h:175) (1 samples, 0.20%)</title><rect x="656" y="372" width="3" height="15" fill="rgb(233,222,28)"/><text x="659.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 8.60%)</title><rect x="559" y="196" width="102" height="15" fill="rgb(250,94,0)"/><text x="562.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 8.60%)</title><rect x="559" y="212" width="102" height="15" fill="rgb(247,225,22)"/><text x="562.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (43 samples, 8.60%)</title><rect x="559" y="228" width="102" height="15" fill="rgb(246,183,8)"/><text x="562.00" y="238.50">_run (mlprod..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (16 samples, 3.20%)</title><rect x="623" y="244" width="38" height="15" fill="rgb(240,212,20)"/><text x="626.00" y="254.50">nor..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (15 samples, 3.00%)</title><rect x="625" y="260" width="36" height="15" fill="rgb(213,87,30)"/><text x="628.00" y="270.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (14 samples, 2.80%)</title><rect x="628" y="276" width="33" height="15" fill="rgb(219,171,30)"/><text x="631.00" y="286.50">Py..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (14 samples, 2.80%)</title><rect x="628" y="292" width="33" height="15" fill="rgb(210,162,37)"/><text x="631.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.40%)</title><rect x="656" y="308" width="5" height="15" fill="rgb(230,36,31)"/><text x="659.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.40%)</title><rect x="656" y="324" width="5" height="15" fill="rgb(253,38,2)"/><text x="659.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.40%)</title><rect x="656" y="340" width="5" height="15" fill="rgb(246,165,17)"/><text x="659.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (1 samples, 0.20%)</title><rect x="659" y="356" width="2" height="15" fill="rgb(248,171,21)"/><text x="662.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.20%)</title><rect x="659" y="372" width="2" height="15" fill="rgb(221,0,18)"/><text x="662.00" y="382.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.20%)</title><rect x="663" y="260" width="3" height="15" fill="rgb(227,201,44)"/><text x="666.00" y="270.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:930) (1 samples, 0.20%)</title><rect x="666" y="308" width="2" height="15" fill="rgb(207,172,4)"/><text x="669.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c:2100) (1 samples, 0.20%)</title><rect x="666" y="324" width="2" height="15" fill="rgb(245,77,42)"/><text x="669.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:105) (1 samples, 0.20%)</title><rect x="666" y="340" width="2" height="15" fill="rgb(242,114,50)"/><text x="669.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (3 samples, 0.60%)</title><rect x="668" y="324" width="7" height="15" fill="rgb(244,28,49)"/><text x="671.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (3 samples, 0.60%)</title><rect x="668" y="340" width="7" height="15" fill="rgb(210,193,10)"/><text x="671.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.60%)</title><rect x="668" y="356" width="7" height="15" fill="rgb(224,150,22)"/><text x="671.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.60%)</title><rect x="668" y="372" width="7" height="15" fill="rgb(207,143,48)"/><text x="671.00" y="382.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.00%)</title><rect x="666" y="276" width="11" height="15" fill="rgb(223,75,48)"/><text x="669.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (5 samples, 1.00%)</title><rect x="666" y="292" width="11" height="15" fill="rgb(252,49,10)"/><text x="669.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (4 samples, 0.80%)</title><rect x="668" y="308" width="9" height="15" fill="rgb(211,155,35)"/><text x="671.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (1 samples, 0.20%)</title><rect x="675" y="324" width="2" height="15" fill="rgb(250,59,19)"/><text x="678.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:413) (1 samples, 0.20%)</title><rect x="675" y="340" width="2" height="15" fill="rgb(247,2,35)"/><text x="678.00" y="350.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.20%)</title><rect x="677" y="276" width="3" height="15" fill="rgb(220,88,27)"/><text x="680.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (22 samples, 4.40%)</title><rect x="661" y="228" width="52" height="15" fill="rgb(226,128,21)"/><text x="664.00" y="238.50">_run ..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (22 samples, 4.40%)</title><rect x="661" y="244" width="52" height="15" fill="rgb(217,169,18)"/><text x="664.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (20 samples, 4.00%)</title><rect x="666" y="260" width="47" height="15" fill="rgb(205,181,12)"/><text x="669.00" y="270.50">dot ..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 2.80%)</title><rect x="680" y="276" width="33" height="15" fill="rgb(234,174,53)"/><text x="683.00" y="286.50">sg..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:231) (1 samples, 0.20%)</title><rect x="713" y="308" width="2" height="15" fill="rgb(205,106,53)"/><text x="716.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.40%)</title><rect x="713" y="292" width="5" height="15" fill="rgb(241,119,21)"/><text x="716.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.20%)</title><rect x="715" y="308" width="3" height="15" fill="rgb(220,169,12)"/><text x="718.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3029) (1 samples, 0.20%)</title><rect x="715" y="324" width="3" height="15" fill="rgb(231,144,37)"/><text x="718.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (2 samples, 0.40%)</title><rect x="718" y="340" width="4" height="15" fill="rgb(224,107,11)"/><text x="721.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.60%)</title><rect x="718" y="292" width="7" height="15" fill="rgb(227,67,20)"/><text x="721.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.60%)</title><rect x="718" y="308" width="7" height="15" fill="rgb(223,144,48)"/><text x="721.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.60%)</title><rect x="718" y="324" width="7" height="15" fill="rgb(253,26,4)"/><text x="721.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.20%)</title><rect x="722" y="340" width="3" height="15" fill="rgb(228,19,19)"/><text x="725.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.20%)</title><rect x="725" y="292" width="2" height="15" fill="rgb(249,203,49)"/><text x="728.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="725" y="308" width="2" height="15" fill="rgb(235,213,28)"/><text x="728.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (7 samples, 1.40%)</title><rect x="713" y="228" width="16" height="15" fill="rgb(225,17,49)"/><text x="716.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.40%)</title><rect x="713" y="244" width="16" height="15" fill="rgb(235,43,54)"/><text x="716.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.40%)</title><rect x="713" y="260" width="16" height="15" fill="rgb(240,108,43)"/><text x="716.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.40%)</title><rect x="713" y="276" width="16" height="15" fill="rgb(243,88,33)"/><text x="716.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.20%)</title><rect x="727" y="292" width="2" height="15" fill="rgb(229,136,9)"/><text x="730.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.20%)</title><rect x="727" y="308" width="2" height="15" fill="rgb(221,119,31)"/><text x="730.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.20%)</title><rect x="729" y="260" width="3" height="15" fill="rgb(250,145,4)"/><text x="732.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.20%)</title><rect x="729" y="276" width="3" height="15" fill="rgb(219,185,6)"/><text x="732.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c:2231) (1 samples, 0.20%)</title><rect x="729" y="292" width="3" height="15" fill="rgb(247,7,35)"/><text x="732.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.20%)</title><rect x="732" y="260" width="2" height="15" fill="rgb(208,108,31)"/><text x="735.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.20%)</title><rect x="732" y="276" width="2" height="15" fill="rgb(245,143,8)"/><text x="735.00" y="286.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c:204) (1 samples, 0.20%)</title><rect x="734" y="292" width="2" height="15" fill="rgb(217,36,33)"/><text x="737.00" y="302.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.20%)</title><rect x="736" y="340" width="3" height="15" fill="rgb(241,87,31)"/><text x="739.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.20%)</title><rect x="736" y="356" width="3" height="15" fill="rgb(212,117,47)"/><text x="739.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.20%)</title><rect x="736" y="372" width="3" height="15" fill="rgb(246,4,24)"/><text x="739.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (3 samples, 0.60%)</title><rect x="734" y="276" width="7" height="15" fill="rgb(205,171,40)"/><text x="737.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.40%)</title><rect x="736" y="292" width="5" height="15" fill="rgb(227,212,26)"/><text x="739.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.40%)</title><rect x="736" y="308" width="5" height="15" fill="rgb(219,118,11)"/><text x="739.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (2 samples, 0.40%)</title><rect x="736" y="324" width="5" height="15" fill="rgb(214,151,35)"/><text x="739.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:454) (1 samples, 0.20%)</title><rect x="739" y="340" width="2" height="15" fill="rgb(227,150,3)"/><text x="742.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:375) (1 samples, 0.20%)</title><rect x="739" y="356" width="2" height="15" fill="rgb(207,200,30)"/><text x="742.00" y="366.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h:294) (1 samples, 0.20%)</title><rect x="739" y="372" width="2" height="15" fill="rgb(225,92,48)"/><text x="742.00" y="382.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.20%)</title><rect x="739" y="388" width="2" height="15" fill="rgb(207,187,12)"/><text x="742.00" y="398.50"></text></g><g><title>0x7f3fd6c5533a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="741" y="308" width="2" height="15" fill="rgb(222,104,30)"/><text x="744.00" y="318.50"></text></g><g><title>0x7f3fd6c35890 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="743" y="340" width="3" height="15" fill="rgb(239,166,2)"/><text x="746.00" y="350.50"></text></g><g><title>0x7f3fd6d80c70 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="746" y="340" width="2" height="15" fill="rgb(246,155,32)"/><text x="749.00" y="350.50"></text></g><g><title>0x7f3febab91a0 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="779" y="356" width="2" height="15" fill="rgb(218,4,21)"/><text x="782.00" y="366.50"></text></g><g><title>0x7f3febaece00 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="781" y="356" width="3" height="15" fill="rgb(236,132,54)"/><text x="784.00" y="366.50"></text></g><g><title>0x7f3febaece0e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="784" y="356" width="2" height="15" fill="rgb(238,15,48)"/><text x="787.00" y="366.50"></text></g><g><title>0x7f3febaece37 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="786" y="356" width="2" height="15" fill="rgb(254,178,29)"/><text x="789.00" y="366.50"></text></g><g><title>0x7f3febaece4e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="788" y="356" width="3" height="15" fill="rgb(229,10,51)"/><text x="791.00" y="366.50"></text></g><g><title>0x7f3febaece62 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="791" y="356" width="4" height="15" fill="rgb(209,134,26)"/><text x="794.00" y="366.50"></text></g><g><title>0x7f3febaece7e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="795" y="356" width="3" height="15" fill="rgb(252,192,53)"/><text x="798.00" y="366.50"></text></g><g><title>0x7f3fd6c77214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (25 samples, 5.00%)</title><rect x="743" y="324" width="59" height="15" fill="rgb(243,142,16)"/><text x="746.00" y="334.50">0x7f3f..</text></g><g><title>expf (libm-2.29.so) (23 samples, 4.60%)</title><rect x="748" y="340" width="54" height="15" fill="rgb(236,127,10)"/><text x="751.00" y="350.50">expf ..</text></g><g><title>0x7f3febaecea6 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="798" y="356" width="4" height="15" fill="rgb(231,176,28)"/><text x="801.00" y="366.50"></text></g><g><title>0x7f3fd6c77224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.40%)</title><rect x="802" y="324" width="5" height="15" fill="rgb(232,87,39)"/><text x="805.00" y="334.50"></text></g><g><title>0x7f3fd6c5533d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (37 samples, 7.40%)</title><rect x="743" y="308" width="88" height="15" fill="rgb(223,123,13)"/><text x="746.00" y="318.50">0x7f3fd6c5..</text></g><g><title>0x7f3fd6c77228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.00%)</title><rect x="807" y="324" width="24" height="15" fill="rgb(215,68,13)"/><text x="810.00" y="334.50">0..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (44 samples, 8.80%)</title><rect x="729" y="244" width="104" height="15" fill="rgb(216,221,30)"/><text x="732.00" y="254.50">ufunc_generi..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (42 samples, 8.40%)</title><rect x="734" y="260" width="99" height="15" fill="rgb(205,76,44)"/><text x="737.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (39 samples, 7.80%)</title><rect x="741" y="276" width="92" height="15" fill="rgb(220,187,14)"/><text x="744.00" y="286.50">execute_le..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (39 samples, 7.80%)</title><rect x="741" y="292" width="92" height="15" fill="rgb(229,205,26)"/><text x="744.00" y="302.50">trivial_tw..</text></g><g><title>0x7f3fd6c55345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.20%)</title><rect x="831" y="308" width="2" height="15" fill="rgb(212,206,17)"/><text x="834.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (45 samples, 9.00%)</title><rect x="729" y="228" width="107" height="15" fill="rgb(241,28,6)"/><text x="732.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.20%)</title><rect x="833" y="244" width="3" height="15" fill="rgb(208,31,30)"/><text x="836.00" y="254.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:473) (1 samples, 0.20%)</title><rect x="833" y="260" width="3" height="15" fill="rgb(243,94,45)"/><text x="836.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:56) (1 samples, 0.20%)</title><rect x="836" y="228" width="2" height="15" fill="rgb(216,152,34)"/><text x="839.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:4) (3 samples, 0.60%)</title><rect x="843" y="244" width="7" height="15" fill="rgb(212,35,54)"/><text x="846.00" y="254.50"></text></g><g><title>_argmax_dispatcher (numpy/core/fromnumeric.py:1088) (1 samples, 0.20%)</title><rect x="847" y="260" width="3" height="15" fill="rgb(205,101,47)"/><text x="850.00" y="270.50"></text></g><g><title>array_argmax (methods.c:297) (6 samples, 1.20%)</title><rect x="854" y="308" width="15" height="15" fill="rgb(223,61,48)"/><text x="857.00" y="318.50"></text></g><g><title>0x7f3feb983e86 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="866" y="324" width="3" height="15" fill="rgb(217,126,15)"/><text x="869.00" y="334.50"></text></g><g><title>PyArray_ArgMax (calculation.c:130) (1 samples, 0.20%)</title><rect x="869" y="324" width="2" height="15" fill="rgb(225,49,27)"/><text x="872.00" y="334.50"></text></g><g><title>PyArray_DATA (ndarraytypes.h:1486) (1 samples, 0.20%)</title><rect x="869" y="340" width="2" height="15" fill="rgb(254,82,36)"/><text x="872.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3094) (1 samples, 0.20%)</title><rect x="873" y="340" width="3" height="15" fill="rgb(228,168,22)"/><text x="876.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3109) (2 samples, 0.40%)</title><rect x="876" y="340" width="4" height="15" fill="rgb(219,174,24)"/><text x="879.00" y="350.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (1 samples, 0.20%)</title><rect x="880" y="340" width="3" height="15" fill="rgb(214,203,2)"/><text x="883.00" y="350.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (7 samples, 1.40%)</title><rect x="871" y="324" width="16" height="15" fill="rgb(234,149,16)"/><text x="874.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3129) (2 samples, 0.40%)</title><rect x="883" y="340" width="4" height="15" fill="rgb(254,52,24)"/><text x="886.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (97 samples, 19.40%)</title><rect x="661" y="196" width="229" height="15" fill="rgb(220,82,0)"/><text x="664.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (97 samples, 19.40%)</title><rect x="661" y="212" width="229" height="15" fill="rgb(211,90,43)"/><text x="664.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (22 samples, 4.40%)</title><rect x="838" y="228" width="52" height="15" fill="rgb(217,117,20)"/><text x="841.00" y="238.50">_run ..</text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (17 samples, 3.40%)</title><rect x="850" y="244" width="40" height="15" fill="rgb(209,214,47)"/><text x="853.00" y="254.50">arg..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 3.40%)</title><rect x="850" y="260" width="40" height="15" fill="rgb(223,202,8)"/><text x="853.00" y="270.50">arr..</text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (17 samples, 3.40%)</title><rect x="850" y="276" width="40" height="15" fill="rgb(246,195,26)"/><text x="853.00" y="286.50">arg..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (15 samples, 3.00%)</title><rect x="854" y="292" width="36" height="15" fill="rgb(219,54,49)"/><text x="857.00" y="302.50">_wr..</text></g><g><title>array_argmax (methods.c:302) (9 samples, 1.80%)</title><rect x="869" y="308" width="21" height="15" fill="rgb(223,164,48)"/><text x="872.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:85) (1 samples, 0.20%)</title><rect x="887" y="324" width="3" height="15" fill="rgb(242,74,23)"/><text x="890.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.20%)</title><rect x="887" y="340" width="3" height="15" fill="rgb(209,57,52)"/><text x="890.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (142 samples, 28.40%)</title><rect x="557" y="180" width="335" height="15" fill="rgb(239,45,24)"/><text x="560.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.20%)</title><rect x="890" y="196" width="2" height="15" fill="rgb(210,91,7)"/><text x="893.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.20%)</title><rect x="892" y="180" width="3" height="15" fill="rgb(221,25,44)"/><text x="895.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 0.60%)</title><rect x="895" y="180" width="7" height="15" fill="rgb(245,216,51)"/><text x="898.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.20%)</title><rect x="902" y="180" width="2" height="15" fill="rgb(243,117,43)"/><text x="905.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (155 samples, 31.00%)</title><rect x="541" y="164" width="365" height="15" fill="rgb(248,207,47)"/><text x="544.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.20%)</title><rect x="904" y="180" width="2" height="15" fill="rgb(208,30,54)"/><text x="907.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:45) (167 samples, 33.40%)</title><rect x="517" y="52" width="394" height="15" fill="rgb(250,162,40)"/><text x="520.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_sol..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:44) (167 samples, 33.40%)</title><rect x="517" y="68" width="394" height="15" fill="rgb(212,156,44)"/><text x="520.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (166 samples, 33.20%)</title><rect x="519" y="84" width="392" height="15" fill="rgb(229,174,51)"/><text x="522.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (162 samples, 32.40%)</title><rect x="529" y="100" width="382" height="15" fill="rgb(238,15,12)"/><text x="532.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_so..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (162 samples, 32.40%)</title><rect x="529" y="116" width="382" height="15" fill="rgb(243,113,23)"/><text x="532.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (161 samples, 32.20%)</title><rect x="531" y="132" width="380" height="15" fill="rgb(206,63,19)"/><text x="534.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (159 samples, 31.80%)</title><rect x="536" y="148" width="375" height="15" fill="rgb(249,167,29)"/><text x="539.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (2 samples, 0.40%)</title><rect x="906" y="164" width="5" height="15" fill="rgb(209,146,52)"/><text x="909.00" y="174.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:18) (1 samples, 0.20%)</title><rect x="911" y="100" width="2" height="15" fill="rgb(226,123,48)"/><text x="914.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.20%)</title><rect x="911" y="116" width="2" height="15" fill="rgb(235,115,33)"/><text x="914.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.20%)</title><rect x="911" y="132" width="2" height="15" fill="rgb(238,132,31)"/><text x="914.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.20%)</title><rect x="911" y="148" width="2" height="15" fill="rgb(249,140,10)"/><text x="914.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.20%)</title><rect x="911" y="164" width="2" height="15" fill="rgb(250,29,19)"/><text x="914.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.20%)</title><rect x="911" y="180" width="2" height="15" fill="rgb(207,7,42)"/><text x="914.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.20%)</title><rect x="911" y="196" width="2" height="15" fill="rgb(249,213,16)"/><text x="914.00" y="206.50"></text></g><g><title>0x7f3fab9ddff9 (?) (1 samples, 0.20%)</title><rect x="911" y="212" width="2" height="15" fill="rgb(235,219,12)"/><text x="914.00" y="222.50"></text></g><g><title>0x7f3fab9d8ef6 (?) (1 samples, 0.20%)</title><rect x="911" y="228" width="2" height="15" fill="rgb(254,181,50)"/><text x="914.00" y="238.50"></text></g><g><title>0x7f3fab9cd962 (?) (1 samples, 0.20%)</title><rect x="911" y="244" width="2" height="15" fill="rgb(239,219,6)"/><text x="914.00" y="254.50"></text></g><g><title>0x7f3faba017a7 (?) (1 samples, 0.20%)</title><rect x="911" y="260" width="2" height="15" fill="rgb(221,70,26)"/><text x="914.00" y="270.50"></text></g><g><title>0x7f3faba01379 (?) (1 samples, 0.20%)</title><rect x="911" y="276" width="2" height="15" fill="rgb(250,54,11)"/><text x="914.00" y="286.50"></text></g><g><title>0x7f3fabe5f8b8 (?) (1 samples, 0.20%)</title><rect x="911" y="292" width="2" height="15" fill="rgb(207,44,21)"/><text x="914.00" y="302.50"></text></g><g><title>0x7f3fabe5dc7f (?) (1 samples, 0.20%)</title><rect x="911" y="308" width="2" height="15" fill="rgb(240,151,54)"/><text x="914.00" y="318.50"></text></g><g><title>0x7f3fabe7099c (?) (1 samples, 0.20%)</title><rect x="911" y="324" width="2" height="15" fill="rgb(217,71,47)"/><text x="914.00" y="334.50"></text></g><g><title>0x7f3fabb55d39 (?) (1 samples, 0.20%)</title><rect x="911" y="340" width="2" height="15" fill="rgb(251,20,52)"/><text x="914.00" y="350.50"></text></g><g><title>0x7f3fabb5040d (?) (1 samples, 0.20%)</title><rect x="911" y="356" width="2" height="15" fill="rgb(248,135,54)"/><text x="914.00" y="366.50"></text></g><g><title>0x7f3febaece4a (libm-2.29.so) (1 samples, 0.20%)</title><rect x="911" y="372" width="2" height="15" fill="rgb(217,153,36)"/><text x="914.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="920" y="244" width="3" height="15" fill="rgb(254,175,4)"/><text x="923.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="920" y="260" width="3" height="15" fill="rgb(234,166,29)"/><text x="923.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 1.20%)</title><rect x="913" y="196" width="15" height="15" fill="rgb(223,62,4)"/><text x="916.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 0.80%)</title><rect x="918" y="212" width="10" height="15" fill="rgb(222,124,41)"/><text x="921.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.60%)</title><rect x="920" y="228" width="8" height="15" fill="rgb(245,49,30)"/><text x="923.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="923" y="244" width="5" height="15" fill="rgb(248,189,37)"/><text x="926.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="923" y="260" width="5" height="15" fill="rgb(237,18,41)"/><text x="926.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="923" y="276" width="5" height="15" fill="rgb(231,165,33)"/><text x="926.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.40%)</title><rect x="928" y="292" width="4" height="15" fill="rgb(231,21,9)"/><text x="931.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="930" y="308" width="2" height="15" fill="rgb(220,111,0)"/><text x="933.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="930" y="324" width="2" height="15" fill="rgb(252,12,25)"/><text x="933.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.20%)</title><rect x="930" y="340" width="2" height="15" fill="rgb(241,1,3)"/><text x="933.00" y="350.50"></text></g><g><title>0x7f3feb96ede0 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="930" y="356" width="2" height="15" fill="rgb(231,60,7)"/><text x="933.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="356" width="3" height="15" fill="rgb(216,86,5)"/><text x="1013.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="372" width="3" height="15" fill="rgb(250,138,0)"/><text x="1013.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="388" width="3" height="15" fill="rgb(207,65,12)"/><text x="1013.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="404" width="3" height="15" fill="rgb(227,217,43)"/><text x="1013.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="420" width="3" height="15" fill="rgb(251,98,41)"/><text x="1013.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="436" width="3" height="15" fill="rgb(246,53,42)"/><text x="1013.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1010" y="452" width="3" height="15" fill="rgb(228,115,28)"/><text x="1013.00" y="462.50"></text></g><g><title>0x7f3feb98dd50 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1041" y="372" width="2" height="15" fill="rgb(218,66,14)"/><text x="1044.00" y="382.50"></text></g><g><title>0x7f3feb98ddb3 (libc-2.29.so) (4 samples, 0.80%)</title><rect x="1043" y="372" width="10" height="15" fill="rgb(249,217,50)"/><text x="1046.00" y="382.50"></text></g><g><title>0x7f3febaece00 (libm-2.29.so) (3 samples, 0.60%)</title><rect x="1053" y="372" width="7" height="15" fill="rgb(250,194,48)"/><text x="1056.00" y="382.50"></text></g><g><title>0x7f3febaece0a (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1060" y="372" width="2" height="15" fill="rgb(207,104,51)"/><text x="1063.00" y="382.50"></text></g><g><title>0x7f3febaece17 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1062" y="372" width="2" height="15" fill="rgb(238,86,35)"/><text x="1065.00" y="382.50"></text></g><g><title>0x7f3febaece37 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1064" y="372" width="3" height="15" fill="rgb(217,102,33)"/><text x="1067.00" y="382.50"></text></g><g><title>0x7f3febaece4e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1067" y="372" width="2" height="15" fill="rgb(232,107,39)"/><text x="1070.00" y="382.50"></text></g><g><title>0x7f3febaece57 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1069" y="372" width="3" height="15" fill="rgb(233,155,13)"/><text x="1072.00" y="382.50"></text></g><g><title>0x7f3febaece6d (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(206,180,41)"/><text x="1075.00" y="382.50"></text></g><g><title>0x7f3febaece71 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1076" y="372" width="3" height="15" fill="rgb(208,140,27)"/><text x="1079.00" y="382.50"></text></g><g><title>0x7f3febaece76 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1079" y="372" width="2" height="15" fill="rgb(231,174,35)"/><text x="1082.00" y="382.50"></text></g><g><title>0x7f3febaece7a (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1081" y="372" width="5" height="15" fill="rgb(231,172,2)"/><text x="1084.00" y="382.50"></text></g><g><title>0x7f3febaece7e (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1086" y="372" width="2" height="15" fill="rgb(245,5,48)"/><text x="1089.00" y="382.50"></text></g><g><title>0x7f3febaece86 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1088" y="372" width="5" height="15" fill="rgb(250,187,24)"/><text x="1091.00" y="382.50"></text></g><g><title>0x7f3febaece92 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1093" y="372" width="2" height="15" fill="rgb(220,130,44)"/><text x="1096.00" y="382.50"></text></g><g><title>0x7f3febaece96 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1095" y="372" width="5" height="15" fill="rgb(241,97,38)"/><text x="1098.00" y="382.50"></text></g><g><title>0x7f3febaece9e (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1100" y="372" width="5" height="15" fill="rgb(228,24,15)"/><text x="1103.00" y="382.50"></text></g><g><title>0x7f3febaecea2 (libm-2.29.so) (2 samples, 0.40%)</title><rect x="1105" y="372" width="4" height="15" fill="rgb(253,143,47)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 15.20%)</title><rect x="932" y="340" width="180" height="15" fill="rgb(214,31,41)"/><text x="935.00" y="350.50">onnxruntime::ml::Linear..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (42 samples, 8.40%)</title><rect x="1013" y="356" width="99" height="15" fill="rgb(231,119,37)"/><text x="1016.00" y="366.50">onnxruntime..</text></g><g><title>0x7f3febaecea6 (libm-2.29.so) (1 samples, 0.20%)</title><rect x="1109" y="372" width="3" height="15" fill="rgb(251,220,50)"/><text x="1112.00" y="382.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 20.20%)</title><rect x="932" y="292" width="239" height="15" fill="rgb(250,92,34)"/><text x="935.00" y="302.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 20.20%)</title><rect x="932" y="308" width="239" height="15" fill="rgb(252,74,40)"/><text x="935.00" y="318.50">onnxruntime::utils::ExecuteGrap..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 20.20%)</title><rect x="932" y="324" width="239" height="15" fill="rgb(230,122,4)"/><text x="935.00" y="334.50">onnxruntime::SequentialExecutor..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.00%)</title><rect x="1112" y="340" width="59" height="15" fill="rgb(234,107,17)"/><text x="1115.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 5.00%)</title><rect x="1112" y="356" width="59" height="15" fill="rgb(236,162,43)"/><text x="1115.00" y="366.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 20.80%)</title><rect x="928" y="260" width="245" height="15" fill="rgb(221,27,37)"/><text x="931.00" y="270.50">onnxruntime::InferenceSession::R..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (104 samples, 20.80%)</title><rect x="928" y="276" width="245" height="15" fill="rgb(208,147,16)"/><text x="931.00" y="286.50">onnxruntime::InferenceSession::R..</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.20%)</title><rect x="1171" y="292" width="2" height="15" fill="rgb(236,162,50)"/><text x="1174.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(214,83,23)"/><text x="1174.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (111 samples, 22.20%)</title><rect x="913" y="164" width="262" height="15" fill="rgb(228,209,1)"/><text x="916.00" y="174.50">_run_whole_runtime (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (111 samples, 22.20%)</title><rect x="913" y="180" width="262" height="15" fill="rgb(241,21,32)"/><text x="916.00" y="190.50">run (mlprodict/onnxrt/ops_whole/ses..</text></g><g><title>run (onnxruntime/capi/session.py:136) (105 samples, 21.00%)</title><rect x="928" y="196" width="247" height="15" fill="rgb(226,166,6)"/><text x="931.00" y="206.50">run (onnxruntime/capi/session.py..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 21.00%)</title><rect x="928" y="212" width="247" height="15" fill="rgb(243,82,8)"/><text x="931.00" y="222.50">pybind11::cpp_function::dispatch..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 21.00%)</title><rect x="928" y="228" width="247" height="15" fill="rgb(247,173,46)"/><text x="931.00" y="238.50">void pybind11::cpp_function::ini..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (105 samples, 21.00%)</title><rect x="928" y="244" width="247" height="15" fill="rgb(222,177,51)"/><text x="931.00" y="254.50">onnxruntime::python::addObjectMe..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.20%)</title><rect x="1173" y="260" width="2" height="15" fill="rgb(233,6,23)"/><text x="1176.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.20%)</title><rect x="1173" y="276" width="2" height="15" fill="rgb(253,55,41)"/><text x="1176.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.20%)</title><rect x="1173" y="292" width="2" height="15" fill="rgb(253,154,36)"/><text x="1176.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.20%)</title><rect x="1173" y="308" width="2" height="15" fill="rgb(229,185,10)"/><text x="1176.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (115 samples, 23.00%)</title><rect x="913" y="132" width="272" height="15" fill="rgb(228,118,16)"/><text x="916.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (115 samples, 23.00%)</title><rect x="913" y="148" width="272" height="15" fill="rgb(231,219,32)"/><text x="916.00" y="158.50">run (mlprodict/onnxrt/onnx_inference..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (4 samples, 0.80%)</title><rect x="1175" y="164" width="10" height="15" fill="rgb(216,104,3)"/><text x="1178.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:52) (117 samples, 23.40%)</title><rect x="911" y="52" width="276" height="15" fill="rgb(221,208,11)"/><text x="914.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_l..</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:51) (117 samples, 23.40%)</title><rect x="911" y="68" width="276" height="15" fill="rgb(238,3,16)"/><text x="914.00" y="78.50">profile_ort (bench_LogisticRegressio..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:29) (117 samples, 23.40%)</title><rect x="911" y="84" width="276" height="15" fill="rgb(243,95,47)"/><text x="914.00" y="94.50">setup_profile (bench_LogisticRegress..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_solverliblinear_1000_4_12_float_nozipmap.py:23) (116 samples, 23.20%)</title><rect x="913" y="100" width="274" height="15" fill="rgb(230,58,9)"/><text x="916.00" y="110.50">profile (bench_LogisticRegression_li..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (116 samples, 23.20%)</title><rect x="913" y="116" width="274" height="15" fill="rgb(239,129,23)"/><text x="916.00" y="126.50">time_predict (mlprodict/asv_benchmar..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.20%)</title><rect x="1185" y="132" width="2" height="15" fill="rgb(235,170,2)"/><text x="1188.00" y="142.50"></text></g><g><title>all (500 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,191,45)"/><text x="13.00" y="46.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.20%)</title><rect x="1187" y="52" width="3" height="15" fill="rgb(250,89,47)"/><text x="1190.00" y="62.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.20%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(244,105,10)"/><text x="1190.00" y="78.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.20%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(240,131,53)"/><text x="1190.00" y="94.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.20%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(225,41,44)"/><text x="1190.00" y="110.50"></text></g><g><title>0x7f3feb96db35 (libc-2.29.so) (1 samples, 0.20%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(246,182,12)"/><text x="1190.00" y="126.50"></text></g></g></svg>