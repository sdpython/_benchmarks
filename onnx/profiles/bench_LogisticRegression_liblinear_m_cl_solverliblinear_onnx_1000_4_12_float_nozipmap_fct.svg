<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(205,82,25)"/><text x="13.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(206,18,40)"/><text x="13.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(214,34,33)"/><text x="13.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(214,224,16)"/><text x="13.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(225,1,8)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(227,156,15)"/><text x="13.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(216,173,49)"/><text x="13.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(224,50,41)"/><text x="13.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1108" width="3" height="15" fill="rgb(222,141,50)"/><text x="13.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1124" width="3" height="15" fill="rgb(238,49,40)"/><text x="13.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="10" y="1140" width="3" height="15" fill="rgb(242,56,37)"/><text x="13.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="10" y="1156" width="3" height="15" fill="rgb(215,63,46)"/><text x="13.00" y="1166.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="10" y="1172" width="3" height="15" fill="rgb(236,97,29)"/><text x="13.00" y="1182.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.27%)</title><rect x="10" y="1188" width="3" height="15" fill="rgb(206,46,54)"/><text x="13.00" y="1198.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.27%)</title><rect x="10" y="1204" width="3" height="15" fill="rgb(233,118,0)"/><text x="13.00" y="1214.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.27%)</title><rect x="10" y="1220" width="3" height="15" fill="rgb(212,176,30)"/><text x="13.00" y="1230.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.27%)</title><rect x="10" y="1236" width="3" height="15" fill="rgb(243,128,41)"/><text x="13.00" y="1246.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(211,227,24)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(212,190,53)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(238,128,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(213,30,33)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(243,111,30)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(220,124,43)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(252,172,33)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(210,48,26)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(224,76,4)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(220,78,49)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(231,71,50)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(249,192,28)"/><text x="13.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(220,141,6)"/><text x="13.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(244,129,39)"/><text x="13.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(209,50,33)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(229,177,37)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(254,37,28)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(223,129,34)"/><text x="13.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(210,169,6)"/><text x="13.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(218,157,19)"/><text x="13.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(207,3,50)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.54%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(206,14,54)"/><text x="13.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(229,129,27)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(249,135,8)"/><text x="16.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(213,142,14)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(213,57,40)"/><text x="16.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(241,161,42)"/><text x="16.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1060" width="3" height="15" fill="rgb(236,215,3)"/><text x="16.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1076" width="3" height="15" fill="rgb(247,156,2)"/><text x="16.00" y="1086.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="1092" width="3" height="15" fill="rgb(228,217,20)"/><text x="16.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1108" width="3" height="15" fill="rgb(254,198,7)"/><text x="16.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1124" width="3" height="15" fill="rgb(252,42,30)"/><text x="16.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1140" width="3" height="15" fill="rgb(212,185,49)"/><text x="16.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1156" width="3" height="15" fill="rgb(250,163,51)"/><text x="16.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1172" width="3" height="15" fill="rgb(237,15,52)"/><text x="16.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1188" width="3" height="15" fill="rgb(251,42,21)"/><text x="16.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1204" width="3" height="15" fill="rgb(213,30,48)"/><text x="16.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.27%)</title><rect x="13" y="1220" width="3" height="15" fill="rgb(239,56,13)"/><text x="16.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1236" width="3" height="15" fill="rgb(212,97,50)"/><text x="16.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1252" width="3" height="15" fill="rgb(229,25,22)"/><text x="16.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1268" width="3" height="15" fill="rgb(235,29,39)"/><text x="16.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1284" width="3" height="15" fill="rgb(243,183,2)"/><text x="16.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="13" y="1300" width="3" height="15" fill="rgb(231,156,16)"/><text x="16.00" y="1310.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.27%)</title><rect x="13" y="1316" width="3" height="15" fill="rgb(249,159,54)"/><text x="16.00" y="1326.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.27%)</title><rect x="13" y="1332" width="3" height="15" fill="rgb(211,193,35)"/><text x="16.00" y="1342.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.27%)</title><rect x="13" y="1348" width="3" height="15" fill="rgb(231,189,17)"/><text x="16.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="13" y="1364" width="3" height="15" fill="rgb(224,20,28)"/><text x="16.00" y="1374.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.27%)</title><rect x="13" y="1380" width="3" height="15" fill="rgb(241,198,3)"/><text x="16.00" y="1390.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.27%)</title><rect x="13" y="1396" width="3" height="15" fill="rgb(227,55,27)"/><text x="16.00" y="1406.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="13" y="1412" width="3" height="15" fill="rgb(250,7,5)"/><text x="16.00" y="1422.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.27%)</title><rect x="13" y="1428" width="3" height="15" fill="rgb(253,34,9)"/><text x="16.00" y="1438.50"></text></g><g><title>0x7fb3e879dc58 (?) (1 samples, 0.27%)</title><rect x="13" y="1444" width="3" height="15" fill="rgb(217,160,35)"/><text x="16.00" y="1454.50"></text></g><g><title>0x7fb3e8870479 (?) (1 samples, 0.27%)</title><rect x="13" y="1460" width="3" height="15" fill="rgb(234,87,0)"/><text x="16.00" y="1470.50"></text></g><g><title>0x7fb3e88703dc (?) (1 samples, 0.27%)</title><rect x="13" y="1476" width="3" height="15" fill="rgb(211,180,3)"/><text x="16.00" y="1486.50"></text></g><g><title>0x7fb3e8870103 (?) (1 samples, 0.27%)</title><rect x="13" y="1492" width="3" height="15" fill="rgb(243,214,4)"/><text x="16.00" y="1502.50"></text></g><g><title>0x7fb3e88716d3 (?) (1 samples, 0.27%)</title><rect x="13" y="1508" width="3" height="15" fill="rgb(207,150,21)"/><text x="16.00" y="1518.50"></text></g><g><title>0x7fb3e8870de8 (?) (1 samples, 0.27%)</title><rect x="13" y="1524" width="3" height="15" fill="rgb(212,9,43)"/><text x="16.00" y="1534.50"></text></g><g><title>0x7fb3e886b3f1 (?) (1 samples, 0.27%)</title><rect x="13" y="1540" width="3" height="15" fill="rgb(246,20,3)"/><text x="16.00" y="1550.50"></text></g><g><title>0x7fb3fa44cbc0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="13" y="1556" width="3" height="15" fill="rgb(207,69,24)"/><text x="16.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(246,162,13)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(223,33,14)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(227,95,50)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(218,215,22)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(217,40,20)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.27%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(227,137,20)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(243,15,35)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(224,195,9)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(222,99,26)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(220,31,45)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(233,193,33)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(244,41,13)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(221,14,7)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(234,97,43)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(252,21,4)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(222,229,24)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(212,163,12)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.27%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(232,6,35)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1124" width="3" height="15" fill="rgb(240,163,26)"/><text x="19.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1140" width="3" height="15" fill="rgb(221,80,4)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1156" width="3" height="15" fill="rgb(249,106,35)"/><text x="19.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1172" width="3" height="15" fill="rgb(250,101,44)"/><text x="19.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1188" width="3" height="15" fill="rgb(246,145,25)"/><text x="19.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(235,7,18)"/><text x="19.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(233,13,39)"/><text x="19.00" y="1230.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.27%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(220,220,0)"/><text x="19.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(250,123,8)"/><text x="19.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(238,56,36)"/><text x="19.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(250,62,35)"/><text x="19.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(247,45,24)"/><text x="19.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(206,137,52)"/><text x="19.00" y="1326.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.27%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(221,9,25)"/><text x="19.00" y="1342.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(252,29,14)"/><text x="19.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(233,60,46)"/><text x="19.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(253,52,13)"/><text x="19.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1396" width="3" height="15" fill="rgb(220,178,25)"/><text x="19.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1412" width="3" height="15" fill="rgb(223,37,9)"/><text x="19.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1428" width="3" height="15" fill="rgb(241,91,34)"/><text x="19.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1444" width="3" height="15" fill="rgb(244,116,23)"/><text x="19.00" y="1454.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="1460" width="3" height="15" fill="rgb(234,149,37)"/><text x="19.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1476" width="3" height="15" fill="rgb(240,221,31)"/><text x="19.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1492" width="3" height="15" fill="rgb(206,201,20)"/><text x="19.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1508" width="3" height="15" fill="rgb(220,68,51)"/><text x="19.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1524" width="3" height="15" fill="rgb(223,77,9)"/><text x="19.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1540" width="3" height="15" fill="rgb(244,174,37)"/><text x="19.00" y="1550.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.27%)</title><rect x="16" y="1556" width="3" height="15" fill="rgb(222,157,41)"/><text x="19.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1572" width="3" height="15" fill="rgb(245,171,4)"/><text x="19.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1588" width="3" height="15" fill="rgb(223,171,28)"/><text x="19.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1604" width="3" height="15" fill="rgb(253,74,25)"/><text x="19.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1620" width="3" height="15" fill="rgb(219,69,20)"/><text x="19.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1636" width="3" height="15" fill="rgb(220,39,1)"/><text x="19.00" y="1646.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/tnc.py) (1 samples, 0.27%)</title><rect x="16" y="1652" width="3" height="15" fill="rgb(224,224,6)"/><text x="19.00" y="1662.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1668" width="3" height="15" fill="rgb(219,209,17)"/><text x="19.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1684" width="3" height="15" fill="rgb(246,160,17)"/><text x="19.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1700" width="3" height="15" fill="rgb(220,206,37)"/><text x="19.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1716" width="3" height="15" fill="rgb(243,42,36)"/><text x="19.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1732" width="3" height="15" fill="rgb(210,31,42)"/><text x="19.00" y="1742.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1748" width="3" height="15" fill="rgb(224,87,32)"/><text x="19.00" y="1758.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="1764" width="3" height="15" fill="rgb(237,63,2)"/><text x="19.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="1780" width="3" height="15" fill="rgb(236,2,24)"/><text x="19.00" y="1790.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1796" width="3" height="15" fill="rgb(253,100,12)"/><text x="19.00" y="1806.50"></text></g><g><title>0x7fb3fa6d4995 (libdl-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1812" width="3" height="15" fill="rgb(233,75,36)"/><text x="19.00" y="1822.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1828" width="3" height="15" fill="rgb(223,219,4)"/><text x="19.00" y="1838.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1844" width="3" height="15" fill="rgb(240,169,35)"/><text x="19.00" y="1854.50"></text></g><g><title>0x7fb3fa6d4258 (libdl-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1860" width="3" height="15" fill="rgb(215,107,19)"/><text x="19.00" y="1870.50"></text></g><g><title>0x7fb3fa721d7a (ld-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1876" width="3" height="15" fill="rgb(239,130,18)"/><text x="19.00" y="1886.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1892" width="3" height="15" fill="rgb(233,200,29)"/><text x="19.00" y="1902.50"></text></g><g><title>0x7fb3fa722236 (ld-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1908" width="3" height="15" fill="rgb(247,183,14)"/><text x="19.00" y="1918.50"></text></g><g><title>0x7fb3fa71f710 (ld-2.29.so) (1 samples, 0.27%)</title><rect x="16" y="1924" width="3" height="15" fill="rgb(206,9,54)"/><text x="19.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(248,180,29)"/><text x="13.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(253,123,10)"/><text x="13.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(252,107,16)"/><text x="13.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(229,100,7)"/><text x="13.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(208,118,1)"/><text x="13.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(218,215,26)"/><text x="13.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.08%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(219,222,5)"/><text x="13.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(253,73,41)"/><text x="13.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(221,219,3)"/><text x="13.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(208,81,2)"/><text x="13.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(227,206,20)"/><text x="13.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(210,198,5)"/><text x="13.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.08%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(205,36,38)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(239,46,48)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(211,91,11)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(252,44,25)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(221,188,20)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(247,165,10)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.54%)</title><rect x="16" y="628" width="6" height="15" fill="rgb(239,158,9)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="644" width="6" height="15" fill="rgb(215,34,11)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="660" width="6" height="15" fill="rgb(228,200,6)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="676" width="6" height="15" fill="rgb(240,95,4)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="16" y="692" width="6" height="15" fill="rgb(236,82,45)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="708" width="6" height="15" fill="rgb(231,154,54)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.54%)</title><rect x="16" y="724" width="6" height="15" fill="rgb(248,136,37)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="740" width="6" height="15" fill="rgb(212,46,14)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="756" width="6" height="15" fill="rgb(224,111,27)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="772" width="6" height="15" fill="rgb(254,155,29)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="16" y="788" width="6" height="15" fill="rgb(248,34,41)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="16" y="804" width="6" height="15" fill="rgb(239,139,8)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.54%)</title><rect x="16" y="820" width="6" height="15" fill="rgb(245,106,48)"/><text x="19.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(228,62,27)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(237,1,51)"/><text x="22.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(212,8,52)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(233,196,7)"/><text x="22.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(238,123,15)"/><text x="22.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(238,125,25)"/><text x="22.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(230,175,22)"/><text x="22.00" y="942.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.27%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(220,220,49)"/><text x="22.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(228,165,44)"/><text x="22.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(205,200,16)"/><text x="22.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(236,12,47)"/><text x="22.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(221,114,2)"/><text x="22.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(239,53,40)"/><text x="22.00" y="1038.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(205,201,31)"/><text x="22.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1060" width="3" height="15" fill="rgb(208,150,22)"/><text x="22.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1076" width="3" height="15" fill="rgb(226,131,8)"/><text x="22.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1092" width="3" height="15" fill="rgb(232,138,49)"/><text x="22.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1108" width="3" height="15" fill="rgb(237,84,25)"/><text x="22.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1124" width="3" height="15" fill="rgb(253,193,45)"/><text x="22.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="19" y="1140" width="3" height="15" fill="rgb(252,46,6)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1156" width="3" height="15" fill="rgb(254,34,43)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1172" width="3" height="15" fill="rgb(229,85,53)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1188" width="3" height="15" fill="rgb(223,34,53)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1204" width="3" height="15" fill="rgb(219,140,38)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1220" width="3" height="15" fill="rgb(219,103,40)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.27%)</title><rect x="19" y="1236" width="3" height="15" fill="rgb(217,12,7)"/><text x="22.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1252" width="3" height="15" fill="rgb(251,186,6)"/><text x="22.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1268" width="3" height="15" fill="rgb(247,193,52)"/><text x="22.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1284" width="3" height="15" fill="rgb(247,146,36)"/><text x="22.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1300" width="3" height="15" fill="rgb(214,55,6)"/><text x="22.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1316" width="3" height="15" fill="rgb(248,139,50)"/><text x="22.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.27%)</title><rect x="19" y="1332" width="3" height="15" fill="rgb(210,154,14)"/><text x="22.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1348" width="3" height="15" fill="rgb(242,174,50)"/><text x="22.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1364" width="3" height="15" fill="rgb(217,6,26)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1380" width="3" height="15" fill="rgb(239,113,50)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1396" width="3" height="15" fill="rgb(248,109,54)"/><text x="22.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1412" width="3" height="15" fill="rgb(245,201,22)"/><text x="22.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1428" width="3" height="15" fill="rgb(223,83,44)"/><text x="22.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1444" width="3" height="15" fill="rgb(246,121,23)"/><text x="22.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1460" width="3" height="15" fill="rgb(210,21,12)"/><text x="22.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="1476" width="3" height="15" fill="rgb(216,224,54)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1492" width="3" height="15" fill="rgb(231,219,5)"/><text x="22.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1508" width="3" height="15" fill="rgb(230,62,27)"/><text x="22.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1524" width="3" height="15" fill="rgb(247,56,43)"/><text x="22.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1540" width="3" height="15" fill="rgb(242,115,53)"/><text x="22.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1556" width="3" height="15" fill="rgb(253,118,43)"/><text x="22.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.27%)</title><rect x="19" y="1572" width="3" height="15" fill="rgb(222,99,10)"/><text x="22.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1588" width="3" height="15" fill="rgb(232,8,12)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1604" width="3" height="15" fill="rgb(241,184,11)"/><text x="22.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1620" width="3" height="15" fill="rgb(223,76,34)"/><text x="22.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1636" width="3" height="15" fill="rgb(227,188,1)"/><text x="22.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1652" width="3" height="15" fill="rgb(205,159,31)"/><text x="22.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.27%)</title><rect x="19" y="1668" width="3" height="15" fill="rgb(245,97,38)"/><text x="22.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1684" width="3" height="15" fill="rgb(243,44,37)"/><text x="22.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1700" width="3" height="15" fill="rgb(217,197,5)"/><text x="22.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1716" width="3" height="15" fill="rgb(246,170,38)"/><text x="22.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1732" width="3" height="15" fill="rgb(253,191,31)"/><text x="22.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1748" width="3" height="15" fill="rgb(236,96,2)"/><text x="22.00" y="1758.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (1 samples, 0.27%)</title><rect x="19" y="1764" width="3" height="15" fill="rgb(228,150,17)"/><text x="22.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1780" width="3" height="15" fill="rgb(227,127,50)"/><text x="22.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1796" width="3" height="15" fill="rgb(210,144,42)"/><text x="22.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1812" width="3" height="15" fill="rgb(207,158,50)"/><text x="22.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1828" width="3" height="15" fill="rgb(248,58,43)"/><text x="22.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1844" width="3" height="15" fill="rgb(216,223,0)"/><text x="22.00" y="1854.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py) (1 samples, 0.27%)</title><rect x="19" y="1860" width="3" height="15" fill="rgb(243,21,49)"/><text x="22.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1876" width="3" height="15" fill="rgb(253,224,45)"/><text x="22.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1892" width="3" height="15" fill="rgb(221,137,50)"/><text x="22.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1908" width="3" height="15" fill="rgb(222,95,5)"/><text x="22.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1924" width="3" height="15" fill="rgb(254,177,49)"/><text x="22.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1940" width="3" height="15" fill="rgb(210,52,25)"/><text x="22.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1956" width="3" height="15" fill="rgb(229,68,53)"/><text x="22.00" y="1966.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="19" y="1972" width="3" height="15" fill="rgb(234,122,51)"/><text x="22.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1396" width="3" height="15" fill="rgb(243,190,23)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1412" width="3" height="15" fill="rgb(249,172,51)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1428" width="3" height="15" fill="rgb(236,185,20)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1444" width="3" height="15" fill="rgb(250,206,49)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1460" width="3" height="15" fill="rgb(239,228,0)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1476" width="3" height="15" fill="rgb(241,106,41)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.27%)</title><rect x="22" y="1492" width="3" height="15" fill="rgb(245,159,25)"/><text x="25.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(244,29,2)"/><text x="25.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(207,75,17)"/><text x="25.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(231,209,28)"/><text x="25.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(235,78,47)"/><text x="25.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(254,120,30)"/><text x="25.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1588" width="3" height="15" fill="rgb(225,78,43)"/><text x="25.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1604" width="3" height="15" fill="rgb(211,74,3)"/><text x="25.00" y="1614.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.27%)</title><rect x="22" y="1620" width="3" height="15" fill="rgb(239,141,49)"/><text x="25.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1636" width="3" height="15" fill="rgb(206,45,24)"/><text x="25.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1652" width="3" height="15" fill="rgb(239,61,41)"/><text x="25.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1668" width="3" height="15" fill="rgb(222,165,50)"/><text x="25.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1684" width="3" height="15" fill="rgb(208,132,44)"/><text x="25.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1700" width="3" height="15" fill="rgb(217,53,31)"/><text x="25.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.27%)</title><rect x="22" y="1716" width="3" height="15" fill="rgb(246,59,53)"/><text x="25.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1732" width="3" height="15" fill="rgb(208,222,11)"/><text x="25.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1748" width="3" height="15" fill="rgb(251,111,21)"/><text x="25.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1764" width="3" height="15" fill="rgb(238,152,14)"/><text x="25.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1780" width="3" height="15" fill="rgb(240,4,13)"/><text x="25.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="22" y="1796" width="3" height="15" fill="rgb(246,96,5)"/><text x="25.00" y="1806.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1812" width="3" height="15" fill="rgb(237,160,49)"/><text x="25.00" y="1822.50"></text></g><g><title>__init__ (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1828" width="3" height="15" fill="rgb(238,194,7)"/><text x="25.00" y="1838.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1844" width="3" height="15" fill="rgb(235,133,43)"/><text x="25.00" y="1854.50"></text></g><g><title>leaveWhitespace (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1860" width="3" height="15" fill="rgb(213,18,51)"/><text x="25.00" y="1870.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1876" width="3" height="15" fill="rgb(208,220,2)"/><text x="25.00" y="1886.50"></text></g><g><title>copy (pyparsing.py) (1 samples, 0.27%)</title><rect x="22" y="1892" width="3" height="15" fill="rgb(227,133,31)"/><text x="25.00" y="1902.50"></text></g><g><title>copy (copy.py) (1 samples, 0.27%)</title><rect x="22" y="1908" width="3" height="15" fill="rgb(227,196,2)"/><text x="25.00" y="1918.50"></text></g><g><title>_reconstruct (copy.py) (1 samples, 0.27%)</title><rect x="22" y="1924" width="3" height="15" fill="rgb(220,187,10)"/><text x="25.00" y="1934.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.27%)</title><rect x="25" y="1732" width="4" height="15" fill="rgb(218,210,27)"/><text x="28.00" y="1742.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1748" width="4" height="15" fill="rgb(210,213,45)"/><text x="28.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1764" width="4" height="15" fill="rgb(246,13,48)"/><text x="28.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1780" width="4" height="15" fill="rgb(248,102,29)"/><text x="28.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1796" width="4" height="15" fill="rgb(206,154,3)"/><text x="28.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1812" width="4" height="15" fill="rgb(245,28,4)"/><text x="28.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="25" y="1828" width="4" height="15" fill="rgb(216,178,2)"/><text x="28.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1844" width="4" height="15" fill="rgb(241,49,24)"/><text x="28.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py) (1 samples, 0.27%)</title><rect x="25" y="1860" width="4" height="15" fill="rgb(249,116,47)"/><text x="28.00" y="1870.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="25" y="1876" width="4" height="15" fill="rgb(234,124,48)"/><text x="28.00" y="1886.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="25" y="1892" width="4" height="15" fill="rgb(228,97,7)"/><text x="28.00" y="1902.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.27%)</title><rect x="25" y="1908" width="4" height="15" fill="rgb(213,55,33)"/><text x="28.00" y="1918.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.27%)</title><rect x="25" y="1924" width="4" height="15" fill="rgb(226,146,18)"/><text x="28.00" y="1934.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="25" y="1940" width="4" height="15" fill="rgb(239,122,1)"/><text x="28.00" y="1950.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.27%)</title><rect x="25" y="1956" width="4" height="15" fill="rgb(205,116,32)"/><text x="28.00" y="1966.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="948" width="10" height="15" fill="rgb(210,192,12)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.81%)</title><rect x="22" y="964" width="10" height="15" fill="rgb(251,16,31)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="980" width="10" height="15" fill="rgb(235,49,28)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="996" width="10" height="15" fill="rgb(217,29,36)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1012" width="10" height="15" fill="rgb(237,61,29)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="22" y="1028" width="10" height="15" fill="rgb(220,146,45)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1044" width="10" height="15" fill="rgb(225,9,43)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.81%)</title><rect x="22" y="1060" width="10" height="15" fill="rgb(217,13,31)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1076" width="10" height="15" fill="rgb(223,227,49)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1092" width="10" height="15" fill="rgb(243,181,28)"/><text x="25.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1108" width="10" height="15" fill="rgb(238,165,25)"/><text x="25.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="22" y="1124" width="10" height="15" fill="rgb(254,129,54)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1140" width="10" height="15" fill="rgb(251,86,51)"/><text x="25.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.81%)</title><rect x="22" y="1156" width="10" height="15" fill="rgb(221,78,31)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1172" width="10" height="15" fill="rgb(230,138,39)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1188" width="10" height="15" fill="rgb(230,164,35)"/><text x="25.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1204" width="10" height="15" fill="rgb(249,81,37)"/><text x="25.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="22" y="1220" width="10" height="15" fill="rgb(243,204,37)"/><text x="25.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1236" width="10" height="15" fill="rgb(233,86,31)"/><text x="25.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.81%)</title><rect x="22" y="1252" width="10" height="15" fill="rgb(214,102,1)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1268" width="10" height="15" fill="rgb(208,31,10)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1284" width="10" height="15" fill="rgb(226,195,50)"/><text x="25.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1300" width="10" height="15" fill="rgb(247,113,28)"/><text x="25.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="22" y="1316" width="10" height="15" fill="rgb(235,164,3)"/><text x="25.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1332" width="10" height="15" fill="rgb(223,30,52)"/><text x="25.00" y="1342.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.81%)</title><rect x="22" y="1348" width="10" height="15" fill="rgb(241,180,41)"/><text x="25.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1364" width="10" height="15" fill="rgb(214,46,22)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="22" y="1380" width="10" height="15" fill="rgb(242,83,33)"/><text x="25.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1396" width="7" height="15" fill="rgb(239,59,47)"/><text x="28.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="25" y="1412" width="7" height="15" fill="rgb(248,84,4)"/><text x="28.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1428" width="7" height="15" fill="rgb(249,93,35)"/><text x="28.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.54%)</title><rect x="25" y="1444" width="7" height="15" fill="rgb(207,89,35)"/><text x="28.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1460" width="7" height="15" fill="rgb(206,211,47)"/><text x="28.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1476" width="7" height="15" fill="rgb(220,191,34)"/><text x="28.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1492" width="7" height="15" fill="rgb(226,219,3)"/><text x="28.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="25" y="1508" width="7" height="15" fill="rgb(247,182,14)"/><text x="28.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1524" width="7" height="15" fill="rgb(228,57,11)"/><text x="28.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.54%)</title><rect x="25" y="1540" width="7" height="15" fill="rgb(252,189,16)"/><text x="28.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1556" width="7" height="15" fill="rgb(244,69,29)"/><text x="28.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1572" width="7" height="15" fill="rgb(215,26,50)"/><text x="28.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1588" width="7" height="15" fill="rgb(223,147,42)"/><text x="28.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="25" y="1604" width="7" height="15" fill="rgb(241,220,15)"/><text x="28.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1620" width="7" height="15" fill="rgb(248,156,11)"/><text x="28.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.54%)</title><rect x="25" y="1636" width="7" height="15" fill="rgb(208,199,47)"/><text x="28.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1652" width="7" height="15" fill="rgb(208,151,49)"/><text x="28.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1668" width="7" height="15" fill="rgb(210,43,41)"/><text x="28.00" y="1678.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1684" width="7" height="15" fill="rgb(205,210,18)"/><text x="28.00" y="1694.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="25" y="1700" width="7" height="15" fill="rgb(206,35,36)"/><text x="28.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="25" y="1716" width="7" height="15" fill="rgb(209,171,8)"/><text x="28.00" y="1726.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.27%)</title><rect x="29" y="1732" width="3" height="15" fill="rgb(226,35,23)"/><text x="32.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1748" width="3" height="15" fill="rgb(247,46,12)"/><text x="32.00" y="1758.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1764" width="3" height="15" fill="rgb(231,29,36)"/><text x="32.00" y="1774.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1780" width="3" height="15" fill="rgb(221,158,11)"/><text x="32.00" y="1790.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1796" width="3" height="15" fill="rgb(250,217,26)"/><text x="32.00" y="1806.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1812" width="3" height="15" fill="rgb(234,62,36)"/><text x="32.00" y="1822.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1828" width="3" height="15" fill="rgb(253,92,29)"/><text x="32.00" y="1838.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1844" width="3" height="15" fill="rgb(209,13,5)"/><text x="32.00" y="1854.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.08%)</title><rect x="22" y="580" width="13" height="15" fill="rgb(213,205,44)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="596" width="13" height="15" fill="rgb(250,63,43)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="612" width="13" height="15" fill="rgb(246,134,37)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="628" width="13" height="15" fill="rgb(238,51,15)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="22" y="644" width="13" height="15" fill="rgb(251,211,12)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="660" width="13" height="15" fill="rgb(243,174,7)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.08%)</title><rect x="22" y="676" width="13" height="15" fill="rgb(251,106,25)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="692" width="13" height="15" fill="rgb(221,48,6)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="708" width="13" height="15" fill="rgb(216,219,40)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="724" width="13" height="15" fill="rgb(216,154,39)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="22" y="740" width="13" height="15" fill="rgb(231,206,54)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="756" width="13" height="15" fill="rgb(225,64,21)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.08%)</title><rect x="22" y="772" width="13" height="15" fill="rgb(209,8,19)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="788" width="13" height="15" fill="rgb(222,124,13)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="804" width="13" height="15" fill="rgb(213,28,33)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="820" width="13" height="15" fill="rgb(229,11,24)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="22" y="836" width="13" height="15" fill="rgb(250,225,8)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="852" width="13" height="15" fill="rgb(235,66,52)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.08%)</title><rect x="22" y="868" width="13" height="15" fill="rgb(231,9,50)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="884" width="13" height="15" fill="rgb(209,28,42)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="900" width="13" height="15" fill="rgb(245,156,27)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="22" y="916" width="13" height="15" fill="rgb(254,173,38)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="22" y="932" width="13" height="15" fill="rgb(220,15,12)"/><text x="25.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="32" y="948" width="3" height="15" fill="rgb(212,164,40)"/><text x="35.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="32" y="964" width="3" height="15" fill="rgb(227,5,22)"/><text x="35.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.42%)</title><rect x="10" y="292" width="28" height="15" fill="rgb(205,106,53)"/><text x="13.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.42%)</title><rect x="10" y="308" width="28" height="15" fill="rgb(211,170,11)"/><text x="13.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.42%)</title><rect x="10" y="324" width="28" height="15" fill="rgb(230,204,22)"/><text x="13.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="340" width="16" height="15" fill="rgb(238,113,21)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.34%)</title><rect x="22" y="356" width="16" height="15" fill="rgb(246,88,31)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="372" width="16" height="15" fill="rgb(223,227,36)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.34%)</title><rect x="22" y="388" width="16" height="15" fill="rgb(250,52,14)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="404" width="16" height="15" fill="rgb(205,105,19)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="420" width="16" height="15" fill="rgb(232,47,7)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="436" width="16" height="15" fill="rgb(242,18,52)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.34%)</title><rect x="22" y="452" width="16" height="15" fill="rgb(211,36,43)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="468" width="16" height="15" fill="rgb(237,81,12)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.34%)</title><rect x="22" y="484" width="16" height="15" fill="rgb(226,59,46)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="500" width="16" height="15" fill="rgb(223,51,54)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="516" width="16" height="15" fill="rgb(226,40,11)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="532" width="16" height="15" fill="rgb(231,114,10)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.34%)</title><rect x="22" y="548" width="16" height="15" fill="rgb(245,181,48)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.34%)</title><rect x="22" y="564" width="16" height="15" fill="rgb(235,16,12)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.27%)</title><rect x="35" y="580" width="3" height="15" fill="rgb(248,173,25)"/><text x="38.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="35" y="596" width="3" height="15" fill="rgb(215,173,17)"/><text x="38.00" y="606.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(213,185,11)"/><text x="41.00" y="926.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="38" y="868" width="6" height="15" fill="rgb(245,226,34)"/><text x="41.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="38" y="884" width="6" height="15" fill="rgb(248,203,40)"/><text x="41.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="38" y="900" width="6" height="15" fill="rgb(218,29,45)"/><text x="41.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(231,25,42)"/><text x="44.00" y="926.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="44" y="916" width="4" height="15" fill="rgb(248,42,30)"/><text x="47.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="44" y="932" width="4" height="15" fill="rgb(246,209,9)"/><text x="47.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="44" y="948" width="4" height="15" fill="rgb(238,182,35)"/><text x="47.00" y="958.50"></text></g><g><title>unicode_compare (python3.7) (1 samples, 0.27%)</title><rect x="44" y="964" width="4" height="15" fill="rgb(230,146,47)"/><text x="47.00" y="974.50"></text></g><g><title>0x7fb3fa52b74a (libc-2.29.so) (1 samples, 0.27%)</title><rect x="44" y="980" width="4" height="15" fill="rgb(215,36,49)"/><text x="47.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.49%)</title><rect x="10" y="196" width="41" height="15" fill="rgb(234,124,43)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.49%)</title><rect x="10" y="212" width="41" height="15" fill="rgb(233,0,35)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.49%)</title><rect x="10" y="228" width="41" height="15" fill="rgb(215,46,11)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.49%)</title><rect x="10" y="244" width="41" height="15" fill="rgb(205,127,5)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.49%)</title><rect x="10" y="260" width="41" height="15" fill="rgb(205,66,0)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.49%)</title><rect x="10" y="276" width="41" height="15" fill="rgb(222,53,12)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.08%)</title><rect x="38" y="292" width="13" height="15" fill="rgb(245,217,17)"/><text x="41.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="308" width="13" height="15" fill="rgb(229,11,45)"/><text x="41.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="324" width="13" height="15" fill="rgb(226,26,17)"/><text x="41.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="340" width="13" height="15" fill="rgb(218,129,23)"/><text x="41.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="38" y="356" width="13" height="15" fill="rgb(217,35,1)"/><text x="41.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="372" width="13" height="15" fill="rgb(236,170,6)"/><text x="41.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.08%)</title><rect x="38" y="388" width="13" height="15" fill="rgb(215,42,32)"/><text x="41.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="404" width="13" height="15" fill="rgb(253,79,1)"/><text x="41.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="420" width="13" height="15" fill="rgb(215,220,25)"/><text x="41.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="436" width="13" height="15" fill="rgb(208,188,45)"/><text x="41.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="38" y="452" width="13" height="15" fill="rgb(234,171,12)"/><text x="41.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="468" width="13" height="15" fill="rgb(246,87,35)"/><text x="41.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.08%)</title><rect x="38" y="484" width="13" height="15" fill="rgb(209,194,35)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="500" width="13" height="15" fill="rgb(229,153,37)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="516" width="13" height="15" fill="rgb(210,24,39)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="532" width="13" height="15" fill="rgb(217,224,28)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="38" y="548" width="13" height="15" fill="rgb(223,15,0)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="564" width="13" height="15" fill="rgb(210,57,25)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.08%)</title><rect x="38" y="580" width="13" height="15" fill="rgb(217,148,28)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="596" width="13" height="15" fill="rgb(212,222,23)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="612" width="13" height="15" fill="rgb(217,175,45)"/><text x="41.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="628" width="13" height="15" fill="rgb(240,62,11)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="644" width="13" height="15" fill="rgb(217,108,31)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="660" width="13" height="15" fill="rgb(233,101,42)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="676" width="13" height="15" fill="rgb(239,158,41)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="38" y="692" width="13" height="15" fill="rgb(248,197,24)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="708" width="13" height="15" fill="rgb(209,186,28)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.08%)</title><rect x="38" y="724" width="13" height="15" fill="rgb(218,185,2)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="740" width="13" height="15" fill="rgb(243,164,26)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="756" width="13" height="15" fill="rgb(223,16,22)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="772" width="13" height="15" fill="rgb(227,127,32)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="38" y="788" width="13" height="15" fill="rgb(228,212,21)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="38" y="804" width="13" height="15" fill="rgb(235,189,7)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.08%)</title><rect x="38" y="820" width="13" height="15" fill="rgb(205,5,7)"/><text x="41.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.08%)</title><rect x="38" y="836" width="13" height="15" fill="rgb(245,184,0)"/><text x="41.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.08%)</title><rect x="38" y="852" width="13" height="15" fill="rgb(219,2,54)"/><text x="41.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="44" y="868" width="7" height="15" fill="rgb(230,138,41)"/><text x="47.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="44" y="884" width="7" height="15" fill="rgb(208,41,15)"/><text x="47.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="44" y="900" width="7" height="15" fill="rgb(238,143,7)"/><text x="47.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(229,173,22)"/><text x="51.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(254,163,6)"/><text x="51.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(234,91,25)"/><text x="51.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(205,26,19)"/><text x="51.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.27%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(230,202,5)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.27%)</title><rect x="51" y="468" width="3" height="15" fill="rgb(241,83,31)"/><text x="54.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="484" width="3" height="15" fill="rgb(206,201,30)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="500" width="3" height="15" fill="rgb(247,9,31)"/><text x="54.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="516" width="3" height="15" fill="rgb(217,152,33)"/><text x="54.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="532" width="3" height="15" fill="rgb(247,204,32)"/><text x="54.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="548" width="3" height="15" fill="rgb(252,22,6)"/><text x="54.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.27%)</title><rect x="51" y="564" width="3" height="15" fill="rgb(251,82,19)"/><text x="54.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="580" width="3" height="15" fill="rgb(207,176,35)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="596" width="3" height="15" fill="rgb(237,17,44)"/><text x="54.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="612" width="3" height="15" fill="rgb(232,52,5)"/><text x="54.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="628" width="3" height="15" fill="rgb(226,134,46)"/><text x="54.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="644" width="3" height="15" fill="rgb(211,202,47)"/><text x="54.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.27%)</title><rect x="51" y="660" width="3" height="15" fill="rgb(216,58,17)"/><text x="54.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="676" width="3" height="15" fill="rgb(221,24,7)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="692" width="3" height="15" fill="rgb(228,102,53)"/><text x="54.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="708" width="3" height="15" fill="rgb(220,215,4)"/><text x="54.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="724" width="3" height="15" fill="rgb(206,174,29)"/><text x="54.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="740" width="3" height="15" fill="rgb(216,107,13)"/><text x="54.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.27%)</title><rect x="51" y="756" width="3" height="15" fill="rgb(218,32,41)"/><text x="54.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="772" width="3" height="15" fill="rgb(237,41,53)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="788" width="3" height="15" fill="rgb(250,183,11)"/><text x="54.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="804" width="3" height="15" fill="rgb(252,55,10)"/><text x="54.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="820" width="3" height="15" fill="rgb(213,194,46)"/><text x="54.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="836" width="3" height="15" fill="rgb(229,128,18)"/><text x="54.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.27%)</title><rect x="51" y="852" width="3" height="15" fill="rgb(253,93,22)"/><text x="54.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="868" width="3" height="15" fill="rgb(217,145,50)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="884" width="3" height="15" fill="rgb(230,181,15)"/><text x="54.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(239,133,31)"/><text x="54.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(208,91,7)"/><text x="54.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="932" width="3" height="15" fill="rgb(210,94,23)"/><text x="54.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.27%)</title><rect x="51" y="948" width="3" height="15" fill="rgb(242,147,42)"/><text x="54.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="51" y="964" width="3" height="15" fill="rgb(238,56,26)"/><text x="54.00" y="974.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="51" y="980" width="3" height="15" fill="rgb(247,173,51)"/><text x="54.00" y="990.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.27%)</title><rect x="51" y="996" width="3" height="15" fill="rgb(208,145,10)"/><text x="54.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(249,40,41)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(234,170,21)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(237,181,19)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.03%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(243,226,11)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(240,206,7)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx.py) (15 samples, 4.03%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(227,74,10)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(254,138,36)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.03%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(224,26,8)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="196" width="6" height="15" fill="rgb(216,123,33)"/><text x="54.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="51" y="212" width="6" height="15" fill="rgb(210,165,25)"/><text x="54.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="228" width="6" height="15" fill="rgb(247,172,2)"/><text x="54.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.54%)</title><rect x="51" y="244" width="6" height="15" fill="rgb(213,23,53)"/><text x="54.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="260" width="6" height="15" fill="rgb(207,148,26)"/><text x="54.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="276" width="6" height="15" fill="rgb(216,185,9)"/><text x="54.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="292" width="6" height="15" fill="rgb(242,61,35)"/><text x="54.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="308" width="6" height="15" fill="rgb(233,21,37)"/><text x="54.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="324" width="6" height="15" fill="rgb(238,95,38)"/><text x="54.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="51" y="340" width="6" height="15" fill="rgb(240,80,48)"/><text x="54.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="356" width="6" height="15" fill="rgb(224,205,6)"/><text x="54.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.54%)</title><rect x="51" y="372" width="6" height="15" fill="rgb(216,172,34)"/><text x="54.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="388" width="6" height="15" fill="rgb(246,157,11)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="404" width="6" height="15" fill="rgb(223,202,50)"/><text x="54.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="420" width="6" height="15" fill="rgb(208,134,2)"/><text x="54.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="51" y="436" width="6" height="15" fill="rgb(233,11,18)"/><text x="54.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="51" y="452" width="6" height="15" fill="rgb(221,9,9)"/><text x="54.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.27%)</title><rect x="54" y="468" width="3" height="15" fill="rgb(235,135,51)"/><text x="57.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="484" width="3" height="15" fill="rgb(249,198,19)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="500" width="3" height="15" fill="rgb(231,169,11)"/><text x="57.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="516" width="3" height="15" fill="rgb(231,210,39)"/><text x="57.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="532" width="3" height="15" fill="rgb(225,124,6)"/><text x="57.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="548" width="3" height="15" fill="rgb(238,113,46)"/><text x="57.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.27%)</title><rect x="54" y="564" width="3" height="15" fill="rgb(248,86,18)"/><text x="57.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="580" width="3" height="15" fill="rgb(217,24,22)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="596" width="3" height="15" fill="rgb(234,131,43)"/><text x="57.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="612" width="3" height="15" fill="rgb(222,64,28)"/><text x="57.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="628" width="3" height="15" fill="rgb(226,27,11)"/><text x="57.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="644" width="3" height="15" fill="rgb(206,150,15)"/><text x="57.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py) (1 samples, 0.27%)</title><rect x="54" y="660" width="3" height="15" fill="rgb(228,114,26)"/><text x="57.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="676" width="3" height="15" fill="rgb(205,48,53)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="692" width="3" height="15" fill="rgb(228,120,43)"/><text x="57.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="54" y="708" width="3" height="15" fill="rgb(228,158,17)"/><text x="57.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="724" width="3" height="15" fill="rgb(243,102,26)"/><text x="57.00" y="734.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="740" width="3" height="15" fill="rgb(225,95,49)"/><text x="57.00" y="750.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="54" y="756" width="3" height="15" fill="rgb(239,137,35)"/><text x="57.00" y="766.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="57" y="116" width="3" height="15" fill="rgb(216,124,44)"/><text x="60.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="57" y="132" width="3" height="15" fill="rgb(229,215,24)"/><text x="60.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="57" y="148" width="3" height="15" fill="rgb(221,220,6)"/><text x="60.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="70" y="180" width="3" height="15" fill="rgb(230,83,3)"/><text x="73.00" y="190.50"></text></g><g><title>0x7fb3bacf5ff9 (?) (1 samples, 0.27%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(227,32,14)"/><text x="82.00" y="222.50"></text></g><g><title>0x7fb3bacf0ef6 (?) (1 samples, 0.27%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(209,149,2)"/><text x="82.00" y="238.50"></text></g><g><title>0x7fb3bace5962 (?) (1 samples, 0.27%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(217,105,14)"/><text x="82.00" y="254.50"></text></g><g><title>0x7fb3bad197a7 (?) (1 samples, 0.27%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(245,143,27)"/><text x="82.00" y="270.50"></text></g><g><title>0x7fb3bad19379 (?) (1 samples, 0.27%)</title><rect x="79" y="276" width="3" height="15" fill="rgb(215,62,9)"/><text x="82.00" y="286.50"></text></g><g><title>0x7fb3bb1778b8 (?) (1 samples, 0.27%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(213,0,15)"/><text x="82.00" y="302.50"></text></g><g><title>0x7fb3bb175c7f (?) (1 samples, 0.27%)</title><rect x="79" y="308" width="3" height="15" fill="rgb(227,74,37)"/><text x="82.00" y="318.50"></text></g><g><title>0x7fb3bb18899c (?) (1 samples, 0.27%)</title><rect x="79" y="324" width="3" height="15" fill="rgb(216,176,51)"/><text x="82.00" y="334.50"></text></g><g><title>0x7fb3bae6dd39 (?) (1 samples, 0.27%)</title><rect x="79" y="340" width="3" height="15" fill="rgb(213,90,47)"/><text x="82.00" y="350.50"></text></g><g><title>0x7fb3bae68448 (?) (1 samples, 0.27%)</title><rect x="79" y="356" width="3" height="15" fill="rgb(216,71,29)"/><text x="82.00" y="366.50"></text></g><g><title>0x7fb3fa46cdb3 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="79" y="372" width="3" height="15" fill="rgb(254,71,39)"/><text x="82.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.27%)</title><rect x="82" y="212" width="4" height="15" fill="rgb(217,155,25)"/><text x="85.00" y="222.50"></text></g><g><title>0x7fb3fa44c9ed (libc-2.29.so) (1 samples, 0.27%)</title><rect x="86" y="228" width="3" height="15" fill="rgb(233,74,26)"/><text x="89.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="89" y="260" width="3" height="15" fill="rgb(243,195,38)"/><text x="92.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="92" y="260" width="3" height="15" fill="rgb(215,197,15)"/><text x="95.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="95" y="292" width="3" height="15" fill="rgb(247,207,18)"/><text x="98.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="95" y="308" width="3" height="15" fill="rgb(210,28,28)"/><text x="98.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="95" y="324" width="3" height="15" fill="rgb(252,52,54)"/><text x="98.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.27%)</title><rect x="95" y="340" width="3" height="15" fill="rgb(231,14,15)"/><text x="98.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="95" y="356" width="3" height="15" fill="rgb(249,201,16)"/><text x="98.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="98" y="292" width="3" height="15" fill="rgb(227,4,52)"/><text x="101.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="105" y="340" width="3" height="15" fill="rgb(237,89,50)"/><text x="108.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="105" y="356" width="3" height="15" fill="rgb(209,40,26)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="105" y="372" width="3" height="15" fill="rgb(208,145,36)"/><text x="108.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="105" y="388" width="3" height="15" fill="rgb(229,177,46)"/><text x="108.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="206" y="356" width="3" height="15" fill="rgb(240,56,54)"/><text x="209.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="206" y="372" width="3" height="15" fill="rgb(233,177,1)"/><text x="209.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="356" width="4" height="15" fill="rgb(207,203,25)"/><text x="212.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="372" width="4" height="15" fill="rgb(244,50,49)"/><text x="212.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="388" width="4" height="15" fill="rgb(238,57,44)"/><text x="212.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="404" width="4" height="15" fill="rgb(250,150,28)"/><text x="212.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="420" width="4" height="15" fill="rgb(244,107,40)"/><text x="212.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="436" width="4" height="15" fill="rgb(215,199,29)"/><text x="212.00" y="446.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="209" y="452" width="4" height="15" fill="rgb(214,47,46)"/><text x="212.00" y="462.50"></text></g><g><title>0x7fb3fa46cd50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="270" y="372" width="3" height="15" fill="rgb(212,139,42)"/><text x="273.00" y="382.50"></text></g><g><title>0x7fb3fa46cdae (libc-2.29.so) (1 samples, 0.27%)</title><rect x="273" y="372" width="3" height="15" fill="rgb(219,38,25)"/><text x="276.00" y="382.50"></text></g><g><title>0x7fb3fa46cdb3 (libc-2.29.so) (2 samples, 0.54%)</title><rect x="276" y="372" width="6" height="15" fill="rgb(234,139,51)"/><text x="279.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe00 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="282" y="372" width="3" height="15" fill="rgb(240,192,25)"/><text x="285.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe14 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="285" y="372" width="4" height="15" fill="rgb(248,39,11)"/><text x="288.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe17 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="289" y="372" width="3" height="15" fill="rgb(241,224,15)"/><text x="292.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe4e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="292" y="372" width="3" height="15" fill="rgb(249,132,9)"/><text x="295.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe5f (libm-2.29.so) (2 samples, 0.54%)</title><rect x="295" y="372" width="6" height="15" fill="rgb(220,42,28)"/><text x="298.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe62 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="301" y="372" width="4" height="15" fill="rgb(232,68,45)"/><text x="304.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe6d (libm-2.29.so) (1 samples, 0.27%)</title><rect x="305" y="372" width="3" height="15" fill="rgb(236,190,52)"/><text x="308.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe7a (libm-2.29.so) (2 samples, 0.54%)</title><rect x="308" y="372" width="6" height="15" fill="rgb(220,134,5)"/><text x="311.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe7e (libm-2.29.so) (2 samples, 0.54%)</title><rect x="314" y="372" width="6" height="15" fill="rgb(238,61,22)"/><text x="317.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe86 (libm-2.29.so) (2 samples, 0.54%)</title><rect x="320" y="372" width="7" height="15" fill="rgb(220,16,2)"/><text x="323.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe92 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="327" y="372" width="3" height="15" fill="rgb(227,100,36)"/><text x="330.00" y="382.50"></text></g><g><title>0x7fb3fa5cbe96 (libm-2.29.so) (2 samples, 0.54%)</title><rect x="330" y="372" width="6" height="15" fill="rgb(235,70,22)"/><text x="333.00" y="382.50"></text></g><g><title>0x7fb3fa5cbea2 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="336" y="372" width="3" height="15" fill="rgb(236,193,5)"/><text x="339.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 19.89%)</title><rect x="108" y="340" width="235" height="15" fill="rgb(249,17,26)"/><text x="111.00" y="350.50">onnxruntime::ml::LinearClassifi..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 11.02%)</title><rect x="213" y="356" width="130" height="15" fill="rgb(205,142,24)"/><text x="216.00" y="366.50">onnxruntime::ml:..</text></g><g><title>0x7fb3fa5cbea6 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="339" y="372" width="4" height="15" fill="rgb(228,63,6)"/><text x="342.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 24.19%)</title><rect x="95" y="260" width="286" height="15" fill="rgb(238,191,27)"/><text x="98.00" y="270.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 24.19%)</title><rect x="95" y="276" width="286" height="15" fill="rgb(234,163,19)"/><text x="98.00" y="286.50">onnxruntime::InferenceSession::Run (on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (88 samples, 23.66%)</title><rect x="101" y="292" width="280" height="15" fill="rgb(243,36,14)"/><text x="104.00" y="302.50">onnxruntime::utils::ExecuteGraph (onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (88 samples, 23.66%)</title><rect x="101" y="308" width="280" height="15" fill="rgb(218,4,23)"/><text x="104.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl ..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (87 samples, 23.39%)</title><rect x="105" y="324" width="276" height="15" fill="rgb(224,63,25)"/><text x="108.00" y="334.50">onnxruntime::SequentialExecutor::Exe..</text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.23%)</title><rect x="343" y="340" width="38" height="15" fill="rgb(243,67,20)"/><text x="346.00" y="350.50">onn..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.23%)</title><rect x="343" y="356" width="38" height="15" fill="rgb(234,55,6)"/><text x="346.00" y="366.50">onn..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="381" y="260" width="3" height="15" fill="rgb(208,52,51)"/><text x="384.00" y="270.50"></text></g><g><title>0x7fb3fa462e50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(218,141,13)"/><text x="384.00" y="286.50"></text></g><g><title>0x7fb3fa46cd94 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="387" y="276" width="3" height="15" fill="rgb(233,99,41)"/><text x="390.00" y="286.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (106 samples, 28.49%)</title><rect x="57" y="68" width="336" height="15" fill="rgb(223,112,16)"/><text x="60.00" y="78.50">profile_ort (bench_LogisticRegression_libline..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (106 samples, 28.49%)</title><rect x="57" y="84" width="336" height="15" fill="rgb(207,111,20)"/><text x="60.00" y="94.50">setup_profile (bench_LogisticRegression_libli..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (106 samples, 28.49%)</title><rect x="57" y="100" width="336" height="15" fill="rgb(214,172,49)"/><text x="60.00" y="110.50">profile (bench_LogisticRegression_liblinear_m..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 28.23%)</title><rect x="60" y="116" width="333" height="15" fill="rgb(238,144,3)"/><text x="63.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (104 samples, 27.96%)</title><rect x="63" y="132" width="330" height="15" fill="rgb(205,117,50)"/><text x="66.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (102 samples, 27.42%)</title><rect x="70" y="148" width="323" height="15" fill="rgb(209,76,39)"/><text x="73.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (102 samples, 27.42%)</title><rect x="70" y="164" width="323" height="15" fill="rgb(242,9,20)"/><text x="73.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_i..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (101 samples, 27.15%)</title><rect x="73" y="180" width="320" height="15" fill="rgb(248,152,9)"/><text x="76.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (100 samples, 26.88%)</title><rect x="76" y="196" width="317" height="15" fill="rgb(235,113,18)"/><text x="79.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 26.08%)</title><rect x="86" y="212" width="307" height="15" fill="rgb(221,24,40)"/><text x="89.00" y="222.50">pybind11::cpp_function::dispatcher (onnxr..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 25.81%)</title><rect x="89" y="228" width="304" height="15" fill="rgb(238,119,26)"/><text x="92.00" y="238.50">void pybind11::cpp_function::initialize&lt;..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (96 samples, 25.81%)</title><rect x="89" y="244" width="304" height="15" fill="rgb(205,197,51)"/><text x="92.00" y="254.50">onnxruntime::python::addObjectMethods(py..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.81%)</title><rect x="384" y="260" width="9" height="15" fill="rgb(215,227,0)"/><text x="387.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.27%)</title><rect x="390" y="276" width="3" height="15" fill="rgb(229,165,1)"/><text x="393.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="390" y="292" width="3" height="15" fill="rgb(239,129,30)"/><text x="393.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="390" y="308" width="3" height="15" fill="rgb(229,172,45)"/><text x="393.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.27%)</title><rect x="390" y="324" width="3" height="15" fill="rgb(245,86,24)"/><text x="393.00" y="334.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.27%)</title><rect x="390" y="340" width="3" height="15" fill="rgb(213,57,40)"/><text x="393.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="396" y="116" width="4" height="15" fill="rgb(220,133,24)"/><text x="399.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="396" y="132" width="4" height="15" fill="rgb(207,95,32)"/><text x="399.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.27%)</title><rect x="396" y="148" width="4" height="15" fill="rgb(251,60,28)"/><text x="399.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="419" y="180" width="3" height="15" fill="rgb(238,33,0)"/><text x="422.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.27%)</title><rect x="438" y="196" width="3" height="15" fill="rgb(221,61,45)"/><text x="441.00" y="206.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.27%)</title><rect x="463" y="324" width="3" height="15" fill="rgb(226,214,26)"/><text x="466.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src) (1 samples, 0.27%)</title><rect x="463" y="340" width="3" height="15" fill="rgb(223,226,29)"/><text x="466.00" y="350.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (3 samples, 0.81%)</title><rect x="460" y="244" width="9" height="15" fill="rgb(224,199,42)"/><text x="463.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.81%)</title><rect x="460" y="260" width="9" height="15" fill="rgb(238,36,23)"/><text x="463.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (3 samples, 0.81%)</title><rect x="460" y="276" width="9" height="15" fill="rgb(235,156,6)"/><text x="463.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.81%)</title><rect x="460" y="292" width="9" height="15" fill="rgb(209,109,1)"/><text x="463.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.54%)</title><rect x="463" y="308" width="6" height="15" fill="rgb(226,218,54)"/><text x="466.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="466" y="324" width="3" height="15" fill="rgb(218,86,16)"/><text x="469.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c) (3 samples, 0.81%)</title><rect x="482" y="340" width="10" height="15" fill="rgb(249,171,50)"/><text x="485.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="482" y="356" width="10" height="15" fill="rgb(242,228,41)"/><text x="485.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="482" y="372" width="10" height="15" fill="rgb(213,160,8)"/><text x="485.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="485" y="388" width="7" height="15" fill="rgb(238,37,53)"/><text x="488.00" y="398.50"></text></g><g><title>0x7fb3fa44e1a7 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="495" y="452" width="3" height="15" fill="rgb(221,98,7)"/><text x="498.00" y="462.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.42%)</title><rect x="473" y="276" width="28" height="15" fill="rgb(215,142,12)"/><text x="476.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (8 samples, 2.15%)</title><rect x="476" y="292" width="25" height="15" fill="rgb(245,69,32)"/><text x="479.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (7 samples, 1.88%)</title><rect x="479" y="308" width="22" height="15" fill="rgb(205,122,41)"/><text x="482.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (7 samples, 1.88%)</title><rect x="479" y="324" width="22" height="15" fill="rgb(228,167,32)"/><text x="482.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.81%)</title><rect x="492" y="340" width="9" height="15" fill="rgb(251,154,10)"/><text x="495.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.54%)</title><rect x="495" y="356" width="6" height="15" fill="rgb(242,6,10)"/><text x="498.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.54%)</title><rect x="495" y="372" width="6" height="15" fill="rgb(209,29,43)"/><text x="498.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.54%)</title><rect x="495" y="388" width="6" height="15" fill="rgb(210,140,34)"/><text x="498.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.54%)</title><rect x="495" y="404" width="6" height="15" fill="rgb(248,143,45)"/><text x="498.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.54%)</title><rect x="495" y="420" width="6" height="15" fill="rgb(223,152,47)"/><text x="498.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.54%)</title><rect x="495" y="436" width="6" height="15" fill="rgb(241,202,25)"/><text x="498.00" y="446.50"></text></g><g><title>0x7fb3fa44e21c (libc-2.29.so) (1 samples, 0.27%)</title><rect x="498" y="452" width="3" height="15" fill="rgb(219,21,4)"/><text x="501.00" y="462.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (17 samples, 4.57%)</title><rect x="469" y="244" width="54" height="15" fill="rgb(223,173,33)"/><text x="472.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (16 samples, 4.30%)</title><rect x="473" y="260" width="50" height="15" fill="rgb(206,58,17)"/><text x="476.00" y="270.50">dot (..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.88%)</title><rect x="501" y="276" width="22" height="15" fill="rgb(251,162,37)"/><text x="504.00" y="286.50">s..</text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.27%)</title><rect x="527" y="276" width="3" height="15" fill="rgb(213,79,40)"/><text x="530.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.27%)</title><rect x="530" y="292" width="3" height="15" fill="rgb(252,83,19)"/><text x="533.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.27%)</title><rect x="530" y="308" width="3" height="15" fill="rgb(234,170,15)"/><text x="533.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.27%)</title><rect x="530" y="324" width="3" height="15" fill="rgb(229,40,40)"/><text x="533.00" y="334.50"></text></g><g><title>diophantine_precompute (mem_overlap.c) (1 samples, 0.27%)</title><rect x="530" y="340" width="3" height="15" fill="rgb(228,148,10)"/><text x="533.00" y="350.50"></text></g><g><title>safe_mul (npy_extint128.h) (1 samples, 0.27%)</title><rect x="530" y="356" width="3" height="15" fill="rgb(240,75,12)"/><text x="533.00" y="366.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.27%)</title><rect x="533" y="308" width="3" height="15" fill="rgb(249,50,48)"/><text x="536.00" y="318.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.27%)</title><rect x="533" y="324" width="3" height="15" fill="rgb(235,215,20)"/><text x="536.00" y="334.50"></text></g><g><title>sse2_binary_add_FLOAT (simd.inc.src) (1 samples, 0.27%)</title><rect x="533" y="340" width="3" height="15" fill="rgb(222,120,28)"/><text x="536.00" y="350.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (1 samples, 0.27%)</title><rect x="533" y="356" width="3" height="15" fill="rgb(226,220,1)"/><text x="536.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.54%)</title><rect x="536" y="324" width="6" height="15" fill="rgb(243,6,24)"/><text x="539.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.27%)</title><rect x="539" y="340" width="3" height="15" fill="rgb(253,214,20)"/><text x="542.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.81%)</title><rect x="536" y="308" width="10" height="15" fill="rgb(227,9,3)"/><text x="539.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.27%)</title><rect x="542" y="324" width="4" height="15" fill="rgb(241,24,35)"/><text x="545.00" y="334.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.27%)</title><rect x="542" y="340" width="4" height="15" fill="rgb(215,188,21)"/><text x="545.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.27%)</title><rect x="542" y="356" width="4" height="15" fill="rgb(245,48,9)"/><text x="545.00" y="366.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.27%)</title><rect x="542" y="372" width="4" height="15" fill="rgb(239,62,18)"/><text x="545.00" y="382.50"></text></g><g><title>0x7fb3fa46cdbb (libc-2.29.so) (1 samples, 0.27%)</title><rect x="558" y="356" width="3" height="15" fill="rgb(212,126,20)"/><text x="561.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (10 samples, 2.69%)</title><rect x="533" y="292" width="32" height="15" fill="rgb(251,200,50)"/><text x="536.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.61%)</title><rect x="546" y="308" width="19" height="15" fill="rgb(205,170,35)"/><text x="549.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.61%)</title><rect x="546" y="324" width="19" height="15" fill="rgb(245,207,11)"/><text x="549.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.61%)</title><rect x="546" y="340" width="19" height="15" fill="rgb(218,76,39)"/><text x="549.00" y="350.50"></text></g><g><title>_contig_to_contig (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="561" y="356" width="4" height="15" fill="rgb(250,32,50)"/><text x="564.00" y="366.50"></text></g><g><title>0x7fb3dc85133a (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="565" y="308" width="6" height="15" fill="rgb(214,135,6)"/><text x="568.00" y="318.50"></text></g><g><title>0x7fb3fa5981a0 (libm-2.29.so) (2 samples, 0.54%)</title><rect x="577" y="356" width="7" height="15" fill="rgb(250,57,50)"/><text x="580.00" y="366.50"></text></g><g><title>0x7fb3fa5cbe17 (libm-2.29.so) (2 samples, 0.54%)</title><rect x="584" y="356" width="6" height="15" fill="rgb(246,19,40)"/><text x="587.00" y="366.50"></text></g><g><title>0x7fb3fa5cbe4e (libm-2.29.so) (2 samples, 0.54%)</title><rect x="590" y="356" width="6" height="15" fill="rgb(205,184,20)"/><text x="593.00" y="366.50"></text></g><g><title>0x7fb3fa5cbe7e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(248,11,4)"/><text x="599.00" y="366.50"></text></g><g><title>0x7fb3fa5cbe96 (libm-2.29.so) (3 samples, 0.81%)</title><rect x="600" y="356" width="9" height="15" fill="rgb(243,44,53)"/><text x="603.00" y="366.50"></text></g><g><title>0x7fb3dc873214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.49%)</title><rect x="571" y="324" width="41" height="15" fill="rgb(210,50,18)"/><text x="574.00" y="334.50">0x7..</text></g><g><title>expf (libm-2.29.so) (13 samples, 3.49%)</title><rect x="571" y="340" width="41" height="15" fill="rgb(254,229,36)"/><text x="574.00" y="350.50">exp..</text></g><g><title>0x7fb3fa5cbea6 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="609" y="356" width="3" height="15" fill="rgb(211,162,50)"/><text x="612.00" y="366.50"></text></g><g><title>0x7fb3dc873224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="612" y="324" width="7" height="15" fill="rgb(226,208,17)"/><text x="615.00" y="334.50"></text></g><g><title>0x7fb3dc85133d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (18 samples, 4.84%)</title><rect x="571" y="308" width="57" height="15" fill="rgb(230,214,33)"/><text x="574.00" y="318.50">0x7fb3..</text></g><g><title>0x7fb3dc873228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="619" y="324" width="9" height="15" fill="rgb(248,61,5)"/><text x="622.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (57 samples, 15.32%)</title><rect x="454" y="228" width="180" height="15" fill="rgb(237,200,46)"/><text x="457.00" y="238.50">_run (mlprodict/onnxrt/..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (35 samples, 9.41%)</title><rect x="523" y="244" width="111" height="15" fill="rgb(206,172,18)"/><text x="526.00" y="254.50">ufunc_generic..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (34 samples, 9.14%)</title><rect x="527" y="260" width="107" height="15" fill="rgb(240,188,9)"/><text x="530.00" y="270.50">PyUFunc_Gener..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (33 samples, 8.87%)</title><rect x="530" y="276" width="104" height="15" fill="rgb(213,99,48)"/><text x="533.00" y="286.50">execute_lega..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (22 samples, 5.91%)</title><rect x="565" y="292" width="69" height="15" fill="rgb(239,89,50)"/><text x="568.00" y="302.50">trivial..</text></g><g><title>0x7fb3dc851345 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="628" y="308" width="6" height="15" fill="rgb(222,224,34)"/><text x="631.00" y="318.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.27%)</title><rect x="641" y="388" width="3" height="15" fill="rgb(241,196,10)"/><text x="644.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.54%)</title><rect x="641" y="324" width="6" height="15" fill="rgb(211,42,11)"/><text x="644.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.54%)</title><rect x="641" y="340" width="6" height="15" fill="rgb(241,111,15)"/><text x="644.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.54%)</title><rect x="641" y="356" width="6" height="15" fill="rgb(208,96,4)"/><text x="644.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.54%)</title><rect x="641" y="372" width="6" height="15" fill="rgb(205,92,14)"/><text x="644.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.27%)</title><rect x="644" y="388" width="3" height="15" fill="rgb(250,189,2)"/><text x="647.00" y="398.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.27%)</title><rect x="647" y="388" width="3" height="15" fill="rgb(242,153,5)"/><text x="650.00" y="398.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.27%)</title><rect x="647" y="404" width="3" height="15" fill="rgb(208,50,29)"/><text x="650.00" y="414.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="650" y="388" width="3" height="15" fill="rgb(205,131,19)"/><text x="653.00" y="398.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="650" y="404" width="3" height="15" fill="rgb(222,88,14)"/><text x="653.00" y="414.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.27%)</title><rect x="653" y="388" width="4" height="15" fill="rgb(250,134,6)"/><text x="656.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="653" y="404" width="4" height="15" fill="rgb(234,228,12)"/><text x="656.00" y="414.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.08%)</title><rect x="647" y="372" width="13" height="15" fill="rgb(242,140,31)"/><text x="650.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="657" y="388" width="3" height="15" fill="rgb(229,38,35)"/><text x="660.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="660" y="404" width="3" height="15" fill="rgb(241,35,22)"/><text x="663.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="660" y="420" width="3" height="15" fill="rgb(212,197,14)"/><text x="663.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="660" y="436" width="3" height="15" fill="rgb(244,127,22)"/><text x="663.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.27%)</title><rect x="660" y="452" width="3" height="15" fill="rgb(228,150,46)"/><text x="663.00" y="462.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.27%)</title><rect x="660" y="468" width="3" height="15" fill="rgb(241,85,43)"/><text x="663.00" y="478.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (2 samples, 0.54%)</title><rect x="660" y="372" width="6" height="15" fill="rgb(219,67,29)"/><text x="663.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (2 samples, 0.54%)</title><rect x="660" y="388" width="6" height="15" fill="rgb(218,122,34)"/><text x="663.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.27%)</title><rect x="663" y="404" width="3" height="15" fill="rgb(253,182,18)"/><text x="666.00" y="414.50"></text></g><g><title>0x7fb3fa404a19 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="663" y="420" width="3" height="15" fill="rgb(216,9,21)"/><text x="666.00" y="430.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.27%)</title><rect x="663" y="436" width="3" height="15" fill="rgb(213,90,42)"/><text x="666.00" y="446.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.27%)</title><rect x="666" y="372" width="3" height="15" fill="rgb(248,87,30)"/><text x="669.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="666" y="388" width="3" height="15" fill="rgb(226,176,37)"/><text x="669.00" y="398.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="666" y="404" width="3" height="15" fill="rgb(210,110,0)"/><text x="669.00" y="414.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="666" y="420" width="3" height="15" fill="rgb(247,69,5)"/><text x="669.00" y="430.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="666" y="436" width="3" height="15" fill="rgb(234,92,15)"/><text x="669.00" y="446.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="666" y="452" width="3" height="15" fill="rgb(230,153,34)"/><text x="669.00" y="462.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="669" y="372" width="3" height="15" fill="rgb(222,146,1)"/><text x="672.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (6 samples, 1.61%)</title><rect x="682" y="388" width="19" height="15" fill="rgb(208,209,39)"/><text x="685.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src) (5 samples, 1.34%)</title><rect x="685" y="404" width="16" height="15" fill="rgb(208,35,44)"/><text x="688.00" y="414.50"></text></g><g><title>array_sum (methods.c) (23 samples, 6.18%)</title><rect x="641" y="260" width="73" height="15" fill="rgb(205,34,52)"/><text x="644.00" y="270.50">array_su..</text></g><g><title>forward_ndarray_method (methods.c) (23 samples, 6.18%)</title><rect x="641" y="276" width="73" height="15" fill="rgb(224,140,18)"/><text x="644.00" y="286.50">forward_..</text></g><g><title>_sum (numpy/core/_methods.py) (23 samples, 6.18%)</title><rect x="641" y="292" width="73" height="15" fill="rgb(248,127,2)"/><text x="644.00" y="302.50">_sum (nu..</text></g><g><title>ufunc_reduce (ufunc_object.c) (23 samples, 6.18%)</title><rect x="641" y="308" width="73" height="15" fill="rgb(238,190,27)"/><text x="644.00" y="318.50">ufunc_re..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (21 samples, 5.65%)</title><rect x="647" y="324" width="67" height="15" fill="rgb(207,79,14)"/><text x="650.00" y="334.50">PyUFunc..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (21 samples, 5.65%)</title><rect x="647" y="340" width="67" height="15" fill="rgb(233,29,18)"/><text x="650.00" y="350.50">PyUFunc..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (21 samples, 5.65%)</title><rect x="647" y="356" width="67" height="15" fill="rgb(212,1,35)"/><text x="650.00" y="366.50">PyUFunc..</text></g><g><title>reduce_loop (ufunc_object.c) (13 samples, 3.49%)</title><rect x="672" y="372" width="42" height="15" fill="rgb(213,198,17)"/><text x="675.00" y="382.50">red..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (4 samples, 1.08%)</title><rect x="701" y="388" width="13" height="15" fill="rgb(213,225,30)"/><text x="704.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="717" y="276" width="3" height="15" fill="rgb(240,40,18)"/><text x="720.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="717" y="292" width="3" height="15" fill="rgb(251,116,18)"/><text x="720.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.27%)</title><rect x="720" y="292" width="3" height="15" fill="rgb(244,181,6)"/><text x="723.00" y="302.50"></text></g><g><title>FLOAT_divide (loops.c.src) (2 samples, 0.54%)</title><rect x="723" y="324" width="7" height="15" fill="rgb(215,7,46)"/><text x="726.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src) (2 samples, 0.54%)</title><rect x="723" y="340" width="7" height="15" fill="rgb(240,30,41)"/><text x="726.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src) (2 samples, 0.54%)</title><rect x="723" y="356" width="7" height="15" fill="rgb(220,52,34)"/><text x="726.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h) (2 samples, 0.54%)</title><rect x="723" y="372" width="7" height="15" fill="rgb(246,218,50)"/><text x="726.00" y="382.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.27%)</title><rect x="730" y="340" width="3" height="15" fill="rgb(215,70,33)"/><text x="733.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.54%)</title><rect x="730" y="324" width="6" height="15" fill="rgb(225,84,20)"/><text x="733.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="733" y="340" width="3" height="15" fill="rgb(209,10,6)"/><text x="736.00" y="350.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="733" y="356" width="3" height="15" fill="rgb(223,180,49)"/><text x="736.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.34%)</title><rect x="723" y="308" width="16" height="15" fill="rgb(222,128,21)"/><text x="726.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.27%)</title><rect x="736" y="324" width="3" height="15" fill="rgb(242,11,14)"/><text x="739.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="736" y="340" width="3" height="15" fill="rgb(247,213,0)"/><text x="739.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="736" y="356" width="3" height="15" fill="rgb(238,37,13)"/><text x="739.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="736" y="372" width="3" height="15" fill="rgb(225,112,4)"/><text x="739.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.61%)</title><rect x="723" y="292" width="19" height="15" fill="rgb(232,202,26)"/><text x="726.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.27%)</title><rect x="739" y="308" width="3" height="15" fill="rgb(234,106,11)"/><text x="742.00" y="318.50"></text></g><g><title>FLOAT_absolute (loops.c.src) (1 samples, 0.27%)</title><rect x="739" y="324" width="3" height="15" fill="rgb(234,116,42)"/><text x="742.00" y="334.50"></text></g><g><title>run_unary_simd_absolute_FLOAT (simd.inc.src) (1 samples, 0.27%)</title><rect x="739" y="340" width="3" height="15" fill="rgb(207,218,8)"/><text x="742.00" y="350.50"></text></g><g><title>sse2_absolute_FLOAT (simd.inc.src) (1 samples, 0.27%)</title><rect x="739" y="356" width="3" height="15" fill="rgb(221,37,14)"/><text x="742.00" y="366.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (111 samples, 29.84%)</title><rect x="393" y="100" width="352" height="15" fill="rgb(245,159,12)"/><text x="396.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_c..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 29.30%)</title><rect x="400" y="116" width="345" height="15" fill="rgb(215,113,39)"/><text x="403.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 29.30%)</title><rect x="400" y="132" width="345" height="15" fill="rgb(211,27,8)"/><text x="403.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (108 samples, 29.03%)</title><rect x="403" y="148" width="342" height="15" fill="rgb(250,135,41)"/><text x="406.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (106 samples, 28.49%)</title><rect x="409" y="164" width="336" height="15" fill="rgb(212,127,23)"/><text x="412.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (102 samples, 27.42%)</title><rect x="422" y="180" width="323" height="15" fill="rgb(250,95,24)"/><text x="425.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (96 samples, 25.81%)</title><rect x="441" y="196" width="304" height="15" fill="rgb(225,52,10)"/><text x="444.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (93 samples, 25.00%)</title><rect x="450" y="212" width="295" height="15" fill="rgb(221,142,20)"/><text x="453.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 9.41%)</title><rect x="634" y="228" width="111" height="15" fill="rgb(218,5,39)"/><text x="637.00" y="238.50">_run (mlprodi..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (35 samples, 9.41%)</title><rect x="634" y="244" width="111" height="15" fill="rgb(209,45,23)"/><text x="637.00" y="254.50">norm_l1 (mlpr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.69%)</title><rect x="714" y="260" width="31" height="15" fill="rgb(231,20,31)"/><text x="717.00" y="270.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.15%)</title><rect x="720" y="276" width="25" height="15" fill="rgb(244,213,34)"/><text x="723.00" y="286.50">P..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="742" y="292" width="3" height="15" fill="rgb(245,135,31)"/><text x="745.00" y="302.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="742" y="308" width="3" height="15" fill="rgb(225,205,3)"/><text x="745.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.27%)</title><rect x="742" y="324" width="3" height="15" fill="rgb(246,83,6)"/><text x="745.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (112 samples, 30.11%)</title><rect x="393" y="68" width="356" height="15" fill="rgb(207,141,7)"/><text x="396.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (112 samples, 30.11%)</title><rect x="393" y="84" width="356" height="15" fill="rgb(251,162,34)"/><text x="396.00" y="94.50">setup_profile (bench_LogisticRegression_liblinea..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="745" y="100" width="4" height="15" fill="rgb(243,185,8)"/><text x="748.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="745" y="116" width="4" height="15" fill="rgb(217,16,44)"/><text x="748.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.27%)</title><rect x="745" y="132" width="4" height="15" fill="rgb(211,13,1)"/><text x="748.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="745" y="148" width="4" height="15" fill="rgb(238,187,26)"/><text x="748.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="745" y="164" width="4" height="15" fill="rgb(241,206,50)"/><text x="748.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.27%)</title><rect x="745" y="180" width="4" height="15" fill="rgb(206,128,19)"/><text x="748.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.27%)</title><rect x="745" y="196" width="4" height="15" fill="rgb(232,66,46)"/><text x="748.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="212" width="4" height="15" fill="rgb(210,153,51)"/><text x="748.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="228" width="4" height="15" fill="rgb(239,131,9)"/><text x="748.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="244" width="4" height="15" fill="rgb(229,49,4)"/><text x="748.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="745" y="260" width="4" height="15" fill="rgb(214,107,8)"/><text x="748.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="276" width="4" height="15" fill="rgb(234,17,21)"/><text x="748.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.27%)</title><rect x="745" y="292" width="4" height="15" fill="rgb(208,120,20)"/><text x="748.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="308" width="4" height="15" fill="rgb(231,83,40)"/><text x="748.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="324" width="4" height="15" fill="rgb(216,73,20)"/><text x="748.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="340" width="4" height="15" fill="rgb(234,121,44)"/><text x="748.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="745" y="356" width="4" height="15" fill="rgb(246,106,36)"/><text x="748.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="372" width="4" height="15" fill="rgb(218,222,24)"/><text x="748.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.27%)</title><rect x="745" y="388" width="4" height="15" fill="rgb(221,121,4)"/><text x="748.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="404" width="4" height="15" fill="rgb(235,30,45)"/><text x="748.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="420" width="4" height="15" fill="rgb(220,221,24)"/><text x="748.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="436" width="4" height="15" fill="rgb(221,166,9)"/><text x="748.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="745" y="452" width="4" height="15" fill="rgb(251,210,15)"/><text x="748.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="745" y="468" width="4" height="15" fill="rgb(241,91,34)"/><text x="748.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.27%)</title><rect x="745" y="484" width="4" height="15" fill="rgb(229,16,1)"/><text x="748.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.27%)</title><rect x="745" y="500" width="4" height="15" fill="rgb(229,203,7)"/><text x="748.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="516" width="4" height="15" fill="rgb(210,72,44)"/><text x="748.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="532" width="4" height="15" fill="rgb(224,84,54)"/><text x="748.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="548" width="4" height="15" fill="rgb(208,41,30)"/><text x="748.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="564" width="4" height="15" fill="rgb(216,10,16)"/><text x="748.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="580" width="4" height="15" fill="rgb(225,40,24)"/><text x="748.00" y="590.50"></text></g><g><title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;_typeobject* const, std::vector&lt;pybind11::detail::type_info*, std::allocator&lt;pybind11::detail::type_info*&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_allocate_buckets [clone .isra.776] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="745" y="596" width="4" height="15" fill="rgb(211,21,34)"/><text x="748.00" y="606.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.27%)</title><rect x="745" y="612" width="4" height="15" fill="rgb(250,110,30)"/><text x="748.00" y="622.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="745" y="628" width="4" height="15" fill="rgb(241,48,37)"/><text x="748.00" y="638.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.27%)</title><rect x="774" y="180" width="3" height="15" fill="rgb(253,197,0)"/><text x="777.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.27%)</title><rect x="777" y="180" width="3" height="15" fill="rgb(210,84,10)"/><text x="780.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.27%)</title><rect x="777" y="196" width="3" height="15" fill="rgb(219,19,25)"/><text x="780.00" y="206.50"></text></g><g><title>0x7fb3fa462734 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="777" y="212" width="3" height="15" fill="rgb(234,5,25)"/><text x="780.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="783" y="244" width="4" height="15" fill="rgb(235,184,18)"/><text x="786.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="783" y="260" width="4" height="15" fill="rgb(213,90,12)"/><text x="786.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="783" y="276" width="4" height="15" fill="rgb(247,52,44)"/><text x="786.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.27%)</title><rect x="783" y="292" width="4" height="15" fill="rgb(254,117,1)"/><text x="786.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.27%)</title><rect x="783" y="308" width="4" height="15" fill="rgb(211,148,47)"/><text x="786.00" y="318.50"></text></g><g><title>0x7fb3fa462e50 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="783" y="324" width="4" height="15" fill="rgb(238,12,18)"/><text x="786.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.27%)</title><rect x="790" y="308" width="3" height="15" fill="rgb(210,200,6)"/><text x="793.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.54%)</title><rect x="790" y="292" width="6" height="15" fill="rgb(217,83,22)"/><text x="793.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="793" y="308" width="3" height="15" fill="rgb(227,74,51)"/><text x="796.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.27%)</title><rect x="796" y="292" width="3" height="15" fill="rgb(206,38,47)"/><text x="799.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.27%)</title><rect x="796" y="308" width="3" height="15" fill="rgb(214,40,18)"/><text x="799.00" y="318.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="796" y="324" width="3" height="15" fill="rgb(251,98,38)"/><text x="799.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (8 samples, 2.15%)</title><rect x="809" y="308" width="25" height="15" fill="rgb(209,170,29)"/><text x="812.00" y="318.50">D..</text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 1.08%)</title><rect x="822" y="324" width="12" height="15" fill="rgb(249,209,16)"/><text x="825.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (17 samples, 4.57%)</title><rect x="790" y="276" width="54" height="15" fill="rgb(225,174,54)"/><text x="793.00" y="286.50">PyUFu..</text></g><g><title>reduce_loop (ufunc_object.c) (14 samples, 3.76%)</title><rect x="799" y="292" width="45" height="15" fill="rgb(235,55,51)"/><text x="802.00" y="302.50">redu..</text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (3 samples, 0.81%)</title><rect x="834" y="308" width="10" height="15" fill="rgb(251,175,20)"/><text x="837.00" y="318.50"></text></g><g><title>array_sum (methods.c) (21 samples, 5.65%)</title><rect x="780" y="180" width="67" height="15" fill="rgb(223,197,43)"/><text x="783.00" y="190.50">array_s..</text></g><g><title>forward_ndarray_method (methods.c) (21 samples, 5.65%)</title><rect x="780" y="196" width="67" height="15" fill="rgb(232,186,7)"/><text x="783.00" y="206.50">forward..</text></g><g><title>_sum (numpy/core/_methods.py) (21 samples, 5.65%)</title><rect x="780" y="212" width="67" height="15" fill="rgb(235,45,11)"/><text x="783.00" y="222.50">_sum (n..</text></g><g><title>ufunc_reduce (ufunc_object.c) (20 samples, 5.38%)</title><rect x="783" y="228" width="64" height="15" fill="rgb(211,193,36)"/><text x="786.00" y="238.50">ufunc_r..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (19 samples, 5.11%)</title><rect x="787" y="244" width="60" height="15" fill="rgb(241,206,50)"/><text x="790.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (18 samples, 4.84%)</title><rect x="790" y="260" width="57" height="15" fill="rgb(233,37,36)"/><text x="793.00" y="270.50">PyUFun..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.27%)</title><rect x="844" y="276" width="3" height="15" fill="rgb(232,102,33)"/><text x="847.00" y="286.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.27%)</title><rect x="850" y="196" width="3" height="15" fill="rgb(208,158,14)"/><text x="853.00" y="206.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.27%)</title><rect x="850" y="212" width="3" height="15" fill="rgb(225,10,19)"/><text x="853.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="850" y="228" width="3" height="15" fill="rgb(212,71,18)"/><text x="853.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="850" y="244" width="3" height="15" fill="rgb(208,134,37)"/><text x="853.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="853" y="228" width="3" height="15" fill="rgb(235,166,27)"/><text x="856.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="853" y="244" width="3" height="15" fill="rgb(222,178,43)"/><text x="856.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.27%)</title><rect x="856" y="244" width="4" height="15" fill="rgb(215,42,33)"/><text x="859.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.27%)</title><rect x="856" y="260" width="4" height="15" fill="rgb(250,113,24)"/><text x="859.00" y="270.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.54%)</title><rect x="860" y="324" width="6" height="15" fill="rgb(210,25,26)"/><text x="863.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 1.08%)</title><rect x="860" y="276" width="12" height="15" fill="rgb(236,193,21)"/><text x="863.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (4 samples, 1.08%)</title><rect x="860" y="292" width="12" height="15" fill="rgb(235,195,34)"/><text x="863.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (4 samples, 1.08%)</title><rect x="860" y="308" width="12" height="15" fill="rgb(228,153,39)"/><text x="863.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (2 samples, 0.54%)</title><rect x="866" y="324" width="6" height="15" fill="rgb(254,220,33)"/><text x="869.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.54%)</title><rect x="872" y="276" width="7" height="15" fill="rgb(227,165,1)"/><text x="875.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.54%)</title><rect x="872" y="292" width="7" height="15" fill="rgb(229,184,39)"/><text x="875.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.54%)</title><rect x="872" y="308" width="7" height="15" fill="rgb(245,98,25)"/><text x="875.00" y="318.50"></text></g><g><title>0x7fb3fa46cd6f (libc-2.29.so) (1 samples, 0.27%)</title><rect x="875" y="324" width="4" height="15" fill="rgb(239,136,24)"/><text x="878.00" y="334.50"></text></g><g><title>array_add (number.c) (9 samples, 2.42%)</title><rect x="853" y="196" width="29" height="15" fill="rgb(210,208,53)"/><text x="856.00" y="206.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.42%)</title><rect x="853" y="212" width="29" height="15" fill="rgb(249,25,29)"/><text x="856.00" y="222.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 2.15%)</title><rect x="856" y="228" width="26" height="15" fill="rgb(213,188,23)"/><text x="859.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.88%)</title><rect x="860" y="244" width="22" height="15" fill="rgb(246,0,41)"/><text x="863.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 1.88%)</title><rect x="860" y="260" width="22" height="15" fill="rgb(249,42,30)"/><text x="863.00" y="270.50">i..</text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="879" y="276" width="3" height="15" fill="rgb(228,80,44)"/><text x="882.00" y="286.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.27%)</title><rect x="901" y="212" width="3" height="15" fill="rgb(221,215,23)"/><text x="904.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 0.81%)</title><rect x="904" y="212" width="10" height="15" fill="rgb(225,123,4)"/><text x="907.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="910" y="228" width="4" height="15" fill="rgb(220,133,40)"/><text x="913.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 1.34%)</title><rect x="914" y="212" width="15" height="15" fill="rgb(219,40,28)"/><text x="917.00" y="222.50"></text></g><g><title>array_ndim_get (getset.c) (1 samples, 0.27%)</title><rect x="929" y="212" width="4" height="15" fill="rgb(212,18,36)"/><text x="932.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.54%)</title><rect x="933" y="212" width="6" height="15" fill="rgb(248,87,29)"/><text x="936.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (20 samples, 5.38%)</title><rect x="882" y="196" width="63" height="15" fill="rgb(242,53,6)"/><text x="885.00" y="206.50">check_..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.54%)</title><rect x="939" y="212" width="6" height="15" fill="rgb(207,153,43)"/><text x="942.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.54%)</title><rect x="939" y="228" width="6" height="15" fill="rgb(231,162,21)"/><text x="942.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.27%)</title><rect x="952" y="228" width="3" height="15" fill="rgb(225,75,24)"/><text x="955.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (6 samples, 1.61%)</title><rect x="945" y="196" width="19" height="15" fill="rgb(223,56,47)"/><text x="948.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (6 samples, 1.61%)</title><rect x="945" y="212" width="19" height="15" fill="rgb(209,186,41)"/><text x="948.00" y="222.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.81%)</title><rect x="955" y="228" width="9" height="15" fill="rgb(236,182,52)"/><text x="958.00" y="238.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.08%)</title><rect x="967" y="212" width="13" height="15" fill="rgb(226,225,9)"/><text x="970.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.81%)</title><rect x="980" y="212" width="10" height="15" fill="rgb(223,123,26)"/><text x="983.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.27%)</title><rect x="990" y="212" width="3" height="15" fill="rgb(227,122,12)"/><text x="993.00" y="222.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="996" y="292" width="3" height="15" fill="rgb(244,133,13)"/><text x="999.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.54%)</title><rect x="996" y="260" width="6" height="15" fill="rgb(224,117,10)"/><text x="999.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.54%)</title><rect x="996" y="276" width="6" height="15" fill="rgb(211,165,19)"/><text x="999.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="999" y="292" width="3" height="15" fill="rgb(212,224,19)"/><text x="1002.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.27%)</title><rect x="999" y="308" width="3" height="15" fill="rgb(226,228,42)"/><text x="1002.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.54%)</title><rect x="1006" y="292" width="6" height="15" fill="rgb(250,109,50)"/><text x="1009.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.54%)</title><rect x="1006" y="308" width="6" height="15" fill="rgb(218,104,30)"/><text x="1009.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.27%)</title><rect x="1009" y="324" width="3" height="15" fill="rgb(230,31,7)"/><text x="1012.00" y="334.50"></text></g><g><title>PyArray_CreateSortedStridePerm (shape.c) (1 samples, 0.27%)</title><rect x="1009" y="340" width="3" height="15" fill="rgb(214,23,52)"/><text x="1012.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.08%)</title><rect x="1002" y="260" width="13" height="15" fill="rgb(221,96,33)"/><text x="1005.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.08%)</title><rect x="1002" y="276" width="13" height="15" fill="rgb(238,66,25)"/><text x="1005.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1012" y="292" width="3" height="15" fill="rgb(240,177,9)"/><text x="1015.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.27%)</title><rect x="1012" y="308" width="3" height="15" fill="rgb(245,105,34)"/><text x="1015.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="1012" y="324" width="3" height="15" fill="rgb(250,121,22)"/><text x="1015.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.27%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(223,47,14)"/><text x="1015.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.88%)</title><rect x="996" y="228" width="22" height="15" fill="rgb(225,57,51)"/><text x="999.00" y="238.50">P..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (7 samples, 1.88%)</title><rect x="996" y="244" width="22" height="15" fill="rgb(212,133,34)"/><text x="999.00" y="254.50">P..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1015" y="260" width="3" height="15" fill="rgb(215,95,40)"/><text x="1018.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="1015" y="276" width="3" height="15" fill="rgb(243,105,49)"/><text x="1018.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="1015" y="292" width="3" height="15" fill="rgb(216,32,35)"/><text x="1018.00" y="302.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (55 samples, 14.78%)</title><rect x="847" y="180" width="174" height="15" fill="rgb(226,106,52)"/><text x="850.00" y="190.50">decision_function (skl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 4.84%)</title><rect x="964" y="196" width="57" height="15" fill="rgb(213,184,38)"/><text x="967.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 2.42%)</title><rect x="993" y="212" width="28" height="15" fill="rgb(223,130,12)"/><text x="996.00" y="222.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.27%)</title><rect x="1018" y="228" width="3" height="15" fill="rgb(240,199,40)"/><text x="1021.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.27%)</title><rect x="1021" y="196" width="4" height="15" fill="rgb(213,24,26)"/><text x="1024.00" y="206.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.27%)</title><rect x="1021" y="212" width="4" height="15" fill="rgb(242,47,29)"/><text x="1024.00" y="222.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.27%)</title><rect x="1021" y="228" width="4" height="15" fill="rgb(243,187,33)"/><text x="1024.00" y="238.50"></text></g><g><title>PyUFunc_DefaultTypeResolver (ufunc_type_resolution.c) (2 samples, 0.54%)</title><rect x="1025" y="212" width="6" height="15" fill="rgb(216,168,24)"/><text x="1028.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.27%)</title><rect x="1031" y="228" width="3" height="15" fill="rgb(218,90,4)"/><text x="1034.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.27%)</title><rect x="1031" y="244" width="3" height="15" fill="rgb(219,113,38)"/><text x="1034.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.27%)</title><rect x="1031" y="260" width="3" height="15" fill="rgb(205,129,47)"/><text x="1034.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.27%)</title><rect x="1031" y="276" width="3" height="15" fill="rgb(246,167,34)"/><text x="1034.00" y="286.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="1031" y="292" width="3" height="15" fill="rgb(252,184,20)"/><text x="1034.00" y="302.50"></text></g><g><title>_mm_div_pd (emmintrin.h) (1 samples, 0.27%)</title><rect x="1037" y="292" width="3" height="15" fill="rgb(254,130,5)"/><text x="1040.00" y="302.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (6 samples, 1.61%)</title><rect x="1037" y="244" width="19" height="15" fill="rgb(205,166,10)"/><text x="1040.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (6 samples, 1.61%)</title><rect x="1037" y="260" width="19" height="15" fill="rgb(254,45,28)"/><text x="1040.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src) (6 samples, 1.61%)</title><rect x="1037" y="276" width="19" height="15" fill="rgb(213,127,43)"/><text x="1040.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (5 samples, 1.34%)</title><rect x="1040" y="292" width="16" height="15" fill="rgb(243,128,33)"/><text x="1043.00" y="302.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.27%)</title><rect x="1056" y="260" width="3" height="15" fill="rgb(234,88,5)"/><text x="1059.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.54%)</title><rect x="1056" y="244" width="7" height="15" fill="rgb(251,193,20)"/><text x="1059.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.27%)</title><rect x="1059" y="260" width="4" height="15" fill="rgb(211,166,45)"/><text x="1062.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (6 samples, 1.61%)</title><rect x="1063" y="244" width="19" height="15" fill="rgb(241,28,12)"/><text x="1066.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (6 samples, 1.61%)</title><rect x="1063" y="260" width="19" height="15" fill="rgb(244,211,49)"/><text x="1066.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (6 samples, 1.61%)</title><rect x="1063" y="276" width="19" height="15" fill="rgb(239,186,40)"/><text x="1066.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.27%)</title><rect x="1078" y="292" width="4" height="15" fill="rgb(253,63,35)"/><text x="1081.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c) (16 samples, 4.30%)</title><rect x="1034" y="228" width="51" height="15" fill="rgb(239,138,24)"/><text x="1037.00" y="238.50">itera..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.27%)</title><rect x="1082" y="244" width="3" height="15" fill="rgb(225,121,50)"/><text x="1085.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.27%)</title><rect x="1082" y="260" width="3" height="15" fill="rgb(230,196,1)"/><text x="1085.00" y="270.50"></text></g><g><title>0x7fb3dc8529da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1085" y="244" width="3" height="15" fill="rgb(246,54,9)"/><text x="1088.00" y="254.50"></text></g><g><title>0x7fb3fa5981b0 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1107" y="292" width="3" height="15" fill="rgb(247,152,4)"/><text x="1110.00" y="302.50"></text></g><g><title>0x7fb3fa61eba0 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1110" y="292" width="3" height="15" fill="rgb(233,177,52)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7fb3fa61ebb4 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1113" y="292" width="4" height="15" fill="rgb(229,86,52)"/><text x="1116.00" y="302.50"></text></g><g><title>0x7fb3fa61ebd3 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1117" y="292" width="3" height="15" fill="rgb(205,67,9)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7fb3fa61ebe7 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(244,31,9)"/><text x="1123.00" y="302.50"></text></g><g><title>0x7fb3fa61ebf9 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1123" y="292" width="3" height="15" fill="rgb(238,225,47)"/><text x="1126.00" y="302.50"></text></g><g><title>0x7fb3fa61ec18 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1126" y="292" width="3" height="15" fill="rgb(248,112,10)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7fb3fa61ec3e (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1129" y="292" width="3" height="15" fill="rgb(242,75,23)"/><text x="1132.00" y="302.50"></text></g><g><title>0x7fb3fa61ec56 (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1132" y="292" width="4" height="15" fill="rgb(224,101,7)"/><text x="1135.00" y="302.50"></text></g><g><title>0x7fb3dc873265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (16 samples, 4.30%)</title><rect x="1088" y="260" width="51" height="15" fill="rgb(242,94,17)"/><text x="1091.00" y="270.50">0x7fb..</text></g><g><title>exp (libm-2.29.so) (15 samples, 4.03%)</title><rect x="1091" y="276" width="48" height="15" fill="rgb(241,87,9)"/><text x="1094.00" y="286.50">exp ..</text></g><g><title>0x7fb3fa61ec7b (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1136" y="292" width="3" height="15" fill="rgb(215,52,42)"/><text x="1139.00" y="302.50"></text></g><g><title>0x7fb3dc8529dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (26 samples, 6.99%)</title><rect x="1088" y="244" width="82" height="15" fill="rgb(235,207,8)"/><text x="1091.00" y="254.50">0x7fb3dc8..</text></g><g><title>0x7fb3dc873279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.69%)</title><rect x="1139" y="260" width="31" height="15" fill="rgb(237,117,33)"/><text x="1142.00" y="270.50">0x..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (130 samples, 34.95%)</title><rect x="761" y="164" width="413" height="15" fill="rgb(238,172,33)"/><text x="764.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (48 samples, 12.90%)</title><rect x="1021" y="180" width="153" height="15" fill="rgb(243,107,41)"/><text x="1024.00" y="190.50">ufunc_generic_call ..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (47 samples, 12.63%)</title><rect x="1025" y="196" width="149" height="15" fill="rgb(206,57,5)"/><text x="1028.00" y="206.50">PyUFunc_GenericFunc..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (45 samples, 12.10%)</title><rect x="1031" y="212" width="143" height="15" fill="rgb(206,36,42)"/><text x="1034.00" y="222.50">execute_legacy_ufu..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (28 samples, 7.53%)</title><rect x="1085" y="228" width="89" height="15" fill="rgb(235,217,3)"/><text x="1088.00" y="238.50">trivial_tw..</text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="1170" y="244" width="4" height="15" fill="rgb(251,151,32)"/><text x="1173.00" y="254.50"></text></g><g><title>all (372 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(241,79,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (372 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(251,151,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (139 samples, 37.37%)</title><rect x="749" y="68" width="441" height="15" fill="rgb(210,129,45)"/><text x="752.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_m_cl_solverl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (139 samples, 37.37%)</title><rect x="749" y="84" width="441" height="15" fill="rgb(230,94,50)"/><text x="752.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_m_cl_solve..</text></g><g><title>profile (bench_LogisticRegression_liblinear_m_cl_solverliblinear_onnx_1000_4_12_float_nozipmap.py) (139 samples, 37.37%)</title><rect x="749" y="100" width="441" height="15" fill="rgb(224,79,31)"/><text x="752.00" y="110.50">profile (bench_LogisticRegression_liblinear_m_cl_solverlibli..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (139 samples, 37.37%)</title><rect x="749" y="116" width="441" height="15" fill="rgb(225,175,16)"/><text x="752.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (138 samples, 37.10%)</title><rect x="752" y="132" width="438" height="15" fill="rgb(245,184,29)"/><text x="755.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (138 samples, 37.10%)</title><rect x="752" y="148" width="438" height="15" fill="rgb(220,46,45)"/><text x="755.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (5 samples, 1.34%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(234,194,7)"/><text x="1177.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 1.08%)</title><rect x="1177" y="180" width="13" height="15" fill="rgb(226,191,3)"/><text x="1180.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.27%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(246,226,37)"/><text x="1189.00" y="206.50"></text></g></g></svg>