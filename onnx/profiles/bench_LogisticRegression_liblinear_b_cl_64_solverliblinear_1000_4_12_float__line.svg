<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (1 samples, 0.19%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(241,26,52)"/><text x="13.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(250,33,0)"/><text x="13.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(209,181,9)"/><text x="13.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(249,10,6)"/><text x="13.00" y="222.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(247,61,3)"/><text x="13.00" y="238.50"></text></g><g><title>0x7f6853e309dd (?) (1 samples, 0.19%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(241,155,50)"/><text x="13.00" y="254.50"></text></g><g><title>0x7f6853e51265 (?) (1 samples, 0.19%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(206,20,0)"/><text x="13.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(254,69,21)"/><text x="13.00" y="286.50"></text></g><g><title>0x7f6868d19c18 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(215,223,53)"/><text x="13.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.19%)</title><rect x="12" y="180" width="2" height="15" fill="rgb(205,15,11)"/><text x="15.00" y="190.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:18) (3 samples, 0.58%)</title><rect x="10" y="100" width="6" height="15" fill="rgb(223,143,54)"/><text x="13.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.58%)</title><rect x="10" y="116" width="6" height="15" fill="rgb(233,200,21)"/><text x="13.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (3 samples, 0.58%)</title><rect x="10" y="132" width="6" height="15" fill="rgb(231,118,1)"/><text x="13.00" y="142.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (3 samples, 0.58%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(224,207,48)"/><text x="13.00" y="158.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (2 samples, 0.39%)</title><rect x="12" y="164" width="4" height="15" fill="rgb(233,85,30)"/><text x="15.00" y="174.50"></text></g><g><title>array_sum (methods.c:2215) (1 samples, 0.19%)</title><rect x="14" y="180" width="2" height="15" fill="rgb(241,34,45)"/><text x="17.00" y="190.50"></text></g><g><title>forward_ndarray_method (methods.c:108) (1 samples, 0.19%)</title><rect x="14" y="196" width="2" height="15" fill="rgb(228,189,35)"/><text x="17.00" y="206.50"></text></g><g><title>_sum (numpy/core/_methods.py:38) (1 samples, 0.19%)</title><rect x="14" y="212" width="2" height="15" fill="rgb(233,47,2)"/><text x="17.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.19%)</title><rect x="14" y="228" width="2" height="15" fill="rgb(234,203,39)"/><text x="17.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.19%)</title><rect x="14" y="244" width="2" height="15" fill="rgb(239,123,44)"/><text x="17.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.19%)</title><rect x="14" y="260" width="2" height="15" fill="rgb(214,63,26)"/><text x="17.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.19%)</title><rect x="14" y="276" width="2" height="15" fill="rgb(241,227,23)"/><text x="17.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.19%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(252,204,39)"/><text x="17.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(211,113,49)"/><text x="17.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.19%)</title><rect x="16" y="164" width="3" height="15" fill="rgb(218,12,50)"/><text x="19.00" y="174.50"></text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1643) (3 samples, 0.58%)</title><rect x="16" y="148" width="7" height="15" fill="rgb(234,165,52)"/><text x="19.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.39%)</title><rect x="19" y="164" width="4" height="15" fill="rgb(249,211,33)"/><text x="22.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.39%)</title><rect x="19" y="180" width="4" height="15" fill="rgb(253,207,14)"/><text x="22.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.19%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(252,190,44)"/><text x="31.00" y="206.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:266) (5 samples, 0.96%)</title><rect x="28" y="180" width="11" height="15" fill="rgb(220,29,11)"/><text x="31.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (4 samples, 0.77%)</title><rect x="30" y="196" width="9" height="15" fill="rgb(230,21,31)"/><text x="33.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 0.77%)</title><rect x="30" y="212" width="9" height="15" fill="rgb(219,164,39)"/><text x="33.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.58%)</title><rect x="32" y="228" width="7" height="15" fill="rgb(230,164,7)"/><text x="35.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.19%)</title><rect x="41" y="196" width="3" height="15" fill="rgb(225,156,27)"/><text x="44.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.19%)</title><rect x="41" y="212" width="3" height="15" fill="rgb(233,161,28)"/><text x="44.00" y="222.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.19%)</title><rect x="46" y="212" width="2" height="15" fill="rgb(234,219,48)"/><text x="49.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.19%)</title><rect x="48" y="228" width="2" height="15" fill="rgb(218,197,10)"/><text x="51.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.77%)</title><rect x="44" y="196" width="9" height="15" fill="rgb(248,206,2)"/><text x="47.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.39%)</title><rect x="48" y="212" width="5" height="15" fill="rgb(229,33,35)"/><text x="51.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.19%)</title><rect x="50" y="228" width="3" height="15" fill="rgb(231,208,44)"/><text x="53.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.19%)</title><rect x="53" y="196" width="2" height="15" fill="rgb(218,171,11)"/><text x="56.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.19%)</title><rect x="53" y="212" width="2" height="15" fill="rgb(242,56,6)"/><text x="56.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.19%)</title><rect x="55" y="196" width="2" height="15" fill="rgb(216,48,44)"/><text x="58.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.19%)</title><rect x="55" y="212" width="2" height="15" fill="rgb(228,205,52)"/><text x="58.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.19%)</title><rect x="57" y="212" width="3" height="15" fill="rgb(214,121,36)"/><text x="60.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.39%)</title><rect x="57" y="196" width="5" height="15" fill="rgb(211,141,15)"/><text x="60.00" y="206.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (1 samples, 0.19%)</title><rect x="60" y="212" width="2" height="15" fill="rgb(210,70,14)"/><text x="63.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.19%)</title><rect x="62" y="196" width="2" height="15" fill="rgb(218,25,44)"/><text x="65.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.19%)</title><rect x="62" y="212" width="2" height="15" fill="rgb(211,164,32)"/><text x="65.00" y="222.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:268) (13 samples, 2.50%)</title><rect x="39" y="180" width="30" height="15" fill="rgb(224,205,47)"/><text x="42.00" y="190.50">de..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.39%)</title><rect x="64" y="196" width="5" height="15" fill="rgb(247,2,47)"/><text x="67.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.19%)</title><rect x="66" y="212" width="3" height="15" fill="rgb(230,134,9)"/><text x="69.00" y="222.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.19%)</title><rect x="66" y="228" width="3" height="15" fill="rgb(215,145,42)"/><text x="69.00" y="238.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py:275) (1 samples, 0.19%)</title><rect x="69" y="180" width="2" height="15" fill="rgb(252,111,28)"/><text x="72.00" y="190.50"></text></g><g><title>PyArray_Transpose (shape.c:665) (1 samples, 0.19%)</title><rect x="69" y="196" width="2" height="15" fill="rgb(231,225,23)"/><text x="72.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.19%)</title><rect x="73" y="228" width="2" height="15" fill="rgb(240,119,54)"/><text x="76.00" y="238.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.19%)</title><rect x="73" y="244" width="2" height="15" fill="rgb(221,107,31)"/><text x="76.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c:195) (1 samples, 0.19%)</title><rect x="73" y="260" width="2" height="15" fill="rgb(212,57,15)"/><text x="76.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.19%)</title><rect x="75" y="276" width="3" height="15" fill="rgb(223,89,17)"/><text x="78.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1544) (1 samples, 0.19%)</title><rect x="75" y="292" width="3" height="15" fill="rgb(250,15,49)"/><text x="78.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.19%)</title><rect x="75" y="308" width="3" height="15" fill="rgb(251,49,28)"/><text x="78.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.39%)</title><rect x="75" y="260" width="5" height="15" fill="rgb(228,210,10)"/><text x="78.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.19%)</title><rect x="78" y="276" width="2" height="15" fill="rgb(218,11,42)"/><text x="81.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.19%)</title><rect x="78" y="292" width="2" height="15" fill="rgb(251,135,27)"/><text x="81.00" y="302.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.19%)</title><rect x="78" y="308" width="2" height="15" fill="rgb(205,159,43)"/><text x="81.00" y="318.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.19%)</title><rect x="78" y="324" width="2" height="15" fill="rgb(244,201,13)"/><text x="81.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (3 samples, 0.58%)</title><rect x="80" y="308" width="7" height="15" fill="rgb(218,118,2)"/><text x="83.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (2 samples, 0.39%)</title><rect x="87" y="308" width="4" height="15" fill="rgb(245,22,34)"/><text x="90.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (6 samples, 1.16%)</title><rect x="80" y="260" width="14" height="15" fill="rgb(228,195,15)"/><text x="83.00" y="270.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (6 samples, 1.16%)</title><rect x="80" y="276" width="14" height="15" fill="rgb(231,70,21)"/><text x="83.00" y="286.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (6 samples, 1.16%)</title><rect x="80" y="292" width="14" height="15" fill="rgb(208,211,45)"/><text x="83.00" y="302.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.19%)</title><rect x="91" y="308" width="3" height="15" fill="rgb(214,47,15)"/><text x="94.00" y="318.50"></text></g><g><title>0x7f6868b67d50 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="91" y="324" width="3" height="15" fill="rgb(242,110,40)"/><text x="94.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.19%)</title><rect x="94" y="308" width="2" height="15" fill="rgb(240,96,20)"/><text x="97.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.19%)</title><rect x="94" y="324" width="2" height="15" fill="rgb(241,14,41)"/><text x="97.00" y="334.50"></text></g><g><title>array_add (number.c:330) (11 samples, 2.12%)</title><rect x="73" y="196" width="25" height="15" fill="rgb(244,142,50)"/><text x="76.00" y="206.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.12%)</title><rect x="73" y="212" width="25" height="15" fill="rgb(240,72,53)"/><text x="76.00" y="222.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (10 samples, 1.93%)</title><rect x="75" y="228" width="23" height="15" fill="rgb(205,38,23)"/><text x="78.00" y="238.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (10 samples, 1.93%)</title><rect x="75" y="244" width="23" height="15" fill="rgb(228,36,42)"/><text x="78.00" y="254.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.39%)</title><rect x="94" y="260" width="4" height="15" fill="rgb(238,77,13)"/><text x="97.00" y="270.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.39%)</title><rect x="94" y="276" width="4" height="15" fill="rgb(208,226,17)"/><text x="97.00" y="286.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.39%)</title><rect x="94" y="292" width="4" height="15" fill="rgb(254,15,29)"/><text x="97.00" y="302.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="96" y="308" width="2" height="15" fill="rgb(206,38,7)"/><text x="99.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.19%)</title><rect x="96" y="324" width="2" height="15" fill="rgb(232,47,22)"/><text x="99.00" y="334.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="98" y="212" width="5" height="15" fill="rgb(253,40,9)"/><text x="101.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.58%)</title><rect x="103" y="212" width="7" height="15" fill="rgb(238,89,43)"/><text x="106.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="110" y="212" width="2" height="15" fill="rgb(208,224,2)"/><text x="113.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="110" y="228" width="2" height="15" fill="rgb(237,174,47)"/><text x="113.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="110" y="244" width="2" height="15" fill="rgb(213,191,16)"/><text x="113.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.19%)</title><rect x="110" y="260" width="2" height="15" fill="rgb(211,205,30)"/><text x="113.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.19%)</title><rect x="112" y="276" width="2" height="15" fill="rgb(247,199,7)"/><text x="115.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2684) (1 samples, 0.19%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(254,211,34)"/><text x="115.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="112" y="308" width="2" height="15" fill="rgb(211,202,15)"/><text x="115.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="112" y="324" width="2" height="15" fill="rgb(223,25,19)"/><text x="115.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="112" y="340" width="2" height="15" fill="rgb(248,73,49)"/><text x="115.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="112" y="356" width="2" height="15" fill="rgb(251,7,40)"/><text x="115.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="112" y="372" width="2" height="15" fill="rgb(220,90,36)"/><text x="115.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="112" y="388" width="2" height="15" fill="rgb(254,22,48)"/><text x="115.00" y="398.50"></text></g><g><title>0x7f6868b492a3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="112" y="404" width="2" height="15" fill="rgb(236,103,54)"/><text x="115.00" y="414.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (3 samples, 0.58%)</title><rect x="112" y="244" width="7" height="15" fill="rgb(214,16,33)"/><text x="115.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (3 samples, 0.58%)</title><rect x="112" y="260" width="7" height="15" fill="rgb(222,52,53)"/><text x="115.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (2 samples, 0.39%)</title><rect x="114" y="276" width="5" height="15" fill="rgb(221,192,52)"/><text x="117.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.39%)</title><rect x="114" y="292" width="5" height="15" fill="rgb(206,0,36)"/><text x="117.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.39%)</title><rect x="114" y="308" width="5" height="15" fill="rgb(206,216,35)"/><text x="117.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (2 samples, 0.39%)</title><rect x="114" y="324" width="5" height="15" fill="rgb(248,142,13)"/><text x="117.00" y="334.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2957) (1 samples, 0.19%)</title><rect x="119" y="244" width="2" height="15" fill="rgb(221,49,10)"/><text x="122.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c:165) (1 samples, 0.19%)</title><rect x="119" y="260" width="2" height="15" fill="rgb(244,22,9)"/><text x="122.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (2 samples, 0.39%)</title><rect x="121" y="244" width="4" height="15" fill="rgb(217,115,20)"/><text x="124.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:471) (2 samples, 0.39%)</title><rect x="121" y="260" width="4" height="15" fill="rgb(234,173,1)"/><text x="124.00" y="270.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="121" y="276" width="4" height="15" fill="rgb(205,49,44)"/><text x="124.00" y="286.50"></text></g><g><title>dgemm_nn (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="121" y="292" width="4" height="15" fill="rgb(209,175,9)"/><text x="124.00" y="302.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="121" y="308" width="4" height="15" fill="rgb(208,153,24)"/><text x="124.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (14 samples, 2.70%)</title><rect x="98" y="196" width="32" height="15" fill="rgb(237,185,42)"/><text x="101.00" y="206.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.54%)</title><rect x="112" y="212" width="18" height="15" fill="rgb(239,121,46)"/><text x="115.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (8 samples, 1.54%)</title><rect x="112" y="228" width="18" height="15" fill="rgb(232,36,32)"/><text x="115.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (2 samples, 0.39%)</title><rect x="125" y="244" width="5" height="15" fill="rgb(235,83,30)"/><text x="128.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (2 samples, 0.39%)</title><rect x="125" y="260" width="5" height="15" fill="rgb(220,91,5)"/><text x="128.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.19%)</title><rect x="128" y="276" width="2" height="15" fill="rgb(239,51,48)"/><text x="131.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.19%)</title><rect x="128" y="292" width="2" height="15" fill="rgb(211,150,0)"/><text x="131.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.19%)</title><rect x="128" y="308" width="2" height="15" fill="rgb(229,95,44)"/><text x="131.00" y="318.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:307) (48 samples, 9.25%)</title><rect x="25" y="164" width="110" height="15" fill="rgb(253,155,27)"/><text x="28.00" y="174.50">_predict_prob..</text></g><g><title>decision_function (sklearn/linear_model/_base.py:276) (28 samples, 5.39%)</title><rect x="71" y="180" width="64" height="15" fill="rgb(218,54,54)"/><text x="74.00" y="190.50">decisio..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (2 samples, 0.39%)</title><rect x="130" y="196" width="5" height="15" fill="rgb(228,168,13)"/><text x="133.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.19%)</title><rect x="132" y="212" width="3" height="15" fill="rgb(239,222,28)"/><text x="135.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1657) (1 samples, 0.19%)</title><rect x="135" y="212" width="2" height="15" fill="rgb(243,18,31)"/><text x="138.00" y="222.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.19%)</title><rect x="135" y="228" width="2" height="15" fill="rgb(235,187,40)"/><text x="138.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.19%)</title><rect x="135" y="244" width="2" height="15" fill="rgb(231,119,9)"/><text x="138.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c:551) (1 samples, 0.19%)</title><rect x="135" y="260" width="2" height="15" fill="rgb(206,2,10)"/><text x="138.00" y="270.50"></text></g><g><title>diophantine_precompute (mem_overlap.c:276) (1 samples, 0.19%)</title><rect x="135" y="276" width="2" height="15" fill="rgb(253,54,35)"/><text x="138.00" y="286.50"></text></g><g><title>safe_mul (npy_extint128.h:43) (1 samples, 0.19%)</title><rect x="135" y="292" width="2" height="15" fill="rgb(252,198,29)"/><text x="138.00" y="302.50"></text></g><g><title>0x7f6853e309da (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="137" y="244" width="4" height="15" fill="rgb(252,29,21)"/><text x="140.00" y="254.50"></text></g><g><title>0x7f6853e0efe0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="144" y="276" width="2" height="15" fill="rgb(226,170,22)"/><text x="147.00" y="286.50"></text></g><g><title>0x7f6853f5a9f0 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="146" y="276" width="2" height="15" fill="rgb(230,223,14)"/><text x="149.00" y="286.50"></text></g><g><title>0x7f6868d19be7 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="150" y="292" width="3" height="15" fill="rgb(237,7,27)"/><text x="153.00" y="302.50"></text></g><g><title>0x7f6868d19c07 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="153" y="292" width="2" height="15" fill="rgb(206,116,0)"/><text x="156.00" y="302.50"></text></g><g><title>0x7f6868d19c2e (libm-2.29.so) (1 samples, 0.19%)</title><rect x="155" y="292" width="2" height="15" fill="rgb(212,212,13)"/><text x="158.00" y="302.50"></text></g><g><title>0x7f6853e51265 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.54%)</title><rect x="141" y="260" width="19" height="15" fill="rgb(226,203,27)"/><text x="144.00" y="270.50"></text></g><g><title>exp (libm-2.29.so) (5 samples, 0.96%)</title><rect x="148" y="276" width="12" height="15" fill="rgb(241,54,45)"/><text x="151.00" y="286.50"></text></g><g><title>0x7f6868d19c7b (libm-2.29.so) (1 samples, 0.19%)</title><rect x="157" y="292" width="3" height="15" fill="rgb(210,224,0)"/><text x="160.00" y="302.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:308) (20 samples, 3.85%)</title><rect x="135" y="164" width="45" height="15" fill="rgb(218,59,12)"/><text x="138.00" y="174.50">_pre..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (20 samples, 3.85%)</title><rect x="135" y="180" width="45" height="15" fill="rgb(235,114,50)"/><text x="138.00" y="190.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (20 samples, 3.85%)</title><rect x="135" y="196" width="45" height="15" fill="rgb(240,62,16)"/><text x="138.00" y="206.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (19 samples, 3.66%)</title><rect x="137" y="212" width="43" height="15" fill="rgb(227,224,29)"/><text x="140.00" y="222.50">exec..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (19 samples, 3.66%)</title><rect x="137" y="228" width="43" height="15" fill="rgb(234,92,44)"/><text x="140.00" y="238.50">triv..</text></g><g><title>0x7f6853e309dd (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (17 samples, 3.28%)</title><rect x="141" y="244" width="39" height="15" fill="rgb(240,57,31)"/><text x="144.00" y="254.50">0x7..</text></g><g><title>0x7f6853e51279 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.73%)</title><rect x="160" y="260" width="20" height="15" fill="rgb(239,27,18)"/><text x="163.00" y="270.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="185" y="228" width="2" height="15" fill="rgb(236,168,25)"/><text x="188.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="185" y="244" width="2" height="15" fill="rgb(248,86,16)"/><text x="188.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="185" y="260" width="2" height="15" fill="rgb(227,18,40)"/><text x="188.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="185" y="276" width="2" height="15" fill="rgb(236,202,45)"/><text x="188.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="185" y="292" width="2" height="15" fill="rgb(225,37,23)"/><text x="188.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.19%)</title><rect x="185" y="308" width="2" height="15" fill="rgb(213,117,11)"/><text x="188.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.19%)</title><rect x="187" y="276" width="2" height="15" fill="rgb(249,142,17)"/><text x="190.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.19%)</title><rect x="187" y="292" width="2" height="15" fill="rgb(239,41,23)"/><text x="190.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.19%)</title><rect x="187" y="308" width="2" height="15" fill="rgb(235,53,38)"/><text x="190.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="187" y="324" width="2" height="15" fill="rgb(245,66,4)"/><text x="190.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="187" y="340" width="2" height="15" fill="rgb(245,92,24)"/><text x="190.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="187" y="356" width="2" height="15" fill="rgb(235,145,45)"/><text x="190.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.19%)</title><rect x="187" y="372" width="2" height="15" fill="rgb(218,59,53)"/><text x="190.00" y="382.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.19%)</title><rect x="189" y="324" width="2" height="15" fill="rgb(247,106,35)"/><text x="192.00" y="334.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3839) (1 samples, 0.19%)</title><rect x="189" y="340" width="2" height="15" fill="rgb(250,150,18)"/><text x="192.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.39%)</title><rect x="189" y="276" width="5" height="15" fill="rgb(218,161,40)"/><text x="192.00" y="286.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.39%)</title><rect x="189" y="292" width="5" height="15" fill="rgb(232,153,20)"/><text x="192.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.39%)</title><rect x="189" y="308" width="5" height="15" fill="rgb(229,114,9)"/><text x="192.00" y="318.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.19%)</title><rect x="191" y="324" width="3" height="15" fill="rgb(253,32,50)"/><text x="194.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:565) (1 samples, 0.19%)</title><rect x="194" y="276" width="2" height="15" fill="rgb(208,134,19)"/><text x="197.00" y="286.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.19%)</title><rect x="194" y="292" width="2" height="15" fill="rgb(236,117,53)"/><text x="197.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3533) (1 samples, 0.19%)</title><rect x="196" y="292" width="2" height="15" fill="rgb(237,36,35)"/><text x="199.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3536) (1 samples, 0.19%)</title><rect x="198" y="292" width="2" height="15" fill="rgb(205,198,43)"/><text x="201.00" y="302.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.19%)</title><rect x="200" y="292" width="3" height="15" fill="rgb(213,9,36)"/><text x="203.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="205" y="308" width="2" height="15" fill="rgb(230,74,4)"/><text x="208.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="207" y="308" width="3" height="15" fill="rgb(217,18,38)"/><text x="210.00" y="318.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="210" y="308" width="2" height="15" fill="rgb(225,107,42)"/><text x="213.00" y="318.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.19%)</title><rect x="212" y="308" width="2" height="15" fill="rgb(252,170,18)"/><text x="215.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 1.16%)</title><rect x="203" y="292" width="13" height="15" fill="rgb(244,25,35)"/><text x="206.00" y="302.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:243) (1 samples, 0.19%)</title><rect x="214" y="308" width="2" height="15" fill="rgb(237,213,28)"/><text x="217.00" y="318.50"></text></g><g><title>array_sum (methods.c:2215) (16 samples, 3.08%)</title><rect x="182" y="180" width="37" height="15" fill="rgb(208,11,7)"/><text x="185.00" y="190.50">arr..</text></g><g><title>forward_ndarray_method (methods.c:108) (16 samples, 3.08%)</title><rect x="182" y="196" width="37" height="15" fill="rgb(206,136,26)"/><text x="185.00" y="206.50">for..</text></g><g><title>_sum (numpy/core/_methods.py:38) (16 samples, 3.08%)</title><rect x="182" y="212" width="37" height="15" fill="rgb(241,104,26)"/><text x="185.00" y="222.50">_su..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (14 samples, 2.70%)</title><rect x="187" y="228" width="32" height="15" fill="rgb(234,210,18)"/><text x="190.00" y="238.50">uf..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (14 samples, 2.70%)</title><rect x="187" y="244" width="32" height="15" fill="rgb(249,190,27)"/><text x="190.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (14 samples, 2.70%)</title><rect x="187" y="260" width="32" height="15" fill="rgb(233,158,47)"/><text x="190.00" y="270.50">Py..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (10 samples, 1.93%)</title><rect x="196" y="276" width="23" height="15" fill="rgb(212,199,54)"/><text x="199.00" y="286.50">P..</text></g><g><title>reduce_loop (ufunc_object.c:3574) (1 samples, 0.19%)</title><rect x="216" y="292" width="3" height="15" fill="rgb(226,124,33)"/><text x="219.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="219" y="228" width="2" height="15" fill="rgb(211,81,45)"/><text x="222.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.19%)</title><rect x="219" y="244" width="2" height="15" fill="rgb(225,166,41)"/><text x="222.00" y="254.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="221" y="276" width="2" height="15" fill="rgb(226,73,33)"/><text x="224.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="223" y="276" width="2" height="15" fill="rgb(234,85,2)"/><text x="226.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.77%)</title><rect x="221" y="228" width="9" height="15" fill="rgb(240,141,13)"/><text x="224.00" y="238.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.77%)</title><rect x="221" y="244" width="9" height="15" fill="rgb(247,132,1)"/><text x="224.00" y="254.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.77%)</title><rect x="221" y="260" width="9" height="15" fill="rgb(238,152,36)"/><text x="224.00" y="270.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.39%)</title><rect x="225" y="276" width="5" height="15" fill="rgb(230,53,26)"/><text x="228.00" y="286.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.19%)</title><rect x="228" y="292" width="2" height="15" fill="rgb(225,65,21)"/><text x="231.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.19%)</title><rect x="230" y="228" width="2" height="15" fill="rgb(232,72,26)"/><text x="233.00" y="238.50"></text></g><g><title>DOUBLE_divide (loops.c.src:1755) (1 samples, 0.19%)</title><rect x="230" y="244" width="2" height="15" fill="rgb(214,180,30)"/><text x="233.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src:250) (1 samples, 0.19%)</title><rect x="230" y="260" width="2" height="15" fill="rgb(239,51,35)"/><text x="233.00" y="270.50"></text></g><g><title>sse2_binary_divide_DOUBLE (simd.inc.src:604) (1 samples, 0.19%)</title><rect x="230" y="276" width="2" height="15" fill="rgb(225,114,31)"/><text x="233.00" y="286.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.19%)</title><rect x="230" y="292" width="2" height="15" fill="rgb(252,23,34)"/><text x="233.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:38) (99 samples, 19.08%)</title><rect x="10" y="52" width="225" height="15" fill="rgb(245,224,45)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegre..</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:37) (99 samples, 19.08%)</title><rect x="10" y="68" width="225" height="15" fill="rgb(219,34,11)"/><text x="13.00" y="78.50">profile_skl (bench_LogisticRe..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:29) (99 samples, 19.08%)</title><rect x="10" y="84" width="225" height="15" fill="rgb(238,186,40)"/><text x="13.00" y="94.50">setup_profile (bench_Logistic..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:23) (96 samples, 18.50%)</title><rect x="16" y="100" width="219" height="15" fill="rgb(236,149,24)"/><text x="19.00" y="110.50">profile (bench_LogisticRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (96 samples, 18.50%)</title><rect x="16" y="116" width="219" height="15" fill="rgb(210,208,25)"/><text x="19.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:227) (96 samples, 18.50%)</title><rect x="16" y="132" width="219" height="15" fill="rgb(228,132,12)"/><text x="19.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py:1649) (93 samples, 17.92%)</title><rect x="23" y="148" width="212" height="15" fill="rgb(218,33,40)"/><text x="26.00" y="158.50">predict_proba (sklearn/line..</text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py:313) (24 samples, 4.62%)</title><rect x="180" y="164" width="55" height="15" fill="rgb(229,157,18)"/><text x="183.00" y="174.50">_pred..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.35%)</title><rect x="219" y="180" width="16" height="15" fill="rgb(235,41,52)"/><text x="222.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.35%)</title><rect x="219" y="196" width="16" height="15" fill="rgb(246,88,4)"/><text x="222.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.35%)</title><rect x="219" y="212" width="16" height="15" fill="rgb(218,78,14)"/><text x="222.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="232" y="228" width="3" height="15" fill="rgb(253,220,46)"/><text x="235.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="232" y="244" width="3" height="15" fill="rgb(205,220,53)"/><text x="235.00" y="254.50"></text></g><g><title>0x7f6868b47f71 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="232" y="260" width="3" height="15" fill="rgb(245,161,9)"/><text x="235.00" y="270.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:1) (1 samples, 0.19%)</title><rect x="235" y="148" width="2" height="15" fill="rgb(208,110,53)"/><text x="238.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="235" y="164" width="2" height="15" fill="rgb(219,216,25)"/><text x="238.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="235" y="180" width="2" height="15" fill="rgb(223,24,19)"/><text x="238.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="235" y="196" width="2" height="15" fill="rgb(248,222,10)"/><text x="238.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="235" y="212" width="2" height="15" fill="rgb(229,159,23)"/><text x="238.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="235" y="228" width="2" height="15" fill="rgb(235,137,38)"/><text x="238.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.19%)</title><rect x="235" y="244" width="2" height="15" fill="rgb(205,31,5)"/><text x="238.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(213,119,15)"/><text x="238.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="235" y="276" width="2" height="15" fill="rgb(235,163,3)"/><text x="238.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:671) (1 samples, 0.19%)</title><rect x="235" y="292" width="2" height="15" fill="rgb(253,7,20)"/><text x="238.00" y="302.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:315) (1 samples, 0.19%)</title><rect x="235" y="308" width="2" height="15" fill="rgb(227,141,40)"/><text x="238.00" y="318.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.19%)</title><rect x="237" y="932" width="2" height="15" fill="rgb(210,26,46)"/><text x="240.00" y="942.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.19%)</title><rect x="237" y="948" width="2" height="15" fill="rgb(235,39,19)"/><text x="240.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.19%)</title><rect x="237" y="964" width="2" height="15" fill="rgb(213,154,49)"/><text x="240.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.39%)</title><rect x="237" y="852" width="4" height="15" fill="rgb(237,71,4)"/><text x="240.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.39%)</title><rect x="237" y="868" width="4" height="15" fill="rgb(251,227,20)"/><text x="240.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.39%)</title><rect x="237" y="884" width="4" height="15" fill="rgb(228,91,41)"/><text x="240.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.39%)</title><rect x="237" y="900" width="4" height="15" fill="rgb(211,125,54)"/><text x="240.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.39%)</title><rect x="237" y="916" width="4" height="15" fill="rgb(212,36,9)"/><text x="240.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.19%)</title><rect x="239" y="932" width="2" height="15" fill="rgb(223,67,12)"/><text x="242.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.19%)</title><rect x="239" y="948" width="2" height="15" fill="rgb(216,42,11)"/><text x="242.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.19%)</title><rect x="239" y="964" width="2" height="15" fill="rgb(231,56,7)"/><text x="242.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.19%)</title><rect x="239" y="980" width="2" height="15" fill="rgb(218,16,35)"/><text x="242.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:213) (1 samples, 0.19%)</title><rect x="239" y="996" width="2" height="15" fill="rgb(244,70,43)"/><text x="242.00" y="1006.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.19%)</title><rect x="239" y="1012" width="2" height="15" fill="rgb(226,149,26)"/><text x="242.00" y="1022.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.19%)</title><rect x="241" y="948" width="3" height="15" fill="rgb(212,93,11)"/><text x="244.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.19%)</title><rect x="241" y="964" width="3" height="15" fill="rgb(253,87,35)"/><text x="244.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.19%)</title><rect x="241" y="980" width="3" height="15" fill="rgb(229,136,38)"/><text x="244.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.19%)</title><rect x="241" y="996" width="3" height="15" fill="rgb(216,131,31)"/><text x="244.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.19%)</title><rect x="241" y="1012" width="3" height="15" fill="rgb(246,25,54)"/><text x="244.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.19%)</title><rect x="241" y="1028" width="3" height="15" fill="rgb(212,144,31)"/><text x="244.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.19%)</title><rect x="241" y="1044" width="3" height="15" fill="rgb(234,180,20)"/><text x="244.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:2) (4 samples, 0.77%)</title><rect x="237" y="148" width="9" height="15" fill="rgb(222,210,49)"/><text x="240.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="164" width="9" height="15" fill="rgb(219,158,11)"/><text x="240.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.77%)</title><rect x="237" y="180" width="9" height="15" fill="rgb(245,26,10)"/><text x="240.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="196" width="9" height="15" fill="rgb(243,212,12)"/><text x="240.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="212" width="9" height="15" fill="rgb(250,223,13)"/><text x="240.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="228" width="9" height="15" fill="rgb(225,104,27)"/><text x="240.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="244" width="9" height="15" fill="rgb(245,226,13)"/><text x="240.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="260" width="9" height="15" fill="rgb(227,206,13)"/><text x="240.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="276" width="9" height="15" fill="rgb(247,150,39)"/><text x="240.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.77%)</title><rect x="237" y="292" width="9" height="15" fill="rgb(239,101,48)"/><text x="240.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="308" width="9" height="15" fill="rgb(244,109,6)"/><text x="240.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="324" width="9" height="15" fill="rgb(251,6,48)"/><text x="240.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="340" width="9" height="15" fill="rgb(214,211,17)"/><text x="240.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="356" width="9" height="15" fill="rgb(248,223,37)"/><text x="240.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="372" width="9" height="15" fill="rgb(207,61,47)"/><text x="240.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.77%)</title><rect x="237" y="388" width="9" height="15" fill="rgb(232,173,19)"/><text x="240.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="404" width="9" height="15" fill="rgb(215,87,17)"/><text x="240.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="420" width="9" height="15" fill="rgb(234,150,45)"/><text x="240.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="436" width="9" height="15" fill="rgb(209,87,20)"/><text x="240.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="452" width="9" height="15" fill="rgb(230,149,10)"/><text x="240.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="468" width="9" height="15" fill="rgb(254,58,45)"/><text x="240.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.77%)</title><rect x="237" y="484" width="9" height="15" fill="rgb(214,9,21)"/><text x="240.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="500" width="9" height="15" fill="rgb(247,132,3)"/><text x="240.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="516" width="9" height="15" fill="rgb(233,202,16)"/><text x="240.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="532" width="9" height="15" fill="rgb(223,221,4)"/><text x="240.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="548" width="9" height="15" fill="rgb(215,58,25)"/><text x="240.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="564" width="9" height="15" fill="rgb(247,78,7)"/><text x="240.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.77%)</title><rect x="237" y="580" width="9" height="15" fill="rgb(232,99,47)"/><text x="240.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="596" width="9" height="15" fill="rgb(222,106,34)"/><text x="240.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.77%)</title><rect x="237" y="612" width="9" height="15" fill="rgb(216,140,39)"/><text x="240.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="628" width="9" height="15" fill="rgb(223,228,47)"/><text x="240.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="644" width="9" height="15" fill="rgb(208,131,26)"/><text x="240.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="660" width="9" height="15" fill="rgb(213,21,20)"/><text x="240.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="676" width="9" height="15" fill="rgb(241,55,9)"/><text x="240.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="692" width="9" height="15" fill="rgb(250,127,49)"/><text x="240.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="708" width="9" height="15" fill="rgb(242,196,44)"/><text x="240.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.77%)</title><rect x="237" y="724" width="9" height="15" fill="rgb(212,53,34)"/><text x="240.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.77%)</title><rect x="237" y="740" width="9" height="15" fill="rgb(208,112,4)"/><text x="240.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.77%)</title><rect x="237" y="756" width="9" height="15" fill="rgb(207,210,46)"/><text x="240.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.77%)</title><rect x="237" y="772" width="9" height="15" fill="rgb(246,206,37)"/><text x="240.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.77%)</title><rect x="237" y="788" width="9" height="15" fill="rgb(254,227,49)"/><text x="240.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.77%)</title><rect x="237" y="804" width="9" height="15" fill="rgb(248,199,49)"/><text x="240.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.77%)</title><rect x="237" y="820" width="9" height="15" fill="rgb(249,161,39)"/><text x="240.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.77%)</title><rect x="237" y="836" width="9" height="15" fill="rgb(216,50,13)"/><text x="240.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.39%)</title><rect x="241" y="852" width="5" height="15" fill="rgb(207,180,31)"/><text x="244.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.39%)</title><rect x="241" y="868" width="5" height="15" fill="rgb(249,10,53)"/><text x="244.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.39%)</title><rect x="241" y="884" width="5" height="15" fill="rgb(231,32,7)"/><text x="244.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.39%)</title><rect x="241" y="900" width="5" height="15" fill="rgb(237,147,20)"/><text x="244.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.39%)</title><rect x="241" y="916" width="5" height="15" fill="rgb(219,117,21)"/><text x="244.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.39%)</title><rect x="241" y="932" width="5" height="15" fill="rgb(216,109,17)"/><text x="244.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1349) (1 samples, 0.19%)</title><rect x="244" y="948" width="2" height="15" fill="rgb(230,41,47)"/><text x="247.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.19%)</title><rect x="246" y="484" width="2" height="15" fill="rgb(213,163,23)"/><text x="249.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="246" y="500" width="2" height="15" fill="rgb(217,149,6)"/><text x="249.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="246" y="516" width="2" height="15" fill="rgb(233,47,51)"/><text x="249.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="246" y="532" width="2" height="15" fill="rgb(254,222,12)"/><text x="249.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="246" y="548" width="2" height="15" fill="rgb(235,189,29)"/><text x="249.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="246" y="564" width="2" height="15" fill="rgb(236,190,18)"/><text x="249.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="246" y="580" width="2" height="15" fill="rgb(208,120,9)"/><text x="249.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="246" y="596" width="2" height="15" fill="rgb(212,133,21)"/><text x="249.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.19%)</title><rect x="246" y="612" width="2" height="15" fill="rgb(220,175,34)"/><text x="249.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="246" y="628" width="2" height="15" fill="rgb(214,58,33)"/><text x="249.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="246" y="644" width="2" height="15" fill="rgb(231,77,6)"/><text x="249.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="246" y="660" width="2" height="15" fill="rgb(223,10,49)"/><text x="249.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="246" y="676" width="2" height="15" fill="rgb(210,31,8)"/><text x="249.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="246" y="692" width="2" height="15" fill="rgb(230,32,13)"/><text x="249.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:113) (1 samples, 0.19%)</title><rect x="246" y="708" width="2" height="15" fill="rgb(228,65,13)"/><text x="249.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="246" y="724" width="2" height="15" fill="rgb(209,116,51)"/><text x="249.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="246" y="740" width="2" height="15" fill="rgb(223,173,44)"/><text x="249.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="246" y="756" width="2" height="15" fill="rgb(228,44,7)"/><text x="249.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="246" y="772" width="2" height="15" fill="rgb(230,178,4)"/><text x="249.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="246" y="788" width="2" height="15" fill="rgb(233,62,13)"/><text x="249.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py:26) (1 samples, 0.19%)</title><rect x="246" y="804" width="2" height="15" fill="rgb(206,182,28)"/><text x="249.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="246" y="820" width="2" height="15" fill="rgb(236,0,7)"/><text x="249.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="246" y="836" width="2" height="15" fill="rgb(216,215,27)"/><text x="249.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="246" y="852" width="2" height="15" fill="rgb(251,160,20)"/><text x="249.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="246" y="868" width="2" height="15" fill="rgb(211,98,37)"/><text x="249.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="246" y="884" width="2" height="15" fill="rgb(223,225,18)"/><text x="249.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/func_inspect.py:18) (1 samples, 0.19%)</title><rect x="246" y="900" width="2" height="15" fill="rgb(233,213,3)"/><text x="249.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.19%)</title><rect x="246" y="916" width="2" height="15" fill="rgb(229,206,44)"/><text x="249.00" y="926.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.19%)</title><rect x="246" y="932" width="2" height="15" fill="rgb(218,180,5)"/><text x="249.00" y="942.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:88) (1 samples, 0.19%)</title><rect x="246" y="948" width="2" height="15" fill="rgb(253,38,45)"/><text x="249.00" y="958.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.19%)</title><rect x="246" y="964" width="2" height="15" fill="rgb(232,47,2)"/><text x="249.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.39%)</title><rect x="246" y="180" width="5" height="15" fill="rgb(223,59,6)"/><text x="249.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="246" y="196" width="5" height="15" fill="rgb(219,157,40)"/><text x="249.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="246" y="212" width="5" height="15" fill="rgb(215,187,21)"/><text x="249.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="246" y="228" width="5" height="15" fill="rgb(230,217,3)"/><text x="249.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="246" y="244" width="5" height="15" fill="rgb(254,19,12)"/><text x="249.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="246" y="260" width="5" height="15" fill="rgb(247,116,41)"/><text x="249.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="246" y="276" width="5" height="15" fill="rgb(214,5,25)"/><text x="249.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.39%)</title><rect x="246" y="292" width="5" height="15" fill="rgb(216,192,25)"/><text x="249.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="246" y="308" width="5" height="15" fill="rgb(228,153,19)"/><text x="249.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="246" y="324" width="5" height="15" fill="rgb(239,130,2)"/><text x="249.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="246" y="340" width="5" height="15" fill="rgb(254,83,35)"/><text x="249.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="246" y="356" width="5" height="15" fill="rgb(229,60,12)"/><text x="249.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="246" y="372" width="5" height="15" fill="rgb(243,206,16)"/><text x="249.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.39%)</title><rect x="246" y="388" width="5" height="15" fill="rgb(241,12,31)"/><text x="249.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="246" y="404" width="5" height="15" fill="rgb(226,197,45)"/><text x="249.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="246" y="420" width="5" height="15" fill="rgb(223,100,31)"/><text x="249.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="246" y="436" width="5" height="15" fill="rgb(240,187,46)"/><text x="249.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="246" y="452" width="5" height="15" fill="rgb(242,222,46)"/><text x="249.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="246" y="468" width="5" height="15" fill="rgb(222,106,50)"/><text x="249.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.19%)</title><rect x="248" y="484" width="3" height="15" fill="rgb(224,125,17)"/><text x="251.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="248" y="500" width="3" height="15" fill="rgb(251,34,41)"/><text x="251.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="248" y="516" width="3" height="15" fill="rgb(248,117,35)"/><text x="251.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="248" y="532" width="3" height="15" fill="rgb(247,85,40)"/><text x="251.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="248" y="548" width="3" height="15" fill="rgb(243,170,46)"/><text x="251.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="564" width="3" height="15" fill="rgb(225,229,27)"/><text x="251.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.19%)</title><rect x="248" y="580" width="3" height="15" fill="rgb(236,160,41)"/><text x="251.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="248" y="596" width="3" height="15" fill="rgb(246,86,15)"/><text x="251.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="248" y="612" width="3" height="15" fill="rgb(238,105,35)"/><text x="251.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="248" y="628" width="3" height="15" fill="rgb(206,16,30)"/><text x="251.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="248" y="644" width="3" height="15" fill="rgb(214,227,31)"/><text x="251.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="660" width="3" height="15" fill="rgb(253,128,9)"/><text x="251.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.19%)</title><rect x="248" y="676" width="3" height="15" fill="rgb(207,127,5)"/><text x="251.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="248" y="692" width="3" height="15" fill="rgb(217,201,16)"/><text x="251.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="248" y="708" width="3" height="15" fill="rgb(230,64,21)"/><text x="251.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="248" y="724" width="3" height="15" fill="rgb(218,57,40)"/><text x="251.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="248" y="740" width="3" height="15" fill="rgb(209,131,7)"/><text x="251.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="756" width="3" height="15" fill="rgb(247,25,45)"/><text x="251.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.19%)</title><rect x="248" y="772" width="3" height="15" fill="rgb(229,67,18)"/><text x="251.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="248" y="788" width="3" height="15" fill="rgb(224,166,40)"/><text x="251.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="804" width="3" height="15" fill="rgb(229,12,12)"/><text x="251.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="248" y="820" width="3" height="15" fill="rgb(215,160,9)"/><text x="251.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="248" y="836" width="3" height="15" fill="rgb(251,158,8)"/><text x="251.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="248" y="852" width="3" height="15" fill="rgb(236,31,19)"/><text x="251.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="248" y="868" width="3" height="15" fill="rgb(244,104,24)"/><text x="251.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="884" width="3" height="15" fill="rgb(239,106,18)"/><text x="251.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.19%)</title><rect x="248" y="900" width="3" height="15" fill="rgb(244,105,8)"/><text x="251.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="248" y="916" width="3" height="15" fill="rgb(208,40,18)"/><text x="251.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="932" width="3" height="15" fill="rgb(208,107,35)"/><text x="251.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="248" y="948" width="3" height="15" fill="rgb(231,105,37)"/><text x="251.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="248" y="964" width="3" height="15" fill="rgb(230,27,48)"/><text x="251.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="248" y="980" width="3" height="15" fill="rgb(231,108,4)"/><text x="251.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="248" y="996" width="3" height="15" fill="rgb(252,162,22)"/><text x="251.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="248" y="1012" width="3" height="15" fill="rgb(249,39,24)"/><text x="251.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:872) (1 samples, 0.19%)</title><rect x="248" y="1028" width="3" height="15" fill="rgb(227,6,48)"/><text x="251.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1587) (1 samples, 0.19%)</title><rect x="248" y="1044" width="3" height="15" fill="rgb(230,50,32)"/><text x="251.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:4) (3 samples, 0.58%)</title><rect x="246" y="148" width="7" height="15" fill="rgb(206,54,24)"/><text x="249.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.58%)</title><rect x="246" y="164" width="7" height="15" fill="rgb(234,63,37)"/><text x="249.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="251" y="180" width="2" height="15" fill="rgb(225,117,17)"/><text x="254.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="251" y="196" width="2" height="15" fill="rgb(254,110,1)"/><text x="254.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="251" y="212" width="2" height="15" fill="rgb(247,146,33)"/><text x="254.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="251" y="228" width="2" height="15" fill="rgb(241,77,35)"/><text x="254.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py:23) (1 samples, 0.19%)</title><rect x="251" y="244" width="2" height="15" fill="rgb(244,21,2)"/><text x="254.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="251" y="260" width="2" height="15" fill="rgb(215,83,31)"/><text x="254.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="251" y="276" width="2" height="15" fill="rgb(219,196,29)"/><text x="254.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="251" y="292" width="2" height="15" fill="rgb(247,12,33)"/><text x="254.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="251" y="308" width="2" height="15" fill="rgb(237,128,10)"/><text x="254.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="251" y="324" width="2" height="15" fill="rgb(226,209,24)"/><text x="254.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_logistic.py:24) (1 samples, 0.19%)</title><rect x="251" y="340" width="2" height="15" fill="rgb(249,121,14)"/><text x="254.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="251" y="356" width="2" height="15" fill="rgb(250,32,19)"/><text x="254.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="251" y="372" width="2" height="15" fill="rgb(231,67,15)"/><text x="254.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="251" y="388" width="2" height="15" fill="rgb(252,228,50)"/><text x="254.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="251" y="404" width="2" height="15" fill="rgb(206,40,48)"/><text x="254.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.19%)</title><rect x="251" y="420" width="2" height="15" fill="rgb(253,8,19)"/><text x="254.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.19%)</title><rect x="251" y="436" width="2" height="15" fill="rgb(225,87,43)"/><text x="254.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.19%)</title><rect x="251" y="452" width="2" height="15" fill="rgb(239,173,5)"/><text x="254.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.19%)</title><rect x="251" y="468" width="2" height="15" fill="rgb(212,219,42)"/><text x="254.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.19%)</title><rect x="251" y="484" width="2" height="15" fill="rgb(252,170,0)"/><text x="254.00" y="494.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.19%)</title><rect x="251" y="500" width="2" height="15" fill="rgb(216,132,1)"/><text x="254.00" y="510.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="251" y="516" width="2" height="15" fill="rgb(215,10,31)"/><text x="254.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.19%)</title><rect x="253" y="244" width="2" height="15" fill="rgb(233,119,51)"/><text x="256.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="260" width="2" height="15" fill="rgb(241,79,39)"/><text x="256.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="276" width="2" height="15" fill="rgb(239,214,46)"/><text x="256.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="292" width="2" height="15" fill="rgb(206,68,13)"/><text x="256.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="308" width="2" height="15" fill="rgb(225,197,19)"/><text x="256.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="324" width="2" height="15" fill="rgb(223,201,27)"/><text x="256.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.19%)</title><rect x="253" y="340" width="2" height="15" fill="rgb(217,15,37)"/><text x="256.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="356" width="2" height="15" fill="rgb(206,158,51)"/><text x="256.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.19%)</title><rect x="253" y="372" width="2" height="15" fill="rgb(218,58,5)"/><text x="256.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="388" width="2" height="15" fill="rgb(238,112,2)"/><text x="256.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="404" width="2" height="15" fill="rgb(248,38,13)"/><text x="256.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="420" width="2" height="15" fill="rgb(254,94,38)"/><text x="256.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="436" width="2" height="15" fill="rgb(237,146,8)"/><text x="256.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="452" width="2" height="15" fill="rgb(235,185,12)"/><text x="256.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="468" width="2" height="15" fill="rgb(237,83,13)"/><text x="256.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.19%)</title><rect x="253" y="484" width="2" height="15" fill="rgb(207,220,40)"/><text x="256.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="500" width="2" height="15" fill="rgb(220,21,11)"/><text x="256.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="516" width="2" height="15" fill="rgb(216,23,39)"/><text x="256.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="532" width="2" height="15" fill="rgb(251,59,1)"/><text x="256.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="548" width="2" height="15" fill="rgb(238,211,47)"/><text x="256.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="564" width="2" height="15" fill="rgb(251,211,13)"/><text x="256.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.19%)</title><rect x="253" y="580" width="2" height="15" fill="rgb(247,22,8)"/><text x="256.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="596" width="2" height="15" fill="rgb(245,156,18)"/><text x="256.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="612" width="2" height="15" fill="rgb(213,136,18)"/><text x="256.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="628" width="2" height="15" fill="rgb(236,1,34)"/><text x="256.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="644" width="2" height="15" fill="rgb(222,92,51)"/><text x="256.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="660" width="2" height="15" fill="rgb(213,74,17)"/><text x="256.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.19%)</title><rect x="253" y="676" width="2" height="15" fill="rgb(217,62,5)"/><text x="256.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="692" width="2" height="15" fill="rgb(223,183,16)"/><text x="256.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="708" width="2" height="15" fill="rgb(206,187,45)"/><text x="256.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="724" width="2" height="15" fill="rgb(225,89,11)"/><text x="256.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="740" width="2" height="15" fill="rgb(209,111,25)"/><text x="256.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="756" width="2" height="15" fill="rgb(247,39,50)"/><text x="256.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.19%)</title><rect x="253" y="772" width="2" height="15" fill="rgb(251,148,24)"/><text x="256.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="253" y="788" width="2" height="15" fill="rgb(221,29,19)"/><text x="256.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="804" width="2" height="15" fill="rgb(237,16,45)"/><text x="256.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="820" width="2" height="15" fill="rgb(236,77,22)"/><text x="256.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="836" width="2" height="15" fill="rgb(245,198,9)"/><text x="256.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="852" width="2" height="15" fill="rgb(215,198,37)"/><text x="256.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="868" width="2" height="15" fill="rgb(245,226,20)"/><text x="256.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="884" width="2" height="15" fill="rgb(225,223,9)"/><text x="256.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.19%)</title><rect x="253" y="900" width="2" height="15" fill="rgb(237,71,2)"/><text x="256.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="916" width="2" height="15" fill="rgb(221,150,33)"/><text x="256.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="932" width="2" height="15" fill="rgb(227,21,13)"/><text x="256.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="948" width="2" height="15" fill="rgb(207,188,21)"/><text x="256.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="964" width="2" height="15" fill="rgb(223,122,49)"/><text x="256.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="980" width="2" height="15" fill="rgb(249,160,22)"/><text x="256.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.19%)</title><rect x="253" y="996" width="2" height="15" fill="rgb(207,106,19)"/><text x="256.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="1012" width="2" height="15" fill="rgb(251,226,19)"/><text x="256.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="1028" width="2" height="15" fill="rgb(220,75,30)"/><text x="256.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="1044" width="2" height="15" fill="rgb(236,53,0)"/><text x="256.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="1060" width="2" height="15" fill="rgb(217,155,23)"/><text x="256.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="1076" width="2" height="15" fill="rgb(231,62,8)"/><text x="256.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:44) (1 samples, 0.19%)</title><rect x="253" y="1092" width="2" height="15" fill="rgb(216,81,38)"/><text x="256.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="253" y="1108" width="2" height="15" fill="rgb(221,80,37)"/><text x="256.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="253" y="1124" width="2" height="15" fill="rgb(254,177,31)"/><text x="256.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="253" y="1140" width="2" height="15" fill="rgb(224,15,30)"/><text x="256.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="253" y="1156" width="2" height="15" fill="rgb(247,137,41)"/><text x="256.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="253" y="1172" width="2" height="15" fill="rgb(234,149,33)"/><text x="256.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ed448.py:81) (1 samples, 0.19%)</title><rect x="253" y="1188" width="2" height="15" fill="rgb(250,187,30)"/><text x="256.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.19%)</title><rect x="253" y="1204" width="2" height="15" fill="rgb(224,212,11)"/><text x="256.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.19%)</title><rect x="253" y="1220" width="2" height="15" fill="rgb(240,216,17)"/><text x="256.00" y="1230.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.19%)</title><rect x="253" y="1236" width="2" height="15" fill="rgb(243,110,7)"/><text x="256.00" y="1246.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.19%)</title><rect x="253" y="1252" width="2" height="15" fill="rgb(244,142,41)"/><text x="256.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py:2226) (1 samples, 0.19%)</title><rect x="253" y="1268" width="2" height="15" fill="rgb(240,194,43)"/><text x="256.00" y="1278.50"></text></g><g><title>unwrap (inspect.py:511) (1 samples, 0.19%)</title><rect x="253" y="1284" width="2" height="15" fill="rgb(221,185,13)"/><text x="256.00" y="1294.50"></text></g><g><title>_is_wrapper (inspect.py:505) (1 samples, 0.19%)</title><rect x="253" y="1300" width="2" height="15" fill="rgb(208,40,23)"/><text x="256.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:104) (1 samples, 0.19%)</title><rect x="255" y="1012" width="2" height="15" fill="rgb(241,218,4)"/><text x="258.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="255" y="1028" width="2" height="15" fill="rgb(214,206,21)"/><text x="258.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="255" y="1044" width="2" height="15" fill="rgb(252,107,18)"/><text x="258.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="255" y="1060" width="2" height="15" fill="rgb(232,7,49)"/><text x="258.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="255" y="1076" width="2" height="15" fill="rgb(218,101,44)"/><text x="258.00" y="1086.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.19%)</title><rect x="255" y="1092" width="2" height="15" fill="rgb(226,170,36)"/><text x="258.00" y="1102.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.19%)</title><rect x="255" y="1108" width="2" height="15" fill="rgb(245,117,16)"/><text x="258.00" y="1118.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="255" y="1124" width="2" height="15" fill="rgb(219,111,29)"/><text x="258.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.39%)</title><rect x="255" y="436" width="5" height="15" fill="rgb(219,200,18)"/><text x="258.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="452" width="5" height="15" fill="rgb(215,7,54)"/><text x="258.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="468" width="5" height="15" fill="rgb(241,156,34)"/><text x="258.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="484" width="5" height="15" fill="rgb(226,28,22)"/><text x="258.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="500" width="5" height="15" fill="rgb(215,46,27)"/><text x="258.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="516" width="5" height="15" fill="rgb(223,28,34)"/><text x="258.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.39%)</title><rect x="255" y="532" width="5" height="15" fill="rgb(242,199,53)"/><text x="258.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="548" width="5" height="15" fill="rgb(248,199,6)"/><text x="258.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="564" width="5" height="15" fill="rgb(240,94,3)"/><text x="258.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="580" width="5" height="15" fill="rgb(246,55,22)"/><text x="258.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="596" width="5" height="15" fill="rgb(228,7,53)"/><text x="258.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="612" width="5" height="15" fill="rgb(247,167,54)"/><text x="258.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.39%)</title><rect x="255" y="628" width="5" height="15" fill="rgb(235,99,5)"/><text x="258.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="644" width="5" height="15" fill="rgb(237,18,30)"/><text x="258.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="660" width="5" height="15" fill="rgb(240,117,18)"/><text x="258.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="676" width="5" height="15" fill="rgb(210,138,4)"/><text x="258.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="692" width="5" height="15" fill="rgb(224,215,13)"/><text x="258.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="708" width="5" height="15" fill="rgb(221,48,0)"/><text x="258.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.39%)</title><rect x="255" y="724" width="5" height="15" fill="rgb(218,63,45)"/><text x="258.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="740" width="5" height="15" fill="rgb(251,88,49)"/><text x="258.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="756" width="5" height="15" fill="rgb(239,141,48)"/><text x="258.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="772" width="5" height="15" fill="rgb(224,146,3)"/><text x="258.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="788" width="5" height="15" fill="rgb(227,214,49)"/><text x="258.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="804" width="5" height="15" fill="rgb(239,201,48)"/><text x="258.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.39%)</title><rect x="255" y="820" width="5" height="15" fill="rgb(232,128,26)"/><text x="258.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="836" width="5" height="15" fill="rgb(244,214,11)"/><text x="258.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="852" width="5" height="15" fill="rgb(222,52,50)"/><text x="258.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="868" width="5" height="15" fill="rgb(228,92,4)"/><text x="258.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="884" width="5" height="15" fill="rgb(213,140,0)"/><text x="258.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="900" width="5" height="15" fill="rgb(226,32,19)"/><text x="258.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.39%)</title><rect x="255" y="916" width="5" height="15" fill="rgb(212,153,3)"/><text x="258.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="255" y="932" width="5" height="15" fill="rgb(235,142,7)"/><text x="258.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="255" y="948" width="5" height="15" fill="rgb(253,141,22)"/><text x="258.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="255" y="964" width="5" height="15" fill="rgb(232,106,6)"/><text x="258.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="255" y="980" width="5" height="15" fill="rgb(243,223,31)"/><text x="258.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="255" y="996" width="5" height="15" fill="rgb(240,68,47)"/><text x="258.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.19%)</title><rect x="257" y="1012" width="3" height="15" fill="rgb(208,6,42)"/><text x="260.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1028" width="3" height="15" fill="rgb(220,166,16)"/><text x="260.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1044" width="3" height="15" fill="rgb(211,44,40)"/><text x="260.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1060" width="3" height="15" fill="rgb(229,159,25)"/><text x="260.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1076" width="3" height="15" fill="rgb(247,95,41)"/><text x="260.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1092" width="3" height="15" fill="rgb(214,110,24)"/><text x="260.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.19%)</title><rect x="257" y="1108" width="3" height="15" fill="rgb(243,220,9)"/><text x="260.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1124" width="3" height="15" fill="rgb(218,43,50)"/><text x="260.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1140" width="3" height="15" fill="rgb(229,192,47)"/><text x="260.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1156" width="3" height="15" fill="rgb(228,181,40)"/><text x="260.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1172" width="3" height="15" fill="rgb(228,35,47)"/><text x="260.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1188" width="3" height="15" fill="rgb(239,126,50)"/><text x="260.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.19%)</title><rect x="257" y="1204" width="3" height="15" fill="rgb(235,15,17)"/><text x="260.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1220" width="3" height="15" fill="rgb(210,193,30)"/><text x="260.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1236" width="3" height="15" fill="rgb(247,61,44)"/><text x="260.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1252" width="3" height="15" fill="rgb(237,19,44)"/><text x="260.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1268" width="3" height="15" fill="rgb(210,38,52)"/><text x="260.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1284" width="3" height="15" fill="rgb(252,5,25)"/><text x="260.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.19%)</title><rect x="257" y="1300" width="3" height="15" fill="rgb(226,23,31)"/><text x="260.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1316" width="3" height="15" fill="rgb(247,206,29)"/><text x="260.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1332" width="3" height="15" fill="rgb(233,220,47)"/><text x="260.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1348" width="3" height="15" fill="rgb(236,164,30)"/><text x="260.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1364" width="3" height="15" fill="rgb(235,73,9)"/><text x="260.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1380" width="3" height="15" fill="rgb(226,102,34)"/><text x="260.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.19%)</title><rect x="257" y="1396" width="3" height="15" fill="rgb(211,74,26)"/><text x="260.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1412" width="3" height="15" fill="rgb(221,105,41)"/><text x="260.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1428" width="3" height="15" fill="rgb(223,176,44)"/><text x="260.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1444" width="3" height="15" fill="rgb(225,213,18)"/><text x="260.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1460" width="3" height="15" fill="rgb(216,197,9)"/><text x="260.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1476" width="3" height="15" fill="rgb(224,148,33)"/><text x="260.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.19%)</title><rect x="257" y="1492" width="3" height="15" fill="rgb(240,11,20)"/><text x="260.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1508" width="3" height="15" fill="rgb(237,146,5)"/><text x="260.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1524" width="3" height="15" fill="rgb(208,139,35)"/><text x="260.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1540" width="3" height="15" fill="rgb(243,147,46)"/><text x="260.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1556" width="3" height="15" fill="rgb(252,139,46)"/><text x="260.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1572" width="3" height="15" fill="rgb(227,37,17)"/><text x="260.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.19%)</title><rect x="257" y="1588" width="3" height="15" fill="rgb(212,83,32)"/><text x="260.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1604" width="3" height="15" fill="rgb(231,224,21)"/><text x="260.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1620" width="3" height="15" fill="rgb(207,28,28)"/><text x="260.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1636" width="3" height="15" fill="rgb(231,78,52)"/><text x="260.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1652" width="3" height="15" fill="rgb(222,101,53)"/><text x="260.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1668" width="3" height="15" fill="rgb(254,86,13)"/><text x="260.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.19%)</title><rect x="257" y="1684" width="3" height="15" fill="rgb(225,205,8)"/><text x="260.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1700" width="3" height="15" fill="rgb(240,52,27)"/><text x="260.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1716" width="3" height="15" fill="rgb(227,24,12)"/><text x="260.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1732" width="3" height="15" fill="rgb(237,193,16)"/><text x="260.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1748" width="3" height="15" fill="rgb(240,194,31)"/><text x="260.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1764" width="3" height="15" fill="rgb(230,96,27)"/><text x="260.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.19%)</title><rect x="257" y="1780" width="3" height="15" fill="rgb(224,205,46)"/><text x="260.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1796" width="3" height="15" fill="rgb(221,226,51)"/><text x="260.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1812" width="3" height="15" fill="rgb(246,112,19)"/><text x="260.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1828" width="3" height="15" fill="rgb(220,136,22)"/><text x="260.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1844" width="3" height="15" fill="rgb(230,104,11)"/><text x="260.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1860" width="3" height="15" fill="rgb(245,124,1)"/><text x="260.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.19%)</title><rect x="257" y="1876" width="3" height="15" fill="rgb(224,0,41)"/><text x="260.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1892" width="3" height="15" fill="rgb(253,117,46)"/><text x="260.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="1908" width="3" height="15" fill="rgb(218,133,10)"/><text x="260.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="1924" width="3" height="15" fill="rgb(214,191,16)"/><text x="260.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="1940" width="3" height="15" fill="rgb(249,228,11)"/><text x="260.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="1956" width="3" height="15" fill="rgb(207,4,0)"/><text x="260.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py:12) (1 samples, 0.19%)</title><rect x="257" y="1972" width="3" height="15" fill="rgb(238,210,11)"/><text x="260.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="257" y="1988" width="3" height="15" fill="rgb(209,72,10)"/><text x="260.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="257" y="2004" width="3" height="15" fill="rgb(226,162,32)"/><text x="260.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="257" y="2020" width="3" height="15" fill="rgb(254,165,13)"/><text x="260.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="257" y="2036" width="3" height="15" fill="rgb(236,214,54)"/><text x="260.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="257" y="2052" width="3" height="15" fill="rgb(211,8,25)"/><text x="260.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py:1430) (1 samples, 0.19%)</title><rect x="257" y="2068" width="3" height="15" fill="rgb(246,99,7)"/><text x="260.00" y="2078.50"></text></g><g><title>getsourcelines (inspect.py:954) (1 samples, 0.19%)</title><rect x="260" y="1348" width="2" height="15" fill="rgb(211,145,44)"/><text x="263.00" y="1358.50"></text></g><g><title>unwrap (inspect.py:509) (1 samples, 0.19%)</title><rect x="260" y="1364" width="2" height="15" fill="rgb(235,203,14)"/><text x="263.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.39%)</title><rect x="260" y="1108" width="4" height="15" fill="rgb(218,89,4)"/><text x="263.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="260" y="1124" width="4" height="15" fill="rgb(231,134,48)"/><text x="263.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="260" y="1140" width="4" height="15" fill="rgb(229,187,29)"/><text x="263.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="260" y="1156" width="4" height="15" fill="rgb(228,60,28)"/><text x="263.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="260" y="1172" width="4" height="15" fill="rgb(248,46,16)"/><text x="263.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="260" y="1188" width="4" height="15" fill="rgb(246,108,42)"/><text x="263.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.39%)</title><rect x="260" y="1204" width="4" height="15" fill="rgb(226,198,32)"/><text x="263.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.39%)</title><rect x="260" y="1220" width="4" height="15" fill="rgb(210,173,28)"/><text x="263.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.39%)</title><rect x="260" y="1236" width="4" height="15" fill="rgb(223,113,16)"/><text x="263.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.39%)</title><rect x="260" y="1252" width="4" height="15" fill="rgb(254,224,47)"/><text x="263.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.39%)</title><rect x="260" y="1268" width="4" height="15" fill="rgb(231,4,38)"/><text x="263.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.39%)</title><rect x="260" y="1284" width="4" height="15" fill="rgb(253,92,5)"/><text x="263.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.39%)</title><rect x="260" y="1300" width="4" height="15" fill="rgb(206,218,35)"/><text x="263.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.39%)</title><rect x="260" y="1316" width="4" height="15" fill="rgb(229,221,29)"/><text x="263.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.39%)</title><rect x="260" y="1332" width="4" height="15" fill="rgb(215,209,35)"/><text x="263.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.19%)</title><rect x="262" y="1348" width="2" height="15" fill="rgb(217,184,54)"/><text x="265.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.19%)</title><rect x="262" y="1364" width="2" height="15" fill="rgb(216,209,10)"/><text x="265.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.19%)</title><rect x="262" y="1380" width="2" height="15" fill="rgb(229,6,37)"/><text x="265.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.19%)</title><rect x="262" y="1396" width="2" height="15" fill="rgb(232,57,17)"/><text x="265.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.19%)</title><rect x="262" y="1412" width="2" height="15" fill="rgb(205,195,28)"/><text x="265.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.19%)</title><rect x="264" y="1108" width="2" height="15" fill="rgb(239,204,12)"/><text x="267.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="264" y="1124" width="2" height="15" fill="rgb(235,136,23)"/><text x="267.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="264" y="1140" width="2" height="15" fill="rgb(232,214,54)"/><text x="267.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="264" y="1156" width="2" height="15" fill="rgb(208,5,31)"/><text x="267.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="264" y="1172" width="2" height="15" fill="rgb(213,198,32)"/><text x="267.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="264" y="1188" width="2" height="15" fill="rgb(233,9,16)"/><text x="267.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:22) (1 samples, 0.19%)</title><rect x="264" y="1204" width="2" height="15" fill="rgb(207,33,16)"/><text x="267.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="264" y="1220" width="2" height="15" fill="rgb(240,93,49)"/><text x="267.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="264" y="1236" width="2" height="15" fill="rgb(242,219,43)"/><text x="267.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="264" y="1252" width="2" height="15" fill="rgb(216,208,26)"/><text x="267.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="264" y="1268" width="2" height="15" fill="rgb(226,102,26)"/><text x="267.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="264" y="1284" width="2" height="15" fill="rgb(248,150,11)"/><text x="267.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:17) (1 samples, 0.19%)</title><rect x="264" y="1300" width="2" height="15" fill="rgb(246,90,51)"/><text x="267.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="264" y="1316" width="2" height="15" fill="rgb(234,17,5)"/><text x="267.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="264" y="1332" width="2" height="15" fill="rgb(215,209,43)"/><text x="267.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="264" y="1348" width="2" height="15" fill="rgb(230,93,33)"/><text x="267.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.19%)</title><rect x="264" y="1364" width="2" height="15" fill="rgb(218,22,28)"/><text x="267.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.19%)</title><rect x="264" y="1380" width="2" height="15" fill="rgb(209,191,2)"/><text x="267.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.19%)</title><rect x="264" y="1396" width="2" height="15" fill="rgb(251,167,35)"/><text x="267.00" y="1406.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.19%)</title><rect x="266" y="1108" width="3" height="15" fill="rgb(224,184,43)"/><text x="269.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="266" y="1124" width="3" height="15" fill="rgb(236,185,11)"/><text x="269.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="266" y="1140" width="3" height="15" fill="rgb(214,29,26)"/><text x="269.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="266" y="1156" width="3" height="15" fill="rgb(223,174,37)"/><text x="269.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="266" y="1172" width="3" height="15" fill="rgb(228,43,3)"/><text x="269.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="266" y="1188" width="3" height="15" fill="rgb(240,90,44)"/><text x="269.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="266" y="1204" width="3" height="15" fill="rgb(206,102,15)"/><text x="269.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="266" y="1220" width="3" height="15" fill="rgb(252,224,28)"/><text x="269.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:21) (1 samples, 0.19%)</title><rect x="266" y="1236" width="3" height="15" fill="rgb(249,157,20)"/><text x="269.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1020) (1 samples, 0.19%)</title><rect x="266" y="1252" width="3" height="15" fill="rgb(225,144,38)"/><text x="269.00" y="1262.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:4) (16 samples, 3.08%)</title><rect x="235" y="52" width="36" height="15" fill="rgb(215,189,11)"/><text x="238.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 3.08%)</title><rect x="235" y="68" width="36" height="15" fill="rgb(250,73,40)"/><text x="238.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 3.08%)</title><rect x="235" y="84" width="36" height="15" fill="rgb(214,146,8)"/><text x="238.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 3.08%)</title><rect x="235" y="100" width="36" height="15" fill="rgb(238,9,37)"/><text x="238.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 3.08%)</title><rect x="235" y="116" width="36" height="15" fill="rgb(229,132,45)"/><text x="238.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 3.08%)</title><rect x="235" y="132" width="36" height="15" fill="rgb(236,128,18)"/><text x="238.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py:7) (8 samples, 1.54%)</title><rect x="253" y="148" width="18" height="15" fill="rgb(240,142,12)"/><text x="256.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.54%)</title><rect x="253" y="164" width="18" height="15" fill="rgb(252,99,2)"/><text x="256.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.54%)</title><rect x="253" y="180" width="18" height="15" fill="rgb(227,84,48)"/><text x="256.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.54%)</title><rect x="253" y="196" width="18" height="15" fill="rgb(254,75,42)"/><text x="256.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.54%)</title><rect x="253" y="212" width="18" height="15" fill="rgb(206,66,26)"/><text x="256.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.54%)</title><rect x="253" y="228" width="18" height="15" fill="rgb(220,207,47)"/><text x="256.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (7 samples, 1.35%)</title><rect x="255" y="244" width="16" height="15" fill="rgb(253,169,48)"/><text x="258.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.35%)</title><rect x="255" y="260" width="16" height="15" fill="rgb(215,178,12)"/><text x="258.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.35%)</title><rect x="255" y="276" width="16" height="15" fill="rgb(227,153,37)"/><text x="258.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.35%)</title><rect x="255" y="292" width="16" height="15" fill="rgb(211,121,17)"/><text x="258.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.35%)</title><rect x="255" y="308" width="16" height="15" fill="rgb(205,205,1)"/><text x="258.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.35%)</title><rect x="255" y="324" width="16" height="15" fill="rgb(225,50,13)"/><text x="258.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (7 samples, 1.35%)</title><rect x="255" y="340" width="16" height="15" fill="rgb(241,111,43)"/><text x="258.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.35%)</title><rect x="255" y="356" width="16" height="15" fill="rgb(227,207,54)"/><text x="258.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.35%)</title><rect x="255" y="372" width="16" height="15" fill="rgb(238,224,37)"/><text x="258.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.35%)</title><rect x="255" y="388" width="16" height="15" fill="rgb(232,54,24)"/><text x="258.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.35%)</title><rect x="255" y="404" width="16" height="15" fill="rgb(254,13,22)"/><text x="258.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.35%)</title><rect x="255" y="420" width="16" height="15" fill="rgb(239,227,51)"/><text x="258.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.96%)</title><rect x="260" y="436" width="11" height="15" fill="rgb(233,87,39)"/><text x="263.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="452" width="11" height="15" fill="rgb(240,109,12)"/><text x="263.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.96%)</title><rect x="260" y="468" width="11" height="15" fill="rgb(220,223,49)"/><text x="263.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="484" width="11" height="15" fill="rgb(251,162,0)"/><text x="263.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="500" width="11" height="15" fill="rgb(230,145,5)"/><text x="263.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="516" width="11" height="15" fill="rgb(250,94,6)"/><text x="263.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="532" width="11" height="15" fill="rgb(221,145,45)"/><text x="263.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="548" width="11" height="15" fill="rgb(212,61,17)"/><text x="263.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="564" width="11" height="15" fill="rgb(212,208,23)"/><text x="263.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.96%)</title><rect x="260" y="580" width="11" height="15" fill="rgb(239,228,7)"/><text x="263.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="596" width="11" height="15" fill="rgb(244,162,44)"/><text x="263.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="612" width="11" height="15" fill="rgb(210,222,12)"/><text x="263.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="628" width="11" height="15" fill="rgb(249,83,51)"/><text x="263.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="644" width="11" height="15" fill="rgb(225,96,22)"/><text x="263.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="660" width="11" height="15" fill="rgb(223,41,31)"/><text x="263.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.96%)</title><rect x="260" y="676" width="11" height="15" fill="rgb(251,198,21)"/><text x="263.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="692" width="11" height="15" fill="rgb(231,92,8)"/><text x="263.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="708" width="11" height="15" fill="rgb(245,81,50)"/><text x="263.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="724" width="11" height="15" fill="rgb(218,152,0)"/><text x="263.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="740" width="11" height="15" fill="rgb(232,129,22)"/><text x="263.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="756" width="11" height="15" fill="rgb(227,76,21)"/><text x="263.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.96%)</title><rect x="260" y="772" width="11" height="15" fill="rgb(247,224,7)"/><text x="263.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="788" width="11" height="15" fill="rgb(254,49,27)"/><text x="263.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="804" width="11" height="15" fill="rgb(237,160,40)"/><text x="263.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="820" width="11" height="15" fill="rgb(218,213,34)"/><text x="263.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="836" width="11" height="15" fill="rgb(237,225,46)"/><text x="263.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="852" width="11" height="15" fill="rgb(218,127,2)"/><text x="263.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.96%)</title><rect x="260" y="868" width="11" height="15" fill="rgb(220,66,28)"/><text x="263.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="884" width="11" height="15" fill="rgb(252,4,2)"/><text x="263.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.96%)</title><rect x="260" y="900" width="11" height="15" fill="rgb(205,128,45)"/><text x="263.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="916" width="11" height="15" fill="rgb(241,101,52)"/><text x="263.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="932" width="11" height="15" fill="rgb(209,210,40)"/><text x="263.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="948" width="11" height="15" fill="rgb(233,53,11)"/><text x="263.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="964" width="11" height="15" fill="rgb(254,163,50)"/><text x="263.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="980" width="11" height="15" fill="rgb(219,63,34)"/><text x="263.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="996" width="11" height="15" fill="rgb(247,212,36)"/><text x="263.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.96%)</title><rect x="260" y="1012" width="11" height="15" fill="rgb(251,87,3)"/><text x="263.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.96%)</title><rect x="260" y="1028" width="11" height="15" fill="rgb(248,110,44)"/><text x="263.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.96%)</title><rect x="260" y="1044" width="11" height="15" fill="rgb(234,20,4)"/><text x="263.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.96%)</title><rect x="260" y="1060" width="11" height="15" fill="rgb(216,62,13)"/><text x="263.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.96%)</title><rect x="260" y="1076" width="11" height="15" fill="rgb(246,20,7)"/><text x="263.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.96%)</title><rect x="260" y="1092" width="11" height="15" fill="rgb(218,176,16)"/><text x="263.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.19%)</title><rect x="269" y="1108" width="2" height="15" fill="rgb(220,31,2)"/><text x="272.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="269" y="1124" width="2" height="15" fill="rgb(225,82,41)"/><text x="272.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="269" y="1140" width="2" height="15" fill="rgb(242,132,4)"/><text x="272.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="269" y="1156" width="2" height="15" fill="rgb(223,157,33)"/><text x="272.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="269" y="1172" width="2" height="15" fill="rgb(218,46,9)"/><text x="272.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="269" y="1188" width="2" height="15" fill="rgb(211,219,39)"/><text x="272.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="269" y="1204" width="2" height="15" fill="rgb(230,202,33)"/><text x="272.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="269" y="1220" width="2" height="15" fill="rgb(245,170,33)"/><text x="272.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.19%)</title><rect x="269" y="1236" width="2" height="15" fill="rgb(222,162,38)"/><text x="272.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.19%)</title><rect x="269" y="1252" width="2" height="15" fill="rgb(221,149,28)"/><text x="272.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="269" y="1268" width="2" height="15" fill="rgb(208,90,2)"/><text x="272.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="269" y="1284" width="2" height="15" fill="rgb(243,30,3)"/><text x="272.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="269" y="1300" width="2" height="15" fill="rgb(245,87,50)"/><text x="272.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="269" y="1316" width="2" height="15" fill="rgb(231,155,1)"/><text x="272.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="269" y="1332" width="2" height="15" fill="rgb(226,25,40)"/><text x="272.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="269" y="1348" width="2" height="15" fill="rgb(250,197,31)"/><text x="272.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.19%)</title><rect x="269" y="1364" width="2" height="15" fill="rgb(248,140,10)"/><text x="272.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="269" y="1380" width="2" height="15" fill="rgb(254,53,21)"/><text x="272.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="269" y="1396" width="2" height="15" fill="rgb(224,219,20)"/><text x="272.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="269" y="1412" width="2" height="15" fill="rgb(221,168,33)"/><text x="272.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="269" y="1428" width="2" height="15" fill="rgb(248,203,12)"/><text x="272.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="269" y="1444" width="2" height="15" fill="rgb(226,97,52)"/><text x="272.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.19%)</title><rect x="269" y="1460" width="2" height="15" fill="rgb(226,82,40)"/><text x="272.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.19%)</title><rect x="269" y="1476" width="2" height="15" fill="rgb(211,96,9)"/><text x="272.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.19%)</title><rect x="269" y="1492" width="2" height="15" fill="rgb(246,48,36)"/><text x="272.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.19%)</title><rect x="269" y="1508" width="2" height="15" fill="rgb(248,31,22)"/><text x="272.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.19%)</title><rect x="269" y="1524" width="2" height="15" fill="rgb(245,229,48)"/><text x="272.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.19%)</title><rect x="269" y="1540" width="2" height="15" fill="rgb(217,74,22)"/><text x="272.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.19%)</title><rect x="269" y="1556" width="2" height="15" fill="rgb(247,38,37)"/><text x="272.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:122) (1 samples, 0.19%)</title><rect x="269" y="1572" width="2" height="15" fill="rgb(234,118,11)"/><text x="272.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:250) (1 samples, 0.19%)</title><rect x="269" y="1588" width="2" height="15" fill="rgb(212,180,39)"/><text x="272.00" y="1598.50"></text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:28) (1 samples, 0.19%)</title><rect x="271" y="84" width="2" height="15" fill="rgb(226,25,0)"/><text x="274.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.19%)</title><rect x="271" y="100" width="2" height="15" fill="rgb(239,214,33)"/><text x="274.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:230) (1 samples, 0.19%)</title><rect x="271" y="116" width="2" height="15" fill="rgb(209,72,29)"/><text x="274.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.19%)</title><rect x="271" y="132" width="2" height="15" fill="rgb(231,175,49)"/><text x="274.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.19%)</title><rect x="271" y="148" width="2" height="15" fill="rgb(223,70,40)"/><text x="274.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.19%)</title><rect x="271" y="164" width="2" height="15" fill="rgb(248,218,26)"/><text x="274.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.19%)</title><rect x="271" y="180" width="2" height="15" fill="rgb(242,95,51)"/><text x="274.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.19%)</title><rect x="271" y="196" width="2" height="15" fill="rgb(246,169,52)"/><text x="274.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="271" y="212" width="2" height="15" fill="rgb(215,228,21)"/><text x="274.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="271" y="228" width="2" height="15" fill="rgb(246,23,27)"/><text x="274.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="271" y="244" width="2" height="15" fill="rgb(214,21,54)"/><text x="274.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="271" y="260" width="2" height="15" fill="rgb(250,66,2)"/><text x="274.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="271" y="276" width="2" height="15" fill="rgb(229,82,11)"/><text x="274.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.19%)</title><rect x="271" y="292" width="2" height="15" fill="rgb(249,128,43)"/><text x="274.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="271" y="308" width="2" height="15" fill="rgb(241,52,46)"/><text x="274.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="271" y="324" width="2" height="15" fill="rgb(234,70,17)"/><text x="274.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="271" y="340" width="2" height="15" fill="rgb(221,1,11)"/><text x="274.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="271" y="356" width="2" height="15" fill="rgb(234,70,36)"/><text x="274.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="271" y="372" width="2" height="15" fill="rgb(253,139,48)"/><text x="274.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:78) (1 samples, 0.19%)</title><rect x="271" y="388" width="2" height="15" fill="rgb(212,16,20)"/><text x="274.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="271" y="404" width="2" height="15" fill="rgb(244,174,34)"/><text x="274.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="271" y="420" width="2" height="15" fill="rgb(233,66,7)"/><text x="274.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.19%)</title><rect x="271" y="436" width="2" height="15" fill="rgb(238,48,20)"/><text x="274.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.19%)</title><rect x="271" y="452" width="2" height="15" fill="rgb(211,14,45)"/><text x="274.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="271" y="468" width="2" height="15" fill="rgb(232,70,38)"/><text x="274.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:12) (1 samples, 0.19%)</title><rect x="271" y="484" width="2" height="15" fill="rgb(243,93,51)"/><text x="274.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.19%)</title><rect x="271" y="500" width="2" height="15" fill="rgb(214,218,10)"/><text x="274.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.19%)</title><rect x="271" y="516" width="2" height="15" fill="rgb(232,67,16)"/><text x="274.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.19%)</title><rect x="271" y="532" width="2" height="15" fill="rgb(209,38,53)"/><text x="274.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.19%)</title><rect x="271" y="548" width="2" height="15" fill="rgb(225,218,52)"/><text x="274.00" y="558.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.19%)</title><rect x="271" y="564" width="2" height="15" fill="rgb(240,111,27)"/><text x="274.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.19%)</title><rect x="271" y="580" width="2" height="15" fill="rgb(242,160,1)"/><text x="274.00" y="590.50"></text></g><g><title>0x7f68295bee83 (?) (1 samples, 0.19%)</title><rect x="271" y="596" width="2" height="15" fill="rgb(250,4,12)"/><text x="274.00" y="606.50"></text></g><g><title>0x7f68295be245 (?) (1 samples, 0.19%)</title><rect x="271" y="612" width="2" height="15" fill="rgb(231,31,26)"/><text x="274.00" y="622.50"></text></g><g><title>0x7f68295d9d0a (?) (1 samples, 0.19%)</title><rect x="271" y="628" width="2" height="15" fill="rgb(230,101,46)"/><text x="274.00" y="638.50"></text></g><g><title>0x7f68295cdaac (?) (1 samples, 0.19%)</title><rect x="271" y="644" width="2" height="15" fill="rgb(232,68,27)"/><text x="274.00" y="654.50"></text></g><g><title>0x7f68295c92e6 (?) (1 samples, 0.19%)</title><rect x="271" y="660" width="2" height="15" fill="rgb(240,221,36)"/><text x="274.00" y="670.50"></text></g><g><title>pybind11_meta_getattro (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="271" y="676" width="2" height="15" fill="rgb(239,82,32)"/><text x="274.00" y="686.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:18) (1 samples, 0.19%)</title><rect x="273" y="100" width="3" height="15" fill="rgb(249,122,45)"/><text x="276.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.19%)</title><rect x="273" y="116" width="3" height="15" fill="rgb(229,227,14)"/><text x="276.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (1 samples, 0.19%)</title><rect x="273" y="132" width="3" height="15" fill="rgb(212,138,0)"/><text x="276.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.19%)</title><rect x="273" y="148" width="3" height="15" fill="rgb(232,5,17)"/><text x="276.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.19%)</title><rect x="273" y="164" width="3" height="15" fill="rgb(217,85,32)"/><text x="276.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.19%)</title><rect x="273" y="180" width="3" height="15" fill="rgb(222,154,28)"/><text x="276.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (1 samples, 0.19%)</title><rect x="273" y="196" width="3" height="15" fill="rgb(209,88,42)"/><text x="276.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.19%)</title><rect x="273" y="212" width="3" height="15" fill="rgb(239,117,25)"/><text x="276.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (1 samples, 0.19%)</title><rect x="273" y="228" width="3" height="15" fill="rgb(213,15,22)"/><text x="276.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="273" y="244" width="3" height="15" fill="rgb(224,184,53)"/><text x="276.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="273" y="260" width="3" height="15" fill="rgb(217,36,44)"/><text x="276.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="273" y="276" width="3" height="15" fill="rgb(221,165,44)"/><text x="276.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.19%)</title><rect x="273" y="292" width="3" height="15" fill="rgb(239,35,0)"/><text x="276.00" y="302.50"></text></g><g><title>0x7f6853e2f33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="273" y="308" width="3" height="15" fill="rgb(238,40,46)"/><text x="276.00" y="318.50"></text></g><g><title>0x7f6853e51224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="273" y="324" width="3" height="15" fill="rgb(241,19,18)"/><text x="276.00" y="334.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:444) (2 samples, 0.39%)</title><rect x="278" y="164" width="4" height="15" fill="rgb(235,39,51)"/><text x="281.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.39%)</title><rect x="282" y="180" width="5" height="15" fill="rgb(226,47,12)"/><text x="285.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (1 samples, 0.19%)</title><rect x="287" y="196" width="2" height="15" fill="rgb(248,2,16)"/><text x="290.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.19%)</title><rect x="287" y="212" width="2" height="15" fill="rgb(212,151,27)"/><text x="290.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.19%)</title><rect x="287" y="228" width="2" height="15" fill="rgb(249,44,24)"/><text x="290.00" y="238.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.19%)</title><rect x="294" y="308" width="2" height="15" fill="rgb(241,22,28)"/><text x="297.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="294" y="324" width="2" height="15" fill="rgb(249,58,34)"/><text x="297.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.19%)</title><rect x="294" y="340" width="2" height="15" fill="rgb(248,31,18)"/><text x="297.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.19%)</title><rect x="294" y="356" width="2" height="15" fill="rgb(239,81,9)"/><text x="297.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.19%)</title><rect x="294" y="372" width="2" height="15" fill="rgb(232,4,53)"/><text x="297.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.19%)</title><rect x="294" y="388" width="2" height="15" fill="rgb(207,44,51)"/><text x="297.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="294" y="404" width="2" height="15" fill="rgb(244,207,53)"/><text x="297.00" y="414.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.19%)</title><rect x="296" y="340" width="2" height="15" fill="rgb(236,71,44)"/><text x="299.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3419) (1 samples, 0.19%)</title><rect x="296" y="356" width="2" height="15" fill="rgb(254,195,44)"/><text x="299.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.19%)</title><rect x="298" y="404" width="3" height="15" fill="rgb(217,157,10)"/><text x="301.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="298" y="420" width="3" height="15" fill="rgb(253,220,49)"/><text x="301.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (2 samples, 0.39%)</title><rect x="298" y="356" width="5" height="15" fill="rgb(213,226,34)"/><text x="301.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (2 samples, 0.39%)</title><rect x="298" y="372" width="5" height="15" fill="rgb(231,199,49)"/><text x="301.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (2 samples, 0.39%)</title><rect x="298" y="388" width="5" height="15" fill="rgb(232,21,23)"/><text x="301.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:92) (1 samples, 0.19%)</title><rect x="301" y="404" width="2" height="15" fill="rgb(248,117,42)"/><text x="304.00" y="414.50"></text></g><g><title>0x7f6867d69b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.19%)</title><rect x="301" y="420" width="2" height="15" fill="rgb(225,112,38)"/><text x="304.00" y="430.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:196) (1 samples, 0.19%)</title><rect x="303" y="372" width="2" height="15" fill="rgb(243,103,30)"/><text x="306.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.39%)</title><rect x="303" y="356" width="4" height="15" fill="rgb(233,114,28)"/><text x="306.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.19%)</title><rect x="305" y="372" width="2" height="15" fill="rgb(250,69,0)"/><text x="308.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2131) (1 samples, 0.19%)</title><rect x="305" y="388" width="2" height="15" fill="rgb(222,78,53)"/><text x="308.00" y="398.50"></text></g><g><title>npyiter_checkreducesize (nditer_api.c:2639) (1 samples, 0.19%)</title><rect x="305" y="404" width="2" height="15" fill="rgb(254,91,2)"/><text x="308.00" y="414.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.19%)</title><rect x="307" y="388" width="3" height="15" fill="rgb(205,104,27)"/><text x="310.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.19%)</title><rect x="310" y="388" width="2" height="15" fill="rgb(238,191,41)"/><text x="313.00" y="398.50"></text></g><g><title>FLOAT_add (loops.c.src:1747) (1 samples, 0.19%)</title><rect x="312" y="388" width="2" height="15" fill="rgb(240,37,27)"/><text x="315.00" y="398.50"></text></g><g><title>pairwise_sum_FLOAT (loops.c.src:1667) (1 samples, 0.19%)</title><rect x="312" y="404" width="2" height="15" fill="rgb(233,94,10)"/><text x="315.00" y="414.50"></text></g><g><title>array_sum (methods.c:2215) (10 samples, 1.93%)</title><rect x="294" y="260" width="22" height="15" fill="rgb(241,113,9)"/><text x="297.00" y="270.50">a..</text></g><g><title>forward_ndarray_method (methods.c:108) (10 samples, 1.93%)</title><rect x="294" y="276" width="22" height="15" fill="rgb(244,42,32)"/><text x="297.00" y="286.50">f..</text></g><g><title>_sum (numpy/core/_methods.py:38) (10 samples, 1.93%)</title><rect x="294" y="292" width="22" height="15" fill="rgb(237,16,39)"/><text x="297.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (9 samples, 1.73%)</title><rect x="296" y="308" width="20" height="15" fill="rgb(252,128,52)"/><text x="299.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (9 samples, 1.73%)</title><rect x="296" y="324" width="20" height="15" fill="rgb(242,114,53)"/><text x="299.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (8 samples, 1.54%)</title><rect x="298" y="340" width="18" height="15" fill="rgb(214,163,46)"/><text x="301.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (4 samples, 0.77%)</title><rect x="307" y="356" width="9" height="15" fill="rgb(253,189,41)"/><text x="310.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (4 samples, 0.77%)</title><rect x="307" y="372" width="9" height="15" fill="rgb(232,179,6)"/><text x="310.00" y="382.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:241) (1 samples, 0.19%)</title><rect x="314" y="388" width="2" height="15" fill="rgb(243,38,15)"/><text x="317.00" y="398.50"></text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:42) (12 samples, 2.31%)</title><rect x="291" y="244" width="28" height="15" fill="rgb(208,182,17)"/><text x="294.00" y="254.50">n..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.19%)</title><rect x="316" y="260" width="3" height="15" fill="rgb(207,56,49)"/><text x="319.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.19%)</title><rect x="316" y="276" width="3" height="15" fill="rgb(228,102,17)"/><text x="319.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.19%)</title><rect x="316" y="292" width="3" height="15" fill="rgb(246,17,53)"/><text x="319.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1349) (1 samples, 0.19%)</title><rect x="316" y="308" width="3" height="15" fill="rgb(254,217,15)"/><text x="319.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="316" y="324" width="3" height="15" fill="rgb(209,156,13)"/><text x="319.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1013) (1 samples, 0.19%)</title><rect x="319" y="356" width="2" height="15" fill="rgb(218,149,18)"/><text x="322.00" y="366.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="321" y="356" width="2" height="15" fill="rgb(213,42,27)"/><text x="324.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.19%)</title><rect x="323" y="372" width="3" height="15" fill="rgb(235,90,4)"/><text x="326.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (4 samples, 0.77%)</title><rect x="319" y="308" width="9" height="15" fill="rgb(207,9,26)"/><text x="322.00" y="318.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (4 samples, 0.77%)</title><rect x="319" y="324" width="9" height="15" fill="rgb(226,68,50)"/><text x="322.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (4 samples, 0.77%)</title><rect x="319" y="340" width="9" height="15" fill="rgb(211,64,50)"/><text x="322.00" y="350.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.39%)</title><rect x="323" y="356" width="5" height="15" fill="rgb(206,19,51)"/><text x="326.00" y="366.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.19%)</title><rect x="326" y="372" width="2" height="15" fill="rgb(234,100,13)"/><text x="329.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.39%)</title><rect x="328" y="308" width="4" height="15" fill="rgb(231,124,35)"/><text x="331.00" y="318.50"></text></g><g><title>FLOAT_divide (loops.c.src:1755) (2 samples, 0.39%)</title><rect x="328" y="324" width="4" height="15" fill="rgb(242,29,19)"/><text x="331.00" y="334.50"></text></g><g><title>run_binary_simd_divide_FLOAT (simd.inc.src:250) (2 samples, 0.39%)</title><rect x="328" y="340" width="4" height="15" fill="rgb(206,156,26)"/><text x="331.00" y="350.50"></text></g><g><title>sse2_binary_divide_FLOAT (simd.inc.src:604) (2 samples, 0.39%)</title><rect x="328" y="356" width="4" height="15" fill="rgb(220,200,44)"/><text x="331.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (2 samples, 0.39%)</title><rect x="328" y="372" width="4" height="15" fill="rgb(216,222,54)"/><text x="331.00" y="382.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 1.35%)</title><rect x="319" y="260" width="16" height="15" fill="rgb(229,120,31)"/><text x="322.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.35%)</title><rect x="319" y="276" width="16" height="15" fill="rgb(239,86,13)"/><text x="322.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (7 samples, 1.35%)</title><rect x="319" y="292" width="16" height="15" fill="rgb(220,10,34)"/><text x="322.00" y="302.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.19%)</title><rect x="332" y="308" width="3" height="15" fill="rgb(243,35,20)"/><text x="335.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.19%)</title><rect x="332" y="324" width="3" height="15" fill="rgb(252,132,10)"/><text x="335.00" y="334.50"></text></g><g><title>0x7f6868b47a6f (libc-2.29.so) (1 samples, 0.19%)</title><rect x="332" y="340" width="3" height="15" fill="rgb(212,166,11)"/><text x="335.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4730) (1 samples, 0.19%)</title><rect x="335" y="260" width="2" height="15" fill="rgb(235,194,53)"/><text x="338.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 4.24%)</title><rect x="289" y="196" width="50" height="15" fill="rgb(210,110,16)"/><text x="292.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 4.05%)</title><rect x="291" y="212" width="48" height="15" fill="rgb(240,17,53)"/><text x="294.00" y="222.50">run ..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py:59) (21 samples, 4.05%)</title><rect x="291" y="228" width="48" height="15" fill="rgb(253,207,22)"/><text x="294.00" y="238.50">_run..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py:43) (9 samples, 1.73%)</title><rect x="319" y="244" width="20" height="15" fill="rgb(227,106,53)"/><text x="322.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.19%)</title><rect x="337" y="260" width="2" height="15" fill="rgb(243,5,16)"/><text x="340.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.19%)</title><rect x="337" y="276" width="2" height="15" fill="rgb(230,158,51)"/><text x="340.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.19%)</title><rect x="337" y="292" width="2" height="15" fill="rgb(225,66,16)"/><text x="340.00" y="302.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.19%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(240,222,13)"/><text x="344.00" y="270.50"></text></g><g><title>dot (numpy/core/multiarray.py:792) (1 samples, 0.19%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(226,73,14)"/><text x="344.00" y="286.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="344" y="372" width="2" height="15" fill="rgb(247,156,20)"/><text x="347.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.19%)</title><rect x="344" y="388" width="2" height="15" fill="rgb(229,57,18)"/><text x="347.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.39%)</title><rect x="344" y="276" width="4" height="15" fill="rgb(226,224,34)"/><text x="347.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (2 samples, 0.39%)</title><rect x="344" y="292" width="4" height="15" fill="rgb(207,0,48)"/><text x="347.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.39%)</title><rect x="344" y="308" width="4" height="15" fill="rgb(253,200,6)"/><text x="347.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:674) (2 samples, 0.39%)</title><rect x="344" y="324" width="4" height="15" fill="rgb(252,192,7)"/><text x="347.00" y="334.50"></text></g><g><title>gemm (cblasfuncs.c:40) (2 samples, 0.39%)</title><rect x="344" y="340" width="4" height="15" fill="rgb(216,214,9)"/><text x="347.00" y="350.50"></text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="344" y="356" width="4" height="15" fill="rgb(246,32,22)"/><text x="347.00" y="366.50"></text></g><g><title>sgemm_tn (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="346" y="372" width="2" height="15" fill="rgb(216,64,31)"/><text x="349.00" y="382.50"></text></g><g><title>sgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.19%)</title><rect x="346" y="388" width="2" height="15" fill="rgb(210,133,35)"/><text x="349.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:318) (1 samples, 0.19%)</title><rect x="348" y="276" width="3" height="15" fill="rgb(245,148,52)"/><text x="351.00" y="286.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.39%)</title><rect x="351" y="276" width="4" height="15" fill="rgb(208,50,20)"/><text x="354.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:39) (12 samples, 2.31%)</title><rect x="339" y="228" width="27" height="15" fill="rgb(247,11,32)"/><text x="342.00" y="238.50">_..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (12 samples, 2.31%)</title><rect x="339" y="244" width="27" height="15" fill="rgb(210,188,43)"/><text x="342.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (10 samples, 1.93%)</title><rect x="344" y="260" width="22" height="15" fill="rgb(214,216,12)"/><text x="347.00" y="270.50">d..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 0.96%)</title><rect x="355" y="276" width="11" height="15" fill="rgb(233,113,20)"/><text x="358.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.19%)</title><rect x="369" y="292" width="2" height="15" fill="rgb(213,172,30)"/><text x="372.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.19%)</title><rect x="369" y="308" width="2" height="15" fill="rgb(218,20,19)"/><text x="372.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1014) (2 samples, 0.39%)</title><rect x="371" y="340" width="5" height="15" fill="rgb(237,98,35)"/><text x="374.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (3 samples, 0.58%)</title><rect x="371" y="292" width="7" height="15" fill="rgb(237,172,18)"/><text x="374.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (3 samples, 0.58%)</title><rect x="371" y="308" width="7" height="15" fill="rgb(214,110,0)"/><text x="374.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.58%)</title><rect x="371" y="324" width="7" height="15" fill="rgb(252,194,50)"/><text x="374.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.19%)</title><rect x="376" y="340" width="2" height="15" fill="rgb(221,166,0)"/><text x="379.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:41) (6 samples, 1.16%)</title><rect x="366" y="228" width="14" height="15" fill="rgb(251,127,17)"/><text x="369.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 0.96%)</title><rect x="369" y="244" width="11" height="15" fill="rgb(252,110,14)"/><text x="372.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.96%)</title><rect x="369" y="260" width="11" height="15" fill="rgb(225,40,5)"/><text x="372.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.96%)</title><rect x="369" y="276" width="11" height="15" fill="rgb(208,209,37)"/><text x="372.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.19%)</title><rect x="378" y="292" width="2" height="15" fill="rgb(207,188,49)"/><text x="381.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.19%)</title><rect x="385" y="244" width="2" height="15" fill="rgb(220,105,47)"/><text x="388.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.19%)</title><rect x="385" y="260" width="2" height="15" fill="rgb(227,58,33)"/><text x="388.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.19%)</title><rect x="385" y="276" width="2" height="15" fill="rgb(205,63,8)"/><text x="388.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.19%)</title><rect x="385" y="292" width="2" height="15" fill="rgb(253,55,12)"/><text x="388.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.19%)</title><rect x="385" y="308" width="2" height="15" fill="rgb(205,59,23)"/><text x="388.00" y="318.50"></text></g><g><title>0x7f6868c931a0 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="389" y="356" width="2" height="15" fill="rgb(254,175,7)"/><text x="392.00" y="366.50"></text></g><g><title>0x7f6868cc6e71 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="391" y="356" width="3" height="15" fill="rgb(206,62,52)"/><text x="394.00" y="366.50"></text></g><g><title>0x7f6853e51214 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.77%)</title><rect x="387" y="324" width="9" height="15" fill="rgb(250,98,51)"/><text x="390.00" y="334.50"></text></g><g><title>expf (libm-2.29.so) (4 samples, 0.77%)</title><rect x="387" y="340" width="9" height="15" fill="rgb(225,38,14)"/><text x="390.00" y="350.50"></text></g><g><title>0x7f6868cc6ea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="394" y="356" width="2" height="15" fill="rgb(254,100,48)"/><text x="397.00" y="366.50"></text></g><g><title>0x7f6853e51224 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="396" y="324" width="5" height="15" fill="rgb(247,133,53)"/><text x="399.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (8 samples, 1.54%)</title><rect x="387" y="244" width="18" height="15" fill="rgb(223,176,7)"/><text x="390.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (8 samples, 1.54%)</title><rect x="387" y="260" width="18" height="15" fill="rgb(229,16,51)"/><text x="390.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (8 samples, 1.54%)</title><rect x="387" y="276" width="18" height="15" fill="rgb(220,24,54)"/><text x="390.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (8 samples, 1.54%)</title><rect x="387" y="292" width="18" height="15" fill="rgb(239,105,3)"/><text x="390.00" y="302.50"></text></g><g><title>0x7f6853e2f33d (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.54%)</title><rect x="387" y="308" width="18" height="15" fill="rgb(217,105,30)"/><text x="390.00" y="318.50"></text></g><g><title>0x7f6853e51228 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.39%)</title><rect x="401" y="324" width="4" height="15" fill="rgb(213,14,34)"/><text x="404.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:46) (12 samples, 2.31%)</title><rect x="380" y="228" width="27" height="15" fill="rgb(243,152,3)"/><text x="383.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.19%)</title><rect x="405" y="244" width="2" height="15" fill="rgb(254,149,3)"/><text x="408.00" y="254.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.19%)</title><rect x="405" y="260" width="2" height="15" fill="rgb(253,12,44)"/><text x="408.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:60) (1 samples, 0.19%)</title><rect x="410" y="292" width="2" height="15" fill="rgb(250,179,40)"/><text x="413.00" y="302.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.19%)</title><rect x="412" y="324" width="2" height="15" fill="rgb(225,165,16)"/><text x="415.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.19%)</title><rect x="412" y="340" width="2" height="15" fill="rgb(211,64,27)"/><text x="415.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.19%)</title><rect x="412" y="356" width="2" height="15" fill="rgb(215,215,48)"/><text x="415.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.19%)</title><rect x="412" y="372" width="2" height="15" fill="rgb(242,49,36)"/><text x="415.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.19%)</title><rect x="412" y="388" width="2" height="15" fill="rgb(240,124,12)"/><text x="415.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.19%)</title><rect x="412" y="404" width="2" height="15" fill="rgb(244,101,6)"/><text x="415.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="412" y="420" width="2" height="15" fill="rgb(239,216,10)"/><text x="415.00" y="430.50"></text></g><g><title>0x7f6868b492a0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="412" y="436" width="2" height="15" fill="rgb(247,163,13)"/><text x="415.00" y="446.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.39%)</title><rect x="414" y="324" width="5" height="15" fill="rgb(239,46,10)"/><text x="417.00" y="334.50"></text></g><g><title>FLOAT_argmax (arraytypes.c.src:3127) (2 samples, 0.39%)</title><rect x="414" y="340" width="5" height="15" fill="rgb(231,33,21)"/><text x="417.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:381) (36 samples, 6.94%)</title><rect x="339" y="196" width="82" height="15" fill="rgb(206,89,5)"/><text x="342.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 6.94%)</title><rect x="339" y="212" width="82" height="15" fill="rgb(217,78,8)"/><text x="342.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py:60) (6 samples, 1.16%)</title><rect x="407" y="228" width="14" height="15" fill="rgb(247,165,34)"/><text x="410.00" y="238.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;:6) (6 samples, 1.16%)</title><rect x="407" y="244" width="14" height="15" fill="rgb(249,118,13)"/><text x="410.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.16%)</title><rect x="407" y="260" width="14" height="15" fill="rgb(225,181,37)"/><text x="410.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py:1153) (6 samples, 1.16%)</title><rect x="407" y="276" width="14" height="15" fill="rgb(250,1,11)"/><text x="410.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.77%)</title><rect x="412" y="292" width="9" height="15" fill="rgb(241,61,20)"/><text x="415.00" y="302.50"></text></g><g><title>array_argmax (methods.c:302) (4 samples, 0.77%)</title><rect x="412" y="308" width="9" height="15" fill="rgb(248,47,32)"/><text x="415.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:133) (1 samples, 0.19%)</title><rect x="419" y="324" width="2" height="15" fill="rgb(206,223,27)"/><text x="422.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (60 samples, 11.56%)</title><rect x="287" y="180" width="136" height="15" fill="rgb(210,119,16)"/><text x="290.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:382) (1 samples, 0.19%)</title><rect x="421" y="196" width="2" height="15" fill="rgb(226,172,28)"/><text x="424.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.19%)</title><rect x="423" y="180" width="3" height="15" fill="rgb(212,20,17)"/><text x="426.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.39%)</title><rect x="426" y="180" width="4" height="15" fill="rgb(247,28,17)"/><text x="429.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:45) (72 samples, 13.87%)</title><rect x="271" y="52" width="164" height="15" fill="rgb(229,165,35)"/><text x="274.00" y="62.50">&lt;module&gt; (bench_Logis..</text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:44) (72 samples, 13.87%)</title><rect x="271" y="68" width="164" height="15" fill="rgb(226,37,35)"/><text x="274.00" y="78.50">profile_pyrt (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:29) (71 samples, 13.68%)</title><rect x="273" y="84" width="162" height="15" fill="rgb(241,27,31)"/><text x="276.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:23) (70 samples, 13.49%)</title><rect x="276" y="100" width="159" height="15" fill="rgb(208,200,38)"/><text x="279.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (70 samples, 13.49%)</title><rect x="276" y="116" width="159" height="15" fill="rgb(230,107,20)"/><text x="279.00" y="126.50">time_predict (mlprod..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (70 samples, 13.49%)</title><rect x="276" y="132" width="159" height="15" fill="rgb(235,108,21)"/><text x="279.00" y="142.50">&lt;lambda&gt; (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (70 samples, 13.49%)</title><rect x="276" y="148" width="159" height="15" fill="rgb(211,121,43)"/><text x="279.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (67 samples, 12.91%)</title><rect x="282" y="164" width="153" height="15" fill="rgb(248,62,50)"/><text x="285.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.39%)</title><rect x="430" y="180" width="5" height="15" fill="rgb(226,154,23)"/><text x="433.00" y="190.50"></text></g><g><title>0x7f6828bb7ff9 (?) (1 samples, 0.19%)</title><rect x="444" y="212" width="2" height="15" fill="rgb(252,217,15)"/><text x="447.00" y="222.50"></text></g><g><title>0x7f6828bb2ef6 (?) (1 samples, 0.19%)</title><rect x="444" y="228" width="2" height="15" fill="rgb(235,89,48)"/><text x="447.00" y="238.50"></text></g><g><title>0x7f6828ba7c99 (?) (1 samples, 0.19%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(254,113,39)"/><text x="447.00" y="254.50"></text></g><g><title>0x7f6828bc5ced (?) (1 samples, 0.19%)</title><rect x="444" y="260" width="2" height="15" fill="rgb(216,173,37)"/><text x="447.00" y="270.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="446" y="340" width="2" height="15" fill="rgb(222,46,26)"/><text x="449.00" y="350.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:18) (8 samples, 1.54%)</title><rect x="435" y="100" width="18" height="15" fill="rgb(252,171,17)"/><text x="438.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 0.96%)</title><rect x="441" y="116" width="12" height="15" fill="rgb(212,5,24)"/><text x="444.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (5 samples, 0.96%)</title><rect x="441" y="132" width="12" height="15" fill="rgb(209,25,16)"/><text x="444.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (5 samples, 0.96%)</title><rect x="441" y="148" width="12" height="15" fill="rgb(215,201,24)"/><text x="444.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (4 samples, 0.77%)</title><rect x="444" y="164" width="9" height="15" fill="rgb(229,6,26)"/><text x="447.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (4 samples, 0.77%)</title><rect x="444" y="180" width="9" height="15" fill="rgb(210,56,11)"/><text x="447.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (4 samples, 0.77%)</title><rect x="444" y="196" width="9" height="15" fill="rgb(253,42,25)"/><text x="447.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="212" width="7" height="15" fill="rgb(213,182,40)"/><text x="449.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="228" width="7" height="15" fill="rgb(221,116,34)"/><text x="449.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="244" width="7" height="15" fill="rgb(205,139,8)"/><text x="449.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="260" width="7" height="15" fill="rgb(213,126,14)"/><text x="449.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="276" width="7" height="15" fill="rgb(249,147,26)"/><text x="449.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="292" width="7" height="15" fill="rgb(213,64,44)"/><text x="449.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="308" width="7" height="15" fill="rgb(253,169,11)"/><text x="449.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.58%)</title><rect x="446" y="324" width="7" height="15" fill="rgb(230,153,31)"/><text x="449.00" y="334.50"></text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="448" y="340" width="5" height="15" fill="rgb(229,185,15)"/><text x="451.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="448" y="356" width="5" height="15" fill="rgb(229,185,16)"/><text x="451.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.39%)</title><rect x="448" y="372" width="5" height="15" fill="rgb(226,206,50)"/><text x="451.00" y="382.50"></text></g><g><title>0x7f6868b46bc6 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="514" y="132" width="3" height="15" fill="rgb(219,186,9)"/><text x="517.00" y="142.50"></text></g><g><title>0x7f6868b46bd1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="517" y="132" width="2" height="15" fill="rgb(216,98,9)"/><text x="520.00" y="142.50"></text></g><g><title>0x7f6868b46bdf (libc-2.29.so) (2 samples, 0.39%)</title><rect x="519" y="132" width="4" height="15" fill="rgb(224,119,47)"/><text x="522.00" y="142.50"></text></g><g><title>0x7f6868b46c14 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="523" y="132" width="3" height="15" fill="rgb(212,216,0)"/><text x="526.00" y="142.50"></text></g><g><title>0x7f6868b46c20 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="526" y="132" width="2" height="15" fill="rgb(237,12,8)"/><text x="529.00" y="142.50"></text></g><g><title>0x7f6868b46c45 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="528" y="132" width="4" height="15" fill="rgb(254,202,52)"/><text x="531.00" y="142.50"></text></g><g><title>0x7f6868b46c49 (libc-2.29.so) (3 samples, 0.58%)</title><rect x="532" y="132" width="7" height="15" fill="rgb(209,228,28)"/><text x="535.00" y="142.50"></text></g><g><title>0x7f6868b47eb0 (libc-2.29.so) (12 samples, 2.31%)</title><rect x="514" y="116" width="28" height="15" fill="rgb(246,223,33)"/><text x="517.00" y="126.50">0..</text></g><g><title>0x7f6868b46ca7 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="539" y="132" width="3" height="15" fill="rgb(209,148,47)"/><text x="542.00" y="142.50"></text></g><g><title>0x7f6868b46b0e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="539" y="148" width="3" height="15" fill="rgb(232,211,33)"/><text x="542.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.19%)</title><rect x="544" y="164" width="2" height="15" fill="rgb(251,51,15)"/><text x="547.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (3 samples, 0.58%)</title><rect x="546" y="196" width="7" height="15" fill="rgb(218,185,53)"/><text x="549.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.39%)</title><rect x="548" y="212" width="5" height="15" fill="rgb(249,132,19)"/><text x="551.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="551" y="228" width="2" height="15" fill="rgb(241,53,53)"/><text x="554.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="560" y="292" width="2" height="15" fill="rgb(216,73,29)"/><text x="563.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="560" y="308" width="2" height="15" fill="rgb(215,20,5)"/><text x="563.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="560" y="324" width="2" height="15" fill="rgb(227,56,19)"/><text x="563.00" y="334.50"></text></g><g><title>0x7f6868b4910e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="560" y="340" width="2" height="15" fill="rgb(218,104,12)"/><text x="563.00" y="350.50"></text></g><g><title>onnxruntime::Cast&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(207,108,4)"/><text x="567.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="567" y="340" width="2" height="15" fill="rgb(249,176,26)"/><text x="570.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(205,43,42)"/><text x="570.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="569" y="340" width="2" height="15" fill="rgb(208,169,12)"/><text x="572.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="569" y="356" width="2" height="15" fill="rgb(232,1,28)"/><text x="572.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="569" y="372" width="2" height="15" fill="rgb(205,75,37)"/><text x="572.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="569" y="388" width="2" height="15" fill="rgb(233,218,52)"/><text x="572.00" y="398.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="569" y="404" width="2" height="15" fill="rgb(248,128,34)"/><text x="572.00" y="414.50"></text></g><g><title>0x7f6868b47a4d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="569" y="420" width="2" height="15" fill="rgb(228,23,16)"/><text x="572.00" y="430.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="356" width="2" height="15" fill="rgb(249,164,2)"/><text x="622.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="372" width="2" height="15" fill="rgb(218,14,44)"/><text x="622.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="388" width="2" height="15" fill="rgb(240,196,36)"/><text x="622.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="404" width="2" height="15" fill="rgb(252,106,26)"/><text x="622.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="420" width="2" height="15" fill="rgb(245,189,3)"/><text x="622.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="436" width="2" height="15" fill="rgb(249,166,27)"/><text x="622.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="619" y="452" width="2" height="15" fill="rgb(215,88,54)"/><text x="622.00" y="462.50"></text></g><g><title>0x7f6868b566d2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="619" y="468" width="2" height="15" fill="rgb(214,214,41)"/><text x="622.00" y="478.50"></text></g><g><title>0x7f6868b67d97 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="651" y="372" width="2" height="15" fill="rgb(207,81,26)"/><text x="654.00" y="382.50"></text></g><g><title>0x7f6868b67db3 (libc-2.29.so) (3 samples, 0.58%)</title><rect x="653" y="372" width="7" height="15" fill="rgb(212,17,2)"/><text x="656.00" y="382.50"></text></g><g><title>0x7f6868cc6e00 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="660" y="372" width="2" height="15" fill="rgb(219,8,8)"/><text x="663.00" y="382.50"></text></g><g><title>0x7f6868cc6e17 (libm-2.29.so) (2 samples, 0.39%)</title><rect x="662" y="372" width="5" height="15" fill="rgb(207,168,42)"/><text x="665.00" y="382.50"></text></g><g><title>0x7f6868cc6e2f (libm-2.29.so) (2 samples, 0.39%)</title><rect x="667" y="372" width="4" height="15" fill="rgb(230,92,18)"/><text x="670.00" y="382.50"></text></g><g><title>0x7f6868cc6e96 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="671" y="372" width="2" height="15" fill="rgb(234,188,17)"/><text x="674.00" y="382.50"></text></g><g><title>0x7f6868cc6ea2 (libm-2.29.so) (2 samples, 0.39%)</title><rect x="673" y="372" width="5" height="15" fill="rgb(243,28,19)"/><text x="676.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; [clone .constprop.182] (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 5.01%)</title><rect x="621" y="356" width="59" height="15" fill="rgb(211,57,9)"/><text x="624.00" y="366.50">onnxru..</text></g><g><title>0x7f6868cc6ea6 (libm-2.29.so) (1 samples, 0.19%)</title><rect x="678" y="372" width="2" height="15" fill="rgb(219,132,35)"/><text x="681.00" y="382.50"></text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (49 samples, 9.44%)</title><rect x="571" y="340" width="111" height="15" fill="rgb(238,200,53)"/><text x="574.00" y="350.50">onnxruntime::..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="680" y="356" width="2" height="15" fill="rgb(229,169,36)"/><text x="683.00" y="366.50"></text></g><g><title>onnxruntime::ml::Normalizer::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.12%)</title><rect x="682" y="340" width="25" height="15" fill="rgb(215,160,0)"/><text x="685.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::Normalizer::Normalize&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 2.12%)</title><rect x="682" y="356" width="25" height="15" fill="rgb(242,219,33)"/><text x="685.00" y="366.50">o..</text></g><g><title>0x7f6868b48b49 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="823" y="388" width="3" height="15" fill="rgb(240,63,15)"/><text x="826.00" y="398.50"></text></g><g><title>0x7f6868b48d27 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="826" y="388" width="2" height="15" fill="rgb(240,191,41)"/><text x="829.00" y="398.50"></text></g><g><title>0x7f6868b48d54 (libc-2.29.so) (3 samples, 0.58%)</title><rect x="828" y="388" width="7" height="15" fill="rgb(210,144,44)"/><text x="831.00" y="398.50"></text></g><g><title>0x7f6868b48d81 (libc-2.29.so) (2 samples, 0.39%)</title><rect x="835" y="388" width="4" height="15" fill="rgb(231,50,20)"/><text x="838.00" y="398.50"></text></g><g><title>0x7f6868b48d8d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="839" y="388" width="3" height="15" fill="rgb(238,135,50)"/><text x="842.00" y="398.50"></text></g><g><title>0x7f6868b48db4 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="842" y="388" width="2" height="15" fill="rgb(232,102,41)"/><text x="845.00" y="398.50"></text></g><g><title>0x7f6868b48dd2 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="844" y="388" width="2" height="15" fill="rgb(232,18,38)"/><text x="847.00" y="398.50"></text></g><g><title>0x7f6868b48dec (libc-2.29.so) (2 samples, 0.39%)</title><rect x="846" y="388" width="5" height="15" fill="rgb(217,155,51)"/><text x="849.00" y="398.50"></text></g><g><title>0x7f6868b48e07 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="851" y="388" width="2" height="15" fill="rgb(240,201,25)"/><text x="854.00" y="398.50"></text></g><g><title>0x7f6868b48f2a (libc-2.29.so) (1 samples, 0.19%)</title><rect x="853" y="388" width="2" height="15" fill="rgb(228,197,32)"/><text x="856.00" y="398.50"></text></g><g><title>0x7f6868b48fde (libc-2.29.so) (1 samples, 0.19%)</title><rect x="855" y="388" width="3" height="15" fill="rgb(254,82,54)"/><text x="858.00" y="398.50"></text></g><g><title>0x7f6868b49033 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="858" y="388" width="2" height="15" fill="rgb(247,34,29)"/><text x="861.00" y="398.50"></text></g><g><title>0x7f6868b49050 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="860" y="388" width="2" height="15" fill="rgb(251,137,17)"/><text x="863.00" y="398.50"></text></g><g><title>0x7f6868b49064 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="862" y="388" width="2" height="15" fill="rgb(253,111,14)"/><text x="865.00" y="398.50"></text></g><g><title>0x7f6868b4906d (libc-2.29.so) (1 samples, 0.19%)</title><rect x="864" y="388" width="3" height="15" fill="rgb(236,168,13)"/><text x="867.00" y="398.50"></text></g><g><title>0x7f6868b49368 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="867" y="388" width="2" height="15" fill="rgb(214,95,10)"/><text x="870.00" y="398.50"></text></g><g><title>0x7f6868b493ae (libc-2.29.so) (1 samples, 0.19%)</title><rect x="869" y="388" width="2" height="15" fill="rgb(236,30,53)"/><text x="872.00" y="398.50"></text></g><g><title>0x7f6868b493d1 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="871" y="388" width="2" height="15" fill="rgb(238,30,1)"/><text x="874.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (63 samples, 12.14%)</title><rect x="733" y="356" width="143" height="15" fill="rgb(210,76,6)"/><text x="736.00" y="366.50">operator new (libs..</text></g><g><title>malloc (libc-2.29.so) (62 samples, 11.95%)</title><rect x="735" y="372" width="141" height="15" fill="rgb(232,189,29)"/><text x="738.00" y="382.50">malloc (libc-2.29..</text></g><g><title>0x7f6868b493e0 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="873" y="388" width="3" height="15" fill="rgb(243,98,42)"/><text x="876.00" y="398.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_hint_unique_pos [clone .localalias.55] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.77%)</title><rect x="876" y="356" width="9" height="15" fill="rgb(222,90,34)"/><text x="879.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_get_insert_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="883" y="372" width="2" height="15" fill="rgb(211,121,4)"/><text x="886.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="885" y="356" width="4" height="15" fill="rgb(248,207,37)"/><text x="888.00" y="366.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (148 samples, 28.52%)</title><rect x="562" y="324" width="336" height="15" fill="rgb(213,169,40)"/><text x="565.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onn..</text></g><g><title>onnxruntime::ml::ZipMapOp::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (84 samples, 16.18%)</title><rect x="707" y="340" width="191" height="15" fill="rgb(231,36,14)"/><text x="710.00" y="350.50">onnxruntime::ml::ZipMapO..</text></g><g><title>std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.77%)</title><rect x="889" y="356" width="9" height="15" fill="rgb(205,92,52)"/><text x="892.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 28.90%)</title><rect x="560" y="260" width="341" height="15" fill="rgb(205,4,38)"/><text x="563.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (150 samples, 28.90%)</title><rect x="560" y="276" width="341" height="15" fill="rgb(235,121,27)"/><text x="563.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.71%)</title><rect x="562" y="292" width="339" height="15" fill="rgb(253,68,44)"/><text x="565.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (149 samples, 28.71%)</title><rect x="562" y="308" width="339" height="15" fill="rgb(208,212,5)"/><text x="565.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrun..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="898" y="324" width="3" height="15" fill="rgb(212,139,6)"/><text x="901.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="898" y="340" width="3" height="15" fill="rgb(230,97,16)"/><text x="901.00" y="350.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="901" y="260" width="2" height="15" fill="rgb(237,207,45)"/><text x="904.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="901" y="276" width="2" height="15" fill="rgb(224,218,13)"/><text x="904.00" y="286.50"></text></g><g><title>0x7f6828b7e8e0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1026" y="276" width="2" height="15" fill="rgb(242,37,19)"/><text x="1029.00" y="286.50"></text></g><g><title>pybind11::dict::dict (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 5.59%)</title><rect x="1028" y="276" width="66" height="15" fill="rgb(249,60,2)"/><text x="1031.00" y="286.50">pybind1..</text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, long, float&gt;::cast&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; const&amp;&gt; [clone .constprop.360] (onnxruntime/capi/onnxruntime_pybind11_state.so) (86 samples, 16.57%)</title><rect x="903" y="260" width="196" height="15" fill="rgb(214,59,5)"/><text x="906.00" y="270.50">pybind11::detail::map_cas..</text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (2 samples, 0.39%)</title><rect x="1094" y="276" width="5" height="15" fill="rgb(229,67,0)"/><text x="1097.00" y="286.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1099" y="260" width="2" height="15" fill="rgb(218,51,52)"/><text x="1102.00" y="270.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1099" y="276" width="2" height="15" fill="rgb(210,104,30)"/><text x="1102.00" y="286.50"></text></g><g><title>0x7f6868b68103 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1099" y="292" width="2" height="15" fill="rgb(224,193,28)"/><text x="1102.00" y="302.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.19%)</title><rect x="1101" y="260" width="2" height="15" fill="rgb(232,70,34)"/><text x="1104.00" y="270.50"></text></g><g><title>0x7f6868b4791e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1105" y="292" width="3" height="15" fill="rgb(231,78,15)"/><text x="1108.00" y="302.50"></text></g><g><title>0x7f6868b4792c (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1108" y="292" width="2" height="15" fill="rgb(221,176,22)"/><text x="1111.00" y="302.50"></text></g><g><title>0x7f6868b47971 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1110" y="292" width="2" height="15" fill="rgb(218,128,1)"/><text x="1113.00" y="302.50"></text></g><g><title>0x7f6868b4799b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1112" y="292" width="2" height="15" fill="rgb(222,156,44)"/><text x="1115.00" y="302.50"></text></g><g><title>0x7f6868b479d3 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1114" y="292" width="3" height="15" fill="rgb(234,36,31)"/><text x="1117.00" y="302.50"></text></g><g><title>0x7f6868b479ff (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1117" y="292" width="2" height="15" fill="rgb(207,121,2)"/><text x="1120.00" y="302.50"></text></g><g><title>0x7f6868b47a4b (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1119" y="292" width="2" height="15" fill="rgb(235,81,20)"/><text x="1122.00" y="302.50"></text></g><g><title>0x7f6868b47d07 (libc-2.29.so) (11 samples, 2.12%)</title><rect x="1121" y="292" width="25" height="15" fill="rgb(250,7,48)"/><text x="1124.00" y="302.50">0..</text></g><g><title>0x7f6868b4790e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1149" y="308" width="2" height="15" fill="rgb(231,3,22)"/><text x="1152.00" y="318.50"></text></g><g><title>0x7f6868b4791e (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1151" y="308" width="2" height="15" fill="rgb(222,119,22)"/><text x="1154.00" y="318.50"></text></g><g><title>0x7f6868b47961 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1153" y="308" width="2" height="15" fill="rgb(218,121,28)"/><text x="1156.00" y="318.50"></text></g><g><title>0x7f6868b479ed (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1155" y="308" width="3" height="15" fill="rgb(218,67,26)"/><text x="1158.00" y="318.50"></text></g><g><title>0x7f6868b47d07 (libc-2.29.so) (7 samples, 1.35%)</title><rect x="1158" y="308" width="16" height="15" fill="rgb(253,132,41)"/><text x="1161.00" y="318.50"></text></g><g><title>0x7f6868b47d13 (libc-2.29.so) (1 samples, 0.19%)</title><rect x="1174" y="308" width="2" height="15" fill="rgb(249,59,36)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (276 samples, 53.18%)</title><rect x="553" y="244" width="627" height="15" fill="rgb(238,26,7)"/><text x="556.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::Inferen..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 6.55%)</title><rect x="1103" y="260" width="77" height="15" fill="rgb(230,125,50)"/><text x="1106.00" y="270.50">std::vec..</text></g><g><title>onnxruntime::NonTensorType&lt;std::vector&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;, std::allocator&lt;std::map&lt;long, float, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt; &gt; &gt; &gt;::Delete (onnxruntime/capi/onnxruntime_pybind11_state.so) (34 samples, 6.55%)</title><rect x="1103" y="276" width="77" height="15" fill="rgb(226,55,39)"/><text x="1106.00" y="286.50">onnxrunt..</text></g><g><title>std::_Rb_tree&lt;long, std::pair&lt;long const, float&gt;, std::_Select1st&lt;std::pair&lt;long const, float&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, float&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.89%)</title><rect x="1146" y="292" width="34" height="15" fill="rgb(232,177,22)"/><text x="1149.00" y="302.50">st..</text></g><g><title>std::_Rb_tree&lt;unsigned long, std::pair&lt;unsigned long const, OrtMemType&gt;, std::_Select1st&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, OrtMemType&gt; &gt; &gt;::_M_erase [clone .localalias.69] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.39%)</title><rect x="1176" y="308" width="4" height="15" fill="rgb(228,136,13)"/><text x="1179.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(211,110,47)"/><text x="1183.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(209,41,31)"/><text x="1183.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(249,44,39)"/><text x="1183.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (281 samples, 54.14%)</title><rect x="546" y="164" width="639" height="15" fill="rgb(230,150,13)"/><text x="549.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (281 samples, 54.14%)</title><rect x="546" y="180" width="639" height="15" fill="rgb(219,29,48)"/><text x="549.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (278 samples, 53.56%)</title><rect x="553" y="196" width="632" height="15" fill="rgb(234,78,1)"/><text x="556.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 53.56%)</title><rect x="553" y="212" width="632" height="15" fill="rgb(212,18,49)"/><text x="556.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (278 samples, 53.56%)</title><rect x="553" y="228" width="632" height="15" fill="rgb(228,24,37)"/><text x="556.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11:..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.19%)</title><rect x="1183" y="244" width="2" height="15" fill="rgb(226,228,20)"/><text x="1186.00" y="254.50"></text></g><g><title>all (519 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,188,51)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:52) (332 samples, 63.97%)</title><rect x="435" y="52" width="755" height="15" fill="rgb(205,18,48)"/><text x="438.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:52)</text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:51) (332 samples, 63.97%)</title><rect x="435" y="68" width="755" height="15" fill="rgb(232,76,34)"/><text x="438.00" y="78.50">profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:51)</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:29) (332 samples, 63.97%)</title><rect x="435" y="84" width="755" height="15" fill="rgb(248,130,0)"/><text x="438.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:29)</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:23) (324 samples, 62.43%)</title><rect x="453" y="100" width="737" height="15" fill="rgb(250,24,52)"/><text x="456.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1000_4_12_float_.py:23)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (285 samples, 54.91%)</title><rect x="542" y="116" width="648" height="15" fill="rgb(254,174,39)"/><text x="545.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231) (285 samples, 54.91%)</title><rect x="542" y="132" width="648" height="15" fill="rgb(238,93,0)"/><text x="545.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:231)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (284 samples, 54.72%)</title><rect x="544" y="148" width="646" height="15" fill="rgb(223,43,4)"/><text x="547.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.39%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(234,133,44)"/><text x="1188.00" y="174.50"></text></g></g></svg>