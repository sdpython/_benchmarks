<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2406" onload="init(evt)" viewBox="0 0 1200 2406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2406" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2389.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2389.00"> </text><g id="frames"><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(230,40,46)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(240,194,4)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(208,119,9)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(253,53,17)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(245,116,0)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.62%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(234,191,50)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(216,189,27)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(208,173,17)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="10" y="964" width="7" height="15" fill="rgb(216,113,14)"/><text x="13.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(206,224,26)"/><text x="16.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(239,139,50)"/><text x="16.00" y="1006.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.31%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(254,105,23)"/><text x="16.00" y="1022.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="932" width="4" height="15" fill="rgb(221,179,21)"/><text x="23.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="948" width="4" height="15" fill="rgb(238,29,42)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="20" y="964" width="4" height="15" fill="rgb(243,129,19)"/><text x="23.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="20" y="980" width="4" height="15" fill="rgb(226,42,36)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="20" y="996" width="4" height="15" fill="rgb(237,212,8)"/><text x="23.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="20" y="1012" width="4" height="15" fill="rgb(235,79,5)"/><text x="23.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="20" y="1028" width="4" height="15" fill="rgb(232,174,51)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="836" width="18" height="15" fill="rgb(232,228,23)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.55%)</title><rect x="10" y="852" width="18" height="15" fill="rgb(254,60,8)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="868" width="11" height="15" fill="rgb(227,60,51)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="884" width="11" height="15" fill="rgb(254,49,2)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="900" width="11" height="15" fill="rgb(243,141,2)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.93%)</title><rect x="17" y="916" width="11" height="15" fill="rgb(223,113,13)"/><text x="20.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(223,136,24)"/><text x="27.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(205,133,37)"/><text x="27.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.86%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(222,158,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(247,159,5)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(235,163,35)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(239,6,36)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(211,132,27)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(211,13,5)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.86%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(229,202,52)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(245,76,7)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(205,8,18)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(254,75,33)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(207,108,29)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(245,41,33)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.86%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(217,74,52)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(253,86,28)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(218,222,25)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(234,138,15)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(224,60,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(207,180,39)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.86%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(225,184,27)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="596" width="21" height="15" fill="rgb(249,43,12)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="612" width="21" height="15" fill="rgb(206,74,27)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="628" width="21" height="15" fill="rgb(207,82,44)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="644" width="21" height="15" fill="rgb(250,115,14)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="660" width="21" height="15" fill="rgb(211,224,0)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="676" width="21" height="15" fill="rgb(214,26,0)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="10" y="692" width="21" height="15" fill="rgb(225,225,1)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="708" width="21" height="15" fill="rgb(236,196,6)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.86%)</title><rect x="10" y="724" width="21" height="15" fill="rgb(221,191,46)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="740" width="21" height="15" fill="rgb(251,22,1)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="756" width="21" height="15" fill="rgb(222,188,35)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="772" width="21" height="15" fill="rgb(248,170,22)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="10" y="788" width="21" height="15" fill="rgb(220,202,46)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="10" y="804" width="21" height="15" fill="rgb(227,123,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.86%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(210,25,54)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(242,2,33)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(244,87,30)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(210,11,49)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(245,204,3)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(241,89,28)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.31%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(222,115,52)"/><text x="31.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.31%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(220,203,30)"/><text x="31.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.31%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(251,141,45)"/><text x="31.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.31%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(211,76,3)"/><text x="31.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(248,207,8)"/><text x="31.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(222,176,27)"/><text x="31.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(226,44,15)"/><text x="31.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(212,188,19)"/><text x="31.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(212,169,1)"/><text x="31.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(248,116,0)"/><text x="31.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(205,183,10)"/><text x="31.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(219,105,38)"/><text x="31.00" y="1102.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1108" width="3" height="15" fill="rgb(216,147,49)"/><text x="31.00" y="1118.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.31%)</title><rect x="28" y="1124" width="3" height="15" fill="rgb(244,189,7)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(226,70,26)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(213,132,39)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(231,87,51)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(220,162,22)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.17%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(211,185,22)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.17%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(247,3,32)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="292" width="4" height="15" fill="rgb(223,189,12)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="308" width="4" height="15" fill="rgb(247,67,30)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="324" width="4" height="15" fill="rgb(235,100,14)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="340" width="4" height="15" fill="rgb(221,155,40)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="356" width="4" height="15" fill="rgb(209,122,34)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="372" width="4" height="15" fill="rgb(217,183,24)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.31%)</title><rect x="31" y="388" width="4" height="15" fill="rgb(246,143,29)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="404" width="4" height="15" fill="rgb(217,27,11)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="420" width="4" height="15" fill="rgb(242,218,43)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="436" width="4" height="15" fill="rgb(219,185,14)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="452" width="4" height="15" fill="rgb(212,36,50)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="468" width="4" height="15" fill="rgb(231,116,7)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="484" width="4" height="15" fill="rgb(225,3,32)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="500" width="4" height="15" fill="rgb(223,146,35)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="516" width="4" height="15" fill="rgb(244,72,7)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="532" width="4" height="15" fill="rgb(214,225,5)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="548" width="4" height="15" fill="rgb(252,192,32)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="564" width="4" height="15" fill="rgb(205,66,1)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.31%)</title><rect x="31" y="580" width="4" height="15" fill="rgb(208,208,40)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="596" width="4" height="15" fill="rgb(216,99,27)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="612" width="4" height="15" fill="rgb(220,124,47)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="628" width="4" height="15" fill="rgb(239,35,19)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="644" width="4" height="15" fill="rgb(216,104,44)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="660" width="4" height="15" fill="rgb(228,70,17)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="676" width="4" height="15" fill="rgb(212,122,23)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="692" width="4" height="15" fill="rgb(243,177,11)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="708" width="4" height="15" fill="rgb(254,54,42)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(220,124,5)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(244,129,42)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(215,28,17)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.31%)</title><rect x="31" y="772" width="4" height="15" fill="rgb(209,165,36)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(247,36,27)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(232,84,32)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(226,172,39)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(222,117,43)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(221,216,31)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(216,225,29)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(235,209,52)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(219,159,17)"/><text x="34.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(209,62,41)"/><text x="34.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="932" width="4" height="15" fill="rgb(245,181,31)"/><text x="34.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="948" width="4" height="15" fill="rgb(206,156,3)"/><text x="34.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.31%)</title><rect x="31" y="964" width="4" height="15" fill="rgb(228,176,11)"/><text x="34.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="980" width="4" height="15" fill="rgb(243,68,37)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="996" width="4" height="15" fill="rgb(232,107,46)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1012" width="4" height="15" fill="rgb(246,122,20)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1028" width="4" height="15" fill="rgb(250,27,33)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1044" width="4" height="15" fill="rgb(234,112,34)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="1060" width="4" height="15" fill="rgb(238,45,41)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1076" width="4" height="15" fill="rgb(216,11,50)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.31%)</title><rect x="31" y="1092" width="4" height="15" fill="rgb(205,146,33)"/><text x="34.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1108" width="4" height="15" fill="rgb(230,61,30)"/><text x="34.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(209,169,11)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(239,8,15)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(250,185,19)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(212,66,24)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(233,68,23)"/><text x="34.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(254,211,17)"/><text x="34.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(231,56,3)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(208,202,4)"/><text x="34.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(249,223,9)"/><text x="34.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1268" width="4" height="15" fill="rgb(236,42,52)"/><text x="34.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="1284" width="4" height="15" fill="rgb(242,72,30)"/><text x="34.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1300" width="4" height="15" fill="rgb(207,47,2)"/><text x="34.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/basic.py) (1 samples, 0.31%)</title><rect x="31" y="1316" width="4" height="15" fill="rgb(226,46,4)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1332" width="4" height="15" fill="rgb(254,83,23)"/><text x="34.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1348" width="4" height="15" fill="rgb(236,111,11)"/><text x="34.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1364" width="4" height="15" fill="rgb(232,59,11)"/><text x="34.00" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1380" width="4" height="15" fill="rgb(236,78,29)"/><text x="34.00" y="1390.50"></text></g><g><title>_new_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="1396" width="4" height="15" fill="rgb(252,105,24)"/><text x="34.00" y="1406.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="1300" width="4" height="15" fill="rgb(207,1,15)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1316" width="4" height="15" fill="rgb(223,0,49)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1332" width="4" height="15" fill="rgb(205,107,42)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1348" width="4" height="15" fill="rgb(236,11,6)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1364" width="4" height="15" fill="rgb(207,98,17)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1380" width="4" height="15" fill="rgb(212,33,46)"/><text x="38.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.31%)</title><rect x="35" y="1396" width="4" height="15" fill="rgb(219,169,49)"/><text x="38.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1412" width="4" height="15" fill="rgb(212,206,33)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1428" width="4" height="15" fill="rgb(216,179,9)"/><text x="38.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1444" width="4" height="15" fill="rgb(217,154,51)"/><text x="38.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1460" width="4" height="15" fill="rgb(253,25,1)"/><text x="38.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1476" width="4" height="15" fill="rgb(252,5,47)"/><text x="38.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.31%)</title><rect x="35" y="1492" width="4" height="15" fill="rgb(218,59,49)"/><text x="38.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1508" width="4" height="15" fill="rgb(251,61,29)"/><text x="38.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1524" width="4" height="15" fill="rgb(223,147,52)"/><text x="38.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1540" width="4" height="15" fill="rgb(254,9,42)"/><text x="38.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1556" width="4" height="15" fill="rgb(218,87,12)"/><text x="38.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1572" width="4" height="15" fill="rgb(249,111,28)"/><text x="38.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1588" width="4" height="15" fill="rgb(240,92,9)"/><text x="38.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1604" width="4" height="15" fill="rgb(219,162,4)"/><text x="38.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="1620" width="4" height="15" fill="rgb(252,192,50)"/><text x="38.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1636" width="4" height="15" fill="rgb(211,198,16)"/><text x="38.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1652" width="4" height="15" fill="rgb(231,208,32)"/><text x="38.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1668" width="4" height="15" fill="rgb(226,175,51)"/><text x="38.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1684" width="4" height="15" fill="rgb(233,57,40)"/><text x="38.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1700" width="4" height="15" fill="rgb(251,136,24)"/><text x="38.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py) (1 samples, 0.31%)</title><rect x="35" y="1716" width="4" height="15" fill="rgb(243,121,11)"/><text x="38.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1732" width="4" height="15" fill="rgb(222,73,2)"/><text x="38.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1748" width="4" height="15" fill="rgb(234,176,32)"/><text x="38.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1764" width="4" height="15" fill="rgb(231,30,34)"/><text x="38.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1780" width="4" height="15" fill="rgb(231,108,34)"/><text x="38.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1796" width="4" height="15" fill="rgb(241,53,40)"/><text x="38.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="1812" width="4" height="15" fill="rgb(205,90,12)"/><text x="38.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1828" width="4" height="15" fill="rgb(244,95,38)"/><text x="38.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1844" width="4" height="15" fill="rgb(237,84,5)"/><text x="38.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1860" width="4" height="15" fill="rgb(232,144,47)"/><text x="38.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1876" width="4" height="15" fill="rgb(205,174,31)"/><text x="38.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1892" width="4" height="15" fill="rgb(233,187,2)"/><text x="38.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_t_sne.py) (1 samples, 0.31%)</title><rect x="35" y="1908" width="4" height="15" fill="rgb(213,127,25)"/><text x="38.00" y="1918.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1924" width="4" height="15" fill="rgb(221,200,50)"/><text x="38.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1940" width="4" height="15" fill="rgb(206,213,8)"/><text x="38.00" y="1950.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1956" width="4" height="15" fill="rgb(241,168,48)"/><text x="38.00" y="1966.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1972" width="4" height="15" fill="rgb(241,0,35)"/><text x="38.00" y="1982.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1988" width="4" height="15" fill="rgb(229,222,36)"/><text x="38.00" y="1998.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2004" width="4" height="15" fill="rgb(210,209,34)"/><text x="38.00" y="2014.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2020" width="4" height="15" fill="rgb(217,157,46)"/><text x="38.00" y="2030.50"></text></g><g><title>0x7fdc826d4d1a (?) (1 samples, 0.31%)</title><rect x="35" y="2036" width="4" height="15" fill="rgb(250,124,25)"/><text x="38.00" y="2046.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2052" width="4" height="15" fill="rgb(236,19,14)"/><text x="38.00" y="2062.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2068" width="4" height="15" fill="rgb(236,213,4)"/><text x="38.00" y="2078.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2084" width="4" height="15" fill="rgb(234,106,21)"/><text x="38.00" y="2094.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2100" width="4" height="15" fill="rgb(216,172,11)"/><text x="38.00" y="2110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2116" width="4" height="15" fill="rgb(247,51,14)"/><text x="38.00" y="2126.50"></text></g><g><title>0x7fdc82497195 (?) (1 samples, 0.31%)</title><rect x="35" y="2132" width="4" height="15" fill="rgb(208,100,31)"/><text x="38.00" y="2142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2148" width="4" height="15" fill="rgb(231,1,14)"/><text x="38.00" y="2158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2164" width="4" height="15" fill="rgb(209,105,11)"/><text x="38.00" y="2174.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2180" width="4" height="15" fill="rgb(232,6,18)"/><text x="38.00" y="2190.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2196" width="4" height="15" fill="rgb(241,136,21)"/><text x="38.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2212" width="4" height="15" fill="rgb(206,20,18)"/><text x="38.00" y="2222.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="2228" width="4" height="15" fill="rgb(231,197,33)"/><text x="38.00" y="2238.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2244" width="4" height="15" fill="rgb(241,16,15)"/><text x="38.00" y="2254.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2260" width="4" height="15" fill="rgb(241,178,23)"/><text x="38.00" y="2270.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2276" width="4" height="15" fill="rgb(234,159,47)"/><text x="38.00" y="2286.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2292" width="4" height="15" fill="rgb(222,175,49)"/><text x="38.00" y="2302.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2308" width="4" height="15" fill="rgb(216,121,14)"/><text x="38.00" y="2318.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="2324" width="4" height="15" fill="rgb(235,218,33)"/><text x="38.00" y="2334.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.31%)</title><rect x="35" y="2340" width="4" height="15" fill="rgb(205,185,44)"/><text x="38.00" y="2350.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.31%)</title><rect x="35" y="2356" width="4" height="15" fill="rgb(221,193,25)"/><text x="38.00" y="2366.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.62%)</title><rect x="35" y="1204" width="7" height="15" fill="rgb(207,206,30)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1220" width="7" height="15" fill="rgb(250,59,50)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1236" width="7" height="15" fill="rgb(242,217,46)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1252" width="7" height="15" fill="rgb(231,9,28)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="35" y="1268" width="7" height="15" fill="rgb(253,163,4)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="35" y="1284" width="7" height="15" fill="rgb(214,105,43)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(245,125,32)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(225,112,53)"/><text x="42.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(253,45,19)"/><text x="42.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(242,148,32)"/><text x="42.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(243,16,12)"/><text x="42.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(209,211,3)"/><text x="42.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.31%)</title><rect x="39" y="1396" width="3" height="15" fill="rgb(236,188,46)"/><text x="42.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1412" width="3" height="15" fill="rgb(232,14,21)"/><text x="42.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1428" width="3" height="15" fill="rgb(230,164,51)"/><text x="42.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1444" width="3" height="15" fill="rgb(235,57,54)"/><text x="42.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1460" width="3" height="15" fill="rgb(254,50,44)"/><text x="42.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1476" width="3" height="15" fill="rgb(214,75,31)"/><text x="42.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.31%)</title><rect x="39" y="1492" width="3" height="15" fill="rgb(239,148,19)"/><text x="42.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1508" width="3" height="15" fill="rgb(233,158,40)"/><text x="42.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1524" width="3" height="15" fill="rgb(212,111,9)"/><text x="42.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1540" width="3" height="15" fill="rgb(232,19,22)"/><text x="42.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="39" y="1556" width="3" height="15" fill="rgb(250,9,24)"/><text x="42.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="39" y="1572" width="3" height="15" fill="rgb(218,169,46)"/><text x="42.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_factor_analysis.py) (1 samples, 0.31%)</title><rect x="39" y="1588" width="3" height="15" fill="rgb(241,53,54)"/><text x="42.00" y="1598.50"></text></g><g><title>FactorAnalysis (sklearn/decomposition/_factor_analysis.py) (1 samples, 0.31%)</title><rect x="39" y="1604" width="3" height="15" fill="rgb(236,156,20)"/><text x="42.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="484" width="11" height="15" fill="rgb(248,17,43)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="500" width="11" height="15" fill="rgb(248,4,13)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="516" width="11" height="15" fill="rgb(242,130,45)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="532" width="11" height="15" fill="rgb(208,54,20)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="548" width="11" height="15" fill="rgb(248,156,44)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="564" width="11" height="15" fill="rgb(231,34,6)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="580" width="11" height="15" fill="rgb(246,174,27)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="596" width="11" height="15" fill="rgb(209,81,24)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="612" width="11" height="15" fill="rgb(214,58,16)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="628" width="11" height="15" fill="rgb(244,91,52)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="644" width="11" height="15" fill="rgb(214,4,48)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="660" width="11" height="15" fill="rgb(247,226,33)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.93%)</title><rect x="35" y="676" width="11" height="15" fill="rgb(237,168,23)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="692" width="11" height="15" fill="rgb(212,120,7)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="708" width="11" height="15" fill="rgb(223,148,29)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="724" width="11" height="15" fill="rgb(222,42,25)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="740" width="11" height="15" fill="rgb(218,124,36)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="756" width="11" height="15" fill="rgb(209,2,36)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="772" width="11" height="15" fill="rgb(209,180,22)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="788" width="11" height="15" fill="rgb(241,75,37)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="804" width="11" height="15" fill="rgb(252,206,21)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="820" width="11" height="15" fill="rgb(205,52,45)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="836" width="11" height="15" fill="rgb(212,118,15)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="852" width="11" height="15" fill="rgb(221,212,54)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.93%)</title><rect x="35" y="868" width="11" height="15" fill="rgb(237,150,14)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="884" width="11" height="15" fill="rgb(214,67,5)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="900" width="11" height="15" fill="rgb(251,74,28)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="916" width="11" height="15" fill="rgb(238,94,50)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="932" width="11" height="15" fill="rgb(249,65,54)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="948" width="11" height="15" fill="rgb(234,12,3)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="964" width="11" height="15" fill="rgb(208,142,16)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="980" width="11" height="15" fill="rgb(238,176,54)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="996" width="11" height="15" fill="rgb(254,214,43)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.93%)</title><rect x="35" y="1012" width="11" height="15" fill="rgb(249,21,10)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1028" width="11" height="15" fill="rgb(222,138,31)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1044" width="11" height="15" fill="rgb(213,19,12)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1060" width="11" height="15" fill="rgb(235,56,30)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="1076" width="11" height="15" fill="rgb(214,56,39)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1092" width="11" height="15" fill="rgb(230,156,42)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.93%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(230,180,1)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1124" width="11" height="15" fill="rgb(238,120,11)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1140" width="11" height="15" fill="rgb(231,211,2)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1156" width="11" height="15" fill="rgb(227,61,21)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="35" y="1172" width="11" height="15" fill="rgb(232,140,27)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="35" y="1188" width="11" height="15" fill="rgb(235,54,9)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(244,46,31)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(228,38,5)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1236" width="4" height="15" fill="rgb(208,31,30)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1252" width="4" height="15" fill="rgb(242,214,37)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="42" y="1268" width="4" height="15" fill="rgb(237,13,45)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="42" y="1284" width="4" height="15" fill="rgb(244,130,6)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="42" y="1300" width="4" height="15" fill="rgb(239,218,20)"/><text x="45.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="42" y="1316" width="4" height="15" fill="rgb(232,78,50)"/><text x="45.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.31%)</title><rect x="42" y="1332" width="4" height="15" fill="rgb(229,53,39)"/><text x="45.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.31%)</title><rect x="42" y="1348" width="4" height="15" fill="rgb(210,32,14)"/><text x="45.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.31%)</title><rect x="42" y="1364" width="4" height="15" fill="rgb(217,35,13)"/><text x="45.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.31%)</title><rect x="42" y="1380" width="4" height="15" fill="rgb(230,181,5)"/><text x="45.00" y="1390.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="660" width="4" height="15" fill="rgb(237,111,16)"/><text x="49.00" y="670.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="46" y="676" width="4" height="15" fill="rgb(216,208,50)"/><text x="49.00" y="686.50"></text></g><g><title>&lt;module&gt; (dateutil/__init__.py) (1 samples, 0.31%)</title><rect x="50" y="724" width="3" height="15" fill="rgb(240,43,54)"/><text x="53.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="740" width="3" height="15" fill="rgb(254,21,23)"/><text x="53.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="756" width="3" height="15" fill="rgb(213,204,9)"/><text x="53.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="50" y="772" width="3" height="15" fill="rgb(220,121,5)"/><text x="53.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="788" width="3" height="15" fill="rgb(236,38,23)"/><text x="53.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="804" width="3" height="15" fill="rgb(249,122,48)"/><text x="53.00" y="814.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="50" y="820" width="3" height="15" fill="rgb(225,55,22)"/><text x="53.00" y="830.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="50" y="836" width="3" height="15" fill="rgb(250,97,40)"/><text x="53.00" y="846.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.31%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(227,169,12)"/><text x="56.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(242,204,33)"/><text x="56.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(223,197,3)"/><text x="56.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(205,34,37)"/><text x="56.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(219,211,7)"/><text x="56.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(212,59,29)"/><text x="56.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(218,82,23)"/><text x="56.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(228,61,27)"/><text x="56.00" y="1246.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(230,130,33)"/><text x="56.00" y="1262.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(215,122,20)"/><text x="56.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1540" width="4" height="15" fill="rgb(230,168,31)"/><text x="60.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1556" width="4" height="15" fill="rgb(253,96,28)"/><text x="60.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1572" width="4" height="15" fill="rgb(254,200,2)"/><text x="60.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1588" width="4" height="15" fill="rgb(224,179,29)"/><text x="60.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="57" y="1604" width="4" height="15" fill="rgb(230,44,19)"/><text x="60.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="57" y="1620" width="4" height="15" fill="rgb(241,128,22)"/><text x="60.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="1636" width="4" height="15" fill="rgb(205,207,3)"/><text x="60.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="1652" width="4" height="15" fill="rgb(250,173,47)"/><text x="60.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="1668" width="4" height="15" fill="rgb(227,150,31)"/><text x="60.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="1684" width="4" height="15" fill="rgb(208,65,31)"/><text x="60.00" y="1694.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.31%)</title><rect x="57" y="1700" width="4" height="15" fill="rgb(206,2,31)"/><text x="60.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="57" y="1716" width="4" height="15" fill="rgb(228,44,12)"/><text x="60.00" y="1726.50"></text></g><g><title>validate_font_properties (matplotlib/rcsetup.py) (1 samples, 0.31%)</title><rect x="57" y="1732" width="4" height="15" fill="rgb(236,30,19)"/><text x="60.00" y="1742.50"></text></g><g><title>parse (matplotlib/fontconfig_pattern.py) (1 samples, 0.31%)</title><rect x="57" y="1748" width="4" height="15" fill="rgb(206,84,27)"/><text x="60.00" y="1758.50"></text></g><g><title>resetCache (pyparsing.py) (1 samples, 0.31%)</title><rect x="57" y="1764" width="4" height="15" fill="rgb(232,190,10)"/><text x="60.00" y="1774.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.93%)</title><rect x="53" y="724" width="11" height="15" fill="rgb(247,59,54)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="740" width="11" height="15" fill="rgb(228,47,7)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="756" width="11" height="15" fill="rgb(218,200,13)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="772" width="11" height="15" fill="rgb(207,95,40)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="53" y="788" width="11" height="15" fill="rgb(244,72,35)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="804" width="11" height="15" fill="rgb(223,60,15)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.93%)</title><rect x="53" y="820" width="11" height="15" fill="rgb(208,120,3)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="836" width="11" height="15" fill="rgb(247,118,27)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="852" width="11" height="15" fill="rgb(252,198,15)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="868" width="11" height="15" fill="rgb(215,138,42)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="53" y="884" width="11" height="15" fill="rgb(248,226,43)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="900" width="11" height="15" fill="rgb(247,37,0)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.93%)</title><rect x="53" y="916" width="11" height="15" fill="rgb(221,170,17)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="932" width="11" height="15" fill="rgb(242,27,22)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="948" width="11" height="15" fill="rgb(253,81,23)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="964" width="11" height="15" fill="rgb(228,2,28)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="53" y="980" width="11" height="15" fill="rgb(219,229,50)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="996" width="11" height="15" fill="rgb(235,185,4)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.93%)</title><rect x="53" y="1012" width="11" height="15" fill="rgb(241,175,1)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="1028" width="11" height="15" fill="rgb(245,211,38)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="1044" width="11" height="15" fill="rgb(231,197,1)"/><text x="56.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="1060" width="11" height="15" fill="rgb(249,209,12)"/><text x="56.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="53" y="1076" width="11" height="15" fill="rgb(207,54,13)"/><text x="56.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="53" y="1092" width="11" height="15" fill="rgb(211,92,36)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.93%)</title><rect x="53" y="1108" width="11" height="15" fill="rgb(223,207,48)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1124" width="7" height="15" fill="rgb(237,83,7)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1140" width="7" height="15" fill="rgb(210,106,27)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1156" width="7" height="15" fill="rgb(240,44,28)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="57" y="1172" width="7" height="15" fill="rgb(225,56,21)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1188" width="7" height="15" fill="rgb(229,206,9)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.62%)</title><rect x="57" y="1204" width="7" height="15" fill="rgb(234,207,0)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1220" width="7" height="15" fill="rgb(250,194,18)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1236" width="7" height="15" fill="rgb(253,58,19)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1252" width="7" height="15" fill="rgb(215,5,20)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="57" y="1268" width="7" height="15" fill="rgb(207,124,11)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1284" width="7" height="15" fill="rgb(205,85,46)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.62%)</title><rect x="57" y="1300" width="7" height="15" fill="rgb(218,161,17)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1316" width="7" height="15" fill="rgb(210,86,28)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1332" width="7" height="15" fill="rgb(223,125,38)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1348" width="7" height="15" fill="rgb(225,223,17)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="57" y="1364" width="7" height="15" fill="rgb(214,211,25)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1380" width="7" height="15" fill="rgb(239,191,25)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.62%)</title><rect x="57" y="1396" width="7" height="15" fill="rgb(223,133,28)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1412" width="7" height="15" fill="rgb(225,99,22)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1428" width="7" height="15" fill="rgb(205,3,8)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1444" width="7" height="15" fill="rgb(236,117,30)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="57" y="1460" width="7" height="15" fill="rgb(241,46,34)"/><text x="60.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1476" width="7" height="15" fill="rgb(207,82,4)"/><text x="60.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.62%)</title><rect x="57" y="1492" width="7" height="15" fill="rgb(235,141,16)"/><text x="60.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1508" width="7" height="15" fill="rgb(248,59,50)"/><text x="60.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="57" y="1524" width="7" height="15" fill="rgb(242,51,31)"/><text x="60.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1540" width="3" height="15" fill="rgb(228,129,8)"/><text x="64.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="1556" width="3" height="15" fill="rgb(221,212,22)"/><text x="64.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1572" width="3" height="15" fill="rgb(250,29,42)"/><text x="64.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.31%)</title><rect x="61" y="1588" width="3" height="15" fill="rgb(251,52,9)"/><text x="64.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1604" width="3" height="15" fill="rgb(249,114,47)"/><text x="64.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1620" width="3" height="15" fill="rgb(207,34,23)"/><text x="64.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1636" width="3" height="15" fill="rgb(230,68,3)"/><text x="64.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="1652" width="3" height="15" fill="rgb(246,156,53)"/><text x="64.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1668" width="3" height="15" fill="rgb(239,6,35)"/><text x="64.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.31%)</title><rect x="61" y="1684" width="3" height="15" fill="rgb(220,166,28)"/><text x="64.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1700" width="3" height="15" fill="rgb(254,221,1)"/><text x="64.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1716" width="3" height="15" fill="rgb(246,213,40)"/><text x="64.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1732" width="3" height="15" fill="rgb(242,165,43)"/><text x="64.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="1748" width="3" height="15" fill="rgb(209,143,53)"/><text x="64.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1764" width="3" height="15" fill="rgb(216,77,19)"/><text x="64.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.31%)</title><rect x="61" y="1780" width="3" height="15" fill="rgb(228,155,4)"/><text x="64.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1796" width="3" height="15" fill="rgb(214,89,14)"/><text x="64.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1812" width="3" height="15" fill="rgb(229,180,26)"/><text x="64.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1828" width="3" height="15" fill="rgb(243,122,26)"/><text x="64.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="1844" width="3" height="15" fill="rgb(240,54,20)"/><text x="64.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1860" width="3" height="15" fill="rgb(249,39,17)"/><text x="64.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.31%)</title><rect x="61" y="1876" width="3" height="15" fill="rgb(243,161,10)"/><text x="64.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1892" width="3" height="15" fill="rgb(213,205,54)"/><text x="64.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1908" width="3" height="15" fill="rgb(207,44,43)"/><text x="64.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1924" width="3" height="15" fill="rgb(233,182,4)"/><text x="64.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="1940" width="3" height="15" fill="rgb(217,0,30)"/><text x="64.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1956" width="3" height="15" fill="rgb(242,67,36)"/><text x="64.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.31%)</title><rect x="61" y="1972" width="3" height="15" fill="rgb(245,95,33)"/><text x="64.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="1988" width="3" height="15" fill="rgb(224,171,31)"/><text x="64.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="2004" width="3" height="15" fill="rgb(220,229,36)"/><text x="64.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="2020" width="3" height="15" fill="rgb(254,42,8)"/><text x="64.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="2036" width="3" height="15" fill="rgb(254,77,48)"/><text x="64.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="61" y="2052" width="3" height="15" fill="rgb(245,174,3)"/><text x="64.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="2068" width="3" height="15" fill="rgb(207,99,32)"/><text x="64.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="2084" width="3" height="15" fill="rgb(233,144,5)"/><text x="64.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="61" y="2100" width="3" height="15" fill="rgb(254,24,16)"/><text x="64.00" y="2110.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.79%)</title><rect x="35" y="436" width="33" height="15" fill="rgb(208,172,35)"/><text x="38.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="35" y="452" width="33" height="15" fill="rgb(235,66,30)"/><text x="38.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.79%)</title><rect x="35" y="468" width="33" height="15" fill="rgb(234,20,54)"/><text x="38.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="484" width="22" height="15" fill="rgb(236,46,47)"/><text x="49.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="46" y="500" width="22" height="15" fill="rgb(212,221,41)"/><text x="49.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="516" width="22" height="15" fill="rgb(241,83,52)"/><text x="49.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 1.86%)</title><rect x="46" y="532" width="22" height="15" fill="rgb(237,186,45)"/><text x="49.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="548" width="22" height="15" fill="rgb(212,5,20)"/><text x="49.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="564" width="22" height="15" fill="rgb(233,177,26)"/><text x="49.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="580" width="22" height="15" fill="rgb(241,159,31)"/><text x="49.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.86%)</title><rect x="46" y="596" width="22" height="15" fill="rgb(207,175,18)"/><text x="49.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="612" width="22" height="15" fill="rgb(205,151,38)"/><text x="49.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 1.86%)</title><rect x="46" y="628" width="22" height="15" fill="rgb(230,172,28)"/><text x="49.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.86%)</title><rect x="46" y="644" width="22" height="15" fill="rgb(230,164,19)"/><text x="49.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="50" y="660" width="18" height="15" fill="rgb(236,43,53)"/><text x="53.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="50" y="676" width="18" height="15" fill="rgb(233,166,24)"/><text x="53.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.55%)</title><rect x="50" y="692" width="18" height="15" fill="rgb(220,28,48)"/><text x="53.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.55%)</title><rect x="50" y="708" width="18" height="15" fill="rgb(236,128,32)"/><text x="53.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.31%)</title><rect x="64" y="724" width="4" height="15" fill="rgb(213,116,20)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="740" width="4" height="15" fill="rgb(216,10,47)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="756" width="4" height="15" fill="rgb(215,164,38)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="772" width="4" height="15" fill="rgb(223,28,9)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="788" width="4" height="15" fill="rgb(235,176,27)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="804" width="4" height="15" fill="rgb(224,106,33)"/><text x="67.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py) (1 samples, 0.31%)</title><rect x="64" y="820" width="4" height="15" fill="rgb(219,65,5)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="836" width="4" height="15" fill="rgb(205,26,11)"/><text x="67.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="852" width="4" height="15" fill="rgb(235,64,8)"/><text x="67.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="868" width="4" height="15" fill="rgb(207,103,38)"/><text x="67.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="884" width="4" height="15" fill="rgb(234,201,52)"/><text x="67.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="900" width="4" height="15" fill="rgb(230,68,0)"/><text x="67.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_xlsxwriter.py) (1 samples, 0.31%)</title><rect x="64" y="916" width="4" height="15" fill="rgb(222,177,50)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="932" width="4" height="15" fill="rgb(212,139,27)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="948" width="4" height="15" fill="rgb(236,75,8)"/><text x="67.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="964" width="4" height="15" fill="rgb(246,42,19)"/><text x="67.00" y="974.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="980" width="4" height="15" fill="rgb(212,192,23)"/><text x="67.00" y="990.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="64" y="996" width="4" height="15" fill="rgb(243,76,33)"/><text x="67.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="64" y="1012" width="4" height="15" fill="rgb(213,122,27)"/><text x="67.00" y="1022.50"></text></g><g><title>0x7fdc83b60dd6 (?) (1 samples, 0.31%)</title><rect x="64" y="1028" width="4" height="15" fill="rgb(238,183,25)"/><text x="67.00" y="1038.50"></text></g><g><title>0x7fdc83b634f3 (?) (1 samples, 0.31%)</title><rect x="64" y="1044" width="4" height="15" fill="rgb(237,124,37)"/><text x="67.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 3.10%)</title><rect x="35" y="340" width="37" height="15" fill="rgb(213,145,0)"/><text x="38.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="35" y="356" width="37" height="15" fill="rgb(216,19,49)"/><text x="38.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="35" y="372" width="37" height="15" fill="rgb(206,40,2)"/><text x="38.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="35" y="388" width="37" height="15" fill="rgb(243,54,52)"/><text x="38.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.10%)</title><rect x="35" y="404" width="37" height="15" fill="rgb(251,113,5)"/><text x="38.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.10%)</title><rect x="35" y="420" width="37" height="15" fill="rgb(208,201,34)"/><text x="38.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="436" width="4" height="15" fill="rgb(214,95,16)"/><text x="71.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="452" width="4" height="15" fill="rgb(230,124,19)"/><text x="71.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="468" width="4" height="15" fill="rgb(208,86,20)"/><text x="71.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="484" width="4" height="15" fill="rgb(232,147,2)"/><text x="71.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="500" width="4" height="15" fill="rgb(247,54,14)"/><text x="71.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="516" width="4" height="15" fill="rgb(221,15,13)"/><text x="71.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.31%)</title><rect x="68" y="532" width="4" height="15" fill="rgb(206,66,52)"/><text x="71.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="548" width="4" height="15" fill="rgb(250,26,24)"/><text x="71.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="564" width="4" height="15" fill="rgb(224,188,23)"/><text x="71.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="580" width="4" height="15" fill="rgb(215,104,42)"/><text x="71.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="596" width="4" height="15" fill="rgb(235,90,5)"/><text x="71.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="612" width="4" height="15" fill="rgb(222,45,28)"/><text x="71.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="628" width="4" height="15" fill="rgb(219,10,41)"/><text x="71.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="644" width="4" height="15" fill="rgb(214,1,33)"/><text x="71.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="660" width="4" height="15" fill="rgb(240,59,54)"/><text x="71.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="676" width="4" height="15" fill="rgb(235,121,48)"/><text x="71.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="692" width="4" height="15" fill="rgb(251,136,45)"/><text x="71.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="708" width="4" height="15" fill="rgb(242,84,19)"/><text x="71.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="724" width="4" height="15" fill="rgb(211,163,23)"/><text x="71.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="740" width="4" height="15" fill="rgb(245,106,21)"/><text x="71.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="756" width="4" height="15" fill="rgb(213,134,51)"/><text x="71.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/__init__.py) (1 samples, 0.31%)</title><rect x="68" y="772" width="4" height="15" fill="rgb(247,78,5)"/><text x="71.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="788" width="4" height="15" fill="rgb(206,77,4)"/><text x="71.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="804" width="4" height="15" fill="rgb(213,204,49)"/><text x="71.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="820" width="4" height="15" fill="rgb(235,15,28)"/><text x="71.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="68" y="836" width="4" height="15" fill="rgb(215,183,15)"/><text x="71.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="68" y="852" width="4" height="15" fill="rgb(223,176,51)"/><text x="71.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/hb.py) (1 samples, 0.31%)</title><rect x="68" y="868" width="4" height="15" fill="rgb(254,201,8)"/><text x="71.00" y="878.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.31%)</title><rect x="72" y="580" width="3" height="15" fill="rgb(254,182,7)"/><text x="75.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="596" width="3" height="15" fill="rgb(232,219,24)"/><text x="75.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="612" width="3" height="15" fill="rgb(242,24,47)"/><text x="75.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="628" width="3" height="15" fill="rgb(228,201,38)"/><text x="75.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="644" width="3" height="15" fill="rgb(251,76,34)"/><text x="75.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="660" width="3" height="15" fill="rgb(228,3,2)"/><text x="75.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="676" width="3" height="15" fill="rgb(211,22,44)"/><text x="75.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="692" width="3" height="15" fill="rgb(207,15,35)"/><text x="75.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="708" width="3" height="15" fill="rgb(220,136,24)"/><text x="75.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.31%)</title><rect x="72" y="724" width="3" height="15" fill="rgb(218,229,48)"/><text x="75.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="740" width="3" height="15" fill="rgb(249,160,20)"/><text x="75.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="756" width="3" height="15" fill="rgb(239,223,42)"/><text x="75.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="772" width="3" height="15" fill="rgb(219,192,1)"/><text x="75.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="788" width="3" height="15" fill="rgb(238,147,26)"/><text x="75.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="804" width="3" height="15" fill="rgb(227,108,16)"/><text x="75.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.31%)</title><rect x="72" y="820" width="3" height="15" fill="rgb(233,165,24)"/><text x="75.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="836" width="3" height="15" fill="rgb(227,187,44)"/><text x="75.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="852" width="3" height="15" fill="rgb(250,55,9)"/><text x="75.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="868" width="3" height="15" fill="rgb(244,172,29)"/><text x="75.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="884" width="3" height="15" fill="rgb(206,16,52)"/><text x="75.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="900" width="3" height="15" fill="rgb(217,40,37)"/><text x="75.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.31%)</title><rect x="72" y="916" width="3" height="15" fill="rgb(213,177,35)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="932" width="3" height="15" fill="rgb(244,104,18)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="948" width="3" height="15" fill="rgb(252,166,37)"/><text x="75.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="964" width="3" height="15" fill="rgb(238,229,39)"/><text x="75.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="980" width="3" height="15" fill="rgb(232,5,29)"/><text x="75.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="996" width="3" height="15" fill="rgb(244,90,51)"/><text x="75.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="1012" width="3" height="15" fill="rgb(227,129,42)"/><text x="75.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="1028" width="3" height="15" fill="rgb(243,109,11)"/><text x="75.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="1044" width="3" height="15" fill="rgb(229,5,45)"/><text x="75.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.31%)</title><rect x="72" y="1060" width="3" height="15" fill="rgb(208,222,45)"/><text x="75.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="1076" width="3" height="15" fill="rgb(240,33,43)"/><text x="75.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="1092" width="3" height="15" fill="rgb(228,76,31)"/><text x="75.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="72" y="1108" width="3" height="15" fill="rgb(252,194,42)"/><text x="75.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="1124" width="3" height="15" fill="rgb(228,112,14)"/><text x="75.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="1140" width="3" height="15" fill="rgb(226,28,52)"/><text x="75.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="72" y="1156" width="3" height="15" fill="rgb(240,69,27)"/><text x="75.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (12 samples, 3.72%)</title><rect x="35" y="244" width="44" height="15" fill="rgb(223,101,11)"/><text x="38.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.72%)</title><rect x="35" y="260" width="44" height="15" fill="rgb(209,205,36)"/><text x="38.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.72%)</title><rect x="35" y="276" width="44" height="15" fill="rgb(246,109,36)"/><text x="38.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.72%)</title><rect x="35" y="292" width="44" height="15" fill="rgb(233,161,4)"/><text x="38.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 3.72%)</title><rect x="35" y="308" width="44" height="15" fill="rgb(223,35,46)"/><text x="38.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 3.72%)</title><rect x="35" y="324" width="44" height="15" fill="rgb(238,176,25)"/><text x="38.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.62%)</title><rect x="72" y="340" width="7" height="15" fill="rgb(205,37,24)"/><text x="75.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="356" width="7" height="15" fill="rgb(228,95,5)"/><text x="75.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="372" width="7" height="15" fill="rgb(250,97,21)"/><text x="75.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="388" width="7" height="15" fill="rgb(218,44,1)"/><text x="75.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="404" width="7" height="15" fill="rgb(217,76,11)"/><text x="75.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="420" width="7" height="15" fill="rgb(229,33,12)"/><text x="75.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="436" width="7" height="15" fill="rgb(213,102,27)"/><text x="75.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="72" y="452" width="7" height="15" fill="rgb(230,17,52)"/><text x="75.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="468" width="7" height="15" fill="rgb(219,22,51)"/><text x="75.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.62%)</title><rect x="72" y="484" width="7" height="15" fill="rgb(250,229,29)"/><text x="75.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="500" width="7" height="15" fill="rgb(206,226,32)"/><text x="75.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="516" width="7" height="15" fill="rgb(206,42,11)"/><text x="75.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="532" width="7" height="15" fill="rgb(250,27,22)"/><text x="75.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="72" y="548" width="7" height="15" fill="rgb(214,191,29)"/><text x="75.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="72" y="564" width="7" height="15" fill="rgb(245,2,18)"/><text x="75.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.31%)</title><rect x="75" y="580" width="4" height="15" fill="rgb(234,60,32)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="596" width="4" height="15" fill="rgb(253,97,47)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="612" width="4" height="15" fill="rgb(224,229,19)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="628" width="4" height="15" fill="rgb(224,60,48)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="644" width="4" height="15" fill="rgb(207,40,27)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="660" width="4" height="15" fill="rgb(206,132,35)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.31%)</title><rect x="75" y="676" width="4" height="15" fill="rgb(214,222,10)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="692" width="4" height="15" fill="rgb(248,193,43)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="708" width="4" height="15" fill="rgb(206,221,31)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="724" width="4" height="15" fill="rgb(231,161,26)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="740" width="4" height="15" fill="rgb(213,76,23)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="756" width="4" height="15" fill="rgb(208,53,6)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.31%)</title><rect x="75" y="772" width="4" height="15" fill="rgb(246,146,16)"/><text x="78.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="788" width="4" height="15" fill="rgb(243,214,34)"/><text x="78.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="804" width="4" height="15" fill="rgb(220,122,2)"/><text x="78.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="820" width="4" height="15" fill="rgb(237,54,32)"/><text x="78.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="836" width="4" height="15" fill="rgb(216,198,9)"/><text x="78.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="852" width="4" height="15" fill="rgb(248,65,6)"/><text x="78.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="868" width="4" height="15" fill="rgb(233,167,14)"/><text x="78.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="884" width="4" height="15" fill="rgb(239,97,30)"/><text x="78.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.31%)</title><rect x="75" y="900" width="4" height="15" fill="rgb(239,218,46)"/><text x="78.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="916" width="4" height="15" fill="rgb(241,111,1)"/><text x="78.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="932" width="4" height="15" fill="rgb(217,151,2)"/><text x="78.00" y="942.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="75" y="948" width="4" height="15" fill="rgb(248,170,45)"/><text x="78.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="964" width="4" height="15" fill="rgb(213,216,21)"/><text x="78.00" y="974.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="980" width="4" height="15" fill="rgb(213,92,5)"/><text x="78.00" y="990.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="996" width="4" height="15" fill="rgb(222,22,23)"/><text x="78.00" y="1006.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="75" y="1012" width="4" height="15" fill="rgb(232,68,39)"/><text x="78.00" y="1022.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.31%)</title><rect x="79" y="372" width="4" height="15" fill="rgb(244,89,11)"/><text x="82.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="388" width="4" height="15" fill="rgb(216,177,0)"/><text x="82.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="404" width="4" height="15" fill="rgb(235,151,46)"/><text x="82.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="420" width="4" height="15" fill="rgb(217,52,52)"/><text x="82.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="436" width="4" height="15" fill="rgb(244,3,54)"/><text x="82.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="452" width="4" height="15" fill="rgb(246,46,48)"/><text x="82.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="79" y="468" width="4" height="15" fill="rgb(239,217,27)"/><text x="82.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="79" y="484" width="4" height="15" fill="rgb(236,62,23)"/><text x="82.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py) (1 samples, 0.31%)</title><rect x="79" y="500" width="4" height="15" fill="rgb(216,152,25)"/><text x="82.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="79" y="516" width="4" height="15" fill="rgb(213,222,10)"/><text x="82.00" y="526.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py) (1 samples, 0.31%)</title><rect x="83" y="468" width="3" height="15" fill="rgb(227,201,45)"/><text x="86.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="484" width="3" height="15" fill="rgb(216,90,18)"/><text x="86.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="500" width="3" height="15" fill="rgb(215,166,47)"/><text x="86.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="516" width="3" height="15" fill="rgb(236,150,23)"/><text x="86.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="83" y="532" width="3" height="15" fill="rgb(229,21,31)"/><text x="86.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="548" width="3" height="15" fill="rgb(213,176,52)"/><text x="86.00" y="558.50"></text></g><g><title>&lt;module&gt; (decimal.py) (1 samples, 0.31%)</title><rect x="83" y="564" width="3" height="15" fill="rgb(212,179,10)"/><text x="86.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="580" width="3" height="15" fill="rgb(229,32,9)"/><text x="86.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="596" width="3" height="15" fill="rgb(250,164,10)"/><text x="86.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="612" width="3" height="15" fill="rgb(225,38,7)"/><text x="86.00" y="622.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="628" width="3" height="15" fill="rgb(211,99,1)"/><text x="86.00" y="638.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="83" y="644" width="3" height="15" fill="rgb(216,130,27)"/><text x="86.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="83" y="660" width="3" height="15" fill="rgb(211,151,31)"/><text x="86.00" y="670.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="676" width="3" height="15" fill="rgb(215,92,41)"/><text x="86.00" y="686.50"></text></g><g><title>0x7fdcb4556995 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="692" width="3" height="15" fill="rgb(227,54,40)"/><text x="86.00" y="702.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="708" width="3" height="15" fill="rgb(205,110,14)"/><text x="86.00" y="718.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="724" width="3" height="15" fill="rgb(221,125,11)"/><text x="86.00" y="734.50"></text></g><g><title>0x7fdcb4556258 (libdl-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="740" width="3" height="15" fill="rgb(223,198,37)"/><text x="86.00" y="750.50"></text></g><g><title>0x7fdcb45a3d7a (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="756" width="3" height="15" fill="rgb(232,43,33)"/><text x="86.00" y="766.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="772" width="3" height="15" fill="rgb(237,129,14)"/><text x="86.00" y="782.50"></text></g><g><title>0x7fdcb45a4345 (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="788" width="3" height="15" fill="rgb(246,192,13)"/><text x="86.00" y="798.50"></text></g><g><title>0x7fdcb459cfec (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="804" width="3" height="15" fill="rgb(227,62,8)"/><text x="86.00" y="814.50"></text></g><g><title>0x7fdcb459b56b (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="820" width="3" height="15" fill="rgb(228,127,43)"/><text x="86.00" y="830.50"></text></g><g><title>0x7fdcb459ac6d (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="836" width="3" height="15" fill="rgb(221,147,53)"/><text x="86.00" y="846.50"></text></g><g><title>0x7fdcb459a72a (ld-2.29.so) (1 samples, 0.31%)</title><rect x="83" y="852" width="3" height="15" fill="rgb(225,100,32)"/><text x="86.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="68" width="80" height="15" fill="rgb(234,96,53)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="84" width="80" height="15" fill="rgb(231,91,9)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="100" width="80" height="15" fill="rgb(239,113,21)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (22 samples, 6.81%)</title><rect x="10" y="116" width="80" height="15" fill="rgb(213,160,32)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="132" width="80" height="15" fill="rgb(222,55,52)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LogisticRegression/bench_LogisticRegression_liblinear_b_cl_64_solverliblinear.py) (22 samples, 6.81%)</title><rect x="10" y="148" width="80" height="15" fill="rgb(245,149,53)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="164" width="80" height="15" fill="rgb(212,165,11)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (22 samples, 6.81%)</title><rect x="10" y="180" width="80" height="15" fill="rgb(250,53,50)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="35" y="196" width="55" height="15" fill="rgb(241,138,12)"/><text x="38.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.64%)</title><rect x="35" y="212" width="55" height="15" fill="rgb(226,163,26)"/><text x="38.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.64%)</title><rect x="35" y="228" width="55" height="15" fill="rgb(232,136,12)"/><text x="38.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.93%)</title><rect x="79" y="244" width="11" height="15" fill="rgb(223,88,13)"/><text x="82.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="260" width="11" height="15" fill="rgb(244,142,14)"/><text x="82.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="276" width="11" height="15" fill="rgb(252,152,21)"/><text x="82.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="292" width="11" height="15" fill="rgb(230,172,37)"/><text x="82.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="308" width="11" height="15" fill="rgb(231,114,4)"/><text x="82.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="324" width="11" height="15" fill="rgb(238,54,30)"/><text x="82.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.93%)</title><rect x="79" y="340" width="11" height="15" fill="rgb(249,162,43)"/><text x="82.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.93%)</title><rect x="79" y="356" width="11" height="15" fill="rgb(238,193,50)"/><text x="82.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.62%)</title><rect x="83" y="372" width="7" height="15" fill="rgb(243,119,18)"/><text x="86.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="83" y="388" width="7" height="15" fill="rgb(245,102,46)"/><text x="86.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="83" y="404" width="7" height="15" fill="rgb(220,76,17)"/><text x="86.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="83" y="420" width="7" height="15" fill="rgb(238,212,40)"/><text x="86.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.62%)</title><rect x="83" y="436" width="7" height="15" fill="rgb(212,228,6)"/><text x="86.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.62%)</title><rect x="83" y="452" width="7" height="15" fill="rgb(214,226,34)"/><text x="86.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.31%)</title><rect x="86" y="468" width="4" height="15" fill="rgb(235,137,9)"/><text x="89.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="86" y="484" width="4" height="15" fill="rgb(234,34,21)"/><text x="89.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="86" y="500" width="4" height="15" fill="rgb(208,68,30)"/><text x="89.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="86" y="516" width="4" height="15" fill="rgb(246,117,40)"/><text x="89.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="86" y="532" width="4" height="15" fill="rgb(212,192,35)"/><text x="89.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="86" y="548" width="4" height="15" fill="rgb(254,44,8)"/><text x="89.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.31%)</title><rect x="86" y="564" width="4" height="15" fill="rgb(205,37,43)"/><text x="89.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.31%)</title><rect x="86" y="580" width="4" height="15" fill="rgb(207,120,10)"/><text x="89.00" y="590.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.31%)</title><rect x="86" y="596" width="4" height="15" fill="rgb(226,112,22)"/><text x="89.00" y="606.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.31%)</title><rect x="86" y="612" width="4" height="15" fill="rgb(214,115,37)"/><text x="89.00" y="622.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="86" y="628" width="4" height="15" fill="rgb(240,203,43)"/><text x="89.00" y="638.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="86" y="644" width="4" height="15" fill="rgb(228,18,10)"/><text x="89.00" y="654.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="94" y="116" width="3" height="15" fill="rgb(240,212,27)"/><text x="97.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="94" y="132" width="3" height="15" fill="rgb(223,112,29)"/><text x="97.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="94" y="148" width="3" height="15" fill="rgb(230,68,27)"/><text x="97.00" y="158.50"></text></g><g><title>0x7fdc7433eff9 (?) (1 samples, 0.31%)</title><rect x="156" y="212" width="3" height="15" fill="rgb(223,12,54)"/><text x="159.00" y="222.50"></text></g><g><title>0x7fdc74339cf5 (?) (1 samples, 0.31%)</title><rect x="156" y="228" width="3" height="15" fill="rgb(220,139,27)"/><text x="159.00" y="238.50"></text></g><g><title>0x7fdc7434bc9f (?) (1 samples, 0.31%)</title><rect x="156" y="244" width="3" height="15" fill="rgb(210,116,44)"/><text x="159.00" y="254.50"></text></g><g><title>0x7fdc7434bc55 (?) (1 samples, 0.31%)</title><rect x="156" y="260" width="3" height="15" fill="rgb(252,224,38)"/><text x="159.00" y="270.50"></text></g><g><title>0x7fdc7435113e (?) (1 samples, 0.31%)</title><rect x="156" y="276" width="3" height="15" fill="rgb(215,194,1)"/><text x="159.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="163" y="244" width="4" height="15" fill="rgb(210,185,32)"/><text x="166.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="163" y="260" width="4" height="15" fill="rgb(252,38,1)"/><text x="166.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 0.93%)</title><rect x="159" y="212" width="11" height="15" fill="rgb(225,55,41)"/><text x="162.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.93%)</title><rect x="159" y="228" width="11" height="15" fill="rgb(237,79,25)"/><text x="162.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="167" y="244" width="3" height="15" fill="rgb(207,67,36)"/><text x="170.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="167" y="260" width="3" height="15" fill="rgb(208,86,15)"/><text x="170.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="170" y="292" width="4" height="15" fill="rgb(208,150,23)"/><text x="173.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="170" y="308" width="4" height="15" fill="rgb(229,44,43)"/><text x="173.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="174" y="292" width="7" height="15" fill="rgb(212,60,36)"/><text x="177.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.93%)</title><rect x="181" y="292" width="11" height="15" fill="rgb(244,197,32)"/><text x="184.00" y="302.50"></text></g><g><title>0x7fdcb42ef1ef (libc-2.29.so) (1 samples, 0.31%)</title><rect x="192" y="308" width="4" height="15" fill="rgb(209,113,28)"/><text x="195.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="196" y="340" width="7" height="15" fill="rgb(216,48,12)"/><text x="199.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="196" y="356" width="7" height="15" fill="rgb(252,24,7)"/><text x="199.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="196" y="372" width="7" height="15" fill="rgb(248,114,37)"/><text x="199.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="388" width="4" height="15" fill="rgb(215,127,13)"/><text x="202.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="404" width="4" height="15" fill="rgb(207,23,37)"/><text x="202.00" y="414.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="199" y="420" width="4" height="15" fill="rgb(222,120,52)"/><text x="202.00" y="430.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="203" y="340" width="4" height="15" fill="rgb(231,77,49)"/><text x="206.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="210" y="356" width="4" height="15" fill="rgb(254,98,13)"/><text x="213.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="210" y="372" width="4" height="15" fill="rgb(223,229,5)"/><text x="213.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="210" y="388" width="4" height="15" fill="rgb(241,45,5)"/><text x="213.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="214" y="452" width="4" height="15" fill="rgb(220,201,32)"/><text x="217.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="214" y="468" width="4" height="15" fill="rgb(211,25,40)"/><text x="217.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="214" y="484" width="4" height="15" fill="rgb(213,60,0)"/><text x="217.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.33%)</title><rect x="170" y="260" width="51" height="15" fill="rgb(221,148,37)"/><text x="173.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 4.33%)</title><rect x="170" y="276" width="51" height="15" fill="rgb(223,184,41)"/><text x="173.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.48%)</title><rect x="192" y="292" width="29" height="15" fill="rgb(219,101,29)"/><text x="195.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.17%)</title><rect x="196" y="308" width="25" height="15" fill="rgb(231,153,25)"/><text x="199.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.17%)</title><rect x="196" y="324" width="25" height="15" fill="rgb(216,208,24)"/><text x="199.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearClassifier&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.24%)</title><rect x="207" y="340" width="14" height="15" fill="rgb(246,229,39)"/><text x="210.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="356" width="7" height="15" fill="rgb(212,89,24)"/><text x="217.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="372" width="7" height="15" fill="rgb(213,47,53)"/><text x="217.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="388" width="7" height="15" fill="rgb(249,49,43)"/><text x="217.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="404" width="7" height="15" fill="rgb(236,226,34)"/><text x="217.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="420" width="7" height="15" fill="rgb(234,164,17)"/><text x="217.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="214" y="436" width="7" height="15" fill="rgb(234,8,16)"/><text x="217.00" y="446.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="218" y="452" width="3" height="15" fill="rgb(249,202,33)"/><text x="221.00" y="462.50"></text></g><g><title>0x7fdcb42dd6df (libc-2.29.so) (1 samples, 0.31%)</title><rect x="218" y="468" width="3" height="15" fill="rgb(235,163,35)"/><text x="221.00" y="478.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="221" y="260" width="4" height="15" fill="rgb(227,45,38)"/><text x="224.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="225" y="260" width="4" height="15" fill="rgb(250,68,11)"/><text x="228.00" y="270.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="225" y="276" width="4" height="15" fill="rgb(246,43,21)"/><text x="228.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 5.26%)</title><rect x="170" y="244" width="62" height="15" fill="rgb(246,171,32)"/><text x="173.00" y="254.50">onnxru..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="229" y="260" width="3" height="15" fill="rgb(214,218,0)"/><text x="232.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="229" y="276" width="3" height="15" fill="rgb(250,1,40)"/><text x="232.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="229" y="292" width="3" height="15" fill="rgb(207,153,54)"/><text x="232.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="229" y="308" width="3" height="15" fill="rgb(215,157,39)"/><text x="232.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="229" y="324" width="3" height="15" fill="rgb(234,28,3)"/><text x="232.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="232" y="244" width="8" height="15" fill="rgb(244,84,7)"/><text x="235.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.62%)</title><rect x="232" y="260" width="8" height="15" fill="rgb(229,30,54)"/><text x="235.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="236" y="276" width="4" height="15" fill="rgb(226,223,20)"/><text x="239.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="240" y="244" width="3" height="15" fill="rgb(222,227,3)"/><text x="243.00" y="254.50"></text></g><g><title>profile_ort (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (43 samples, 13.31%)</title><rect x="90" y="68" width="157" height="15" fill="rgb(243,82,39)"/><text x="93.00" y="78.50">profile_ort (bench_L..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (43 samples, 13.31%)</title><rect x="90" y="84" width="157" height="15" fill="rgb(247,214,13)"/><text x="93.00" y="94.50">setup_profile (bench..</text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (43 samples, 13.31%)</title><rect x="90" y="100" width="157" height="15" fill="rgb(241,158,20)"/><text x="93.00" y="110.50">profile (bench_Logis..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (41 samples, 12.69%)</title><rect x="97" y="116" width="150" height="15" fill="rgb(219,2,4)"/><text x="100.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 12.07%)</title><rect x="104" y="132" width="143" height="15" fill="rgb(252,47,18)"/><text x="107.00" y="142.50">&lt;lambda&gt; (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (37 samples, 11.46%)</title><rect x="112" y="148" width="135" height="15" fill="rgb(207,6,33)"/><text x="115.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (33 samples, 10.22%)</title><rect x="126" y="164" width="121" height="15" fill="rgb(247,228,29)"/><text x="129.00" y="174.50">_run_whole_runt..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (30 samples, 9.29%)</title><rect x="137" y="180" width="110" height="15" fill="rgb(248,229,20)"/><text x="140.00" y="190.50">run (mlprodic..</text></g><g><title>run (onnxruntime/capi/session.py) (28 samples, 8.67%)</title><rect x="145" y="196" width="102" height="15" fill="rgb(221,89,23)"/><text x="148.00" y="206.50">run (onnxrun..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.50%)</title><rect x="170" y="212" width="77" height="15" fill="rgb(224,182,42)"/><text x="173.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 6.50%)</title><rect x="170" y="228" width="77" height="15" fill="rgb(252,98,13)"/><text x="173.00" y="238.50">void pyb..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="243" y="244" width="4" height="15" fill="rgb(225,52,14)"/><text x="246.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="251" y="116" width="3" height="15" fill="rgb(254,76,34)"/><text x="254.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="251" y="132" width="3" height="15" fill="rgb(248,92,5)"/><text x="254.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="251" y="148" width="3" height="15" fill="rgb(244,68,33)"/><text x="254.00" y="158.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (3 samples, 0.93%)</title><rect x="346" y="196" width="11" height="15" fill="rgb(208,93,3)"/><text x="349.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.31%)</title><rect x="368" y="212" width="3" height="15" fill="rgb(247,121,2)"/><text x="371.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="368" y="228" width="3" height="15" fill="rgb(236,80,50)"/><text x="371.00" y="238.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.31%)</title><rect x="368" y="244" width="3" height="15" fill="rgb(230,176,54)"/><text x="371.00" y="254.50"></text></g><g><title>0x7fdcb42ef124 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="393" y="244" width="4" height="15" fill="rgb(227,28,45)"/><text x="396.00" y="254.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (1 samples, 0.31%)</title><rect x="404" y="324" width="4" height="15" fill="rgb(229,68,53)"/><text x="407.00" y="334.50"></text></g><g><title>argmax (&lt;__array_function__ internals&gt;) (4 samples, 1.24%)</title><rect x="397" y="244" width="14" height="15" fill="rgb(219,26,54)"/><text x="400.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.24%)</title><rect x="397" y="260" width="14" height="15" fill="rgb(237,30,35)"/><text x="400.00" y="270.50"></text></g><g><title>argmax (numpy/core/fromnumeric.py) (4 samples, 1.24%)</title><rect x="397" y="276" width="14" height="15" fill="rgb(253,26,20)"/><text x="400.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.24%)</title><rect x="397" y="292" width="14" height="15" fill="rgb(239,161,19)"/><text x="400.00" y="302.50"></text></g><g><title>array_argmax (methods.c) (2 samples, 0.62%)</title><rect x="404" y="308" width="7" height="15" fill="rgb(212,6,38)"/><text x="407.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.31%)</title><rect x="408" y="324" width="3" height="15" fill="rgb(251,152,17)"/><text x="411.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="433" y="340" width="4" height="15" fill="rgb(236,117,20)"/><text x="436.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="437" y="340" width="4" height="15" fill="rgb(218,202,34)"/><text x="440.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (10 samples, 3.10%)</title><rect x="411" y="244" width="37" height="15" fill="rgb(233,12,21)"/><text x="414.00" y="254.50">num..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (8 samples, 2.48%)</title><rect x="419" y="260" width="29" height="15" fill="rgb(205,86,23)"/><text x="422.00" y="270.50">do..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.48%)</title><rect x="419" y="276" width="29" height="15" fill="rgb(252,14,51)"/><text x="422.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 2.17%)</title><rect x="422" y="292" width="26" height="15" fill="rgb(247,116,5)"/><text x="425.00" y="302.50">a..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (6 samples, 1.86%)</title><rect x="426" y="308" width="22" height="15" fill="rgb(234,65,25)"/><text x="429.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (6 samples, 1.86%)</title><rect x="426" y="324" width="22" height="15" fill="rgb(248,43,33)"/><text x="429.00" y="334.50">c..</text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.62%)</title><rect x="441" y="340" width="7" height="15" fill="rgb(212,114,7)"/><text x="444.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.62%)</title><rect x="441" y="356" width="7" height="15" fill="rgb(253,150,44)"/><text x="444.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.62%)</title><rect x="441" y="372" width="7" height="15" fill="rgb(235,166,5)"/><text x="444.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="444" y="388" width="4" height="15" fill="rgb(228,65,53)"/><text x="447.00" y="398.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.62%)</title><rect x="448" y="260" width="7" height="15" fill="rgb(251,127,0)"/><text x="451.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.62%)</title><rect x="448" y="276" width="7" height="15" fill="rgb(209,201,43)"/><text x="451.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.93%)</title><rect x="455" y="276" width="11" height="15" fill="rgb(222,9,18)"/><text x="458.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="463" y="292" width="3" height="15" fill="rgb(231,42,6)"/><text x="466.00" y="302.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.31%)</title><rect x="466" y="276" width="4" height="15" fill="rgb(210,94,16)"/><text x="469.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.62%)</title><rect x="470" y="292" width="7" height="15" fill="rgb(235,165,46)"/><text x="473.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.62%)</title><rect x="470" y="308" width="7" height="15" fill="rgb(241,222,44)"/><text x="473.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.62%)</title><rect x="470" y="324" width="7" height="15" fill="rgb(218,107,49)"/><text x="473.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.31%)</title><rect x="473" y="340" width="4" height="15" fill="rgb(211,101,52)"/><text x="476.00" y="350.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.31%)</title><rect x="473" y="356" width="4" height="15" fill="rgb(207,10,30)"/><text x="476.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.62%)</title><rect x="481" y="324" width="7" height="15" fill="rgb(226,86,21)"/><text x="484.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 0.93%)</title><rect x="481" y="308" width="11" height="15" fill="rgb(249,78,29)"/><text x="484.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.31%)</title><rect x="488" y="324" width="4" height="15" fill="rgb(223,70,40)"/><text x="491.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 2.17%)</title><rect x="470" y="276" width="25" height="15" fill="rgb(216,103,20)"/><text x="473.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.55%)</title><rect x="477" y="292" width="18" height="15" fill="rgb(241,227,49)"/><text x="480.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="492" y="308" width="3" height="15" fill="rgb(212,45,50)"/><text x="495.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="495" y="276" width="4" height="15" fill="rgb(225,112,32)"/><text x="498.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.31%)</title><rect x="495" y="292" width="4" height="15" fill="rgb(243,75,44)"/><text x="498.00" y="302.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="499" y="276" width="4" height="15" fill="rgb(246,159,18)"/><text x="502.00" y="286.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="499" y="292" width="4" height="15" fill="rgb(231,177,11)"/><text x="502.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="499" y="308" width="4" height="15" fill="rgb(231,220,1)"/><text x="502.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 4.33%)</title><rect x="455" y="260" width="51" height="15" fill="rgb(221,35,49)"/><text x="458.00" y="270.50">PyUFu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="503" y="276" width="3" height="15" fill="rgb(223,22,35)"/><text x="506.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_classifier.py) (37 samples, 11.46%)</title><rect x="375" y="228" width="135" height="15" fill="rgb(224,88,9)"/><text x="378.00" y="238.50">_run (mlprodict/o..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 5.26%)</title><rect x="448" y="244" width="62" height="15" fill="rgb(253,16,38)"/><text x="451.00" y="254.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="506" y="260" width="4" height="15" fill="rgb(227,223,11)"/><text x="509.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="521" y="260" width="4" height="15" fill="rgb(236,90,10)"/><text x="524.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="521" y="276" width="4" height="15" fill="rgb(208,109,4)"/><text x="524.00" y="286.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.62%)</title><rect x="525" y="260" width="7" height="15" fill="rgb(236,147,33)"/><text x="528.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.31%)</title><rect x="528" y="276" width="4" height="15" fill="rgb(205,89,7)"/><text x="531.00" y="286.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.31%)</title><rect x="528" y="292" width="4" height="15" fill="rgb(254,11,23)"/><text x="531.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.31%)</title><rect x="532" y="324" width="4" height="15" fill="rgb(216,218,24)"/><text x="535.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.31%)</title><rect x="532" y="340" width="4" height="15" fill="rgb(235,228,36)"/><text x="535.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.31%)</title><rect x="532" y="356" width="4" height="15" fill="rgb(245,170,12)"/><text x="535.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.31%)</title><rect x="532" y="372" width="4" height="15" fill="rgb(224,143,51)"/><text x="535.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.31%)</title><rect x="532" y="388" width="4" height="15" fill="rgb(252,20,28)"/><text x="535.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.31%)</title><rect x="539" y="340" width="4" height="15" fill="rgb(216,214,39)"/><text x="542.00" y="350.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.31%)</title><rect x="547" y="388" width="3" height="15" fill="rgb(212,113,37)"/><text x="550.00" y="398.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.31%)</title><rect x="550" y="388" width="4" height="15" fill="rgb(238,74,22)"/><text x="553.00" y="398.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.31%)</title><rect x="554" y="388" width="3" height="15" fill="rgb(228,206,38)"/><text x="557.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.24%)</title><rect x="547" y="372" width="14" height="15" fill="rgb(219,178,20)"/><text x="550.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.31%)</title><rect x="557" y="388" width="4" height="15" fill="rgb(221,84,50)"/><text x="560.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="561" y="372" width="4" height="15" fill="rgb(233,228,37)"/><text x="564.00" y="382.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.31%)</title><rect x="565" y="372" width="3" height="15" fill="rgb(237,123,21)"/><text x="568.00" y="382.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="568" y="372" width="4" height="15" fill="rgb(245,150,0)"/><text x="571.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.31%)</title><rect x="572" y="388" width="4" height="15" fill="rgb(227,36,53)"/><text x="575.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (9 samples, 2.79%)</title><rect x="547" y="356" width="32" height="15" fill="rgb(250,3,23)"/><text x="550.00" y="366.50">Py..</text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.62%)</title><rect x="572" y="372" width="7" height="15" fill="rgb(215,76,39)"/><text x="575.00" y="382.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="576" y="388" width="3" height="15" fill="rgb(231,10,30)"/><text x="579.00" y="398.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.33%)</title><rect x="532" y="260" width="51" height="15" fill="rgb(210,90,39)"/><text x="535.00" y="270.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.33%)</title><rect x="532" y="276" width="51" height="15" fill="rgb(244,130,20)"/><text x="535.00" y="286.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (14 samples, 4.33%)</title><rect x="532" y="292" width="51" height="15" fill="rgb(215,168,31)"/><text x="535.00" y="302.50">_sum ..</text></g><g><title>ufunc_reduce (ufunc_object.c) (14 samples, 4.33%)</title><rect x="532" y="308" width="51" height="15" fill="rgb(209,32,15)"/><text x="535.00" y="318.50">ufunc..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (13 samples, 4.02%)</title><rect x="536" y="324" width="47" height="15" fill="rgb(248,203,45)"/><text x="539.00" y="334.50">PyUF..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (11 samples, 3.41%)</title><rect x="543" y="340" width="40" height="15" fill="rgb(242,15,10)"/><text x="546.00" y="350.50">PyU..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.31%)</title><rect x="579" y="356" width="4" height="15" fill="rgb(226,196,41)"/><text x="582.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="594" y="340" width="4" height="15" fill="rgb(241,86,50)"/><text x="597.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="598" y="340" width="3" height="15" fill="rgb(251,50,42)"/><text x="601.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.55%)</title><rect x="590" y="324" width="19" height="15" fill="rgb(254,58,25)"/><text x="593.00" y="334.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (2 samples, 0.62%)</title><rect x="601" y="340" width="8" height="15" fill="rgb(210,175,53)"/><text x="604.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.48%)</title><rect x="587" y="292" width="29" height="15" fill="rgb(248,120,33)"/><text x="590.00" y="302.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.48%)</title><rect x="587" y="308" width="29" height="15" fill="rgb(211,106,15)"/><text x="590.00" y="318.50">it..</text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.62%)</title><rect x="609" y="324" width="7" height="15" fill="rgb(230,169,7)"/><text x="612.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="616" y="292" width="4" height="15" fill="rgb(230,162,6)"/><text x="619.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 3.10%)</title><rect x="587" y="276" width="36" height="15" fill="rgb(232,55,50)"/><text x="590.00" y="286.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="620" y="292" width="3" height="15" fill="rgb(214,72,50)"/><text x="623.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.31%)</title><rect x="620" y="308" width="3" height="15" fill="rgb(214,1,39)"/><text x="623.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.31%)</title><rect x="620" y="324" width="3" height="15" fill="rgb(223,174,28)"/><text x="623.00" y="334.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (103 samples, 31.89%)</title><rect x="254" y="132" width="377" height="15" fill="rgb(215,55,38)"/><text x="257.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (103 samples, 31.89%)</title><rect x="254" y="148" width="377" height="15" fill="rgb(220,158,37)"/><text x="257.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (99 samples, 30.65%)</title><rect x="269" y="164" width="362" height="15" fill="rgb(217,158,36)"/><text x="272.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (96 samples, 29.72%)</title><rect x="280" y="180" width="351" height="15" fill="rgb(219,69,23)"/><text x="283.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (75 samples, 23.22%)</title><rect x="357" y="196" width="274" height="15" fill="rgb(236,26,17)"/><text x="360.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (71 samples, 21.98%)</title><rect x="371" y="212" width="260" height="15" fill="rgb(241,171,48)"/><text x="374.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op...</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 10.22%)</title><rect x="510" y="228" width="121" height="15" fill="rgb(239,67,19)"/><text x="513.00" y="238.50">_run (mlprodict..</text></g><g><title>norm_l1 (mlprodict/onnxrt/ops_cpu/op_normalizer.py) (33 samples, 10.22%)</title><rect x="510" y="244" width="121" height="15" fill="rgb(241,184,36)"/><text x="513.00" y="254.50">norm_l1 (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 4.02%)</title><rect x="583" y="260" width="48" height="15" fill="rgb(211,147,51)"/><text x="586.00" y="270.50">ufun..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.62%)</title><rect x="623" y="276" width="8" height="15" fill="rgb(218,69,25)"/><text x="626.00" y="286.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.31%)</title><rect x="631" y="132" width="3" height="15" fill="rgb(249,148,33)"/><text x="634.00" y="142.50"></text></g><g><title>0x7fdcb43acf72 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="631" y="148" width="3" height="15" fill="rgb(222,177,20)"/><text x="634.00" y="158.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (107 samples, 33.13%)</title><rect x="247" y="100" width="391" height="15" fill="rgb(209,122,49)"/><text x="250.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_s..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 32.51%)</title><rect x="254" y="116" width="384" height="15" fill="rgb(209,116,4)"/><text x="257.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="634" y="132" width="4" height="15" fill="rgb(245,32,14)"/><text x="637.00" y="142.50"></text></g><g><title>profile_pyrt (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (108 samples, 33.44%)</title><rect x="247" y="68" width="395" height="15" fill="rgb(213,30,54)"/><text x="250.00" y="78.50">profile_pyrt (bench_LogisticRegression_liblinear_b_cl..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (108 samples, 33.44%)</title><rect x="247" y="84" width="395" height="15" fill="rgb(249,3,13)"/><text x="250.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_c..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="638" y="100" width="4" height="15" fill="rgb(245,142,22)"/><text x="641.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="638" y="116" width="4" height="15" fill="rgb(215,116,52)"/><text x="641.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="638" y="132" width="4" height="15" fill="rgb(206,143,21)"/><text x="641.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="638" y="148" width="4" height="15" fill="rgb(230,48,6)"/><text x="641.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="638" y="164" width="4" height="15" fill="rgb(249,59,40)"/><text x="641.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.31%)</title><rect x="638" y="180" width="4" height="15" fill="rgb(229,162,50)"/><text x="641.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.31%)</title><rect x="638" y="196" width="4" height="15" fill="rgb(209,53,23)"/><text x="641.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="212" width="4" height="15" fill="rgb(254,141,50)"/><text x="641.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="228" width="4" height="15" fill="rgb(218,157,31)"/><text x="641.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="244" width="4" height="15" fill="rgb(233,92,50)"/><text x="641.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="638" y="260" width="4" height="15" fill="rgb(241,177,39)"/><text x="641.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="276" width="4" height="15" fill="rgb(232,209,16)"/><text x="641.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.31%)</title><rect x="638" y="292" width="4" height="15" fill="rgb(208,138,30)"/><text x="641.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="308" width="4" height="15" fill="rgb(245,49,5)"/><text x="641.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="324" width="4" height="15" fill="rgb(228,118,22)"/><text x="641.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="340" width="4" height="15" fill="rgb(219,58,46)"/><text x="641.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="638" y="356" width="4" height="15" fill="rgb(212,214,54)"/><text x="641.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="372" width="4" height="15" fill="rgb(225,143,35)"/><text x="641.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.31%)</title><rect x="638" y="388" width="4" height="15" fill="rgb(229,165,38)"/><text x="641.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="404" width="4" height="15" fill="rgb(206,154,24)"/><text x="641.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="420" width="4" height="15" fill="rgb(243,151,35)"/><text x="641.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="638" y="436" width="4" height="15" fill="rgb(220,88,19)"/><text x="641.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="638" y="452" width="4" height="15" fill="rgb(212,48,41)"/><text x="641.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="638" y="468" width="4" height="15" fill="rgb(233,17,37)"/><text x="641.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="638" y="484" width="4" height="15" fill="rgb(247,11,25)"/><text x="641.00" y="494.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="638" y="500" width="4" height="15" fill="rgb(222,159,12)"/><text x="641.00" y="510.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="693" y="180" width="3" height="15" fill="rgb(246,179,18)"/><text x="696.00" y="190.50"></text></g><g><title>array_inplace_true_divide (number.c) (1 samples, 0.31%)</title><rect x="696" y="180" width="4" height="15" fill="rgb(244,55,35)"/><text x="699.00" y="190.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c) (1 samples, 0.31%)</title><rect x="696" y="196" width="4" height="15" fill="rgb(253,31,2)"/><text x="699.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.93%)</title><rect x="707" y="244" width="11" height="15" fill="rgb(243,103,18)"/><text x="710.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.93%)</title><rect x="707" y="260" width="11" height="15" fill="rgb(239,59,31)"/><text x="710.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.93%)</title><rect x="707" y="276" width="11" height="15" fill="rgb(242,83,22)"/><text x="710.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.93%)</title><rect x="707" y="292" width="11" height="15" fill="rgb(224,0,0)"/><text x="710.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.93%)</title><rect x="707" y="308" width="11" height="15" fill="rgb(217,127,5)"/><text x="710.00" y="318.50"></text></g><g><title>0x7fdcb42e4730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="722" y="260" width="4" height="15" fill="rgb(241,141,46)"/><text x="725.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.31%)</title><rect x="729" y="292" width="4" height="15" fill="rgb(214,200,14)"/><text x="732.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.62%)</title><rect x="733" y="292" width="7" height="15" fill="rgb(233,2,40)"/><text x="736.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="736" y="308" width="4" height="15" fill="rgb(236,175,15)"/><text x="739.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.24%)</title><rect x="729" y="276" width="15" height="15" fill="rgb(251,197,21)"/><text x="732.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.31%)</title><rect x="740" y="292" width="4" height="15" fill="rgb(253,110,54)"/><text x="743.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.31%)</title><rect x="740" y="308" width="4" height="15" fill="rgb(211,224,50)"/><text x="743.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="740" y="324" width="4" height="15" fill="rgb(205,167,30)"/><text x="743.00" y="334.50"></text></g><g><title>0x7fdcb4286a45 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="740" y="340" width="4" height="15" fill="rgb(210,209,49)"/><text x="743.00" y="350.50"></text></g><g><title>0x7fdcb34f0d50 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="744" y="292" width="3" height="15" fill="rgb(220,60,0)"/><text x="747.00" y="302.50"></text></g><g><title>array_sum (methods.c) (14 samples, 4.33%)</title><rect x="700" y="180" width="51" height="15" fill="rgb(220,207,45)"/><text x="703.00" y="190.50">array..</text></g><g><title>forward_ndarray_method (methods.c) (14 samples, 4.33%)</title><rect x="700" y="196" width="51" height="15" fill="rgb(232,70,11)"/><text x="703.00" y="206.50">forwa..</text></g><g><title>_sum (numpy/core/_methods.py) (12 samples, 3.72%)</title><rect x="707" y="212" width="44" height="15" fill="rgb(212,184,0)"/><text x="710.00" y="222.50">_sum..</text></g><g><title>ufunc_reduce (ufunc_object.c) (12 samples, 3.72%)</title><rect x="707" y="228" width="44" height="15" fill="rgb(243,182,31)"/><text x="710.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 2.79%)</title><rect x="718" y="244" width="33" height="15" fill="rgb(252,200,35)"/><text x="721.00" y="254.50">Py..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (7 samples, 2.17%)</title><rect x="726" y="260" width="25" height="15" fill="rgb(249,126,9)"/><text x="729.00" y="270.50">P..</text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.62%)</title><rect x="744" y="276" width="7" height="15" fill="rgb(217,129,6)"/><text x="747.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="747" y="292" width="4" height="15" fill="rgb(221,162,15)"/><text x="750.00" y="302.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="747" y="308" width="4" height="15" fill="rgb(225,150,7)"/><text x="750.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.31%)</title><rect x="769" y="196" width="4" height="15" fill="rgb(210,200,45)"/><text x="772.00" y="206.50"></text></g><g><title>0x7fdcb42ef14a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="769" y="212" width="4" height="15" fill="rgb(219,100,9)"/><text x="772.00" y="222.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.31%)</title><rect x="773" y="196" width="4" height="15" fill="rgb(238,52,54)"/><text x="776.00" y="206.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.31%)</title><rect x="780" y="292" width="4" height="15" fill="rgb(251,55,4)"/><text x="783.00" y="302.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.31%)</title><rect x="780" y="308" width="4" height="15" fill="rgb(249,154,28)"/><text x="783.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.31%)</title><rect x="780" y="324" width="4" height="15" fill="rgb(231,207,49)"/><text x="783.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="780" y="340" width="4" height="15" fill="rgb(215,14,1)"/><text x="783.00" y="350.50"></text></g><g><title>array_add (number.c) (3 samples, 0.93%)</title><rect x="777" y="196" width="11" height="15" fill="rgb(219,91,11)"/><text x="780.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.93%)</title><rect x="777" y="212" width="11" height="15" fill="rgb(216,227,33)"/><text x="780.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.93%)</title><rect x="777" y="228" width="11" height="15" fill="rgb(215,172,17)"/><text x="780.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="777" y="244" width="11" height="15" fill="rgb(226,0,26)"/><text x="780.00" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (3 samples, 0.93%)</title><rect x="777" y="260" width="11" height="15" fill="rgb(226,130,53)"/><text x="780.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.62%)</title><rect x="780" y="276" width="8" height="15" fill="rgb(251,151,42)"/><text x="783.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="784" y="292" width="4" height="15" fill="rgb(225,222,48)"/><text x="787.00" y="302.50"></text></g><g><title>array_transpose_get (getset.c) (1 samples, 0.31%)</title><rect x="788" y="196" width="3" height="15" fill="rgb(246,165,6)"/><text x="791.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.31%)</title><rect x="828" y="212" width="3" height="15" fill="rgb(248,68,14)"/><text x="831.00" y="222.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.24%)</title><rect x="831" y="212" width="15" height="15" fill="rgb(230,18,34)"/><text x="834.00" y="222.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.31%)</title><rect x="846" y="212" width="4" height="15" fill="rgb(234,181,17)"/><text x="849.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 2.48%)</title><rect x="850" y="212" width="29" height="15" fill="rgb(209,179,53)"/><text x="853.00" y="222.50">_a..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="875" y="228" width="4" height="15" fill="rgb(249,1,2)"/><text x="878.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="879" y="212" width="4" height="15" fill="rgb(217,156,4)"/><text x="882.00" y="222.50"></text></g><g><title>0x7fdcb42e4b60 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="908" y="228" width="4" height="15" fill="rgb(223,117,8)"/><text x="911.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 3.10%)</title><rect x="883" y="212" width="36" height="15" fill="rgb(242,211,10)"/><text x="886.00" y="222.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.62%)</title><rect x="912" y="228" width="7" height="15" fill="rgb(234,9,5)"/><text x="915.00" y="238.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.31%)</title><rect x="916" y="244" width="3" height="15" fill="rgb(243,45,15)"/><text x="919.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.31%)</title><rect x="919" y="212" width="4" height="15" fill="rgb(228,199,23)"/><text x="922.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.31%)</title><rect x="923" y="212" width="3" height="15" fill="rgb(205,216,32)"/><text x="926.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.93%)</title><rect x="926" y="212" width="11" height="15" fill="rgb(250,105,14)"/><text x="929.00" y="222.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (2 samples, 0.62%)</title><rect x="930" y="228" width="7" height="15" fill="rgb(232,21,35)"/><text x="933.00" y="238.50"></text></g><g><title>simplefilter (warnings.py) (3 samples, 0.93%)</title><rect x="937" y="212" width="11" height="15" fill="rgb(216,127,13)"/><text x="940.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 0.93%)</title><rect x="937" y="228" width="11" height="15" fill="rgb(246,211,53)"/><text x="940.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (44 samples, 13.62%)</title><rect x="791" y="196" width="161" height="15" fill="rgb(231,44,6)"/><text x="794.00" y="206.50">check_array (sklearn..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.31%)</title><rect x="948" y="212" width="4" height="15" fill="rgb(210,145,32)"/><text x="951.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.31%)</title><rect x="974" y="228" width="4" height="15" fill="rgb(208,42,15)"/><text x="977.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 2.48%)</title><rect x="956" y="212" width="29" height="15" fill="rgb(210,17,12)"/><text x="959.00" y="222.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.62%)</title><rect x="978" y="228" width="7" height="15" fill="rgb(239,104,1)"/><text x="981.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 3.10%)</title><rect x="952" y="196" width="37" height="15" fill="rgb(247,203,10)"/><text x="955.00" y="206.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="985" y="212" width="4" height="15" fill="rgb(224,183,50)"/><text x="988.00" y="222.50"></text></g><g><title>0x7fffffffffffffff (?) (1 samples, 0.31%)</title><rect x="1003" y="212" width="4" height="15" fill="rgb(227,134,32)"/><text x="1006.00" y="222.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.31%)</title><rect x="1003" y="228" width="4" height="15" fill="rgb(226,222,5)"/><text x="1006.00" y="238.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.31%)</title><rect x="1003" y="244" width="4" height="15" fill="rgb(225,58,25)"/><text x="1006.00" y="254.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="1003" y="260" width="4" height="15" fill="rgb(221,224,49)"/><text x="1006.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.62%)</title><rect x="1007" y="212" width="7" height="15" fill="rgb(243,27,44)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7fdcb42ef120 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1014" y="260" width="4" height="15" fill="rgb(253,134,40)"/><text x="1017.00" y="270.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.31%)</title><rect x="1018" y="260" width="3" height="15" fill="rgb(215,91,23)"/><text x="1021.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.31%)</title><rect x="1018" y="276" width="3" height="15" fill="rgb(215,112,7)"/><text x="1021.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.31%)</title><rect x="1018" y="292" width="3" height="15" fill="rgb(213,7,27)"/><text x="1021.00" y="302.50"></text></g><g><title>0x7fdcb42eed50 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1025" y="356" width="4" height="15" fill="rgb(220,202,53)"/><text x="1028.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.93%)</title><rect x="1021" y="292" width="11" height="15" fill="rgb(205,143,13)"/><text x="1024.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.93%)</title><rect x="1021" y="308" width="11" height="15" fill="rgb(223,49,7)"/><text x="1024.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (2 samples, 0.62%)</title><rect x="1025" y="324" width="7" height="15" fill="rgb(209,127,15)"/><text x="1028.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.62%)</title><rect x="1025" y="340" width="7" height="15" fill="rgb(224,200,1)"/><text x="1028.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1029" y="356" width="3" height="15" fill="rgb(249,221,25)"/><text x="1032.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="1032" y="340" width="4" height="15" fill="rgb(248,111,52)"/><text x="1035.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="1032" y="356" width="4" height="15" fill="rgb(211,163,25)"/><text x="1035.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.55%)</title><rect x="1021" y="276" width="19" height="15" fill="rgb(224,98,18)"/><text x="1024.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.62%)</title><rect x="1032" y="292" width="8" height="15" fill="rgb(231,221,42)"/><text x="1035.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.62%)</title><rect x="1032" y="308" width="8" height="15" fill="rgb(230,8,51)"/><text x="1035.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.62%)</title><rect x="1032" y="324" width="8" height="15" fill="rgb(236,86,53)"/><text x="1035.00" y="334.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="1036" y="340" width="4" height="15" fill="rgb(207,160,51)"/><text x="1039.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.31%)</title><rect x="1036" y="356" width="4" height="15" fill="rgb(221,160,50)"/><text x="1039.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1036" y="372" width="4" height="15" fill="rgb(235,138,41)"/><text x="1039.00" y="382.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1040" y="276" width="3" height="15" fill="rgb(252,91,17)"/><text x="1043.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1040" y="292" width="3" height="15" fill="rgb(221,73,51)"/><text x="1043.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1043" y="276" width="4" height="15" fill="rgb(224,114,42)"/><text x="1046.00" y="286.50"></text></g><g><title>PyUnicode_ConcatAndDel (npy_3kcompat.h) (1 samples, 0.31%)</title><rect x="1043" y="292" width="4" height="15" fill="rgb(239,9,33)"/><text x="1046.00" y="302.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1047" y="292" width="4" height="15" fill="rgb(213,95,28)"/><text x="1050.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 2.79%)</title><rect x="1021" y="260" width="33" height="15" fill="rgb(249,107,32)"/><text x="1024.00" y="270.50">Np..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.62%)</title><rect x="1047" y="276" width="7" height="15" fill="rgb(241,165,42)"/><text x="1050.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1051" y="292" width="3" height="15" fill="rgb(228,217,54)"/><text x="1054.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1054" y="260" width="4" height="15" fill="rgb(247,216,3)"/><text x="1057.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="1054" y="276" width="4" height="15" fill="rgb(208,84,10)"/><text x="1057.00" y="286.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="1054" y="292" width="4" height="15" fill="rgb(205,57,49)"/><text x="1057.00" y="302.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.31%)</title><rect x="1058" y="260" width="4" height="15" fill="rgb(225,13,41)"/><text x="1061.00" y="270.50"></text></g><g><title>decision_function (sklearn/linear_model/_base.py) (88 samples, 27.24%)</title><rect x="751" y="180" width="322" height="15" fill="rgb(238,111,11)"/><text x="754.00" y="190.50">decision_function (sklearn/linear_model/_ba..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (23 samples, 7.12%)</title><rect x="989" y="196" width="84" height="15" fill="rgb(244,97,16)"/><text x="992.00" y="206.50">safe_spar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 4.95%)</title><rect x="1014" y="212" width="59" height="15" fill="rgb(240,89,28)"/><text x="1017.00" y="222.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 4.95%)</title><rect x="1014" y="228" width="59" height="15" fill="rgb(248,198,34)"/><text x="1017.00" y="238.50">PyUFun..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (16 samples, 4.95%)</title><rect x="1014" y="244" width="59" height="15" fill="rgb(227,80,46)"/><text x="1017.00" y="254.50">PyUFun..</text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.93%)</title><rect x="1062" y="260" width="11" height="15" fill="rgb(208,46,28)"/><text x="1065.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (3 samples, 0.93%)</title><rect x="1062" y="276" width="11" height="15" fill="rgb(239,11,38)"/><text x="1065.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1069" y="292" width="4" height="15" fill="rgb(250,92,13)"/><text x="1072.00" y="302.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1069" y="308" width="4" height="15" fill="rgb(248,71,53)"/><text x="1072.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1069" y="324" width="4" height="15" fill="rgb(231,177,46)"/><text x="1072.00" y="334.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="1069" y="340" width="4" height="15" fill="rgb(239,92,6)"/><text x="1072.00" y="350.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.31%)</title><rect x="1073" y="260" width="3" height="15" fill="rgb(229,145,45)"/><text x="1076.00" y="270.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1073" y="276" width="3" height="15" fill="rgb(220,36,18)"/><text x="1076.00" y="286.50"></text></g><g><title>0x7fdcb4286785 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1073" y="292" width="3" height="15" fill="rgb(234,134,32)"/><text x="1076.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (2 samples, 0.62%)</title><rect x="1073" y="228" width="7" height="15" fill="rgb(238,200,50)"/><text x="1076.00" y="238.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (2 samples, 0.62%)</title><rect x="1073" y="244" width="7" height="15" fill="rgb(237,162,33)"/><text x="1076.00" y="254.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.31%)</title><rect x="1076" y="260" width="4" height="15" fill="rgb(221,87,54)"/><text x="1079.00" y="270.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.31%)</title><rect x="1076" y="276" width="4" height="15" fill="rgb(234,126,51)"/><text x="1079.00" y="286.50"></text></g><g><title>DOUBLE_divide (loops.c.src) (1 samples, 0.31%)</title><rect x="1080" y="244" width="4" height="15" fill="rgb(222,29,41)"/><text x="1083.00" y="254.50"></text></g><g><title>run_binary_simd_divide_DOUBLE (simd.inc.src) (1 samples, 0.31%)</title><rect x="1080" y="260" width="4" height="15" fill="rgb(239,68,9)"/><text x="1083.00" y="270.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.31%)</title><rect x="1080" y="276" width="4" height="15" fill="rgb(221,20,35)"/><text x="1083.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.62%)</title><rect x="1084" y="260" width="7" height="15" fill="rgb(206,27,8)"/><text x="1087.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1091" y="260" width="4" height="15" fill="rgb(217,180,5)"/><text x="1094.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 1.86%)</title><rect x="1080" y="228" width="22" height="15" fill="rgb(214,76,24)"/><text x="1083.00" y="238.50">i..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (5 samples, 1.55%)</title><rect x="1084" y="244" width="18" height="15" fill="rgb(230,74,3)"/><text x="1087.00" y="254.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.62%)</title><rect x="1095" y="260" width="7" height="15" fill="rgb(225,95,9)"/><text x="1098.00" y="270.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1098" y="276" width="4" height="15" fill="rgb(216,19,34)"/><text x="1101.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.31%)</title><rect x="1098" y="292" width="4" height="15" fill="rgb(234,120,11)"/><text x="1101.00" y="302.50"></text></g><g><title>PyArray_DIMS (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="1098" y="308" width="4" height="15" fill="rgb(248,107,37)"/><text x="1101.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (9 samples, 2.79%)</title><rect x="1073" y="212" width="32" height="15" fill="rgb(219,49,6)"/><text x="1076.00" y="222.50">ex..</text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1102" y="228" width="3" height="15" fill="rgb(223,107,44)"/><text x="1105.00" y="238.50"></text></g><g><title>0x7fdc9f5b79a2 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1102" y="244" width="3" height="15" fill="rgb(246,106,1)"/><text x="1105.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1105" y="212" width="4" height="15" fill="rgb(240,171,20)"/><text x="1108.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 3.41%)</title><rect x="1073" y="196" width="40" height="15" fill="rgb(208,97,27)"/><text x="1076.00" y="206.50">PyU..</text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1109" y="212" width="4" height="15" fill="rgb(213,180,22)"/><text x="1112.00" y="222.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1109" y="228" width="4" height="15" fill="rgb(243,115,22)"/><text x="1112.00" y="238.50"></text></g><g><title>_predict_proba_lr (sklearn/linear_model/_base.py) (120 samples, 37.15%)</title><rect x="678" y="164" width="438" height="15" fill="rgb(228,206,26)"/><text x="681.00" y="174.50">_predict_proba_lr (sklearn/linear_model/_base.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.72%)</title><rect x="1073" y="180" width="43" height="15" fill="rgb(216,213,23)"/><text x="1076.00" y="190.50">ufun..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.31%)</title><rect x="1113" y="196" width="3" height="15" fill="rgb(205,154,40)"/><text x="1116.00" y="206.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.31%)</title><rect x="1116" y="164" width="4" height="15" fill="rgb(234,176,53)"/><text x="1119.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1116" y="180" width="4" height="15" fill="rgb(242,110,28)"/><text x="1119.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.93%)</title><rect x="1160" y="196" width="11" height="15" fill="rgb(210,214,12)"/><text x="1163.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 4.33%)</title><rect x="1131" y="180" width="51" height="15" fill="rgb(238,65,22)"/><text x="1134.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.93%)</title><rect x="1171" y="196" width="11" height="15" fill="rgb(246,224,52)"/><text x="1174.00" y="206.50"></text></g><g><title>profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (149 samples, 46.13%)</title><rect x="642" y="100" width="544" height="15" fill="rgb(231,57,5)"/><text x="645.00" y="110.50">profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (147 samples, 45.51%)</title><rect x="649" y="116" width="537" height="15" fill="rgb(219,7,20)"/><text x="652.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (144 samples, 44.58%)</title><rect x="660" y="132" width="526" height="15" fill="rgb(251,58,6)"/><text x="663.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict_proba (sklearn/linear_model/_logistic.py) (144 samples, 44.58%)</title><rect x="660" y="148" width="526" height="15" fill="rgb(213,183,37)"/><text x="663.00" y="158.50">predict_proba (sklearn/linear_model/_logistic.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 5.57%)</title><rect x="1120" y="164" width="66" height="15" fill="rgb(239,168,38)"/><text x="1123.00" y="174.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(219,76,1)"/><text x="1185.00" y="190.50"></text></g><g><title>all (323 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,38,42)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (323 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(234,170,13)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py)</text></g><g><title>profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (150 samples, 46.44%)</title><rect x="642" y="68" width="548" height="15" fill="rgb(216,200,35)"/><text x="645.00" y="78.50">profile_skl (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_5..</text></g><g><title>setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1_50_12_float_nozipmap.py) (150 samples, 46.44%)</title><rect x="642" y="84" width="548" height="15" fill="rgb(229,110,37)"/><text x="645.00" y="94.50">setup_profile (bench_LogisticRegression_liblinear_b_cl_64_solverliblinear_1..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(247,192,13)"/><text x="1189.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.31%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(230,60,24)"/><text x="1189.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.31%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(220,207,33)"/><text x="1189.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(236,70,53)"/><text x="1189.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(231,26,39)"/><text x="1189.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(210,69,39)"/><text x="1189.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(241,209,39)"/><text x="1189.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(213,198,21)"/><text x="1189.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.31%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(216,224,54)"/><text x="1189.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(245,29,21)"/><text x="1189.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(245,20,8)"/><text x="1189.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(223,30,53)"/><text x="1189.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(210,77,40)"/><text x="1189.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(214,80,1)"/><text x="1189.00" y="318.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(207,177,10)"/><text x="1189.00" y="334.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.31%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(212,32,15)"/><text x="1189.00" y="350.50"></text></g></g></svg>