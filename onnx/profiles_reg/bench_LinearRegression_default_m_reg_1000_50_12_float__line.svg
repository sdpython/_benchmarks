<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(210,168,47)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(231,121,19)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(219,28,29)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(241,171,10)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.41%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(254,221,26)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.41%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(231,114,20)"/><text x="13.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.41%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(224,184,34)"/><text x="13.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.41%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(210,77,51)"/><text x="13.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.41%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(209,64,18)"/><text x="13.00" y="1054.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.83%)</title><rect x="10" y="900" width="9" height="15" fill="rgb(205,1,11)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.41%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(253,164,43)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.41%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(254,74,29)"/><text x="17.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.41%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(211,173,41)"/><text x="17.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.41%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(223,159,11)"/><text x="17.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.41%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(239,111,50)"/><text x="17.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 1.65%)</title><rect x="10" y="852" width="19" height="15" fill="rgb(208,33,51)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 1.65%)</title><rect x="10" y="868" width="19" height="15" fill="rgb(222,5,33)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 1.65%)</title><rect x="10" y="884" width="19" height="15" fill="rgb(225,205,8)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (2 samples, 0.83%)</title><rect x="19" y="900" width="10" height="15" fill="rgb(223,221,22)"/><text x="22.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (2 samples, 0.83%)</title><rect x="19" y="916" width="10" height="15" fill="rgb(252,10,53)"/><text x="22.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.41%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(237,45,41)"/><text x="27.00" y="942.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(230,39,0)"/><text x="32.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2898) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(210,176,49)"/><text x="32.00" y="910.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.83%)</title><rect x="29" y="852" width="10" height="15" fill="rgb(210,211,50)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.83%)</title><rect x="29" y="868" width="10" height="15" fill="rgb(217,115,43)"/><text x="32.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.41%)</title><rect x="34" y="884" width="5" height="15" fill="rgb(249,74,41)"/><text x="37.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.41%)</title><rect x="34" y="900" width="5" height="15" fill="rgb(219,112,21)"/><text x="37.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.41%)</title><rect x="34" y="916" width="5" height="15" fill="rgb(224,135,30)"/><text x="37.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.41%)</title><rect x="34" y="932" width="5" height="15" fill="rgb(250,33,50)"/><text x="37.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.41%)</title><rect x="34" y="948" width="5" height="15" fill="rgb(209,26,21)"/><text x="37.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.41%)</title><rect x="34" y="964" width="5" height="15" fill="rgb(234,204,20)"/><text x="37.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:2) (7 samples, 2.89%)</title><rect x="10" y="148" width="34" height="15" fill="rgb(238,166,26)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="164" width="34" height="15" fill="rgb(247,135,54)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.89%)</title><rect x="10" y="180" width="34" height="15" fill="rgb(251,149,28)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="196" width="34" height="15" fill="rgb(237,67,24)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="212" width="34" height="15" fill="rgb(253,98,18)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="228" width="34" height="15" fill="rgb(247,186,6)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="244" width="34" height="15" fill="rgb(213,169,13)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="260" width="34" height="15" fill="rgb(240,46,6)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="276" width="34" height="15" fill="rgb(208,227,25)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 2.89%)</title><rect x="10" y="292" width="34" height="15" fill="rgb(226,69,52)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="308" width="34" height="15" fill="rgb(210,211,31)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="324" width="34" height="15" fill="rgb(234,139,2)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="340" width="34" height="15" fill="rgb(245,180,43)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="356" width="34" height="15" fill="rgb(227,165,2)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="372" width="34" height="15" fill="rgb(223,187,33)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (7 samples, 2.89%)</title><rect x="10" y="388" width="34" height="15" fill="rgb(218,69,29)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="404" width="34" height="15" fill="rgb(216,65,53)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="420" width="34" height="15" fill="rgb(208,74,4)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="436" width="34" height="15" fill="rgb(227,55,37)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="452" width="34" height="15" fill="rgb(218,123,26)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="468" width="34" height="15" fill="rgb(230,107,21)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (7 samples, 2.89%)</title><rect x="10" y="484" width="34" height="15" fill="rgb(233,14,19)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="500" width="34" height="15" fill="rgb(250,212,39)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="516" width="34" height="15" fill="rgb(213,206,44)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="532" width="34" height="15" fill="rgb(252,146,53)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="548" width="34" height="15" fill="rgb(250,209,40)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="564" width="34" height="15" fill="rgb(247,226,53)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (7 samples, 2.89%)</title><rect x="10" y="580" width="34" height="15" fill="rgb(254,130,22)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="596" width="34" height="15" fill="rgb(248,63,45)"/><text x="13.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.89%)</title><rect x="10" y="612" width="34" height="15" fill="rgb(227,61,14)"/><text x="13.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="628" width="34" height="15" fill="rgb(222,162,6)"/><text x="13.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="644" width="34" height="15" fill="rgb(228,165,14)"/><text x="13.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="660" width="34" height="15" fill="rgb(241,190,43)"/><text x="13.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="676" width="34" height="15" fill="rgb(217,85,9)"/><text x="13.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="692" width="34" height="15" fill="rgb(251,127,28)"/><text x="13.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="708" width="34" height="15" fill="rgb(214,94,36)"/><text x="13.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (7 samples, 2.89%)</title><rect x="10" y="724" width="34" height="15" fill="rgb(207,28,53)"/><text x="13.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.89%)</title><rect x="10" y="740" width="34" height="15" fill="rgb(240,31,25)"/><text x="13.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.89%)</title><rect x="10" y="756" width="34" height="15" fill="rgb(254,210,47)"/><text x="13.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.89%)</title><rect x="10" y="772" width="34" height="15" fill="rgb(215,80,45)"/><text x="13.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.89%)</title><rect x="10" y="788" width="34" height="15" fill="rgb(207,24,39)"/><text x="13.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.89%)</title><rect x="10" y="804" width="34" height="15" fill="rgb(241,3,26)"/><text x="13.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (7 samples, 2.89%)</title><rect x="10" y="820" width="34" height="15" fill="rgb(222,109,10)"/><text x="13.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (7 samples, 2.89%)</title><rect x="10" y="836" width="34" height="15" fill="rgb(250,142,45)"/><text x="13.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.41%)</title><rect x="39" y="852" width="5" height="15" fill="rgb(209,175,42)"/><text x="42.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.41%)</title><rect x="39" y="868" width="5" height="15" fill="rgb(223,207,20)"/><text x="42.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.41%)</title><rect x="39" y="884" width="5" height="15" fill="rgb(207,32,52)"/><text x="42.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2133) (1 samples, 0.41%)</title><rect x="39" y="900" width="5" height="15" fill="rgb(215,208,43)"/><text x="42.00" y="910.50"></text></g><g><title>basename (posixpath.py:147) (1 samples, 0.41%)</title><rect x="39" y="916" width="5" height="15" fill="rgb(233,212,19)"/><text x="42.00" y="926.50"></text></g><g><title>_get_sep (posixpath.py:42) (1 samples, 0.41%)</title><rect x="39" y="932" width="5" height="15" fill="rgb(228,7,0)"/><text x="42.00" y="942.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:10) (1 samples, 0.41%)</title><rect x="44" y="820" width="5" height="15" fill="rgb(220,144,24)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="44" y="836" width="5" height="15" fill="rgb(251,29,27)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="44" y="852" width="5" height="15" fill="rgb(236,10,13)"/><text x="47.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="44" y="868" width="5" height="15" fill="rgb(209,65,53)"/><text x="47.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="44" y="884" width="5" height="15" fill="rgb(205,143,9)"/><text x="47.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="44" y="900" width="5" height="15" fill="rgb(236,77,53)"/><text x="47.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/internet_helper.py:11) (1 samples, 0.41%)</title><rect x="44" y="916" width="5" height="15" fill="rgb(254,144,33)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="44" y="932" width="5" height="15" fill="rgb(212,150,8)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.41%)</title><rect x="44" y="948" width="5" height="15" fill="rgb(221,214,53)"/><text x="47.00" y="958.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:898) (1 samples, 0.41%)</title><rect x="44" y="964" width="5" height="15" fill="rgb(217,100,10)"/><text x="47.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.83%)</title><rect x="44" y="244" width="9" height="15" fill="rgb(242,118,47)"/><text x="47.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="260" width="9" height="15" fill="rgb(250,84,4)"/><text x="47.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="276" width="9" height="15" fill="rgb(250,205,43)"/><text x="47.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="292" width="9" height="15" fill="rgb(207,92,7)"/><text x="47.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="308" width="9" height="15" fill="rgb(236,32,39)"/><text x="47.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="324" width="9" height="15" fill="rgb(207,20,20)"/><text x="47.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.83%)</title><rect x="44" y="340" width="9" height="15" fill="rgb(235,211,22)"/><text x="47.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="356" width="9" height="15" fill="rgb(229,169,49)"/><text x="47.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="44" y="372" width="9" height="15" fill="rgb(240,62,20)"/><text x="47.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="388" width="9" height="15" fill="rgb(225,145,6)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="404" width="9" height="15" fill="rgb(237,87,0)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="420" width="9" height="15" fill="rgb(218,45,31)"/><text x="47.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="436" width="9" height="15" fill="rgb(238,67,45)"/><text x="47.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="452" width="9" height="15" fill="rgb(209,89,33)"/><text x="47.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="468" width="9" height="15" fill="rgb(239,224,13)"/><text x="47.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.83%)</title><rect x="44" y="484" width="9" height="15" fill="rgb(231,128,11)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="500" width="9" height="15" fill="rgb(240,46,40)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="516" width="9" height="15" fill="rgb(211,158,2)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="532" width="9" height="15" fill="rgb(224,85,29)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="548" width="9" height="15" fill="rgb(210,153,40)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="564" width="9" height="15" fill="rgb(249,216,15)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.83%)</title><rect x="44" y="580" width="9" height="15" fill="rgb(221,214,6)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="596" width="9" height="15" fill="rgb(209,128,34)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="44" y="612" width="9" height="15" fill="rgb(224,122,28)"/><text x="47.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="628" width="9" height="15" fill="rgb(246,70,23)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="644" width="9" height="15" fill="rgb(224,213,46)"/><text x="47.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="660" width="9" height="15" fill="rgb(224,44,13)"/><text x="47.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="676" width="9" height="15" fill="rgb(225,34,21)"/><text x="47.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="692" width="9" height="15" fill="rgb(229,1,29)"/><text x="47.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="708" width="9" height="15" fill="rgb(254,138,43)"/><text x="47.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.83%)</title><rect x="44" y="724" width="9" height="15" fill="rgb(252,186,16)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="44" y="740" width="9" height="15" fill="rgb(221,124,12)"/><text x="47.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="44" y="756" width="9" height="15" fill="rgb(247,50,20)"/><text x="47.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="44" y="772" width="9" height="15" fill="rgb(227,168,37)"/><text x="47.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="44" y="788" width="9" height="15" fill="rgb(251,182,1)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="44" y="804" width="9" height="15" fill="rgb(217,188,11)"/><text x="47.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.41%)</title><rect x="49" y="820" width="4" height="15" fill="rgb(211,79,26)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="836" width="4" height="15" fill="rgb(220,56,17)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="852" width="4" height="15" fill="rgb(220,84,12)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="868" width="4" height="15" fill="rgb(228,105,45)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="49" y="884" width="4" height="15" fill="rgb(218,143,15)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="900" width="4" height="15" fill="rgb(239,199,43)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.41%)</title><rect x="49" y="916" width="4" height="15" fill="rgb(243,207,23)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="932" width="4" height="15" fill="rgb(225,56,5)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(208,185,6)"/><text x="52.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(205,72,17)"/><text x="52.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(209,96,53)"/><text x="52.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(228,16,11)"/><text x="52.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(254,121,49)"/><text x="52.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(225,146,53)"/><text x="52.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(212,219,14)"/><text x="52.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.41%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(228,18,15)"/><text x="52.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(239,133,31)"/><text x="52.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(229,113,41)"/><text x="52.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(219,97,45)"/><text x="52.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(213,209,20)"/><text x="52.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:828) (1 samples, 0.41%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(205,3,7)"/><text x="52.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.41%)</title><rect x="53" y="628" width="5" height="15" fill="rgb(207,135,13)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="644" width="5" height="15" fill="rgb(206,45,28)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="660" width="5" height="15" fill="rgb(254,87,45)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="676" width="5" height="15" fill="rgb(238,99,16)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="692" width="5" height="15" fill="rgb(243,104,20)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="708" width="5" height="15" fill="rgb(244,193,34)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:12) (1 samples, 0.41%)</title><rect x="53" y="724" width="5" height="15" fill="rgb(242,187,6)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="740" width="5" height="15" fill="rgb(222,44,18)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="756" width="5" height="15" fill="rgb(220,0,36)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="772" width="5" height="15" fill="rgb(211,28,46)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="788" width="5" height="15" fill="rgb(209,202,35)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="804" width="5" height="15" fill="rgb(220,161,36)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py:1) (1 samples, 0.41%)</title><rect x="53" y="820" width="5" height="15" fill="rgb(208,117,18)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="836" width="5" height="15" fill="rgb(227,211,48)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="852" width="5" height="15" fill="rgb(222,122,47)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="868" width="5" height="15" fill="rgb(206,108,17)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="884" width="5" height="15" fill="rgb(215,1,21)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="900" width="5" height="15" fill="rgb(249,87,26)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_json.py:26) (1 samples, 0.41%)</title><rect x="53" y="916" width="5" height="15" fill="rgb(236,80,50)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="932" width="5" height="15" fill="rgb(205,96,22)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="948" width="5" height="15" fill="rgb(214,229,49)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="964" width="5" height="15" fill="rgb(209,133,7)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="53" y="980" width="5" height="15" fill="rgb(220,134,39)"/><text x="56.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="53" y="996" width="5" height="15" fill="rgb(217,160,19)"/><text x="56.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="53" y="1012" width="5" height="15" fill="rgb(220,217,43)"/><text x="56.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.83%)</title><rect x="53" y="436" width="10" height="15" fill="rgb(239,55,19)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="452" width="10" height="15" fill="rgb(218,121,45)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="468" width="10" height="15" fill="rgb(206,206,45)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="484" width="10" height="15" fill="rgb(238,84,47)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="500" width="10" height="15" fill="rgb(219,71,16)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="516" width="10" height="15" fill="rgb(249,89,34)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.83%)</title><rect x="53" y="532" width="10" height="15" fill="rgb(225,226,40)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="53" y="548" width="10" height="15" fill="rgb(232,82,46)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="53" y="564" width="10" height="15" fill="rgb(220,59,6)"/><text x="56.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="53" y="580" width="10" height="15" fill="rgb(252,124,42)"/><text x="56.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="53" y="596" width="10" height="15" fill="rgb(229,208,49)"/><text x="56.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="53" y="612" width="10" height="15" fill="rgb(238,73,38)"/><text x="56.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.41%)</title><rect x="58" y="628" width="5" height="15" fill="rgb(254,222,48)"/><text x="61.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="644" width="5" height="15" fill="rgb(205,224,23)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="660" width="5" height="15" fill="rgb(244,16,18)"/><text x="61.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="676" width="5" height="15" fill="rgb(237,187,1)"/><text x="61.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="692" width="5" height="15" fill="rgb(215,91,53)"/><text x="61.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="708" width="5" height="15" fill="rgb(220,195,0)"/><text x="61.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.41%)</title><rect x="58" y="724" width="5" height="15" fill="rgb(231,177,17)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="740" width="5" height="15" fill="rgb(240,77,8)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="756" width="5" height="15" fill="rgb(214,112,40)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="772" width="5" height="15" fill="rgb(235,98,16)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="788" width="5" height="15" fill="rgb(218,90,19)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="804" width="5" height="15" fill="rgb(235,5,52)"/><text x="61.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.41%)</title><rect x="58" y="820" width="5" height="15" fill="rgb(243,216,27)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="836" width="5" height="15" fill="rgb(226,167,17)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="852" width="5" height="15" fill="rgb(224,32,30)"/><text x="61.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="868" width="5" height="15" fill="rgb(245,151,26)"/><text x="61.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="884" width="5" height="15" fill="rgb(223,54,16)"/><text x="61.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="900" width="5" height="15" fill="rgb(238,41,32)"/><text x="61.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.41%)</title><rect x="58" y="916" width="5" height="15" fill="rgb(250,103,20)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="932" width="5" height="15" fill="rgb(216,22,47)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="948" width="5" height="15" fill="rgb(218,186,46)"/><text x="61.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="964" width="5" height="15" fill="rgb(234,48,25)"/><text x="61.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="980" width="5" height="15" fill="rgb(249,133,0)"/><text x="61.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="996" width="5" height="15" fill="rgb(213,59,3)"/><text x="61.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (1 samples, 0.41%)</title><rect x="58" y="1012" width="5" height="15" fill="rgb(238,225,9)"/><text x="61.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.41%)</title><rect x="58" y="1028" width="5" height="15" fill="rgb(210,156,25)"/><text x="61.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:739) (1 samples, 0.41%)</title><rect x="58" y="1044" width="5" height="15" fill="rgb(232,73,45)"/><text x="61.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.41%)</title><rect x="58" y="1060" width="5" height="15" fill="rgb(211,171,50)"/><text x="61.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.41%)</title><rect x="58" y="1076" width="5" height="15" fill="rgb(235,74,25)"/><text x="61.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.41%)</title><rect x="58" y="1092" width="5" height="15" fill="rgb(224,47,39)"/><text x="61.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.41%)</title><rect x="58" y="1108" width="5" height="15" fill="rgb(240,16,21)"/><text x="61.00" y="1118.50"></text></g><g><title>0x7f495f60d1a0 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="1124" width="5" height="15" fill="rgb(222,183,8)"/><text x="61.00" y="1134.50"></text></g><g><title>0x7f495f5fca71 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="63" y="1508" width="5" height="15" fill="rgb(238,166,13)"/><text x="66.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:4) (13 samples, 5.37%)</title><rect x="10" y="52" width="63" height="15" fill="rgb(225,120,28)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 5.37%)</title><rect x="10" y="68" width="63" height="15" fill="rgb(249,128,49)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 5.37%)</title><rect x="10" y="84" width="63" height="15" fill="rgb(247,202,41)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 5.37%)</title><rect x="10" y="100" width="63" height="15" fill="rgb(243,136,19)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 5.37%)</title><rect x="10" y="116" width="63" height="15" fill="rgb(214,226,9)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 5.37%)</title><rect x="10" y="132" width="63" height="15" fill="rgb(216,213,41)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:7) (6 samples, 2.48%)</title><rect x="44" y="148" width="29" height="15" fill="rgb(230,9,13)"/><text x="47.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.48%)</title><rect x="44" y="164" width="29" height="15" fill="rgb(234,201,22)"/><text x="47.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.48%)</title><rect x="44" y="180" width="29" height="15" fill="rgb(209,139,47)"/><text x="47.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.48%)</title><rect x="44" y="196" width="29" height="15" fill="rgb(211,11,54)"/><text x="47.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.48%)</title><rect x="44" y="212" width="29" height="15" fill="rgb(227,62,51)"/><text x="47.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.48%)</title><rect x="44" y="228" width="29" height="15" fill="rgb(243,63,39)"/><text x="47.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.65%)</title><rect x="53" y="244" width="20" height="15" fill="rgb(240,64,41)"/><text x="56.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="53" y="260" width="20" height="15" fill="rgb(210,16,13)"/><text x="56.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.65%)</title><rect x="53" y="276" width="20" height="15" fill="rgb(220,217,36)"/><text x="56.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.65%)</title><rect x="53" y="292" width="20" height="15" fill="rgb(217,185,50)"/><text x="56.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.65%)</title><rect x="53" y="308" width="20" height="15" fill="rgb(249,31,50)"/><text x="56.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="53" y="324" width="20" height="15" fill="rgb(238,1,23)"/><text x="56.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.65%)</title><rect x="53" y="340" width="20" height="15" fill="rgb(254,82,40)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.65%)</title><rect x="53" y="356" width="20" height="15" fill="rgb(247,15,25)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.65%)</title><rect x="53" y="372" width="20" height="15" fill="rgb(245,228,22)"/><text x="56.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.65%)</title><rect x="53" y="388" width="20" height="15" fill="rgb(249,110,9)"/><text x="56.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.65%)</title><rect x="53" y="404" width="20" height="15" fill="rgb(244,3,47)"/><text x="56.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.65%)</title><rect x="53" y="420" width="20" height="15" fill="rgb(252,44,43)"/><text x="56.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.83%)</title><rect x="63" y="436" width="10" height="15" fill="rgb(207,128,24)"/><text x="66.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="452" width="10" height="15" fill="rgb(241,183,12)"/><text x="66.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="63" y="468" width="10" height="15" fill="rgb(222,134,13)"/><text x="66.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="484" width="10" height="15" fill="rgb(248,72,13)"/><text x="66.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="500" width="10" height="15" fill="rgb(244,200,47)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="516" width="10" height="15" fill="rgb(227,131,22)"/><text x="66.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="532" width="10" height="15" fill="rgb(208,194,29)"/><text x="66.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="548" width="10" height="15" fill="rgb(239,0,36)"/><text x="66.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="564" width="10" height="15" fill="rgb(239,197,11)"/><text x="66.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.83%)</title><rect x="63" y="580" width="10" height="15" fill="rgb(246,150,28)"/><text x="66.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="596" width="10" height="15" fill="rgb(226,2,10)"/><text x="66.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="612" width="10" height="15" fill="rgb(218,160,5)"/><text x="66.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="628" width="10" height="15" fill="rgb(209,193,10)"/><text x="66.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="644" width="10" height="15" fill="rgb(220,183,27)"/><text x="66.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="660" width="10" height="15" fill="rgb(238,87,52)"/><text x="66.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.83%)</title><rect x="63" y="676" width="10" height="15" fill="rgb(248,193,6)"/><text x="66.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="692" width="10" height="15" fill="rgb(218,171,2)"/><text x="66.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="708" width="10" height="15" fill="rgb(254,225,14)"/><text x="66.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="724" width="10" height="15" fill="rgb(250,111,45)"/><text x="66.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="740" width="10" height="15" fill="rgb(221,71,30)"/><text x="66.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="756" width="10" height="15" fill="rgb(236,66,35)"/><text x="66.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.83%)</title><rect x="63" y="772" width="10" height="15" fill="rgb(216,147,3)"/><text x="66.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="788" width="10" height="15" fill="rgb(231,42,43)"/><text x="66.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="804" width="10" height="15" fill="rgb(228,161,40)"/><text x="66.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="820" width="10" height="15" fill="rgb(209,159,15)"/><text x="66.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="836" width="10" height="15" fill="rgb(248,13,36)"/><text x="66.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="852" width="10" height="15" fill="rgb(241,165,49)"/><text x="66.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.83%)</title><rect x="63" y="868" width="10" height="15" fill="rgb(233,157,43)"/><text x="66.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="884" width="10" height="15" fill="rgb(247,76,28)"/><text x="66.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.83%)</title><rect x="63" y="900" width="10" height="15" fill="rgb(228,79,4)"/><text x="66.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="916" width="10" height="15" fill="rgb(235,182,49)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="932" width="10" height="15" fill="rgb(252,164,4)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="948" width="10" height="15" fill="rgb(235,38,47)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="964" width="10" height="15" fill="rgb(212,207,14)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="980" width="10" height="15" fill="rgb(211,179,1)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="996" width="10" height="15" fill="rgb(228,100,39)"/><text x="66.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.83%)</title><rect x="63" y="1012" width="10" height="15" fill="rgb(212,143,4)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="1028" width="10" height="15" fill="rgb(206,89,34)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="1044" width="10" height="15" fill="rgb(213,225,16)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="1060" width="10" height="15" fill="rgb(238,11,18)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="1076" width="10" height="15" fill="rgb(243,150,1)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1092" width="10" height="15" fill="rgb(253,201,3)"/><text x="66.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.83%)</title><rect x="63" y="1108" width="10" height="15" fill="rgb(243,97,10)"/><text x="66.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.83%)</title><rect x="63" y="1124" width="10" height="15" fill="rgb(213,228,1)"/><text x="66.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1140" width="10" height="15" fill="rgb(241,14,34)"/><text x="66.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="1156" width="10" height="15" fill="rgb(207,4,27)"/><text x="66.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="1172" width="10" height="15" fill="rgb(235,57,28)"/><text x="66.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="1188" width="10" height="15" fill="rgb(210,73,21)"/><text x="66.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="1204" width="10" height="15" fill="rgb(215,80,36)"/><text x="66.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1220" width="10" height="15" fill="rgb(237,195,30)"/><text x="66.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.83%)</title><rect x="63" y="1236" width="10" height="15" fill="rgb(219,79,21)"/><text x="66.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.83%)</title><rect x="63" y="1252" width="10" height="15" fill="rgb(247,58,45)"/><text x="66.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1268" width="10" height="15" fill="rgb(229,134,54)"/><text x="66.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="1284" width="10" height="15" fill="rgb(239,211,35)"/><text x="66.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="1300" width="10" height="15" fill="rgb(252,183,54)"/><text x="66.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="1316" width="10" height="15" fill="rgb(205,108,9)"/><text x="66.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="1332" width="10" height="15" fill="rgb(253,182,23)"/><text x="66.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1348" width="10" height="15" fill="rgb(253,187,7)"/><text x="66.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.83%)</title><rect x="63" y="1364" width="10" height="15" fill="rgb(222,213,1)"/><text x="66.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="63" y="1380" width="10" height="15" fill="rgb(213,35,24)"/><text x="66.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="63" y="1396" width="10" height="15" fill="rgb(219,37,28)"/><text x="66.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="63" y="1412" width="10" height="15" fill="rgb(254,95,3)"/><text x="66.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="63" y="1428" width="10" height="15" fill="rgb(246,133,42)"/><text x="66.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="63" y="1444" width="10" height="15" fill="rgb(232,181,1)"/><text x="66.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.83%)</title><rect x="63" y="1460" width="10" height="15" fill="rgb(229,155,36)"/><text x="66.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.83%)</title><rect x="63" y="1476" width="10" height="15" fill="rgb(244,68,22)"/><text x="66.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.83%)</title><rect x="63" y="1492" width="10" height="15" fill="rgb(217,39,32)"/><text x="66.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.41%)</title><rect x="68" y="1508" width="5" height="15" fill="rgb(205,188,28)"/><text x="71.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.41%)</title><rect x="68" y="1524" width="5" height="15" fill="rgb(243,155,30)"/><text x="71.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.41%)</title><rect x="68" y="1540" width="5" height="15" fill="rgb(228,22,24)"/><text x="71.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.41%)</title><rect x="68" y="1556" width="5" height="15" fill="rgb(238,61,21)"/><text x="71.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:117) (1 samples, 0.41%)</title><rect x="68" y="1572" width="5" height="15" fill="rgb(209,184,52)"/><text x="71.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.41%)</title><rect x="68" y="1588" width="5" height="15" fill="rgb(224,65,16)"/><text x="71.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:40) (1 samples, 0.41%)</title><rect x="73" y="52" width="5" height="15" fill="rgb(209,17,0)"/><text x="76.00" y="62.50"></text></g><g><title>start (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:11) (1 samples, 0.41%)</title><rect x="73" y="68" width="5" height="15" fill="rgb(205,105,5)"/><text x="76.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_m_reg.py:39) (1 samples, 0.41%)</title><rect x="73" y="84" width="5" height="15" fill="rgb(236,213,40)"/><text x="76.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.41%)</title><rect x="73" y="100" width="5" height="15" fill="rgb(215,39,4)"/><text x="76.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (1 samples, 0.41%)</title><rect x="73" y="116" width="5" height="15" fill="rgb(207,220,46)"/><text x="76.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (1 samples, 0.41%)</title><rect x="73" y="132" width="5" height="15" fill="rgb(211,222,15)"/><text x="76.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:243) (1 samples, 0.41%)</title><rect x="73" y="148" width="5" height="15" fill="rgb(236,214,15)"/><text x="76.00" y="158.50"></text></g><g><title>array_assign_subscript (mapping.c:1927) (1 samples, 0.41%)</title><rect x="73" y="164" width="5" height="15" fill="rgb(249,82,17)"/><text x="76.00" y="174.50"></text></g><g><title>PyArray_CopyObject (arrayobject.c:364) (1 samples, 0.41%)</title><rect x="73" y="180" width="5" height="15" fill="rgb(228,16,42)"/><text x="76.00" y="190.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.41%)</title><rect x="73" y="196" width="5" height="15" fill="rgb(254,126,32)"/><text x="76.00" y="206.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.41%)</title><rect x="73" y="212" width="5" height="15" fill="rgb(217,146,44)"/><text x="76.00" y="222.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="73" y="228" width="5" height="15" fill="rgb(206,120,27)"/><text x="76.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:47) (1 samples, 0.41%)</title><rect x="78" y="52" width="5" height="15" fill="rgb(241,141,12)"/><text x="81.00" y="62.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:46) (1 samples, 0.41%)</title><rect x="78" y="68" width="5" height="15" fill="rgb(205,138,23)"/><text x="81.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:25) (1 samples, 0.41%)</title><rect x="78" y="84" width="5" height="15" fill="rgb(241,95,48)"/><text x="81.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.41%)</title><rect x="78" y="100" width="5" height="15" fill="rgb(234,116,47)"/><text x="81.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.41%)</title><rect x="78" y="116" width="5" height="15" fill="rgb(250,120,40)"/><text x="81.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:40) (1 samples, 0.41%)</title><rect x="78" y="132" width="5" height="15" fill="rgb(240,40,34)"/><text x="81.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="78" y="148" width="5" height="15" fill="rgb(229,209,42)"/><text x="81.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="78" y="164" width="5" height="15" fill="rgb(232,125,5)"/><text x="81.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="78" y="180" width="5" height="15" fill="rgb(245,55,47)"/><text x="81.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="78" y="196" width="5" height="15" fill="rgb(212,158,39)"/><text x="81.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="78" y="212" width="5" height="15" fill="rgb(233,157,26)"/><text x="81.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py:8) (1 samples, 0.41%)</title><rect x="78" y="228" width="5" height="15" fill="rgb(248,109,37)"/><text x="81.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="78" y="244" width="5" height="15" fill="rgb(250,67,24)"/><text x="81.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="78" y="260" width="5" height="15" fill="rgb(228,58,30)"/><text x="81.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="78" y="276" width="5" height="15" fill="rgb(242,177,34)"/><text x="81.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="78" y="292" width="5" height="15" fill="rgb(248,69,5)"/><text x="81.00" y="302.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="78" y="308" width="5" height="15" fill="rgb(240,3,33)"/><text x="81.00" y="318.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="78" y="324" width="5" height="15" fill="rgb(226,159,11)"/><text x="81.00" y="334.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:205) (1 samples, 0.41%)</title><rect x="83" y="164" width="5" height="15" fill="rgb(244,158,18)"/><text x="86.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.41%)</title><rect x="83" y="180" width="5" height="15" fill="rgb(221,160,11)"/><text x="86.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.41%)</title><rect x="83" y="196" width="5" height="15" fill="rgb(216,28,5)"/><text x="86.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.41%)</title><rect x="88" y="180" width="4" height="15" fill="rgb(215,10,14)"/><text x="91.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.41%)</title><rect x="88" y="196" width="4" height="15" fill="rgb(235,155,15)"/><text x="91.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (1 samples, 0.41%)</title><rect x="92" y="180" width="5" height="15" fill="rgb(225,28,3)"/><text x="95.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (1 samples, 0.41%)</title><rect x="92" y="196" width="5" height="15" fill="rgb(247,80,33)"/><text x="95.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.41%)</title><rect x="92" y="212" width="5" height="15" fill="rgb(227,34,29)"/><text x="95.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.41%)</title><rect x="97" y="180" width="5" height="15" fill="rgb(246,63,5)"/><text x="100.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.41%)</title><rect x="97" y="196" width="5" height="15" fill="rgb(223,56,3)"/><text x="100.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.41%)</title><rect x="97" y="212" width="5" height="15" fill="rgb(234,170,38)"/><text x="100.00" y="222.50"></text></g><g><title>0x7f495f612b89 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="102" y="212" width="5" height="15" fill="rgb(228,17,7)"/><text x="105.00" y="222.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (5 samples, 2.07%)</title><rect x="88" y="164" width="24" height="15" fill="rgb(241,73,26)"/><text x="91.00" y="174.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.83%)</title><rect x="102" y="180" width="10" height="15" fill="rgb(216,140,12)"/><text x="105.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.83%)</title><rect x="102" y="196" width="10" height="15" fill="rgb(211,26,11)"/><text x="105.00" y="206.50"></text></g><g><title>0x7f495f612e7e (libc-2.29.so) (1 samples, 0.41%)</title><rect x="107" y="212" width="5" height="15" fill="rgb(234,96,1)"/><text x="110.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.41%)</title><rect x="112" y="196" width="5" height="15" fill="rgb(207,53,0)"/><text x="115.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.41%)</title><rect x="112" y="212" width="5" height="15" fill="rgb(247,60,1)"/><text x="115.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.41%)</title><rect x="112" y="228" width="5" height="15" fill="rgb(220,133,52)"/><text x="115.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1380) (1 samples, 0.41%)</title><rect x="112" y="244" width="5" height="15" fill="rgb(222,43,33)"/><text x="115.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="112" y="260" width="5" height="15" fill="rgb(251,8,22)"/><text x="115.00" y="270.50"></text></g><g><title>array_add (number.c:330) (2 samples, 0.83%)</title><rect x="112" y="180" width="10" height="15" fill="rgb(251,191,13)"/><text x="115.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.41%)</title><rect x="117" y="196" width="5" height="15" fill="rgb(218,104,12)"/><text x="120.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.41%)</title><rect x="117" y="212" width="5" height="15" fill="rgb(236,48,41)"/><text x="120.00" y="222.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.41%)</title><rect x="117" y="228" width="5" height="15" fill="rgb(241,27,34)"/><text x="120.00" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.41%)</title><rect x="117" y="244" width="5" height="15" fill="rgb(234,107,28)"/><text x="120.00" y="254.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.65%)</title><rect x="122" y="196" width="19" height="15" fill="rgb(233,207,26)"/><text x="125.00" y="206.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (2 samples, 0.83%)</title><rect x="141" y="276" width="10" height="15" fill="rgb(244,169,23)"/><text x="144.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (3 samples, 1.24%)</title><rect x="141" y="260" width="15" height="15" fill="rgb(236,226,5)"/><text x="144.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.41%)</title><rect x="151" y="276" width="5" height="15" fill="rgb(254,140,7)"/><text x="154.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.41%)</title><rect x="151" y="292" width="5" height="15" fill="rgb(217,44,38)"/><text x="154.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1043) (1 samples, 0.41%)</title><rect x="151" y="308" width="5" height="15" fill="rgb(238,94,6)"/><text x="154.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (11 samples, 4.55%)</title><rect x="141" y="228" width="54" height="15" fill="rgb(205,110,9)"/><text x="144.00" y="238.50">PyUFu..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (11 samples, 4.55%)</title><rect x="141" y="244" width="54" height="15" fill="rgb(254,64,21)"/><text x="144.00" y="254.50">NpyIt..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (8 samples, 3.31%)</title><rect x="156" y="260" width="39" height="15" fill="rgb(210,193,40)"/><text x="159.00" y="270.50">npy..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (8 samples, 3.31%)</title><rect x="156" y="276" width="39" height="15" fill="rgb(223,28,52)"/><text x="159.00" y="286.50">PyA..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (8 samples, 3.31%)</title><rect x="156" y="292" width="39" height="15" fill="rgb(244,2,46)"/><text x="159.00" y="302.50">raw..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (8 samples, 3.31%)</title><rect x="156" y="308" width="39" height="15" fill="rgb(236,151,15)"/><text x="159.00" y="318.50">_al..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.83%)</title><rect x="195" y="324" width="10" height="15" fill="rgb(244,40,49)"/><text x="198.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="200" y="340" width="5" height="15" fill="rgb(253,202,5)"/><text x="203.00" y="350.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="200" y="356" width="5" height="15" fill="rgb(222,20,51)"/><text x="203.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:54) (103 samples, 42.56%)</title><rect x="83" y="52" width="502" height="15" fill="rgb(206,48,49)"/><text x="86.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:..</text></g><g><title>profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:53) (103 samples, 42.56%)</title><rect x="83" y="68" width="502" height="15" fill="rgb(222,118,29)"/><text x="86.00" y="78.50">profile_skl (bench_LinearRegression_default_m_reg_1000_50_12_float_...</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:37) (103 samples, 42.56%)</title><rect x="83" y="84" width="502" height="15" fill="rgb(205,188,36)"/><text x="86.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:31) (103 samples, 42.56%)</title><rect x="83" y="100" width="502" height="15" fill="rgb(244,147,40)"/><text x="86.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:3..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (103 samples, 42.56%)</title><rect x="83" y="116" width="502" height="15" fill="rgb(229,146,13)"/><text x="86.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (103 samples, 42.56%)</title><rect x="83" y="132" width="502" height="15" fill="rgb(223,48,32)"/><text x="86.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (103 samples, 42.56%)</title><rect x="83" y="148" width="502" height="15" fill="rgb(233,201,18)"/><text x="86.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (97 samples, 40.08%)</title><rect x="112" y="164" width="473" height="15" fill="rgb(221,148,38)"/><text x="115.00" y="174.50">_decision_function (sklearn/linear_model/_base.py:209)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (95 samples, 39.26%)</title><rect x="122" y="180" width="463" height="15" fill="rgb(223,211,24)"/><text x="125.00" y="190.50">safe_sparse_dot (sklearn/utils/extmath.py:151)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (91 samples, 37.60%)</title><rect x="141" y="196" width="444" height="15" fill="rgb(206,182,35)"/><text x="144.00" y="206.50">ufunc_generic_call (ufunc_object.c:4725)</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (91 samples, 37.60%)</title><rect x="141" y="212" width="444" height="15" fill="rgb(245,67,19)"/><text x="144.00" y="222.50">PyUFunc_GenericFunction (ufunc_object.c:3142)</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (80 samples, 33.06%)</title><rect x="195" y="228" width="390" height="15" fill="rgb(245,167,41)"/><text x="198.00" y="238.50">PyUFunc_GeneralizedFunction (ufunc_object.c:3008)</text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (80 samples, 33.06%)</title><rect x="195" y="244" width="390" height="15" fill="rgb(219,23,41)"/><text x="198.00" y="254.50">DOUBLE_matmul (matmul.c.src:459)</text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (80 samples, 33.06%)</title><rect x="195" y="260" width="390" height="15" fill="rgb(233,157,40)"/><text x="198.00" y="270.50">DOUBLE_gemv (matmul.c.src:105)</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (80 samples, 33.06%)</title><rect x="195" y="276" width="390" height="15" fill="rgb(235,175,53)"/><text x="198.00" y="286.50">cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (80 samples, 33.06%)</title><rect x="195" y="292" width="390" height="15" fill="rgb(208,144,0)"/><text x="198.00" y="302.50">dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (80 samples, 33.06%)</title><rect x="195" y="308" width="390" height="15" fill="rgb(232,215,34)"/><text x="198.00" y="318.50">exec_blas (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (78 samples, 32.23%)</title><rect x="205" y="324" width="380" height="15" fill="rgb(227,76,26)"/><text x="208.00" y="334.50">exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7...</text></g><g><title>sched_yield (libc-2.29.so) (78 samples, 32.23%)</title><rect x="205" y="340" width="380" height="15" fill="rgb(217,22,39)"/><text x="208.00" y="350.50">sched_yield (libc-2.29.so)</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:25) (1 samples, 0.41%)</title><rect x="585" y="388" width="5" height="15" fill="rgb(222,119,8)"/><text x="588.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="585" y="404" width="5" height="15" fill="rgb(212,25,0)"/><text x="588.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="585" y="420" width="5" height="15" fill="rgb(213,43,21)"/><text x="588.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.41%)</title><rect x="585" y="436" width="5" height="15" fill="rgb(217,96,12)"/><text x="588.00" y="446.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.41%)</title><rect x="585" y="452" width="5" height="15" fill="rgb(251,108,32)"/><text x="588.00" y="462.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.41%)</title><rect x="585" y="468" width="5" height="15" fill="rgb(208,152,38)"/><text x="588.00" y="478.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;:409) (1 samples, 0.41%)</title><rect x="585" y="484" width="5" height="15" fill="rgb(248,25,15)"/><text x="588.00" y="494.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;:372) (1 samples, 0.41%)</title><rect x="585" y="500" width="5" height="15" fill="rgb(212,135,34)"/><text x="588.00" y="510.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;:302) (1 samples, 0.41%)</title><rect x="585" y="516" width="5" height="15" fill="rgb(244,183,35)"/><text x="588.00" y="526.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:36) (2 samples, 0.83%)</title><rect x="585" y="84" width="10" height="15" fill="rgb(228,47,28)"/><text x="588.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.83%)</title><rect x="585" y="100" width="10" height="15" fill="rgb(228,42,12)"/><text x="588.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.83%)</title><rect x="585" y="116" width="10" height="15" fill="rgb(240,143,34)"/><text x="588.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.83%)</title><rect x="585" y="132" width="10" height="15" fill="rgb(247,180,10)"/><text x="588.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.83%)</title><rect x="585" y="148" width="10" height="15" fill="rgb(250,31,0)"/><text x="588.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.83%)</title><rect x="585" y="164" width="10" height="15" fill="rgb(209,59,49)"/><text x="588.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.83%)</title><rect x="585" y="180" width="10" height="15" fill="rgb(222,178,46)"/><text x="588.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.83%)</title><rect x="585" y="196" width="10" height="15" fill="rgb(212,40,18)"/><text x="588.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="585" y="212" width="10" height="15" fill="rgb(228,9,4)"/><text x="588.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="585" y="228" width="10" height="15" fill="rgb(229,64,1)"/><text x="588.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="585" y="244" width="10" height="15" fill="rgb(244,56,27)"/><text x="588.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="585" y="260" width="10" height="15" fill="rgb(224,76,30)"/><text x="588.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="585" y="276" width="10" height="15" fill="rgb(221,118,10)"/><text x="588.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.83%)</title><rect x="585" y="292" width="10" height="15" fill="rgb(229,46,1)"/><text x="588.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.83%)</title><rect x="585" y="308" width="10" height="15" fill="rgb(238,15,45)"/><text x="588.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.83%)</title><rect x="585" y="324" width="10" height="15" fill="rgb(234,153,43)"/><text x="588.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.83%)</title><rect x="585" y="340" width="10" height="15" fill="rgb(251,11,35)"/><text x="588.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.83%)</title><rect x="585" y="356" width="10" height="15" fill="rgb(236,163,36)"/><text x="588.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.83%)</title><rect x="585" y="372" width="10" height="15" fill="rgb(250,53,50)"/><text x="588.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.41%)</title><rect x="590" y="388" width="5" height="15" fill="rgb(226,53,19)"/><text x="593.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="590" y="404" width="5" height="15" fill="rgb(212,21,7)"/><text x="593.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="590" y="420" width="5" height="15" fill="rgb(244,100,30)"/><text x="593.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="590" y="436" width="5" height="15" fill="rgb(246,171,19)"/><text x="593.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="590" y="452" width="5" height="15" fill="rgb(223,190,16)"/><text x="593.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="590" y="468" width="5" height="15" fill="rgb(254,102,43)"/><text x="593.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.41%)</title><rect x="590" y="484" width="5" height="15" fill="rgb(253,42,8)"/><text x="593.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.41%)</title><rect x="590" y="500" width="5" height="15" fill="rgb(253,136,26)"/><text x="593.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.41%)</title><rect x="590" y="516" width="5" height="15" fill="rgb(251,26,51)"/><text x="593.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.41%)</title><rect x="590" y="532" width="5" height="15" fill="rgb(229,33,11)"/><text x="593.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:588) (1 samples, 0.41%)</title><rect x="590" y="548" width="5" height="15" fill="rgb(232,126,43)"/><text x="593.00" y="558.50"></text></g><g><title>_compile (jinja2/environment.py:551) (1 samples, 0.41%)</title><rect x="590" y="564" width="5" height="15" fill="rgb(231,188,14)"/><text x="593.00" y="574.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (1 samples, 0.41%)</title><rect x="595" y="244" width="5" height="15" fill="rgb(247,214,28)"/><text x="598.00" y="254.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="600" y="372" width="4" height="15" fill="rgb(239,126,2)"/><text x="603.00" y="382.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:61) (24 samples, 9.92%)</title><rect x="585" y="52" width="117" height="15" fill="rgb(217,148,4)"/><text x="588.00" y="62.50">&lt;module&gt; (benc..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:60) (24 samples, 9.92%)</title><rect x="585" y="68" width="117" height="15" fill="rgb(210,171,43)"/><text x="588.00" y="78.50">profile_pyrt (..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:37) (22 samples, 9.09%)</title><rect x="595" y="84" width="107" height="15" fill="rgb(253,43,4)"/><text x="598.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:31) (22 samples, 9.09%)</title><rect x="595" y="100" width="107" height="15" fill="rgb(213,44,35)"/><text x="598.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (22 samples, 9.09%)</title><rect x="595" y="116" width="107" height="15" fill="rgb(247,116,8)"/><text x="598.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (22 samples, 9.09%)</title><rect x="595" y="132" width="107" height="15" fill="rgb(214,180,4)"/><text x="598.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (22 samples, 9.09%)</title><rect x="595" y="148" width="107" height="15" fill="rgb(240,0,21)"/><text x="598.00" y="158.50">run (mlprodic..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (22 samples, 9.09%)</title><rect x="595" y="164" width="107" height="15" fill="rgb(213,38,15)"/><text x="598.00" y="174.50">_run_sequence..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (22 samples, 9.09%)</title><rect x="595" y="180" width="107" height="15" fill="rgb(235,7,54)"/><text x="598.00" y="190.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 9.09%)</title><rect x="595" y="196" width="107" height="15" fill="rgb(223,26,38)"/><text x="598.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 9.09%)</title><rect x="595" y="212" width="107" height="15" fill="rgb(212,32,40)"/><text x="598.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (22 samples, 9.09%)</title><rect x="595" y="228" width="107" height="15" fill="rgb(207,30,3)"/><text x="598.00" y="238.50">_run (mlprodi..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (21 samples, 8.68%)</title><rect x="600" y="244" width="102" height="15" fill="rgb(234,152,6)"/><text x="603.00" y="254.50">numpy_dot_in..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (21 samples, 8.68%)</title><rect x="600" y="260" width="102" height="15" fill="rgb(252,109,13)"/><text x="603.00" y="270.50">dot (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (21 samples, 8.68%)</title><rect x="600" y="276" width="102" height="15" fill="rgb(238,183,44)"/><text x="603.00" y="286.50">array_implem..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (21 samples, 8.68%)</title><rect x="600" y="292" width="102" height="15" fill="rgb(217,90,15)"/><text x="603.00" y="302.50">array_matrix..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (21 samples, 8.68%)</title><rect x="600" y="308" width="102" height="15" fill="rgb(220,100,3)"/><text x="603.00" y="318.50">PyArray_Matr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (21 samples, 8.68%)</title><rect x="600" y="324" width="102" height="15" fill="rgb(242,167,12)"/><text x="603.00" y="334.50">cblas_matrix..</text></g><g><title>gemv (cblasfuncs.c:86) (21 samples, 8.68%)</title><rect x="600" y="340" width="102" height="15" fill="rgb(227,96,13)"/><text x="603.00" y="350.50">gemv (cblasf..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 8.68%)</title><rect x="600" y="356" width="102" height="15" fill="rgb(242,129,43)"/><text x="603.00" y="366.50">cblas_sgemv ..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.26%)</title><rect x="604" y="372" width="98" height="15" fill="rgb(214,46,53)"/><text x="607.00" y="382.50">sgemv_threa..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.26%)</title><rect x="604" y="388" width="98" height="15" fill="rgb(226,0,32)"/><text x="607.00" y="398.50">exec_blas (..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.26%)</title><rect x="604" y="404" width="98" height="15" fill="rgb(237,7,35)"/><text x="607.00" y="414.50">exec_blas_a..</text></g><g><title>sched_yield (libc-2.29.so) (20 samples, 8.26%)</title><rect x="604" y="420" width="98" height="15" fill="rgb(214,12,13)"/><text x="607.00" y="430.50">sched_yield..</text></g><g><title>run (onnxruntime/capi/session.py:128) (1 samples, 0.41%)</title><rect x="717" y="196" width="4" height="15" fill="rgb(217,128,16)"/><text x="720.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.41%)</title><rect x="721" y="196" width="5" height="15" fill="rgb(214,213,4)"/><text x="724.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.41%)</title><rect x="721" y="212" width="5" height="15" fill="rgb(219,1,39)"/><text x="724.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="721" y="228" width="5" height="15" fill="rgb(208,42,24)"/><text x="724.00" y="238.50"></text></g><g><title>0x7f491a62aff9 (?) (1 samples, 0.41%)</title><rect x="731" y="212" width="5" height="15" fill="rgb(234,156,21)"/><text x="734.00" y="222.50"></text></g><g><title>0x7f491a625ef6 (?) (1 samples, 0.41%)</title><rect x="731" y="228" width="5" height="15" fill="rgb(213,38,47)"/><text x="734.00" y="238.50"></text></g><g><title>0x7f491a61a962 (?) (1 samples, 0.41%)</title><rect x="731" y="244" width="5" height="15" fill="rgb(220,45,49)"/><text x="734.00" y="254.50"></text></g><g><title>0x7f491a64e7a7 (?) (1 samples, 0.41%)</title><rect x="731" y="260" width="5" height="15" fill="rgb(235,40,53)"/><text x="734.00" y="270.50"></text></g><g><title>0x7f491a64e379 (?) (1 samples, 0.41%)</title><rect x="731" y="276" width="5" height="15" fill="rgb(245,228,43)"/><text x="734.00" y="286.50"></text></g><g><title>0x7f491aaac8b8 (?) (1 samples, 0.41%)</title><rect x="731" y="292" width="5" height="15" fill="rgb(240,147,17)"/><text x="734.00" y="302.50"></text></g><g><title>0x7f491aaaac7f (?) (1 samples, 0.41%)</title><rect x="731" y="308" width="5" height="15" fill="rgb(208,161,13)"/><text x="734.00" y="318.50"></text></g><g><title>0x7f491aabd99c (?) (1 samples, 0.41%)</title><rect x="731" y="324" width="5" height="15" fill="rgb(244,113,8)"/><text x="734.00" y="334.50"></text></g><g><title>0x7f491a7a4a9f (?) (1 samples, 0.41%)</title><rect x="731" y="340" width="5" height="15" fill="rgb(214,98,33)"/><text x="734.00" y="350.50"></text></g><g><title>0x7f495f5fca01 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="741" y="244" width="5" height="15" fill="rgb(214,196,54)"/><text x="744.00" y="254.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="746" y="292" width="5" height="15" fill="rgb(238,153,33)"/><text x="749.00" y="302.50"></text></g><g><title>0x7f495f5fc961 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="746" y="308" width="5" height="15" fill="rgb(246,151,40)"/><text x="749.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="751" y="340" width="5" height="15" fill="rgb(211,151,51)"/><text x="754.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="751" y="356" width="5" height="15" fill="rgb(248,2,32)"/><text x="754.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="751" y="372" width="5" height="15" fill="rgb(236,133,53)"/><text x="754.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="756" y="340" width="4" height="15" fill="rgb(214,192,49)"/><text x="759.00" y="350.50"></text></g><g><title>0x7f495f5fc965 (libc-2.29.so) (2 samples, 0.83%)</title><rect x="999" y="356" width="10" height="15" fill="rgb(247,226,1)"/><text x="1002.00" y="366.50"></text></g><g><title>0x7f495f5fca55 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1009" y="356" width="5" height="15" fill="rgb(221,22,39)"/><text x="1012.00" y="366.50"></text></g><g><title>0x7f495f5fcbd4 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1014" y="356" width="5" height="15" fill="rgb(224,12,45)"/><text x="1017.00" y="366.50"></text></g><g><title>0x7f495f5fcbd8 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1019" y="356" width="5" height="15" fill="rgb(213,89,17)"/><text x="1022.00" y="366.50"></text></g><g><title>0x7f495f61cd97 (libc-2.29.so) (2 samples, 0.83%)</title><rect x="1024" y="356" width="9" height="15" fill="rgb(206,198,29)"/><text x="1027.00" y="366.50"></text></g><g><title>0x7f495f61cdbf (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1033" y="356" width="5" height="15" fill="rgb(238,48,35)"/><text x="1036.00" y="366.50"></text></g><g><title>0x7f495f61cdc9 (libc-2.29.so) (2 samples, 0.83%)</title><rect x="1038" y="356" width="10" height="15" fill="rgb(241,50,5)"/><text x="1041.00" y="366.50"></text></g><g><title>0x7f495f61cdcb (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1048" y="356" width="5" height="15" fill="rgb(254,204,3)"/><text x="1051.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1053" y="356" width="10" height="15" fill="rgb(246,153,28)"/><text x="1056.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1053" y="372" width="10" height="15" fill="rgb(250,98,39)"/><text x="1056.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1053" y="388" width="10" height="15" fill="rgb(251,70,41)"/><text x="1056.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.83%)</title><rect x="1053" y="404" width="10" height="15" fill="rgb(232,221,38)"/><text x="1056.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="420" width="5" height="15" fill="rgb(207,69,36)"/><text x="1061.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="436" width="5" height="15" fill="rgb(213,34,34)"/><text x="1061.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="452" width="5" height="15" fill="rgb(219,147,40)"/><text x="1061.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="468" width="5" height="15" fill="rgb(254,85,29)"/><text x="1061.00" y="478.50"></text></g><g><title>0x7f494f0c8d50 (libstdc++.so.6.0.28) (2 samples, 0.83%)</title><rect x="1077" y="388" width="10" height="15" fill="rgb(248,100,22)"/><text x="1080.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 31.82%)</title><rect x="746" y="260" width="375" height="15" fill="rgb(212,114,13)"/><text x="749.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (77 samples, 31.82%)</title><rect x="746" y="276" width="375" height="15" fill="rgb(232,149,11)"/><text x="749.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/ca..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 31.40%)</title><rect x="751" y="292" width="370" height="15" fill="rgb(250,190,0)"/><text x="754.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 31.40%)</title><rect x="751" y="308" width="370" height="15" fill="rgb(210,193,25)"/><text x="754.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (76 samples, 31.40%)</title><rect x="751" y="324" width="370" height="15" fill="rgb(238,108,0)"/><text x="754.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunt..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (74 samples, 30.58%)</title><rect x="760" y="340" width="361" height="15" fill="rgb(243,129,30)"/><text x="763.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.96%)</title><rect x="1063" y="356" width="58" height="15" fill="rgb(221,164,29)"/><text x="1066.00" y="366.50">std::v..</text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 4.13%)</title><rect x="1072" y="372" width="49" height="15" fill="rgb(218,175,5)"/><text x="1075.00" y="382.50">oper..</text></g><g><title>malloc (libc-2.29.so) (7 samples, 2.89%)</title><rect x="1087" y="388" width="34" height="15" fill="rgb(234,226,48)"/><text x="1090.00" y="398.50">ma..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1121" y="260" width="5" height="15" fill="rgb(236,136,46)"/><text x="1124.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.41%)</title><rect x="1121" y="276" width="5" height="15" fill="rgb(231,55,14)"/><text x="1124.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.41%)</title><rect x="1121" y="292" width="5" height="15" fill="rgb(234,110,46)"/><text x="1124.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.41%)</title><rect x="1121" y="308" width="5" height="15" fill="rgb(246,159,43)"/><text x="1124.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.41%)</title><rect x="1121" y="324" width="5" height="15" fill="rgb(225,81,5)"/><text x="1124.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.41%)</title><rect x="1121" y="340" width="5" height="15" fill="rgb(221,131,29)"/><text x="1124.00" y="350.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1126" y="260" width="5" height="15" fill="rgb(205,48,21)"/><text x="1129.00" y="270.50"></text></g><g><title>0x7f495f5fc92c (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1126" y="276" width="5" height="15" fill="rgb(218,37,45)"/><text x="1129.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (80 samples, 33.06%)</title><rect x="746" y="244" width="390" height="15" fill="rgb(243,38,22)"/><text x="749.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modul..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="260" width="5" height="15" fill="rgb(244,134,26)"/><text x="1134.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="276" width="5" height="15" fill="rgb(215,79,24)"/><text x="1134.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="292" width="5" height="15" fill="rgb(216,92,0)"/><text x="1134.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="308" width="5" height="15" fill="rgb(241,191,5)"/><text x="1134.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="324" width="5" height="15" fill="rgb(241,55,17)"/><text x="1134.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="340" width="5" height="15" fill="rgb(234,79,10)"/><text x="1134.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="356" width="5" height="15" fill="rgb(246,193,14)"/><text x="1134.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1131" y="372" width="5" height="15" fill="rgb(238,177,30)"/><text x="1134.00" y="382.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (90 samples, 37.19%)</title><rect x="702" y="164" width="439" height="15" fill="rgb(239,19,22)"/><text x="705.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (90 samples, 37.19%)</title><rect x="702" y="180" width="439" height="15" fill="rgb(228,70,32)"/><text x="705.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (85 samples, 35.12%)</title><rect x="726" y="196" width="415" height="15" fill="rgb(225,128,0)"/><text x="729.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 34.30%)</title><rect x="736" y="212" width="405" height="15" fill="rgb(215,151,43)"/><text x="739.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/on..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 33.88%)</title><rect x="741" y="228" width="400" height="15" fill="rgb(210,68,34)"/><text x="744.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::p..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1136" y="244" width="5" height="15" fill="rgb(239,117,22)"/><text x="1139.00" y="254.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1136" y="260" width="5" height="15" fill="rgb(254,215,27)"/><text x="1139.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (98 samples, 40.50%)</title><rect x="702" y="132" width="478" height="15" fill="rgb(228,119,34)"/><text x="705.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (98 samples, 40.50%)</title><rect x="702" y="148" width="478" height="15" fill="rgb(252,53,54)"/><text x="705.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (8 samples, 3.31%)</title><rect x="1141" y="164" width="39" height="15" fill="rgb(244,9,12)"/><text x="1144.00" y="174.50">_ru..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.41%)</title><rect x="1175" y="180" width="5" height="15" fill="rgb(237,101,44)"/><text x="1178.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="1180" y="132" width="5" height="15" fill="rgb(250,96,39)"/><text x="1183.00" y="142.50"></text></g><g><title>all (242 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(236,1,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:68) (100 samples, 41.32%)</title><rect x="702" y="52" width="488" height="15" fill="rgb(229,30,51)"/><text x="705.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_m_reg_1000_50_12_float_.p..</text></g><g><title>profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:67) (100 samples, 41.32%)</title><rect x="702" y="68" width="488" height="15" fill="rgb(222,49,33)"/><text x="705.00" y="78.50">profile_ort (bench_LinearRegression_default_m_reg_1000_50_12_float..</text></g><g><title>setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:37) (100 samples, 41.32%)</title><rect x="702" y="84" width="488" height="15" fill="rgb(253,30,21)"/><text x="705.00" y="94.50">setup_profile (bench_LinearRegression_default_m_reg_1000_50_12_flo..</text></g><g><title>profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py:31) (100 samples, 41.32%)</title><rect x="702" y="100" width="488" height="15" fill="rgb(254,175,33)"/><text x="705.00" y="110.50">profile (bench_LinearRegression_default_m_reg_1000_50_12_float_.py..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 41.32%)</title><rect x="702" y="116" width="488" height="15" fill="rgb(225,180,0)"/><text x="705.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.41%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(253,194,20)"/><text x="1188.00" y="142.50"></text></g><g><title>0x7f495f6da130 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(245,193,53)"/><text x="1188.00" y="158.50"></text></g></g></svg>