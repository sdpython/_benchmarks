<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:1) (1 samples, 0.25%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(223,151,53)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(211,56,21)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(225,188,7)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(243,27,24)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(245,212,6)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(245,126,54)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.25%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(219,102,52)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(213,66,4)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(217,220,51)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(228,70,20)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(250,27,50)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(214,214,15)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(251,68,27)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(232,206,17)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.25%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(254,2,53)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(245,87,28)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(213,137,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(234,50,29)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(217,228,10)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(243,0,14)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(246,176,41)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(219,203,15)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:1513) (1 samples, 0.25%)</title><rect x="10" y="500" width="2" height="15" fill="rgb(248,222,15)"/><text x="13.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:156) (1 samples, 0.25%)</title><rect x="10" y="516" width="2" height="15" fill="rgb(253,119,41)"/><text x="13.00" y="526.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py:75) (1 samples, 0.25%)</title><rect x="10" y="532" width="2" height="15" fill="rgb(215,195,3)"/><text x="13.00" y="542.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.25%)</title><rect x="12" y="852" width="3" height="15" fill="rgb(238,211,4)"/><text x="15.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.25%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(211,28,38)"/><text x="15.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.25%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(242,89,3)"/><text x="15.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.25%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(248,184,1)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(237,196,45)"/><text x="15.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.25%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(231,189,52)"/><text x="15.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.25%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(220,166,2)"/><text x="15.00" y="958.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.25%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(214,5,21)"/><text x="18.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.25%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(245,120,45)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(217,58,32)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(245,9,49)"/><text x="18.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(243,45,31)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(231,224,15)"/><text x="18.00" y="974.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.75%)</title><rect x="12" y="820" width="9" height="15" fill="rgb(207,79,38)"/><text x="15.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.75%)</title><rect x="12" y="836" width="9" height="15" fill="rgb(238,117,13)"/><text x="15.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.50%)</title><rect x="15" y="852" width="6" height="15" fill="rgb(240,15,13)"/><text x="18.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.50%)</title><rect x="15" y="868" width="6" height="15" fill="rgb(254,2,17)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.25%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(228,45,9)"/><text x="21.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.25%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(224,210,1)"/><text x="21.00" y="910.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.25%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(254,132,33)"/><text x="21.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(214,190,40)"/><text x="21.00" y="942.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:57) (1 samples, 0.25%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(229,80,45)"/><text x="24.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(209,116,20)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(226,194,13)"/><text x="24.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(233,44,41)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(236,154,47)"/><text x="24.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.25%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(213,229,27)"/><text x="24.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.25%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(226,194,46)"/><text x="24.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.25%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(212,138,2)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(241,97,48)"/><text x="24.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(210,201,28)"/><text x="24.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(218,61,17)"/><text x="24.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(207,80,19)"/><text x="24.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(235,125,31)"/><text x="24.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/six.py:715) (1 samples, 0.25%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(249,79,21)"/><text x="24.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (5 samples, 1.24%)</title><rect x="12" y="148" width="15" height="15" fill="rgb(222,150,54)"/><text x="15.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="164" width="15" height="15" fill="rgb(222,200,52)"/><text x="15.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.24%)</title><rect x="12" y="180" width="15" height="15" fill="rgb(206,130,12)"/><text x="15.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="196" width="15" height="15" fill="rgb(254,171,34)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="212" width="15" height="15" fill="rgb(251,69,12)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="228" width="15" height="15" fill="rgb(223,122,19)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="244" width="15" height="15" fill="rgb(250,71,1)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="260" width="15" height="15" fill="rgb(232,46,52)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="276" width="15" height="15" fill="rgb(215,14,12)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 1.24%)</title><rect x="12" y="292" width="15" height="15" fill="rgb(231,123,13)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="308" width="15" height="15" fill="rgb(237,125,0)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="324" width="15" height="15" fill="rgb(245,17,6)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="340" width="15" height="15" fill="rgb(237,61,37)"/><text x="15.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="356" width="15" height="15" fill="rgb(208,195,47)"/><text x="15.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="372" width="15" height="15" fill="rgb(228,15,48)"/><text x="15.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 1.24%)</title><rect x="12" y="388" width="15" height="15" fill="rgb(244,216,14)"/><text x="15.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="404" width="15" height="15" fill="rgb(253,85,41)"/><text x="15.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="420" width="15" height="15" fill="rgb(218,142,5)"/><text x="15.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="436" width="15" height="15" fill="rgb(225,3,10)"/><text x="15.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="452" width="15" height="15" fill="rgb(241,215,1)"/><text x="15.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="468" width="15" height="15" fill="rgb(218,218,12)"/><text x="15.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 1.24%)</title><rect x="12" y="484" width="15" height="15" fill="rgb(209,162,48)"/><text x="15.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="500" width="15" height="15" fill="rgb(213,17,7)"/><text x="15.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="516" width="15" height="15" fill="rgb(250,221,12)"/><text x="15.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="532" width="15" height="15" fill="rgb(223,94,38)"/><text x="15.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="548" width="15" height="15" fill="rgb(232,41,32)"/><text x="15.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="564" width="15" height="15" fill="rgb(221,28,44)"/><text x="15.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 1.24%)</title><rect x="12" y="580" width="15" height="15" fill="rgb(243,128,14)"/><text x="15.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="596" width="15" height="15" fill="rgb(245,92,35)"/><text x="15.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.24%)</title><rect x="12" y="612" width="15" height="15" fill="rgb(218,159,15)"/><text x="15.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="628" width="15" height="15" fill="rgb(212,133,15)"/><text x="15.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="644" width="15" height="15" fill="rgb(248,170,54)"/><text x="15.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="660" width="15" height="15" fill="rgb(230,138,27)"/><text x="15.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="676" width="15" height="15" fill="rgb(241,115,24)"/><text x="15.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="692" width="15" height="15" fill="rgb(240,154,32)"/><text x="15.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="708" width="15" height="15" fill="rgb(207,53,25)"/><text x="15.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 1.24%)</title><rect x="12" y="724" width="15" height="15" fill="rgb(239,134,8)"/><text x="15.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="12" y="740" width="15" height="15" fill="rgb(227,75,35)"/><text x="15.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="12" y="756" width="15" height="15" fill="rgb(206,188,15)"/><text x="15.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="12" y="772" width="15" height="15" fill="rgb(210,102,3)"/><text x="15.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="12" y="788" width="15" height="15" fill="rgb(253,36,42)"/><text x="15.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="12" y="804" width="15" height="15" fill="rgb(206,67,25)"/><text x="15.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.25%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(240,28,16)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(219,112,12)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(242,19,1)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(232,213,2)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(242,88,46)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(220,33,19)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(244,141,28)"/><text x="27.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(228,8,49)"/><text x="27.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(241,5,20)"/><text x="27.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(245,121,4)"/><text x="27.00" y="974.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(232,18,16)"/><text x="27.00" y="990.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(214,112,30)"/><text x="27.00" y="1006.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.25%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(224,79,36)"/><text x="27.00" y="1022.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.25%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(242,201,15)"/><text x="27.00" y="1038.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.25%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(230,221,54)"/><text x="27.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:83) (1 samples, 0.25%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(206,39,40)"/><text x="27.00" y="1070.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.25%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(219,103,13)"/><text x="30.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(216,4,6)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(236,215,8)"/><text x="30.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(243,172,15)"/><text x="30.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(221,213,45)"/><text x="30.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(208,13,32)"/><text x="30.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.25%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(206,178,3)"/><text x="30.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(244,214,41)"/><text x="30.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(219,102,17)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(243,17,3)"/><text x="30.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(209,35,22)"/><text x="30.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(234,137,7)"/><text x="30.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(206,15,4)"/><text x="30.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(221,80,5)"/><text x="30.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.25%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(230,196,0)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(233,74,34)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(236,42,27)"/><text x="30.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(239,70,50)"/><text x="30.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(213,183,15)"/><text x="30.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(230,77,37)"/><text x="30.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:21) (1 samples, 0.25%)</title><rect x="27" y="1220" width="3" height="15" fill="rgb(248,205,15)"/><text x="30.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="27" y="1236" width="3" height="15" fill="rgb(244,96,36)"/><text x="30.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1252" width="3" height="15" fill="rgb(221,225,8)"/><text x="30.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1268" width="3" height="15" fill="rgb(247,148,4)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="1284" width="3" height="15" fill="rgb(248,91,8)"/><text x="30.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(208,185,48)"/><text x="30.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(247,75,44)"/><text x="30.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(214,10,35)"/><text x="30.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py:1539) (1 samples, 0.25%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(222,6,6)"/><text x="30.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py:1507) (1 samples, 0.25%)</title><rect x="27" y="1364" width="3" height="15" fill="rgb(216,143,29)"/><text x="30.00" y="1374.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.25%)</title><rect x="27" y="1380" width="3" height="15" fill="rgb(217,207,3)"/><text x="30.00" y="1390.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.25%)</title><rect x="27" y="1396" width="3" height="15" fill="rgb(239,223,6)"/><text x="30.00" y="1406.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.25%)</title><rect x="27" y="1412" width="3" height="15" fill="rgb(211,43,15)"/><text x="30.00" y="1422.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.25%)</title><rect x="27" y="1428" width="3" height="15" fill="rgb(224,8,33)"/><text x="30.00" y="1438.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.25%)</title><rect x="27" y="1444" width="3" height="15" fill="rgb(241,174,26)"/><text x="30.00" y="1454.50"></text></g><g><title>__init__ (inspect.py:2505) (1 samples, 0.25%)</title><rect x="27" y="1460" width="3" height="15" fill="rgb(242,45,41)"/><text x="30.00" y="1470.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (2 samples, 0.50%)</title><rect x="27" y="148" width="6" height="15" fill="rgb(224,16,27)"/><text x="30.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="164" width="6" height="15" fill="rgb(253,51,10)"/><text x="30.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.50%)</title><rect x="27" y="180" width="6" height="15" fill="rgb(244,101,39)"/><text x="30.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="196" width="6" height="15" fill="rgb(215,147,44)"/><text x="30.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="212" width="6" height="15" fill="rgb(230,212,47)"/><text x="30.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="228" width="6" height="15" fill="rgb(234,115,29)"/><text x="30.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="244" width="6" height="15" fill="rgb(222,141,9)"/><text x="30.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="260" width="6" height="15" fill="rgb(247,221,26)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="276" width="6" height="15" fill="rgb(235,127,53)"/><text x="30.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.50%)</title><rect x="27" y="292" width="6" height="15" fill="rgb(223,17,4)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="308" width="6" height="15" fill="rgb(234,68,28)"/><text x="30.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="324" width="6" height="15" fill="rgb(227,198,24)"/><text x="30.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="340" width="6" height="15" fill="rgb(235,86,9)"/><text x="30.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="356" width="6" height="15" fill="rgb(245,182,24)"/><text x="30.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="372" width="6" height="15" fill="rgb(235,212,10)"/><text x="30.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.50%)</title><rect x="27" y="388" width="6" height="15" fill="rgb(249,199,54)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="404" width="6" height="15" fill="rgb(240,140,28)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="420" width="6" height="15" fill="rgb(238,44,38)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="436" width="6" height="15" fill="rgb(226,12,0)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="452" width="6" height="15" fill="rgb(226,148,42)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="468" width="6" height="15" fill="rgb(223,177,28)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.50%)</title><rect x="27" y="484" width="6" height="15" fill="rgb(227,54,32)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="500" width="6" height="15" fill="rgb(249,105,22)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="516" width="6" height="15" fill="rgb(214,89,21)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="532" width="6" height="15" fill="rgb(238,17,0)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="548" width="6" height="15" fill="rgb(253,157,34)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="564" width="6" height="15" fill="rgb(209,36,15)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.50%)</title><rect x="27" y="580" width="6" height="15" fill="rgb(217,204,53)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="596" width="6" height="15" fill="rgb(207,204,14)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="612" width="6" height="15" fill="rgb(225,60,37)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="628" width="6" height="15" fill="rgb(209,115,49)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="644" width="6" height="15" fill="rgb(205,127,21)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="660" width="6" height="15" fill="rgb(238,44,5)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.50%)</title><rect x="27" y="676" width="6" height="15" fill="rgb(247,112,37)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="692" width="6" height="15" fill="rgb(233,51,43)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="708" width="6" height="15" fill="rgb(241,178,27)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="724" width="6" height="15" fill="rgb(232,217,41)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="740" width="6" height="15" fill="rgb(205,66,52)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="756" width="6" height="15" fill="rgb(230,192,23)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.50%)</title><rect x="27" y="772" width="6" height="15" fill="rgb(239,53,50)"/><text x="30.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.50%)</title><rect x="27" y="788" width="6" height="15" fill="rgb(251,55,53)"/><text x="30.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="804" width="6" height="15" fill="rgb(248,211,34)"/><text x="30.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="27" y="820" width="6" height="15" fill="rgb(213,200,22)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="27" y="836" width="6" height="15" fill="rgb(211,10,6)"/><text x="30.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="27" y="852" width="6" height="15" fill="rgb(252,177,45)"/><text x="30.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="27" y="868" width="6" height="15" fill="rgb(245,16,22)"/><text x="30.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="27" y="884" width="6" height="15" fill="rgb(243,186,46)"/><text x="30.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.25%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(238,173,4)"/><text x="33.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(221,184,31)"/><text x="33.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="932" width="3" height="15" fill="rgb(212,181,20)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="948" width="3" height="15" fill="rgb(238,214,20)"/><text x="33.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="30" y="964" width="3" height="15" fill="rgb(227,11,38)"/><text x="33.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="30" y="980" width="3" height="15" fill="rgb(247,169,26)"/><text x="33.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="30" y="996" width="3" height="15" fill="rgb(244,112,23)"/><text x="33.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="1012" width="3" height="15" fill="rgb(232,157,18)"/><text x="33.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1906) (1 samples, 0.25%)</title><rect x="30" y="1028" width="3" height="15" fill="rgb(224,151,26)"/><text x="33.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.25%)</title><rect x="30" y="1044" width="3" height="15" fill="rgb(234,167,29)"/><text x="33.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.25%)</title><rect x="30" y="1060" width="3" height="15" fill="rgb(217,103,51)"/><text x="33.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.25%)</title><rect x="33" y="484" width="3" height="15" fill="rgb(208,36,26)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="500" width="3" height="15" fill="rgb(252,8,41)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="516" width="3" height="15" fill="rgb(230,33,21)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="532" width="3" height="15" fill="rgb(244,94,38)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="548" width="3" height="15" fill="rgb(250,165,11)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="564" width="3" height="15" fill="rgb(216,55,21)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.25%)</title><rect x="33" y="580" width="3" height="15" fill="rgb(226,133,42)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="596" width="3" height="15" fill="rgb(215,146,17)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="612" width="3" height="15" fill="rgb(241,82,0)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="628" width="3" height="15" fill="rgb(247,43,22)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="644" width="3" height="15" fill="rgb(222,118,8)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="660" width="3" height="15" fill="rgb(230,62,2)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.25%)</title><rect x="33" y="676" width="3" height="15" fill="rgb(213,163,43)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="692" width="3" height="15" fill="rgb(206,127,44)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="708" width="3" height="15" fill="rgb(254,160,10)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="724" width="3" height="15" fill="rgb(231,52,18)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="740" width="3" height="15" fill="rgb(241,22,31)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="756" width="3" height="15" fill="rgb(222,13,10)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.25%)</title><rect x="33" y="772" width="3" height="15" fill="rgb(206,33,33)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="788" width="3" height="15" fill="rgb(233,119,49)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="804" width="3" height="15" fill="rgb(228,132,37)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="820" width="3" height="15" fill="rgb(245,112,36)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="836" width="3" height="15" fill="rgb(242,222,1)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="852" width="3" height="15" fill="rgb(244,41,52)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.25%)</title><rect x="33" y="868" width="3" height="15" fill="rgb(248,119,22)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="884" width="3" height="15" fill="rgb(230,149,44)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="900" width="3" height="15" fill="rgb(206,226,54)"/><text x="36.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="916" width="3" height="15" fill="rgb(224,208,1)"/><text x="36.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="932" width="3" height="15" fill="rgb(234,82,27)"/><text x="36.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="948" width="3" height="15" fill="rgb(243,138,33)"/><text x="36.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.25%)</title><rect x="33" y="964" width="3" height="15" fill="rgb(226,159,47)"/><text x="36.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="980" width="3" height="15" fill="rgb(242,213,25)"/><text x="36.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="996" width="3" height="15" fill="rgb(208,129,16)"/><text x="36.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="1012" width="3" height="15" fill="rgb(249,145,24)"/><text x="36.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="1028" width="3" height="15" fill="rgb(225,197,33)"/><text x="36.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="1044" width="3" height="15" fill="rgb(226,122,29)"/><text x="36.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py:40) (1 samples, 0.25%)</title><rect x="33" y="1060" width="3" height="15" fill="rgb(250,85,23)"/><text x="36.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="1076" width="3" height="15" fill="rgb(213,106,39)"/><text x="36.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.25%)</title><rect x="33" y="1092" width="3" height="15" fill="rgb(206,79,45)"/><text x="36.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.25%)</title><rect x="33" y="1108" width="3" height="15" fill="rgb(212,229,49)"/><text x="36.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.25%)</title><rect x="33" y="1124" width="3" height="15" fill="rgb(230,5,45)"/><text x="36.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1251) (1 samples, 0.25%)</title><rect x="33" y="1140" width="3" height="15" fill="rgb(229,216,36)"/><text x="36.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.25%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(226,118,47)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(239,203,30)"/><text x="39.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(226,212,6)"/><text x="39.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(220,113,17)"/><text x="39.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(220,203,26)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(253,2,52)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.25%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(248,49,28)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(227,78,29)"/><text x="39.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(223,68,22)"/><text x="39.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(253,172,1)"/><text x="39.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(218,215,4)"/><text x="39.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.25%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(254,182,5)"/><text x="39.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.25%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(205,147,53)"/><text x="39.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (4 samples, 1.00%)</title><rect x="33" y="244" width="12" height="15" fill="rgb(254,194,30)"/><text x="36.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="33" y="260" width="12" height="15" fill="rgb(251,137,17)"/><text x="36.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="33" y="276" width="12" height="15" fill="rgb(232,7,29)"/><text x="36.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="33" y="292" width="12" height="15" fill="rgb(209,34,15)"/><text x="36.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="33" y="308" width="12" height="15" fill="rgb(248,134,5)"/><text x="36.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="33" y="324" width="12" height="15" fill="rgb(244,169,29)"/><text x="36.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.00%)</title><rect x="33" y="340" width="12" height="15" fill="rgb(219,58,38)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="33" y="356" width="12" height="15" fill="rgb(250,222,7)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.00%)</title><rect x="33" y="372" width="12" height="15" fill="rgb(220,115,31)"/><text x="36.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="33" y="388" width="12" height="15" fill="rgb(212,216,23)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.00%)</title><rect x="33" y="404" width="12" height="15" fill="rgb(208,185,31)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.00%)</title><rect x="33" y="420" width="12" height="15" fill="rgb(213,168,33)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.00%)</title><rect x="33" y="436" width="12" height="15" fill="rgb(207,129,15)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.00%)</title><rect x="33" y="452" width="12" height="15" fill="rgb(239,160,16)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.00%)</title><rect x="33" y="468" width="12" height="15" fill="rgb(239,225,5)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (3 samples, 0.75%)</title><rect x="36" y="484" width="9" height="15" fill="rgb(229,115,39)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="500" width="9" height="15" fill="rgb(215,201,8)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="36" y="516" width="9" height="15" fill="rgb(215,136,8)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="36" y="532" width="9" height="15" fill="rgb(249,37,13)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="36" y="548" width="9" height="15" fill="rgb(252,207,4)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="564" width="9" height="15" fill="rgb(224,220,7)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (3 samples, 0.75%)</title><rect x="36" y="580" width="9" height="15" fill="rgb(212,44,7)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="596" width="9" height="15" fill="rgb(246,73,35)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.75%)</title><rect x="36" y="612" width="9" height="15" fill="rgb(224,113,12)"/><text x="39.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="628" width="9" height="15" fill="rgb(245,200,11)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="644" width="9" height="15" fill="rgb(208,116,54)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="36" y="660" width="9" height="15" fill="rgb(246,12,34)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="36" y="676" width="9" height="15" fill="rgb(235,220,52)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="36" y="692" width="9" height="15" fill="rgb(249,170,7)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="708" width="9" height="15" fill="rgb(249,1,31)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (3 samples, 0.75%)</title><rect x="36" y="724" width="9" height="15" fill="rgb(236,23,27)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="740" width="9" height="15" fill="rgb(232,88,3)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="36" y="756" width="9" height="15" fill="rgb(241,223,7)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="36" y="772" width="9" height="15" fill="rgb(207,184,9)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="36" y="788" width="9" height="15" fill="rgb(244,160,28)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="804" width="9" height="15" fill="rgb(222,174,26)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (3 samples, 0.75%)</title><rect x="36" y="820" width="9" height="15" fill="rgb(212,114,46)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="836" width="9" height="15" fill="rgb(232,109,6)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="36" y="852" width="9" height="15" fill="rgb(226,201,28)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="36" y="868" width="9" height="15" fill="rgb(216,190,36)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="36" y="884" width="9" height="15" fill="rgb(209,18,39)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="900" width="9" height="15" fill="rgb(211,35,35)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (3 samples, 0.75%)</title><rect x="36" y="916" width="9" height="15" fill="rgb(214,39,33)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="932" width="9" height="15" fill="rgb(250,60,26)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.75%)</title><rect x="36" y="948" width="9" height="15" fill="rgb(223,74,22)"/><text x="39.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="964" width="9" height="15" fill="rgb(219,14,44)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="36" y="980" width="9" height="15" fill="rgb(213,194,4)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="36" y="996" width="9" height="15" fill="rgb(229,70,21)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="36" y="1012" width="9" height="15" fill="rgb(237,151,42)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="36" y="1028" width="9" height="15" fill="rgb(239,121,8)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="36" y="1044" width="9" height="15" fill="rgb(208,33,3)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:15) (2 samples, 0.50%)</title><rect x="39" y="1060" width="6" height="15" fill="rgb(228,163,6)"/><text x="42.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="39" y="1076" width="6" height="15" fill="rgb(235,109,4)"/><text x="42.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="39" y="1092" width="6" height="15" fill="rgb(216,30,42)"/><text x="42.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="39" y="1108" width="6" height="15" fill="rgb(250,45,19)"/><text x="42.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.50%)</title><rect x="39" y="1124" width="6" height="15" fill="rgb(208,79,31)"/><text x="42.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.50%)</title><rect x="39" y="1140" width="6" height="15" fill="rgb(238,146,50)"/><text x="42.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.25%)</title><rect x="42" y="1156" width="3" height="15" fill="rgb(224,69,16)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(208,198,27)"/><text x="48.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(229,113,23)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(215,124,7)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(208,191,40)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(238,121,1)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(221,49,29)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(227,147,50)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (http/__init__.py:5) (1 samples, 0.25%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(252,43,38)"/><text x="48.00" y="782.50"></text></g><g><title>__new__ (enum.py:217) (1 samples, 0.25%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(234,52,27)"/><text x="48.00" y="798.50"></text></g><g><title>__new__ (http/__init__.py:24) (1 samples, 0.25%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(208,94,40)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (2 samples, 0.50%)</title><rect x="45" y="340" width="6" height="15" fill="rgb(237,24,21)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="356" width="6" height="15" fill="rgb(236,23,38)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="372" width="6" height="15" fill="rgb(208,65,14)"/><text x="48.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="388" width="6" height="15" fill="rgb(214,12,9)"/><text x="48.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="404" width="6" height="15" fill="rgb(245,30,21)"/><text x="48.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="420" width="6" height="15" fill="rgb(240,91,54)"/><text x="48.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:6) (2 samples, 0.50%)</title><rect x="45" y="436" width="6" height="15" fill="rgb(224,24,48)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="452" width="6" height="15" fill="rgb(241,73,19)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="468" width="6" height="15" fill="rgb(251,170,45)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="484" width="6" height="15" fill="rgb(217,102,14)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="500" width="6" height="15" fill="rgb(250,213,32)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="516" width="6" height="15" fill="rgb(238,142,44)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py:23) (2 samples, 0.50%)</title><rect x="45" y="532" width="6" height="15" fill="rgb(220,36,5)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="548" width="6" height="15" fill="rgb(218,51,33)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="45" y="564" width="6" height="15" fill="rgb(237,21,46)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(219,49,51)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(239,224,13)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(238,71,15)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py:88) (2 samples, 0.50%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(238,188,41)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="45" y="644" width="6" height="15" fill="rgb(234,193,3)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="48" y="660" width="3" height="15" fill="rgb(214,101,13)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="48" y="676" width="3" height="15" fill="rgb(248,93,49)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="48" y="692" width="3" height="15" fill="rgb(242,175,54)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="48" y="708" width="3" height="15" fill="rgb(241,198,51)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py:1341) (1 samples, 0.25%)</title><rect x="48" y="724" width="3" height="15" fill="rgb(233,13,28)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="48" y="740" width="3" height="15" fill="rgb(242,162,48)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="48" y="756" width="3" height="15" fill="rgb(228,166,8)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="48" y="772" width="3" height="15" fill="rgb(223,81,12)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(213,199,35)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(249,103,37)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py:158) (1 samples, 0.25%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(213,75,33)"/><text x="51.00" y="830.50"></text></g><g><title>__new__ (enum.py:239) (1 samples, 0.25%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(245,27,4)"/><text x="51.00" y="846.50"></text></g><g><title>__setattr__ (enum.py:383) (1 samples, 0.25%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(239,30,26)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.25%)</title><rect x="51" y="436" width="3" height="15" fill="rgb(242,8,16)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="452" width="3" height="15" fill="rgb(218,103,23)"/><text x="54.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="468" width="3" height="15" fill="rgb(217,84,9)"/><text x="54.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="484" width="3" height="15" fill="rgb(216,131,37)"/><text x="54.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="500" width="3" height="15" fill="rgb(222,66,9)"/><text x="54.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="516" width="3" height="15" fill="rgb(213,69,29)"/><text x="54.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.25%)</title><rect x="51" y="532" width="3" height="15" fill="rgb(252,161,47)"/><text x="54.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="548" width="3" height="15" fill="rgb(243,127,47)"/><text x="54.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="564" width="3" height="15" fill="rgb(216,195,43)"/><text x="54.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="580" width="3" height="15" fill="rgb(231,104,24)"/><text x="54.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="596" width="3" height="15" fill="rgb(210,155,30)"/><text x="54.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="612" width="3" height="15" fill="rgb(237,134,2)"/><text x="54.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.25%)</title><rect x="51" y="628" width="3" height="15" fill="rgb(252,219,49)"/><text x="54.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="644" width="3" height="15" fill="rgb(235,81,41)"/><text x="54.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="660" width="3" height="15" fill="rgb(251,84,4)"/><text x="54.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="676" width="3" height="15" fill="rgb(227,113,23)"/><text x="54.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="692" width="3" height="15" fill="rgb(247,171,9)"/><text x="54.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="708" width="3" height="15" fill="rgb(232,67,26)"/><text x="54.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.25%)</title><rect x="51" y="724" width="3" height="15" fill="rgb(244,130,15)"/><text x="54.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="740" width="3" height="15" fill="rgb(207,133,52)"/><text x="54.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="756" width="3" height="15" fill="rgb(252,171,16)"/><text x="54.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="772" width="3" height="15" fill="rgb(216,125,24)"/><text x="54.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="788" width="3" height="15" fill="rgb(222,76,46)"/><text x="54.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="804" width="3" height="15" fill="rgb(213,29,2)"/><text x="54.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.25%)</title><rect x="51" y="820" width="3" height="15" fill="rgb(231,188,2)"/><text x="54.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="836" width="3" height="15" fill="rgb(237,146,20)"/><text x="54.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="852" width="3" height="15" fill="rgb(211,98,0)"/><text x="54.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="868" width="3" height="15" fill="rgb(245,227,31)"/><text x="54.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="884" width="3" height="15" fill="rgb(229,55,29)"/><text x="54.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(207,203,17)"/><text x="54.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.25%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(207,207,37)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="932" width="3" height="15" fill="rgb(228,73,5)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="948" width="3" height="15" fill="rgb(254,34,22)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="964" width="3" height="15" fill="rgb(232,82,49)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="980" width="3" height="15" fill="rgb(239,118,26)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="996" width="3" height="15" fill="rgb(237,143,39)"/><text x="54.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.25%)</title><rect x="51" y="1012" width="3" height="15" fill="rgb(211,37,34)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1028" width="3" height="15" fill="rgb(222,204,39)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1044" width="3" height="15" fill="rgb(205,94,26)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1060" width="3" height="15" fill="rgb(230,123,15)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="1076" width="3" height="15" fill="rgb(209,70,51)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1092" width="3" height="15" fill="rgb(245,64,25)"/><text x="54.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.25%)</title><rect x="51" y="1108" width="3" height="15" fill="rgb(239,140,38)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1124" width="3" height="15" fill="rgb(214,69,44)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1140" width="3" height="15" fill="rgb(252,201,29)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1156" width="3" height="15" fill="rgb(208,50,14)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="1172" width="3" height="15" fill="rgb(243,113,6)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1188" width="3" height="15" fill="rgb(239,35,49)"/><text x="54.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.25%)</title><rect x="51" y="1204" width="3" height="15" fill="rgb(228,35,53)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1220" width="3" height="15" fill="rgb(230,173,32)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1236" width="3" height="15" fill="rgb(221,70,32)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1252" width="3" height="15" fill="rgb(234,142,5)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="1268" width="3" height="15" fill="rgb(226,193,31)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1284" width="3" height="15" fill="rgb(235,181,34)"/><text x="54.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.25%)</title><rect x="51" y="1300" width="3" height="15" fill="rgb(244,71,39)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1316" width="3" height="15" fill="rgb(209,78,31)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1332" width="3" height="15" fill="rgb(233,181,48)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1348" width="3" height="15" fill="rgb(217,84,44)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="1364" width="3" height="15" fill="rgb(216,189,3)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1380" width="3" height="15" fill="rgb(231,177,16)"/><text x="54.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (1 samples, 0.25%)</title><rect x="51" y="1396" width="3" height="15" fill="rgb(236,97,6)"/><text x="54.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="51" y="1412" width="3" height="15" fill="rgb(206,46,4)"/><text x="54.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="51" y="1428" width="3" height="15" fill="rgb(234,35,24)"/><text x="54.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="51" y="1444" width="3" height="15" fill="rgb(219,189,50)"/><text x="54.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="51" y="1460" width="3" height="15" fill="rgb(235,137,32)"/><text x="54.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="51" y="1476" width="3" height="15" fill="rgb(239,211,24)"/><text x="54.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/multi.py:3440) (1 samples, 0.25%)</title><rect x="51" y="1492" width="3" height="15" fill="rgb(217,57,32)"/><text x="54.00" y="1502.50"></text></g><g><title>_add_numeric_methods_disabled (pandas/core/indexes/base.py:5403) (1 samples, 0.25%)</title><rect x="51" y="1508" width="3" height="15" fill="rgb(244,193,38)"/><text x="54.00" y="1518.50"></text></g><g><title>make_invalid_op (pandas/core/ops/__init__.py:193) (1 samples, 0.25%)</title><rect x="51" y="1524" width="3" height="15" fill="rgb(213,17,18)"/><text x="54.00" y="1534.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.25%)</title><rect x="54" y="1460" width="2" height="15" fill="rgb(242,52,0)"/><text x="57.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.25%)</title><rect x="54" y="1476" width="2" height="15" fill="rgb(217,118,50)"/><text x="57.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.25%)</title><rect x="54" y="1492" width="2" height="15" fill="rgb(215,208,51)"/><text x="57.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.25%)</title><rect x="54" y="1508" width="2" height="15" fill="rgb(253,58,3)"/><text x="57.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="54" y="1524" width="2" height="15" fill="rgb(206,54,23)"/><text x="57.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="54" y="1540" width="2" height="15" fill="rgb(232,30,28)"/><text x="57.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="54" y="1556" width="2" height="15" fill="rgb(212,104,21)"/><text x="57.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.25%)</title><rect x="54" y="1572" width="2" height="15" fill="rgb(238,67,51)"/><text x="57.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.25%)</title><rect x="54" y="1588" width="2" height="15" fill="rgb(213,194,35)"/><text x="57.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.25%)</title><rect x="54" y="1604" width="2" height="15" fill="rgb(248,25,28)"/><text x="57.00" y="1614.50"></text></g><g><title>0x7f1673107fe6 (?) (1 samples, 0.25%)</title><rect x="54" y="1620" width="2" height="15" fill="rgb(234,47,6)"/><text x="57.00" y="1630.50"></text></g><g><title>0x7f168304ba38 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="54" y="1636" width="2" height="15" fill="rgb(207,81,16)"/><text x="57.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:4) (17 samples, 4.23%)</title><rect x="10" y="52" width="49" height="15" fill="rgb(206,212,33)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 4.23%)</title><rect x="10" y="68" width="49" height="15" fill="rgb(225,176,44)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 4.23%)</title><rect x="10" y="84" width="49" height="15" fill="rgb(251,24,36)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 4.23%)</title><rect x="10" y="100" width="49" height="15" fill="rgb(253,41,11)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 4.23%)</title><rect x="10" y="116" width="49" height="15" fill="rgb(215,153,28)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 4.23%)</title><rect x="10" y="132" width="49" height="15" fill="rgb(231,31,15)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (9 samples, 2.24%)</title><rect x="33" y="148" width="26" height="15" fill="rgb(237,24,37)"/><text x="36.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.24%)</title><rect x="33" y="164" width="26" height="15" fill="rgb(234,79,1)"/><text x="36.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.24%)</title><rect x="33" y="180" width="26" height="15" fill="rgb(230,206,40)"/><text x="36.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.24%)</title><rect x="33" y="196" width="26" height="15" fill="rgb(223,218,43)"/><text x="36.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.24%)</title><rect x="33" y="212" width="26" height="15" fill="rgb(239,171,22)"/><text x="36.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.24%)</title><rect x="33" y="228" width="26" height="15" fill="rgb(246,202,54)"/><text x="36.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.24%)</title><rect x="45" y="244" width="14" height="15" fill="rgb(243,189,44)"/><text x="48.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.24%)</title><rect x="45" y="260" width="14" height="15" fill="rgb(222,98,24)"/><text x="48.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.24%)</title><rect x="45" y="276" width="14" height="15" fill="rgb(228,92,14)"/><text x="48.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.24%)</title><rect x="45" y="292" width="14" height="15" fill="rgb(244,75,54)"/><text x="48.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.24%)</title><rect x="45" y="308" width="14" height="15" fill="rgb(233,6,19)"/><text x="48.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.24%)</title><rect x="45" y="324" width="14" height="15" fill="rgb(219,25,33)"/><text x="48.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 0.75%)</title><rect x="51" y="340" width="8" height="15" fill="rgb(205,160,21)"/><text x="54.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.75%)</title><rect x="51" y="356" width="8" height="15" fill="rgb(216,15,42)"/><text x="54.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.75%)</title><rect x="51" y="372" width="8" height="15" fill="rgb(242,84,34)"/><text x="54.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.75%)</title><rect x="51" y="388" width="8" height="15" fill="rgb(216,147,14)"/><text x="54.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.75%)</title><rect x="51" y="404" width="8" height="15" fill="rgb(250,229,22)"/><text x="54.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.75%)</title><rect x="51" y="420" width="8" height="15" fill="rgb(220,152,26)"/><text x="54.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.50%)</title><rect x="54" y="436" width="5" height="15" fill="rgb(220,144,8)"/><text x="57.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="452" width="5" height="15" fill="rgb(213,111,25)"/><text x="57.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.50%)</title><rect x="54" y="468" width="5" height="15" fill="rgb(228,196,8)"/><text x="57.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="484" width="5" height="15" fill="rgb(222,32,2)"/><text x="57.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="500" width="5" height="15" fill="rgb(245,223,46)"/><text x="57.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="516" width="5" height="15" fill="rgb(244,204,27)"/><text x="57.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="532" width="5" height="15" fill="rgb(241,78,52)"/><text x="57.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="548" width="5" height="15" fill="rgb(240,0,14)"/><text x="57.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="564" width="5" height="15" fill="rgb(251,135,36)"/><text x="57.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.50%)</title><rect x="54" y="580" width="5" height="15" fill="rgb(239,156,1)"/><text x="57.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="596" width="5" height="15" fill="rgb(212,94,29)"/><text x="57.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="612" width="5" height="15" fill="rgb(215,122,52)"/><text x="57.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="628" width="5" height="15" fill="rgb(215,186,36)"/><text x="57.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="644" width="5" height="15" fill="rgb(217,193,27)"/><text x="57.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="660" width="5" height="15" fill="rgb(213,101,28)"/><text x="57.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.50%)</title><rect x="54" y="676" width="5" height="15" fill="rgb(219,76,16)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="692" width="5" height="15" fill="rgb(228,87,33)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="708" width="5" height="15" fill="rgb(251,105,0)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="724" width="5" height="15" fill="rgb(206,18,45)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="740" width="5" height="15" fill="rgb(210,196,32)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="756" width="5" height="15" fill="rgb(224,69,23)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.50%)</title><rect x="54" y="772" width="5" height="15" fill="rgb(242,76,34)"/><text x="57.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="788" width="5" height="15" fill="rgb(243,16,50)"/><text x="57.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="804" width="5" height="15" fill="rgb(230,173,28)"/><text x="57.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="820" width="5" height="15" fill="rgb(237,70,46)"/><text x="57.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="836" width="5" height="15" fill="rgb(250,65,40)"/><text x="57.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="852" width="5" height="15" fill="rgb(250,157,34)"/><text x="57.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.50%)</title><rect x="54" y="868" width="5" height="15" fill="rgb(219,40,34)"/><text x="57.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="884" width="5" height="15" fill="rgb(208,39,50)"/><text x="57.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.50%)</title><rect x="54" y="900" width="5" height="15" fill="rgb(218,67,34)"/><text x="57.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="916" width="5" height="15" fill="rgb(217,153,43)"/><text x="57.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="932" width="5" height="15" fill="rgb(216,226,38)"/><text x="57.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="948" width="5" height="15" fill="rgb(218,2,46)"/><text x="57.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="964" width="5" height="15" fill="rgb(234,159,2)"/><text x="57.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="980" width="5" height="15" fill="rgb(217,109,44)"/><text x="57.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="996" width="5" height="15" fill="rgb(236,142,43)"/><text x="57.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.50%)</title><rect x="54" y="1012" width="5" height="15" fill="rgb(241,210,39)"/><text x="57.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="1028" width="5" height="15" fill="rgb(228,1,17)"/><text x="57.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="1044" width="5" height="15" fill="rgb(222,188,37)"/><text x="57.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="1060" width="5" height="15" fill="rgb(248,131,40)"/><text x="57.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="1076" width="5" height="15" fill="rgb(223,50,20)"/><text x="57.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1092" width="5" height="15" fill="rgb(219,224,47)"/><text x="57.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.50%)</title><rect x="54" y="1108" width="5" height="15" fill="rgb(207,13,17)"/><text x="57.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.50%)</title><rect x="54" y="1124" width="5" height="15" fill="rgb(210,189,50)"/><text x="57.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1140" width="5" height="15" fill="rgb(226,0,14)"/><text x="57.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="1156" width="5" height="15" fill="rgb(252,189,0)"/><text x="57.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="1172" width="5" height="15" fill="rgb(228,53,45)"/><text x="57.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="1188" width="5" height="15" fill="rgb(222,12,8)"/><text x="57.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="1204" width="5" height="15" fill="rgb(218,38,10)"/><text x="57.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1220" width="5" height="15" fill="rgb(242,142,14)"/><text x="57.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.50%)</title><rect x="54" y="1236" width="5" height="15" fill="rgb(240,30,47)"/><text x="57.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.50%)</title><rect x="54" y="1252" width="5" height="15" fill="rgb(252,11,0)"/><text x="57.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1268" width="5" height="15" fill="rgb(218,183,27)"/><text x="57.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="1284" width="5" height="15" fill="rgb(241,220,8)"/><text x="57.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="1300" width="5" height="15" fill="rgb(219,20,1)"/><text x="57.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="1316" width="5" height="15" fill="rgb(213,204,43)"/><text x="57.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="1332" width="5" height="15" fill="rgb(223,70,14)"/><text x="57.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1348" width="5" height="15" fill="rgb(212,182,21)"/><text x="57.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.50%)</title><rect x="54" y="1364" width="5" height="15" fill="rgb(205,14,42)"/><text x="57.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.50%)</title><rect x="54" y="1380" width="5" height="15" fill="rgb(234,136,39)"/><text x="57.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.50%)</title><rect x="54" y="1396" width="5" height="15" fill="rgb(206,69,24)"/><text x="57.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.50%)</title><rect x="54" y="1412" width="5" height="15" fill="rgb(211,184,23)"/><text x="57.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.50%)</title><rect x="54" y="1428" width="5" height="15" fill="rgb(247,84,40)"/><text x="57.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.50%)</title><rect x="54" y="1444" width="5" height="15" fill="rgb(241,64,6)"/><text x="57.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.25%)</title><rect x="56" y="1460" width="3" height="15" fill="rgb(226,178,31)"/><text x="59.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="56" y="1476" width="3" height="15" fill="rgb(235,186,3)"/><text x="59.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="56" y="1492" width="3" height="15" fill="rgb(244,25,28)"/><text x="59.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="56" y="1508" width="3" height="15" fill="rgb(213,93,2)"/><text x="59.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="56" y="1524" width="3" height="15" fill="rgb(213,215,23)"/><text x="59.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="56" y="1540" width="3" height="15" fill="rgb(207,88,33)"/><text x="59.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.25%)</title><rect x="56" y="1556" width="3" height="15" fill="rgb(242,36,19)"/><text x="59.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.25%)</title><rect x="56" y="1572" width="3" height="15" fill="rgb(245,224,10)"/><text x="59.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="56" y="1588" width="3" height="15" fill="rgb(207,223,31)"/><text x="59.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="56" y="1604" width="3" height="15" fill="rgb(219,111,45)"/><text x="59.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="56" y="1620" width="3" height="15" fill="rgb(212,152,28)"/><text x="59.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="56" y="1636" width="3" height="15" fill="rgb(210,189,5)"/><text x="59.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="56" y="1652" width="3" height="15" fill="rgb(235,145,47)"/><text x="59.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:82) (1 samples, 0.25%)</title><rect x="56" y="1668" width="3" height="15" fill="rgb(229,156,37)"/><text x="59.00" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py:78) (1 samples, 0.25%)</title><rect x="56" y="1684" width="3" height="15" fill="rgb(214,201,46)"/><text x="59.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="56" y="1700" width="3" height="15" fill="rgb(248,204,19)"/><text x="59.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="56" y="1716" width="3" height="15" fill="rgb(232,80,52)"/><text x="59.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="56" y="1732" width="3" height="15" fill="rgb(219,5,26)"/><text x="59.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="56" y="1748" width="3" height="15" fill="rgb(243,178,15)"/><text x="59.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="56" y="1764" width="3" height="15" fill="rgb(216,107,22)"/><text x="59.00" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py:13) (1 samples, 0.25%)</title><rect x="56" y="1780" width="3" height="15" fill="rgb(217,222,22)"/><text x="59.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="56" y="1796" width="3" height="15" fill="rgb(252,147,29)"/><text x="59.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="56" y="1812" width="3" height="15" fill="rgb(244,213,4)"/><text x="59.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="56" y="1828" width="3" height="15" fill="rgb(215,204,40)"/><text x="59.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="56" y="1844" width="3" height="15" fill="rgb(229,105,46)"/><text x="59.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="56" y="1860" width="3" height="15" fill="rgb(221,95,37)"/><text x="59.00" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py:8) (1 samples, 0.25%)</title><rect x="56" y="1876" width="3" height="15" fill="rgb(234,106,0)"/><text x="59.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="56" y="1892" width="3" height="15" fill="rgb(215,128,43)"/><text x="59.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="56" y="1908" width="3" height="15" fill="rgb(226,49,21)"/><text x="59.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="56" y="1924" width="3" height="15" fill="rgb(236,66,39)"/><text x="59.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="56" y="1940" width="3" height="15" fill="rgb(237,62,51)"/><text x="59.00" y="1950.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.25%)</title><rect x="56" y="1956" width="3" height="15" fill="rgb(226,89,2)"/><text x="59.00" y="1966.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.25%)</title><rect x="56" y="1972" width="3" height="15" fill="rgb(225,100,51)"/><text x="59.00" y="1982.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5601) (1 samples, 0.25%)</title><rect x="59" y="468" width="3" height="15" fill="rgb(223,183,32)"/><text x="62.00" y="478.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.25%)</title><rect x="59" y="484" width="3" height="15" fill="rgb(241,53,28)"/><text x="62.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.25%)</title><rect x="59" y="500" width="3" height="15" fill="rgb(214,72,27)"/><text x="62.00" y="510.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3201) (1 samples, 0.25%)</title><rect x="59" y="516" width="3" height="15" fill="rgb(223,203,18)"/><text x="62.00" y="526.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.25%)</title><rect x="59" y="532" width="3" height="15" fill="rgb(251,71,7)"/><text x="62.00" y="542.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c:2612) (1 samples, 0.25%)</title><rect x="59" y="548" width="3" height="15" fill="rgb(227,10,15)"/><text x="62.00" y="558.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c:2859) (1 samples, 0.25%)</title><rect x="59" y="564" width="3" height="15" fill="rgb(252,51,19)"/><text x="62.00" y="574.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.25%)</title><rect x="59" y="580" width="3" height="15" fill="rgb(224,215,18)"/><text x="62.00" y="590.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="59" y="596" width="3" height="15" fill="rgb(232,94,32)"/><text x="62.00" y="606.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (2 samples, 0.50%)</title><rect x="59" y="276" width="6" height="15" fill="rgb(226,197,51)"/><text x="62.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (2 samples, 0.50%)</title><rect x="59" y="292" width="6" height="15" fill="rgb(225,176,29)"/><text x="62.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (2 samples, 0.50%)</title><rect x="59" y="308" width="6" height="15" fill="rgb(247,102,34)"/><text x="62.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (2 samples, 0.50%)</title><rect x="59" y="324" width="6" height="15" fill="rgb(217,119,34)"/><text x="62.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (2 samples, 0.50%)</title><rect x="59" y="340" width="6" height="15" fill="rgb(223,59,17)"/><text x="62.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (2 samples, 0.50%)</title><rect x="59" y="356" width="6" height="15" fill="rgb(232,31,2)"/><text x="62.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (2 samples, 0.50%)</title><rect x="59" y="372" width="6" height="15" fill="rgb(244,135,32)"/><text x="62.00" y="382.50"></text></g><g><title>__init__ (bit_generator.c:6998) (2 samples, 0.50%)</title><rect x="59" y="388" width="6" height="15" fill="rgb(251,17,41)"/><text x="62.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (2 samples, 0.50%)</title><rect x="59" y="404" width="6" height="15" fill="rgb(212,102,41)"/><text x="62.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (2 samples, 0.50%)</title><rect x="59" y="420" width="6" height="15" fill="rgb(240,39,40)"/><text x="62.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c:4349) (2 samples, 0.50%)</title><rect x="59" y="436" width="6" height="15" fill="rgb(246,147,10)"/><text x="62.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4691) (2 samples, 0.50%)</title><rect x="59" y="452" width="6" height="15" fill="rgb(252,88,3)"/><text x="62.00" y="462.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5616) (1 samples, 0.25%)</title><rect x="62" y="468" width="3" height="15" fill="rgb(229,50,34)"/><text x="65.00" y="478.50"></text></g><g><title>fit (sklearn/tree/_classes.py:196) (1 samples, 0.25%)</title><rect x="65" y="276" width="3" height="15" fill="rgb(233,175,20)"/><text x="68.00" y="286.50"></text></g><g><title>fit (sklearn/tree/_classes.py:348) (1 samples, 0.25%)</title><rect x="68" y="276" width="3" height="15" fill="rgb(245,23,37)"/><text x="71.00" y="286.50"></text></g><g><title>0x7f165ca8e7af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="68" y="292" width="3" height="15" fill="rgb(211,133,22)"/><text x="71.00" y="302.50"></text></g><g><title>0x7f165ca731e5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="68" y="308" width="3" height="15" fill="rgb(229,201,43)"/><text x="71.00" y="318.50"></text></g><g><title>amax (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="68" y="324" width="3" height="15" fill="rgb(248,211,41)"/><text x="71.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.25%)</title><rect x="68" y="340" width="3" height="15" fill="rgb(206,198,24)"/><text x="71.00" y="350.50"></text></g><g><title>amax (numpy/core/fromnumeric.py:2621) (1 samples, 0.25%)</title><rect x="68" y="356" width="3" height="15" fill="rgb(229,21,3)"/><text x="71.00" y="366.50"></text></g><g><title>0x7f165ccd9ccc (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="71" y="356" width="3" height="15" fill="rgb(218,32,24)"/><text x="74.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:40) (6 samples, 1.49%)</title><rect x="59" y="52" width="18" height="15" fill="rgb(227,164,41)"/><text x="62.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:11) (6 samples, 1.49%)</title><rect x="59" y="68" width="18" height="15" fill="rgb(236,158,39)"/><text x="62.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (6 samples, 1.49%)</title><rect x="59" y="84" width="18" height="15" fill="rgb(246,55,49)"/><text x="62.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (6 samples, 1.49%)</title><rect x="59" y="100" width="18" height="15" fill="rgb(235,101,20)"/><text x="62.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (6 samples, 1.49%)</title><rect x="59" y="116" width="18" height="15" fill="rgb(231,173,18)"/><text x="62.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (6 samples, 1.49%)</title><rect x="59" y="132" width="18" height="15" fill="rgb(223,181,11)"/><text x="62.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (6 samples, 1.49%)</title><rect x="59" y="148" width="18" height="15" fill="rgb(249,100,3)"/><text x="62.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (6 samples, 1.49%)</title><rect x="59" y="164" width="18" height="15" fill="rgb(214,7,41)"/><text x="62.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (6 samples, 1.49%)</title><rect x="59" y="180" width="18" height="15" fill="rgb(222,180,13)"/><text x="62.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (6 samples, 1.49%)</title><rect x="59" y="196" width="18" height="15" fill="rgb(229,43,24)"/><text x="62.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (6 samples, 1.49%)</title><rect x="59" y="212" width="18" height="15" fill="rgb(208,46,27)"/><text x="62.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (6 samples, 1.49%)</title><rect x="59" y="228" width="18" height="15" fill="rgb(245,109,18)"/><text x="62.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (6 samples, 1.49%)</title><rect x="59" y="244" width="18" height="15" fill="rgb(238,15,27)"/><text x="62.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (6 samples, 1.49%)</title><rect x="59" y="260" width="18" height="15" fill="rgb(215,73,30)"/><text x="62.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (2 samples, 0.50%)</title><rect x="71" y="276" width="6" height="15" fill="rgb(221,151,2)"/><text x="74.00" y="286.50"></text></g><g><title>0x7f165ca83b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="71" y="292" width="6" height="15" fill="rgb(215,1,46)"/><text x="74.00" y="302.50"></text></g><g><title>0x7f165cab510a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="71" y="308" width="6" height="15" fill="rgb(223,170,18)"/><text x="74.00" y="318.50"></text></g><g><title>0x7f165cce0d8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="71" y="324" width="6" height="15" fill="rgb(241,47,20)"/><text x="74.00" y="334.50"></text></g><g><title>0x7f165ccd9d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="71" y="340" width="6" height="15" fill="rgb(230,38,49)"/><text x="74.00" y="350.50"></text></g><g><title>0x7f165ccd9d00 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="74" y="356" width="3" height="15" fill="rgb(236,109,54)"/><text x="77.00" y="366.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:25) (1 samples, 0.25%)</title><rect x="77" y="84" width="3" height="15" fill="rgb(244,179,19)"/><text x="80.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="77" y="100" width="3" height="15" fill="rgb(223,48,15)"/><text x="80.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.25%)</title><rect x="77" y="116" width="3" height="15" fill="rgb(213,200,53)"/><text x="80.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.25%)</title><rect x="77" y="132" width="3" height="15" fill="rgb(227,131,45)"/><text x="80.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.25%)</title><rect x="77" y="148" width="3" height="15" fill="rgb(247,25,52)"/><text x="80.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.25%)</title><rect x="77" y="164" width="3" height="15" fill="rgb(211,94,39)"/><text x="80.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.25%)</title><rect x="77" y="180" width="3" height="15" fill="rgb(253,155,40)"/><text x="80.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.25%)</title><rect x="77" y="196" width="3" height="15" fill="rgb(210,77,28)"/><text x="80.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.25%)</title><rect x="77" y="212" width="3" height="15" fill="rgb(227,58,32)"/><text x="80.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:140) (1 samples, 0.25%)</title><rect x="77" y="228" width="3" height="15" fill="rgb(246,218,16)"/><text x="80.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/common/tree_ensemble.py:140) (1 samples, 0.25%)</title><rect x="77" y="244" width="3" height="15" fill="rgb(222,77,39)"/><text x="80.00" y="254.50"></text></g><g><title>array_item (mapping.c:1386) (1 samples, 0.25%)</title><rect x="77" y="260" width="3" height="15" fill="rgb(225,73,0)"/><text x="80.00" y="270.50"></text></g><g><title>PyArray_Scalar (scalarapi.c:693) (1 samples, 0.25%)</title><rect x="77" y="276" width="3" height="15" fill="rgb(228,192,27)"/><text x="80.00" y="286.50"></text></g><g><title>gentype_alloc (scalartypes.c.src:129) (1 samples, 0.25%)</title><rect x="77" y="292" width="3" height="15" fill="rgb(223,27,5)"/><text x="80.00" y="302.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.25%)</title><rect x="80" y="180" width="3" height="15" fill="rgb(248,116,15)"/><text x="83.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.25%)</title><rect x="83" y="180" width="3" height="15" fill="rgb(244,33,4)"/><text x="86.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.25%)</title><rect x="83" y="196" width="3" height="15" fill="rgb(226,87,7)"/><text x="86.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.25%)</title><rect x="83" y="212" width="3" height="15" fill="rgb(211,5,33)"/><text x="86.00" y="222.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.25%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(242,206,48)"/><text x="89.00" y="206.50"></text></g><g><title>_put (queue.py:212) (1 samples, 0.25%)</title><rect x="86" y="212" width="3" height="15" fill="rgb(231,215,24)"/><text x="89.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (2 samples, 0.50%)</title><rect x="86" y="180" width="6" height="15" fill="rgb(227,64,38)"/><text x="89.00" y="190.50"></text></g><g><title>put (queue.py:151) (1 samples, 0.25%)</title><rect x="89" y="196" width="3" height="15" fill="rgb(212,175,29)"/><text x="92.00" y="206.50"></text></g><g><title>0x7f165ca8ef55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="92" y="324" width="3" height="15" fill="rgb(219,43,23)"/><text x="95.00" y="334.50"></text></g><g><title>0x7f165ca7ed33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="92" y="340" width="3" height="15" fill="rgb(245,204,48)"/><text x="95.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.25%)</title><rect x="92" y="356" width="3" height="15" fill="rgb(232,132,30)"/><text x="95.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.25%)</title><rect x="92" y="372" width="3" height="15" fill="rgb(246,210,45)"/><text x="95.00" y="382.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.50%)</title><rect x="92" y="196" width="6" height="15" fill="rgb(247,5,45)"/><text x="95.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.50%)</title><rect x="92" y="212" width="6" height="15" fill="rgb(228,152,3)"/><text x="95.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.50%)</title><rect x="92" y="228" width="6" height="15" fill="rgb(250,113,28)"/><text x="95.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.50%)</title><rect x="92" y="244" width="6" height="15" fill="rgb(222,124,0)"/><text x="95.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.50%)</title><rect x="92" y="260" width="6" height="15" fill="rgb(211,51,3)"/><text x="95.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.50%)</title><rect x="92" y="276" width="6" height="15" fill="rgb(244,17,35)"/><text x="95.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (2 samples, 0.50%)</title><rect x="92" y="292" width="6" height="15" fill="rgb(244,55,48)"/><text x="95.00" y="302.50"></text></g><g><title>0x7f165ca8fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="92" y="308" width="6" height="15" fill="rgb(253,189,49)"/><text x="95.00" y="318.50"></text></g><g><title>0x7f165ca8f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="95" y="324" width="3" height="15" fill="rgb(221,130,14)"/><text x="98.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.25%)</title><rect x="95" y="340" width="3" height="15" fill="rgb(208,123,3)"/><text x="98.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.25%)</title><rect x="95" y="356" width="3" height="15" fill="rgb(232,116,0)"/><text x="98.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="95" y="372" width="3" height="15" fill="rgb(251,34,19)"/><text x="98.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.25%)</title><rect x="95" y="388" width="3" height="15" fill="rgb(216,216,7)"/><text x="98.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.25%)</title><rect x="95" y="404" width="3" height="15" fill="rgb(208,131,42)"/><text x="98.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.25%)</title><rect x="95" y="420" width="3" height="15" fill="rgb(210,61,27)"/><text x="98.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.25%)</title><rect x="95" y="436" width="3" height="15" fill="rgb(247,137,47)"/><text x="98.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="95" y="452" width="3" height="15" fill="rgb(211,60,9)"/><text x="98.00" y="462.50"></text></g><g><title>0x7f168304d700 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="95" y="468" width="3" height="15" fill="rgb(242,131,49)"/><text x="98.00" y="478.50"></text></g><g><title>0x7f168304ab02 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="95" y="484" width="3" height="15" fill="rgb(212,187,22)"/><text x="98.00" y="494.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (7 samples, 1.74%)</title><rect x="80" y="164" width="20" height="15" fill="rgb(252,28,52)"/><text x="83.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.75%)</title><rect x="92" y="180" width="8" height="15" fill="rgb(228,168,40)"/><text x="95.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.25%)</title><rect x="98" y="196" width="2" height="15" fill="rgb(223,197,7)"/><text x="101.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:47) (9 samples, 2.24%)</title><rect x="77" y="52" width="26" height="15" fill="rgb(254,138,10)"/><text x="80.00" y="62.50">&lt;..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:46) (9 samples, 2.24%)</title><rect x="77" y="68" width="26" height="15" fill="rgb(246,69,2)"/><text x="80.00" y="78.50">p..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:26) (8 samples, 1.99%)</title><rect x="80" y="84" width="23" height="15" fill="rgb(239,162,28)"/><text x="83.00" y="94.50">s..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:18) (8 samples, 1.99%)</title><rect x="80" y="100" width="23" height="15" fill="rgb(213,110,25)"/><text x="83.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.99%)</title><rect x="80" y="116" width="23" height="15" fill="rgb(224,197,37)"/><text x="83.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (8 samples, 1.99%)</title><rect x="80" y="132" width="23" height="15" fill="rgb(216,76,3)"/><text x="83.00" y="142.50">&lt;..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (8 samples, 1.99%)</title><rect x="80" y="148" width="23" height="15" fill="rgb(252,85,40)"/><text x="83.00" y="158.50">p..</text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.25%)</title><rect x="100" y="164" width="3" height="15" fill="rgb(207,146,5)"/><text x="103.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.25%)</title><rect x="100" y="180" width="3" height="15" fill="rgb(253,183,17)"/><text x="103.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (1 samples, 0.25%)</title><rect x="103" y="180" width="3" height="15" fill="rgb(229,22,36)"/><text x="106.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (1 samples, 0.25%)</title><rect x="103" y="196" width="3" height="15" fill="rgb(225,168,8)"/><text x="106.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (1 samples, 0.25%)</title><rect x="103" y="212" width="3" height="15" fill="rgb(209,127,49)"/><text x="106.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.25%)</title><rect x="106" y="180" width="3" height="15" fill="rgb(225,20,29)"/><text x="109.00" y="190.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.25%)</title><rect x="112" y="276" width="3" height="15" fill="rgb(209,87,3)"/><text x="115.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.25%)</title><rect x="112" y="292" width="3" height="15" fill="rgb(251,114,27)"/><text x="115.00" y="302.50"></text></g><g><title>0x7f165ca8fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="112" y="308" width="3" height="15" fill="rgb(219,30,52)"/><text x="115.00" y="318.50"></text></g><g><title>0x7f165ca8efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="112" y="324" width="3" height="15" fill="rgb(215,194,36)"/><text x="115.00" y="334.50"></text></g><g><title>0x7f165ca9e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="112" y="340" width="3" height="15" fill="rgb(218,75,26)"/><text x="115.00" y="350.50"></text></g><g><title>0x7f165ca9d6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="112" y="356" width="3" height="15" fill="rgb(241,48,28)"/><text x="115.00" y="366.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (5 samples, 1.24%)</title><rect x="103" y="164" width="15" height="15" fill="rgb(254,98,25)"/><text x="106.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.75%)</title><rect x="109" y="180" width="9" height="15" fill="rgb(248,216,53)"/><text x="112.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.75%)</title><rect x="109" y="196" width="9" height="15" fill="rgb(231,204,11)"/><text x="112.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.75%)</title><rect x="109" y="212" width="9" height="15" fill="rgb(209,168,20)"/><text x="112.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.75%)</title><rect x="109" y="228" width="9" height="15" fill="rgb(242,23,34)"/><text x="112.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.75%)</title><rect x="109" y="244" width="9" height="15" fill="rgb(242,220,8)"/><text x="112.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.75%)</title><rect x="109" y="260" width="9" height="15" fill="rgb(241,81,11)"/><text x="112.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.25%)</title><rect x="115" y="276" width="3" height="15" fill="rgb(246,124,9)"/><text x="118.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="115" y="292" width="3" height="15" fill="rgb(212,82,11)"/><text x="118.00" y="302.50"></text></g><g><title>0x7f1683061730 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="115" y="308" width="3" height="15" fill="rgb(247,143,21)"/><text x="118.00" y="318.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (1 samples, 0.25%)</title><rect x="124" y="180" width="3" height="15" fill="rgb(236,25,14)"/><text x="127.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="124" y="196" width="3" height="15" fill="rgb(218,15,29)"/><text x="127.00" y="206.50"></text></g><g><title>get (queue.py:164) (3 samples, 0.75%)</title><rect x="136" y="196" width="9" height="15" fill="rgb(221,140,43)"/><text x="139.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.25%)</title><rect x="142" y="212" width="3" height="15" fill="rgb(222,40,38)"/><text x="145.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="142" y="228" width="3" height="15" fill="rgb(218,213,3)"/><text x="145.00" y="238.50"></text></g><g><title>0x7f1683061782 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="142" y="244" width="3" height="15" fill="rgb(217,127,50)"/><text x="145.00" y="254.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.25%)</title><rect x="145" y="196" width="2" height="15" fill="rgb(247,173,0)"/><text x="148.00" y="206.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.50%)</title><rect x="147" y="196" width="6" height="15" fill="rgb(223,111,14)"/><text x="150.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (10 samples, 2.49%)</title><rect x="127" y="180" width="29" height="15" fill="rgb(226,229,13)"/><text x="130.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (1 samples, 0.25%)</title><rect x="153" y="196" width="3" height="15" fill="rgb(243,47,52)"/><text x="156.00" y="206.50"></text></g><g><title>0x7f168306c12f (libc-2.29.so) (1 samples, 0.25%)</title><rect x="153" y="212" width="3" height="15" fill="rgb(219,106,29)"/><text x="156.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.25%)</title><rect x="156" y="180" width="3" height="15" fill="rgb(231,186,47)"/><text x="159.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:297) (1 samples, 0.25%)</title><rect x="171" y="212" width="3" height="15" fill="rgb(242,5,42)"/><text x="174.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:305) (2 samples, 0.50%)</title><rect x="174" y="212" width="6" height="15" fill="rgb(210,16,23)"/><text x="177.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.25%)</title><rect x="186" y="228" width="3" height="15" fill="rgb(240,105,10)"/><text x="189.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.50%)</title><rect x="189" y="228" width="5" height="15" fill="rgb(221,95,17)"/><text x="192.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (13 samples, 3.23%)</title><rect x="159" y="180" width="38" height="15" fill="rgb(236,220,30)"/><text x="162.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (12 samples, 2.99%)</title><rect x="162" y="196" width="35" height="15" fill="rgb(231,119,14)"/><text x="165.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (6 samples, 1.49%)</title><rect x="180" y="212" width="17" height="15" fill="rgb(234,115,24)"/><text x="183.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.25%)</title><rect x="194" y="228" width="3" height="15" fill="rgb(232,51,35)"/><text x="197.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.25%)</title><rect x="197" y="180" width="3" height="15" fill="rgb(217,192,26)"/><text x="200.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.25%)</title><rect x="200" y="180" width="3" height="15" fill="rgb(242,104,34)"/><text x="203.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.25%)</title><rect x="203" y="180" width="3" height="15" fill="rgb(211,60,23)"/><text x="206.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.25%)</title><rect x="206" y="180" width="3" height="15" fill="rgb(213,200,46)"/><text x="209.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.25%)</title><rect x="224" y="212" width="3" height="15" fill="rgb(212,202,9)"/><text x="227.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.25%)</title><rect x="227" y="212" width="3" height="15" fill="rgb(222,57,34)"/><text x="230.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (9 samples, 2.24%)</title><rect x="212" y="196" width="26" height="15" fill="rgb(242,61,50)"/><text x="215.00" y="206.50">g..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (3 samples, 0.75%)</title><rect x="230" y="212" width="8" height="15" fill="rgb(240,150,44)"/><text x="233.00" y="222.50"></text></g><g><title>0x7f168305c6d4 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="236" y="228" width="2" height="15" fill="rgb(220,138,33)"/><text x="239.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.25%)</title><rect x="244" y="228" width="3" height="15" fill="rgb(209,8,51)"/><text x="247.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.00%)</title><rect x="241" y="212" width="12" height="15" fill="rgb(242,180,39)"/><text x="244.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.50%)</title><rect x="247" y="228" width="6" height="15" fill="rgb(252,225,30)"/><text x="250.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.25%)</title><rect x="253" y="212" width="3" height="15" fill="rgb(206,60,22)"/><text x="256.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.25%)</title><rect x="256" y="212" width="3" height="15" fill="rgb(241,179,3)"/><text x="259.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (18 samples, 4.48%)</title><rect x="209" y="180" width="53" height="15" fill="rgb(227,11,52)"/><text x="212.00" y="190.50">dispa..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (8 samples, 1.99%)</title><rect x="238" y="196" width="24" height="15" fill="rgb(225,193,35)"/><text x="241.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.25%)</title><rect x="259" y="212" width="3" height="15" fill="rgb(215,209,2)"/><text x="262.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.50%)</title><rect x="262" y="180" width="6" height="15" fill="rgb(210,3,48)"/><text x="265.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.25%)</title><rect x="265" y="196" width="3" height="15" fill="rgb(253,116,3)"/><text x="268.00" y="206.50"></text></g><g><title>put (queue.py:132) (3 samples, 0.75%)</title><rect x="268" y="196" width="9" height="15" fill="rgb(212,72,32)"/><text x="271.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (3 samples, 0.75%)</title><rect x="268" y="212" width="9" height="15" fill="rgb(217,118,10)"/><text x="271.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="274" y="228" width="3" height="15" fill="rgb(234,19,9)"/><text x="277.00" y="238.50"></text></g><g><title>put (queue.py:150) (2 samples, 0.50%)</title><rect x="277" y="196" width="5" height="15" fill="rgb(229,189,51)"/><text x="280.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.50%)</title><rect x="285" y="212" width="6" height="15" fill="rgb(230,32,19)"/><text x="288.00" y="222.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.50%)</title><rect x="291" y="212" width="6" height="15" fill="rgb(252,169,9)"/><text x="294.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.50%)</title><rect x="291" y="228" width="6" height="15" fill="rgb(210,149,13)"/><text x="294.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.50%)</title><rect x="291" y="244" width="6" height="15" fill="rgb(212,178,37)"/><text x="294.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="294" y="260" width="3" height="15" fill="rgb(244,5,3)"/><text x="297.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="294" y="276" width="3" height="15" fill="rgb(236,204,28)"/><text x="297.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (12 samples, 2.99%)</title><rect x="268" y="180" width="35" height="15" fill="rgb(224,143,32)"/><text x="271.00" y="190.50">di..</text></g><g><title>put (queue.py:151) (7 samples, 1.74%)</title><rect x="282" y="196" width="21" height="15" fill="rgb(221,114,21)"/><text x="285.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.50%)</title><rect x="297" y="212" width="6" height="15" fill="rgb(244,121,28)"/><text x="300.00" y="222.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.50%)</title><rect x="306" y="196" width="6" height="15" fill="rgb(247,209,17)"/><text x="309.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.25%)</title><rect x="309" y="212" width="3" height="15" fill="rgb(228,38,37)"/><text x="312.00" y="222.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.25%)</title><rect x="312" y="196" width="3" height="15" fill="rgb(210,117,0)"/><text x="315.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (5 samples, 1.24%)</title><rect x="303" y="180" width="15" height="15" fill="rgb(218,200,45)"/><text x="306.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.25%)</title><rect x="315" y="196" width="3" height="15" fill="rgb(212,81,46)"/><text x="318.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.25%)</title><rect x="318" y="196" width="3" height="15" fill="rgb(207,193,49)"/><text x="321.00" y="206.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.25%)</title><rect x="318" y="212" width="3" height="15" fill="rgb(212,172,22)"/><text x="321.00" y="222.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="318" y="228" width="3" height="15" fill="rgb(240,179,24)"/><text x="321.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.25%)</title><rect x="332" y="260" width="3" height="15" fill="rgb(243,91,2)"/><text x="335.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.25%)</title><rect x="335" y="260" width="3" height="15" fill="rgb(214,46,35)"/><text x="338.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.25%)</title><rect x="338" y="260" width="3" height="15" fill="rgb(212,57,16)"/><text x="341.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (6 samples, 1.49%)</title><rect x="327" y="244" width="17" height="15" fill="rgb(246,113,33)"/><text x="330.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.25%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(235,185,31)"/><text x="344.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:481) (1 samples, 0.25%)</title><rect x="350" y="292" width="3" height="15" fill="rgb(236,170,16)"/><text x="353.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.25%)</title><rect x="356" y="308" width="3" height="15" fill="rgb(243,144,53)"/><text x="359.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.25%)</title><rect x="356" y="324" width="3" height="15" fill="rgb(242,15,45)"/><text x="359.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.50%)</title><rect x="368" y="324" width="5" height="15" fill="rgb(223,151,9)"/><text x="371.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="385" y="340" width="3" height="15" fill="rgb(254,206,54)"/><text x="388.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (16 samples, 3.98%)</title><rect x="353" y="292" width="47" height="15" fill="rgb(226,169,33)"/><text x="356.00" y="302.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 3.48%)</title><rect x="359" y="308" width="41" height="15" fill="rgb(238,227,13)"/><text x="362.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.24%)</title><rect x="373" y="324" width="27" height="15" fill="rgb(235,214,3)"/><text x="376.00" y="334.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.00%)</title><rect x="388" y="340" width="12" height="15" fill="rgb(205,198,45)"/><text x="391.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.25%)</title><rect x="400" y="308" width="3" height="15" fill="rgb(242,104,4)"/><text x="403.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.25%)</title><rect x="400" y="324" width="3" height="15" fill="rgb(233,83,9)"/><text x="403.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.50%)</title><rect x="400" y="292" width="6" height="15" fill="rgb(213,15,2)"/><text x="403.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.25%)</title><rect x="403" y="308" width="3" height="15" fill="rgb(245,59,20)"/><text x="406.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.25%)</title><rect x="409" y="372" width="3" height="15" fill="rgb(242,123,52)"/><text x="412.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.25%)</title><rect x="409" y="388" width="3" height="15" fill="rgb(253,205,34)"/><text x="412.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.25%)</title><rect x="412" y="372" width="3" height="15" fill="rgb(247,130,6)"/><text x="415.00" y="382.50"></text></g><g><title>0x7f165ca8ef55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="409" y="324" width="9" height="15" fill="rgb(244,214,1)"/><text x="412.00" y="334.50"></text></g><g><title>0x7f165ca7ed33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="409" y="340" width="9" height="15" fill="rgb(218,20,17)"/><text x="412.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.75%)</title><rect x="409" y="356" width="9" height="15" fill="rgb(222,183,23)"/><text x="412.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.25%)</title><rect x="415" y="372" width="3" height="15" fill="rgb(245,84,24)"/><text x="418.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.25%)</title><rect x="415" y="388" width="3" height="15" fill="rgb(246,143,18)"/><text x="418.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.25%)</title><rect x="415" y="404" width="3" height="15" fill="rgb(225,119,3)"/><text x="418.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.25%)</title><rect x="415" y="420" width="3" height="15" fill="rgb(245,65,48)"/><text x="418.00" y="430.50"></text></g><g><title>0x7f165ca9d1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="418" y="356" width="5" height="15" fill="rgb(252,22,6)"/><text x="421.00" y="366.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.25%)</title><rect x="420" y="372" width="3" height="15" fill="rgb(242,45,10)"/><text x="423.00" y="382.50"></text></g><g><title>0x7f165ca9d225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="423" y="356" width="3" height="15" fill="rgb(235,116,9)"/><text x="426.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.25%)</title><rect x="423" y="372" width="3" height="15" fill="rgb(232,188,45)"/><text x="426.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.25%)</title><rect x="423" y="388" width="3" height="15" fill="rgb(235,63,32)"/><text x="426.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.25%)</title><rect x="423" y="404" width="3" height="15" fill="rgb(221,184,1)"/><text x="426.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.25%)</title><rect x="423" y="420" width="3" height="15" fill="rgb(253,182,14)"/><text x="426.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.25%)</title><rect x="423" y="436" width="3" height="15" fill="rgb(221,71,7)"/><text x="426.00" y="446.50"></text></g><g><title>0x7f165ca81c7e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="426" y="372" width="3" height="15" fill="rgb(240,125,15)"/><text x="429.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.25%)</title><rect x="432" y="436" width="3" height="15" fill="rgb(208,148,37)"/><text x="435.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.25%)</title><rect x="432" y="452" width="3" height="15" fill="rgb(220,65,1)"/><text x="435.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.25%)</title><rect x="432" y="468" width="3" height="15" fill="rgb(213,21,38)"/><text x="435.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.25%)</title><rect x="432" y="484" width="3" height="15" fill="rgb(228,100,42)"/><text x="435.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="432" y="500" width="3" height="15" fill="rgb(236,59,53)"/><text x="435.00" y="510.50"></text></g><g><title>0x7f168304b917 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="435" y="468" width="3" height="15" fill="rgb(212,149,13)"/><text x="438.00" y="478.50"></text></g><g><title>0x7f165ca772fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="432" y="404" width="9" height="15" fill="rgb(226,13,27)"/><text x="435.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.75%)</title><rect x="432" y="420" width="9" height="15" fill="rgb(249,126,23)"/><text x="435.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (2 samples, 0.50%)</title><rect x="435" y="436" width="6" height="15" fill="rgb(254,100,24)"/><text x="438.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (2 samples, 0.50%)</title><rect x="435" y="452" width="6" height="15" fill="rgb(253,139,1)"/><text x="438.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="438" y="468" width="3" height="15" fill="rgb(230,76,48)"/><text x="441.00" y="478.50"></text></g><g><title>0x7f165ca9d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.49%)</title><rect x="426" y="356" width="18" height="15" fill="rgb(226,161,40)"/><text x="429.00" y="366.50"></text></g><g><title>0x7f165ca81d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.24%)</title><rect x="429" y="372" width="15" height="15" fill="rgb(237,46,52)"/><text x="432.00" y="382.50"></text></g><g><title>0x7f165ca81666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.24%)</title><rect x="429" y="388" width="15" height="15" fill="rgb(225,144,48)"/><text x="432.00" y="398.50"></text></g><g><title>0x7f165ca77300 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="441" y="404" width="3" height="15" fill="rgb(232,22,15)"/><text x="444.00" y="414.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.75%)</title><rect x="444" y="372" width="9" height="15" fill="rgb(205,169,36)"/><text x="447.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.25%)</title><rect x="450" y="388" width="3" height="15" fill="rgb(234,185,13)"/><text x="453.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.25%)</title><rect x="450" y="404" width="3" height="15" fill="rgb(243,82,37)"/><text x="453.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.25%)</title><rect x="450" y="420" width="3" height="15" fill="rgb(232,133,28)"/><text x="453.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.25%)</title><rect x="450" y="436" width="3" height="15" fill="rgb(230,78,25)"/><text x="453.00" y="446.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.25%)</title><rect x="453" y="404" width="3" height="15" fill="rgb(239,134,45)"/><text x="456.00" y="414.50"></text></g><g><title>0x7f168304d1ba (libc-2.29.so) (1 samples, 0.25%)</title><rect x="459" y="484" width="3" height="15" fill="rgb(216,128,27)"/><text x="462.00" y="494.50"></text></g><g><title>0x7f168306c103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="462" y="484" width="2" height="15" fill="rgb(252,110,35)"/><text x="465.00" y="494.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 1.00%)</title><rect x="456" y="436" width="11" height="15" fill="rgb(250,26,26)"/><text x="459.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (4 samples, 1.00%)</title><rect x="456" y="452" width="11" height="15" fill="rgb(246,32,4)"/><text x="459.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (4 samples, 1.00%)</title><rect x="456" y="468" width="11" height="15" fill="rgb(249,192,43)"/><text x="459.00" y="478.50"></text></g><g><title>0x7f168306c120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="464" y="484" width="3" height="15" fill="rgb(215,14,42)"/><text x="467.00" y="494.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.49%)</title><rect x="453" y="372" width="17" height="15" fill="rgb(246,77,42)"/><text x="456.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.49%)</title><rect x="453" y="388" width="17" height="15" fill="rgb(205,45,21)"/><text x="456.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (5 samples, 1.24%)</title><rect x="456" y="404" width="14" height="15" fill="rgb(234,100,31)"/><text x="459.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (5 samples, 1.24%)</title><rect x="456" y="420" width="14" height="15" fill="rgb(242,173,6)"/><text x="459.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.25%)</title><rect x="467" y="436" width="3" height="15" fill="rgb(217,51,13)"/><text x="470.00" y="446.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="467" y="452" width="3" height="15" fill="rgb(251,113,18)"/><text x="470.00" y="462.50"></text></g><g><title>0x7f165ca9d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.49%)</title><rect x="444" y="356" width="29" height="15" fill="rgb(235,219,2)"/><text x="447.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:2003) (1 samples, 0.25%)</title><rect x="470" y="372" width="3" height="15" fill="rgb(242,209,28)"/><text x="473.00" y="382.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.25%)</title><rect x="470" y="388" width="3" height="15" fill="rgb(221,34,23)"/><text x="473.00" y="398.50"></text></g><g><title>_npy_free_cache (alloc.c:106) (1 samples, 0.25%)</title><rect x="470" y="404" width="3" height="15" fill="rgb(240,78,25)"/><text x="473.00" y="414.50"></text></g><g><title>0x7f165ca9d690 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="473" y="356" width="3" height="15" fill="rgb(251,208,30)"/><text x="476.00" y="366.50"></text></g><g><title>0x7f165ca9d6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="476" y="356" width="3" height="15" fill="rgb(236,219,39)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f165ca9d6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="479" y="356" width="9" height="15" fill="rgb(244,115,23)"/><text x="482.00" y="366.50"></text></g><g><title>0x7f165ca9d6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="488" y="356" width="6" height="15" fill="rgb(233,73,52)"/><text x="491.00" y="366.50"></text></g><g><title>0x7f165ca9d6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="494" y="356" width="6" height="15" fill="rgb(241,114,52)"/><text x="497.00" y="366.50"></text></g><g><title>0x7f165ca9d6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="500" y="356" width="3" height="15" fill="rgb(216,87,13)"/><text x="503.00" y="366.50"></text></g><g><title>0x7f165ca9d6d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="503" y="356" width="3" height="15" fill="rgb(243,110,23)"/><text x="506.00" y="366.50"></text></g><g><title>0x7f165ca9d731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="506" y="356" width="3" height="15" fill="rgb(214,165,53)"/><text x="509.00" y="366.50"></text></g><g><title>0x7f165ca69980 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="506" y="372" width="3" height="15" fill="rgb(221,44,7)"/><text x="509.00" y="382.50"></text></g><g><title>0x7f165ca9d7a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="509" y="356" width="2" height="15" fill="rgb(225,224,15)"/><text x="512.00" y="366.50"></text></g><g><title>0x7f165ca9d87d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="511" y="356" width="3" height="15" fill="rgb(244,179,22)"/><text x="514.00" y="366.50"></text></g><g><title>0x7f165ca9d92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="514" y="356" width="3" height="15" fill="rgb(244,88,37)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f165ca728d1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="514" y="372" width="3" height="15" fill="rgb(242,110,17)"/><text x="517.00" y="382.50"></text></g><g><title>0x7f165ca9e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (35 samples, 8.71%)</title><rect x="418" y="340" width="102" height="15" fill="rgb(238,131,18)"/><text x="421.00" y="350.50">0x7f165ca9e4..</text></g><g><title>0x7f165ca9da15 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(213,60,38)"/><text x="520.00" y="366.50"></text></g><g><title>0x7f165ca724c7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="520" y="372" width="3" height="15" fill="rgb(252,31,27)"/><text x="523.00" y="382.50"></text></g><g><title>0x7f165ca8efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (37 samples, 9.20%)</title><rect x="418" y="324" width="108" height="15" fill="rgb(207,206,35)"/><text x="421.00" y="334.50">0x7f165ca8efa..</text></g><g><title>0x7f165ca9e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="520" y="340" width="6" height="15" fill="rgb(206,26,34)"/><text x="523.00" y="350.50"></text></g><g><title>0x7f165ca732f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="520" y="356" width="6" height="15" fill="rgb(214,117,23)"/><text x="523.00" y="366.50"></text></g><g><title>0x7f165ca72530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="523" y="372" width="3" height="15" fill="rgb(247,216,50)"/><text x="526.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.25%)</title><rect x="523" y="388" width="3" height="15" fill="rgb(241,209,15)"/><text x="526.00" y="398.50"></text></g><g><title>0x7f165ca8efbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="526" y="324" width="3" height="15" fill="rgb(227,214,35)"/><text x="529.00" y="334.50"></text></g><g><title>0x7f165ca8f011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="529" y="324" width="3" height="15" fill="rgb(242,201,49)"/><text x="532.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.50%)</title><rect x="532" y="340" width="6" height="15" fill="rgb(251,226,27)"/><text x="535.00" y="350.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.25%)</title><rect x="538" y="372" width="3" height="15" fill="rgb(254,181,1)"/><text x="541.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.50%)</title><rect x="538" y="356" width="6" height="15" fill="rgb(251,32,12)"/><text x="541.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.25%)</title><rect x="541" y="372" width="3" height="15" fill="rgb(235,188,3)"/><text x="544.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.25%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(253,106,37)"/><text x="547.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.25%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(225,149,30)"/><text x="547.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.25%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(209,165,20)"/><text x="547.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.25%)</title><rect x="544" y="404" width="3" height="15" fill="rgb(219,224,21)"/><text x="547.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2059) (1 samples, 0.25%)</title><rect x="544" y="420" width="3" height="15" fill="rgb(219,115,13)"/><text x="547.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.25%)</title><rect x="547" y="388" width="3" height="15" fill="rgb(234,90,38)"/><text x="550.00" y="398.50"></text></g><g><title>_array_fill_strides (ctors.c:4080) (1 samples, 0.25%)</title><rect x="547" y="404" width="3" height="15" fill="rgb(216,30,49)"/><text x="550.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.25%)</title><rect x="550" y="420" width="3" height="15" fill="rgb(230,28,53)"/><text x="553.00" y="430.50"></text></g><g><title>0x7f165ca8f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.24%)</title><rect x="532" y="324" width="26" height="15" fill="rgb(248,139,51)"/><text x="535.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (7 samples, 1.74%)</title><rect x="538" y="340" width="20" height="15" fill="rgb(231,22,31)"/><text x="541.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (4 samples, 1.00%)</title><rect x="547" y="356" width="11" height="15" fill="rgb(237,15,0)"/><text x="550.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (4 samples, 1.00%)</title><rect x="547" y="372" width="11" height="15" fill="rgb(217,152,40)"/><text x="550.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (3 samples, 0.75%)</title><rect x="550" y="388" width="8" height="15" fill="rgb(224,209,29)"/><text x="553.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (3 samples, 0.75%)</title><rect x="550" y="404" width="8" height="15" fill="rgb(217,5,37)"/><text x="553.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.50%)</title><rect x="553" y="420" width="5" height="15" fill="rgb(236,162,41)"/><text x="556.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.50%)</title><rect x="553" y="436" width="5" height="15" fill="rgb(241,29,39)"/><text x="556.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.50%)</title><rect x="553" y="452" width="5" height="15" fill="rgb(220,149,19)"/><text x="556.00" y="462.50"></text></g><g><title>0x7f168304cd59 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="555" y="468" width="3" height="15" fill="rgb(247,88,41)"/><text x="558.00" y="478.50"></text></g><g><title>0x7f165ca8f13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="558" y="324" width="3" height="15" fill="rgb(222,181,6)"/><text x="561.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="558" y="340" width="3" height="15" fill="rgb(215,21,17)"/><text x="561.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="558" y="356" width="3" height="15" fill="rgb(223,115,11)"/><text x="561.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.25%)</title><rect x="558" y="372" width="3" height="15" fill="rgb(237,210,19)"/><text x="561.00" y="382.50"></text></g><g><title>0x7f165ca8f14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="561" y="324" width="3" height="15" fill="rgb(245,96,8)"/><text x="564.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="561" y="340" width="3" height="15" fill="rgb(232,123,16)"/><text x="564.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="561" y="356" width="3" height="15" fill="rgb(254,36,10)"/><text x="564.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.25%)</title><rect x="561" y="372" width="3" height="15" fill="rgb(244,216,0)"/><text x="564.00" y="382.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.25%)</title><rect x="564" y="372" width="3" height="15" fill="rgb(241,3,32)"/><text x="567.00" y="382.50"></text></g><g><title>array_reshape (methods.c:201) (2 samples, 0.50%)</title><rect x="564" y="340" width="6" height="15" fill="rgb(243,189,37)"/><text x="567.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.50%)</title><rect x="564" y="356" width="6" height="15" fill="rgb(213,193,23)"/><text x="567.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.25%)</title><rect x="567" y="372" width="3" height="15" fill="rgb(223,110,43)"/><text x="570.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.25%)</title><rect x="567" y="388" width="3" height="15" fill="rgb(207,35,52)"/><text x="570.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.25%)</title><rect x="567" y="404" width="3" height="15" fill="rgb(222,228,53)"/><text x="570.00" y="414.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (57 samples, 14.18%)</title><rect x="406" y="292" width="167" height="15" fill="rgb(226,209,30)"/><text x="409.00" y="302.50">predict (sklearn/tree..</text></g><g><title>0x7f165ca8fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (56 samples, 13.93%)</title><rect x="409" y="308" width="164" height="15" fill="rgb(244,186,27)"/><text x="412.00" y="318.50">0x7f165ca8fd2e (sklea..</text></g><g><title>0x7f165ca8f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.75%)</title><rect x="564" y="324" width="9" height="15" fill="rgb(236,194,23)"/><text x="567.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.25%)</title><rect x="570" y="340" width="3" height="15" fill="rgb(252,36,54)"/><text x="573.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.25%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(229,130,20)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.25%)</title><rect x="570" y="372" width="3" height="15" fill="rgb(215,82,53)"/><text x="573.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1126) (1 samples, 0.25%)</title><rect x="570" y="388" width="3" height="15" fill="rgb(244,76,33)"/><text x="573.00" y="398.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.25%)</title><rect x="573" y="292" width="3" height="15" fill="rgb(246,113,13)"/><text x="576.00" y="302.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (7 samples, 1.74%)</title><rect x="576" y="292" width="21" height="15" fill="rgb(235,97,1)"/><text x="579.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (5 samples, 1.24%)</title><rect x="582" y="308" width="15" height="15" fill="rgb(207,213,27)"/><text x="585.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.25%)</title><rect x="597" y="292" width="3" height="15" fill="rgb(250,68,24)"/><text x="600.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (88 samples, 21.89%)</title><rect x="347" y="276" width="258" height="15" fill="rgb(205,109,5)"/><text x="350.00" y="286.50">_accumulate_prediction (sklearn/en..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.50%)</title><rect x="600" y="292" width="5" height="15" fill="rgb(248,3,17)"/><text x="603.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.25%)</title><rect x="602" y="308" width="3" height="15" fill="rgb(229,29,38)"/><text x="605.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.25%)</title><rect x="602" y="324" width="3" height="15" fill="rgb(243,159,32)"/><text x="605.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.25%)</title><rect x="602" y="340" width="3" height="15" fill="rgb(244,180,6)"/><text x="605.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.25%)</title><rect x="602" y="356" width="3" height="15" fill="rgb(207,217,34)"/><text x="605.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.25%)</title><rect x="602" y="372" width="3" height="15" fill="rgb(231,126,39)"/><text x="605.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.50%)</title><rect x="605" y="276" width="6" height="15" fill="rgb(218,40,48)"/><text x="608.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="608" y="292" width="3" height="15" fill="rgb(233,158,48)"/><text x="611.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="608" y="308" width="3" height="15" fill="rgb(225,116,2)"/><text x="611.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (3 samples, 0.75%)</title><rect x="611" y="276" width="9" height="15" fill="rgb(240,155,42)"/><text x="614.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (2 samples, 0.50%)</title><rect x="623" y="308" width="6" height="15" fill="rgb(208,127,13)"/><text x="626.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (2 samples, 0.50%)</title><rect x="623" y="324" width="6" height="15" fill="rgb(228,226,2)"/><text x="626.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.25%)</title><rect x="629" y="324" width="3" height="15" fill="rgb(229,80,27)"/><text x="632.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.25%)</title><rect x="629" y="340" width="3" height="15" fill="rgb(209,188,16)"/><text x="632.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.25%)</title><rect x="629" y="356" width="3" height="15" fill="rgb(238,176,29)"/><text x="632.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.25%)</title><rect x="629" y="372" width="3" height="15" fill="rgb(231,43,1)"/><text x="632.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="629" y="388" width="3" height="15" fill="rgb(217,152,14)"/><text x="632.00" y="398.50"></text></g><g><title>0x7f16830037c2 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="629" y="404" width="3" height="15" fill="rgb(248,114,13)"/><text x="632.00" y="414.50"></text></g><g><title>0x7f1683003762 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="629" y="420" width="3" height="15" fill="rgb(209,20,1)"/><text x="632.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.25%)</title><rect x="632" y="340" width="3" height="15" fill="rgb(213,221,3)"/><text x="635.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.25%)</title><rect x="632" y="356" width="3" height="15" fill="rgb(241,83,16)"/><text x="635.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.75%)</title><rect x="629" y="308" width="9" height="15" fill="rgb(208,12,29)"/><text x="632.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.50%)</title><rect x="632" y="324" width="6" height="15" fill="rgb(234,22,18)"/><text x="635.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.25%)</title><rect x="635" y="340" width="3" height="15" fill="rgb(216,173,20)"/><text x="638.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.25%)</title><rect x="635" y="356" width="3" height="15" fill="rgb(213,174,1)"/><text x="638.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.25%)</title><rect x="635" y="372" width="3" height="15" fill="rgb(211,36,21)"/><text x="638.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.25%)</title><rect x="635" y="388" width="3" height="15" fill="rgb(220,87,47)"/><text x="638.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.25%)</title><rect x="635" y="404" width="3" height="15" fill="rgb(238,152,36)"/><text x="638.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (6 samples, 1.49%)</title><rect x="623" y="292" width="18" height="15" fill="rgb(233,3,3)"/><text x="626.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.25%)</title><rect x="638" y="308" width="3" height="15" fill="rgb(239,130,9)"/><text x="641.00" y="318.50"></text></g><g><title>_check_ufunc_fperr (extobj.c:286) (1 samples, 0.25%)</title><rect x="638" y="324" width="3" height="15" fill="rgb(228,46,38)"/><text x="641.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.25%)</title><rect x="638" y="340" width="3" height="15" fill="rgb(217,180,20)"/><text x="641.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (8 samples, 1.99%)</title><rect x="620" y="276" width="24" height="15" fill="rgb(235,168,41)"/><text x="623.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.25%)</title><rect x="641" y="292" width="3" height="15" fill="rgb(210,211,39)"/><text x="644.00" y="302.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:447) (1 samples, 0.25%)</title><rect x="641" y="308" width="3" height="15" fill="rgb(218,116,32)"/><text x="644.00" y="318.50"></text></g><g><title>_get_output_array_method (ufunc_object.c:234) (1 samples, 0.25%)</title><rect x="641" y="324" width="3" height="15" fill="rgb(242,195,5)"/><text x="644.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (103 samples, 25.62%)</title><rect x="347" y="260" width="302" height="15" fill="rgb(213,139,11)"/><text x="350.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (2 samples, 0.50%)</title><rect x="644" y="276" width="5" height="15" fill="rgb(225,109,46)"/><text x="647.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="646" y="292" width="3" height="15" fill="rgb(250,168,20)"/><text x="649.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="646" y="308" width="3" height="15" fill="rgb(250,29,12)"/><text x="649.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (113 samples, 28.11%)</title><rect x="324" y="212" width="331" height="15" fill="rgb(239,38,31)"/><text x="327.00" y="222.50">apply_async (joblib/_parallel_backends.py:20..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (113 samples, 28.11%)</title><rect x="324" y="228" width="331" height="15" fill="rgb(219,221,20)"/><text x="327.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (106 samples, 26.37%)</title><rect x="344" y="244" width="311" height="15" fill="rgb(205,171,38)"/><text x="347.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (2 samples, 0.50%)</title><rect x="649" y="260" width="6" height="15" fill="rgb(246,18,29)"/><text x="652.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (2 samples, 0.50%)</title><rect x="649" y="276" width="6" height="15" fill="rgb(244,115,1)"/><text x="652.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (2 samples, 0.50%)</title><rect x="655" y="228" width="6" height="15" fill="rgb(223,57,45)"/><text x="658.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (3 samples, 0.75%)</title><rect x="661" y="228" width="9" height="15" fill="rgb(207,39,33)"/><text x="664.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.25%)</title><rect x="667" y="244" width="3" height="15" fill="rgb(249,173,21)"/><text x="670.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (120 samples, 29.85%)</title><rect x="321" y="196" width="352" height="15" fill="rgb(242,74,40)"/><text x="324.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (6 samples, 1.49%)</title><rect x="655" y="212" width="18" height="15" fill="rgb(252,193,1)"/><text x="658.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.25%)</title><rect x="670" y="228" width="3" height="15" fill="rgb(206,95,21)"/><text x="673.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (124 samples, 30.85%)</title><rect x="318" y="180" width="364" height="15" fill="rgb(235,38,16)"/><text x="321.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (3 samples, 0.75%)</title><rect x="673" y="196" width="9" height="15" fill="rgb(206,193,32)"/><text x="676.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (193 samples, 48.01%)</title><rect x="118" y="164" width="567" height="15" fill="rgb(232,28,19)"/><text x="121.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.25%)</title><rect x="682" y="180" width="3" height="15" fill="rgb(209,12,21)"/><text x="685.00" y="190.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.25%)</title><rect x="682" y="196" width="3" height="15" fill="rgb(224,200,50)"/><text x="685.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (200 samples, 49.75%)</title><rect x="103" y="148" width="587" height="15" fill="rgb(249,58,25)"/><text x="106.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.50%)</title><rect x="685" y="164" width="5" height="15" fill="rgb(250,13,0)"/><text x="688.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (2 samples, 0.50%)</title><rect x="685" y="180" width="5" height="15" fill="rgb(232,183,20)"/><text x="688.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:54) (201 samples, 50.00%)</title><rect x="103" y="52" width="590" height="15" fill="rgb(207,78,27)"/><text x="106.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:53) (201 samples, 50.00%)</title><rect x="103" y="68" width="590" height="15" fill="rgb(236,51,13)"/><text x="106.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (201 samples, 50.00%)</title><rect x="103" y="84" width="590" height="15" fill="rgb(238,191,32)"/><text x="106.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (201 samples, 50.00%)</title><rect x="103" y="100" width="590" height="15" fill="rgb(227,92,49)"/><text x="106.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (201 samples, 50.00%)</title><rect x="103" y="116" width="590" height="15" fill="rgb(242,138,25)"/><text x="106.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (201 samples, 50.00%)</title><rect x="103" y="132" width="590" height="15" fill="rgb(225,14,42)"/><text x="106.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.25%)</title><rect x="690" y="148" width="3" height="15" fill="rgb(229,222,13)"/><text x="693.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.25%)</title><rect x="690" y="164" width="3" height="15" fill="rgb(225,119,42)"/><text x="693.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.25%)</title><rect x="690" y="180" width="3" height="15" fill="rgb(238,48,39)"/><text x="693.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.25%)</title><rect x="690" y="196" width="3" height="15" fill="rgb(231,14,48)"/><text x="693.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.25%)</title><rect x="690" y="212" width="3" height="15" fill="rgb(238,9,42)"/><text x="693.00" y="222.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.25%)</title><rect x="690" y="228" width="3" height="15" fill="rgb(241,201,1)"/><text x="693.00" y="238.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:36) (1 samples, 0.25%)</title><rect x="693" y="84" width="3" height="15" fill="rgb(208,31,8)"/><text x="696.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="693" y="100" width="3" height="15" fill="rgb(235,126,5)"/><text x="696.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.25%)</title><rect x="693" y="116" width="3" height="15" fill="rgb(235,19,35)"/><text x="696.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="693" y="132" width="3" height="15" fill="rgb(246,56,24)"/><text x="696.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="693" y="148" width="3" height="15" fill="rgb(251,210,37)"/><text x="696.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.25%)</title><rect x="693" y="164" width="3" height="15" fill="rgb(252,60,13)"/><text x="696.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.25%)</title><rect x="693" y="180" width="3" height="15" fill="rgb(243,79,24)"/><text x="696.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.25%)</title><rect x="693" y="196" width="3" height="15" fill="rgb(243,190,46)"/><text x="696.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="693" y="212" width="3" height="15" fill="rgb(229,83,51)"/><text x="696.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="693" y="228" width="3" height="15" fill="rgb(240,2,16)"/><text x="696.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="693" y="244" width="3" height="15" fill="rgb(236,113,4)"/><text x="696.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="693" y="260" width="3" height="15" fill="rgb(246,202,10)"/><text x="696.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="693" y="276" width="3" height="15" fill="rgb(223,118,17)"/><text x="696.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.25%)</title><rect x="693" y="292" width="3" height="15" fill="rgb(229,100,10)"/><text x="696.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="693" y="308" width="3" height="15" fill="rgb(228,100,48)"/><text x="696.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="693" y="324" width="3" height="15" fill="rgb(236,71,47)"/><text x="696.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="693" y="340" width="3" height="15" fill="rgb(206,79,19)"/><text x="696.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="693" y="356" width="3" height="15" fill="rgb(247,120,50)"/><text x="696.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="693" y="372" width="3" height="15" fill="rgb(246,18,14)"/><text x="696.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.25%)</title><rect x="693" y="388" width="3" height="15" fill="rgb(231,155,26)"/><text x="696.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.25%)</title><rect x="693" y="404" width="3" height="15" fill="rgb(218,163,20)"/><text x="696.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="693" y="420" width="3" height="15" fill="rgb(245,57,31)"/><text x="696.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="693" y="436" width="3" height="15" fill="rgb(254,205,38)"/><text x="696.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="693" y="452" width="3" height="15" fill="rgb(237,125,1)"/><text x="696.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:149) (1 samples, 0.25%)</title><rect x="693" y="468" width="3" height="15" fill="rgb(230,47,39)"/><text x="696.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.25%)</title><rect x="693" y="484" width="3" height="15" fill="rgb(215,118,14)"/><text x="696.00" y="494.50"></text></g><g><title>change_style (mlprodict/tools/code_helper.py:17) (1 samples, 0.25%)</title><rect x="693" y="500" width="3" height="15" fill="rgb(224,200,40)"/><text x="696.00" y="510.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.25%)</title><rect x="693" y="516" width="3" height="15" fill="rgb(216,199,33)"/><text x="696.00" y="526.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="693" y="532" width="3" height="15" fill="rgb(254,12,1)"/><text x="696.00" y="542.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.25%)</title><rect x="693" y="548" width="3" height="15" fill="rgb(232,43,6)"/><text x="696.00" y="558.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.25%)</title><rect x="693" y="564" width="3" height="15" fill="rgb(208,80,14)"/><text x="696.00" y="574.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.25%)</title><rect x="693" y="580" width="3" height="15" fill="rgb(221,51,12)"/><text x="696.00" y="590.50"></text></g><g><title>_parse (sre_parse.py:477) (1 samples, 0.25%)</title><rect x="693" y="596" width="3" height="15" fill="rgb(211,8,4)"/><text x="696.00" y="606.50"></text></g><g><title>0x7f1643b2454f (?) (1 samples, 0.25%)</title><rect x="696" y="244" width="3" height="15" fill="rgb(239,142,9)"/><text x="699.00" y="254.50"></text></g><g><title>0x7f1643b2a65e (?) (1 samples, 0.25%)</title><rect x="696" y="260" width="3" height="15" fill="rgb(254,48,17)"/><text x="699.00" y="270.50"></text></g><g><title>0x7f1643b2a50f (?) (1 samples, 0.25%)</title><rect x="696" y="276" width="3" height="15" fill="rgb(252,74,0)"/><text x="699.00" y="286.50"></text></g><g><title>0x7f1643b30d6c (?) (1 samples, 0.25%)</title><rect x="696" y="292" width="3" height="15" fill="rgb(246,201,35)"/><text x="699.00" y="302.50"></text></g><g><title>0x7f164d007cff (?) (1 samples, 0.25%)</title><rect x="696" y="308" width="3" height="15" fill="rgb(206,65,40)"/><text x="699.00" y="318.50"></text></g><g><title>0x7f1643b1527c (?) (1 samples, 0.25%)</title><rect x="696" y="324" width="3" height="15" fill="rgb(238,159,18)"/><text x="699.00" y="334.50"></text></g><g><title>0x7f1643b14e33 (?) (1 samples, 0.25%)</title><rect x="696" y="340" width="3" height="15" fill="rgb(211,203,15)"/><text x="699.00" y="350.50"></text></g><g><title>0x7f164d010daa (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="699" y="484" width="3" height="15" fill="rgb(211,87,44)"/><text x="702.00" y="494.50"></text></g><g><title>0x7f164d012cfb (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="699" y="500" width="3" height="15" fill="rgb(231,147,40)"/><text x="702.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (6 samples, 1.49%)</title><rect x="702" y="516" width="18" height="15" fill="rgb(228,66,52)"/><text x="705.00" y="526.50"></text></g><g><title>std::isnan (cmath:642) (1 samples, 0.25%)</title><rect x="717" y="532" width="3" height="15" fill="rgb(230,214,17)"/><text x="720.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:552) (1 samples, 0.25%)</title><rect x="720" y="516" width="3" height="15" fill="rgb(210,21,52)"/><text x="723.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (1 samples, 0.25%)</title><rect x="723" y="548" width="3" height="15" fill="rgb(236,116,1)"/><text x="726.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (1 samples, 0.25%)</title><rect x="723" y="564" width="3" height="15" fill="rgb(252,23,42)"/><text x="726.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (1 samples, 0.25%)</title><rect x="723" y="580" width="3" height="15" fill="rgb(237,33,46)"/><text x="726.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.25%)</title><rect x="723" y="596" width="3" height="15" fill="rgb(205,183,6)"/><text x="726.00" y="606.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (4 samples, 1.00%)</title><rect x="726" y="580" width="11" height="15" fill="rgb(224,104,25)"/><text x="729.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (2 samples, 0.50%)</title><rect x="737" y="580" width="6" height="15" fill="rgb(210,74,39)"/><text x="740.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (8 samples, 1.99%)</title><rect x="723" y="516" width="23" height="15" fill="rgb(240,188,41)"/><text x="726.00" y="526.50">R..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (8 samples, 1.99%)</title><rect x="723" y="532" width="23" height="15" fill="rgb(238,14,18)"/><text x="726.00" y="542.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (7 samples, 1.74%)</title><rect x="726" y="548" width="20" height="15" fill="rgb(219,160,8)"/><text x="729.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (7 samples, 1.74%)</title><rect x="726" y="564" width="20" height="15" fill="rgb(207,165,28)"/><text x="729.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (1 samples, 0.25%)</title><rect x="743" y="580" width="3" height="15" fill="rgb(240,104,40)"/><text x="746.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:556) (1 samples, 0.25%)</title><rect x="746" y="516" width="3" height="15" fill="rgb(236,124,43)"/><text x="749.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (1 samples, 0.25%)</title><rect x="749" y="516" width="3" height="15" fill="rgb(214,184,22)"/><text x="752.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (2 samples, 0.50%)</title><rect x="752" y="516" width="6" height="15" fill="rgb(221,186,14)"/><text x="755.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (20 samples, 4.98%)</title><rect x="702" y="484" width="59" height="15" fill="rgb(237,31,0)"/><text x="705.00" y="494.50">Runtim..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (20 samples, 4.98%)</title><rect x="702" y="500" width="59" height="15" fill="rgb(215,179,33)"/><text x="705.00" y="510.50">std::v..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.25%)</title><rect x="758" y="516" width="3" height="15" fill="rgb(209,196,3)"/><text x="761.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:61) (25 samples, 6.22%)</title><rect x="693" y="52" width="74" height="15" fill="rgb(221,19,22)"/><text x="696.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:60) (25 samples, 6.22%)</title><rect x="693" y="68" width="74" height="15" fill="rgb(237,115,5)"/><text x="696.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (24 samples, 5.97%)</title><rect x="696" y="84" width="71" height="15" fill="rgb(244,24,13)"/><text x="699.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (24 samples, 5.97%)</title><rect x="696" y="100" width="71" height="15" fill="rgb(219,41,24)"/><text x="699.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (24 samples, 5.97%)</title><rect x="696" y="116" width="71" height="15" fill="rgb(223,214,39)"/><text x="699.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (24 samples, 5.97%)</title><rect x="696" y="132" width="71" height="15" fill="rgb(212,118,2)"/><text x="699.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (24 samples, 5.97%)</title><rect x="696" y="148" width="71" height="15" fill="rgb(214,158,52)"/><text x="699.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (24 samples, 5.97%)</title><rect x="696" y="164" width="71" height="15" fill="rgb(246,2,14)"/><text x="699.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (24 samples, 5.97%)</title><rect x="696" y="180" width="71" height="15" fill="rgb(222,214,41)"/><text x="699.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (24 samples, 5.97%)</title><rect x="696" y="196" width="71" height="15" fill="rgb(240,4,28)"/><text x="699.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (24 samples, 5.97%)</title><rect x="696" y="212" width="71" height="15" fill="rgb(231,176,19)"/><text x="699.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (24 samples, 5.97%)</title><rect x="696" y="228" width="71" height="15" fill="rgb(245,101,44)"/><text x="699.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (23 samples, 5.72%)</title><rect x="699" y="244" width="68" height="15" fill="rgb(235,153,23)"/><text x="702.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (23 samples, 5.72%)</title><rect x="699" y="260" width="68" height="15" fill="rgb(223,214,44)"/><text x="702.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (23 samples, 5.72%)</title><rect x="699" y="276" width="68" height="15" fill="rgb(247,216,3)"/><text x="702.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (23 samples, 5.72%)</title><rect x="699" y="292" width="68" height="15" fill="rgb(244,151,18)"/><text x="702.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (23 samples, 5.72%)</title><rect x="699" y="308" width="68" height="15" fill="rgb(248,37,16)"/><text x="702.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (23 samples, 5.72%)</title><rect x="699" y="324" width="68" height="15" fill="rgb(230,15,49)"/><text x="702.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (23 samples, 5.72%)</title><rect x="699" y="340" width="68" height="15" fill="rgb(242,35,27)"/><text x="702.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (23 samples, 5.72%)</title><rect x="699" y="356" width="68" height="15" fill="rgb(249,132,27)"/><text x="702.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (23 samples, 5.72%)</title><rect x="699" y="372" width="68" height="15" fill="rgb(219,196,49)"/><text x="702.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (23 samples, 5.72%)</title><rect x="699" y="388" width="68" height="15" fill="rgb(210,207,7)"/><text x="702.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (23 samples, 5.72%)</title><rect x="699" y="404" width="68" height="15" fill="rgb(223,82,2)"/><text x="702.00" y="414.50">pybind1..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (23 samples, 5.72%)</title><rect x="699" y="420" width="68" height="15" fill="rgb(225,228,27)"/><text x="702.00" y="430.50">Runtime..</text></g><g><title>pybind11::array::size (numpy.h:619) (23 samples, 5.72%)</title><rect x="699" y="436" width="68" height="15" fill="rgb(208,85,29)"/><text x="702.00" y="446.50">pybind1..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (23 samples, 5.72%)</title><rect x="699" y="452" width="68" height="15" fill="rgb(245,71,34)"/><text x="702.00" y="462.50">std::ac..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (23 samples, 5.72%)</title><rect x="699" y="468" width="68" height="15" fill="rgb(228,48,15)"/><text x="702.00" y="478.50">GOMP_pa..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:372) (2 samples, 0.50%)</title><rect x="761" y="484" width="6" height="15" fill="rgb(239,91,43)"/><text x="764.00" y="494.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.25%)</title><rect x="767" y="116" width="3" height="15" fill="rgb(247,66,39)"/><text x="770.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.25%)</title><rect x="767" y="132" width="3" height="15" fill="rgb(245,214,41)"/><text x="770.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.25%)</title><rect x="767" y="148" width="3" height="15" fill="rgb(225,130,42)"/><text x="770.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.25%)</title><rect x="767" y="164" width="3" height="15" fill="rgb(217,13,40)"/><text x="770.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.25%)</title><rect x="767" y="180" width="3" height="15" fill="rgb(221,79,31)"/><text x="770.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.25%)</title><rect x="767" y="196" width="3" height="15" fill="rgb(245,64,10)"/><text x="770.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.25%)</title><rect x="767" y="212" width="3" height="15" fill="rgb(212,78,40)"/><text x="770.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.25%)</title><rect x="767" y="228" width="3" height="15" fill="rgb(243,179,5)"/><text x="770.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="767" y="244" width="3" height="15" fill="rgb(249,132,54)"/><text x="770.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.25%)</title><rect x="767" y="260" width="3" height="15" fill="rgb(207,78,6)"/><text x="770.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.25%)</title><rect x="767" y="276" width="3" height="15" fill="rgb(251,124,3)"/><text x="770.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.25%)</title><rect x="767" y="292" width="3" height="15" fill="rgb(230,116,52)"/><text x="770.00" y="302.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.25%)</title><rect x="770" y="164" width="3" height="15" fill="rgb(217,72,18)"/><text x="773.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="770" y="180" width="3" height="15" fill="rgb(239,87,42)"/><text x="773.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="770" y="196" width="3" height="15" fill="rgb(245,161,42)"/><text x="773.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="770" y="212" width="3" height="15" fill="rgb(244,57,29)"/><text x="773.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="770" y="228" width="3" height="15" fill="rgb(233,53,46)"/><text x="773.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="770" y="244" width="3" height="15" fill="rgb(251,187,5)"/><text x="773.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.25%)</title><rect x="770" y="260" width="3" height="15" fill="rgb(214,93,18)"/><text x="773.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="770" y="276" width="3" height="15" fill="rgb(234,116,21)"/><text x="773.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="770" y="292" width="3" height="15" fill="rgb(212,9,11)"/><text x="773.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="770" y="308" width="3" height="15" fill="rgb(229,77,22)"/><text x="773.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="770" y="324" width="3" height="15" fill="rgb(212,76,3)"/><text x="773.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="770" y="340" width="3" height="15" fill="rgb(214,25,27)"/><text x="773.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.25%)</title><rect x="770" y="356" width="3" height="15" fill="rgb(223,0,2)"/><text x="773.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="770" y="372" width="3" height="15" fill="rgb(213,138,47)"/><text x="773.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="770" y="388" width="3" height="15" fill="rgb(209,213,15)"/><text x="773.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="770" y="404" width="3" height="15" fill="rgb(234,220,44)"/><text x="773.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="770" y="420" width="3" height="15" fill="rgb(218,44,4)"/><text x="773.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="770" y="436" width="3" height="15" fill="rgb(224,113,18)"/><text x="773.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.25%)</title><rect x="770" y="452" width="3" height="15" fill="rgb(205,17,6)"/><text x="773.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="770" y="468" width="3" height="15" fill="rgb(229,221,4)"/><text x="773.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="770" y="484" width="3" height="15" fill="rgb(235,208,1)"/><text x="773.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.25%)</title><rect x="770" y="500" width="3" height="15" fill="rgb(234,85,8)"/><text x="773.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.25%)</title><rect x="770" y="516" width="3" height="15" fill="rgb(238,187,29)"/><text x="773.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.25%)</title><rect x="770" y="532" width="3" height="15" fill="rgb(225,78,15)"/><text x="773.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="770" y="548" width="3" height="15" fill="rgb(244,47,15)"/><text x="773.00" y="558.50"></text></g><g><title>0x7f1643091af0 (?) (1 samples, 0.25%)</title><rect x="770" y="564" width="3" height="15" fill="rgb(225,2,43)"/><text x="773.00" y="574.50"></text></g><g><title>0x7f16430a41d2 (?) (1 samples, 0.25%)</title><rect x="770" y="580" width="3" height="15" fill="rgb(236,79,25)"/><text x="773.00" y="590.50"></text></g><g><title>0x7f16430a37b8 (?) (1 samples, 0.25%)</title><rect x="770" y="596" width="3" height="15" fill="rgb(249,75,46)"/><text x="773.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="770" y="612" width="3" height="15" fill="rgb(237,23,21)"/><text x="773.00" y="622.50"></text></g><g><title>0x7f16430a195d (?) (1 samples, 0.25%)</title><rect x="770" y="628" width="3" height="15" fill="rgb(236,34,2)"/><text x="773.00" y="638.50"></text></g><g><title>0x7f164309fea7 (?) (1 samples, 0.25%)</title><rect x="770" y="644" width="3" height="15" fill="rgb(219,110,28)"/><text x="773.00" y="654.50"></text></g><g><title>0x7f1643660f10 (?) (1 samples, 0.25%)</title><rect x="770" y="660" width="3" height="15" fill="rgb(242,212,35)"/><text x="773.00" y="670.50"></text></g><g><title>0x7f16430680b8 (?) (1 samples, 0.25%)</title><rect x="770" y="676" width="3" height="15" fill="rgb(238,197,49)"/><text x="773.00" y="686.50"></text></g><g><title>0x7f168304bd07 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="770" y="692" width="3" height="15" fill="rgb(213,55,50)"/><text x="773.00" y="702.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:36) (3 samples, 0.75%)</title><rect x="767" y="84" width="9" height="15" fill="rgb(219,51,44)"/><text x="770.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 0.75%)</title><rect x="767" y="100" width="9" height="15" fill="rgb(241,120,30)"/><text x="770.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.50%)</title><rect x="770" y="116" width="6" height="15" fill="rgb(227,226,48)"/><text x="773.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.50%)</title><rect x="770" y="132" width="6" height="15" fill="rgb(208,199,18)"/><text x="773.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.50%)</title><rect x="770" y="148" width="6" height="15" fill="rgb(216,177,41)"/><text x="773.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.25%)</title><rect x="773" y="164" width="3" height="15" fill="rgb(224,21,31)"/><text x="776.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.25%)</title><rect x="773" y="180" width="3" height="15" fill="rgb(239,124,29)"/><text x="776.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.25%)</title><rect x="773" y="196" width="3" height="15" fill="rgb(216,33,36)"/><text x="776.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.25%)</title><rect x="773" y="212" width="3" height="15" fill="rgb(233,129,33)"/><text x="776.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="228" width="3" height="15" fill="rgb(225,39,6)"/><text x="776.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}, void, onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;, pybind11::name, pybind11::is_method, pybind11::sibling, char [40]&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;)#7}&amp;&amp;, void (*)(onnxruntime::InferenceSession*, pybind11::bytes const&amp;, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;&amp;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [40])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.539] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="244" width="3" height="15" fill="rgb(254,85,22)"/><text x="776.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="260" width="3" height="15" fill="rgb(246,189,29)"/><text x="776.00" y="270.50"></text></g><g><title>onnxruntime::KernelRegistryManager::RegisterKernels (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="276" width="3" height="15" fill="rgb(243,74,4)"/><text x="776.00" y="286.50"></text></g><g><title>onnxruntime::CPUExecutionProvider::GetKernelRegistry (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="292" width="3" height="15" fill="rgb(208,194,34)"/><text x="776.00" y="302.50"></text></g><g><title>onnxruntime::GetCpuKernelRegistry (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="308" width="3" height="15" fill="rgb(237,60,17)"/><text x="776.00" y="318.50"></text></g><g><title>onnxruntime::RegisterOnnxOperatorKernels (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="324" width="3" height="15" fill="rgb(227,14,34)"/><text x="776.00" y="334.50"></text></g><g><title>onnxruntime::KernelRegistry::Register (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="340" width="3" height="15" fill="rgb(222,154,42)"/><text x="776.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnxruntime::KernelCreateInfo&gt; &gt; &gt;::_M_emplace_equal&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, onnxruntime::KernelCreateInfo&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="773" y="356" width="3" height="15" fill="rgb(240,88,10)"/><text x="776.00" y="366.50"></text></g><g><title>0x7f168304b998 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="779" y="356" width="2" height="15" fill="rgb(244,10,37)"/><text x="782.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (138 samples, 34.33%)</title><rect x="781" y="356" width="406" height="15" fill="rgb(222,25,29)"/><text x="784.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessT..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="372" width="3" height="15" fill="rgb(246,135,5)"/><text x="1187.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="388" width="3" height="15" fill="rgb(243,39,23)"/><text x="1187.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1184" y="404" width="3" height="15" fill="rgb(210,136,16)"/><text x="1187.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1184" y="420" width="3" height="15" fill="rgb(211,97,25)"/><text x="1187.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1184" y="436" width="3" height="15" fill="rgb(236,51,14)"/><text x="1187.00" y="446.50"></text></g><g><title>all (402 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(224,72,24)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:68) (144 samples, 35.82%)</title><rect x="767" y="52" width="423" height="15" fill="rgb(205,129,53)"/><text x="770.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:67) (144 samples, 35.82%)</title><rect x="767" y="68" width="423" height="15" fill="rgb(223,201,5)"/><text x="770.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_reg_10..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (141 samples, 35.07%)</title><rect x="776" y="84" width="414" height="15" fill="rgb(232,61,32)"/><text x="779.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (141 samples, 35.07%)</title><rect x="776" y="100" width="414" height="15" fill="rgb(252,169,0)"/><text x="779.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (141 samples, 35.07%)</title><rect x="776" y="116" width="414" height="15" fill="rgb(222,217,40)"/><text x="779.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (141 samples, 35.07%)</title><rect x="776" y="132" width="414" height="15" fill="rgb(218,165,4)"/><text x="779.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (141 samples, 35.07%)</title><rect x="776" y="148" width="414" height="15" fill="rgb(241,73,0)"/><text x="779.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (141 samples, 35.07%)</title><rect x="776" y="164" width="414" height="15" fill="rgb(237,105,52)"/><text x="779.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:6..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (141 samples, 35.07%)</title><rect x="776" y="180" width="414" height="15" fill="rgb(241,217,3)"/><text x="779.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (141 samples, 35.07%)</title><rect x="776" y="196" width="414" height="15" fill="rgb(232,212,33)"/><text x="779.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="212" width="414" height="15" fill="rgb(213,129,32)"/><text x="779.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onn..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="228" width="414" height="15" fill="rgb(232,14,10)"/><text x="779.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyt..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="244" width="414" height="15" fill="rgb(235,116,53)"/><text x="779.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="260" width="414" height="15" fill="rgb(236,134,18)"/><text x="779.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="276" width="414" height="15" fill="rgb(232,15,39)"/><text x="779.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="292" width="414" height="15" fill="rgb(231,47,46)"/><text x="779.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="308" width="414" height="15" fill="rgb(250,119,50)"/><text x="779.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="324" width="414" height="15" fill="rgb(246,13,11)"/><text x="779.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/ca..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 35.07%)</title><rect x="776" y="340" width="414" height="15" fill="rgb(215,144,43)"/><text x="779.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(206,48,24)"/><text x="1190.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(252,210,43)"/><text x="1190.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(217,142,11)"/><text x="1190.00" y="398.50"></text></g></g></svg>