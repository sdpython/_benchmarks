<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1542" onload="init(evt)" viewBox="0 0 1200 1542" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1542" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1525.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1525.00"> </text><g id="frames"><g><title>0x7f2744ee9357 (sklearn/utils/sparsefuncs_fast.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(250,166,18)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.27%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(236,189,51)"/><text x="16.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(242,157,48)"/><text x="16.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(237,209,47)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(235,205,19)"/><text x="16.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(225,113,6)"/><text x="16.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(235,122,8)"/><text x="16.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(216,75,38)"/><text x="16.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(247,161,52)"/><text x="16.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.27%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(234,78,34)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(210,77,40)"/><text x="16.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(236,100,25)"/><text x="16.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(205,223,50)"/><text x="16.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(211,40,28)"/><text x="16.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(219,172,51)"/><text x="16.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.27%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(227,97,44)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(250,73,52)"/><text x="16.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(237,130,44)"/><text x="16.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(219,196,42)"/><text x="16.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="13" y="660" width="3" height="15" fill="rgb(234,40,28)"/><text x="16.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="13" y="676" width="3" height="15" fill="rgb(219,88,31)"/><text x="16.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:50) (1 samples, 0.27%)</title><rect x="13" y="692" width="3" height="15" fill="rgb(229,49,15)"/><text x="16.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="13" y="708" width="3" height="15" fill="rgb(227,203,53)"/><text x="16.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.27%)</title><rect x="13" y="724" width="3" height="15" fill="rgb(220,66,44)"/><text x="16.00" y="734.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.27%)</title><rect x="13" y="740" width="3" height="15" fill="rgb(230,34,6)"/><text x="16.00" y="750.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.27%)</title><rect x="13" y="756" width="3" height="15" fill="rgb(224,161,19)"/><text x="16.00" y="766.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.27%)</title><rect x="13" y="772" width="3" height="15" fill="rgb(242,109,30)"/><text x="16.00" y="782.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.27%)</title><rect x="13" y="788" width="3" height="15" fill="rgb(221,175,3)"/><text x="16.00" y="798.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.53%)</title><rect x="13" y="244" width="6" height="15" fill="rgb(231,119,20)"/><text x="16.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.53%)</title><rect x="13" y="260" width="6" height="15" fill="rgb(238,5,40)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="13" y="276" width="6" height="15" fill="rgb(253,80,39)"/><text x="16.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="13" y="292" width="6" height="15" fill="rgb(246,23,9)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="13" y="308" width="6" height="15" fill="rgb(222,126,16)"/><text x="16.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="13" y="324" width="6" height="15" fill="rgb(237,223,1)"/><text x="16.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="13" y="340" width="6" height="15" fill="rgb(224,228,37)"/><text x="16.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="13" y="356" width="6" height="15" fill="rgb(236,102,34)"/><text x="16.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.27%)</title><rect x="16" y="372" width="3" height="15" fill="rgb(212,82,46)"/><text x="19.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="16" y="388" width="3" height="15" fill="rgb(250,51,17)"/><text x="19.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="16" y="404" width="3" height="15" fill="rgb(215,126,42)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="16" y="420" width="3" height="15" fill="rgb(254,185,21)"/><text x="19.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="16" y="436" width="3" height="15" fill="rgb(251,19,12)"/><text x="19.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="16" y="452" width="3" height="15" fill="rgb(206,220,42)"/><text x="19.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="16" y="468" width="3" height="15" fill="rgb(232,189,27)"/><text x="19.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(242,19,1)"/><text x="19.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.27%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(250,147,42)"/><text x="19.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(234,131,45)"/><text x="19.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(213,94,15)"/><text x="19.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(205,108,28)"/><text x="19.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.27%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(244,19,25)"/><text x="19.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.27%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(225,103,2)"/><text x="19.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.27%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(252,159,35)"/><text x="19.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.27%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(225,143,44)"/><text x="19.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.27%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(239,89,8)"/><text x="19.00" y="638.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.27%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(228,35,31)"/><text x="19.00" y="654.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:1) (3 samples, 0.80%)</title><rect x="13" y="148" width="9" height="15" fill="rgb(237,95,4)"/><text x="16.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="13" y="164" width="9" height="15" fill="rgb(226,22,47)"/><text x="16.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="13" y="180" width="9" height="15" fill="rgb(238,194,6)"/><text x="16.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="13" y="196" width="9" height="15" fill="rgb(240,15,42)"/><text x="16.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="13" y="212" width="9" height="15" fill="rgb(251,80,4)"/><text x="16.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="13" y="228" width="9" height="15" fill="rgb(228,174,9)"/><text x="16.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:178) (1 samples, 0.27%)</title><rect x="19" y="244" width="3" height="15" fill="rgb(213,94,51)"/><text x="22.00" y="254.50"></text></g><g><title>filterwarnings (warnings.py:155) (1 samples, 0.27%)</title><rect x="19" y="260" width="3" height="15" fill="rgb(206,120,54)"/><text x="22.00" y="270.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.27%)</title><rect x="19" y="276" width="3" height="15" fill="rgb(225,117,52)"/><text x="22.00" y="286.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.27%)</title><rect x="19" y="292" width="3" height="15" fill="rgb(253,166,17)"/><text x="22.00" y="302.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.27%)</title><rect x="19" y="308" width="3" height="15" fill="rgb(241,179,32)"/><text x="22.00" y="318.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.27%)</title><rect x="19" y="324" width="3" height="15" fill="rgb(222,94,30)"/><text x="22.00" y="334.50"></text></g><g><title>_compile (sre_compile.py:95) (1 samples, 0.27%)</title><rect x="19" y="340" width="3" height="15" fill="rgb(238,161,36)"/><text x="22.00" y="350.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2049) (1 samples, 0.27%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(245,21,32)"/><text x="28.00" y="926.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py:2108) (1 samples, 0.27%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(209,10,46)"/><text x="28.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.27%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(212,4,23)"/><text x="28.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(222,36,12)"/><text x="28.00" y="974.50"></text></g><g><title>0x7f276a708237 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(244,84,15)"/><text x="28.00" y="990.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.27%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(234,209,48)"/><text x="31.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.27%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(209,71,5)"/><text x="31.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.27%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(241,214,1)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.27%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(209,68,33)"/><text x="31.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.27%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(238,27,8)"/><text x="31.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.27%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(252,10,49)"/><text x="31.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:377) (1 samples, 0.27%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(210,74,28)"/><text x="31.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2064) (1 samples, 0.27%)</title><rect x="31" y="916" width="4" height="15" fill="rgb(216,134,17)"/><text x="34.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.33%)</title><rect x="22" y="820" width="16" height="15" fill="rgb(249,114,30)"/><text x="25.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.33%)</title><rect x="22" y="836" width="16" height="15" fill="rgb(228,137,19)"/><text x="25.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (5 samples, 1.33%)</title><rect x="22" y="852" width="16" height="15" fill="rgb(209,139,50)"/><text x="25.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (5 samples, 1.33%)</title><rect x="22" y="868" width="16" height="15" fill="rgb(240,114,49)"/><text x="25.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (5 samples, 1.33%)</title><rect x="22" y="884" width="16" height="15" fill="rgb(215,95,2)"/><text x="25.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (5 samples, 1.33%)</title><rect x="22" y="900" width="16" height="15" fill="rgb(212,200,27)"/><text x="25.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.27%)</title><rect x="35" y="916" width="3" height="15" fill="rgb(249,120,47)"/><text x="38.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.27%)</title><rect x="35" y="932" width="3" height="15" fill="rgb(220,68,15)"/><text x="38.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.27%)</title><rect x="35" y="948" width="3" height="15" fill="rgb(208,188,51)"/><text x="38.00" y="958.50"></text></g><g><title>closedir (libc-2.29.so) (1 samples, 0.27%)</title><rect x="35" y="964" width="3" height="15" fill="rgb(240,65,8)"/><text x="38.00" y="974.50"></text></g><g><title>0x7f276a6c8d35 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="35" y="980" width="3" height="15" fill="rgb(221,118,49)"/><text x="38.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.60%)</title><rect x="22" y="388" width="19" height="15" fill="rgb(210,73,50)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.60%)</title><rect x="22" y="404" width="19" height="15" fill="rgb(232,23,20)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.60%)</title><rect x="22" y="420" width="19" height="15" fill="rgb(216,110,0)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.60%)</title><rect x="22" y="436" width="19" height="15" fill="rgb(239,196,36)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.60%)</title><rect x="22" y="452" width="19" height="15" fill="rgb(253,201,33)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.60%)</title><rect x="22" y="468" width="19" height="15" fill="rgb(237,72,4)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.60%)</title><rect x="22" y="484" width="19" height="15" fill="rgb(214,27,26)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.60%)</title><rect x="22" y="500" width="19" height="15" fill="rgb(217,147,7)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.60%)</title><rect x="22" y="516" width="19" height="15" fill="rgb(229,93,25)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.60%)</title><rect x="22" y="532" width="19" height="15" fill="rgb(246,156,16)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.60%)</title><rect x="22" y="548" width="19" height="15" fill="rgb(225,29,6)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.60%)</title><rect x="22" y="564" width="19" height="15" fill="rgb(235,70,26)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.60%)</title><rect x="22" y="580" width="19" height="15" fill="rgb(245,179,49)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.60%)</title><rect x="22" y="596" width="19" height="15" fill="rgb(227,93,43)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.60%)</title><rect x="22" y="612" width="19" height="15" fill="rgb(254,122,38)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.60%)</title><rect x="22" y="628" width="19" height="15" fill="rgb(214,110,9)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.60%)</title><rect x="22" y="644" width="19" height="15" fill="rgb(205,172,41)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.60%)</title><rect x="22" y="660" width="19" height="15" fill="rgb(253,162,46)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.60%)</title><rect x="22" y="676" width="19" height="15" fill="rgb(238,156,51)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.60%)</title><rect x="22" y="692" width="19" height="15" fill="rgb(205,10,38)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.60%)</title><rect x="22" y="708" width="19" height="15" fill="rgb(248,20,0)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.60%)</title><rect x="22" y="724" width="19" height="15" fill="rgb(254,126,10)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.60%)</title><rect x="22" y="740" width="19" height="15" fill="rgb(237,14,46)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.60%)</title><rect x="22" y="756" width="19" height="15" fill="rgb(217,215,29)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.60%)</title><rect x="22" y="772" width="19" height="15" fill="rgb(251,166,43)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.60%)</title><rect x="22" y="788" width="19" height="15" fill="rgb(206,19,19)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.60%)</title><rect x="22" y="804" width="19" height="15" fill="rgb(246,33,0)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.27%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(212,5,16)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="38" y="836" width="3" height="15" fill="rgb(241,32,43)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="38" y="852" width="3" height="15" fill="rgb(217,32,12)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="38" y="868" width="3" height="15" fill="rgb(245,32,44)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="38" y="884" width="3" height="15" fill="rgb(252,221,24)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="38" y="900" width="3" height="15" fill="rgb(206,187,46)"/><text x="41.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.27%)</title><rect x="38" y="916" width="3" height="15" fill="rgb(205,105,38)"/><text x="41.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.27%)</title><rect x="38" y="932" width="3" height="15" fill="rgb(232,134,18)"/><text x="41.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.27%)</title><rect x="38" y="948" width="3" height="15" fill="rgb(245,21,0)"/><text x="41.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.27%)</title><rect x="38" y="964" width="3" height="15" fill="rgb(251,5,13)"/><text x="41.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.27%)</title><rect x="38" y="980" width="3" height="15" fill="rgb(228,192,49)"/><text x="41.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.27%)</title><rect x="38" y="996" width="3" height="15" fill="rgb(240,106,10)"/><text x="41.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.27%)</title><rect x="38" y="1012" width="3" height="15" fill="rgb(229,201,18)"/><text x="41.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.27%)</title><rect x="38" y="1028" width="3" height="15" fill="rgb(215,139,53)"/><text x="41.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.27%)</title><rect x="38" y="1044" width="3" height="15" fill="rgb(226,164,48)"/><text x="41.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.27%)</title><rect x="38" y="1060" width="3" height="15" fill="rgb(213,92,17)"/><text x="41.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.27%)</title><rect x="38" y="1076" width="3" height="15" fill="rgb(253,176,37)"/><text x="41.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.27%)</title><rect x="38" y="1092" width="3" height="15" fill="rgb(219,33,48)"/><text x="41.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.27%)</title><rect x="38" y="1108" width="3" height="15" fill="rgb(227,145,34)"/><text x="41.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.27%)</title><rect x="38" y="1124" width="3" height="15" fill="rgb(215,62,27)"/><text x="41.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.27%)</title><rect x="38" y="1140" width="3" height="15" fill="rgb(242,34,18)"/><text x="41.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.27%)</title><rect x="38" y="1156" width="3" height="15" fill="rgb(208,226,50)"/><text x="41.00" y="1166.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (7 samples, 1.86%)</title><rect x="22" y="148" width="22" height="15" fill="rgb(215,218,54)"/><text x="25.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.86%)</title><rect x="22" y="164" width="22" height="15" fill="rgb(231,62,29)"/><text x="25.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.86%)</title><rect x="22" y="180" width="22" height="15" fill="rgb(236,52,4)"/><text x="25.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.86%)</title><rect x="22" y="196" width="22" height="15" fill="rgb(230,74,10)"/><text x="25.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.86%)</title><rect x="22" y="212" width="22" height="15" fill="rgb(251,140,33)"/><text x="25.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.86%)</title><rect x="22" y="228" width="22" height="15" fill="rgb(220,78,1)"/><text x="25.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.86%)</title><rect x="22" y="244" width="22" height="15" fill="rgb(207,96,37)"/><text x="25.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.86%)</title><rect x="22" y="260" width="22" height="15" fill="rgb(225,170,0)"/><text x="25.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.86%)</title><rect x="22" y="276" width="22" height="15" fill="rgb(230,5,27)"/><text x="25.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (7 samples, 1.86%)</title><rect x="22" y="292" width="22" height="15" fill="rgb(229,14,9)"/><text x="25.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.86%)</title><rect x="22" y="308" width="22" height="15" fill="rgb(228,199,4)"/><text x="25.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.86%)</title><rect x="22" y="324" width="22" height="15" fill="rgb(206,224,11)"/><text x="25.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.86%)</title><rect x="22" y="340" width="22" height="15" fill="rgb(236,61,0)"/><text x="25.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.86%)</title><rect x="22" y="356" width="22" height="15" fill="rgb(234,91,21)"/><text x="25.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.86%)</title><rect x="22" y="372" width="22" height="15" fill="rgb(231,88,23)"/><text x="25.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:6) (1 samples, 0.27%)</title><rect x="41" y="388" width="3" height="15" fill="rgb(241,72,20)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="41" y="404" width="3" height="15" fill="rgb(209,77,1)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="41" y="420" width="3" height="15" fill="rgb(227,102,22)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="41" y="436" width="3" height="15" fill="rgb(219,55,5)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.27%)</title><rect x="41" y="452" width="3" height="15" fill="rgb(241,223,22)"/><text x="44.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.27%)</title><rect x="41" y="468" width="3" height="15" fill="rgb(213,178,8)"/><text x="44.00" y="478.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.27%)</title><rect x="41" y="484" width="3" height="15" fill="rgb(234,56,13)"/><text x="44.00" y="494.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.27%)</title><rect x="44" y="676" width="3" height="15" fill="rgb(215,167,28)"/><text x="47.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="692" width="3" height="15" fill="rgb(242,29,42)"/><text x="47.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="708" width="3" height="15" fill="rgb(208,4,5)"/><text x="47.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="724" width="3" height="15" fill="rgb(226,205,37)"/><text x="47.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="740" width="3" height="15" fill="rgb(241,208,31)"/><text x="47.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="756" width="3" height="15" fill="rgb(224,21,11)"/><text x="47.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.27%)</title><rect x="44" y="772" width="3" height="15" fill="rgb(239,46,39)"/><text x="47.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="44" y="788" width="3" height="15" fill="rgb(240,20,41)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="804" width="3" height="15" fill="rgb(209,22,47)"/><text x="47.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="820" width="3" height="15" fill="rgb(206,144,50)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="836" width="3" height="15" fill="rgb(220,191,41)"/><text x="47.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="852" width="3" height="15" fill="rgb(254,90,25)"/><text x="47.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="868" width="3" height="15" fill="rgb(218,71,44)"/><text x="47.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="884" width="3" height="15" fill="rgb(214,14,25)"/><text x="47.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.27%)</title><rect x="44" y="900" width="3" height="15" fill="rgb(254,2,41)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="916" width="3" height="15" fill="rgb(244,12,13)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="932" width="3" height="15" fill="rgb(234,144,53)"/><text x="47.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="948" width="3" height="15" fill="rgb(232,43,44)"/><text x="47.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="964" width="3" height="15" fill="rgb(210,176,45)"/><text x="47.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="980" width="3" height="15" fill="rgb(205,151,15)"/><text x="47.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.27%)</title><rect x="44" y="996" width="3" height="15" fill="rgb(250,20,27)"/><text x="47.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="44" y="1012" width="3" height="15" fill="rgb(232,57,31)"/><text x="47.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="1028" width="3" height="15" fill="rgb(207,29,36)"/><text x="47.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="1044" width="3" height="15" fill="rgb(214,11,46)"/><text x="47.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="1060" width="3" height="15" fill="rgb(234,167,7)"/><text x="47.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="1076" width="3" height="15" fill="rgb(230,104,10)"/><text x="47.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="1092" width="3" height="15" fill="rgb(247,164,15)"/><text x="47.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="1108" width="3" height="15" fill="rgb(253,80,20)"/><text x="47.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.27%)</title><rect x="44" y="1124" width="3" height="15" fill="rgb(236,93,36)"/><text x="47.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="1140" width="3" height="15" fill="rgb(213,77,37)"/><text x="47.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="1156" width="3" height="15" fill="rgb(228,219,44)"/><text x="47.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="1172" width="3" height="15" fill="rgb(233,201,15)"/><text x="47.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="1188" width="3" height="15" fill="rgb(230,75,17)"/><text x="47.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="1204" width="3" height="15" fill="rgb(215,172,16)"/><text x="47.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:21) (1 samples, 0.27%)</title><rect x="44" y="1220" width="3" height="15" fill="rgb(216,150,39)"/><text x="47.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.27%)</title><rect x="44" y="1236" width="3" height="15" fill="rgb(248,19,32)"/><text x="47.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="1252" width="3" height="15" fill="rgb(236,122,27)"/><text x="47.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="44" y="1268" width="3" height="15" fill="rgb(229,167,20)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="44" y="1284" width="3" height="15" fill="rgb(216,106,3)"/><text x="47.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="44" y="1300" width="3" height="15" fill="rgb(230,137,26)"/><text x="47.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="44" y="1316" width="3" height="15" fill="rgb(230,58,27)"/><text x="47.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="44" y="1332" width="3" height="15" fill="rgb(244,141,29)"/><text x="47.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py:1540) (1 samples, 0.27%)</title><rect x="44" y="1348" width="3" height="15" fill="rgb(231,127,50)"/><text x="47.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py:1507) (1 samples, 0.27%)</title><rect x="44" y="1364" width="3" height="15" fill="rgb(209,179,47)"/><text x="47.00" y="1374.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:293) (1 samples, 0.27%)</title><rect x="44" y="1380" width="3" height="15" fill="rgb(218,120,19)"/><text x="47.00" y="1390.50"></text></g><g><title>parameters (inspect.py:2837) (1 samples, 0.27%)</title><rect x="44" y="1396" width="3" height="15" fill="rgb(217,76,27)"/><text x="47.00" y="1406.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (2 samples, 0.53%)</title><rect x="44" y="148" width="6" height="15" fill="rgb(232,206,3)"/><text x="47.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="164" width="6" height="15" fill="rgb(227,167,38)"/><text x="47.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.53%)</title><rect x="44" y="180" width="6" height="15" fill="rgb(216,172,17)"/><text x="47.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="196" width="6" height="15" fill="rgb(234,38,36)"/><text x="47.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="212" width="6" height="15" fill="rgb(226,128,3)"/><text x="47.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="44" y="228" width="6" height="15" fill="rgb(206,204,38)"/><text x="47.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="44" y="244" width="6" height="15" fill="rgb(210,135,52)"/><text x="47.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="44" y="260" width="6" height="15" fill="rgb(219,131,45)"/><text x="47.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="276" width="6" height="15" fill="rgb(234,21,53)"/><text x="47.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.53%)</title><rect x="44" y="292" width="6" height="15" fill="rgb(252,192,38)"/><text x="47.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="308" width="6" height="15" fill="rgb(240,57,15)"/><text x="47.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="44" y="324" width="6" height="15" fill="rgb(236,87,25)"/><text x="47.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="44" y="340" width="6" height="15" fill="rgb(238,25,53)"/><text x="47.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="44" y="356" width="6" height="15" fill="rgb(214,12,34)"/><text x="47.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="372" width="6" height="15" fill="rgb(235,176,21)"/><text x="47.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.53%)</title><rect x="44" y="388" width="6" height="15" fill="rgb(224,45,23)"/><text x="47.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="404" width="6" height="15" fill="rgb(234,20,26)"/><text x="47.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="44" y="420" width="6" height="15" fill="rgb(249,220,24)"/><text x="47.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="44" y="436" width="6" height="15" fill="rgb(247,41,5)"/><text x="47.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="44" y="452" width="6" height="15" fill="rgb(234,120,7)"/><text x="47.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="468" width="6" height="15" fill="rgb(234,130,30)"/><text x="47.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.53%)</title><rect x="44" y="484" width="6" height="15" fill="rgb(244,4,22)"/><text x="47.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="500" width="6" height="15" fill="rgb(219,35,39)"/><text x="47.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="44" y="516" width="6" height="15" fill="rgb(238,126,33)"/><text x="47.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="44" y="532" width="6" height="15" fill="rgb(231,145,19)"/><text x="47.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="44" y="548" width="6" height="15" fill="rgb(226,41,23)"/><text x="47.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="564" width="6" height="15" fill="rgb(243,138,44)"/><text x="47.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.53%)</title><rect x="44" y="580" width="6" height="15" fill="rgb(221,103,45)"/><text x="47.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="44" y="596" width="6" height="15" fill="rgb(223,47,24)"/><text x="47.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="44" y="612" width="6" height="15" fill="rgb(243,182,29)"/><text x="47.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="44" y="628" width="6" height="15" fill="rgb(217,163,30)"/><text x="47.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="44" y="644" width="6" height="15" fill="rgb(244,207,8)"/><text x="47.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="44" y="660" width="6" height="15" fill="rgb(217,25,19)"/><text x="47.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:386) (1 samples, 0.27%)</title><rect x="47" y="676" width="3" height="15" fill="rgb(237,66,54)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="47" y="692" width="3" height="15" fill="rgb(238,80,51)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="47" y="708" width="3" height="15" fill="rgb(223,33,19)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="47" y="724" width="3" height="15" fill="rgb(239,98,18)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="47" y="740" width="3" height="15" fill="rgb(224,210,40)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="47" y="756" width="3" height="15" fill="rgb(219,41,15)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py:686) (1 samples, 0.27%)</title><rect x="47" y="772" width="3" height="15" fill="rgb(227,187,18)"/><text x="50.00" y="782.50"></text></g><g><title>__init__ (scipy/stats/_multivariate.py:352) (1 samples, 0.27%)</title><rect x="47" y="788" width="3" height="15" fill="rgb(230,115,2)"/><text x="50.00" y="798.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:55) (1 samples, 0.27%)</title><rect x="47" y="804" width="3" height="15" fill="rgb(211,110,18)"/><text x="50.00" y="814.50"></text></g><g><title>indentcount_lines (scipy/_lib/doccer.py:198) (1 samples, 0.27%)</title><rect x="47" y="820" width="3" height="15" fill="rgb(213,36,49)"/><text x="50.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.27%)</title><rect x="50" y="244" width="3" height="15" fill="rgb(225,138,44)"/><text x="53.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="50" y="260" width="3" height="15" fill="rgb(224,181,26)"/><text x="53.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="50" y="276" width="3" height="15" fill="rgb(222,118,13)"/><text x="53.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="50" y="292" width="3" height="15" fill="rgb(221,75,33)"/><text x="53.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="50" y="308" width="3" height="15" fill="rgb(253,49,29)"/><text x="53.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="50" y="324" width="3" height="15" fill="rgb(243,24,12)"/><text x="53.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:17) (1 samples, 0.27%)</title><rect x="50" y="340" width="3" height="15" fill="rgb(223,146,28)"/><text x="53.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="50" y="356" width="3" height="15" fill="rgb(206,111,9)"/><text x="53.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="50" y="372" width="3" height="15" fill="rgb(246,144,13)"/><text x="53.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="50" y="388" width="3" height="15" fill="rgb(243,225,15)"/><text x="53.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.27%)</title><rect x="50" y="404" width="3" height="15" fill="rgb(207,16,19)"/><text x="53.00" y="414.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.27%)</title><rect x="50" y="420" width="3" height="15" fill="rgb(207,134,44)"/><text x="53.00" y="430.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.27%)</title><rect x="50" y="436" width="3" height="15" fill="rgb(215,195,12)"/><text x="53.00" y="446.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.27%)</title><rect x="53" y="628" width="4" height="15" fill="rgb(207,1,43)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="53" y="644" width="4" height="15" fill="rgb(207,177,46)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="53" y="660" width="4" height="15" fill="rgb(220,60,26)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="53" y="676" width="4" height="15" fill="rgb(219,98,34)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="53" y="692" width="4" height="15" fill="rgb(207,38,26)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="53" y="708" width="4" height="15" fill="rgb(244,191,51)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:8) (1 samples, 0.27%)</title><rect x="53" y="724" width="4" height="15" fill="rgb(211,198,4)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="53" y="740" width="4" height="15" fill="rgb(234,58,9)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="53" y="756" width="4" height="15" fill="rgb(244,87,24)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="53" y="772" width="4" height="15" fill="rgb(244,179,41)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="53" y="788" width="4" height="15" fill="rgb(233,73,11)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="53" y="804" width="4" height="15" fill="rgb(254,175,27)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/__init__.py:1) (1 samples, 0.27%)</title><rect x="53" y="820" width="4" height="15" fill="rgb(210,123,13)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="53" y="836" width="4" height="15" fill="rgb(215,83,37)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="53" y="852" width="4" height="15" fill="rgb(238,186,9)"/><text x="56.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="53" y="868" width="4" height="15" fill="rgb(211,142,20)"/><text x="56.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="53" y="884" width="4" height="15" fill="rgb(246,169,6)"/><text x="56.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="53" y="900" width="4" height="15" fill="rgb(245,183,31)"/><text x="56.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/excel/_base.py:33) (1 samples, 0.27%)</title><rect x="53" y="916" width="4" height="15" fill="rgb(232,73,33)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="53" y="932" width="4" height="15" fill="rgb(254,139,37)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="53" y="948" width="4" height="15" fill="rgb(211,89,27)"/><text x="56.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="53" y="964" width="4" height="15" fill="rgb(223,24,16)"/><text x="56.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="53" y="980" width="4" height="15" fill="rgb(239,94,50)"/><text x="56.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="53" y="996" width="4" height="15" fill="rgb(228,14,28)"/><text x="56.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/parsers.py:708) (1 samples, 0.27%)</title><rect x="53" y="1012" width="4" height="15" fill="rgb(234,91,41)"/><text x="56.00" y="1022.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.27%)</title><rect x="53" y="1028" width="4" height="15" fill="rgb(251,186,54)"/><text x="56.00" y="1038.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.27%)</title><rect x="53" y="1044" width="4" height="15" fill="rgb(241,152,15)"/><text x="56.00" y="1054.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.27%)</title><rect x="53" y="1060" width="4" height="15" fill="rgb(223,47,24)"/><text x="56.00" y="1070.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.27%)</title><rect x="53" y="1076" width="4" height="15" fill="rgb(215,8,28)"/><text x="56.00" y="1086.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="53" y="1092" width="4" height="15" fill="rgb(251,155,51)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.27%)</title><rect x="57" y="1108" width="3" height="15" fill="rgb(253,157,34)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="57" y="1124" width="3" height="15" fill="rgb(227,109,16)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="57" y="1140" width="3" height="15" fill="rgb(208,121,28)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="57" y="1156" width="3" height="15" fill="rgb(211,132,39)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="57" y="1172" width="3" height="15" fill="rgb(216,139,14)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="57" y="1188" width="3" height="15" fill="rgb(251,131,52)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (1 samples, 0.27%)</title><rect x="57" y="1204" width="3" height="15" fill="rgb(211,68,30)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="57" y="1220" width="3" height="15" fill="rgb(245,191,46)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="57" y="1236" width="3" height="15" fill="rgb(228,147,36)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="57" y="1252" width="3" height="15" fill="rgb(242,78,10)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="57" y="1268" width="3" height="15" fill="rgb(219,199,11)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="57" y="1284" width="3" height="15" fill="rgb(239,78,29)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (1 samples, 0.27%)</title><rect x="57" y="1300" width="3" height="15" fill="rgb(214,138,46)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="57" y="1316" width="3" height="15" fill="rgb(210,37,8)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="57" y="1332" width="3" height="15" fill="rgb(207,41,44)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="57" y="1348" width="3" height="15" fill="rgb(227,198,12)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="57" y="1364" width="3" height="15" fill="rgb(208,178,51)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="57" y="1380" width="3" height="15" fill="rgb(252,139,51)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:201) (1 samples, 0.27%)</title><rect x="57" y="1396" width="3" height="15" fill="rgb(243,119,16)"/><text x="60.00" y="1406.50"></text></g><g><title>IntervalIndex (pandas/core/indexes/interval.py:1183) (1 samples, 0.27%)</title><rect x="57" y="1412" width="3" height="15" fill="rgb(228,211,27)"/><text x="60.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.27%)</title><rect x="57" y="1428" width="3" height="15" fill="rgb(226,173,24)"/><text x="60.00" y="1438.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.27%)</title><rect x="57" y="1444" width="3" height="15" fill="rgb(234,105,47)"/><text x="60.00" y="1454.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.27%)</title><rect x="57" y="1460" width="3" height="15" fill="rgb(236,218,50)"/><text x="60.00" y="1470.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.27%)</title><rect x="57" y="1476" width="3" height="15" fill="rgb(226,109,45)"/><text x="60.00" y="1486.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="57" y="1492" width="3" height="15" fill="rgb(227,119,38)"/><text x="60.00" y="1502.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py:357) (1 samples, 0.27%)</title><rect x="60" y="1204" width="3" height="15" fill="rgb(235,196,49)"/><text x="63.00" y="1214.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:4) (17 samples, 4.52%)</title><rect x="13" y="52" width="53" height="15" fill="rgb(240,107,53)"/><text x="16.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 4.52%)</title><rect x="13" y="68" width="53" height="15" fill="rgb(219,91,14)"/><text x="16.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 4.52%)</title><rect x="13" y="84" width="53" height="15" fill="rgb(218,97,36)"/><text x="16.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 4.52%)</title><rect x="13" y="100" width="53" height="15" fill="rgb(249,198,42)"/><text x="16.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 4.52%)</title><rect x="13" y="116" width="53" height="15" fill="rgb(234,224,36)"/><text x="16.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 4.52%)</title><rect x="13" y="132" width="53" height="15" fill="rgb(209,68,2)"/><text x="16.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (5 samples, 1.33%)</title><rect x="50" y="148" width="16" height="15" fill="rgb(235,24,14)"/><text x="53.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.33%)</title><rect x="50" y="164" width="16" height="15" fill="rgb(223,178,27)"/><text x="53.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.33%)</title><rect x="50" y="180" width="16" height="15" fill="rgb(235,184,18)"/><text x="53.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.33%)</title><rect x="50" y="196" width="16" height="15" fill="rgb(233,161,18)"/><text x="53.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.33%)</title><rect x="50" y="212" width="16" height="15" fill="rgb(212,224,30)"/><text x="53.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.33%)</title><rect x="50" y="228" width="16" height="15" fill="rgb(244,224,27)"/><text x="53.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.06%)</title><rect x="53" y="244" width="13" height="15" fill="rgb(252,209,16)"/><text x="56.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.06%)</title><rect x="53" y="260" width="13" height="15" fill="rgb(228,28,22)"/><text x="56.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.06%)</title><rect x="53" y="276" width="13" height="15" fill="rgb(222,180,10)"/><text x="56.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.06%)</title><rect x="53" y="292" width="13" height="15" fill="rgb(230,87,51)"/><text x="56.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.06%)</title><rect x="53" y="308" width="13" height="15" fill="rgb(223,182,5)"/><text x="56.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.06%)</title><rect x="53" y="324" width="13" height="15" fill="rgb(229,104,26)"/><text x="56.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.06%)</title><rect x="53" y="340" width="13" height="15" fill="rgb(227,226,16)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.06%)</title><rect x="53" y="356" width="13" height="15" fill="rgb(228,185,52)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.06%)</title><rect x="53" y="372" width="13" height="15" fill="rgb(209,45,0)"/><text x="56.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.06%)</title><rect x="53" y="388" width="13" height="15" fill="rgb(213,227,12)"/><text x="56.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.06%)</title><rect x="53" y="404" width="13" height="15" fill="rgb(240,14,40)"/><text x="56.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.06%)</title><rect x="53" y="420" width="13" height="15" fill="rgb(206,64,23)"/><text x="56.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.06%)</title><rect x="53" y="436" width="13" height="15" fill="rgb(214,60,38)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.06%)</title><rect x="53" y="452" width="13" height="15" fill="rgb(206,7,51)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.06%)</title><rect x="53" y="468" width="13" height="15" fill="rgb(235,140,21)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.06%)</title><rect x="53" y="484" width="13" height="15" fill="rgb(251,103,20)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.06%)</title><rect x="53" y="500" width="13" height="15" fill="rgb(242,51,27)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.06%)</title><rect x="53" y="516" width="13" height="15" fill="rgb(213,226,42)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.06%)</title><rect x="53" y="532" width="13" height="15" fill="rgb(240,58,23)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.06%)</title><rect x="53" y="548" width="13" height="15" fill="rgb(248,210,16)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.06%)</title><rect x="53" y="564" width="13" height="15" fill="rgb(205,229,13)"/><text x="56.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.06%)</title><rect x="53" y="580" width="13" height="15" fill="rgb(215,157,13)"/><text x="56.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.06%)</title><rect x="53" y="596" width="13" height="15" fill="rgb(221,88,50)"/><text x="56.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.06%)</title><rect x="53" y="612" width="13" height="15" fill="rgb(214,71,4)"/><text x="56.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.80%)</title><rect x="57" y="628" width="9" height="15" fill="rgb(232,215,28)"/><text x="60.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="57" y="644" width="9" height="15" fill="rgb(227,210,29)"/><text x="60.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="57" y="660" width="9" height="15" fill="rgb(217,11,44)"/><text x="60.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="57" y="676" width="9" height="15" fill="rgb(249,27,1)"/><text x="60.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="57" y="692" width="9" height="15" fill="rgb(225,225,17)"/><text x="60.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="57" y="708" width="9" height="15" fill="rgb(220,154,46)"/><text x="60.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.80%)</title><rect x="57" y="724" width="9" height="15" fill="rgb(222,151,6)"/><text x="60.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="57" y="740" width="9" height="15" fill="rgb(206,182,32)"/><text x="60.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="57" y="756" width="9" height="15" fill="rgb(239,219,28)"/><text x="60.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="57" y="772" width="9" height="15" fill="rgb(225,183,52)"/><text x="60.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="57" y="788" width="9" height="15" fill="rgb(213,3,6)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="57" y="804" width="9" height="15" fill="rgb(215,46,34)"/><text x="60.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.80%)</title><rect x="57" y="820" width="9" height="15" fill="rgb(227,191,49)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="57" y="836" width="9" height="15" fill="rgb(248,134,6)"/><text x="60.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="57" y="852" width="9" height="15" fill="rgb(219,221,19)"/><text x="60.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="57" y="868" width="9" height="15" fill="rgb(216,69,16)"/><text x="60.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="57" y="884" width="9" height="15" fill="rgb(221,126,47)"/><text x="60.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="57" y="900" width="9" height="15" fill="rgb(231,225,20)"/><text x="60.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.80%)</title><rect x="57" y="916" width="9" height="15" fill="rgb(221,94,10)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="57" y="932" width="9" height="15" fill="rgb(246,97,8)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="57" y="948" width="9" height="15" fill="rgb(217,207,26)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="57" y="964" width="9" height="15" fill="rgb(208,9,26)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="57" y="980" width="9" height="15" fill="rgb(223,46,37)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="57" y="996" width="9" height="15" fill="rgb(240,178,47)"/><text x="60.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (3 samples, 0.80%)</title><rect x="57" y="1012" width="9" height="15" fill="rgb(231,1,24)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.80%)</title><rect x="57" y="1028" width="9" height="15" fill="rgb(228,150,44)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.80%)</title><rect x="57" y="1044" width="9" height="15" fill="rgb(234,189,19)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.80%)</title><rect x="57" y="1060" width="9" height="15" fill="rgb(207,24,40)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.80%)</title><rect x="57" y="1076" width="9" height="15" fill="rgb(237,9,0)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.80%)</title><rect x="57" y="1092" width="9" height="15" fill="rgb(227,163,12)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:70) (2 samples, 0.53%)</title><rect x="60" y="1108" width="6" height="15" fill="rgb(217,61,21)"/><text x="63.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="60" y="1124" width="6" height="15" fill="rgb(245,227,3)"/><text x="63.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="60" y="1140" width="6" height="15" fill="rgb(221,219,11)"/><text x="63.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="60" y="1156" width="6" height="15" fill="rgb(206,88,12)"/><text x="63.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="60" y="1172" width="6" height="15" fill="rgb(214,216,15)"/><text x="63.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="60" y="1188" width="6" height="15" fill="rgb(221,107,45)"/><text x="63.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py:48) (1 samples, 0.27%)</title><rect x="63" y="1204" width="3" height="15" fill="rgb(253,140,42)"/><text x="66.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="63" y="1220" width="3" height="15" fill="rgb(238,225,24)"/><text x="66.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="63" y="1236" width="3" height="15" fill="rgb(229,141,38)"/><text x="66.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="63" y="1252" width="3" height="15" fill="rgb(242,51,43)"/><text x="66.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="63" y="1268" width="3" height="15" fill="rgb(208,17,9)"/><text x="66.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="63" y="1284" width="3" height="15" fill="rgb(224,88,19)"/><text x="66.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/io/common.py:430) (1 samples, 0.27%)</title><rect x="63" y="1300" width="3" height="15" fill="rgb(217,204,0)"/><text x="66.00" y="1310.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:345) (1 samples, 0.27%)</title><rect x="66" y="116" width="3" height="15" fill="rgb(239,188,23)"/><text x="69.00" y="126.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.27%)</title><rect x="66" y="132" width="3" height="15" fill="rgb(228,46,15)"/><text x="69.00" y="142.50"></text></g><g><title>0x7f275cfa3a66 (?) (1 samples, 0.27%)</title><rect x="66" y="148" width="3" height="15" fill="rgb(220,186,10)"/><text x="69.00" y="158.50"></text></g><g><title>0x7f275cf95579 (?) (1 samples, 0.27%)</title><rect x="66" y="164" width="3" height="15" fill="rgb(250,81,13)"/><text x="69.00" y="174.50"></text></g><g><title>0x7f275c8d6713 (?) (1 samples, 0.27%)</title><rect x="66" y="180" width="3" height="15" fill="rgb(234,166,13)"/><text x="69.00" y="190.50"></text></g><g><title>0x7f275c8cf884 (?) (1 samples, 0.27%)</title><rect x="66" y="196" width="3" height="15" fill="rgb(249,2,33)"/><text x="69.00" y="206.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.27%)</title><rect x="66" y="212" width="3" height="15" fill="rgb(227,95,51)"/><text x="69.00" y="222.50"></text></g><g><title>0x7f275c6b1dcf (?) (1 samples, 0.27%)</title><rect x="66" y="228" width="3" height="15" fill="rgb(253,39,42)"/><text x="69.00" y="238.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.27%)</title><rect x="69" y="116" width="3" height="15" fill="rgb(240,190,8)"/><text x="72.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.27%)</title><rect x="69" y="132" width="3" height="15" fill="rgb(214,117,31)"/><text x="72.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.27%)</title><rect x="69" y="148" width="3" height="15" fill="rgb(228,114,28)"/><text x="72.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.27%)</title><rect x="69" y="164" width="3" height="15" fill="rgb(228,228,5)"/><text x="72.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.27%)</title><rect x="69" y="180" width="3" height="15" fill="rgb(234,173,40)"/><text x="72.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.27%)</title><rect x="69" y="196" width="3" height="15" fill="rgb(237,205,10)"/><text x="72.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.27%)</title><rect x="69" y="212" width="3" height="15" fill="rgb(207,217,29)"/><text x="72.00" y="222.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.27%)</title><rect x="69" y="228" width="3" height="15" fill="rgb(221,173,34)"/><text x="72.00" y="238.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.27%)</title><rect x="69" y="244" width="3" height="15" fill="rgb(246,171,5)"/><text x="72.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.27%)</title><rect x="69" y="260" width="3" height="15" fill="rgb(253,12,7)"/><text x="72.00" y="270.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.27%)</title><rect x="69" y="276" width="3" height="15" fill="rgb(208,41,14)"/><text x="72.00" y="286.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.27%)</title><rect x="69" y="292" width="3" height="15" fill="rgb(222,190,27)"/><text x="72.00" y="302.50"></text></g><g><title>__call__ (enum.py:309) (1 samples, 0.27%)</title><rect x="69" y="308" width="3" height="15" fill="rgb(239,102,28)"/><text x="72.00" y="318.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:156) (1 samples, 0.27%)</title><rect x="72" y="244" width="3" height="15" fill="rgb(235,83,54)"/><text x="75.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.27%)</title><rect x="72" y="260" width="3" height="15" fill="rgb(243,86,45)"/><text x="75.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.27%)</title><rect x="72" y="276" width="3" height="15" fill="rgb(207,95,35)"/><text x="75.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.27%)</title><rect x="72" y="292" width="3" height="15" fill="rgb(207,111,12)"/><text x="75.00" y="302.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.27%)</title><rect x="72" y="308" width="3" height="15" fill="rgb(221,222,20)"/><text x="75.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.27%)</title><rect x="72" y="324" width="3" height="15" fill="rgb(228,161,42)"/><text x="75.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.27%)</title><rect x="72" y="340" width="3" height="15" fill="rgb(252,183,17)"/><text x="75.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:40) (4 samples, 1.06%)</title><rect x="66" y="52" width="13" height="15" fill="rgb(221,22,12)"/><text x="69.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:11) (4 samples, 1.06%)</title><rect x="66" y="68" width="13" height="15" fill="rgb(233,44,19)"/><text x="69.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (4 samples, 1.06%)</title><rect x="66" y="84" width="13" height="15" fill="rgb(254,166,54)"/><text x="69.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 1.06%)</title><rect x="66" y="100" width="13" height="15" fill="rgb(243,147,26)"/><text x="69.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (2 samples, 0.53%)</title><rect x="72" y="116" width="7" height="15" fill="rgb(220,147,33)"/><text x="75.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (2 samples, 0.53%)</title><rect x="72" y="132" width="7" height="15" fill="rgb(240,206,22)"/><text x="75.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.53%)</title><rect x="72" y="148" width="7" height="15" fill="rgb(240,171,33)"/><text x="75.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.53%)</title><rect x="72" y="164" width="7" height="15" fill="rgb(215,188,21)"/><text x="75.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.53%)</title><rect x="72" y="180" width="7" height="15" fill="rgb(225,217,41)"/><text x="75.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.53%)</title><rect x="72" y="196" width="7" height="15" fill="rgb(210,12,4)"/><text x="75.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.53%)</title><rect x="72" y="212" width="7" height="15" fill="rgb(233,229,42)"/><text x="75.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.53%)</title><rect x="72" y="228" width="7" height="15" fill="rgb(248,124,44)"/><text x="75.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.27%)</title><rect x="75" y="244" width="4" height="15" fill="rgb(240,213,10)"/><text x="78.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1222) (1 samples, 0.27%)</title><rect x="75" y="260" width="4" height="15" fill="rgb(228,210,31)"/><text x="78.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (1 samples, 0.27%)</title><rect x="79" y="180" width="3" height="15" fill="rgb(248,79,52)"/><text x="82.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (1 samples, 0.27%)</title><rect x="79" y="196" width="3" height="15" fill="rgb(219,114,20)"/><text x="82.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (1 samples, 0.27%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(237,81,24)"/><text x="82.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.27%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(234,170,16)"/><text x="82.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.27%)</title><rect x="82" y="180" width="3" height="15" fill="rgb(251,216,13)"/><text x="85.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.27%)</title><rect x="82" y="196" width="3" height="15" fill="rgb(242,46,7)"/><text x="85.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.27%)</title><rect x="82" y="212" width="3" height="15" fill="rgb(218,119,17)"/><text x="85.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.27%)</title><rect x="91" y="324" width="3" height="15" fill="rgb(213,188,29)"/><text x="94.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.27%)</title><rect x="91" y="340" width="3" height="15" fill="rgb(239,175,15)"/><text x="94.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (2 samples, 0.53%)</title><rect x="91" y="292" width="6" height="15" fill="rgb(246,185,11)"/><text x="94.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.53%)</title><rect x="91" y="308" width="6" height="15" fill="rgb(219,144,46)"/><text x="94.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.27%)</title><rect x="94" y="324" width="3" height="15" fill="rgb(239,102,45)"/><text x="97.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.27%)</title><rect x="94" y="340" width="3" height="15" fill="rgb(249,113,44)"/><text x="97.00" y="350.50"></text></g><g><title>0x7f274411a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="97" y="356" width="4" height="15" fill="rgb(207,30,50)"/><text x="100.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.27%)</title><rect x="97" y="372" width="4" height="15" fill="rgb(235,177,3)"/><text x="100.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.27%)</title><rect x="97" y="388" width="4" height="15" fill="rgb(242,40,13)"/><text x="100.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.27%)</title><rect x="97" y="404" width="4" height="15" fill="rgb(233,116,14)"/><text x="100.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.27%)</title><rect x="97" y="420" width="4" height="15" fill="rgb(251,213,48)"/><text x="100.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.27%)</title><rect x="97" y="436" width="4" height="15" fill="rgb(236,104,22)"/><text x="100.00" y="446.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.27%)</title><rect x="97" y="452" width="4" height="15" fill="rgb(241,81,13)"/><text x="100.00" y="462.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.27%)</title><rect x="97" y="468" width="4" height="15" fill="rgb(249,51,48)"/><text x="100.00" y="478.50"></text></g><g><title>0x7f274411a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(212,219,11)"/><text x="104.00" y="366.50"></text></g><g><title>0x7f274411a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(237,101,23)"/><text x="107.00" y="366.50"></text></g><g><title>0x7f274410bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.06%)</title><rect x="97" y="324" width="13" height="15" fill="rgb(247,72,2)"/><text x="100.00" y="334.50"></text></g><g><title>0x7f274411b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.06%)</title><rect x="97" y="340" width="13" height="15" fill="rgb(247,192,47)"/><text x="100.00" y="350.50"></text></g><g><title>0x7f274411ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(217,78,28)"/><text x="110.00" y="366.50"></text></g><g><title>0x7f27440f2529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="107" y="372" width="3" height="15" fill="rgb(250,3,3)"/><text x="110.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.27%)</title><rect x="107" y="388" width="3" height="15" fill="rgb(231,153,14)"/><text x="110.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.27%)</title><rect x="107" y="404" width="3" height="15" fill="rgb(205,101,30)"/><text x="110.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.27%)</title><rect x="107" y="420" width="3" height="15" fill="rgb(235,2,38)"/><text x="110.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.27%)</title><rect x="107" y="436" width="3" height="15" fill="rgb(237,203,10)"/><text x="110.00" y="446.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.27%)</title><rect x="107" y="452" width="3" height="15" fill="rgb(211,208,0)"/><text x="110.00" y="462.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="107" y="468" width="3" height="15" fill="rgb(221,170,24)"/><text x="110.00" y="478.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (9 samples, 2.39%)</title><rect x="85" y="212" width="28" height="15" fill="rgb(223,108,5)"/><text x="88.00" y="222.50">a..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (9 samples, 2.39%)</title><rect x="85" y="228" width="28" height="15" fill="rgb(237,42,12)"/><text x="88.00" y="238.50">_..</text></g><g><title>__call__ (joblib/parallel.py:256) (9 samples, 2.39%)</title><rect x="85" y="244" width="28" height="15" fill="rgb(224,101,48)"/><text x="88.00" y="254.50">_..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (8 samples, 2.13%)</title><rect x="88" y="260" width="25" height="15" fill="rgb(224,191,53)"/><text x="91.00" y="270.50">&lt;..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (8 samples, 2.13%)</title><rect x="88" y="276" width="25" height="15" fill="rgb(246,146,14)"/><text x="91.00" y="286.50">_..</text></g><g><title>predict (sklearn/tree/_classes.py:420) (5 samples, 1.33%)</title><rect x="97" y="292" width="16" height="15" fill="rgb(224,65,52)"/><text x="100.00" y="302.50"></text></g><g><title>0x7f274410cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.33%)</title><rect x="97" y="308" width="16" height="15" fill="rgb(249,217,34)"/><text x="100.00" y="318.50"></text></g><g><title>0x7f274410c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="110" y="324" width="3" height="15" fill="rgb(237,88,5)"/><text x="113.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.27%)</title><rect x="110" y="340" width="3" height="15" fill="rgb(210,27,7)"/><text x="113.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:47) (12 samples, 3.19%)</title><rect x="79" y="52" width="37" height="15" fill="rgb(245,17,1)"/><text x="82.00" y="62.50">&lt;mo..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:46) (12 samples, 3.19%)</title><rect x="79" y="68" width="37" height="15" fill="rgb(232,141,7)"/><text x="82.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:26) (12 samples, 3.19%)</title><rect x="79" y="84" width="37" height="15" fill="rgb(245,229,34)"/><text x="82.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:18) (12 samples, 3.19%)</title><rect x="79" y="100" width="37" height="15" fill="rgb(227,100,34)"/><text x="82.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (12 samples, 3.19%)</title><rect x="79" y="116" width="37" height="15" fill="rgb(242,166,34)"/><text x="82.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (12 samples, 3.19%)</title><rect x="79" y="132" width="37" height="15" fill="rgb(236,36,51)"/><text x="82.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (12 samples, 3.19%)</title><rect x="79" y="148" width="37" height="15" fill="rgb(238,152,21)"/><text x="82.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py:1006) (12 samples, 3.19%)</title><rect x="79" y="164" width="37" height="15" fill="rgb(232,37,26)"/><text x="82.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (10 samples, 2.66%)</title><rect x="85" y="180" width="31" height="15" fill="rgb(221,109,53)"/><text x="88.00" y="190.50">di..</text></g><g><title>_dispatch (joblib/parallel.py:753) (10 samples, 2.66%)</title><rect x="85" y="196" width="31" height="15" fill="rgb(254,130,29)"/><text x="88.00" y="206.50">_d..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.27%)</title><rect x="113" y="212" width="3" height="15" fill="rgb(239,14,26)"/><text x="116.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.27%)</title><rect x="113" y="228" width="3" height="15" fill="rgb(236,46,44)"/><text x="116.00" y="238.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.27%)</title><rect x="116" y="148" width="3" height="15" fill="rgb(219,187,18)"/><text x="119.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:177) (1 samples, 0.27%)</title><rect x="116" y="164" width="3" height="15" fill="rgb(249,152,34)"/><text x="119.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.27%)</title><rect x="116" y="180" width="3" height="15" fill="rgb(238,189,51)"/><text x="119.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.27%)</title><rect x="119" y="180" width="3" height="15" fill="rgb(218,112,11)"/><text x="122.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.27%)</title><rect x="119" y="196" width="3" height="15" fill="rgb(222,112,45)"/><text x="122.00" y="206.50"></text></g><g><title>0x7f274411a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="126" y="356" width="3" height="15" fill="rgb(229,14,6)"/><text x="129.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.27%)</title><rect x="126" y="372" width="3" height="15" fill="rgb(231,19,16)"/><text x="129.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.27%)</title><rect x="126" y="388" width="3" height="15" fill="rgb(221,229,28)"/><text x="129.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.27%)</title><rect x="126" y="404" width="3" height="15" fill="rgb(207,70,44)"/><text x="129.00" y="414.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (4 samples, 1.06%)</title><rect x="119" y="164" width="13" height="15" fill="rgb(218,76,41)"/><text x="122.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.80%)</title><rect x="122" y="180" width="10" height="15" fill="rgb(238,154,23)"/><text x="125.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.80%)</title><rect x="122" y="196" width="10" height="15" fill="rgb(221,112,18)"/><text x="125.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.80%)</title><rect x="122" y="212" width="10" height="15" fill="rgb(213,207,7)"/><text x="125.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.80%)</title><rect x="122" y="228" width="10" height="15" fill="rgb(218,37,39)"/><text x="125.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.53%)</title><rect x="126" y="244" width="6" height="15" fill="rgb(233,143,2)"/><text x="129.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.53%)</title><rect x="126" y="260" width="6" height="15" fill="rgb(237,224,48)"/><text x="129.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.53%)</title><rect x="126" y="276" width="6" height="15" fill="rgb(253,13,54)"/><text x="129.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (2 samples, 0.53%)</title><rect x="126" y="292" width="6" height="15" fill="rgb(218,43,36)"/><text x="129.00" y="302.50"></text></g><g><title>0x7f274410cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="126" y="308" width="6" height="15" fill="rgb(233,192,7)"/><text x="129.00" y="318.50"></text></g><g><title>0x7f274410bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="126" y="324" width="6" height="15" fill="rgb(247,128,21)"/><text x="129.00" y="334.50"></text></g><g><title>0x7f274411b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="126" y="340" width="6" height="15" fill="rgb(241,112,11)"/><text x="129.00" y="350.50"></text></g><g><title>0x7f274411a7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="129" y="356" width="3" height="15" fill="rgb(221,178,30)"/><text x="132.00" y="366.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.27%)</title><rect x="138" y="180" width="3" height="15" fill="rgb(238,108,7)"/><text x="141.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (2 samples, 0.53%)</title><rect x="141" y="180" width="7" height="15" fill="rgb(216,221,32)"/><text x="144.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.27%)</title><rect x="154" y="196" width="3" height="15" fill="rgb(234,52,17)"/><text x="157.00" y="206.50"></text></g><g><title>_qsize (queue.py:208) (1 samples, 0.27%)</title><rect x="157" y="212" width="3" height="15" fill="rgb(239,94,52)"/><text x="160.00" y="222.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.53%)</title><rect x="157" y="196" width="6" height="15" fill="rgb(218,181,28)"/><text x="160.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.27%)</title><rect x="160" y="212" width="3" height="15" fill="rgb(216,52,20)"/><text x="163.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (6 samples, 1.60%)</title><rect x="148" y="180" width="18" height="15" fill="rgb(220,170,7)"/><text x="151.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.27%)</title><rect x="163" y="196" width="3" height="15" fill="rgb(233,217,52)"/><text x="166.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:781) (1 samples, 0.27%)</title><rect x="176" y="196" width="3" height="15" fill="rgb(228,21,53)"/><text x="179.00" y="206.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.27%)</title><rect x="185" y="228" width="3" height="15" fill="rgb(230,168,11)"/><text x="188.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.53%)</title><rect x="188" y="228" width="7" height="15" fill="rgb(238,161,29)"/><text x="191.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.27%)</title><rect x="195" y="228" width="3" height="15" fill="rgb(210,196,36)"/><text x="198.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.27%)</title><rect x="198" y="228" width="3" height="15" fill="rgb(223,61,39)"/><text x="201.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (12 samples, 3.19%)</title><rect x="166" y="180" width="38" height="15" fill="rgb(227,162,13)"/><text x="169.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (8 samples, 2.13%)</title><rect x="179" y="196" width="25" height="15" fill="rgb(226,210,21)"/><text x="182.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py:308) (7 samples, 1.86%)</title><rect x="182" y="212" width="22" height="15" fill="rgb(254,180,18)"/><text x="185.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.27%)</title><rect x="201" y="228" width="3" height="15" fill="rgb(221,95,48)"/><text x="204.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:810) (1 samples, 0.27%)</title><rect x="204" y="180" width="3" height="15" fill="rgb(208,69,31)"/><text x="207.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.27%)</title><rect x="207" y="180" width="3" height="15" fill="rgb(248,151,24)"/><text x="210.00" y="190.50"></text></g><g><title>0x7f276a6de74d (libc-2.29.so) (1 samples, 0.27%)</title><rect x="207" y="196" width="3" height="15" fill="rgb(215,40,25)"/><text x="210.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.53%)</title><rect x="210" y="180" width="7" height="15" fill="rgb(234,64,19)"/><text x="213.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.27%)</title><rect x="217" y="180" width="3" height="15" fill="rgb(242,182,35)"/><text x="220.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.53%)</title><rect x="223" y="212" width="6" height="15" fill="rgb(236,90,26)"/><text x="226.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (4 samples, 1.06%)</title><rect x="220" y="196" width="12" height="15" fill="rgb(239,133,15)"/><text x="223.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.27%)</title><rect x="229" y="212" width="3" height="15" fill="rgb(236,86,41)"/><text x="232.00" y="222.50"></text></g><g><title>0x7f276a6e9134 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="251" y="244" width="3" height="15" fill="rgb(237,32,39)"/><text x="254.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (8 samples, 2.13%)</title><rect x="232" y="212" width="25" height="15" fill="rgb(206,132,27)"/><text x="235.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (5 samples, 1.33%)</title><rect x="242" y="228" width="15" height="15" fill="rgb(248,155,16)"/><text x="245.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.27%)</title><rect x="254" y="244" width="3" height="15" fill="rgb(250,4,14)"/><text x="257.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.27%)</title><rect x="257" y="212" width="4" height="15" fill="rgb(249,23,53)"/><text x="260.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (14 samples, 3.72%)</title><rect x="220" y="180" width="44" height="15" fill="rgb(253,10,29)"/><text x="223.00" y="190.50">disp..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (10 samples, 2.66%)</title><rect x="232" y="196" width="32" height="15" fill="rgb(229,113,27)"/><text x="235.00" y="206.50">ge..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.27%)</title><rect x="261" y="212" width="3" height="15" fill="rgb(216,15,23)"/><text x="264.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.53%)</title><rect x="264" y="180" width="6" height="15" fill="rgb(233,16,4)"/><text x="267.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.53%)</title><rect x="264" y="196" width="6" height="15" fill="rgb(209,110,6)"/><text x="267.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.27%)</title><rect x="270" y="196" width="3" height="15" fill="rgb(239,130,26)"/><text x="273.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.27%)</title><rect x="270" y="212" width="3" height="15" fill="rgb(242,56,2)"/><text x="273.00" y="222.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.27%)</title><rect x="273" y="196" width="3" height="15" fill="rgb(217,124,23)"/><text x="276.00" y="206.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.27%)</title><rect x="279" y="228" width="4" height="15" fill="rgb(226,27,16)"/><text x="282.00" y="238.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.53%)</title><rect x="279" y="212" width="7" height="15" fill="rgb(206,67,40)"/><text x="282.00" y="222.50"></text></g><g><title>_is_owned (threading.py:262) (1 samples, 0.27%)</title><rect x="283" y="228" width="3" height="15" fill="rgb(231,124,36)"/><text x="286.00" y="238.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.27%)</title><rect x="286" y="212" width="3" height="15" fill="rgb(233,135,53)"/><text x="289.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 2.13%)</title><rect x="270" y="180" width="25" height="15" fill="rgb(237,55,24)"/><text x="273.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (6 samples, 1.60%)</title><rect x="276" y="196" width="19" height="15" fill="rgb(228,156,29)"/><text x="279.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.53%)</title><rect x="289" y="212" width="6" height="15" fill="rgb(221,74,54)"/><text x="292.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (4 samples, 1.06%)</title><rect x="295" y="180" width="13" height="15" fill="rgb(209,4,45)"/><text x="298.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.27%)</title><rect x="305" y="196" width="3" height="15" fill="rgb(251,195,51)"/><text x="308.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.27%)</title><rect x="305" y="212" width="3" height="15" fill="rgb(249,214,40)"/><text x="308.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.27%)</title><rect x="305" y="228" width="3" height="15" fill="rgb(213,128,24)"/><text x="308.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.53%)</title><rect x="308" y="180" width="6" height="15" fill="rgb(229,102,4)"/><text x="311.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.27%)</title><rect x="317" y="196" width="3" height="15" fill="rgb(219,134,18)"/><text x="320.00" y="206.50"></text></g><g><title>0x7f276a6e9120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="320" y="212" width="3" height="15" fill="rgb(247,139,43)"/><text x="323.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.53%)</title><rect x="320" y="196" width="6" height="15" fill="rgb(229,17,26)"/><text x="323.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:329) (1 samples, 0.27%)</title><rect x="323" y="212" width="3" height="15" fill="rgb(233,111,47)"/><text x="326.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (2 samples, 0.53%)</title><rect x="326" y="196" width="7" height="15" fill="rgb(224,59,30)"/><text x="329.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.27%)</title><rect x="333" y="196" width="3" height="15" fill="rgb(250,35,53)"/><text x="336.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.53%)</title><rect x="358" y="260" width="6" height="15" fill="rgb(250,75,41)"/><text x="361.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (4 samples, 1.06%)</title><rect x="355" y="244" width="12" height="15" fill="rgb(249,131,24)"/><text x="358.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.27%)</title><rect x="364" y="260" width="3" height="15" fill="rgb(233,155,13)"/><text x="367.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.27%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(247,6,38)"/><text x="380.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.27%)</title><rect x="383" y="324" width="3" height="15" fill="rgb(244,98,6)"/><text x="386.00" y="334.50"></text></g><g><title>0x7f276a6e9120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="408" y="340" width="3" height="15" fill="rgb(222,4,41)"/><text x="411.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.80%)</title><rect x="411" y="340" width="10" height="15" fill="rgb(217,185,53)"/><text x="414.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (12 samples, 3.19%)</title><rect x="386" y="324" width="38" height="15" fill="rgb(236,10,7)"/><text x="389.00" y="334.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.27%)</title><rect x="421" y="340" width="3" height="15" fill="rgb(222,79,31)"/><text x="424.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (18 samples, 4.79%)</title><rect x="374" y="292" width="56" height="15" fill="rgb(237,85,6)"/><text x="377.00" y="302.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 4.26%)</title><rect x="380" y="308" width="50" height="15" fill="rgb(206,52,15)"/><text x="383.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.53%)</title><rect x="424" y="324" width="6" height="15" fill="rgb(229,139,11)"/><text x="427.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.53%)</title><rect x="424" y="340" width="6" height="15" fill="rgb(214,170,34)"/><text x="427.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.53%)</title><rect x="430" y="292" width="6" height="15" fill="rgb(234,216,54)"/><text x="433.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.27%)</title><rect x="433" y="308" width="3" height="15" fill="rgb(247,142,15)"/><text x="436.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.27%)</title><rect x="436" y="372" width="3" height="15" fill="rgb(209,164,32)"/><text x="439.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.27%)</title><rect x="436" y="388" width="3" height="15" fill="rgb(234,136,25)"/><text x="439.00" y="398.50"></text></g><g><title>0x7f274410bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="436" y="324" width="7" height="15" fill="rgb(232,45,25)"/><text x="439.00" y="334.50"></text></g><g><title>0x7f27440fbd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="436" y="340" width="7" height="15" fill="rgb(244,95,5)"/><text x="439.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.53%)</title><rect x="436" y="356" width="7" height="15" fill="rgb(216,139,36)"/><text x="439.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.27%)</title><rect x="439" y="372" width="4" height="15" fill="rgb(252,154,17)"/><text x="442.00" y="382.50"></text></g><g><title>0x7f274411b270 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="443" y="340" width="3" height="15" fill="rgb(236,137,23)"/><text x="446.00" y="350.50"></text></g><g><title>0x7f274411b2b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="446" y="340" width="3" height="15" fill="rgb(231,167,31)"/><text x="449.00" y="350.50"></text></g><g><title>0x7f274411a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="449" y="356" width="3" height="15" fill="rgb(207,214,22)"/><text x="452.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.27%)</title><rect x="449" y="372" width="3" height="15" fill="rgb(218,132,53)"/><text x="452.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.27%)</title><rect x="449" y="388" width="3" height="15" fill="rgb(249,209,19)"/><text x="452.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.27%)</title><rect x="449" y="404" width="3" height="15" fill="rgb(246,193,36)"/><text x="452.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.27%)</title><rect x="449" y="420" width="3" height="15" fill="rgb(206,43,45)"/><text x="452.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.27%)</title><rect x="449" y="436" width="3" height="15" fill="rgb(224,118,39)"/><text x="452.00" y="446.50"></text></g><g><title>0x7f274411a256 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(227,38,36)"/><text x="455.00" y="366.50"></text></g><g><title>0x7f27440fe5d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="455" y="388" width="3" height="15" fill="rgb(210,103,18)"/><text x="458.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.27%)</title><rect x="461" y="436" width="4" height="15" fill="rgb(247,218,16)"/><text x="464.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.27%)</title><rect x="461" y="452" width="4" height="15" fill="rgb(230,186,9)"/><text x="464.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.27%)</title><rect x="461" y="468" width="4" height="15" fill="rgb(212,70,17)"/><text x="464.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.27%)</title><rect x="461" y="484" width="4" height="15" fill="rgb(225,81,48)"/><text x="464.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="461" y="500" width="4" height="15" fill="rgb(220,34,6)"/><text x="464.00" y="510.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.27%)</title><rect x="465" y="436" width="3" height="15" fill="rgb(213,171,23)"/><text x="468.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:663) (1 samples, 0.27%)</title><rect x="468" y="436" width="3" height="15" fill="rgb(225,170,37)"/><text x="471.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.27%)</title><rect x="471" y="436" width="3" height="15" fill="rgb(243,17,4)"/><text x="474.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:669) (1 samples, 0.27%)</title><rect x="474" y="436" width="3" height="15" fill="rgb(216,81,22)"/><text x="477.00" y="446.50"></text></g><g><title>0x7f27440fed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.13%)</title><rect x="455" y="372" width="25" height="15" fill="rgb(254,31,32)"/><text x="458.00" y="382.50">0..</text></g><g><title>0x7f27440fe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.86%)</title><rect x="458" y="388" width="22" height="15" fill="rgb(233,94,16)"/><text x="461.00" y="398.50">0..</text></g><g><title>0x7f27440f42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.86%)</title><rect x="458" y="404" width="22" height="15" fill="rgb(244,176,6)"/><text x="461.00" y="414.50">0..</text></g><g><title>array_getbuffer (buffer.c:782) (6 samples, 1.60%)</title><rect x="461" y="420" width="19" height="15" fill="rgb(253,182,14)"/><text x="464.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.27%)</title><rect x="477" y="436" width="3" height="15" fill="rgb(237,120,46)"/><text x="480.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.27%)</title><rect x="477" y="452" width="3" height="15" fill="rgb(231,26,43)"/><text x="480.00" y="462.50"></text></g><g><title>0x7f27440fede2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="480" y="372" width="3" height="15" fill="rgb(206,171,10)"/><text x="483.00" y="382.50"></text></g><g><title>0x7f274411a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.66%)</title><rect x="455" y="356" width="32" height="15" fill="rgb(233,211,18)"/><text x="458.00" y="366.50">0x..</text></g><g><title>0x7f27440fee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="483" y="372" width="4" height="15" fill="rgb(210,126,17)"/><text x="486.00" y="382.50"></text></g><g><title>0x7f27440f22bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="483" y="388" width="4" height="15" fill="rgb(246,112,22)"/><text x="486.00" y="398.50"></text></g><g><title>0x7f27440f1db9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="483" y="404" width="4" height="15" fill="rgb(216,50,54)"/><text x="486.00" y="414.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.27%)</title><rect x="490" y="388" width="3" height="15" fill="rgb(217,164,25)"/><text x="493.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.27%)</title><rect x="493" y="436" width="3" height="15" fill="rgb(245,86,15)"/><text x="496.00" y="446.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.53%)</title><rect x="493" y="388" width="6" height="15" fill="rgb(244,105,7)"/><text x="496.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (2 samples, 0.53%)</title><rect x="493" y="404" width="6" height="15" fill="rgb(242,75,35)"/><text x="496.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (2 samples, 0.53%)</title><rect x="493" y="420" width="6" height="15" fill="rgb(209,107,43)"/><text x="496.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.27%)</title><rect x="496" y="436" width="3" height="15" fill="rgb(238,204,40)"/><text x="499.00" y="446.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (5 samples, 1.33%)</title><rect x="487" y="372" width="15" height="15" fill="rgb(237,173,25)"/><text x="490.00" y="382.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.27%)</title><rect x="499" y="388" width="3" height="15" fill="rgb(232,15,15)"/><text x="502.00" y="398.50"></text></g><g><title>0x7f276a7a6df0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="499" y="404" width="3" height="15" fill="rgb(249,180,26)"/><text x="502.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.27%)</title><rect x="502" y="420" width="3" height="15" fill="rgb(210,80,44)"/><text x="505.00" y="430.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.27%)</title><rect x="502" y="436" width="3" height="15" fill="rgb(228,118,20)"/><text x="505.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.27%)</title><rect x="505" y="452" width="3" height="15" fill="rgb(229,171,38)"/><text x="508.00" y="462.50"></text></g><g><title>0x7f276a6ca21f (libc-2.29.so) (1 samples, 0.27%)</title><rect x="512" y="484" width="3" height="15" fill="rgb(233,38,16)"/><text x="515.00" y="494.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 1.06%)</title><rect x="505" y="436" width="13" height="15" fill="rgb(225,76,34)"/><text x="508.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (3 samples, 0.80%)</title><rect x="508" y="452" width="10" height="15" fill="rgb(213,174,47)"/><text x="511.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.80%)</title><rect x="508" y="468" width="10" height="15" fill="rgb(236,64,12)"/><text x="511.00" y="478.50"></text></g><g><title>0x7f276a6e9103 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="515" y="484" width="3" height="15" fill="rgb(233,223,27)"/><text x="518.00" y="494.50"></text></g><g><title>0x7f274411a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.93%)</title><rect x="487" y="356" width="34" height="15" fill="rgb(231,10,26)"/><text x="490.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.60%)</title><rect x="502" y="372" width="19" height="15" fill="rgb(237,219,50)"/><text x="505.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.60%)</title><rect x="502" y="388" width="19" height="15" fill="rgb(215,222,33)"/><text x="505.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (6 samples, 1.60%)</title><rect x="502" y="404" width="19" height="15" fill="rgb(216,27,11)"/><text x="505.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (5 samples, 1.33%)</title><rect x="505" y="420" width="16" height="15" fill="rgb(251,150,21)"/><text x="508.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:140) (1 samples, 0.27%)</title><rect x="518" y="436" width="3" height="15" fill="rgb(233,137,49)"/><text x="521.00" y="446.50"></text></g><g><title>0x7f274411a684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="521" y="356" width="3" height="15" fill="rgb(240,24,11)"/><text x="524.00" y="366.50"></text></g><g><title>0x7f274411a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.13%)</title><rect x="524" y="356" width="25" height="15" fill="rgb(235,201,43)"/><text x="527.00" y="366.50">0..</text></g><g><title>0x7f274411a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.33%)</title><rect x="549" y="356" width="16" height="15" fill="rgb(230,189,33)"/><text x="552.00" y="366.50"></text></g><g><title>0x7f274411a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="565" y="356" width="6" height="15" fill="rgb(247,105,49)"/><text x="568.00" y="366.50"></text></g><g><title>0x7f274411a6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.80%)</title><rect x="571" y="356" width="10" height="15" fill="rgb(214,139,42)"/><text x="574.00" y="366.50"></text></g><g><title>0x7f274411a6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="581" y="356" width="3" height="15" fill="rgb(217,98,10)"/><text x="584.00" y="366.50"></text></g><g><title>0x7f274411a6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="584" y="356" width="6" height="15" fill="rgb(228,132,39)"/><text x="587.00" y="366.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.53%)</title><rect x="584" y="372" width="6" height="15" fill="rgb(224,144,41)"/><text x="587.00" y="382.50"></text></g><g><title>0x7f274411a7a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="590" y="356" width="6" height="15" fill="rgb(253,198,5)"/><text x="593.00" y="366.50"></text></g><g><title>0x7f274411a7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="596" y="356" width="7" height="15" fill="rgb(253,177,1)"/><text x="599.00" y="366.50"></text></g><g><title>0x7f274411a8aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="603" y="356" width="3" height="15" fill="rgb(212,60,13)"/><text x="606.00" y="366.50"></text></g><g><title>0x7f274411b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (51 samples, 13.56%)</title><rect x="449" y="340" width="160" height="15" fill="rgb(225,32,20)"/><text x="452.00" y="350.50">0x7f274411b405 (skle..</text></g><g><title>0x7f274411ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="606" y="356" width="3" height="15" fill="rgb(216,37,48)"/><text x="609.00" y="366.50"></text></g><g><title>0x7f27440f25f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="606" y="372" width="3" height="15" fill="rgb(221,61,20)"/><text x="609.00" y="382.50"></text></g><g><title>0x7f27440f22bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="606" y="388" width="3" height="15" fill="rgb(232,146,15)"/><text x="609.00" y="398.50"></text></g><g><title>0x7f27440f1bad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="606" y="404" width="3" height="15" fill="rgb(208,166,14)"/><text x="609.00" y="414.50"></text></g><g><title>0x7f27440f01ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="609" y="356" width="3" height="15" fill="rgb(214,25,14)"/><text x="612.00" y="366.50"></text></g><g><title>0x7f274410bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (56 samples, 14.89%)</title><rect x="443" y="324" width="175" height="15" fill="rgb(237,208,4)"/><text x="446.00" y="334.50">0x7f274410bfa6 (sklear..</text></g><g><title>0x7f274411b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.80%)</title><rect x="609" y="340" width="9" height="15" fill="rgb(230,57,31)"/><text x="612.00" y="350.50"></text></g><g><title>0x7f27440f02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="612" y="356" width="6" height="15" fill="rgb(228,78,31)"/><text x="615.00" y="366.50"></text></g><g><title>0x7f27440ef4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="612" y="372" width="6" height="15" fill="rgb(254,180,11)"/><text x="615.00" y="382.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.80%)</title><rect x="618" y="340" width="10" height="15" fill="rgb(250,116,31)"/><text x="621.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.27%)</title><rect x="625" y="356" width="3" height="15" fill="rgb(254,170,0)"/><text x="628.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:121) (1 samples, 0.27%)</title><rect x="628" y="356" width="3" height="15" fill="rgb(206,137,47)"/><text x="631.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.27%)</title><rect x="631" y="372" width="3" height="15" fill="rgb(208,16,27)"/><text x="634.00" y="382.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.27%)</title><rect x="634" y="372" width="3" height="15" fill="rgb(205,106,26)"/><text x="637.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.80%)</title><rect x="631" y="356" width="9" height="15" fill="rgb(224,71,10)"/><text x="634.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.27%)</title><rect x="637" y="372" width="3" height="15" fill="rgb(211,6,3)"/><text x="640.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.27%)</title><rect x="640" y="356" width="3" height="15" fill="rgb(205,122,51)"/><text x="643.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.27%)</title><rect x="640" y="372" width="3" height="15" fill="rgb(227,149,53)"/><text x="643.00" y="382.50"></text></g><g><title>0x7f274410c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.66%)</title><rect x="618" y="324" width="32" height="15" fill="rgb(229,199,6)"/><text x="621.00" y="334.50">0x..</text></g><g><title>array_take (methods.c:145) (7 samples, 1.86%)</title><rect x="628" y="340" width="22" height="15" fill="rgb(228,214,26)"/><text x="631.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.53%)</title><rect x="643" y="356" width="7" height="15" fill="rgb(230,7,41)"/><text x="646.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.53%)</title><rect x="643" y="372" width="7" height="15" fill="rgb(213,212,47)"/><text x="646.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (2 samples, 0.53%)</title><rect x="643" y="388" width="7" height="15" fill="rgb(236,3,47)"/><text x="646.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.27%)</title><rect x="647" y="404" width="3" height="15" fill="rgb(252,211,45)"/><text x="650.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.27%)</title><rect x="647" y="420" width="3" height="15" fill="rgb(214,94,32)"/><text x="650.00" y="430.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.27%)</title><rect x="650" y="388" width="3" height="15" fill="rgb(223,198,31)"/><text x="653.00" y="398.50"></text></g><g><title>0x7f274410c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="650" y="324" width="6" height="15" fill="rgb(210,53,18)"/><text x="653.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.53%)</title><rect x="650" y="340" width="6" height="15" fill="rgb(233,63,15)"/><text x="653.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.53%)</title><rect x="650" y="356" width="6" height="15" fill="rgb(253,50,14)"/><text x="653.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.53%)</title><rect x="650" y="372" width="6" height="15" fill="rgb(222,141,41)"/><text x="653.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.27%)</title><rect x="653" y="388" width="3" height="15" fill="rgb(253,120,5)"/><text x="656.00" y="398.50"></text></g><g><title>0x7f276a6c8e60 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="653" y="404" width="3" height="15" fill="rgb(236,7,5)"/><text x="656.00" y="414.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (71 samples, 18.88%)</title><rect x="436" y="292" width="223" height="15" fill="rgb(251,109,0)"/><text x="439.00" y="302.50">predict (sklearn/tree/_classe..</text></g><g><title>0x7f274410cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (71 samples, 18.88%)</title><rect x="436" y="308" width="223" height="15" fill="rgb(243,31,45)"/><text x="439.00" y="318.50">0x7f274410cd2e (sklearn/tree/..</text></g><g><title>0x7f274410c18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="656" y="324" width="3" height="15" fill="rgb(232,135,52)"/><text x="659.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.27%)</title><rect x="659" y="292" width="3" height="15" fill="rgb(242,0,7)"/><text x="662.00" y="302.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (4 samples, 1.06%)</title><rect x="662" y="292" width="13" height="15" fill="rgb(209,172,52)"/><text x="665.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (3 samples, 0.80%)</title><rect x="665" y="308" width="10" height="15" fill="rgb(240,33,15)"/><text x="668.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (98 samples, 26.06%)</title><rect x="374" y="276" width="307" height="15" fill="rgb(234,119,25)"/><text x="377.00" y="286.50">_accumulate_prediction (sklearn/ensemble/..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.53%)</title><rect x="675" y="292" width="6" height="15" fill="rgb(207,194,38)"/><text x="678.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.27%)</title><rect x="678" y="308" width="3" height="15" fill="rgb(249,175,49)"/><text x="681.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:965) (1 samples, 0.27%)</title><rect x="678" y="324" width="3" height="15" fill="rgb(232,220,38)"/><text x="681.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.27%)</title><rect x="681" y="276" width="3" height="15" fill="rgb(231,52,51)"/><text x="684.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.27%)</title><rect x="684" y="292" width="3" height="15" fill="rgb(226,126,54)"/><text x="687.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.27%)</title><rect x="684" y="308" width="3" height="15" fill="rgb(210,24,20)"/><text x="687.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.27%)</title><rect x="687" y="308" width="4" height="15" fill="rgb(239,71,50)"/><text x="690.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.27%)</title><rect x="687" y="324" width="4" height="15" fill="rgb(242,36,28)"/><text x="690.00" y="334.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:237) (1 samples, 0.27%)</title><rect x="687" y="340" width="4" height="15" fill="rgb(205,91,21)"/><text x="690.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.27%)</title><rect x="691" y="324" width="3" height="15" fill="rgb(205,80,25)"/><text x="694.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.27%)</title><rect x="691" y="340" width="3" height="15" fill="rgb(246,8,20)"/><text x="694.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.27%)</title><rect x="691" y="356" width="3" height="15" fill="rgb(245,170,14)"/><text x="694.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:483) (1 samples, 0.27%)</title><rect x="691" y="372" width="3" height="15" fill="rgb(239,195,15)"/><text x="694.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:603) (1 samples, 0.27%)</title><rect x="694" y="388" width="3" height="15" fill="rgb(244,147,15)"/><text x="697.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h:229) (1 samples, 0.27%)</title><rect x="694" y="404" width="3" height="15" fill="rgb(249,115,36)"/><text x="697.00" y="414.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.53%)</title><rect x="694" y="340" width="6" height="15" fill="rgb(228,80,24)"/><text x="697.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.53%)</title><rect x="694" y="356" width="6" height="15" fill="rgb(244,101,41)"/><text x="697.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.53%)</title><rect x="694" y="372" width="6" height="15" fill="rgb(243,135,17)"/><text x="697.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.27%)</title><rect x="697" y="388" width="3" height="15" fill="rgb(231,116,3)"/><text x="700.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.27%)</title><rect x="697" y="404" width="3" height="15" fill="rgb(249,196,3)"/><text x="700.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.33%)</title><rect x="687" y="292" width="16" height="15" fill="rgb(240,99,1)"/><text x="690.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (4 samples, 1.06%)</title><rect x="691" y="308" width="12" height="15" fill="rgb(206,149,22)"/><text x="694.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (3 samples, 0.80%)</title><rect x="694" y="324" width="9" height="15" fill="rgb(253,229,54)"/><text x="697.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.27%)</title><rect x="700" y="340" width="3" height="15" fill="rgb(239,212,24)"/><text x="703.00" y="350.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="700" y="356" width="3" height="15" fill="rgb(205,149,41)"/><text x="703.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (7 samples, 1.86%)</title><rect x="684" y="276" width="22" height="15" fill="rgb(219,179,45)"/><text x="687.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.27%)</title><rect x="703" y="292" width="3" height="15" fill="rgb(230,73,0)"/><text x="706.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.27%)</title><rect x="703" y="308" width="3" height="15" fill="rgb(212,32,42)"/><text x="706.00" y="318.50"></text></g><g><title>0x7f276a6e9120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="703" y="324" width="3" height="15" fill="rgb(209,175,17)"/><text x="706.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.27%)</title><rect x="706" y="276" width="3" height="15" fill="rgb(226,35,2)"/><text x="709.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.27%)</title><rect x="709" y="276" width="3" height="15" fill="rgb(249,105,16)"/><text x="712.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.27%)</title><rect x="709" y="292" width="3" height="15" fill="rgb(241,38,4)"/><text x="712.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.27%)</title><rect x="709" y="308" width="3" height="15" fill="rgb(206,89,14)"/><text x="712.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (109 samples, 28.99%)</title><rect x="374" y="260" width="342" height="15" fill="rgb(217,149,27)"/><text x="377.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.27%)</title><rect x="712" y="276" width="4" height="15" fill="rgb(214,199,37)"/><text x="715.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.27%)</title><rect x="712" y="292" width="4" height="15" fill="rgb(230,33,33)"/><text x="715.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.27%)</title><rect x="712" y="308" width="4" height="15" fill="rgb(223,121,39)"/><text x="715.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.27%)</title><rect x="712" y="324" width="4" height="15" fill="rgb(225,94,27)"/><text x="715.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.27%)</title><rect x="712" y="340" width="4" height="15" fill="rgb(240,203,13)"/><text x="715.00" y="350.50"></text></g><g><title>0x7f276a6c8b87 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="712" y="356" width="4" height="15" fill="rgb(248,165,12)"/><text x="715.00" y="366.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (122 samples, 32.45%)</title><rect x="339" y="212" width="383" height="15" fill="rgb(230,182,42)"/><text x="342.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (120 samples, 31.91%)</title><rect x="345" y="228" width="377" height="15" fill="rgb(237,171,8)"/><text x="348.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (113 samples, 30.05%)</title><rect x="367" y="244" width="355" height="15" fill="rgb(247,113,7)"/><text x="370.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (2 samples, 0.53%)</title><rect x="716" y="260" width="6" height="15" fill="rgb(241,155,41)"/><text x="719.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.27%)</title><rect x="719" y="276" width="3" height="15" fill="rgb(228,56,8)"/><text x="722.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.27%)</title><rect x="728" y="228" width="3" height="15" fill="rgb(250,92,50)"/><text x="731.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.27%)</title><rect x="731" y="228" width="3" height="15" fill="rgb(222,37,52)"/><text x="734.00" y="238.50"></text></g><g><title>0x7f276a6de734 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="738" y="244" width="3" height="15" fill="rgb(231,105,29)"/><text x="741.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (195 samples, 51.86%)</title><rect x="132" y="164" width="612" height="15" fill="rgb(234,4,51)"/><text x="135.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (137 samples, 36.44%)</title><rect x="314" y="180" width="430" height="15" fill="rgb(213,171,11)"/><text x="317.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (130 samples, 34.57%)</title><rect x="336" y="196" width="408" height="15" fill="rgb(205,123,21)"/><text x="339.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (7 samples, 1.86%)</title><rect x="722" y="212" width="22" height="15" fill="rgb(250,5,8)"/><text x="725.00" y="222.50">a..</text></g><g><title>__call__ (joblib/parallel.py:338) (3 samples, 0.80%)</title><rect x="734" y="228" width="10" height="15" fill="rgb(231,66,3)"/><text x="737.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.27%)</title><rect x="741" y="244" width="3" height="15" fill="rgb(220,109,4)"/><text x="744.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="741" y="260" width="3" height="15" fill="rgb(239,194,14)"/><text x="744.00" y="270.50"></text></g><g><title>retrieve (joblib/parallel.py:895) (1 samples, 0.27%)</title><rect x="747" y="180" width="3" height="15" fill="rgb(206,78,6)"/><text x="750.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (203 samples, 53.99%)</title><rect x="119" y="148" width="637" height="15" fill="rgb(231,29,30)"/><text x="122.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (4 samples, 1.06%)</title><rect x="744" y="164" width="12" height="15" fill="rgb(240,154,27)"/><text x="747.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (2 samples, 0.53%)</title><rect x="750" y="180" width="6" height="15" fill="rgb(220,68,6)"/><text x="753.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:54) (205 samples, 54.52%)</title><rect x="116" y="52" width="644" height="15" fill="rgb(234,94,51)"/><text x="119.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:53) (205 samples, 54.52%)</title><rect x="116" y="68" width="644" height="15" fill="rgb(209,11,27)"/><text x="119.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (205 samples, 54.52%)</title><rect x="116" y="84" width="644" height="15" fill="rgb(243,44,42)"/><text x="119.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (205 samples, 54.52%)</title><rect x="116" y="100" width="644" height="15" fill="rgb(244,50,23)"/><text x="119.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (205 samples, 54.52%)</title><rect x="116" y="116" width="644" height="15" fill="rgb(246,25,35)"/><text x="119.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (205 samples, 54.52%)</title><rect x="116" y="132" width="644" height="15" fill="rgb(224,141,27)"/><text x="119.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.27%)</title><rect x="756" y="148" width="4" height="15" fill="rgb(249,50,16)"/><text x="759.00" y="158.50"></text></g><g><title>array_inplace_true_divide (number.c:840) (1 samples, 0.27%)</title><rect x="756" y="164" width="4" height="15" fill="rgb(234,19,20)"/><text x="759.00" y="174.50"></text></g><g><title>binop_should_defer (binop_override.h:97) (1 samples, 0.27%)</title><rect x="756" y="180" width="4" height="15" fill="rgb(218,127,9)"/><text x="759.00" y="190.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.27%)</title><rect x="760" y="116" width="3" height="15" fill="rgb(234,199,39)"/><text x="763.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.27%)</title><rect x="760" y="132" width="3" height="15" fill="rgb(235,65,50)"/><text x="763.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.27%)</title><rect x="760" y="148" width="3" height="15" fill="rgb(208,158,30)"/><text x="763.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.27%)</title><rect x="760" y="164" width="3" height="15" fill="rgb(213,10,12)"/><text x="763.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.27%)</title><rect x="760" y="180" width="3" height="15" fill="rgb(233,131,42)"/><text x="763.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.27%)</title><rect x="760" y="196" width="3" height="15" fill="rgb(215,219,29)"/><text x="763.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.27%)</title><rect x="760" y="212" width="3" height="15" fill="rgb(254,225,9)"/><text x="763.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:140) (1 samples, 0.27%)</title><rect x="760" y="228" width="3" height="15" fill="rgb(222,94,8)"/><text x="763.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.27%)</title><rect x="760" y="244" width="3" height="15" fill="rgb(207,149,23)"/><text x="763.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:146) (1 samples, 0.27%)</title><rect x="760" y="260" width="3" height="15" fill="rgb(208,145,20)"/><text x="763.00" y="270.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:36) (2 samples, 0.53%)</title><rect x="760" y="84" width="6" height="15" fill="rgb(219,183,20)"/><text x="763.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.53%)</title><rect x="760" y="100" width="6" height="15" fill="rgb(206,174,0)"/><text x="763.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.27%)</title><rect x="763" y="116" width="3" height="15" fill="rgb(232,150,15)"/><text x="766.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.27%)</title><rect x="763" y="132" width="3" height="15" fill="rgb(217,146,25)"/><text x="766.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.27%)</title><rect x="763" y="148" width="3" height="15" fill="rgb(217,127,47)"/><text x="766.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.27%)</title><rect x="763" y="164" width="3" height="15" fill="rgb(209,207,36)"/><text x="766.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.27%)</title><rect x="763" y="180" width="3" height="15" fill="rgb(229,18,17)"/><text x="766.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.27%)</title><rect x="763" y="196" width="3" height="15" fill="rgb(215,194,27)"/><text x="766.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="763" y="212" width="3" height="15" fill="rgb(222,208,50)"/><text x="766.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="763" y="228" width="3" height="15" fill="rgb(208,170,30)"/><text x="766.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="763" y="244" width="3" height="15" fill="rgb(224,128,6)"/><text x="766.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="763" y="260" width="3" height="15" fill="rgb(206,74,49)"/><text x="766.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="763" y="276" width="3" height="15" fill="rgb(208,142,5)"/><text x="766.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.27%)</title><rect x="763" y="292" width="3" height="15" fill="rgb(219,36,2)"/><text x="766.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.27%)</title><rect x="763" y="308" width="3" height="15" fill="rgb(229,178,33)"/><text x="766.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.27%)</title><rect x="763" y="324" width="3" height="15" fill="rgb(247,124,27)"/><text x="766.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.27%)</title><rect x="763" y="340" width="3" height="15" fill="rgb(210,218,18)"/><text x="766.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.27%)</title><rect x="763" y="356" width="3" height="15" fill="rgb(217,201,35)"/><text x="766.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.27%)</title><rect x="763" y="372" width="3" height="15" fill="rgb(209,117,44)"/><text x="766.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.27%)</title><rect x="763" y="388" width="3" height="15" fill="rgb(223,70,23)"/><text x="766.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.27%)</title><rect x="763" y="404" width="3" height="15" fill="rgb(238,202,42)"/><text x="766.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.27%)</title><rect x="763" y="420" width="3" height="15" fill="rgb(242,79,17)"/><text x="766.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.27%)</title><rect x="763" y="436" width="3" height="15" fill="rgb(234,214,15)"/><text x="766.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.27%)</title><rect x="763" y="452" width="3" height="15" fill="rgb(210,16,32)"/><text x="766.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.27%)</title><rect x="763" y="468" width="3" height="15" fill="rgb(231,173,5)"/><text x="766.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.27%)</title><rect x="763" y="484" width="3" height="15" fill="rgb(248,20,30)"/><text x="766.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py:187) (1 samples, 0.27%)</title><rect x="763" y="500" width="3" height="15" fill="rgb(233,193,43)"/><text x="766.00" y="510.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.27%)</title><rect x="763" y="516" width="3" height="15" fill="rgb(218,229,26)"/><text x="766.00" y="526.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.27%)</title><rect x="763" y="532" width="3" height="15" fill="rgb(237,137,23)"/><text x="766.00" y="542.50"></text></g><g><title>0x7f272b16154f (?) (1 samples, 0.27%)</title><rect x="766" y="244" width="3" height="15" fill="rgb(242,146,38)"/><text x="769.00" y="254.50"></text></g><g><title>0x7f272b16765e (?) (1 samples, 0.27%)</title><rect x="766" y="260" width="3" height="15" fill="rgb(245,163,43)"/><text x="769.00" y="270.50"></text></g><g><title>0x7f272b16750f (?) (1 samples, 0.27%)</title><rect x="766" y="276" width="3" height="15" fill="rgb(244,220,32)"/><text x="769.00" y="286.50"></text></g><g><title>0x7f272b16dd6c (?) (1 samples, 0.27%)</title><rect x="766" y="292" width="3" height="15" fill="rgb(239,216,20)"/><text x="769.00" y="302.50"></text></g><g><title>0x7f2734684cff (?) (1 samples, 0.27%)</title><rect x="766" y="308" width="3" height="15" fill="rgb(215,168,31)"/><text x="769.00" y="318.50"></text></g><g><title>0x7f272b15227c (?) (1 samples, 0.27%)</title><rect x="766" y="324" width="3" height="15" fill="rgb(209,103,14)"/><text x="769.00" y="334.50"></text></g><g><title>0x7f272b152090 (?) (1 samples, 0.27%)</title><rect x="766" y="340" width="3" height="15" fill="rgb(226,19,8)"/><text x="769.00" y="350.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:471) (1 samples, 0.27%)</title><rect x="769" y="516" width="3" height="15" fill="rgb(220,72,7)"/><text x="772.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (5 samples, 1.33%)</title><rect x="772" y="516" width="16" height="15" fill="rgb(244,126,7)"/><text x="775.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.27%)</title><rect x="785" y="532" width="3" height="15" fill="rgb(249,68,25)"/><text x="788.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (7 samples, 1.86%)</title><rect x="788" y="580" width="22" height="15" fill="rgb(238,196,1)"/><text x="791.00" y="590.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (2 samples, 0.53%)</title><rect x="810" y="580" width="6" height="15" fill="rgb(245,222,35)"/><text x="813.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (10 samples, 2.66%)</title><rect x="788" y="516" width="31" height="15" fill="rgb(224,161,48)"/><text x="791.00" y="526.50">Ru..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (10 samples, 2.66%)</title><rect x="788" y="532" width="31" height="15" fill="rgb(245,204,7)"/><text x="791.00" y="542.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (10 samples, 2.66%)</title><rect x="788" y="548" width="31" height="15" fill="rgb(219,48,32)"/><text x="791.00" y="558.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (10 samples, 2.66%)</title><rect x="788" y="564" width="31" height="15" fill="rgb(237,110,15)"/><text x="791.00" y="574.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (1 samples, 0.27%)</title><rect x="816" y="580" width="3" height="15" fill="rgb(206,213,6)"/><text x="819.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (2 samples, 0.53%)</title><rect x="819" y="516" width="6" height="15" fill="rgb(214,136,38)"/><text x="822.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (2 samples, 0.53%)</title><rect x="825" y="516" width="7" height="15" fill="rgb(226,156,42)"/><text x="828.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:61) (25 samples, 6.65%)</title><rect x="760" y="52" width="78" height="15" fill="rgb(242,182,23)"/><text x="763.00" y="62.50">&lt;module&gt; ..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:60) (25 samples, 6.65%)</title><rect x="760" y="68" width="78" height="15" fill="rgb(248,197,46)"/><text x="763.00" y="78.50">profile_p..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (23 samples, 6.12%)</title><rect x="766" y="84" width="72" height="15" fill="rgb(245,183,21)"/><text x="769.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (23 samples, 6.12%)</title><rect x="766" y="100" width="72" height="15" fill="rgb(233,6,27)"/><text x="769.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (23 samples, 6.12%)</title><rect x="766" y="116" width="72" height="15" fill="rgb(224,4,16)"/><text x="769.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (23 samples, 6.12%)</title><rect x="766" y="132" width="72" height="15" fill="rgb(230,65,14)"/><text x="769.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (23 samples, 6.12%)</title><rect x="766" y="148" width="72" height="15" fill="rgb(235,45,48)"/><text x="769.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (23 samples, 6.12%)</title><rect x="766" y="164" width="72" height="15" fill="rgb(207,89,28)"/><text x="769.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (23 samples, 6.12%)</title><rect x="766" y="180" width="72" height="15" fill="rgb(208,100,18)"/><text x="769.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (23 samples, 6.12%)</title><rect x="766" y="196" width="72" height="15" fill="rgb(226,199,12)"/><text x="769.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (23 samples, 6.12%)</title><rect x="766" y="212" width="72" height="15" fill="rgb(210,96,0)"/><text x="769.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (23 samples, 6.12%)</title><rect x="766" y="228" width="72" height="15" fill="rgb(220,156,27)"/><text x="769.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (22 samples, 5.85%)</title><rect x="769" y="244" width="69" height="15" fill="rgb(222,170,46)"/><text x="772.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (22 samples, 5.85%)</title><rect x="769" y="260" width="69" height="15" fill="rgb(229,23,5)"/><text x="772.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (22 samples, 5.85%)</title><rect x="769" y="276" width="69" height="15" fill="rgb(233,188,9)"/><text x="772.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (22 samples, 5.85%)</title><rect x="769" y="292" width="69" height="15" fill="rgb(251,151,25)"/><text x="772.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (22 samples, 5.85%)</title><rect x="769" y="308" width="69" height="15" fill="rgb(229,113,26)"/><text x="772.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (22 samples, 5.85%)</title><rect x="769" y="324" width="69" height="15" fill="rgb(248,39,17)"/><text x="772.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (22 samples, 5.85%)</title><rect x="769" y="340" width="69" height="15" fill="rgb(250,84,39)"/><text x="772.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (22 samples, 5.85%)</title><rect x="769" y="356" width="69" height="15" fill="rgb(246,39,49)"/><text x="772.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (22 samples, 5.85%)</title><rect x="769" y="372" width="69" height="15" fill="rgb(206,191,11)"/><text x="772.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (22 samples, 5.85%)</title><rect x="769" y="388" width="69" height="15" fill="rgb(240,164,25)"/><text x="772.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (22 samples, 5.85%)</title><rect x="769" y="404" width="69" height="15" fill="rgb(243,196,53)"/><text x="772.00" y="414.50">pybind1..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (22 samples, 5.85%)</title><rect x="769" y="420" width="69" height="15" fill="rgb(239,20,28)"/><text x="772.00" y="430.50">Runtime..</text></g><g><title>pybind11::array::size (numpy.h:619) (22 samples, 5.85%)</title><rect x="769" y="436" width="69" height="15" fill="rgb(230,220,19)"/><text x="772.00" y="446.50">pybind1..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (22 samples, 5.85%)</title><rect x="769" y="452" width="69" height="15" fill="rgb(238,12,53)"/><text x="772.00" y="462.50">std::ac..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (22 samples, 5.85%)</title><rect x="769" y="468" width="69" height="15" fill="rgb(206,115,3)"/><text x="772.00" y="478.50">GOMP_pa..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (22 samples, 5.85%)</title><rect x="769" y="484" width="69" height="15" fill="rgb(223,197,1)"/><text x="772.00" y="494.50">Runtime..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (22 samples, 5.85%)</title><rect x="769" y="500" width="69" height="15" fill="rgb(222,114,5)"/><text x="772.00" y="510.50">std::ve..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (2 samples, 0.53%)</title><rect x="832" y="516" width="6" height="15" fill="rgb(249,224,52)"/><text x="835.00" y="526.50"></text></g><g><title>0x7f272406e9a4 (?) (1 samples, 0.27%)</title><rect x="838" y="724" width="3" height="15" fill="rgb(244,144,17)"/><text x="841.00" y="734.50"></text></g><g><title>_dl_addr (libc-2.29.so) (1 samples, 0.27%)</title><rect x="838" y="740" width="3" height="15" fill="rgb(242,54,11)"/><text x="841.00" y="750.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:36) (2 samples, 0.53%)</title><rect x="838" y="84" width="6" height="15" fill="rgb(242,6,31)"/><text x="841.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.53%)</title><rect x="838" y="100" width="6" height="15" fill="rgb(231,98,26)"/><text x="841.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.53%)</title><rect x="838" y="116" width="6" height="15" fill="rgb(224,220,25)"/><text x="841.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.53%)</title><rect x="838" y="132" width="6" height="15" fill="rgb(233,178,49)"/><text x="841.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.53%)</title><rect x="838" y="148" width="6" height="15" fill="rgb(212,164,10)"/><text x="841.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.53%)</title><rect x="838" y="164" width="6" height="15" fill="rgb(243,126,48)"/><text x="841.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="838" y="180" width="6" height="15" fill="rgb(207,54,51)"/><text x="841.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="838" y="196" width="6" height="15" fill="rgb(235,30,25)"/><text x="841.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="838" y="212" width="6" height="15" fill="rgb(226,188,17)"/><text x="841.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="838" y="228" width="6" height="15" fill="rgb(251,74,8)"/><text x="841.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="838" y="244" width="6" height="15" fill="rgb(229,1,11)"/><text x="841.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.53%)</title><rect x="838" y="260" width="6" height="15" fill="rgb(213,59,53)"/><text x="841.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="838" y="276" width="6" height="15" fill="rgb(244,69,4)"/><text x="841.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="838" y="292" width="6" height="15" fill="rgb(220,97,15)"/><text x="841.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="838" y="308" width="6" height="15" fill="rgb(212,71,12)"/><text x="841.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="838" y="324" width="6" height="15" fill="rgb(239,141,47)"/><text x="841.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="838" y="340" width="6" height="15" fill="rgb(251,15,6)"/><text x="841.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.53%)</title><rect x="838" y="356" width="6" height="15" fill="rgb(248,126,54)"/><text x="841.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="838" y="372" width="6" height="15" fill="rgb(210,98,38)"/><text x="841.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="838" y="388" width="6" height="15" fill="rgb(253,222,24)"/><text x="841.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.53%)</title><rect x="838" y="404" width="6" height="15" fill="rgb(217,228,41)"/><text x="841.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.53%)</title><rect x="838" y="420" width="6" height="15" fill="rgb(232,116,39)"/><text x="841.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="838" y="436" width="6" height="15" fill="rgb(226,35,48)"/><text x="841.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.53%)</title><rect x="838" y="452" width="6" height="15" fill="rgb(236,199,17)"/><text x="841.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.53%)</title><rect x="838" y="468" width="6" height="15" fill="rgb(241,120,13)"/><text x="841.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.53%)</title><rect x="838" y="484" width="6" height="15" fill="rgb(211,91,48)"/><text x="841.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.53%)</title><rect x="838" y="500" width="6" height="15" fill="rgb(230,195,51)"/><text x="841.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.53%)</title><rect x="838" y="516" width="6" height="15" fill="rgb(246,0,24)"/><text x="841.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.53%)</title><rect x="838" y="532" width="6" height="15" fill="rgb(234,77,49)"/><text x="841.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.53%)</title><rect x="838" y="548" width="6" height="15" fill="rgb(220,81,33)"/><text x="841.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="564" width="6" height="15" fill="rgb(224,155,54)"/><text x="841.00" y="574.50"></text></g><g><title>0x7f276a950995 (libdl-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="580" width="6" height="15" fill="rgb(236,194,21)"/><text x="841.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="596" width="6" height="15" fill="rgb(254,88,39)"/><text x="841.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="612" width="6" height="15" fill="rgb(227,6,38)"/><text x="841.00" y="622.50"></text></g><g><title>0x7f276a950258 (libdl-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="628" width="6" height="15" fill="rgb(223,117,19)"/><text x="841.00" y="638.50"></text></g><g><title>0x7f276a99dd7a (ld-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="644" width="6" height="15" fill="rgb(215,168,5)"/><text x="841.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="660" width="6" height="15" fill="rgb(209,130,44)"/><text x="841.00" y="670.50"></text></g><g><title>0x7f276a99e473 (ld-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="676" width="6" height="15" fill="rgb(229,8,27)"/><text x="841.00" y="686.50"></text></g><g><title>0x7f276a99a6b9 (ld-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="692" width="6" height="15" fill="rgb(218,17,9)"/><text x="841.00" y="702.50"></text></g><g><title>0x7f276a99a5ba (ld-2.29.so) (2 samples, 0.53%)</title><rect x="838" y="708" width="6" height="15" fill="rgb(235,166,28)"/><text x="841.00" y="718.50"></text></g><g><title>__sti__$E (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.27%)</title><rect x="841" y="724" width="3" height="15" fill="rgb(249,183,6)"/><text x="844.00" y="734.50"></text></g><g><title>all (376 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,221,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:68) (112 samples, 29.79%)</title><rect x="838" y="52" width="352" height="15" fill="rgb(210,176,15)"/><text x="841.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:67) (112 samples, 29.79%)</title><rect x="838" y="68" width="352" height="15" fill="rgb(251,195,53)"/><text x="841.00" y="78.50">profile_ort (bench_RandomForestRegressor_defaul..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:37) (110 samples, 29.26%)</title><rect x="844" y="84" width="346" height="15" fill="rgb(225,34,39)"/><text x="847.00" y="94.50">setup_profile (bench_RandomForestRegressor_def..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py:31) (110 samples, 29.26%)</title><rect x="844" y="100" width="346" height="15" fill="rgb(220,47,26)"/><text x="847.00" y="110.50">profile (bench_RandomForestRegressor_default_m..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 29.26%)</title><rect x="844" y="116" width="346" height="15" fill="rgb(219,60,24)"/><text x="847.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (110 samples, 29.26%)</title><rect x="844" y="132" width="346" height="15" fill="rgb(234,97,54)"/><text x="847.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (110 samples, 29.26%)</title><rect x="844" y="148" width="346" height="15" fill="rgb(242,8,52)"/><text x="847.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (110 samples, 29.26%)</title><rect x="844" y="164" width="346" height="15" fill="rgb(206,8,23)"/><text x="847.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infe..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (110 samples, 29.26%)</title><rect x="844" y="180" width="346" height="15" fill="rgb(219,84,30)"/><text x="847.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (110 samples, 29.26%)</title><rect x="844" y="196" width="346" height="15" fill="rgb(223,180,43)"/><text x="847.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="212" width="346" height="15" fill="rgb(206,88,41)"/><text x="847.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntim..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="228" width="346" height="15" fill="rgb(207,148,49)"/><text x="847.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxru..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="244" width="346" height="15" fill="rgb(254,193,24)"/><text x="847.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="260" width="346" height="15" fill="rgb(213,39,49)"/><text x="847.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="276" width="346" height="15" fill="rgb(206,180,3)"/><text x="847.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntim..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="292" width="346" height="15" fill="rgb(230,67,51)"/><text x="847.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="308" width="346" height="15" fill="rgb(248,23,52)"/><text x="847.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxrunt..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="324" width="346" height="15" fill="rgb(222,39,12)"/><text x="847.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (110 samples, 29.26%)</title><rect x="844" y="340" width="346" height="15" fill="rgb(211,98,42)"/><text x="847.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;:..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 28.46%)</title><rect x="854" y="356" width="336" height="15" fill="rgb(247,118,4)"/><text x="857.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;..</text></g></g></svg>