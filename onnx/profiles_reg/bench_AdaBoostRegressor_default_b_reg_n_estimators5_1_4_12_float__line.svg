<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2086" onload="init(evt)" viewBox="0 0 1200 2086" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2086" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2069.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2069.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:11) (1 samples, 0.28%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(247,160,22)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(228,206,29)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(206,46,3)"/><text x="13.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(231,51,27)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(212,102,8)"/><text x="13.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(253,59,45)"/><text x="13.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(208,189,44)"/><text x="13.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(226,34,6)"/><text x="13.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor_pb2.py:1838) (1 samples, 0.28%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(241,61,33)"/><text x="13.00" y="718.50"></text></g><g><title>0x7f2dd8c422cd (?) (1 samples, 0.28%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(236,20,24)"/><text x="13.00" y="734.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(245,150,31)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(253,52,54)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.28%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(208,30,4)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.28%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(213,46,17)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(242,156,46)"/><text x="16.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.56%)</title><rect x="13" y="820" width="6" height="15" fill="rgb(252,127,3)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.56%)</title><rect x="13" y="836" width="6" height="15" fill="rgb(206,57,5)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.28%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(247,59,54)"/><text x="19.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.28%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(224,64,47)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.28%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(242,100,12)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.28%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(244,12,1)"/><text x="19.00" y="910.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.28%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(224,6,31)"/><text x="19.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:2) (4 samples, 1.12%)</title><rect x="10" y="148" width="13" height="15" fill="rgb(238,190,23)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="10" y="164" width="13" height="15" fill="rgb(231,23,24)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.12%)</title><rect x="10" y="180" width="13" height="15" fill="rgb(232,205,41)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="10" y="196" width="13" height="15" fill="rgb(222,189,44)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="10" y="212" width="13" height="15" fill="rgb(233,140,31)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="10" y="228" width="13" height="15" fill="rgb(207,93,42)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="10" y="244" width="13" height="15" fill="rgb(209,169,36)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="10" y="260" width="13" height="15" fill="rgb(221,62,7)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="10" y="276" width="13" height="15" fill="rgb(217,115,12)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.12%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(241,156,17)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(245,145,0)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(234,197,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(242,155,45)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(225,26,47)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(233,124,49)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.12%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(240,175,43)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(226,79,7)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(236,133,19)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(215,72,3)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(231,228,50)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(227,63,26)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.12%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(247,192,26)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.12%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(238,151,19)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.12%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(210,210,8)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.12%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(253,203,35)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.12%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(232,117,30)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.12%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(230,116,21)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.84%)</title><rect x="13" y="580" width="10" height="15" fill="rgb(207,20,18)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="13" y="596" width="10" height="15" fill="rgb(218,8,9)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.84%)</title><rect x="13" y="612" width="10" height="15" fill="rgb(242,102,5)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="13" y="628" width="10" height="15" fill="rgb(224,224,42)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="13" y="644" width="10" height="15" fill="rgb(232,0,23)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="13" y="660" width="10" height="15" fill="rgb(239,20,21)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="13" y="676" width="10" height="15" fill="rgb(209,88,45)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="13" y="692" width="10" height="15" fill="rgb(207,134,1)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="13" y="708" width="10" height="15" fill="rgb(208,14,34)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.84%)</title><rect x="13" y="724" width="10" height="15" fill="rgb(245,174,20)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="13" y="740" width="10" height="15" fill="rgb(211,119,54)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="13" y="756" width="10" height="15" fill="rgb(213,158,3)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="13" y="772" width="10" height="15" fill="rgb(254,222,49)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="13" y="788" width="10" height="15" fill="rgb(233,60,41)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="13" y="804" width="10" height="15" fill="rgb(235,144,5)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.28%)</title><rect x="19" y="820" width="4" height="15" fill="rgb(251,66,46)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(231,52,31)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(233,4,48)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(244,6,14)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(222,185,0)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(206,229,17)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.28%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(238,32,37)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(241,141,19)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(209,25,1)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(243,46,1)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(229,95,46)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(225,198,32)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.28%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(225,100,9)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(244,210,1)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="19" y="1044" width="4" height="15" fill="rgb(247,205,1)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="19" y="1060" width="4" height="15" fill="rgb(249,61,12)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="19" y="1076" width="4" height="15" fill="rgb(205,157,28)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="19" y="1092" width="4" height="15" fill="rgb(249,137,51)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.28%)</title><rect x="19" y="1108" width="4" height="15" fill="rgb(206,58,52)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="19" y="1124" width="4" height="15" fill="rgb(217,146,26)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="19" y="1140" width="4" height="15" fill="rgb(231,132,7)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="19" y="1156" width="4" height="15" fill="rgb(238,151,7)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="19" y="1172" width="4" height="15" fill="rgb(213,190,23)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="19" y="1188" width="4" height="15" fill="rgb(219,134,24)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py:29) (1 samples, 0.28%)</title><rect x="19" y="1204" width="4" height="15" fill="rgb(224,76,38)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="19" y="1220" width="4" height="15" fill="rgb(224,138,1)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="19" y="1236" width="4" height="15" fill="rgb(252,108,23)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="19" y="1252" width="4" height="15" fill="rgb(246,210,21)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="19" y="1268" width="4" height="15" fill="rgb(225,178,45)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="19" y="1284" width="4" height="15" fill="rgb(220,209,42)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (socket.py:91) (1 samples, 0.28%)</title><rect x="19" y="1300" width="4" height="15" fill="rgb(253,48,46)"/><text x="22.00" y="1310.50"></text></g><g><title>_convert (enum.py:660) (1 samples, 0.28%)</title><rect x="19" y="1316" width="4" height="15" fill="rgb(221,71,24)"/><text x="22.00" y="1326.50"></text></g><g><title>__call__ (enum.py:311) (1 samples, 0.28%)</title><rect x="19" y="1332" width="4" height="15" fill="rgb(241,41,22)"/><text x="22.00" y="1342.50"></text></g><g><title>_create_ (enum.py:423) (1 samples, 0.28%)</title><rect x="19" y="1348" width="4" height="15" fill="rgb(223,226,48)"/><text x="22.00" y="1358.50"></text></g><g><title>__new__ (enum.py:239) (1 samples, 0.28%)</title><rect x="19" y="1364" width="4" height="15" fill="rgb(232,184,40)"/><text x="22.00" y="1374.50"></text></g><g><title>__setattr__ (enum.py:386) (1 samples, 0.28%)</title><rect x="19" y="1380" width="4" height="15" fill="rgb(237,201,15)"/><text x="22.00" y="1390.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:4) (1 samples, 0.28%)</title><rect x="23" y="148" width="3" height="15" fill="rgb(242,204,22)"/><text x="26.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="164" width="3" height="15" fill="rgb(243,38,45)"/><text x="26.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="23" y="180" width="3" height="15" fill="rgb(225,26,4)"/><text x="26.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="196" width="3" height="15" fill="rgb(225,143,27)"/><text x="26.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="212" width="3" height="15" fill="rgb(220,113,12)"/><text x="26.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="228" width="3" height="15" fill="rgb(205,150,13)"/><text x="26.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="244" width="3" height="15" fill="rgb(215,23,53)"/><text x="26.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="260" width="3" height="15" fill="rgb(218,113,32)"/><text x="26.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="276" width="3" height="15" fill="rgb(235,220,21)"/><text x="26.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.28%)</title><rect x="23" y="292" width="3" height="15" fill="rgb(221,218,1)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="308" width="3" height="15" fill="rgb(250,229,32)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="324" width="3" height="15" fill="rgb(206,19,20)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="340" width="3" height="15" fill="rgb(221,158,38)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="356" width="3" height="15" fill="rgb(245,85,11)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="372" width="3" height="15" fill="rgb(241,44,37)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.28%)</title><rect x="23" y="388" width="3" height="15" fill="rgb(221,112,34)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="404" width="3" height="15" fill="rgb(228,229,3)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="420" width="3" height="15" fill="rgb(221,18,48)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="436" width="3" height="15" fill="rgb(221,9,7)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="452" width="3" height="15" fill="rgb(206,110,12)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="468" width="3" height="15" fill="rgb(249,113,19)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.28%)</title><rect x="23" y="484" width="3" height="15" fill="rgb(232,102,31)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="500" width="3" height="15" fill="rgb(220,40,53)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="516" width="3" height="15" fill="rgb(231,1,15)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(254,29,43)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="548" width="3" height="15" fill="rgb(252,32,42)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="564" width="3" height="15" fill="rgb(234,176,18)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.28%)</title><rect x="23" y="580" width="3" height="15" fill="rgb(222,224,53)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="596" width="3" height="15" fill="rgb(215,227,29)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="612" width="3" height="15" fill="rgb(237,171,8)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(216,165,25)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(206,169,51)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(228,153,20)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.28%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(226,119,14)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(246,90,12)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(230,24,48)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(231,141,29)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(222,18,14)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(215,221,32)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.28%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(239,136,22)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(254,74,4)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(214,72,39)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(248,3,5)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(232,10,53)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(209,153,6)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(254,114,25)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(209,162,51)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.28%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(205,2,25)"/><text x="26.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(250,88,30)"/><text x="26.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(211,119,0)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="23" y="948" width="3" height="15" fill="rgb(243,145,16)"/><text x="26.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(250,131,32)"/><text x="26.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(236,6,8)"/><text x="26.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="23" y="996" width="3" height="15" fill="rgb(208,212,52)"/><text x="26.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="23" y="1012" width="3" height="15" fill="rgb(254,175,29)"/><text x="26.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6743) (1 samples, 0.28%)</title><rect x="23" y="1028" width="3" height="15" fill="rgb(205,108,10)"/><text x="26.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.28%)</title><rect x="23" y="1044" width="3" height="15" fill="rgb(250,97,5)"/><text x="26.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.28%)</title><rect x="23" y="1060" width="3" height="15" fill="rgb(221,122,39)"/><text x="26.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.28%)</title><rect x="23" y="1076" width="3" height="15" fill="rgb(233,156,8)"/><text x="26.00" y="1086.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="23" y="1092" width="3" height="15" fill="rgb(241,208,4)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.28%)</title><rect x="26" y="244" width="3" height="15" fill="rgb(235,47,4)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="260" width="3" height="15" fill="rgb(229,129,42)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="276" width="3" height="15" fill="rgb(225,36,42)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="292" width="3" height="15" fill="rgb(251,29,23)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="308" width="3" height="15" fill="rgb(221,40,23)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="324" width="3" height="15" fill="rgb(227,168,16)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.28%)</title><rect x="26" y="340" width="3" height="15" fill="rgb(232,180,33)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="356" width="3" height="15" fill="rgb(220,76,48)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="26" y="372" width="3" height="15" fill="rgb(233,188,36)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="388" width="3" height="15" fill="rgb(237,202,19)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="404" width="3" height="15" fill="rgb(225,152,19)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="420" width="3" height="15" fill="rgb(217,218,17)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="436" width="3" height="15" fill="rgb(242,77,41)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="452" width="3" height="15" fill="rgb(218,84,32)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="468" width="3" height="15" fill="rgb(254,113,0)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.28%)</title><rect x="26" y="484" width="3" height="15" fill="rgb(244,208,13)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="500" width="3" height="15" fill="rgb(236,35,19)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="516" width="3" height="15" fill="rgb(253,223,51)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="532" width="3" height="15" fill="rgb(217,80,28)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="548" width="3" height="15" fill="rgb(206,221,23)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="564" width="3" height="15" fill="rgb(230,170,6)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.28%)</title><rect x="26" y="580" width="3" height="15" fill="rgb(249,168,0)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="596" width="3" height="15" fill="rgb(241,181,45)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="26" y="612" width="3" height="15" fill="rgb(208,193,47)"/><text x="29.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(225,194,27)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(212,214,14)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(210,78,34)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(242,2,12)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(235,64,39)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(238,200,11)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.28%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(234,99,2)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(237,63,52)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(212,150,9)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(244,144,19)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="788" width="3" height="15" fill="rgb(252,62,24)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="804" width="3" height="15" fill="rgb(241,50,47)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.28%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(224,113,49)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(236,115,0)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(224,226,34)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(242,218,39)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(221,50,52)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(248,33,25)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.28%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(230,170,47)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(216,188,54)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(214,123,3)"/><text x="29.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(231,182,20)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(205,190,20)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(211,180,6)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(212,99,0)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(229,63,18)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(242,120,44)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.28%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(209,204,40)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(240,197,50)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(235,35,50)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(207,0,49)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(211,184,4)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(254,191,1)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.28%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(210,190,4)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(205,157,2)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(227,157,19)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(212,187,31)"/><text x="29.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(240,222,51)"/><text x="29.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(249,98,6)"/><text x="29.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="26" y="1252" width="3" height="15" fill="rgb(214,155,14)"/><text x="29.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.28%)</title><rect x="29" y="1492" width="4" height="15" fill="rgb(240,138,2)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="1508" width="4" height="15" fill="rgb(219,11,39)"/><text x="32.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="1524" width="4" height="15" fill="rgb(212,161,40)"/><text x="32.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="1540" width="4" height="15" fill="rgb(220,122,27)"/><text x="32.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="1556" width="4" height="15" fill="rgb(211,8,17)"/><text x="32.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="1572" width="4" height="15" fill="rgb(208,36,18)"/><text x="32.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.28%)</title><rect x="29" y="1588" width="4" height="15" fill="rgb(223,38,46)"/><text x="32.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="1604" width="4" height="15" fill="rgb(210,208,14)"/><text x="32.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="1620" width="4" height="15" fill="rgb(242,14,5)"/><text x="32.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(228,225,17)"/><text x="32.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(227,111,39)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(205,56,46)"/><text x="32.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.28%)</title><rect x="29" y="1684" width="4" height="15" fill="rgb(217,7,52)"/><text x="32.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="1700" width="4" height="15" fill="rgb(241,121,21)"/><text x="32.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="1716" width="4" height="15" fill="rgb(213,93,26)"/><text x="32.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="1732" width="4" height="15" fill="rgb(208,5,11)"/><text x="32.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="1748" width="4" height="15" fill="rgb(251,177,19)"/><text x="32.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="1764" width="4" height="15" fill="rgb(222,186,11)"/><text x="32.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.28%)</title><rect x="29" y="1780" width="4" height="15" fill="rgb(231,157,3)"/><text x="32.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="1796" width="4" height="15" fill="rgb(236,95,53)"/><text x="32.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="1812" width="4" height="15" fill="rgb(241,226,48)"/><text x="32.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="1828" width="4" height="15" fill="rgb(227,173,14)"/><text x="32.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="1844" width="4" height="15" fill="rgb(205,99,3)"/><text x="32.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="1860" width="4" height="15" fill="rgb(205,106,0)"/><text x="32.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:2705) (1 samples, 0.28%)</title><rect x="29" y="1876" width="4" height="15" fill="rgb(220,128,41)"/><text x="32.00" y="1886.50"></text></g><g><title>ConnectionStyle (matplotlib/patches.py:3136) (1 samples, 0.28%)</title><rect x="29" y="1892" width="4" height="15" fill="rgb(211,87,33)"/><text x="32.00" y="1902.50"></text></g><g><title>_pprint_styles (matplotlib/patches.py:1886) (1 samples, 0.28%)</title><rect x="29" y="1908" width="4" height="15" fill="rgb(237,51,7)"/><text x="32.00" y="1918.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="29" y="1924" width="4" height="15" fill="rgb(241,82,16)"/><text x="32.00" y="1934.50"></text></g><g><title>0x7f2dea91314e (libc-2.29.so) (1 samples, 0.28%)</title><rect x="29" y="1940" width="4" height="15" fill="rgb(253,47,31)"/><text x="32.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.56%)</title><rect x="29" y="724" width="7" height="15" fill="rgb(205,155,8)"/><text x="32.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="740" width="7" height="15" fill="rgb(253,122,24)"/><text x="32.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="756" width="7" height="15" fill="rgb(222,193,22)"/><text x="32.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="772" width="7" height="15" fill="rgb(225,199,43)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="788" width="7" height="15" fill="rgb(251,81,42)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="804" width="7" height="15" fill="rgb(241,147,51)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.56%)</title><rect x="29" y="820" width="7" height="15" fill="rgb(248,16,33)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="836" width="7" height="15" fill="rgb(214,180,48)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="852" width="7" height="15" fill="rgb(221,90,3)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="868" width="7" height="15" fill="rgb(233,220,31)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="884" width="7" height="15" fill="rgb(214,193,51)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="900" width="7" height="15" fill="rgb(236,99,41)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.56%)</title><rect x="29" y="916" width="7" height="15" fill="rgb(247,27,30)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="932" width="7" height="15" fill="rgb(233,141,31)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="948" width="7" height="15" fill="rgb(220,104,37)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="964" width="7" height="15" fill="rgb(243,133,26)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="980" width="7" height="15" fill="rgb(211,173,34)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="996" width="7" height="15" fill="rgb(212,124,4)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.56%)</title><rect x="29" y="1012" width="7" height="15" fill="rgb(224,36,48)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="1028" width="7" height="15" fill="rgb(235,91,1)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="1044" width="7" height="15" fill="rgb(205,25,18)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="1060" width="7" height="15" fill="rgb(241,13,48)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="1076" width="7" height="15" fill="rgb(218,169,4)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="1092" width="7" height="15" fill="rgb(235,103,40)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.56%)</title><rect x="29" y="1108" width="7" height="15" fill="rgb(213,207,15)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="1124" width="7" height="15" fill="rgb(233,46,16)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="1140" width="7" height="15" fill="rgb(223,12,9)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="1156" width="7" height="15" fill="rgb(228,119,14)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="1172" width="7" height="15" fill="rgb(226,152,53)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="1188" width="7" height="15" fill="rgb(252,84,46)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.56%)</title><rect x="29" y="1204" width="7" height="15" fill="rgb(221,227,10)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="1220" width="7" height="15" fill="rgb(249,49,31)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="1236" width="7" height="15" fill="rgb(210,170,6)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="1252" width="7" height="15" fill="rgb(206,18,39)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="1268" width="7" height="15" fill="rgb(246,16,6)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="1284" width="7" height="15" fill="rgb(240,23,26)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.56%)</title><rect x="29" y="1300" width="7" height="15" fill="rgb(248,46,34)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="1316" width="7" height="15" fill="rgb(240,88,51)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="1332" width="7" height="15" fill="rgb(248,66,25)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="1348" width="7" height="15" fill="rgb(205,140,53)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="1364" width="7" height="15" fill="rgb(220,81,35)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="1380" width="7" height="15" fill="rgb(233,180,41)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.56%)</title><rect x="29" y="1396" width="7" height="15" fill="rgb(218,213,46)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="29" y="1412" width="7" height="15" fill="rgb(231,29,21)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="29" y="1428" width="7" height="15" fill="rgb(242,36,50)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="29" y="1444" width="7" height="15" fill="rgb(228,215,5)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="29" y="1460" width="7" height="15" fill="rgb(253,180,3)"/><text x="32.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="29" y="1476" width="7" height="15" fill="rgb(245,143,47)"/><text x="32.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.28%)</title><rect x="33" y="1492" width="3" height="15" fill="rgb(228,34,21)"/><text x="36.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(223,55,39)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="33" y="1524" width="3" height="15" fill="rgb(245,117,25)"/><text x="36.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(207,136,6)"/><text x="36.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(249,174,30)"/><text x="36.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(207,18,18)"/><text x="36.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(225,23,47)"/><text x="36.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(240,25,44)"/><text x="36.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(209,50,5)"/><text x="36.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.28%)</title><rect x="33" y="1636" width="3" height="15" fill="rgb(241,108,31)"/><text x="36.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="33" y="1652" width="3" height="15" fill="rgb(238,26,42)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1668" width="3" height="15" fill="rgb(246,15,51)"/><text x="36.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="1684" width="3" height="15" fill="rgb(226,133,51)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="1700" width="3" height="15" fill="rgb(228,44,9)"/><text x="36.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="1716" width="3" height="15" fill="rgb(246,146,54)"/><text x="36.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="1732" width="3" height="15" fill="rgb(208,153,33)"/><text x="36.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1748" width="3" height="15" fill="rgb(242,213,10)"/><text x="36.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.28%)</title><rect x="33" y="1764" width="3" height="15" fill="rgb(223,100,38)"/><text x="36.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="1780" width="3" height="15" fill="rgb(223,179,32)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="1796" width="3" height="15" fill="rgb(229,36,29)"/><text x="36.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="1812" width="3" height="15" fill="rgb(224,166,46)"/><text x="36.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="1828" width="3" height="15" fill="rgb(213,185,36)"/><text x="36.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1844" width="3" height="15" fill="rgb(217,215,31)"/><text x="36.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.28%)</title><rect x="33" y="1860" width="3" height="15" fill="rgb(206,173,40)"/><text x="36.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="33" y="1876" width="3" height="15" fill="rgb(209,85,36)"/><text x="36.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="33" y="1892" width="3" height="15" fill="rgb(215,162,41)"/><text x="36.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="33" y="1908" width="3" height="15" fill="rgb(219,46,28)"/><text x="36.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="33" y="1924" width="3" height="15" fill="rgb(211,95,29)"/><text x="36.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="33" y="1940" width="3" height="15" fill="rgb(237,205,40)"/><text x="36.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.28%)</title><rect x="33" y="1956" width="3" height="15" fill="rgb(208,141,28)"/><text x="36.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6534) (1 samples, 0.28%)</title><rect x="33" y="1972" width="3" height="15" fill="rgb(207,218,52)"/><text x="36.00" y="1982.50"></text></g><g><title>setParseAction (pyparsing.py:1555) (1 samples, 0.28%)</title><rect x="33" y="1988" width="3" height="15" fill="rgb(222,22,33)"/><text x="36.00" y="1998.50"></text></g><g><title>_trim_arity (pyparsing.py:1308) (1 samples, 0.28%)</title><rect x="33" y="2004" width="3" height="15" fill="rgb(227,183,13)"/><text x="36.00" y="2014.50"></text></g><g><title>extract_stack (pyparsing.py:1293) (1 samples, 0.28%)</title><rect x="33" y="2020" width="3" height="15" fill="rgb(246,99,12)"/><text x="36.00" y="2030.50"></text></g><g><title>__getitem__ (traceback.py:273) (1 samples, 0.28%)</title><rect x="33" y="2036" width="3" height="15" fill="rgb(229,14,32)"/><text x="36.00" y="2046.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.84%)</title><rect x="29" y="436" width="10" height="15" fill="rgb(206,59,32)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="29" y="452" width="10" height="15" fill="rgb(254,44,12)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="29" y="468" width="10" height="15" fill="rgb(212,59,42)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="29" y="484" width="10" height="15" fill="rgb(212,31,7)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="29" y="500" width="10" height="15" fill="rgb(211,136,18)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="29" y="516" width="10" height="15" fill="rgb(205,2,30)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.84%)</title><rect x="29" y="532" width="10" height="15" fill="rgb(216,69,8)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="29" y="548" width="10" height="15" fill="rgb(234,168,6)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="29" y="564" width="10" height="15" fill="rgb(243,39,31)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="29" y="580" width="10" height="15" fill="rgb(252,107,45)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="29" y="596" width="10" height="15" fill="rgb(210,227,25)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="29" y="612" width="10" height="15" fill="rgb(211,1,11)"/><text x="32.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.84%)</title><rect x="29" y="628" width="10" height="15" fill="rgb(220,171,44)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.84%)</title><rect x="29" y="644" width="10" height="15" fill="rgb(207,88,12)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.84%)</title><rect x="29" y="660" width="10" height="15" fill="rgb(207,173,11)"/><text x="32.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.84%)</title><rect x="29" y="676" width="10" height="15" fill="rgb(228,157,13)"/><text x="32.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.84%)</title><rect x="29" y="692" width="10" height="15" fill="rgb(248,32,14)"/><text x="32.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.84%)</title><rect x="29" y="708" width="10" height="15" fill="rgb(234,196,24)"/><text x="32.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.28%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(234,168,1)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(246,190,43)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(209,34,50)"/><text x="39.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(214,154,5)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(230,41,45)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(238,28,34)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(218,2,28)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(218,64,34)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(248,18,40)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:7) (1 samples, 0.28%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(241,223,47)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(243,48,15)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(226,212,23)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(221,82,9)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(221,174,35)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(222,148,54)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py:54) (1 samples, 0.28%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(209,136,7)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(243,151,10)"/><text x="39.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(239,223,31)"/><text x="39.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(223,132,13)"/><text x="39.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(214,225,52)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(252,227,48)"/><text x="39.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/base.py:669) (1 samples, 0.28%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(241,56,0)"/><text x="39.00" y="1070.50"></text></g><g><title>IndexOpsMixin (pandas/core/base.py:1617) (1 samples, 0.28%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(240,206,30)"/><text x="39.00" y="1086.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.28%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(234,224,14)"/><text x="39.00" y="1102.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.28%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(223,119,21)"/><text x="39.00" y="1118.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(223,73,48)"/><text x="39.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(232,122,18)"/><text x="39.00" y="1150.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.28%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(242,115,34)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(242,105,21)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(252,168,17)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(223,68,53)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(226,111,31)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(246,206,21)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.28%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(212,219,52)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(219,224,12)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(222,107,40)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(248,134,40)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(239,66,45)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(234,28,51)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.28%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(244,181,10)"/><text x="42.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.28%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(248,63,33)"/><text x="42.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.28%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(214,59,22)"/><text x="42.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.28%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(246,33,29)"/><text x="42.00" y="1358.50"></text></g><g><title>getblock (inspect.py:941) (1 samples, 0.28%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(220,37,15)"/><text x="42.00" y="1374.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:4) (11 samples, 3.07%)</title><rect x="10" y="52" width="36" height="15" fill="rgb(221,11,39)"/><text x="13.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 3.07%)</title><rect x="10" y="68" width="36" height="15" fill="rgb(226,212,5)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 3.07%)</title><rect x="10" y="84" width="36" height="15" fill="rgb(225,73,16)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 3.07%)</title><rect x="10" y="100" width="36" height="15" fill="rgb(245,14,2)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 3.07%)</title><rect x="10" y="116" width="36" height="15" fill="rgb(215,127,19)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 3.07%)</title><rect x="10" y="132" width="36" height="15" fill="rgb(212,36,21)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py:7) (6 samples, 1.68%)</title><rect x="26" y="148" width="20" height="15" fill="rgb(215,137,11)"/><text x="29.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.68%)</title><rect x="26" y="164" width="20" height="15" fill="rgb(236,117,22)"/><text x="29.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.68%)</title><rect x="26" y="180" width="20" height="15" fill="rgb(217,10,8)"/><text x="29.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.68%)</title><rect x="26" y="196" width="20" height="15" fill="rgb(238,119,34)"/><text x="29.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.68%)</title><rect x="26" y="212" width="20" height="15" fill="rgb(234,227,36)"/><text x="29.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.68%)</title><rect x="26" y="228" width="20" height="15" fill="rgb(207,71,42)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 1.40%)</title><rect x="29" y="244" width="17" height="15" fill="rgb(232,171,5)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.40%)</title><rect x="29" y="260" width="17" height="15" fill="rgb(212,159,18)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.40%)</title><rect x="29" y="276" width="17" height="15" fill="rgb(221,169,41)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.40%)</title><rect x="29" y="292" width="17" height="15" fill="rgb(222,84,26)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.40%)</title><rect x="29" y="308" width="17" height="15" fill="rgb(250,106,12)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.40%)</title><rect x="29" y="324" width="17" height="15" fill="rgb(235,8,35)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.40%)</title><rect x="29" y="340" width="17" height="15" fill="rgb(211,85,16)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.40%)</title><rect x="29" y="356" width="17" height="15" fill="rgb(239,4,52)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.40%)</title><rect x="29" y="372" width="17" height="15" fill="rgb(206,91,8)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.40%)</title><rect x="29" y="388" width="17" height="15" fill="rgb(245,188,4)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.40%)</title><rect x="29" y="404" width="17" height="15" fill="rgb(232,179,19)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.40%)</title><rect x="29" y="420" width="17" height="15" fill="rgb(218,21,32)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.56%)</title><rect x="39" y="436" width="7" height="15" fill="rgb(222,62,42)"/><text x="42.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="452" width="7" height="15" fill="rgb(253,153,29)"/><text x="42.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="39" y="468" width="7" height="15" fill="rgb(214,134,32)"/><text x="42.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="484" width="7" height="15" fill="rgb(205,182,30)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="500" width="7" height="15" fill="rgb(240,98,6)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="516" width="7" height="15" fill="rgb(250,211,17)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="532" width="7" height="15" fill="rgb(237,116,47)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="548" width="7" height="15" fill="rgb(206,202,5)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="564" width="7" height="15" fill="rgb(231,107,11)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.56%)</title><rect x="39" y="580" width="7" height="15" fill="rgb(231,191,49)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="596" width="7" height="15" fill="rgb(229,80,35)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="612" width="7" height="15" fill="rgb(242,184,43)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="628" width="7" height="15" fill="rgb(214,199,34)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="644" width="7" height="15" fill="rgb(228,3,0)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="660" width="7" height="15" fill="rgb(209,224,30)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.56%)</title><rect x="39" y="676" width="7" height="15" fill="rgb(219,201,2)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="692" width="7" height="15" fill="rgb(219,158,28)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="708" width="7" height="15" fill="rgb(239,214,31)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="724" width="7" height="15" fill="rgb(209,50,53)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="740" width="7" height="15" fill="rgb(235,161,13)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="756" width="7" height="15" fill="rgb(208,203,24)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.56%)</title><rect x="39" y="772" width="7" height="15" fill="rgb(221,39,11)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="788" width="7" height="15" fill="rgb(205,8,0)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="804" width="7" height="15" fill="rgb(209,70,8)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="820" width="7" height="15" fill="rgb(208,178,21)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="836" width="7" height="15" fill="rgb(222,180,1)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="852" width="7" height="15" fill="rgb(216,151,32)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.56%)</title><rect x="39" y="868" width="7" height="15" fill="rgb(227,189,21)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="884" width="7" height="15" fill="rgb(235,222,40)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.56%)</title><rect x="39" y="900" width="7" height="15" fill="rgb(208,23,11)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="916" width="7" height="15" fill="rgb(236,222,30)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="932" width="7" height="15" fill="rgb(222,142,52)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="948" width="7" height="15" fill="rgb(221,170,53)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="964" width="7" height="15" fill="rgb(216,174,49)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="980" width="7" height="15" fill="rgb(211,54,19)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="996" width="7" height="15" fill="rgb(249,141,16)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.56%)</title><rect x="39" y="1012" width="7" height="15" fill="rgb(245,88,26)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.56%)</title><rect x="39" y="1028" width="7" height="15" fill="rgb(233,118,4)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.56%)</title><rect x="39" y="1044" width="7" height="15" fill="rgb(251,222,45)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.56%)</title><rect x="39" y="1060" width="7" height="15" fill="rgb(226,5,21)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.56%)</title><rect x="39" y="1076" width="7" height="15" fill="rgb(230,198,49)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.56%)</title><rect x="39" y="1092" width="7" height="15" fill="rgb(235,201,10)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.28%)</title><rect x="42" y="1108" width="4" height="15" fill="rgb(234,181,14)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="42" y="1124" width="4" height="15" fill="rgb(229,154,11)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="42" y="1140" width="4" height="15" fill="rgb(241,26,41)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="42" y="1156" width="4" height="15" fill="rgb(216,219,10)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="42" y="1172" width="4" height="15" fill="rgb(209,168,14)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="42" y="1188" width="4" height="15" fill="rgb(237,61,37)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(238,55,46)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(230,115,47)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.28%)</title><rect x="42" y="1236" width="4" height="15" fill="rgb(234,67,31)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="42" y="1252" width="4" height="15" fill="rgb(242,95,42)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="42" y="1268" width="4" height="15" fill="rgb(243,69,1)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="42" y="1284" width="4" height="15" fill="rgb(231,155,42)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="42" y="1300" width="4" height="15" fill="rgb(220,116,47)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="42" y="1316" width="4" height="15" fill="rgb(239,49,9)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="42" y="1332" width="4" height="15" fill="rgb(209,114,32)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="42" y="1348" width="4" height="15" fill="rgb(232,81,37)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.28%)</title><rect x="42" y="1364" width="4" height="15" fill="rgb(213,92,27)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="42" y="1380" width="4" height="15" fill="rgb(219,40,25)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="42" y="1396" width="4" height="15" fill="rgb(234,194,49)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="42" y="1412" width="4" height="15" fill="rgb(211,188,25)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="42" y="1428" width="4" height="15" fill="rgb(249,100,28)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="42" y="1444" width="4" height="15" fill="rgb(214,212,9)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.28%)</title><rect x="42" y="1460" width="4" height="15" fill="rgb(249,129,41)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.28%)</title><rect x="42" y="1476" width="4" height="15" fill="rgb(221,222,50)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.28%)</title><rect x="42" y="1492" width="4" height="15" fill="rgb(235,51,16)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.28%)</title><rect x="42" y="1508" width="4" height="15" fill="rgb(225,132,50)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.28%)</title><rect x="42" y="1524" width="4" height="15" fill="rgb(248,44,15)"/><text x="45.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.28%)</title><rect x="42" y="1540" width="4" height="15" fill="rgb(250,37,10)"/><text x="45.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="42" y="1556" width="4" height="15" fill="rgb(229,120,11)"/><text x="45.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.28%)</title><rect x="42" y="1572" width="4" height="15" fill="rgb(235,202,22)"/><text x="45.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.28%)</title><rect x="42" y="1588" width="4" height="15" fill="rgb(244,197,1)"/><text x="45.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.28%)</title><rect x="42" y="1604" width="4" height="15" fill="rgb(226,73,21)"/><text x="45.00" y="1614.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="56" y="180" width="3" height="15" fill="rgb(246,228,34)"/><text x="59.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (2 samples, 0.56%)</title><rect x="59" y="180" width="7" height="15" fill="rgb(238,139,2)"/><text x="62.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.28%)</title><rect x="62" y="196" width="4" height="15" fill="rgb(231,56,33)"/><text x="65.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (5 samples, 1.40%)</title><rect x="56" y="148" width="16" height="15" fill="rgb(239,175,18)"/><text x="59.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (5 samples, 1.40%)</title><rect x="56" y="164" width="16" height="15" fill="rgb(234,69,23)"/><text x="59.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.56%)</title><rect x="66" y="180" width="6" height="15" fill="rgb(223,52,37)"/><text x="69.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.28%)</title><rect x="72" y="180" width="3" height="15" fill="rgb(254,177,4)"/><text x="75.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.28%)</title><rect x="75" y="180" width="4" height="15" fill="rgb(246,66,37)"/><text x="78.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.28%)</title><rect x="79" y="180" width="3" height="15" fill="rgb(238,12,30)"/><text x="82.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.28%)</title><rect x="82" y="180" width="3" height="15" fill="rgb(229,18,40)"/><text x="85.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:493) (1 samples, 0.28%)</title><rect x="82" y="196" width="3" height="15" fill="rgb(212,141,47)"/><text x="85.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.28%)</title><rect x="85" y="180" width="4" height="15" fill="rgb(210,103,24)"/><text x="88.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.28%)</title><rect x="85" y="196" width="4" height="15" fill="rgb(206,161,42)"/><text x="88.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.28%)</title><rect x="85" y="212" width="4" height="15" fill="rgb(240,214,28)"/><text x="88.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.56%)</title><rect x="89" y="196" width="6" height="15" fill="rgb(208,170,8)"/><text x="92.00" y="206.50"></text></g><g><title>0x7f2dea908b60 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="92" y="212" width="3" height="15" fill="rgb(251,214,28)"/><text x="95.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.12%)</title><rect x="95" y="196" width="13" height="15" fill="rgb(237,11,32)"/><text x="98.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.56%)</title><rect x="102" y="212" width="6" height="15" fill="rgb(238,135,27)"/><text x="105.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 1.96%)</title><rect x="89" y="180" width="23" height="15" fill="rgb(239,43,31)"/><text x="92.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.28%)</title><rect x="108" y="196" width="4" height="15" fill="rgb(249,194,21)"/><text x="111.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (13 samples, 3.63%)</title><rect x="72" y="148" width="43" height="15" fill="rgb(217,149,45)"/><text x="75.00" y="158.50">pred..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (13 samples, 3.63%)</title><rect x="72" y="164" width="43" height="15" fill="rgb(250,66,27)"/><text x="75.00" y="174.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.28%)</title><rect x="112" y="180" width="3" height="15" fill="rgb(230,37,18)"/><text x="115.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="122" y="196" width="3" height="15" fill="rgb(208,118,4)"/><text x="125.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="122" y="212" width="3" height="15" fill="rgb(228,11,5)"/><text x="125.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="122" y="228" width="3" height="15" fill="rgb(251,155,51)"/><text x="125.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 1.12%)</title><rect x="131" y="212" width="14" height="15" fill="rgb(238,102,45)"/><text x="134.00" y="222.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.56%)</title><rect x="138" y="228" width="7" height="15" fill="rgb(252,229,10)"/><text x="141.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.28%)</title><rect x="145" y="212" width="3" height="15" fill="rgb(208,37,47)"/><text x="148.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.56%)</title><rect x="155" y="244" width="6" height="15" fill="rgb(225,43,23)"/><text x="158.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (9 samples, 2.51%)</title><rect x="151" y="228" width="30" height="15" fill="rgb(207,198,17)"/><text x="154.00" y="238.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (6 samples, 1.68%)</title><rect x="161" y="244" width="20" height="15" fill="rgb(235,203,52)"/><text x="164.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (19 samples, 5.31%)</title><rect x="125" y="196" width="62" height="15" fill="rgb(244,38,0)"/><text x="128.00" y="206.50">predic..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 3.35%)</title><rect x="148" y="212" width="39" height="15" fill="rgb(228,76,10)"/><text x="151.00" y="222.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.56%)</title><rect x="181" y="228" width="6" height="15" fill="rgb(213,12,33)"/><text x="184.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="184" y="244" width="3" height="15" fill="rgb(254,53,31)"/><text x="187.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.28%)</title><rect x="197" y="228" width="4" height="15" fill="rgb(215,15,0)"/><text x="200.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.28%)</title><rect x="201" y="228" width="3" height="15" fill="rgb(205,53,21)"/><text x="204.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.28%)</title><rect x="204" y="228" width="3" height="15" fill="rgb(246,223,9)"/><text x="207.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.28%)</title><rect x="204" y="244" width="3" height="15" fill="rgb(242,42,43)"/><text x="207.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.28%)</title><rect x="214" y="244" width="3" height="15" fill="rgb(226,205,5)"/><text x="217.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:482) (2 samples, 0.56%)</title><rect x="217" y="244" width="7" height="15" fill="rgb(251,131,25)"/><text x="220.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 1.68%)</title><rect x="207" y="228" width="20" height="15" fill="rgb(231,200,10)"/><text x="210.00" y="238.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.28%)</title><rect x="224" y="244" width="3" height="15" fill="rgb(218,109,36)"/><text x="227.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (3 samples, 0.84%)</title><rect x="227" y="244" width="10" height="15" fill="rgb(250,5,43)"/><text x="230.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (7 samples, 1.96%)</title><rect x="240" y="260" width="23" height="15" fill="rgb(213,206,38)"/><text x="243.00" y="270.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:504) (13 samples, 3.63%)</title><rect x="227" y="228" width="43" height="15" fill="rgb(227,119,54)"/><text x="230.00" y="238.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (10 samples, 2.79%)</title><rect x="237" y="244" width="33" height="15" fill="rgb(215,226,33)"/><text x="240.00" y="254.50">si..</text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.56%)</title><rect x="263" y="260" width="7" height="15" fill="rgb(223,154,11)"/><text x="266.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.28%)</title><rect x="273" y="244" width="3" height="15" fill="rgb(210,6,11)"/><text x="276.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (3 samples, 0.84%)</title><rect x="270" y="228" width="10" height="15" fill="rgb(253,29,49)"/><text x="273.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.28%)</title><rect x="276" y="244" width="4" height="15" fill="rgb(233,215,38)"/><text x="279.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.28%)</title><rect x="276" y="260" width="4" height="15" fill="rgb(241,155,40)"/><text x="279.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.28%)</title><rect x="276" y="276" width="4" height="15" fill="rgb(207,112,49)"/><text x="279.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.28%)</title><rect x="276" y="292" width="4" height="15" fill="rgb(219,181,26)"/><text x="279.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.56%)</title><rect x="280" y="228" width="6" height="15" fill="rgb(252,105,5)"/><text x="283.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.56%)</title><rect x="280" y="244" width="6" height="15" fill="rgb(215,179,29)"/><text x="283.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.56%)</title><rect x="280" y="260" width="6" height="15" fill="rgb(228,152,4)"/><text x="283.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.28%)</title><rect x="296" y="244" width="4" height="15" fill="rgb(212,51,8)"/><text x="299.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (6 samples, 1.68%)</title><rect x="286" y="228" width="20" height="15" fill="rgb(235,163,52)"/><text x="289.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.56%)</title><rect x="300" y="244" width="6" height="15" fill="rgb(229,76,44)"/><text x="303.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.28%)</title><rect x="306" y="228" width="3" height="15" fill="rgb(244,34,11)"/><text x="309.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.28%)</title><rect x="309" y="228" width="4" height="15" fill="rgb(221,41,45)"/><text x="312.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (7 samples, 1.96%)</title><rect x="333" y="260" width="23" height="15" fill="rgb(233,219,47)"/><text x="336.00" y="270.50">_..</text></g><g><title>0x7f2dea908e82 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="352" y="276" width="4" height="15" fill="rgb(210,13,35)"/><text x="355.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.28%)</title><rect x="356" y="260" width="3" height="15" fill="rgb(243,122,37)"/><text x="359.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (14 samples, 3.91%)</title><rect x="316" y="244" width="46" height="15" fill="rgb(235,152,45)"/><text x="319.00" y="254.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.28%)</title><rect x="359" y="260" width="3" height="15" fill="rgb(231,160,6)"/><text x="362.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.28%)</title><rect x="362" y="244" width="3" height="15" fill="rgb(249,71,53)"/><text x="365.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:13) (1 samples, 0.28%)</title><rect x="362" y="260" width="3" height="15" fill="rgb(205,51,4)"/><text x="365.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (17 samples, 4.75%)</title><rect x="313" y="228" width="56" height="15" fill="rgb(232,69,49)"/><text x="316.00" y="238.50">check..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:43) (1 samples, 0.28%)</title><rect x="365" y="244" width="4" height="15" fill="rgb(232,167,51)"/><text x="368.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.28%)</title><rect x="372" y="244" width="3" height="15" fill="rgb(253,132,26)"/><text x="375.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.28%)</title><rect x="375" y="244" width="4" height="15" fill="rgb(247,167,21)"/><text x="378.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.28%)</title><rect x="379" y="244" width="3" height="15" fill="rgb(219,102,8)"/><text x="382.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="379" y="260" width="3" height="15" fill="rgb(210,226,24)"/><text x="382.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:141) (1 samples, 0.28%)</title><rect x="398" y="276" width="4" height="15" fill="rgb(216,101,40)"/><text x="401.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 3.07%)</title><rect x="369" y="228" width="36" height="15" fill="rgb(248,56,14)"/><text x="372.00" y="238.50">che..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (7 samples, 1.96%)</title><rect x="382" y="244" width="23" height="15" fill="rgb(233,115,51)"/><text x="385.00" y="254.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 1.40%)</title><rect x="389" y="260" width="16" height="15" fill="rgb(207,183,54)"/><text x="392.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.28%)</title><rect x="402" y="276" width="3" height="15" fill="rgb(215,35,48)"/><text x="405.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (66 samples, 18.44%)</title><rect x="191" y="212" width="217" height="15" fill="rgb(225,8,41)"/><text x="194.00" y="222.50">_validate_X_predict (sklearn..</text></g><g><title>check_array (sklearn/utils/validation.py:574) (1 samples, 0.28%)</title><rect x="405" y="228" width="3" height="15" fill="rgb(210,149,47)"/><text x="408.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (70 samples, 19.55%)</title><rect x="187" y="196" width="231" height="15" fill="rgb(227,21,19)"/><text x="190.00" y="206.50">predict (sklearn/tree/_classes..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (3 samples, 0.84%)</title><rect x="408" y="212" width="10" height="15" fill="rgb(237,115,17)"/><text x="411.00" y="222.50"></text></g><g><title>0x7f2dc4336d2e (?) (1 samples, 0.28%)</title><rect x="418" y="212" width="4" height="15" fill="rgb(242,129,12)"/><text x="421.00" y="222.50"></text></g><g><title>0x7f2dc4335fa6 (?) (1 samples, 0.28%)</title><rect x="418" y="228" width="4" height="15" fill="rgb(249,65,27)"/><text x="421.00" y="238.50"></text></g><g><title>0x7f2dc4345405 (?) (1 samples, 0.28%)</title><rect x="418" y="244" width="4" height="15" fill="rgb(235,159,20)"/><text x="421.00" y="254.50"></text></g><g><title>0x7f2dc4344592 (?) (1 samples, 0.28%)</title><rect x="418" y="260" width="4" height="15" fill="rgb(252,86,13)"/><text x="421.00" y="270.50"></text></g><g><title>0x7f2dc4335f6c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="422" y="228" width="3" height="15" fill="rgb(217,52,18)"/><text x="425.00" y="238.50"></text></g><g><title>0x7f2dc4335f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="425" y="228" width="3" height="15" fill="rgb(248,99,32)"/><text x="428.00" y="238.50"></text></g><g><title>0x7f2dc43442a3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="428" y="260" width="3" height="15" fill="rgb(234,98,21)"/><text x="431.00" y="270.50"></text></g><g><title>0x7f2dc4328666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="431" y="292" width="4" height="15" fill="rgb(230,111,47)"/><text x="434.00" y="302.50"></text></g><g><title>0x7f2dc431e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="431" y="308" width="4" height="15" fill="rgb(253,85,38)"/><text x="434.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.28%)</title><rect x="431" y="324" width="4" height="15" fill="rgb(242,143,38)"/><text x="434.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.28%)</title><rect x="431" y="340" width="4" height="15" fill="rgb(208,81,53)"/><text x="434.00" y="350.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.28%)</title><rect x="431" y="356" width="4" height="15" fill="rgb(230,202,52)"/><text x="434.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="431" y="372" width="4" height="15" fill="rgb(247,150,45)"/><text x="434.00" y="382.50"></text></g><g><title>0x7f2dc4328d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="431" y="276" width="7" height="15" fill="rgb(222,60,45)"/><text x="434.00" y="286.50"></text></g><g><title>0x7f2dc43286fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="435" y="292" width="3" height="15" fill="rgb(235,91,39)"/><text x="438.00" y="302.50"></text></g><g><title>0x7f2dc43442df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.84%)</title><rect x="431" y="260" width="10" height="15" fill="rgb(228,47,45)"/><text x="434.00" y="270.50"></text></g><g><title>0x7f2dc4328e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="438" y="276" width="3" height="15" fill="rgb(248,81,24)"/><text x="441.00" y="286.50"></text></g><g><title>0x7f2dc431c2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="438" y="292" width="3" height="15" fill="rgb(238,8,4)"/><text x="441.00" y="302.50"></text></g><g><title>0x7f2dc431bdf8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="438" y="308" width="3" height="15" fill="rgb(205,189,2)"/><text x="441.00" y="318.50"></text></g><g><title>0x7f2dc43444b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="441" y="260" width="7" height="15" fill="rgb(233,103,7)"/><text x="444.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.28%)</title><rect x="448" y="276" width="3" height="15" fill="rgb(231,180,43)"/><text x="451.00" y="286.50"></text></g><g><title>0x7f2dea908e50 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="448" y="292" width="3" height="15" fill="rgb(223,49,37)"/><text x="451.00" y="302.50"></text></g><g><title>0x7f2dc4344592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.56%)</title><rect x="448" y="260" width="6" height="15" fill="rgb(219,57,51)"/><text x="451.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.28%)</title><rect x="451" y="276" width="3" height="15" fill="rgb(242,68,25)"/><text x="454.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="451" y="292" width="3" height="15" fill="rgb(224,191,27)"/><text x="454.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.28%)</title><rect x="451" y="308" width="3" height="15" fill="rgb(242,32,45)"/><text x="454.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.28%)</title><rect x="451" y="324" width="3" height="15" fill="rgb(240,121,25)"/><text x="454.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.28%)</title><rect x="451" y="340" width="3" height="15" fill="rgb(230,205,0)"/><text x="454.00" y="350.50"></text></g><g><title>0x7f2dea9131ef (libc-2.29.so) (1 samples, 0.28%)</title><rect x="451" y="356" width="3" height="15" fill="rgb(219,17,6)"/><text x="454.00" y="366.50"></text></g><g><title>0x7f2dc4335fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.51%)</title><rect x="428" y="228" width="30" height="15" fill="rgb(222,52,50)"/><text x="431.00" y="238.50">0x..</text></g><g><title>0x7f2dc4345405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.51%)</title><rect x="428" y="244" width="30" height="15" fill="rgb(212,28,32)"/><text x="431.00" y="254.50">0x..</text></g><g><title>0x7f2dc4344c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="454" y="260" width="4" height="15" fill="rgb(227,36,37)"/><text x="457.00" y="270.50"></text></g><g><title>0x7f2dc431c5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="454" y="276" width="4" height="15" fill="rgb(240,149,48)"/><text x="457.00" y="286.50"></text></g><g><title>0x7f2dc431c2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="454" y="292" width="4" height="15" fill="rgb(206,179,15)"/><text x="457.00" y="302.50"></text></g><g><title>0x7f2dc431b92e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="454" y="308" width="4" height="15" fill="rgb(240,162,42)"/><text x="457.00" y="318.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.28%)</title><rect x="458" y="260" width="3" height="15" fill="rgb(238,0,25)"/><text x="461.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.28%)</title><rect x="458" y="276" width="3" height="15" fill="rgb(253,217,22)"/><text x="461.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.28%)</title><rect x="458" y="292" width="3" height="15" fill="rgb(242,131,31)"/><text x="461.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.28%)</title><rect x="458" y="308" width="3" height="15" fill="rgb(214,98,43)"/><text x="461.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.28%)</title><rect x="458" y="324" width="3" height="15" fill="rgb(231,171,6)"/><text x="461.00" y="334.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.28%)</title><rect x="461" y="260" width="3" height="15" fill="rgb(232,34,31)"/><text x="464.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.28%)</title><rect x="461" y="276" width="3" height="15" fill="rgb(251,80,18)"/><text x="464.00" y="286.50"></text></g><g><title>0x7f2dc433605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.84%)</title><rect x="458" y="228" width="10" height="15" fill="rgb(221,12,20)"/><text x="461.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.84%)</title><rect x="458" y="244" width="10" height="15" fill="rgb(234,53,6)"/><text x="461.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.28%)</title><rect x="464" y="260" width="4" height="15" fill="rgb(249,97,17)"/><text x="467.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.28%)</title><rect x="464" y="276" width="4" height="15" fill="rgb(250,92,51)"/><text x="467.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.28%)</title><rect x="464" y="292" width="4" height="15" fill="rgb(226,86,24)"/><text x="467.00" y="302.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (16 samples, 4.47%)</title><rect x="418" y="196" width="53" height="15" fill="rgb(218,91,4)"/><text x="421.00" y="206.50">predi..</text></g><g><title>0x7f2dc4336d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.19%)</title><rect x="422" y="212" width="49" height="15" fill="rgb(249,150,26)"/><text x="425.00" y="222.50">0x7f..</text></g><g><title>0x7f2dc433655e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="468" y="228" width="3" height="15" fill="rgb(216,85,21)"/><text x="471.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (2 samples, 0.56%)</title><rect x="471" y="196" width="7" height="15" fill="rgb(231,110,3)"/><text x="474.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (111 samples, 31.01%)</title><rect x="115" y="180" width="366" height="15" fill="rgb(228,176,42)"/><text x="118.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.28%)</title><rect x="478" y="196" width="3" height="15" fill="rgb(234,113,54)"/><text x="481.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.28%)</title><rect x="478" y="212" width="3" height="15" fill="rgb(217,9,1)"/><text x="481.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.28%)</title><rect x="478" y="228" width="3" height="15" fill="rgb(229,156,10)"/><text x="481.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c:219) (1 samples, 0.28%)</title><rect x="478" y="244" width="3" height="15" fill="rgb(225,8,15)"/><text x="481.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.28%)</title><rect x="481" y="228" width="3" height="15" fill="rgb(211,28,18)"/><text x="484.00" y="238.50"></text></g><g><title>0x7f2dea908e63 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="481" y="244" width="3" height="15" fill="rgb(221,179,18)"/><text x="484.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.56%)</title><rect x="481" y="180" width="6" height="15" fill="rgb(254,126,14)"/><text x="484.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.56%)</title><rect x="481" y="196" width="6" height="15" fill="rgb(251,101,51)"/><text x="484.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (2 samples, 0.56%)</title><rect x="481" y="212" width="6" height="15" fill="rgb(233,128,8)"/><text x="484.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.28%)</title><rect x="484" y="228" width="3" height="15" fill="rgb(252,215,11)"/><text x="487.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.28%)</title><rect x="484" y="244" width="3" height="15" fill="rgb(210,74,4)"/><text x="487.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.28%)</title><rect x="484" y="260" width="3" height="15" fill="rgb(254,84,43)"/><text x="487.00" y="270.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (1 samples, 0.28%)</title><rect x="484" y="276" width="3" height="15" fill="rgb(241,214,7)"/><text x="487.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (114 samples, 31.84%)</title><rect x="115" y="164" width="376" height="15" fill="rgb(250,133,33)"/><text x="118.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boost..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="487" y="180" width="4" height="15" fill="rgb(232,59,38)"/><text x="490.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="487" y="196" width="4" height="15" fill="rgb(217,20,42)"/><text x="490.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="487" y="212" width="4" height="15" fill="rgb(214,165,14)"/><text x="490.00" y="222.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:2) (1 samples, 0.28%)</title><rect x="491" y="180" width="3" height="15" fill="rgb(236,178,15)"/><text x="494.00" y="190.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.28%)</title><rect x="497" y="244" width="4" height="15" fill="rgb(213,93,15)"/><text x="500.00" y="254.50"></text></g><g><title>PyArray_SortkindConverter (conversion_utils.c:397) (1 samples, 0.28%)</title><rect x="497" y="260" width="4" height="15" fill="rgb(219,150,34)"/><text x="500.00" y="270.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.28%)</title><rect x="501" y="244" width="3" height="15" fill="rgb(220,142,33)"/><text x="504.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.28%)</title><rect x="501" y="260" width="3" height="15" fill="rgb(236,163,0)"/><text x="504.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:998) (1 samples, 0.28%)</title><rect x="501" y="276" width="3" height="15" fill="rgb(228,191,7)"/><text x="504.00" y="286.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c:288) (1 samples, 0.28%)</title><rect x="501" y="292" width="3" height="15" fill="rgb(209,221,44)"/><text x="504.00" y="302.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.28%)</title><rect x="501" y="308" width="3" height="15" fill="rgb(224,127,51)"/><text x="504.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="501" y="324" width="3" height="15" fill="rgb(210,94,20)"/><text x="504.00" y="334.50"></text></g><g><title>0x7f2dea8f472b (libc-2.29.so) (1 samples, 0.28%)</title><rect x="501" y="340" width="3" height="15" fill="rgb(253,198,32)"/><text x="504.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (5 samples, 1.40%)</title><rect x="491" y="164" width="16" height="15" fill="rgb(213,3,35)"/><text x="494.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (4 samples, 1.12%)</title><rect x="494" y="180" width="13" height="15" fill="rgb(248,95,41)"/><text x="497.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.84%)</title><rect x="497" y="196" width="10" height="15" fill="rgb(206,36,13)"/><text x="500.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (3 samples, 0.84%)</title><rect x="497" y="212" width="10" height="15" fill="rgb(229,195,14)"/><text x="500.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.84%)</title><rect x="497" y="228" width="10" height="15" fill="rgb(219,147,16)"/><text x="500.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1400) (1 samples, 0.28%)</title><rect x="504" y="244" width="3" height="15" fill="rgb(254,194,29)"/><text x="507.00" y="254.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.28%)</title><rect x="504" y="260" width="3" height="15" fill="rgb(243,49,33)"/><text x="507.00" y="270.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.28%)</title><rect x="514" y="260" width="3" height="15" fill="rgb(251,151,31)"/><text x="517.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.28%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(221,214,17)"/><text x="520.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1233) (1 samples, 0.28%)</title><rect x="517" y="372" width="3" height="15" fill="rgb(248,46,3)"/><text x="520.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="520" y="356" width="4" height="15" fill="rgb(210,35,23)"/><text x="523.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1614) (1 samples, 0.28%)</title><rect x="520" y="372" width="4" height="15" fill="rgb(221,206,24)"/><text x="523.00" y="382.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (6 samples, 1.68%)</title><rect x="507" y="180" width="20" height="15" fill="rgb(246,212,21)"/><text x="510.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.12%)</title><rect x="514" y="196" width="13" height="15" fill="rgb(212,23,15)"/><text x="517.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.12%)</title><rect x="514" y="212" width="13" height="15" fill="rgb(208,48,43)"/><text x="517.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (4 samples, 1.12%)</title><rect x="514" y="228" width="13" height="15" fill="rgb(211,194,40)"/><text x="517.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.12%)</title><rect x="514" y="244" width="13" height="15" fill="rgb(221,105,54)"/><text x="517.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 0.84%)</title><rect x="517" y="260" width="10" height="15" fill="rgb(241,139,28)"/><text x="520.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (3 samples, 0.84%)</title><rect x="517" y="276" width="10" height="15" fill="rgb(251,83,52)"/><text x="520.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.84%)</title><rect x="517" y="292" width="10" height="15" fill="rgb(222,138,48)"/><text x="520.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.84%)</title><rect x="517" y="308" width="10" height="15" fill="rgb(220,30,2)"/><text x="520.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.84%)</title><rect x="517" y="324" width="10" height="15" fill="rgb(237,7,28)"/><text x="520.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (3 samples, 0.84%)</title><rect x="517" y="340" width="10" height="15" fill="rgb(217,164,1)"/><text x="520.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="524" y="356" width="3" height="15" fill="rgb(235,149,49)"/><text x="527.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3024) (1 samples, 0.28%)</title><rect x="524" y="372" width="3" height="15" fill="rgb(210,112,53)"/><text x="527.00" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.28%)</title><rect x="527" y="244" width="3" height="15" fill="rgb(228,210,14)"/><text x="530.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.28%)</title><rect x="527" y="260" width="3" height="15" fill="rgb(224,114,52)"/><text x="530.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.28%)</title><rect x="530" y="276" width="4" height="15" fill="rgb(254,69,49)"/><text x="533.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.28%)</title><rect x="530" y="292" width="4" height="15" fill="rgb(220,24,54)"/><text x="533.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1399) (1 samples, 0.28%)</title><rect x="530" y="308" width="4" height="15" fill="rgb(230,104,46)"/><text x="533.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.84%)</title><rect x="527" y="212" width="10" height="15" fill="rgb(230,169,6)"/><text x="530.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 0.84%)</title><rect x="527" y="228" width="10" height="15" fill="rgb(250,183,12)"/><text x="530.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.56%)</title><rect x="530" y="244" width="7" height="15" fill="rgb(233,199,47)"/><text x="533.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.56%)</title><rect x="530" y="260" width="7" height="15" fill="rgb(235,48,18)"/><text x="533.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.28%)</title><rect x="534" y="276" width="3" height="15" fill="rgb(223,61,45)"/><text x="537.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.28%)</title><rect x="534" y="292" width="3" height="15" fill="rgb(249,169,46)"/><text x="537.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.28%)</title><rect x="534" y="308" width="3" height="15" fill="rgb(211,54,50)"/><text x="537.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.28%)</title><rect x="534" y="324" width="3" height="15" fill="rgb(250,203,48)"/><text x="537.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.28%)</title><rect x="534" y="340" width="3" height="15" fill="rgb(251,25,21)"/><text x="537.00" y="350.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="534" y="356" width="3" height="15" fill="rgb(208,111,20)"/><text x="537.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (4 samples, 1.12%)</title><rect x="527" y="180" width="13" height="15" fill="rgb(249,6,17)"/><text x="530.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.12%)</title><rect x="527" y="196" width="13" height="15" fill="rgb(214,19,53)"/><text x="530.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:317) (1 samples, 0.28%)</title><rect x="537" y="212" width="3" height="15" fill="rgb(212,169,45)"/><text x="540.00" y="222.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:239) (1 samples, 0.28%)</title><rect x="540" y="212" width="3" height="15" fill="rgb(222,229,43)"/><text x="543.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.28%)</title><rect x="540" y="228" width="3" height="15" fill="rgb(242,79,36)"/><text x="543.00" y="238.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="540" y="244" width="3" height="15" fill="rgb(241,146,39)"/><text x="543.00" y="254.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (2 samples, 0.56%)</title><rect x="540" y="180" width="7" height="15" fill="rgb(205,10,52)"/><text x="543.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.56%)</title><rect x="540" y="196" width="7" height="15" fill="rgb(240,147,28)"/><text x="543.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.28%)</title><rect x="543" y="212" width="4" height="15" fill="rgb(232,197,53)"/><text x="546.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1900) (1 samples, 0.28%)</title><rect x="543" y="228" width="4" height="15" fill="rgb(217,24,35)"/><text x="546.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.28%)</title><rect x="560" y="244" width="3" height="15" fill="rgb(250,50,22)"/><text x="563.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.28%)</title><rect x="560" y="260" width="3" height="15" fill="rgb(206,31,51)"/><text x="563.00" y="270.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (5 samples, 1.40%)</title><rect x="550" y="196" width="17" height="15" fill="rgb(208,169,36)"/><text x="553.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.12%)</title><rect x="553" y="212" width="14" height="15" fill="rgb(209,37,22)"/><text x="556.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 0.84%)</title><rect x="557" y="228" width="10" height="15" fill="rgb(242,186,42)"/><text x="560.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.28%)</title><rect x="563" y="244" width="4" height="15" fill="rgb(253,209,51)"/><text x="566.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.28%)</title><rect x="563" y="260" width="4" height="15" fill="rgb(208,104,47)"/><text x="566.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.28%)</title><rect x="563" y="276" width="4" height="15" fill="rgb(210,214,51)"/><text x="566.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.28%)</title><rect x="563" y="292" width="4" height="15" fill="rgb(229,38,2)"/><text x="566.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.28%)</title><rect x="563" y="308" width="4" height="15" fill="rgb(219,153,32)"/><text x="566.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.28%)</title><rect x="563" y="324" width="4" height="15" fill="rgb(206,219,35)"/><text x="566.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3153) (1 samples, 0.28%)</title><rect x="563" y="340" width="4" height="15" fill="rgb(245,61,14)"/><text x="566.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="567" y="196" width="3" height="15" fill="rgb(245,199,52)"/><text x="570.00" y="206.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="567" y="212" width="3" height="15" fill="rgb(231,87,49)"/><text x="570.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (1 samples, 0.28%)</title><rect x="567" y="228" width="3" height="15" fill="rgb(232,143,11)"/><text x="570.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="567" y="244" width="3" height="15" fill="rgb(208,50,54)"/><text x="570.00" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="567" y="260" width="3" height="15" fill="rgb(212,176,14)"/><text x="570.00" y="270.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:4) (1 samples, 0.28%)</title><rect x="570" y="196" width="3" height="15" fill="rgb(243,133,46)"/><text x="573.00" y="206.50"></text></g><g><title>isclose (numpy/core/numeric.py:2266) (1 samples, 0.28%)</title><rect x="573" y="228" width="3" height="15" fill="rgb(225,201,38)"/><text x="576.00" y="238.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (2 samples, 0.56%)</title><rect x="576" y="228" width="7" height="15" fill="rgb(213,168,33)"/><text x="579.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1614) (1 samples, 0.28%)</title><rect x="580" y="244" width="3" height="15" fill="rgb(212,225,35)"/><text x="583.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.28%)</title><rect x="583" y="228" width="3" height="15" fill="rgb(235,148,37)"/><text x="586.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="583" y="244" width="3" height="15" fill="rgb(213,128,42)"/><text x="586.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.28%)</title><rect x="583" y="260" width="3" height="15" fill="rgb(215,117,26)"/><text x="586.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1297) (1 samples, 0.28%)</title><rect x="583" y="276" width="3" height="15" fill="rgb(237,87,38)"/><text x="586.00" y="286.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:4) (1 samples, 0.28%)</title><rect x="586" y="244" width="4" height="15" fill="rgb(221,71,3)"/><text x="589.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.28%)</title><rect x="600" y="292" width="3" height="15" fill="rgb(249,225,38)"/><text x="603.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.28%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(217,60,21)"/><text x="606.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(215,35,3)"/><text x="606.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.28%)</title><rect x="603" y="340" width="3" height="15" fill="rgb(251,69,51)"/><text x="606.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.28%)</title><rect x="603" y="356" width="3" height="15" fill="rgb(241,182,28)"/><text x="606.00" y="366.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3605) (1 samples, 0.28%)</title><rect x="606" y="340" width="3" height="15" fill="rgb(249,111,35)"/><text x="609.00" y="350.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c:846) (1 samples, 0.28%)</title><rect x="606" y="356" width="3" height="15" fill="rgb(241,76,15)"/><text x="609.00" y="366.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (8 samples, 2.23%)</title><rect x="586" y="228" width="27" height="15" fill="rgb(222,51,25)"/><text x="589.00" y="238.50">i..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (7 samples, 1.96%)</title><rect x="590" y="244" width="23" height="15" fill="rgb(243,88,27)"/><text x="593.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.96%)</title><rect x="590" y="260" width="23" height="15" fill="rgb(217,59,36)"/><text x="593.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (7 samples, 1.96%)</title><rect x="590" y="276" width="23" height="15" fill="rgb(228,143,36)"/><text x="593.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.84%)</title><rect x="603" y="292" width="10" height="15" fill="rgb(249,56,10)"/><text x="606.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.56%)</title><rect x="606" y="308" width="7" height="15" fill="rgb(239,78,31)"/><text x="609.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.56%)</title><rect x="606" y="324" width="7" height="15" fill="rgb(210,197,31)"/><text x="609.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.28%)</title><rect x="609" y="340" width="4" height="15" fill="rgb(219,15,34)"/><text x="612.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.28%)</title><rect x="609" y="356" width="4" height="15" fill="rgb(214,14,10)"/><text x="612.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:421) (1 samples, 0.28%)</title><rect x="609" y="372" width="4" height="15" fill="rgb(254,48,40)"/><text x="612.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2175) (1 samples, 0.28%)</title><rect x="609" y="388" width="4" height="15" fill="rgb(229,29,12)"/><text x="612.00" y="398.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2256) (1 samples, 0.28%)</title><rect x="613" y="244" width="3" height="15" fill="rgb(207,43,12)"/><text x="616.00" y="254.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.28%)</title><rect x="616" y="276" width="3" height="15" fill="rgb(212,211,20)"/><text x="619.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:180) (1 samples, 0.28%)</title><rect x="616" y="292" width="3" height="15" fill="rgb(213,15,36)"/><text x="619.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (2 samples, 0.56%)</title><rect x="616" y="244" width="7" height="15" fill="rgb(215,126,7)"/><text x="619.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.56%)</title><rect x="616" y="260" width="7" height="15" fill="rgb(219,107,32)"/><text x="619.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.28%)</title><rect x="619" y="276" width="4" height="15" fill="rgb(226,183,3)"/><text x="622.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.28%)</title><rect x="619" y="292" width="4" height="15" fill="rgb(245,53,47)"/><text x="622.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.28%)</title><rect x="619" y="308" width="4" height="15" fill="rgb(222,49,52)"/><text x="622.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:215) (1 samples, 0.28%)</title><rect x="619" y="324" width="4" height="15" fill="rgb(213,117,21)"/><text x="622.00" y="334.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (2 samples, 0.56%)</title><rect x="629" y="260" width="7" height="15" fill="rgb(211,99,17)"/><text x="632.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.28%)</title><rect x="632" y="276" width="4" height="15" fill="rgb(230,207,21)"/><text x="635.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:178) (1 samples, 0.28%)</title><rect x="632" y="292" width="4" height="15" fill="rgb(206,185,51)"/><text x="635.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:448) (1 samples, 0.28%)</title><rect x="636" y="260" width="3" height="15" fill="rgb(215,137,48)"/><text x="639.00" y="270.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.28%)</title><rect x="639" y="260" width="3" height="15" fill="rgb(244,197,24)"/><text x="642.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="639" y="276" width="3" height="15" fill="rgb(214,93,11)"/><text x="642.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="639" y="292" width="3" height="15" fill="rgb(207,152,37)"/><text x="642.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.28%)</title><rect x="639" y="308" width="3" height="15" fill="rgb(254,125,38)"/><text x="642.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1470) (1 samples, 0.28%)</title><rect x="639" y="324" width="3" height="15" fill="rgb(215,213,22)"/><text x="642.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="642" y="260" width="4" height="15" fill="rgb(229,181,49)"/><text x="645.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="642" y="276" width="4" height="15" fill="rgb(253,181,42)"/><text x="645.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.28%)</title><rect x="642" y="292" width="4" height="15" fill="rgb(225,136,5)"/><text x="645.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.28%)</title><rect x="646" y="260" width="3" height="15" fill="rgb(221,67,21)"/><text x="649.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="646" y="276" width="3" height="15" fill="rgb(208,131,22)"/><text x="649.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="646" y="292" width="3" height="15" fill="rgb(229,33,0)"/><text x="649.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.28%)</title><rect x="646" y="308" width="3" height="15" fill="rgb(225,192,19)"/><text x="649.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.28%)</title><rect x="646" y="324" width="3" height="15" fill="rgb(224,20,51)"/><text x="649.00" y="334.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1742) (1 samples, 0.28%)</title><rect x="646" y="340" width="3" height="15" fill="rgb(250,192,25)"/><text x="649.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (45 samples, 12.57%)</title><rect x="507" y="164" width="149" height="15" fill="rgb(254,200,29)"/><text x="510.00" y="174.50">_get_median_predict..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (33 samples, 9.22%)</title><rect x="547" y="180" width="109" height="15" fill="rgb(241,83,49)"/><text x="550.00" y="190.50">stable_cumsum..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (25 samples, 6.98%)</title><rect x="573" y="196" width="83" height="15" fill="rgb(225,214,30)"/><text x="576.00" y="206.50">isclose (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (25 samples, 6.98%)</title><rect x="573" y="212" width="83" height="15" fill="rgb(250,52,8)"/><text x="576.00" y="222.50">array_imp..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (13 samples, 3.63%)</title><rect x="613" y="228" width="43" height="15" fill="rgb(254,77,53)"/><text x="616.00" y="238.50">iscl..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (10 samples, 2.79%)</title><rect x="623" y="244" width="33" height="15" fill="rgb(224,175,46)"/><text x="626.00" y="254.50">wi..</text></g><g><title>array_subtract (number.c:342) (2 samples, 0.56%)</title><rect x="649" y="260" width="7" height="15" fill="rgb(218,15,48)"/><text x="652.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="652" y="276" width="4" height="15" fill="rgb(211,30,46)"/><text x="655.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.28%)</title><rect x="652" y="292" width="4" height="15" fill="rgb(205,21,51)"/><text x="655.00" y="302.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.28%)</title><rect x="652" y="308" width="4" height="15" fill="rgb(219,99,34)"/><text x="655.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:233) (1 samples, 0.28%)</title><rect x="652" y="324" width="4" height="15" fill="rgb(224,62,24)"/><text x="655.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.28%)</title><rect x="656" y="212" width="3" height="15" fill="rgb(231,51,53)"/><text x="659.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.28%)</title><rect x="656" y="228" width="3" height="15" fill="rgb(245,15,3)"/><text x="659.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.28%)</title><rect x="656" y="244" width="3" height="15" fill="rgb(226,134,20)"/><text x="659.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.28%)</title><rect x="656" y="260" width="3" height="15" fill="rgb(209,131,11)"/><text x="659.00" y="270.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.28%)</title><rect x="656" y="276" width="3" height="15" fill="rgb(254,171,33)"/><text x="659.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.56%)</title><rect x="656" y="196" width="6" height="15" fill="rgb(218,138,19)"/><text x="659.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="659" y="212" width="3" height="15" fill="rgb(231,163,0)"/><text x="662.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.28%)</title><rect x="659" y="228" width="3" height="15" fill="rgb(218,84,52)"/><text x="662.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.28%)</title><rect x="659" y="244" width="3" height="15" fill="rgb(229,4,53)"/><text x="662.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.84%)</title><rect x="656" y="180" width="9" height="15" fill="rgb(217,92,35)"/><text x="659.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.28%)</title><rect x="662" y="196" width="3" height="15" fill="rgb(205,192,13)"/><text x="665.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (4 samples, 1.12%)</title><rect x="656" y="164" width="13" height="15" fill="rgb(240,164,37)"/><text x="659.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.28%)</title><rect x="665" y="180" width="4" height="15" fill="rgb(247,229,41)"/><text x="668.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="665" y="196" width="4" height="15" fill="rgb(219,228,11)"/><text x="668.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.28%)</title><rect x="665" y="212" width="4" height="15" fill="rgb(240,138,26)"/><text x="668.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.28%)</title><rect x="665" y="228" width="4" height="15" fill="rgb(250,84,48)"/><text x="668.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.28%)</title><rect x="665" y="244" width="4" height="15" fill="rgb(252,189,26)"/><text x="668.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.28%)</title><rect x="665" y="260" width="4" height="15" fill="rgb(248,186,28)"/><text x="668.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="665" y="276" width="4" height="15" fill="rgb(236,150,25)"/><text x="668.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (2 samples, 0.56%)</title><rect x="669" y="164" width="6" height="15" fill="rgb(243,64,20)"/><text x="672.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.28%)</title><rect x="672" y="180" width="3" height="15" fill="rgb(229,103,46)"/><text x="675.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.28%)</title><rect x="672" y="196" width="3" height="15" fill="rgb(211,142,18)"/><text x="675.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src:3057) (1 samples, 0.28%)</title><rect x="672" y="212" width="3" height="15" fill="rgb(245,76,41)"/><text x="675.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.28%)</title><rect x="675" y="180" width="4" height="15" fill="rgb(251,189,1)"/><text x="678.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.28%)</title><rect x="679" y="180" width="3" height="15" fill="rgb(247,125,20)"/><text x="682.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.28%)</title><rect x="682" y="196" width="3" height="15" fill="rgb(231,211,38)"/><text x="685.00" y="206.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="682" y="212" width="3" height="15" fill="rgb(231,93,42)"/><text x="685.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.28%)</title><rect x="685" y="228" width="3" height="15" fill="rgb(235,61,32)"/><text x="688.00" y="238.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1304) (1 samples, 0.28%)</title><rect x="685" y="244" width="3" height="15" fill="rgb(251,157,25)"/><text x="688.00" y="254.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.28%)</title><rect x="685" y="260" width="3" height="15" fill="rgb(240,126,8)"/><text x="688.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (5 samples, 1.40%)</title><rect x="675" y="164" width="17" height="15" fill="rgb(206,39,19)"/><text x="678.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.84%)</title><rect x="682" y="180" width="10" height="15" fill="rgb(218,118,50)"/><text x="685.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.56%)</title><rect x="685" y="196" width="7" height="15" fill="rgb(246,83,23)"/><text x="688.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.56%)</title><rect x="685" y="212" width="7" height="15" fill="rgb(227,163,29)"/><text x="688.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="688" y="228" width="4" height="15" fill="rgb(216,146,4)"/><text x="691.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3027) (1 samples, 0.28%)</title><rect x="688" y="244" width="4" height="15" fill="rgb(247,187,1)"/><text x="691.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:54) (197 samples, 55.03%)</title><rect x="46" y="52" width="649" height="15" fill="rgb(233,146,27)"/><text x="49.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:53) (197 samples, 55.03%)</title><rect x="46" y="68" width="649" height="15" fill="rgb(235,210,17)"/><text x="49.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:37) (197 samples, 55.03%)</title><rect x="46" y="84" width="649" height="15" fill="rgb(252,197,1)"/><text x="49.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:37)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:31) (197 samples, 55.03%)</title><rect x="46" y="100" width="649" height="15" fill="rgb(212,134,43)"/><text x="49.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 55.03%)</title><rect x="46" y="116" width="649" height="15" fill="rgb(219,67,28)"/><text x="49.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (195 samples, 54.47%)</title><rect x="52" y="132" width="643" height="15" fill="rgb(240,6,23)"/><text x="55.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (176 samples, 49.16%)</title><rect x="115" y="148" width="580" height="15" fill="rgb(244,224,39)"/><text x="118.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (1 samples, 0.28%)</title><rect x="692" y="164" width="3" height="15" fill="rgb(224,29,27)"/><text x="695.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.28%)</title><rect x="692" y="180" width="3" height="15" fill="rgb(245,42,16)"/><text x="695.00" y="190.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:36) (1 samples, 0.28%)</title><rect x="695" y="84" width="3" height="15" fill="rgb(209,128,25)"/><text x="698.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="695" y="100" width="3" height="15" fill="rgb(210,187,18)"/><text x="698.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.28%)</title><rect x="695" y="116" width="3" height="15" fill="rgb(232,219,24)"/><text x="698.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.28%)</title><rect x="695" y="132" width="3" height="15" fill="rgb(213,40,24)"/><text x="698.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.28%)</title><rect x="695" y="148" width="3" height="15" fill="rgb(212,115,46)"/><text x="698.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.28%)</title><rect x="695" y="164" width="3" height="15" fill="rgb(242,98,22)"/><text x="698.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.28%)</title><rect x="695" y="180" width="3" height="15" fill="rgb(220,32,16)"/><text x="698.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.28%)</title><rect x="695" y="196" width="3" height="15" fill="rgb(251,54,18)"/><text x="698.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="695" y="212" width="3" height="15" fill="rgb(217,118,22)"/><text x="698.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="695" y="228" width="3" height="15" fill="rgb(227,136,13)"/><text x="698.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="695" y="244" width="3" height="15" fill="rgb(236,118,40)"/><text x="698.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="695" y="260" width="3" height="15" fill="rgb(242,94,42)"/><text x="698.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="695" y="276" width="3" height="15" fill="rgb(207,40,37)"/><text x="698.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.28%)</title><rect x="695" y="292" width="3" height="15" fill="rgb(218,187,11)"/><text x="698.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="695" y="308" width="3" height="15" fill="rgb(216,162,27)"/><text x="698.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="695" y="324" width="3" height="15" fill="rgb(227,180,10)"/><text x="698.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="695" y="340" width="3" height="15" fill="rgb(232,217,3)"/><text x="698.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="695" y="356" width="3" height="15" fill="rgb(253,223,30)"/><text x="698.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="695" y="372" width="3" height="15" fill="rgb(252,197,54)"/><text x="698.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.28%)</title><rect x="695" y="388" width="3" height="15" fill="rgb(241,25,23)"/><text x="698.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.28%)</title><rect x="695" y="404" width="3" height="15" fill="rgb(219,121,43)"/><text x="698.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.28%)</title><rect x="695" y="420" width="3" height="15" fill="rgb(223,127,40)"/><text x="698.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.28%)</title><rect x="695" y="436" width="3" height="15" fill="rgb(231,123,8)"/><text x="698.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="695" y="452" width="3" height="15" fill="rgb(212,101,15)"/><text x="698.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:25) (1 samples, 0.28%)</title><rect x="695" y="468" width="3" height="15" fill="rgb(248,46,18)"/><text x="698.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.28%)</title><rect x="695" y="484" width="3" height="15" fill="rgb(229,55,54)"/><text x="698.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py:187) (1 samples, 0.28%)</title><rect x="695" y="500" width="3" height="15" fill="rgb(240,69,34)"/><text x="698.00" y="510.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.28%)</title><rect x="695" y="516" width="3" height="15" fill="rgb(207,95,8)"/><text x="698.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.28%)</title><rect x="695" y="532" width="3" height="15" fill="rgb(246,144,48)"/><text x="698.00" y="542.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.28%)</title><rect x="695" y="548" width="3" height="15" fill="rgb(235,142,1)"/><text x="698.00" y="558.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="695" y="564" width="3" height="15" fill="rgb(232,61,17)"/><text x="698.00" y="574.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.28%)</title><rect x="702" y="180" width="3" height="15" fill="rgb(207,76,5)"/><text x="705.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (7 samples, 1.96%)</title><rect x="705" y="180" width="23" height="15" fill="rgb(245,156,7)"/><text x="708.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.28%)</title><rect x="725" y="196" width="3" height="15" fill="rgb(210,82,25)"/><text x="728.00" y="206.50"></text></g><g><title>0x7f2dea913120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="735" y="196" width="3" height="15" fill="rgb(253,112,19)"/><text x="738.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (2 samples, 0.56%)</title><rect x="745" y="212" width="6" height="15" fill="rgb(251,104,20)"/><text x="748.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="748" y="228" width="3" height="15" fill="rgb(213,106,8)"/><text x="751.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:40) (1 samples, 0.28%)</title><rect x="751" y="212" width="3" height="15" fill="rgb(228,58,3)"/><text x="754.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.28%)</title><rect x="754" y="228" width="4" height="15" fill="rgb(205,67,34)"/><text x="757.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.28%)</title><rect x="754" y="244" width="4" height="15" fill="rgb(227,40,35)"/><text x="757.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.28%)</title><rect x="754" y="260" width="4" height="15" fill="rgb(250,150,21)"/><text x="757.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.28%)</title><rect x="754" y="276" width="4" height="15" fill="rgb(253,40,38)"/><text x="757.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.28%)</title><rect x="754" y="292" width="4" height="15" fill="rgb(211,8,2)"/><text x="757.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.28%)</title><rect x="754" y="308" width="4" height="15" fill="rgb(252,36,7)"/><text x="757.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="754" y="324" width="4" height="15" fill="rgb(229,144,50)"/><text x="757.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.28%)</title><rect x="758" y="228" width="3" height="15" fill="rgb(221,67,40)"/><text x="761.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2627) (1 samples, 0.28%)</title><rect x="758" y="244" width="3" height="15" fill="rgb(208,51,21)"/><text x="761.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1611) (1 samples, 0.28%)</title><rect x="761" y="244" width="3" height="15" fill="rgb(218,24,17)"/><text x="764.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:280) (1 samples, 0.28%)</title><rect x="761" y="260" width="3" height="15" fill="rgb(223,223,42)"/><text x="764.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.56%)</title><rect x="761" y="228" width="7" height="15" fill="rgb(212,110,32)"/><text x="764.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1781) (1 samples, 0.28%)</title><rect x="764" y="244" width="4" height="15" fill="rgb(211,103,19)"/><text x="767.00" y="254.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="764" y="260" width="4" height="15" fill="rgb(238,146,34)"/><text x="767.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (5 samples, 1.40%)</title><rect x="754" y="212" width="17" height="15" fill="rgb(215,26,5)"/><text x="757.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.28%)</title><rect x="768" y="228" width="3" height="15" fill="rgb(237,45,46)"/><text x="771.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.28%)</title><rect x="768" y="244" width="3" height="15" fill="rgb(209,80,7)"/><text x="771.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.28%)</title><rect x="771" y="212" width="3" height="15" fill="rgb(243,4,0)"/><text x="774.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.28%)</title><rect x="777" y="228" width="4" height="15" fill="rgb(244,169,21)"/><text x="780.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.28%)</title><rect x="781" y="276" width="3" height="15" fill="rgb(208,115,22)"/><text x="784.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.28%)</title><rect x="784" y="292" width="3" height="15" fill="rgb(221,41,47)"/><text x="787.00" y="302.50"></text></g><g><title>array_cumsum (methods.c:2236) (1 samples, 0.28%)</title><rect x="787" y="292" width="4" height="15" fill="rgb(211,205,52)"/><text x="790.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4491) (2 samples, 0.56%)</title><rect x="791" y="356" width="6" height="15" fill="rgb(233,78,19)"/><text x="794.00" y="366.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="794" y="372" width="3" height="15" fill="rgb(214,179,47)"/><text x="797.00" y="382.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3784) (1 samples, 0.28%)</title><rect x="797" y="372" width="4" height="15" fill="rgb(251,137,29)"/><text x="800.00" y="382.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:836) (1 samples, 0.28%)</title><rect x="797" y="388" width="4" height="15" fill="rgb(212,139,35)"/><text x="800.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (9 samples, 2.51%)</title><rect x="774" y="212" width="30" height="15" fill="rgb(233,139,31)"/><text x="777.00" y="222.50">_r..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (7 samples, 1.96%)</title><rect x="781" y="228" width="23" height="15" fill="rgb(235,55,17)"/><text x="784.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 1.96%)</title><rect x="781" y="244" width="23" height="15" fill="rgb(213,133,7)"/><text x="784.00" y="254.50">a..</text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (7 samples, 1.96%)</title><rect x="781" y="260" width="23" height="15" fill="rgb(206,119,35)"/><text x="784.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 1.68%)</title><rect x="784" y="276" width="20" height="15" fill="rgb(231,24,22)"/><text x="787.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 1.12%)</title><rect x="791" y="292" width="13" height="15" fill="rgb(246,90,7)"/><text x="794.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 1.12%)</title><rect x="791" y="308" width="13" height="15" fill="rgb(227,89,14)"/><text x="794.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (4 samples, 1.12%)</title><rect x="791" y="324" width="13" height="15" fill="rgb(251,110,19)"/><text x="794.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (4 samples, 1.12%)</title><rect x="791" y="340" width="13" height="15" fill="rgb(241,48,43)"/><text x="794.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (2 samples, 0.56%)</title><rect x="797" y="356" width="7" height="15" fill="rgb(212,153,1)"/><text x="800.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3878) (1 samples, 0.28%)</title><rect x="801" y="372" width="3" height="15" fill="rgb(229,100,18)"/><text x="804.00" y="382.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:399) (1 samples, 0.28%)</title><rect x="801" y="388" width="3" height="15" fill="rgb(243,166,46)"/><text x="804.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (2 samples, 0.56%)</title><rect x="804" y="212" width="6" height="15" fill="rgb(239,25,12)"/><text x="807.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="807" y="228" width="3" height="15" fill="rgb(212,15,27)"/><text x="810.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="807" y="244" width="3" height="15" fill="rgb(250,106,1)"/><text x="810.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.28%)</title><rect x="807" y="260" width="3" height="15" fill="rgb(223,89,33)"/><text x="810.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.28%)</title><rect x="807" y="276" width="3" height="15" fill="rgb(208,43,13)"/><text x="810.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.28%)</title><rect x="807" y="292" width="3" height="15" fill="rgb(235,166,1)"/><text x="810.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.28%)</title><rect x="807" y="308" width="3" height="15" fill="rgb(248,147,8)"/><text x="810.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.28%)</title><rect x="807" y="324" width="3" height="15" fill="rgb(234,106,10)"/><text x="810.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.28%)</title><rect x="807" y="340" width="3" height="15" fill="rgb(254,57,52)"/><text x="810.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.28%)</title><rect x="807" y="356" width="3" height="15" fill="rgb(245,127,50)"/><text x="810.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.28%)</title><rect x="807" y="372" width="3" height="15" fill="rgb(249,196,25)"/><text x="810.00" y="382.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (2 samples, 0.56%)</title><rect x="810" y="228" width="7" height="15" fill="rgb(212,164,52)"/><text x="813.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (4 samples, 1.12%)</title><rect x="810" y="212" width="14" height="15" fill="rgb(219,148,31)"/><text x="813.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.56%)</title><rect x="817" y="228" width="7" height="15" fill="rgb(234,147,38)"/><text x="820.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.56%)</title><rect x="817" y="244" width="7" height="15" fill="rgb(250,164,4)"/><text x="820.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.56%)</title><rect x="817" y="260" width="7" height="15" fill="rgb(254,185,0)"/><text x="820.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.28%)</title><rect x="820" y="276" width="4" height="15" fill="rgb(253,186,3)"/><text x="823.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.28%)</title><rect x="830" y="244" width="4" height="15" fill="rgb(210,87,19)"/><text x="833.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:114) (1 samples, 0.28%)</title><rect x="830" y="260" width="4" height="15" fill="rgb(253,76,11)"/><text x="833.00" y="270.50"></text></g><g><title>array_choose (methods.c:1210) (1 samples, 0.28%)</title><rect x="834" y="292" width="3" height="15" fill="rgb(238,54,18)"/><text x="837.00" y="302.50"></text></g><g><title>array_choose (methods.c:1218) (1 samples, 0.28%)</title><rect x="837" y="292" width="3" height="15" fill="rgb(238,54,2)"/><text x="840.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.28%)</title><rect x="837" y="308" width="3" height="15" fill="rgb(222,124,22)"/><text x="840.00" y="318.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:66) (1 samples, 0.28%)</title><rect x="837" y="324" width="3" height="15" fill="rgb(241,19,39)"/><text x="840.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (6 samples, 1.68%)</title><rect x="824" y="212" width="19" height="15" fill="rgb(213,70,18)"/><text x="827.00" y="222.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (6 samples, 1.68%)</title><rect x="824" y="228" width="19" height="15" fill="rgb(249,129,13)"/><text x="827.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.84%)</title><rect x="834" y="244" width="9" height="15" fill="rgb(254,71,32)"/><text x="837.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py:432) (3 samples, 0.84%)</title><rect x="834" y="260" width="9" height="15" fill="rgb(220,99,29)"/><text x="837.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.84%)</title><rect x="834" y="276" width="9" height="15" fill="rgb(206,25,44)"/><text x="837.00" y="286.50"></text></g><g><title>array_choose (methods.c:1224) (1 samples, 0.28%)</title><rect x="840" y="292" width="3" height="15" fill="rgb(205,1,20)"/><text x="843.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:792) (1 samples, 0.28%)</title><rect x="840" y="308" width="3" height="15" fill="rgb(221,64,53)"/><text x="843.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c:1439) (1 samples, 0.28%)</title><rect x="840" y="324" width="3" height="15" fill="rgb(248,181,23)"/><text x="843.00" y="334.50"></text></g><g><title>0x7f2dea8f2f71 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="840" y="340" width="3" height="15" fill="rgb(212,130,19)"/><text x="843.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (2 samples, 0.56%)</title><rect x="843" y="212" width="7" height="15" fill="rgb(250,70,54)"/><text x="846.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.56%)</title><rect x="843" y="228" width="7" height="15" fill="rgb(221,43,38)"/><text x="846.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="847" y="244" width="3" height="15" fill="rgb(220,219,33)"/><text x="850.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.28%)</title><rect x="847" y="260" width="3" height="15" fill="rgb(245,168,50)"/><text x="850.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.28%)</title><rect x="847" y="276" width="3" height="15" fill="rgb(242,204,36)"/><text x="850.00" y="286.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="850" y="260" width="3" height="15" fill="rgb(215,181,53)"/><text x="853.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="850" y="276" width="3" height="15" fill="rgb(231,209,1)"/><text x="853.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.28%)</title><rect x="850" y="292" width="3" height="15" fill="rgb(215,126,7)"/><text x="853.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.28%)</title><rect x="853" y="260" width="4" height="15" fill="rgb(225,184,43)"/><text x="856.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.28%)</title><rect x="853" y="276" width="4" height="15" fill="rgb(234,200,45)"/><text x="856.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.28%)</title><rect x="853" y="292" width="4" height="15" fill="rgb(238,135,45)"/><text x="856.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="853" y="308" width="4" height="15" fill="rgb(220,74,36)"/><text x="856.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1437) (1 samples, 0.28%)</title><rect x="853" y="324" width="4" height="15" fill="rgb(209,176,42)"/><text x="856.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.28%)</title><rect x="857" y="260" width="3" height="15" fill="rgb(210,196,54)"/><text x="860.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1473) (1 samples, 0.28%)</title><rect x="857" y="276" width="3" height="15" fill="rgb(233,193,33)"/><text x="860.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.28%)</title><rect x="860" y="260" width="3" height="15" fill="rgb(253,202,45)"/><text x="863.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.28%)</title><rect x="860" y="276" width="3" height="15" fill="rgb(235,48,6)"/><text x="863.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.28%)</title><rect x="860" y="292" width="3" height="15" fill="rgb(236,222,20)"/><text x="863.00" y="302.50"></text></g><g><title>0x7f2de9b14e10 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="860" y="308" width="3" height="15" fill="rgb(216,22,40)"/><text x="863.00" y="318.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (5 samples, 1.40%)</title><rect x="850" y="228" width="16" height="15" fill="rgb(244,210,47)"/><text x="853.00" y="238.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (5 samples, 1.40%)</title><rect x="850" y="244" width="16" height="15" fill="rgb(233,14,35)"/><text x="853.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="863" y="260" width="3" height="15" fill="rgb(246,75,45)"/><text x="866.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.28%)</title><rect x="863" y="276" width="3" height="15" fill="rgb(208,128,0)"/><text x="866.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (40 samples, 11.17%)</title><rect x="738" y="196" width="132" height="15" fill="rgb(249,14,13)"/><text x="741.00" y="206.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (6 samples, 1.68%)</title><rect x="850" y="212" width="20" height="15" fill="rgb(238,135,43)"/><text x="853.00" y="222.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.28%)</title><rect x="866" y="228" width="4" height="15" fill="rgb(218,198,4)"/><text x="869.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.28%)</title><rect x="866" y="244" width="4" height="15" fill="rgb(220,75,41)"/><text x="869.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.28%)</title><rect x="866" y="260" width="4" height="15" fill="rgb(217,103,41)"/><text x="869.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.28%)</title><rect x="866" y="276" width="4" height="15" fill="rgb(225,52,29)"/><text x="869.00" y="286.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:4) (2 samples, 0.56%)</title><rect x="873" y="276" width="7" height="15" fill="rgb(251,170,19)"/><text x="876.00" y="286.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.28%)</title><rect x="880" y="308" width="3" height="15" fill="rgb(241,132,2)"/><text x="883.00" y="318.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.28%)</title><rect x="883" y="324" width="3" height="15" fill="rgb(206,33,24)"/><text x="886.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (6 samples, 1.68%)</title><rect x="870" y="196" width="20" height="15" fill="rgb(248,116,20)"/><text x="873.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (6 samples, 1.68%)</title><rect x="870" y="212" width="20" height="15" fill="rgb(243,149,49)"/><text x="873.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (6 samples, 1.68%)</title><rect x="870" y="228" width="20" height="15" fill="rgb(224,122,9)"/><text x="873.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (6 samples, 1.68%)</title><rect x="870" y="244" width="20" height="15" fill="rgb(226,59,16)"/><text x="873.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (6 samples, 1.68%)</title><rect x="870" y="260" width="20" height="15" fill="rgb(213,87,31)"/><text x="873.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (3 samples, 0.84%)</title><rect x="880" y="276" width="10" height="15" fill="rgb(246,141,10)"/><text x="883.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.84%)</title><rect x="880" y="292" width="10" height="15" fill="rgb(208,27,52)"/><text x="883.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (2 samples, 0.56%)</title><rect x="883" y="308" width="7" height="15" fill="rgb(217,3,16)"/><text x="886.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.28%)</title><rect x="886" y="324" width="4" height="15" fill="rgb(216,224,31)"/><text x="889.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="886" y="340" width="4" height="15" fill="rgb(217,131,50)"/><text x="889.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.28%)</title><rect x="886" y="356" width="4" height="15" fill="rgb(228,190,53)"/><text x="889.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.28%)</title><rect x="886" y="372" width="4" height="15" fill="rgb(233,166,32)"/><text x="889.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.28%)</title><rect x="886" y="388" width="4" height="15" fill="rgb(215,19,17)"/><text x="889.00" y="398.50"></text></g><g><title>0x7f2dab38b54f (?) (1 samples, 0.28%)</title><rect x="890" y="244" width="3" height="15" fill="rgb(206,32,10)"/><text x="893.00" y="254.50"></text></g><g><title>0x7f2dab39165e (?) (1 samples, 0.28%)</title><rect x="890" y="260" width="3" height="15" fill="rgb(249,43,12)"/><text x="893.00" y="270.50"></text></g><g><title>0x7f2dab39150f (?) (1 samples, 0.28%)</title><rect x="890" y="276" width="3" height="15" fill="rgb(222,1,2)"/><text x="893.00" y="286.50"></text></g><g><title>0x7f2dab397d6c (?) (1 samples, 0.28%)</title><rect x="890" y="292" width="3" height="15" fill="rgb(239,111,33)"/><text x="893.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="890" y="308" width="3" height="15" fill="rgb(218,211,35)"/><text x="893.00" y="318.50"></text></g><g><title>0x7f2db48f7daa (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="890" y="324" width="3" height="15" fill="rgb(221,170,50)"/><text x="893.00" y="334.50"></text></g><g><title>0x7f2db48f9d6d (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="890" y="340" width="3" height="15" fill="rgb(223,109,5)"/><text x="893.00" y="350.50"></text></g><g><title>0x7f2db48f9ea0 (libgomp.so.1.0.0) (5 samples, 1.40%)</title><rect x="893" y="484" width="16" height="15" fill="rgb(254,225,5)"/><text x="896.00" y="494.50"></text></g><g><title>0x7f2db48f9ea9 (libgomp.so.1.0.0) (14 samples, 3.91%)</title><rect x="909" y="484" width="46" height="15" fill="rgb(254,35,20)"/><text x="912.00" y="494.50">0x7f..</text></g><g><title>0x7f2db48f9eab (libgomp.so.1.0.0) (13 samples, 3.63%)</title><rect x="955" y="484" width="43" height="15" fill="rgb(248,127,3)"/><text x="958.00" y="494.50">0x7f..</text></g><g><title>0x7f2db48f8ab9 (libgomp.so.1.0.0) (43 samples, 12.01%)</title><rect x="893" y="468" width="142" height="15" fill="rgb(225,174,28)"/><text x="896.00" y="478.50">0x7f2db48f8ab9 (li..</text></g><g><title>0x7f2db48f9ead (libgomp.so.1.0.0) (11 samples, 3.07%)</title><rect x="998" y="484" width="37" height="15" fill="rgb(205,33,38)"/><text x="1001.00" y="494.50">0x7..</text></g><g><title>0x7f2db48f9cf9 (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="1035" y="500" width="3" height="15" fill="rgb(242,229,19)"/><text x="1038.00" y="510.50"></text></g><g><title>0x7f2db48f9cfb (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="1038" y="500" width="3" height="15" fill="rgb(234,37,18)"/><text x="1041.00" y="510.50"></text></g><g><title>0x7f2db48f9cfd (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="1041" y="500" width="3" height="15" fill="rgb(228,56,34)"/><text x="1044.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (48 samples, 13.41%)</title><rect x="890" y="196" width="158" height="15" fill="rgb(232,108,34)"/><text x="893.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (48 samples, 13.41%)</title><rect x="890" y="212" width="158" height="15" fill="rgb(226,208,25)"/><text x="893.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (48 samples, 13.41%)</title><rect x="890" y="228" width="158" height="15" fill="rgb(236,81,28)"/><text x="893.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (47 samples, 13.13%)</title><rect x="893" y="244" width="155" height="15" fill="rgb(250,219,33)"/><text x="896.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (47 samples, 13.13%)</title><rect x="893" y="260" width="155" height="15" fill="rgb(239,16,17)"/><text x="896.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (47 samples, 13.13%)</title><rect x="893" y="276" width="155" height="15" fill="rgb(239,24,12)"/><text x="896.00" y="286.50">void pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (47 samples, 13.13%)</title><rect x="893" y="292" width="155" height="15" fill="rgb(225,25,19)"/><text x="896.00" y="302.50">pybind11::detail::a..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (47 samples, 13.13%)</title><rect x="893" y="308" width="155" height="15" fill="rgb(241,83,19)"/><text x="896.00" y="318.50">pybind11::detail::a..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (47 samples, 13.13%)</title><rect x="893" y="324" width="155" height="15" fill="rgb(219,48,36)"/><text x="896.00" y="334.50">pybind11::cpp_funct..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (47 samples, 13.13%)</title><rect x="893" y="340" width="155" height="15" fill="rgb(231,223,10)"/><text x="896.00" y="350.50">pybind11::array_t&lt;f..</text></g><g><title>pybind11::array::~array (numpy.h:538) (47 samples, 13.13%)</title><rect x="893" y="356" width="155" height="15" fill="rgb(214,166,17)"/><text x="896.00" y="366.50">pybind11::array::~a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (47 samples, 13.13%)</title><rect x="893" y="372" width="155" height="15" fill="rgb(250,49,24)"/><text x="896.00" y="382.50">pybind11::buffer::~..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (47 samples, 13.13%)</title><rect x="893" y="388" width="155" height="15" fill="rgb(244,148,16)"/><text x="896.00" y="398.50">pybind11::object::~..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (47 samples, 13.13%)</title><rect x="893" y="404" width="155" height="15" fill="rgb(220,155,30)"/><text x="896.00" y="414.50">pybind11::handle::d..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (47 samples, 13.13%)</title><rect x="893" y="420" width="155" height="15" fill="rgb(244,227,9)"/><text x="896.00" y="430.50">RuntimeTreeEnsemble..</text></g><g><title>pybind11::array::size (numpy.h:619) (47 samples, 13.13%)</title><rect x="893" y="436" width="155" height="15" fill="rgb(237,39,23)"/><text x="896.00" y="446.50">pybind11::array::si..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (47 samples, 13.13%)</title><rect x="893" y="452" width="155" height="15" fill="rgb(221,154,30)"/><text x="896.00" y="462.50">std::accumulate&lt;lon..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 1.12%)</title><rect x="1035" y="468" width="13" height="15" fill="rgb(212,85,9)"/><text x="1038.00" y="478.50"></text></g><g><title>0x7f2db48f7daa (libgomp.so.1.0.0) (4 samples, 1.12%)</title><rect x="1035" y="484" width="13" height="15" fill="rgb(211,188,5)"/><text x="1038.00" y="494.50"></text></g><g><title>0x7f2db48f9d6d (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="1044" y="500" width="4" height="15" fill="rgb(208,77,43)"/><text x="1047.00" y="510.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:282) (1 samples, 0.28%)</title><rect x="1048" y="292" width="3" height="15" fill="rgb(249,127,53)"/><text x="1051.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.56%)</title><rect x="1048" y="196" width="6" height="15" fill="rgb(207,36,7)"/><text x="1051.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (2 samples, 0.56%)</title><rect x="1048" y="212" width="6" height="15" fill="rgb(249,116,23)"/><text x="1051.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.56%)</title><rect x="1048" y="228" width="6" height="15" fill="rgb(227,97,17)"/><text x="1051.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.56%)</title><rect x="1048" y="244" width="6" height="15" fill="rgb(239,17,51)"/><text x="1051.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.56%)</title><rect x="1048" y="260" width="6" height="15" fill="rgb(251,31,10)"/><text x="1051.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.56%)</title><rect x="1048" y="276" width="6" height="15" fill="rgb(246,11,31)"/><text x="1051.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.28%)</title><rect x="1051" y="292" width="3" height="15" fill="rgb(246,148,36)"/><text x="1054.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.28%)</title><rect x="1051" y="308" width="3" height="15" fill="rgb(215,60,3)"/><text x="1054.00" y="318.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1978) (1 samples, 0.28%)</title><rect x="1051" y="324" width="3" height="15" fill="rgb(233,90,28)"/><text x="1054.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (1 samples, 0.28%)</title><rect x="1054" y="228" width="4" height="15" fill="rgb(237,147,4)"/><text x="1057.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.28%)</title><rect x="1064" y="260" width="4" height="15" fill="rgb(213,9,7)"/><text x="1067.00" y="270.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.28%)</title><rect x="1064" y="276" width="4" height="15" fill="rgb(241,225,2)"/><text x="1067.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.28%)</title><rect x="1068" y="308" width="3" height="15" fill="rgb(250,228,6)"/><text x="1071.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.28%)</title><rect x="1068" y="324" width="3" height="15" fill="rgb(216,46,40)"/><text x="1071.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.56%)</title><rect x="1068" y="292" width="6" height="15" fill="rgb(216,116,35)"/><text x="1071.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.28%)</title><rect x="1071" y="308" width="3" height="15" fill="rgb(241,39,28)"/><text x="1074.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.28%)</title><rect x="1071" y="324" width="3" height="15" fill="rgb(250,92,8)"/><text x="1074.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3501) (1 samples, 0.28%)</title><rect x="1071" y="340" width="3" height="15" fill="rgb(212,50,28)"/><text x="1074.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.84%)</title><rect x="1068" y="260" width="9" height="15" fill="rgb(230,147,1)"/><text x="1071.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (3 samples, 0.84%)</title><rect x="1068" y="276" width="9" height="15" fill="rgb(227,205,35)"/><text x="1071.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.28%)</title><rect x="1074" y="292" width="3" height="15" fill="rgb(205,49,23)"/><text x="1077.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.28%)</title><rect x="1074" y="308" width="3" height="15" fill="rgb(218,172,16)"/><text x="1077.00" y="318.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.28%)</title><rect x="1074" y="324" width="3" height="15" fill="rgb(213,25,26)"/><text x="1077.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1074" y="340" width="3" height="15" fill="rgb(237,192,2)"/><text x="1077.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (107 samples, 29.89%)</title><rect x="728" y="180" width="353" height="15" fill="rgb(232,6,19)"/><text x="731.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:13..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (8 samples, 2.23%)</title><rect x="1054" y="196" width="27" height="15" fill="rgb(236,54,53)"/><text x="1057.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (8 samples, 2.23%)</title><rect x="1054" y="212" width="27" height="15" fill="rgb(226,224,1)"/><text x="1057.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (7 samples, 1.96%)</title><rect x="1058" y="228" width="23" height="15" fill="rgb(249,202,13)"/><text x="1061.00" y="238.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.40%)</title><rect x="1064" y="244" width="17" height="15" fill="rgb(207,83,0)"/><text x="1067.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3279) (1 samples, 0.28%)</title><rect x="1077" y="260" width="4" height="15" fill="rgb(212,86,29)"/><text x="1080.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 0.56%)</title><rect x="1081" y="180" width="6" height="15" fill="rgb(232,207,22)"/><text x="1084.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.56%)</title><rect x="1087" y="180" width="7" height="15" fill="rgb(233,210,29)"/><text x="1090.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.56%)</title><rect x="1094" y="180" width="7" height="15" fill="rgb(252,91,10)"/><text x="1097.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (123 samples, 34.36%)</title><rect x="702" y="164" width="405" height="15" fill="rgb(250,212,28)"/><text x="705.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (2 samples, 0.56%)</title><rect x="1101" y="180" width="6" height="15" fill="rgb(241,92,25)"/><text x="1104.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (125 samples, 34.92%)</title><rect x="698" y="132" width="412" height="15" fill="rgb(242,48,7)"/><text x="701.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (125 samples, 34.92%)</title><rect x="698" y="148" width="412" height="15" fill="rgb(210,138,30)"/><text x="701.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="1107" y="164" width="3" height="15" fill="rgb(229,216,35)"/><text x="1110.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:931) (1 samples, 0.28%)</title><rect x="1107" y="180" width="3" height="15" fill="rgb(239,178,4)"/><text x="1110.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="1110" y="132" width="4" height="15" fill="rgb(246,147,21)"/><text x="1113.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:61) (128 samples, 35.75%)</title><rect x="695" y="52" width="422" height="15" fill="rgb(243,173,11)"/><text x="698.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimat..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:60) (128 samples, 35.75%)</title><rect x="695" y="68" width="422" height="15" fill="rgb(206,55,25)"/><text x="698.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_est..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:37) (127 samples, 35.47%)</title><rect x="698" y="84" width="419" height="15" fill="rgb(207,94,25)"/><text x="701.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_es..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:31) (127 samples, 35.47%)</title><rect x="698" y="100" width="419" height="15" fill="rgb(246,144,27)"/><text x="701.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimato..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (127 samples, 35.47%)</title><rect x="698" y="116" width="419" height="15" fill="rgb(235,192,3)"/><text x="701.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="1114" y="132" width="3" height="15" fill="rgb(241,173,10)"/><text x="1117.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="1117" y="116" width="3" height="15" fill="rgb(237,53,29)"/><text x="1120.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="1117" y="132" width="3" height="15" fill="rgb(236,59,34)"/><text x="1120.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.28%)</title><rect x="1117" y="148" width="3" height="15" fill="rgb(233,131,45)"/><text x="1120.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.28%)</title><rect x="1120" y="148" width="4" height="15" fill="rgb(228,202,28)"/><text x="1123.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.28%)</title><rect x="1124" y="148" width="3" height="15" fill="rgb(244,95,43)"/><text x="1127.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.28%)</title><rect x="1130" y="196" width="3" height="15" fill="rgb(218,102,50)"/><text x="1133.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.28%)</title><rect x="1130" y="212" width="3" height="15" fill="rgb(222,163,52)"/><text x="1133.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1130" y="228" width="3" height="15" fill="rgb(243,139,36)"/><text x="1133.00" y="238.50"></text></g><g><title>0x7f2daa930ff9 (?) (1 samples, 0.28%)</title><rect x="1133" y="212" width="4" height="15" fill="rgb(238,58,29)"/><text x="1136.00" y="222.50"></text></g><g><title>0x7f2daa92bef6 (?) (1 samples, 0.28%)</title><rect x="1133" y="228" width="4" height="15" fill="rgb(251,117,15)"/><text x="1136.00" y="238.50"></text></g><g><title>0x7f2daa920962 (?) (1 samples, 0.28%)</title><rect x="1133" y="244" width="4" height="15" fill="rgb(251,161,38)"/><text x="1136.00" y="254.50"></text></g><g><title>0x7f2daa9547a7 (?) (1 samples, 0.28%)</title><rect x="1133" y="260" width="4" height="15" fill="rgb(243,44,24)"/><text x="1136.00" y="270.50"></text></g><g><title>0x7f2daa954379 (?) (1 samples, 0.28%)</title><rect x="1133" y="276" width="4" height="15" fill="rgb(229,200,30)"/><text x="1136.00" y="286.50"></text></g><g><title>0x7f2daadb28b8 (?) (1 samples, 0.28%)</title><rect x="1133" y="292" width="4" height="15" fill="rgb(222,226,5)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7f2daadb0c7f (?) (1 samples, 0.28%)</title><rect x="1133" y="308" width="4" height="15" fill="rgb(218,33,40)"/><text x="1136.00" y="318.50"></text></g><g><title>0x7f2daadc399c (?) (1 samples, 0.28%)</title><rect x="1133" y="324" width="4" height="15" fill="rgb(247,132,41)"/><text x="1136.00" y="334.50"></text></g><g><title>0x7f2daabc626e (?) (1 samples, 0.28%)</title><rect x="1133" y="340" width="4" height="15" fill="rgb(205,136,11)"/><text x="1136.00" y="350.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1143" y="340" width="4" height="15" fill="rgb(225,3,53)"/><text x="1146.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1143" y="356" width="4" height="15" fill="rgb(232,214,24)"/><text x="1146.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1143" y="372" width="4" height="15" fill="rgb(233,135,6)"/><text x="1146.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1147" y="340" width="3" height="15" fill="rgb(235,68,54)"/><text x="1150.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1147" y="356" width="3" height="15" fill="rgb(225,192,41)"/><text x="1150.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="340" width="3" height="15" fill="rgb(254,111,37)"/><text x="1153.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="356" width="3" height="15" fill="rgb(230,120,38)"/><text x="1153.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="372" width="3" height="15" fill="rgb(235,89,45)"/><text x="1153.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="388" width="3" height="15" fill="rgb(217,199,19)"/><text x="1153.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="404" width="3" height="15" fill="rgb(226,92,21)"/><text x="1153.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="420" width="3" height="15" fill="rgb(248,136,47)"/><text x="1153.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="436" width="3" height="15" fill="rgb(252,48,44)"/><text x="1153.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="452" width="3" height="15" fill="rgb(219,49,23)"/><text x="1153.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="468" width="3" height="15" fill="rgb(214,170,49)"/><text x="1153.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="484" width="3" height="15" fill="rgb(230,31,47)"/><text x="1153.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="500" width="3" height="15" fill="rgb(231,176,6)"/><text x="1153.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="516" width="3" height="15" fill="rgb(230,120,53)"/><text x="1153.00" y="526.50"></text></g><g><title>0x7f2daa8f7960 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1150" y="532" width="3" height="15" fill="rgb(232,165,43)"/><text x="1153.00" y="542.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1153" y="404" width="4" height="15" fill="rgb(242,30,8)"/><text x="1156.00" y="414.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="340" width="7" height="15" fill="rgb(210,123,34)"/><text x="1156.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="356" width="7" height="15" fill="rgb(216,101,35)"/><text x="1156.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="372" width="7" height="15" fill="rgb(230,172,36)"/><text x="1156.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1153" y="388" width="7" height="15" fill="rgb(252,173,50)"/><text x="1156.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1157" y="404" width="3" height="15" fill="rgb(239,197,29)"/><text x="1160.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1157" y="420" width="3" height="15" fill="rgb(216,150,2)"/><text x="1160.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1157" y="436" width="3" height="15" fill="rgb(251,124,20)"/><text x="1160.00" y="446.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="1160" y="340" width="6" height="15" fill="rgb(243,98,42)"/><text x="1163.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1163" y="356" width="3" height="15" fill="rgb(229,199,15)"/><text x="1166.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="340" width="4" height="15" fill="rgb(229,61,22)"/><text x="1169.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="356" width="4" height="15" fill="rgb(218,99,36)"/><text x="1169.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="372" width="4" height="15" fill="rgb(205,11,10)"/><text x="1169.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="388" width="4" height="15" fill="rgb(253,15,5)"/><text x="1169.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="404" width="4" height="15" fill="rgb(227,93,37)"/><text x="1169.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorPreAllocateBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1166" y="420" width="4" height="15" fill="rgb(216,96,54)"/><text x="1169.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.07%)</title><rect x="1137" y="260" width="36" height="15" fill="rgb(217,171,27)"/><text x="1140.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.07%)</title><rect x="1137" y="276" width="36" height="15" fill="rgb(225,117,0)"/><text x="1140.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.79%)</title><rect x="1140" y="292" width="33" height="15" fill="rgb(211,78,32)"/><text x="1143.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.79%)</title><rect x="1140" y="308" width="33" height="15" fill="rgb(247,197,44)"/><text x="1143.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.79%)</title><rect x="1140" y="324" width="33" height="15" fill="rgb(227,10,2)"/><text x="1143.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="340" width="3" height="15" fill="rgb(228,43,6)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="356" width="3" height="15" fill="rgb(213,219,18)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="372" width="3" height="15" fill="rgb(208,78,38)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="388" width="3" height="15" fill="rgb(236,189,11)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="404" width="3" height="15" fill="rgb(215,33,11)"/><text x="1173.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="420" width="3" height="15" fill="rgb(241,100,15)"/><text x="1173.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1170" y="436" width="3" height="15" fill="rgb(217,132,15)"/><text x="1173.00" y="446.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 3.35%)</title><rect x="1137" y="244" width="39" height="15" fill="rgb(217,203,33)"/><text x="1140.00" y="254.50">onn..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1173" y="260" width="3" height="15" fill="rgb(251,132,46)"/><text x="1176.00" y="270.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1176" y="244" width="4" height="15" fill="rgb(236,64,47)"/><text x="1179.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (17 samples, 4.75%)</title><rect x="1127" y="164" width="56" height="15" fill="rgb(253,121,8)"/><text x="1130.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (17 samples, 4.75%)</title><rect x="1127" y="180" width="56" height="15" fill="rgb(212,141,13)"/><text x="1130.00" y="190.50">run (..</text></g><g><title>run (onnxruntime/capi/session.py:136) (15 samples, 4.19%)</title><rect x="1133" y="196" width="50" height="15" fill="rgb(248,120,25)"/><text x="1136.00" y="206.50">run (..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.91%)</title><rect x="1137" y="212" width="46" height="15" fill="rgb(243,69,51)"/><text x="1140.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 3.91%)</title><rect x="1137" y="228" width="46" height="15" fill="rgb(231,168,11)"/><text x="1140.00" y="238.50">void..</text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(209,147,10)"/><text x="1183.00" y="254.50"></text></g><g><title>all (358 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,168,10)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:68) (22 samples, 6.15%)</title><rect x="1117" y="52" width="73" height="15" fill="rgb(213,84,42)"/><text x="1120.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:67) (22 samples, 6.15%)</title><rect x="1117" y="68" width="73" height="15" fill="rgb(212,101,31)"/><text x="1120.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:37) (22 samples, 6.15%)</title><rect x="1117" y="84" width="73" height="15" fill="rgb(228,96,44)"/><text x="1120.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py:31) (22 samples, 6.15%)</title><rect x="1117" y="100" width="73" height="15" fill="rgb(247,207,43)"/><text x="1120.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (21 samples, 5.87%)</title><rect x="1120" y="116" width="70" height="15" fill="rgb(251,137,23)"/><text x="1123.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (21 samples, 5.87%)</title><rect x="1120" y="132" width="70" height="15" fill="rgb(247,66,32)"/><text x="1123.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (19 samples, 5.31%)</title><rect x="1127" y="148" width="63" height="15" fill="rgb(234,205,45)"/><text x="1130.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 0.56%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(248,116,7)"/><text x="1186.00" y="174.50"></text></g></g></svg>