<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2134" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2117.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2117.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.45%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(219,27,44)"/><text x="13.00" y="926.50"></text></g><g><title>join (posixpath.py:92) (1 samples, 0.45%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(232,110,32)"/><text x="13.00" y="942.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.45%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(243,109,43)"/><text x="13.00" y="958.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.90%)</title><rect x="10" y="900" width="10" height="15" fill="rgb(245,134,43)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.45%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(235,114,49)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.45%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(205,162,3)"/><text x="18.00" y="942.50"></text></g><g><title>dirname (posixpath.py:160) (1 samples, 0.45%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(232,136,14)"/><text x="18.00" y="958.50"></text></g><g><title>0x7fb2702b61cb (libc-2.29.so) (1 samples, 0.45%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(231,64,34)"/><text x="18.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.36%)</title><rect x="10" y="852" width="16" height="15" fill="rgb(249,177,21)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.36%)</title><rect x="10" y="868" width="16" height="15" fill="rgb(245,92,47)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.36%)</title><rect x="10" y="884" width="16" height="15" fill="rgb(230,29,15)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.45%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(252,8,51)"/><text x="23.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py:711) (1 samples, 0.45%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(217,194,3)"/><text x="23.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (4 samples, 1.81%)</title><rect x="10" y="148" width="21" height="15" fill="rgb(229,26,7)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="164" width="21" height="15" fill="rgb(237,214,14)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.81%)</title><rect x="10" y="180" width="21" height="15" fill="rgb(206,54,16)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(220,60,22)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(237,3,49)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(220,224,22)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(240,171,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(244,219,15)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(216,81,6)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.81%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(233,109,29)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(223,179,46)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(244,148,2)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(236,221,6)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(240,121,3)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(205,170,1)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.81%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(225,167,14)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(235,50,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(239,198,11)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(210,131,8)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(216,141,19)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(208,32,34)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.81%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(224,208,6)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(239,55,5)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(205,45,22)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(216,37,11)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(242,226,54)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(250,207,17)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.81%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(228,84,48)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="596" width="21" height="15" fill="rgb(248,184,15)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.81%)</title><rect x="10" y="612" width="21" height="15" fill="rgb(246,26,26)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="628" width="21" height="15" fill="rgb(218,175,51)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="644" width="21" height="15" fill="rgb(209,222,40)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="660" width="21" height="15" fill="rgb(230,87,32)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="676" width="21" height="15" fill="rgb(226,74,45)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="692" width="21" height="15" fill="rgb(230,169,22)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="708" width="21" height="15" fill="rgb(210,195,49)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.81%)</title><rect x="10" y="724" width="21" height="15" fill="rgb(237,71,40)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="10" y="740" width="21" height="15" fill="rgb(228,129,11)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="10" y="756" width="21" height="15" fill="rgb(237,210,30)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="10" y="772" width="21" height="15" fill="rgb(252,196,23)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="10" y="788" width="21" height="15" fill="rgb(244,144,37)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="10" y="804" width="21" height="15" fill="rgb(207,208,41)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 1.81%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(215,51,51)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 1.81%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(244,151,16)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.45%)</title><rect x="26" y="852" width="5" height="15" fill="rgb(210,62,21)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.45%)</title><rect x="26" y="868" width="5" height="15" fill="rgb(207,167,20)"/><text x="29.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.45%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(247,197,8)"/><text x="29.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.45%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(242,79,0)"/><text x="29.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.45%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(233,179,19)"/><text x="29.00" y="926.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.45%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(228,107,43)"/><text x="29.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (1 samples, 0.45%)</title><rect x="31" y="148" width="5" height="15" fill="rgb(244,38,1)"/><text x="34.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="164" width="5" height="15" fill="rgb(217,146,5)"/><text x="34.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="31" y="180" width="5" height="15" fill="rgb(207,214,14)"/><text x="34.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="196" width="5" height="15" fill="rgb(222,87,32)"/><text x="34.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="212" width="5" height="15" fill="rgb(235,176,18)"/><text x="34.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="228" width="5" height="15" fill="rgb(208,17,32)"/><text x="34.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="244" width="5" height="15" fill="rgb(223,46,35)"/><text x="34.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="260" width="5" height="15" fill="rgb(238,6,18)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="276" width="5" height="15" fill="rgb(246,67,35)"/><text x="34.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.45%)</title><rect x="31" y="292" width="5" height="15" fill="rgb(240,165,3)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="308" width="5" height="15" fill="rgb(235,168,0)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="324" width="5" height="15" fill="rgb(243,135,35)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="340" width="5" height="15" fill="rgb(222,193,34)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="356" width="5" height="15" fill="rgb(238,54,6)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="372" width="5" height="15" fill="rgb(248,1,23)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.45%)</title><rect x="31" y="388" width="5" height="15" fill="rgb(213,174,46)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="404" width="5" height="15" fill="rgb(229,161,52)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="420" width="5" height="15" fill="rgb(241,22,15)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="436" width="5" height="15" fill="rgb(217,133,25)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="452" width="5" height="15" fill="rgb(235,126,34)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="468" width="5" height="15" fill="rgb(249,10,3)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.45%)</title><rect x="31" y="484" width="5" height="15" fill="rgb(205,117,2)"/><text x="34.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="500" width="5" height="15" fill="rgb(208,195,8)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="516" width="5" height="15" fill="rgb(225,116,27)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="532" width="5" height="15" fill="rgb(233,77,27)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="548" width="5" height="15" fill="rgb(245,108,2)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="564" width="5" height="15" fill="rgb(225,156,14)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.45%)</title><rect x="31" y="580" width="5" height="15" fill="rgb(238,121,50)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="596" width="5" height="15" fill="rgb(212,86,37)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="612" width="5" height="15" fill="rgb(229,155,31)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="628" width="5" height="15" fill="rgb(241,218,43)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="644" width="5" height="15" fill="rgb(214,222,22)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="660" width="5" height="15" fill="rgb(219,48,43)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.45%)</title><rect x="31" y="676" width="5" height="15" fill="rgb(243,211,38)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="692" width="5" height="15" fill="rgb(213,73,21)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="708" width="5" height="15" fill="rgb(219,217,54)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="724" width="5" height="15" fill="rgb(242,163,28)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="740" width="5" height="15" fill="rgb(245,14,8)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="756" width="5" height="15" fill="rgb(252,201,46)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.45%)</title><rect x="31" y="772" width="5" height="15" fill="rgb(208,2,18)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="31" y="788" width="5" height="15" fill="rgb(236,55,32)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="804" width="5" height="15" fill="rgb(219,216,48)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(214,128,6)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(205,14,37)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(244,194,0)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(215,13,0)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="884" width="5" height="15" fill="rgb(211,201,14)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.45%)</title><rect x="31" y="900" width="5" height="15" fill="rgb(241,226,31)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(207,159,0)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(216,135,15)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(216,88,7)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(205,139,26)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(219,171,2)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(221,202,53)"/><text x="34.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(205,49,22)"/><text x="34.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(220,200,43)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(241,126,22)"/><text x="34.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(211,130,26)"/><text x="34.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(254,81,18)"/><text x="34.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(221,72,38)"/><text x="34.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(207,223,23)"/><text x="34.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:402) (1 samples, 0.45%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(234,139,11)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(234,115,40)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(227,89,25)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.45%)</title><rect x="31" y="1172" width="5" height="15" fill="rgb(216,76,33)"/><text x="34.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.45%)</title><rect x="31" y="1188" width="5" height="15" fill="rgb(248,70,7)"/><text x="34.00" y="1198.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:567) (1 samples, 0.45%)</title><rect x="31" y="1204" width="5" height="15" fill="rgb(220,7,54)"/><text x="34.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.45%)</title><rect x="36" y="484" width="6" height="15" fill="rgb(219,98,54)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="500" width="6" height="15" fill="rgb(216,13,24)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="516" width="6" height="15" fill="rgb(217,190,43)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="532" width="6" height="15" fill="rgb(244,207,35)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="548" width="6" height="15" fill="rgb(227,109,4)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="564" width="6" height="15" fill="rgb(217,79,20)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.45%)</title><rect x="36" y="580" width="6" height="15" fill="rgb(245,85,17)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="596" width="6" height="15" fill="rgb(244,145,7)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="612" width="6" height="15" fill="rgb(206,163,4)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="628" width="6" height="15" fill="rgb(243,90,24)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="644" width="6" height="15" fill="rgb(215,61,32)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="660" width="6" height="15" fill="rgb(211,106,37)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.45%)</title><rect x="36" y="676" width="6" height="15" fill="rgb(251,118,26)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="692" width="6" height="15" fill="rgb(211,75,18)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="708" width="6" height="15" fill="rgb(213,153,6)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="724" width="6" height="15" fill="rgb(253,112,18)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="740" width="6" height="15" fill="rgb(219,71,3)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="756" width="6" height="15" fill="rgb(235,141,22)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.45%)</title><rect x="36" y="772" width="6" height="15" fill="rgb(218,210,19)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="788" width="6" height="15" fill="rgb(236,158,12)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="804" width="6" height="15" fill="rgb(234,49,2)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="820" width="6" height="15" fill="rgb(216,62,3)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="836" width="6" height="15" fill="rgb(205,210,5)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="852" width="6" height="15" fill="rgb(222,13,7)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.45%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(253,190,35)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(211,75,34)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(222,115,9)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(240,87,22)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(246,168,22)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(254,191,39)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:51) (1 samples, 0.45%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(223,5,8)"/><text x="39.00" y="974.50"></text></g><g><title>UniversalDetector (chardet/universaldetector.py:71) (1 samples, 0.45%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(246,199,51)"/><text x="39.00" y="990.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.45%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(238,161,4)"/><text x="39.00" y="1006.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.45%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(237,99,30)"/><text x="39.00" y="1022.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.45%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(214,198,7)"/><text x="39.00" y="1038.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.45%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(230,117,25)"/><text x="39.00" y="1054.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.45%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(216,200,52)"/><text x="39.00" y="1070.50"></text></g><g><title>_optimize_charset (sre_compile.py:337) (1 samples, 0.45%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(228,55,27)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.90%)</title><rect x="36" y="244" width="11" height="15" fill="rgb(205,183,43)"/><text x="39.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="260" width="11" height="15" fill="rgb(224,131,14)"/><text x="39.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="36" y="276" width="11" height="15" fill="rgb(206,162,50)"/><text x="39.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="36" y="292" width="11" height="15" fill="rgb(206,16,33)"/><text x="39.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="36" y="308" width="11" height="15" fill="rgb(253,185,38)"/><text x="39.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="324" width="11" height="15" fill="rgb(230,104,37)"/><text x="39.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.90%)</title><rect x="36" y="340" width="11" height="15" fill="rgb(229,12,40)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="356" width="11" height="15" fill="rgb(205,152,30)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.90%)</title><rect x="36" y="372" width="11" height="15" fill="rgb(233,215,54)"/><text x="39.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="388" width="11" height="15" fill="rgb(207,118,36)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="404" width="11" height="15" fill="rgb(234,50,38)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="36" y="420" width="11" height="15" fill="rgb(254,168,48)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="36" y="436" width="11" height="15" fill="rgb(210,161,29)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="36" y="452" width="11" height="15" fill="rgb(244,105,52)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="468" width="11" height="15" fill="rgb(205,202,44)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.45%)</title><rect x="42" y="484" width="5" height="15" fill="rgb(234,0,54)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="500" width="5" height="15" fill="rgb(206,135,47)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="516" width="5" height="15" fill="rgb(237,59,35)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="532" width="5" height="15" fill="rgb(245,102,16)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="548" width="5" height="15" fill="rgb(227,17,32)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="564" width="5" height="15" fill="rgb(247,224,36)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.45%)</title><rect x="42" y="580" width="5" height="15" fill="rgb(225,171,11)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="596" width="5" height="15" fill="rgb(250,115,22)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="42" y="612" width="5" height="15" fill="rgb(252,111,1)"/><text x="45.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="628" width="5" height="15" fill="rgb(228,45,12)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="644" width="5" height="15" fill="rgb(254,5,52)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="660" width="5" height="15" fill="rgb(211,162,2)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="676" width="5" height="15" fill="rgb(243,119,25)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="692" width="5" height="15" fill="rgb(216,122,21)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="708" width="5" height="15" fill="rgb(223,94,10)"/><text x="45.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.45%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(231,147,0)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(234,121,42)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(224,24,43)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(246,176,29)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(233,67,11)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(235,174,41)"/><text x="45.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.45%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(225,98,23)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(222,65,21)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(241,135,0)"/><text x="45.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(217,208,23)"/><text x="45.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(223,2,5)"/><text x="45.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(248,214,31)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.45%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(249,83,18)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(211,85,5)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(247,180,51)"/><text x="45.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(229,137,45)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(207,112,25)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(220,128,18)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(236,113,36)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(224,169,38)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(209,78,9)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.45%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(229,16,39)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(215,29,30)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(231,90,3)"/><text x="45.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(238,226,52)"/><text x="45.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(206,158,40)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(226,24,30)"/><text x="45.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.45%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(233,59,20)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(219,227,33)"/><text x="45.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(226,226,31)"/><text x="45.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(222,61,26)"/><text x="45.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(248,120,32)"/><text x="45.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(229,7,46)"/><text x="45.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="42" y="1252" width="5" height="15" fill="rgb(223,175,34)"/><text x="45.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.45%)</title><rect x="47" y="1012" width="5" height="15" fill="rgb(216,94,41)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(218,18,45)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(242,126,6)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(252,169,27)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(239,123,2)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(216,116,22)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.45%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(210,197,8)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1124" width="5" height="15" fill="rgb(228,60,39)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1140" width="5" height="15" fill="rgb(226,11,8)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1156" width="5" height="15" fill="rgb(210,179,25)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1172" width="5" height="15" fill="rgb(207,189,34)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1188" width="5" height="15" fill="rgb(220,213,44)"/><text x="50.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.45%)</title><rect x="47" y="1204" width="5" height="15" fill="rgb(230,181,54)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1220" width="5" height="15" fill="rgb(251,42,21)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1236" width="5" height="15" fill="rgb(210,93,52)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1252" width="5" height="15" fill="rgb(237,152,15)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1268" width="5" height="15" fill="rgb(217,30,42)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1284" width="5" height="15" fill="rgb(236,15,8)"/><text x="50.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.45%)</title><rect x="47" y="1300" width="5" height="15" fill="rgb(253,144,3)"/><text x="50.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1316" width="5" height="15" fill="rgb(215,203,41)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1332" width="5" height="15" fill="rgb(250,149,0)"/><text x="50.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1348" width="5" height="15" fill="rgb(235,69,43)"/><text x="50.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1364" width="5" height="15" fill="rgb(253,131,6)"/><text x="50.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1380" width="5" height="15" fill="rgb(244,178,43)"/><text x="50.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.45%)</title><rect x="47" y="1396" width="5" height="15" fill="rgb(229,96,5)"/><text x="50.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1412" width="5" height="15" fill="rgb(219,199,9)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1428" width="5" height="15" fill="rgb(245,196,45)"/><text x="50.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1444" width="5" height="15" fill="rgb(229,81,7)"/><text x="50.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1460" width="5" height="15" fill="rgb(243,229,34)"/><text x="50.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1476" width="5" height="15" fill="rgb(207,161,40)"/><text x="50.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.45%)</title><rect x="47" y="1492" width="5" height="15" fill="rgb(219,14,27)"/><text x="50.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1508" width="5" height="15" fill="rgb(220,185,47)"/><text x="50.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1524" width="5" height="15" fill="rgb(243,61,9)"/><text x="50.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1540" width="5" height="15" fill="rgb(253,130,50)"/><text x="50.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1556" width="5" height="15" fill="rgb(235,207,1)"/><text x="50.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1572" width="5" height="15" fill="rgb(215,182,21)"/><text x="50.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.45%)</title><rect x="47" y="1588" width="5" height="15" fill="rgb(207,228,7)"/><text x="50.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1604" width="5" height="15" fill="rgb(229,151,10)"/><text x="50.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1620" width="5" height="15" fill="rgb(254,181,45)"/><text x="50.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1636" width="5" height="15" fill="rgb(247,220,32)"/><text x="50.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1652" width="5" height="15" fill="rgb(210,83,42)"/><text x="50.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1668" width="5" height="15" fill="rgb(213,222,20)"/><text x="50.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.45%)</title><rect x="47" y="1684" width="5" height="15" fill="rgb(217,92,6)"/><text x="50.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1700" width="5" height="15" fill="rgb(206,148,23)"/><text x="50.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1716" width="5" height="15" fill="rgb(211,197,16)"/><text x="50.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1732" width="5" height="15" fill="rgb(249,212,18)"/><text x="50.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1748" width="5" height="15" fill="rgb(210,56,52)"/><text x="50.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1764" width="5" height="15" fill="rgb(232,92,27)"/><text x="50.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.45%)</title><rect x="47" y="1780" width="5" height="15" fill="rgb(253,191,28)"/><text x="50.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1796" width="5" height="15" fill="rgb(211,135,33)"/><text x="50.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1812" width="5" height="15" fill="rgb(209,160,43)"/><text x="50.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1828" width="5" height="15" fill="rgb(226,197,43)"/><text x="50.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1844" width="5" height="15" fill="rgb(238,73,54)"/><text x="50.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1860" width="5" height="15" fill="rgb(235,85,14)"/><text x="50.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.45%)</title><rect x="47" y="1876" width="5" height="15" fill="rgb(220,7,39)"/><text x="50.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="47" y="1892" width="5" height="15" fill="rgb(221,107,39)"/><text x="50.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="47" y="1908" width="5" height="15" fill="rgb(211,36,27)"/><text x="50.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="47" y="1924" width="5" height="15" fill="rgb(218,171,30)"/><text x="50.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="47" y="1940" width="5" height="15" fill="rgb(221,216,0)"/><text x="50.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="47" y="1956" width="5" height="15" fill="rgb(210,110,13)"/><text x="50.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py:19) (1 samples, 0.45%)</title><rect x="47" y="1972" width="5" height="15" fill="rgb(250,214,4)"/><text x="50.00" y="1982.50"></text></g><g><title>TextToPath (matplotlib/textpath.py:99) (1 samples, 0.45%)</title><rect x="47" y="1988" width="5" height="15" fill="rgb(243,57,14)"/><text x="50.00" y="1998.50"></text></g><g><title>_delete_parameter (matplotlib/cbook/deprecation.py:349) (1 samples, 0.45%)</title><rect x="47" y="2004" width="5" height="15" fill="rgb(240,50,0)"/><text x="50.00" y="2014.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.45%)</title><rect x="47" y="2020" width="5" height="15" fill="rgb(227,140,36)"/><text x="50.00" y="2030.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.45%)</title><rect x="47" y="2036" width="5" height="15" fill="rgb(235,128,26)"/><text x="50.00" y="2046.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.45%)</title><rect x="47" y="2052" width="5" height="15" fill="rgb(244,29,52)"/><text x="50.00" y="2062.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.45%)</title><rect x="47" y="2068" width="5" height="15" fill="rgb(226,165,50)"/><text x="50.00" y="2078.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.45%)</title><rect x="47" y="2084" width="5" height="15" fill="rgb(247,90,35)"/><text x="50.00" y="2094.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.90%)</title><rect x="47" y="436" width="11" height="15" fill="rgb(208,141,17)"/><text x="50.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="452" width="11" height="15" fill="rgb(218,157,0)"/><text x="50.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="468" width="11" height="15" fill="rgb(217,166,4)"/><text x="50.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="484" width="11" height="15" fill="rgb(213,189,8)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="500" width="11" height="15" fill="rgb(215,221,15)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="516" width="11" height="15" fill="rgb(219,73,45)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.90%)</title><rect x="47" y="532" width="11" height="15" fill="rgb(229,169,39)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="548" width="11" height="15" fill="rgb(240,174,38)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="564" width="11" height="15" fill="rgb(254,35,36)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="580" width="11" height="15" fill="rgb(232,24,54)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="596" width="11" height="15" fill="rgb(218,106,4)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="612" width="11" height="15" fill="rgb(254,55,9)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.90%)</title><rect x="47" y="628" width="11" height="15" fill="rgb(212,179,37)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="644" width="11" height="15" fill="rgb(244,100,23)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="660" width="11" height="15" fill="rgb(214,71,26)"/><text x="50.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="676" width="11" height="15" fill="rgb(243,155,43)"/><text x="50.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="692" width="11" height="15" fill="rgb(231,28,16)"/><text x="50.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="708" width="11" height="15" fill="rgb(233,35,41)"/><text x="50.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.90%)</title><rect x="47" y="724" width="11" height="15" fill="rgb(247,139,32)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="740" width="11" height="15" fill="rgb(248,48,23)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="756" width="11" height="15" fill="rgb(212,178,54)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="772" width="11" height="15" fill="rgb(237,7,10)"/><text x="50.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="788" width="11" height="15" fill="rgb(215,201,6)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="804" width="11" height="15" fill="rgb(239,32,49)"/><text x="50.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.90%)</title><rect x="47" y="820" width="11" height="15" fill="rgb(214,37,36)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="836" width="11" height="15" fill="rgb(209,112,48)"/><text x="50.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="852" width="11" height="15" fill="rgb(242,175,9)"/><text x="50.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="868" width="11" height="15" fill="rgb(248,113,0)"/><text x="50.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="884" width="11" height="15" fill="rgb(229,165,10)"/><text x="50.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="900" width="11" height="15" fill="rgb(229,123,8)"/><text x="50.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.90%)</title><rect x="47" y="916" width="11" height="15" fill="rgb(246,60,34)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="47" y="932" width="11" height="15" fill="rgb(252,104,4)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="47" y="948" width="11" height="15" fill="rgb(214,153,47)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="47" y="964" width="11" height="15" fill="rgb(214,89,45)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="47" y="980" width="11" height="15" fill="rgb(208,14,31)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="47" y="996" width="11" height="15" fill="rgb(208,3,1)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.45%)</title><rect x="52" y="1012" width="6" height="15" fill="rgb(249,115,46)"/><text x="55.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:4986) (1 samples, 0.45%)</title><rect x="52" y="1028" width="6" height="15" fill="rgb(209,174,44)"/><text x="55.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.45%)</title><rect x="52" y="1044" width="6" height="15" fill="rgb(216,212,4)"/><text x="55.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:433) (1 samples, 0.45%)</title><rect x="52" y="1060" width="6" height="15" fill="rgb(206,189,7)"/><text x="55.00" y="1070.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.45%)</title><rect x="58" y="1108" width="5" height="15" fill="rgb(207,15,23)"/><text x="61.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="58" y="1124" width="5" height="15" fill="rgb(247,56,35)"/><text x="61.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="58" y="1140" width="5" height="15" fill="rgb(237,190,35)"/><text x="61.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="58" y="1156" width="5" height="15" fill="rgb(222,6,49)"/><text x="61.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="58" y="1172" width="5" height="15" fill="rgb(230,229,17)"/><text x="61.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="58" y="1188" width="5" height="15" fill="rgb(221,215,31)"/><text x="61.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:11) (1 samples, 0.45%)</title><rect x="58" y="1204" width="5" height="15" fill="rgb(224,21,41)"/><text x="61.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="58" y="1220" width="5" height="15" fill="rgb(241,172,35)"/><text x="61.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="58" y="1236" width="5" height="15" fill="rgb(236,217,29)"/><text x="61.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="58" y="1252" width="5" height="15" fill="rgb(249,174,20)"/><text x="61.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="58" y="1268" width="5" height="15" fill="rgb(243,69,52)"/><text x="61.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="58" y="1284" width="5" height="15" fill="rgb(229,34,45)"/><text x="61.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="58" y="1300" width="5" height="15" fill="rgb(218,104,40)"/><text x="61.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="58" y="1316" width="5" height="15" fill="rgb(236,111,16)"/><text x="61.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="58" y="1332" width="5" height="15" fill="rgb(250,90,8)"/><text x="61.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py:21) (1 samples, 0.45%)</title><rect x="58" y="1348" width="5" height="15" fill="rgb(223,106,13)"/><text x="61.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="58" y="1364" width="5" height="15" fill="rgb(207,166,23)"/><text x="61.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="58" y="1380" width="5" height="15" fill="rgb(221,210,37)"/><text x="61.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="58" y="1396" width="5" height="15" fill="rgb(225,97,44)"/><text x="61.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="58" y="1412" width="5" height="15" fill="rgb(221,159,37)"/><text x="61.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="58" y="1428" width="5" height="15" fill="rgb(247,201,38)"/><text x="61.00" y="1438.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/container.py:9) (1 samples, 0.45%)</title><rect x="58" y="1444" width="5" height="15" fill="rgb(218,25,26)"/><text x="61.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="58" y="1460" width="5" height="15" fill="rgb(250,202,25)"/><text x="61.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="58" y="1476" width="5" height="15" fill="rgb(234,228,19)"/><text x="61.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="58" y="1492" width="5" height="15" fill="rgb(224,48,1)"/><text x="61.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="58" y="1508" width="5" height="15" fill="rgb(219,34,6)"/><text x="61.00" y="1518.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="58" y="1524" width="5" height="15" fill="rgb(243,146,4)"/><text x="61.00" y="1534.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="58" y="1540" width="5" height="15" fill="rgb(253,178,19)"/><text x="61.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.45%)</title><rect x="63" y="1108" width="5" height="15" fill="rgb(219,97,43)"/><text x="66.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="63" y="1124" width="5" height="15" fill="rgb(217,6,31)"/><text x="66.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="63" y="1140" width="5" height="15" fill="rgb(222,67,16)"/><text x="66.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="63" y="1156" width="5" height="15" fill="rgb(239,64,22)"/><text x="66.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="63" y="1172" width="5" height="15" fill="rgb(215,33,1)"/><text x="66.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="63" y="1188" width="5" height="15" fill="rgb(228,88,35)"/><text x="66.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.45%)</title><rect x="63" y="1204" width="5" height="15" fill="rgb(237,46,39)"/><text x="66.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="63" y="1220" width="5" height="15" fill="rgb(209,157,49)"/><text x="66.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="63" y="1236" width="5" height="15" fill="rgb(235,129,17)"/><text x="66.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="63" y="1252" width="5" height="15" fill="rgb(222,43,37)"/><text x="66.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="63" y="1268" width="5" height="15" fill="rgb(254,64,0)"/><text x="66.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="63" y="1284" width="5" height="15" fill="rgb(231,68,27)"/><text x="66.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:6) (1 samples, 0.45%)</title><rect x="63" y="1300" width="5" height="15" fill="rgb(250,63,8)"/><text x="66.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="63" y="1316" width="5" height="15" fill="rgb(246,147,24)"/><text x="66.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="63" y="1332" width="5" height="15" fill="rgb(212,4,5)"/><text x="66.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="63" y="1348" width="5" height="15" fill="rgb(229,22,31)"/><text x="66.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="63" y="1364" width="5" height="15" fill="rgb(241,78,22)"/><text x="66.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="63" y="1380" width="5" height="15" fill="rgb(214,222,10)"/><text x="66.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="63" y="1396" width="5" height="15" fill="rgb(233,82,19)"/><text x="66.00" y="1406.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:4) (12 samples, 5.43%)</title><rect x="10" y="52" width="64" height="15" fill="rgb(206,122,34)"/><text x="13.00" y="62.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.43%)</title><rect x="10" y="68" width="64" height="15" fill="rgb(226,200,46)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.43%)</title><rect x="10" y="84" width="64" height="15" fill="rgb(219,157,41)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.43%)</title><rect x="10" y="100" width="64" height="15" fill="rgb(225,46,8)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.43%)</title><rect x="10" y="116" width="64" height="15" fill="rgb(240,85,11)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.43%)</title><rect x="10" y="132" width="64" height="15" fill="rgb(240,66,35)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (7 samples, 3.17%)</title><rect x="36" y="148" width="38" height="15" fill="rgb(212,129,6)"/><text x="39.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.17%)</title><rect x="36" y="164" width="38" height="15" fill="rgb(247,156,19)"/><text x="39.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.17%)</title><rect x="36" y="180" width="38" height="15" fill="rgb(217,175,23)"/><text x="39.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.17%)</title><rect x="36" y="196" width="38" height="15" fill="rgb(230,87,26)"/><text x="39.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.17%)</title><rect x="36" y="212" width="38" height="15" fill="rgb(216,80,17)"/><text x="39.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.17%)</title><rect x="36" y="228" width="38" height="15" fill="rgb(253,205,23)"/><text x="39.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.26%)</title><rect x="47" y="244" width="27" height="15" fill="rgb(226,48,48)"/><text x="50.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.26%)</title><rect x="47" y="260" width="27" height="15" fill="rgb(245,48,45)"/><text x="50.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.26%)</title><rect x="47" y="276" width="27" height="15" fill="rgb(226,175,35)"/><text x="50.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.26%)</title><rect x="47" y="292" width="27" height="15" fill="rgb(209,22,14)"/><text x="50.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.26%)</title><rect x="47" y="308" width="27" height="15" fill="rgb(216,1,21)"/><text x="50.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.26%)</title><rect x="47" y="324" width="27" height="15" fill="rgb(210,107,24)"/><text x="50.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.26%)</title><rect x="47" y="340" width="27" height="15" fill="rgb(225,132,25)"/><text x="50.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.26%)</title><rect x="47" y="356" width="27" height="15" fill="rgb(213,96,13)"/><text x="50.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.26%)</title><rect x="47" y="372" width="27" height="15" fill="rgb(213,180,18)"/><text x="50.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.26%)</title><rect x="47" y="388" width="27" height="15" fill="rgb(216,54,16)"/><text x="50.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.26%)</title><rect x="47" y="404" width="27" height="15" fill="rgb(251,86,50)"/><text x="50.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.26%)</title><rect x="47" y="420" width="27" height="15" fill="rgb(231,74,47)"/><text x="50.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.36%)</title><rect x="58" y="436" width="16" height="15" fill="rgb(238,121,9)"/><text x="61.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="452" width="16" height="15" fill="rgb(233,17,5)"/><text x="61.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.36%)</title><rect x="58" y="468" width="16" height="15" fill="rgb(235,146,10)"/><text x="61.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="484" width="16" height="15" fill="rgb(253,118,44)"/><text x="61.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="500" width="16" height="15" fill="rgb(241,161,26)"/><text x="61.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="516" width="16" height="15" fill="rgb(253,40,44)"/><text x="61.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="532" width="16" height="15" fill="rgb(244,172,54)"/><text x="61.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="548" width="16" height="15" fill="rgb(230,43,46)"/><text x="61.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="564" width="16" height="15" fill="rgb(249,219,12)"/><text x="61.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.36%)</title><rect x="58" y="580" width="16" height="15" fill="rgb(211,15,39)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="596" width="16" height="15" fill="rgb(230,215,19)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="612" width="16" height="15" fill="rgb(209,130,6)"/><text x="61.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="628" width="16" height="15" fill="rgb(216,114,2)"/><text x="61.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="644" width="16" height="15" fill="rgb(242,60,1)"/><text x="61.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="660" width="16" height="15" fill="rgb(230,126,5)"/><text x="61.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.36%)</title><rect x="58" y="676" width="16" height="15" fill="rgb(237,229,14)"/><text x="61.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="692" width="16" height="15" fill="rgb(253,210,33)"/><text x="61.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="708" width="16" height="15" fill="rgb(207,186,28)"/><text x="61.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="724" width="16" height="15" fill="rgb(211,141,7)"/><text x="61.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="740" width="16" height="15" fill="rgb(237,90,36)"/><text x="61.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="756" width="16" height="15" fill="rgb(222,73,41)"/><text x="61.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.36%)</title><rect x="58" y="772" width="16" height="15" fill="rgb(208,72,43)"/><text x="61.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="788" width="16" height="15" fill="rgb(214,163,5)"/><text x="61.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="804" width="16" height="15" fill="rgb(245,86,14)"/><text x="61.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="820" width="16" height="15" fill="rgb(209,9,32)"/><text x="61.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="836" width="16" height="15" fill="rgb(208,49,28)"/><text x="61.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="852" width="16" height="15" fill="rgb(241,115,46)"/><text x="61.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.36%)</title><rect x="58" y="868" width="16" height="15" fill="rgb(219,20,36)"/><text x="61.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="884" width="16" height="15" fill="rgb(218,134,53)"/><text x="61.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.36%)</title><rect x="58" y="900" width="16" height="15" fill="rgb(229,211,49)"/><text x="61.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="916" width="16" height="15" fill="rgb(235,19,39)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="932" width="16" height="15" fill="rgb(251,53,13)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="948" width="16" height="15" fill="rgb(242,91,21)"/><text x="61.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="964" width="16" height="15" fill="rgb(231,75,39)"/><text x="61.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="980" width="16" height="15" fill="rgb(247,149,48)"/><text x="61.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="996" width="16" height="15" fill="rgb(223,215,5)"/><text x="61.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.36%)</title><rect x="58" y="1012" width="16" height="15" fill="rgb(233,93,7)"/><text x="61.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="58" y="1028" width="16" height="15" fill="rgb(217,136,10)"/><text x="61.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="58" y="1044" width="16" height="15" fill="rgb(252,214,25)"/><text x="61.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="58" y="1060" width="16" height="15" fill="rgb(236,115,6)"/><text x="61.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="58" y="1076" width="16" height="15" fill="rgb(246,174,14)"/><text x="61.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="58" y="1092" width="16" height="15" fill="rgb(213,79,39)"/><text x="61.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.45%)</title><rect x="68" y="1108" width="6" height="15" fill="rgb(250,226,53)"/><text x="71.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="68" y="1124" width="6" height="15" fill="rgb(249,8,9)"/><text x="71.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="68" y="1140" width="6" height="15" fill="rgb(228,26,7)"/><text x="71.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="68" y="1156" width="6" height="15" fill="rgb(236,162,11)"/><text x="71.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="68" y="1172" width="6" height="15" fill="rgb(218,94,46)"/><text x="71.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="68" y="1188" width="6" height="15" fill="rgb(242,126,25)"/><text x="71.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="68" y="1204" width="6" height="15" fill="rgb(221,60,23)"/><text x="71.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="68" y="1220" width="6" height="15" fill="rgb(234,103,20)"/><text x="71.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.45%)</title><rect x="68" y="1236" width="6" height="15" fill="rgb(243,135,46)"/><text x="71.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="68" y="1252" width="6" height="15" fill="rgb(232,163,43)"/><text x="71.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="68" y="1268" width="6" height="15" fill="rgb(254,185,5)"/><text x="71.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="68" y="1284" width="6" height="15" fill="rgb(223,172,6)"/><text x="71.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="68" y="1300" width="6" height="15" fill="rgb(222,20,37)"/><text x="71.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="68" y="1316" width="6" height="15" fill="rgb(247,101,41)"/><text x="71.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="68" y="1332" width="6" height="15" fill="rgb(237,126,23)"/><text x="71.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="68" y="1348" width="6" height="15" fill="rgb(225,60,5)"/><text x="71.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.45%)</title><rect x="68" y="1364" width="6" height="15" fill="rgb(235,164,0)"/><text x="71.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="68" y="1380" width="6" height="15" fill="rgb(242,42,51)"/><text x="71.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="68" y="1396" width="6" height="15" fill="rgb(232,128,48)"/><text x="71.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="68" y="1412" width="6" height="15" fill="rgb(208,164,25)"/><text x="71.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="68" y="1428" width="6" height="15" fill="rgb(224,27,8)"/><text x="71.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="68" y="1444" width="6" height="15" fill="rgb(248,0,16)"/><text x="71.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.45%)</title><rect x="68" y="1460" width="6" height="15" fill="rgb(248,13,51)"/><text x="71.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.45%)</title><rect x="68" y="1476" width="6" height="15" fill="rgb(243,215,26)"/><text x="71.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.45%)</title><rect x="68" y="1492" width="6" height="15" fill="rgb(225,84,28)"/><text x="71.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.45%)</title><rect x="68" y="1508" width="6" height="15" fill="rgb(230,77,20)"/><text x="71.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.45%)</title><rect x="68" y="1524" width="6" height="15" fill="rgb(225,21,23)"/><text x="71.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.45%)</title><rect x="68" y="1540" width="6" height="15" fill="rgb(212,50,36)"/><text x="71.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.45%)</title><rect x="68" y="1556" width="6" height="15" fill="rgb(238,103,52)"/><text x="71.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:95) (1 samples, 0.45%)</title><rect x="68" y="1572" width="6" height="15" fill="rgb(224,51,44)"/><text x="71.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:212) (1 samples, 0.45%)</title><rect x="68" y="1588" width="6" height="15" fill="rgb(243,218,25)"/><text x="71.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:40) (1 samples, 0.45%)</title><rect x="74" y="52" width="5" height="15" fill="rgb(237,196,11)"/><text x="77.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:11) (1 samples, 0.45%)</title><rect x="74" y="68" width="5" height="15" fill="rgb(230,148,12)"/><text x="77.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (1 samples, 0.45%)</title><rect x="74" y="84" width="5" height="15" fill="rgb(226,210,34)"/><text x="77.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:155) (1 samples, 0.45%)</title><rect x="74" y="100" width="5" height="15" fill="rgb(237,197,2)"/><text x="77.00" y="110.50"></text></g><g><title>_pickle_dump (_pickle.c.h:408) (1 samples, 0.45%)</title><rect x="74" y="116" width="5" height="15" fill="rgb(226,32,39)"/><text x="77.00" y="126.50"></text></g><g><title>_pickle_dump_impl (_pickle.c:7217) (1 samples, 0.45%)</title><rect x="74" y="132" width="5" height="15" fill="rgb(213,32,17)"/><text x="77.00" y="142.50"></text></g><g><title>_Pickler_FlushToFile (_pickle.c:999) (1 samples, 0.45%)</title><rect x="74" y="148" width="5" height="15" fill="rgb(206,72,33)"/><text x="77.00" y="158.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (1 samples, 0.45%)</title><rect x="74" y="164" width="5" height="15" fill="rgb(245,228,10)"/><text x="77.00" y="174.50"></text></g><g><title>__write (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="74" y="180" width="5" height="15" fill="rgb(229,203,40)"/><text x="77.00" y="190.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:171) (1 samples, 0.45%)</title><rect x="79" y="212" width="5" height="15" fill="rgb(214,49,42)"/><text x="82.00" y="222.50"></text></g><g><title>0x7fb249c09e10 (?) (1 samples, 0.45%)</title><rect x="79" y="228" width="5" height="15" fill="rgb(242,149,53)"/><text x="82.00" y="238.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (2 samples, 0.90%)</title><rect x="79" y="196" width="11" height="15" fill="rgb(250,173,7)"/><text x="82.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.45%)</title><rect x="84" y="212" width="6" height="15" fill="rgb(241,55,3)"/><text x="87.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:140) (1 samples, 0.45%)</title><rect x="84" y="228" width="6" height="15" fill="rgb(209,50,1)"/><text x="87.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="84" y="244" width="6" height="15" fill="rgb(221,75,47)"/><text x="87.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="84" y="260" width="6" height="15" fill="rgb(253,87,29)"/><text x="87.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.45%)</title><rect x="84" y="276" width="6" height="15" fill="rgb(206,203,28)"/><text x="87.00" y="286.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:25) (3 samples, 1.36%)</title><rect x="79" y="84" width="16" height="15" fill="rgb(210,187,40)"/><text x="82.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (3 samples, 1.36%)</title><rect x="79" y="100" width="16" height="15" fill="rgb(246,199,35)"/><text x="82.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (3 samples, 1.36%)</title><rect x="79" y="116" width="16" height="15" fill="rgb(231,4,3)"/><text x="82.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (3 samples, 1.36%)</title><rect x="79" y="132" width="16" height="15" fill="rgb(214,191,3)"/><text x="82.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (3 samples, 1.36%)</title><rect x="79" y="148" width="16" height="15" fill="rgb(253,125,6)"/><text x="82.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (3 samples, 1.36%)</title><rect x="79" y="164" width="16" height="15" fill="rgb(225,169,38)"/><text x="82.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (3 samples, 1.36%)</title><rect x="79" y="180" width="16" height="15" fill="rgb(253,228,43)"/><text x="82.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.45%)</title><rect x="90" y="196" width="5" height="15" fill="rgb(210,227,11)"/><text x="93.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.45%)</title><rect x="90" y="212" width="5" height="15" fill="rgb(205,203,17)"/><text x="93.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.45%)</title><rect x="90" y="228" width="5" height="15" fill="rgb(213,218,21)"/><text x="93.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="90" y="244" width="5" height="15" fill="rgb(237,27,54)"/><text x="93.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.45%)</title><rect x="90" y="260" width="5" height="15" fill="rgb(250,192,15)"/><text x="93.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.45%)</title><rect x="90" y="276" width="5" height="15" fill="rgb(217,36,6)"/><text x="93.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.45%)</title><rect x="90" y="292" width="5" height="15" fill="rgb(254,131,35)"/><text x="93.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:206) (1 samples, 0.45%)</title><rect x="90" y="308" width="5" height="15" fill="rgb(212,154,16)"/><text x="93.00" y="318.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:766) (1 samples, 0.45%)</title><rect x="95" y="148" width="5" height="15" fill="rgb(238,93,33)"/><text x="98.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.45%)</title><rect x="95" y="164" width="5" height="15" fill="rgb(241,77,5)"/><text x="98.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.45%)</title><rect x="95" y="180" width="5" height="15" fill="rgb(206,1,2)"/><text x="98.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.45%)</title><rect x="95" y="196" width="5" height="15" fill="rgb(219,53,16)"/><text x="98.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.45%)</title><rect x="95" y="212" width="5" height="15" fill="rgb(215,216,26)"/><text x="98.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (2 samples, 0.90%)</title><rect x="100" y="180" width="11" height="15" fill="rgb(254,61,52)"/><text x="103.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (2 samples, 0.90%)</title><rect x="100" y="196" width="11" height="15" fill="rgb(243,195,47)"/><text x="103.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (2 samples, 0.90%)</title><rect x="100" y="212" width="11" height="15" fill="rgb(245,100,45)"/><text x="103.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.45%)</title><rect x="106" y="228" width="5" height="15" fill="rgb(216,37,44)"/><text x="109.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.45%)</title><rect x="111" y="324" width="5" height="15" fill="rgb(249,128,23)"/><text x="114.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (2 samples, 0.90%)</title><rect x="111" y="292" width="11" height="15" fill="rgb(222,48,23)"/><text x="114.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.90%)</title><rect x="111" y="308" width="11" height="15" fill="rgb(243,66,40)"/><text x="114.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.45%)</title><rect x="116" y="324" width="6" height="15" fill="rgb(246,98,27)"/><text x="119.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.45%)</title><rect x="116" y="340" width="6" height="15" fill="rgb(223,102,2)"/><text x="119.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 1.36%)</title><rect x="111" y="260" width="16" height="15" fill="rgb(231,107,1)"/><text x="114.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (3 samples, 1.36%)</title><rect x="111" y="276" width="16" height="15" fill="rgb(217,94,53)"/><text x="114.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.45%)</title><rect x="122" y="292" width="5" height="15" fill="rgb(223,144,24)"/><text x="125.00" y="302.50"></text></g><g><title>0x7fb249c1bd24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="122" y="308" width="5" height="15" fill="rgb(248,160,24)"/><text x="125.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (4 samples, 1.81%)</title><rect x="111" y="212" width="21" height="15" fill="rgb(228,35,38)"/><text x="114.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (4 samples, 1.81%)</title><rect x="111" y="228" width="21" height="15" fill="rgb(236,80,44)"/><text x="114.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.81%)</title><rect x="111" y="244" width="21" height="15" fill="rgb(209,193,12)"/><text x="114.00" y="254.50"></text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.45%)</title><rect x="127" y="260" width="5" height="15" fill="rgb(240,156,26)"/><text x="130.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:218) (1 samples, 0.45%)</title><rect x="127" y="276" width="5" height="15" fill="rgb(210,73,52)"/><text x="130.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:47) (11 samples, 4.98%)</title><rect x="79" y="52" width="59" height="15" fill="rgb(209,153,3)"/><text x="82.00" y="62.50">&lt;modul..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:46) (11 samples, 4.98%)</title><rect x="79" y="68" width="59" height="15" fill="rgb(231,127,51)"/><text x="82.00" y="78.50">profil..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:26) (8 samples, 3.62%)</title><rect x="95" y="84" width="43" height="15" fill="rgb(212,39,51)"/><text x="98.00" y="94.50">setu..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:18) (8 samples, 3.62%)</title><rect x="95" y="100" width="43" height="15" fill="rgb(241,177,19)"/><text x="98.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 3.62%)</title><rect x="95" y="116" width="43" height="15" fill="rgb(210,82,5)"/><text x="98.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (8 samples, 3.62%)</title><rect x="95" y="132" width="43" height="15" fill="rgb(252,3,4)"/><text x="98.00" y="142.50">&lt;lam..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (7 samples, 3.17%)</title><rect x="100" y="148" width="38" height="15" fill="rgb(224,191,0)"/><text x="103.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py:1006) (7 samples, 3.17%)</title><rect x="100" y="164" width="38" height="15" fill="rgb(247,184,41)"/><text x="103.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (5 samples, 2.26%)</title><rect x="111" y="180" width="27" height="15" fill="rgb(205,85,32)"/><text x="114.00" y="190.50">d..</text></g><g><title>_dispatch (joblib/parallel.py:753) (5 samples, 2.26%)</title><rect x="111" y="196" width="27" height="15" fill="rgb(231,164,6)"/><text x="114.00" y="206.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (1 samples, 0.45%)</title><rect x="132" y="212" width="6" height="15" fill="rgb(231,90,25)"/><text x="135.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.45%)</title><rect x="132" y="228" width="6" height="15" fill="rgb(224,78,3)"/><text x="135.00" y="238.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.45%)</title><rect x="138" y="196" width="5" height="15" fill="rgb(232,174,19)"/><text x="141.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.45%)</title><rect x="138" y="212" width="5" height="15" fill="rgb(205,215,14)"/><text x="141.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.45%)</title><rect x="138" y="228" width="5" height="15" fill="rgb(220,8,50)"/><text x="141.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2429) (1 samples, 0.45%)</title><rect x="138" y="244" width="5" height="15" fill="rgb(233,125,29)"/><text x="141.00" y="254.50"></text></g><g><title>PyArray_Flatten (shape.c:975) (1 samples, 0.45%)</title><rect x="138" y="260" width="5" height="15" fill="rgb(245,210,52)"/><text x="141.00" y="270.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2904) (1 samples, 0.45%)</title><rect x="138" y="276" width="5" height="15" fill="rgb(228,86,30)"/><text x="141.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="138" y="292" width="5" height="15" fill="rgb(246,227,22)"/><text x="141.00" y="302.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:36) (2 samples, 0.90%)</title><rect x="138" y="84" width="10" height="15" fill="rgb(251,229,2)"/><text x="141.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.90%)</title><rect x="138" y="100" width="10" height="15" fill="rgb(234,163,13)"/><text x="141.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (2 samples, 0.90%)</title><rect x="138" y="116" width="10" height="15" fill="rgb(220,35,50)"/><text x="141.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.90%)</title><rect x="138" y="132" width="10" height="15" fill="rgb(210,101,24)"/><text x="141.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.90%)</title><rect x="138" y="148" width="10" height="15" fill="rgb(213,168,11)"/><text x="141.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.90%)</title><rect x="138" y="164" width="10" height="15" fill="rgb(213,85,11)"/><text x="141.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.90%)</title><rect x="138" y="180" width="10" height="15" fill="rgb(228,218,15)"/><text x="141.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.45%)</title><rect x="143" y="196" width="5" height="15" fill="rgb(230,13,9)"/><text x="146.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.45%)</title><rect x="143" y="212" width="5" height="15" fill="rgb(207,78,31)"/><text x="146.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.45%)</title><rect x="143" y="228" width="5" height="15" fill="rgb(240,96,12)"/><text x="146.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="244" width="5" height="15" fill="rgb(210,176,49)"/><text x="146.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.45%)</title><rect x="143" y="260" width="5" height="15" fill="rgb(223,132,31)"/><text x="146.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:156) (1 samples, 0.45%)</title><rect x="143" y="276" width="5" height="15" fill="rgb(223,173,44)"/><text x="146.00" y="286.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="292" width="5" height="15" fill="rgb(235,117,13)"/><text x="146.00" y="302.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Append (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="308" width="5" height="15" fill="rgb(221,171,25)"/><text x="146.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::AddFloat (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="324" width="5" height="15" fill="rgb(230,1,9)"/><text x="146.00" y="334.50"></text></g><g><title>google::protobuf::internal::ReflectionSchema::GetFieldOffset (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="340" width="5" height="15" fill="rgb(213,222,42)"/><text x="146.00" y="350.50"></text></g><g><title>0x7fb25e5188a0 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="143" y="356" width="5" height="15" fill="rgb(251,166,37)"/><text x="146.00" y="366.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:766) (1 samples, 0.45%)</title><rect x="148" y="148" width="6" height="15" fill="rgb(216,200,27)"/><text x="151.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py:412) (1 samples, 0.45%)</title><rect x="148" y="164" width="6" height="15" fill="rgb(235,193,46)"/><text x="151.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.45%)</title><rect x="148" y="180" width="6" height="15" fill="rgb(214,163,10)"/><text x="151.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.45%)</title><rect x="148" y="196" width="6" height="15" fill="rgb(245,98,51)"/><text x="151.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.45%)</title><rect x="148" y="212" width="6" height="15" fill="rgb(236,3,25)"/><text x="151.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.45%)</title><rect x="154" y="148" width="5" height="15" fill="rgb(251,175,24)"/><text x="157.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.45%)</title><rect x="154" y="164" width="5" height="15" fill="rgb(211,114,18)"/><text x="157.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.45%)</title><rect x="154" y="180" width="5" height="15" fill="rgb(228,197,19)"/><text x="157.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.45%)</title><rect x="154" y="196" width="5" height="15" fill="rgb(222,60,34)"/><text x="157.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.45%)</title><rect x="164" y="180" width="6" height="15" fill="rgb(205,55,12)"/><text x="167.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.45%)</title><rect x="170" y="180" width="5" height="15" fill="rgb(228,134,41)"/><text x="173.00" y="190.50"></text></g><g><title>get (queue.py:164) (3 samples, 1.36%)</title><rect x="175" y="196" width="16" height="15" fill="rgb(213,136,13)"/><text x="178.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.90%)</title><rect x="180" y="212" width="11" height="15" fill="rgb(254,66,8)"/><text x="183.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.45%)</title><rect x="186" y="228" width="5" height="15" fill="rgb(206,116,36)"/><text x="189.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.45%)</title><rect x="186" y="244" width="5" height="15" fill="rgb(245,60,40)"/><text x="189.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="186" y="260" width="5" height="15" fill="rgb(224,127,10)"/><text x="189.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (6 samples, 2.71%)</title><rect x="175" y="180" width="32" height="15" fill="rgb(205,171,30)"/><text x="178.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (3 samples, 1.36%)</title><rect x="191" y="196" width="16" height="15" fill="rgb(228,81,30)"/><text x="194.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (2 samples, 0.90%)</title><rect x="207" y="180" width="11" height="15" fill="rgb(216,80,43)"/><text x="210.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.45%)</title><rect x="276" y="228" width="6" height="15" fill="rgb(223,162,37)"/><text x="279.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.45%)</title><rect x="282" y="228" width="5" height="15" fill="rgb(219,14,3)"/><text x="285.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.90%)</title><rect x="287" y="228" width="11" height="15" fill="rgb(239,132,25)"/><text x="290.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.45%)</title><rect x="298" y="228" width="5" height="15" fill="rgb(252,7,28)"/><text x="301.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (19 samples, 8.60%)</title><rect x="218" y="180" width="101" height="15" fill="rgb(245,36,36)"/><text x="221.00" y="190.50">dispatch_one..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (11 samples, 4.98%)</title><rect x="260" y="196" width="59" height="15" fill="rgb(240,200,25)"/><text x="263.00" y="206.50">&lt;genex..</text></g><g><title>delayed (joblib/parallel.py:308) (11 samples, 4.98%)</title><rect x="260" y="212" width="59" height="15" fill="rgb(224,56,36)"/><text x="263.00" y="222.50">delaye..</text></g><g><title>wraps (functools.py:79) (3 samples, 1.36%)</title><rect x="303" y="228" width="16" height="15" fill="rgb(208,171,16)"/><text x="306.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.45%)</title><rect x="319" y="180" width="6" height="15" fill="rgb(240,213,49)"/><text x="322.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (4 samples, 1.81%)</title><rect x="325" y="180" width="21" height="15" fill="rgb(231,144,18)"/><text x="328.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (1 samples, 0.45%)</title><rect x="346" y="180" width="5" height="15" fill="rgb(253,28,23)"/><text x="349.00" y="190.50"></text></g><g><title>0x7fb2702b5130 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="378" y="212" width="5" height="15" fill="rgb(208,183,46)"/><text x="381.00" y="222.50"></text></g><g><title>0x7fb2702b5151 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="383" y="212" width="6" height="15" fill="rgb(212,64,50)"/><text x="386.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.81%)</title><rect x="389" y="212" width="21" height="15" fill="rgb(233,58,37)"/><text x="392.00" y="222.50"></text></g><g><title>0x7fb2701ede6d (libc-2.29.so) (1 samples, 0.45%)</title><rect x="405" y="228" width="5" height="15" fill="rgb(220,180,49)"/><text x="408.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.45%)</title><rect x="410" y="212" width="5" height="15" fill="rgb(224,206,28)"/><text x="413.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (13 samples, 5.88%)</title><rect x="351" y="196" width="70" height="15" fill="rgb(207,103,32)"/><text x="354.00" y="206.50">get_nes..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.45%)</title><rect x="415" y="212" width="6" height="15" fill="rgb(231,206,32)"/><text x="418.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.45%)</title><rect x="442" y="228" width="5" height="15" fill="rgb(244,58,25)"/><text x="445.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (5 samples, 2.26%)</title><rect x="431" y="212" width="27" height="15" fill="rgb(237,82,14)"/><text x="434.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.90%)</title><rect x="447" y="228" width="11" height="15" fill="rgb(244,220,2)"/><text x="450.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:119) (1 samples, 0.45%)</title><rect x="458" y="212" width="5" height="15" fill="rgb(219,98,8)"/><text x="461.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.45%)</title><rect x="463" y="212" width="6" height="15" fill="rgb(219,50,28)"/><text x="466.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (23 samples, 10.41%)</title><rect x="351" y="180" width="123" height="15" fill="rgb(219,15,40)"/><text x="354.00" y="190.50">dispatch_one_ba..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (10 samples, 4.52%)</title><rect x="421" y="196" width="53" height="15" fill="rgb(209,164,16)"/><text x="424.00" y="206.50">get_n..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.45%)</title><rect x="469" y="212" width="5" height="15" fill="rgb(229,225,54)"/><text x="472.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.45%)</title><rect x="474" y="196" width="5" height="15" fill="rgb(223,79,42)"/><text x="477.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (2 samples, 0.90%)</title><rect x="474" y="180" width="11" height="15" fill="rgb(250,59,23)"/><text x="477.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.45%)</title><rect x="479" y="196" width="6" height="15" fill="rgb(234,216,6)"/><text x="482.00" y="206.50"></text></g><g><title>put (queue.py:132) (3 samples, 1.36%)</title><rect x="490" y="196" width="16" height="15" fill="rgb(220,115,37)"/><text x="493.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.90%)</title><rect x="495" y="212" width="11" height="15" fill="rgb(227,47,50)"/><text x="498.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.90%)</title><rect x="495" y="228" width="11" height="15" fill="rgb(251,57,8)"/><text x="498.00" y="238.50"></text></g><g><title>0x7fb2701ed757 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="501" y="244" width="5" height="15" fill="rgb(220,214,40)"/><text x="504.00" y="254.50"></text></g><g><title>put (queue.py:149) (2 samples, 0.90%)</title><rect x="506" y="196" width="11" height="15" fill="rgb(221,101,6)"/><text x="509.00" y="206.50"></text></g><g><title>_put (queue.py:213) (2 samples, 0.90%)</title><rect x="506" y="212" width="11" height="15" fill="rgb(210,153,43)"/><text x="509.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (9 samples, 4.07%)</title><rect x="485" y="180" width="48" height="15" fill="rgb(209,189,7)"/><text x="488.00" y="190.50">disp..</text></g><g><title>put (queue.py:151) (3 samples, 1.36%)</title><rect x="517" y="196" width="16" height="15" fill="rgb(244,194,4)"/><text x="520.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.45%)</title><rect x="527" y="212" width="6" height="15" fill="rgb(226,186,5)"/><text x="530.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.45%)</title><rect x="554" y="196" width="5" height="15" fill="rgb(250,228,13)"/><text x="557.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.45%)</title><rect x="554" y="212" width="5" height="15" fill="rgb(250,187,8)"/><text x="557.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.45%)</title><rect x="554" y="228" width="5" height="15" fill="rgb(250,32,1)"/><text x="557.00" y="238.50"></text></g><g><title>0x7fb2701ed782 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="554" y="244" width="5" height="15" fill="rgb(254,19,33)"/><text x="557.00" y="254.50"></text></g><g><title>get (queue.py:180) (4 samples, 1.81%)</title><rect x="559" y="196" width="22" height="15" fill="rgb(237,201,20)"/><text x="562.00" y="206.50">g..</text></g><g><title>_get (queue.py:217) (2 samples, 0.90%)</title><rect x="570" y="212" width="11" height="15" fill="rgb(212,164,4)"/><text x="573.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (10 samples, 4.52%)</title><rect x="533" y="180" width="53" height="15" fill="rgb(239,13,15)"/><text x="536.00" y="190.50">dispa..</text></g><g><title>get (queue.py:181) (1 samples, 0.45%)</title><rect x="581" y="196" width="5" height="15" fill="rgb(237,74,7)"/><text x="584.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.45%)</title><rect x="581" y="212" width="5" height="15" fill="rgb(208,25,27)"/><text x="584.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (1 samples, 0.45%)</title><rect x="586" y="196" width="5" height="15" fill="rgb(248,215,33)"/><text x="589.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.45%)</title><rect x="591" y="196" width="6" height="15" fill="rgb(212,60,45)"/><text x="594.00" y="206.50"></text></g><g><title>0x7ffe5b1a4300 (?) (1 samples, 0.45%)</title><rect x="591" y="212" width="6" height="15" fill="rgb(252,205,30)"/><text x="594.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.45%)</title><rect x="591" y="228" width="6" height="15" fill="rgb(245,165,42)"/><text x="594.00" y="238.50"></text></g><g><title>0x7ffe5b1c4941 ([vdso]) (1 samples, 0.45%)</title><rect x="591" y="244" width="6" height="15" fill="rgb(216,70,25)"/><text x="594.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (2 samples, 0.90%)</title><rect x="597" y="196" width="11" height="15" fill="rgb(223,82,26)"/><text x="600.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:326) (1 samples, 0.45%)</title><rect x="602" y="212" width="6" height="15" fill="rgb(222,50,52)"/><text x="605.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (2 samples, 0.90%)</title><rect x="608" y="196" width="10" height="15" fill="rgb(229,82,30)"/><text x="611.00" y="206.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.45%)</title><rect x="613" y="212" width="5" height="15" fill="rgb(216,98,9)"/><text x="616.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.45%)</title><rect x="640" y="260" width="5" height="15" fill="rgb(225,32,8)"/><text x="643.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.45%)</title><rect x="645" y="260" width="5" height="15" fill="rgb(218,81,11)"/><text x="648.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (5 samples, 2.26%)</title><rect x="629" y="244" width="27" height="15" fill="rgb(237,87,39)"/><text x="632.00" y="254.50">_..</text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.45%)</title><rect x="650" y="260" width="6" height="15" fill="rgb(222,154,37)"/><text x="653.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.90%)</title><rect x="682" y="308" width="11" height="15" fill="rgb(232,108,32)"/><text x="685.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.90%)</title><rect x="682" y="324" width="11" height="15" fill="rgb(213,140,19)"/><text x="685.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.90%)</title><rect x="714" y="340" width="11" height="15" fill="rgb(240,213,13)"/><text x="717.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.71%)</title><rect x="704" y="324" width="32" height="15" fill="rgb(245,94,27)"/><text x="707.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.90%)</title><rect x="725" y="340" width="11" height="15" fill="rgb(217,31,26)"/><text x="728.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (13 samples, 5.88%)</title><rect x="677" y="292" width="69" height="15" fill="rgb(245,184,40)"/><text x="680.00" y="302.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (10 samples, 4.52%)</title><rect x="693" y="308" width="53" height="15" fill="rgb(232,63,52)"/><text x="696.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.90%)</title><rect x="736" y="324" width="10" height="15" fill="rgb(221,204,15)"/><text x="739.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="741" y="340" width="5" height="15" fill="rgb(232,6,18)"/><text x="744.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (3 samples, 1.36%)</title><rect x="746" y="292" width="16" height="15" fill="rgb(239,17,52)"/><text x="749.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.90%)</title><rect x="752" y="308" width="10" height="15" fill="rgb(213,193,31)"/><text x="755.00" y="318.50"></text></g><g><title>0x7fb249c1af55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="762" y="324" width="6" height="15" fill="rgb(232,130,36)"/><text x="765.00" y="334.50"></text></g><g><title>0x7fb249c0ad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="762" y="340" width="6" height="15" fill="rgb(214,189,23)"/><text x="765.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.45%)</title><rect x="762" y="356" width="6" height="15" fill="rgb(216,158,9)"/><text x="765.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.45%)</title><rect x="762" y="372" width="6" height="15" fill="rgb(225,17,24)"/><text x="765.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.45%)</title><rect x="762" y="388" width="6" height="15" fill="rgb(225,11,37)"/><text x="765.00" y="398.50"></text></g><g><title>0x7fb249c291c8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="768" y="356" width="5" height="15" fill="rgb(221,130,48)"/><text x="771.00" y="366.50"></text></g><g><title>0x7fb249c29225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="773" y="356" width="5" height="15" fill="rgb(239,41,15)"/><text x="776.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.45%)</title><rect x="773" y="372" width="5" height="15" fill="rgb(245,219,29)"/><text x="776.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.45%)</title><rect x="773" y="388" width="5" height="15" fill="rgb(217,81,38)"/><text x="776.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.45%)</title><rect x="773" y="404" width="5" height="15" fill="rgb(236,121,36)"/><text x="776.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.45%)</title><rect x="773" y="420" width="5" height="15" fill="rgb(208,45,17)"/><text x="776.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4556) (1 samples, 0.45%)</title><rect x="773" y="436" width="5" height="15" fill="rgb(229,56,26)"/><text x="776.00" y="446.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.45%)</title><rect x="778" y="436" width="6" height="15" fill="rgb(221,143,5)"/><text x="781.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.45%)</title><rect x="778" y="452" width="6" height="15" fill="rgb(225,226,27)"/><text x="781.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.45%)</title><rect x="778" y="468" width="6" height="15" fill="rgb(254,33,18)"/><text x="781.00" y="478.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:216) (1 samples, 0.45%)</title><rect x="778" y="484" width="6" height="15" fill="rgb(222,47,42)"/><text x="781.00" y="494.50"></text></g><g><title>0x7fb249c0d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="778" y="388" width="11" height="15" fill="rgb(205,21,40)"/><text x="781.00" y="398.50"></text></g><g><title>0x7fb249c032fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="778" y="404" width="11" height="15" fill="rgb(240,202,47)"/><text x="781.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.90%)</title><rect x="778" y="420" width="11" height="15" fill="rgb(209,143,43)"/><text x="781.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.45%)</title><rect x="784" y="436" width="5" height="15" fill="rgb(209,56,13)"/><text x="787.00" y="446.50"></text></g><g><title>0x7fb249c0dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="778" y="372" width="16" height="15" fill="rgb(234,158,10)"/><text x="781.00" y="382.50"></text></g><g><title>0x7fb249c0d6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="789" y="388" width="5" height="15" fill="rgb(219,169,25)"/><text x="792.00" y="398.50"></text></g><g><title>0x7fb249bfe2a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="794" y="388" width="6" height="15" fill="rgb(213,44,43)"/><text x="797.00" y="398.50"></text></g><g><title>0x7fb249c292df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.26%)</title><rect x="778" y="356" width="27" height="15" fill="rgb(232,156,21)"/><text x="781.00" y="366.50">0..</text></g><g><title>0x7fb249c0defd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="794" y="372" width="11" height="15" fill="rgb(253,130,31)"/><text x="797.00" y="382.50"></text></g><g><title>0x7fb249bfe320 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="800" y="388" width="5" height="15" fill="rgb(220,197,11)"/><text x="803.00" y="398.50"></text></g><g><title>0x7fb249c29456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="805" y="356" width="5" height="15" fill="rgb(222,4,44)"/><text x="808.00" y="366.50"></text></g><g><title>0x7fb2701ed734 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="816" y="388" width="5" height="15" fill="rgb(215,13,17)"/><text x="819.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.45%)</title><rect x="821" y="388" width="5" height="15" fill="rgb(245,65,52)"/><text x="824.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.45%)</title><rect x="821" y="404" width="5" height="15" fill="rgb(238,191,29)"/><text x="824.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.45%)</title><rect x="821" y="420" width="5" height="15" fill="rgb(211,228,40)"/><text x="824.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.45%)</title><rect x="821" y="436" width="5" height="15" fill="rgb(224,188,0)"/><text x="824.00" y="446.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="826" y="388" width="6" height="15" fill="rgb(212,91,19)"/><text x="829.00" y="398.50"></text></g><g><title>0x7fb249c29592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.71%)</title><rect x="810" y="356" width="32" height="15" fill="rgb(217,156,4)"/><text x="813.00" y="366.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:1973) (6 samples, 2.71%)</title><rect x="810" y="372" width="32" height="15" fill="rgb(222,22,27)"/><text x="813.00" y="382.50">ar..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.90%)</title><rect x="832" y="388" width="10" height="15" fill="rgb(220,122,44)"/><text x="835.00" y="398.50"></text></g><g><title>0x7fb249c29644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="842" y="356" width="6" height="15" fill="rgb(227,8,41)"/><text x="845.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="842" y="372" width="6" height="15" fill="rgb(233,177,27)"/><text x="845.00" y="382.50"></text></g><g><title>0x7fb249c29731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="848" y="356" width="5" height="15" fill="rgb(241,12,27)"/><text x="851.00" y="366.50"></text></g><g><title>0x7fb249c01502 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="853" y="372" width="5" height="15" fill="rgb(224,68,8)"/><text x="856.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.45%)</title><rect x="858" y="404" width="6" height="15" fill="rgb(205,190,21)"/><text x="861.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.90%)</title><rect x="858" y="388" width="11" height="15" fill="rgb(250,69,0)"/><text x="861.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:679) (1 samples, 0.45%)</title><rect x="864" y="404" width="5" height="15" fill="rgb(231,132,2)"/><text x="867.00" y="414.50"></text></g><g><title>0x7fb26f3faf30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="864" y="420" width="5" height="15" fill="rgb(227,227,49)"/><text x="867.00" y="430.50"></text></g><g><title>0x7fb249c1afa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 9.05%)</title><rect x="768" y="324" width="106" height="15" fill="rgb(232,224,30)"/><text x="771.00" y="334.50">0x7fb249c1af..</text></g><g><title>0x7fb249c2a405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 9.05%)</title><rect x="768" y="340" width="106" height="15" fill="rgb(237,29,47)"/><text x="771.00" y="350.50">0x7fb249c2a4..</text></g><g><title>0x7fb249c29c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.81%)</title><rect x="853" y="356" width="21" height="15" fill="rgb(229,173,17)"/><text x="856.00" y="366.50"></text></g><g><title>0x7fb249c01529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="858" y="372" width="16" height="15" fill="rgb(252,82,29)"/><text x="861.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:815) (1 samples, 0.45%)</title><rect x="869" y="388" width="5" height="15" fill="rgb(253,201,12)"/><text x="872.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.45%)</title><rect x="890" y="356" width="6" height="15" fill="rgb(248,141,4)"/><text x="893.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (5 samples, 2.26%)</title><rect x="874" y="340" width="27" height="15" fill="rgb(241,57,30)"/><text x="877.00" y="350.50">a..</text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.45%)</title><rect x="896" y="356" width="5" height="15" fill="rgb(242,91,28)"/><text x="899.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.45%)</title><rect x="901" y="356" width="6" height="15" fill="rgb(254,11,16)"/><text x="904.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.45%)</title><rect x="901" y="372" width="6" height="15" fill="rgb(228,158,39)"/><text x="904.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.45%)</title><rect x="901" y="388" width="6" height="15" fill="rgb(218,28,43)"/><text x="904.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.45%)</title><rect x="901" y="404" width="6" height="15" fill="rgb(237,7,52)"/><text x="904.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.45%)</title><rect x="901" y="420" width="6" height="15" fill="rgb(208,51,6)"/><text x="904.00" y="430.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.45%)</title><rect x="901" y="436" width="6" height="15" fill="rgb(253,121,51)"/><text x="904.00" y="446.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.45%)</title><rect x="907" y="356" width="5" height="15" fill="rgb(245,129,53)"/><text x="910.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.45%)</title><rect x="907" y="372" width="5" height="15" fill="rgb(209,218,34)"/><text x="910.00" y="382.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1600) (1 samples, 0.45%)</title><rect x="907" y="388" width="5" height="15" fill="rgb(222,127,27)"/><text x="910.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.45%)</title><rect x="912" y="388" width="5" height="15" fill="rgb(232,6,5)"/><text x="915.00" y="398.50"></text></g><g><title>0x7fb249c1b05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 4.07%)</title><rect x="874" y="324" width="49" height="15" fill="rgb(218,208,14)"/><text x="877.00" y="334.50">0x7f..</text></g><g><title>array_take (methods.c:145) (4 samples, 1.81%)</title><rect x="901" y="340" width="22" height="15" fill="rgb(250,4,6)"/><text x="904.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.90%)</title><rect x="912" y="356" width="11" height="15" fill="rgb(227,161,24)"/><text x="915.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.90%)</title><rect x="912" y="372" width="11" height="15" fill="rgb(212,182,15)"/><text x="915.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.45%)</title><rect x="917" y="388" width="6" height="15" fill="rgb(246,178,33)"/><text x="920.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.45%)</title><rect x="917" y="404" width="6" height="15" fill="rgb(228,44,3)"/><text x="920.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.45%)</title><rect x="917" y="420" width="6" height="15" fill="rgb(236,177,5)"/><text x="920.00" y="430.50"></text></g><g><title>_buffer_clear_info (buffer.c:725) (1 samples, 0.45%)</title><rect x="923" y="372" width="5" height="15" fill="rgb(210,125,44)"/><text x="926.00" y="382.50"></text></g><g><title>0x7fb249c1b14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="923" y="324" width="10" height="15" fill="rgb(218,42,30)"/><text x="926.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.90%)</title><rect x="923" y="340" width="10" height="15" fill="rgb(225,146,2)"/><text x="926.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.90%)</title><rect x="923" y="356" width="10" height="15" fill="rgb(221,171,20)"/><text x="926.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.45%)</title><rect x="928" y="372" width="5" height="15" fill="rgb(249,15,1)"/><text x="931.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.45%)</title><rect x="928" y="388" width="5" height="15" fill="rgb(237,175,12)"/><text x="931.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="928" y="404" width="5" height="15" fill="rgb(239,98,27)"/><text x="931.00" y="414.50"></text></g><g><title>0x7fb249c1b328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="933" y="324" width="6" height="15" fill="rgb(233,178,27)"/><text x="936.00" y="334.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.45%)</title><rect x="933" y="340" width="6" height="15" fill="rgb(253,80,51)"/><text x="936.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.45%)</title><rect x="933" y="356" width="6" height="15" fill="rgb(248,183,8)"/><text x="936.00" y="366.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (34 samples, 15.38%)</title><rect x="762" y="292" width="182" height="15" fill="rgb(239,37,22)"/><text x="765.00" y="302.50">predict (sklearn/tree/_..</text></g><g><title>0x7fb249c1bd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 15.38%)</title><rect x="762" y="308" width="182" height="15" fill="rgb(227,179,50)"/><text x="765.00" y="318.50">0x7fb249c1bd2e (sklearn..</text></g><g><title>0x7fb249c1b8d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="939" y="324" width="5" height="15" fill="rgb(213,157,47)"/><text x="942.00" y="334.50"></text></g><g><title>0x7fb249bf7bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="939" y="340" width="5" height="15" fill="rgb(233,100,34)"/><text x="942.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 1.36%)</title><rect x="944" y="292" width="16" height="15" fill="rgb(247,54,3)"/><text x="947.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.45%)</title><rect x="955" y="308" width="5" height="15" fill="rgb(226,213,22)"/><text x="958.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (55 samples, 24.89%)</title><rect x="672" y="276" width="293" height="15" fill="rgb(217,95,17)"/><text x="675.00" y="286.50">_accumulate_prediction (sklearn/ensembl..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.45%)</title><rect x="960" y="292" width="5" height="15" fill="rgb(250,75,29)"/><text x="963.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.45%)</title><rect x="971" y="292" width="5" height="15" fill="rgb(246,69,10)"/><text x="974.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.45%)</title><rect x="971" y="308" width="5" height="15" fill="rgb(248,166,51)"/><text x="974.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.45%)</title><rect x="971" y="324" width="5" height="15" fill="rgb(233,200,13)"/><text x="974.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.45%)</title><rect x="971" y="340" width="5" height="15" fill="rgb(228,37,54)"/><text x="974.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.45%)</title><rect x="976" y="308" width="5" height="15" fill="rgb(242,58,53)"/><text x="979.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.45%)</title><rect x="976" y="324" width="5" height="15" fill="rgb(240,30,35)"/><text x="979.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3260) (1 samples, 0.45%)</title><rect x="981" y="308" width="6" height="15" fill="rgb(240,220,44)"/><text x="984.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.45%)</title><rect x="987" y="324" width="5" height="15" fill="rgb(236,154,5)"/><text x="990.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.45%)</title><rect x="987" y="340" width="5" height="15" fill="rgb(225,115,12)"/><text x="990.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.45%)</title><rect x="987" y="356" width="5" height="15" fill="rgb(241,84,37)"/><text x="990.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:483) (1 samples, 0.45%)</title><rect x="987" y="372" width="5" height="15" fill="rgb(221,114,47)"/><text x="990.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.45%)</title><rect x="992" y="356" width="5" height="15" fill="rgb(232,12,22)"/><text x="995.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.45%)</title><rect x="992" y="372" width="5" height="15" fill="rgb(227,147,48)"/><text x="995.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.45%)</title><rect x="997" y="356" width="6" height="15" fill="rgb(222,48,10)"/><text x="1000.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1554) (1 samples, 0.45%)</title><rect x="997" y="372" width="6" height="15" fill="rgb(243,6,3)"/><text x="1000.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 1.36%)</title><rect x="992" y="340" width="16" height="15" fill="rgb(230,162,35)"/><text x="995.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.45%)</title><rect x="1003" y="356" width="5" height="15" fill="rgb(243,209,39)"/><text x="1006.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2804) (1 samples, 0.45%)</title><rect x="1003" y="372" width="5" height="15" fill="rgb(219,186,23)"/><text x="1006.00" y="382.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:768) (1 samples, 0.45%)</title><rect x="1003" y="388" width="5" height="15" fill="rgb(230,200,10)"/><text x="1006.00" y="398.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c:698) (1 samples, 0.45%)</title><rect x="1003" y="404" width="5" height="15" fill="rgb(243,136,14)"/><text x="1006.00" y="414.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c:680) (1 samples, 0.45%)</title><rect x="1003" y="420" width="5" height="15" fill="rgb(236,115,31)"/><text x="1006.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1568) (1 samples, 0.45%)</title><rect x="1008" y="340" width="5" height="15" fill="rgb(250,63,24)"/><text x="1011.00" y="350.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:371) (1 samples, 0.45%)</title><rect x="1008" y="356" width="5" height="15" fill="rgb(221,229,40)"/><text x="1011.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 2.26%)</title><rect x="992" y="324" width="27" height="15" fill="rgb(252,209,24)"/><text x="995.00" y="334.50">e..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.45%)</title><rect x="1013" y="340" width="6" height="15" fill="rgb(215,68,41)"/><text x="1016.00" y="350.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.45%)</title><rect x="1013" y="356" width="6" height="15" fill="rgb(211,69,51)"/><text x="1016.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:2023) (1 samples, 0.45%)</title><rect x="1013" y="372" width="6" height="15" fill="rgb(254,18,48)"/><text x="1016.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (11 samples, 4.98%)</title><rect x="965" y="276" width="59" height="15" fill="rgb(235,163,31)"/><text x="968.00" y="286.50">_accum..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 4.07%)</title><rect x="976" y="292" width="48" height="15" fill="rgb(239,12,17)"/><text x="979.00" y="302.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 3.17%)</title><rect x="987" y="308" width="37" height="15" fill="rgb(221,226,34)"/><text x="990.00" y="318.50">PyU..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.45%)</title><rect x="1019" y="324" width="5" height="15" fill="rgb(221,13,46)"/><text x="1022.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:793) (1 samples, 0.45%)</title><rect x="1019" y="340" width="5" height="15" fill="rgb(220,49,40)"/><text x="1022.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (69 samples, 31.22%)</title><rect x="661" y="260" width="368" height="15" fill="rgb(209,50,48)"/><text x="664.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="1024" y="276" width="5" height="15" fill="rgb(246,109,6)"/><text x="1027.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.45%)</title><rect x="1024" y="292" width="5" height="15" fill="rgb(224,168,41)"/><text x="1027.00" y="302.50"></text></g><g><title>unregister (joblib/parallel.py:218) (4 samples, 1.81%)</title><rect x="1029" y="276" width="22" height="15" fill="rgb(245,141,25)"/><text x="1032.00" y="286.50">u..</text></g><g><title>unregister (joblib/parallel.py:219) (3 samples, 1.36%)</title><rect x="1051" y="276" width="16" height="15" fill="rgb(230,113,31)"/><text x="1054.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (86 samples, 38.91%)</title><rect x="618" y="212" width="459" height="15" fill="rgb(232,200,19)"/><text x="621.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (85 samples, 38.46%)</title><rect x="624" y="228" width="453" height="15" fill="rgb(215,163,23)"/><text x="627.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (79 samples, 35.75%)</title><rect x="656" y="244" width="421" height="15" fill="rgb(247,138,15)"/><text x="659.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (9 samples, 4.07%)</title><rect x="1029" y="260" width="48" height="15" fill="rgb(218,217,9)"/><text x="1032.00" y="270.50">__ex..</text></g><g><title>unregister (joblib/parallel.py:220) (2 samples, 0.90%)</title><rect x="1067" y="276" width="10" height="15" fill="rgb(211,128,52)"/><text x="1070.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (2 samples, 0.90%)</title><rect x="1088" y="228" width="11" height="15" fill="rgb(243,29,49)"/><text x="1091.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (4 samples, 1.81%)</title><rect x="1099" y="228" width="21" height="15" fill="rgb(226,90,34)"/><text x="1102.00" y="238.50"></text></g><g><title>0x7ffe5b1c4a01 ([vdso]) (1 samples, 0.45%)</title><rect x="1115" y="244" width="5" height="15" fill="rgb(206,119,50)"/><text x="1118.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:335) (1 samples, 0.45%)</title><rect x="1120" y="228" width="5" height="15" fill="rgb(236,148,54)"/><text x="1123.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:336) (1 samples, 0.45%)</title><rect x="1125" y="228" width="6" height="15" fill="rgb(227,58,2)"/><text x="1128.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.45%)</title><rect x="1131" y="228" width="5" height="15" fill="rgb(217,93,29)"/><text x="1134.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.45%)</title><rect x="1136" y="228" width="5" height="15" fill="rgb(235,37,23)"/><text x="1139.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (99 samples, 44.80%)</title><rect x="618" y="196" width="529" height="15" fill="rgb(236,11,38)"/><text x="621.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (13 samples, 5.88%)</title><rect x="1077" y="212" width="70" height="15" fill="rgb(232,177,19)"/><text x="1080.00" y="222.50">apply_a..</text></g><g><title>__call__ (joblib/parallel.py:339) (1 samples, 0.45%)</title><rect x="1141" y="228" width="6" height="15" fill="rgb(252,158,7)"/><text x="1144.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (187 samples, 84.62%)</title><rect x="159" y="164" width="998" height="15" fill="rgb(252,30,29)"/><text x="162.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (107 samples, 48.42%)</title><rect x="586" y="180" width="571" height="15" fill="rgb(232,177,7)"/><text x="589.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.90%)</title><rect x="1147" y="196" width="10" height="15" fill="rgb(240,199,39)"/><text x="1150.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.45%)</title><rect x="1157" y="180" width="6" height="15" fill="rgb(210,215,51)"/><text x="1160.00" y="190.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.45%)</title><rect x="1157" y="196" width="6" height="15" fill="rgb(233,29,24)"/><text x="1160.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="1157" y="212" width="6" height="15" fill="rgb(207,217,1)"/><text x="1160.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:54) (193 samples, 87.33%)</title><rect x="138" y="52" width="1030" height="15" fill="rgb(223,202,5)"/><text x="141.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:53) (193 samples, 87.33%)</title><rect x="138" y="68" width="1030" height="15" fill="rgb(205,93,6)"/><text x="141.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (191 samples, 86.43%)</title><rect x="148" y="84" width="1020" height="15" fill="rgb(228,93,15)"/><text x="151.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (191 samples, 86.43%)</title><rect x="148" y="100" width="1020" height="15" fill="rgb(234,143,31)"/><text x="151.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (191 samples, 86.43%)</title><rect x="148" y="116" width="1020" height="15" fill="rgb(224,174,17)"/><text x="151.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (191 samples, 86.43%)</title><rect x="148" y="132" width="1020" height="15" fill="rgb(245,178,54)"/><text x="151.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (189 samples, 85.52%)</title><rect x="159" y="148" width="1009" height="15" fill="rgb(254,68,54)"/><text x="162.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.90%)</title><rect x="1157" y="164" width="11" height="15" fill="rgb(208,163,19)"/><text x="1160.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.45%)</title><rect x="1163" y="180" width="5" height="15" fill="rgb(217,220,24)"/><text x="1166.00" y="190.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:36) (1 samples, 0.45%)</title><rect x="1168" y="84" width="5" height="15" fill="rgb(232,49,24)"/><text x="1171.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.45%)</title><rect x="1168" y="100" width="5" height="15" fill="rgb(244,116,15)"/><text x="1171.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.45%)</title><rect x="1168" y="116" width="5" height="15" fill="rgb(205,72,48)"/><text x="1171.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.45%)</title><rect x="1168" y="132" width="5" height="15" fill="rgb(205,17,35)"/><text x="1171.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.45%)</title><rect x="1168" y="148" width="5" height="15" fill="rgb(217,99,10)"/><text x="1171.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.45%)</title><rect x="1168" y="164" width="5" height="15" fill="rgb(212,188,44)"/><text x="1171.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.45%)</title><rect x="1168" y="180" width="5" height="15" fill="rgb(220,219,54)"/><text x="1171.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.45%)</title><rect x="1168" y="196" width="5" height="15" fill="rgb(237,150,49)"/><text x="1171.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="1168" y="212" width="5" height="15" fill="rgb(248,159,10)"/><text x="1171.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="1168" y="228" width="5" height="15" fill="rgb(236,153,31)"/><text x="1171.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="1168" y="244" width="5" height="15" fill="rgb(216,11,18)"/><text x="1171.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="1168" y="260" width="5" height="15" fill="rgb(246,83,1)"/><text x="1171.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="1168" y="276" width="5" height="15" fill="rgb(233,16,25)"/><text x="1171.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.45%)</title><rect x="1168" y="292" width="5" height="15" fill="rgb(215,30,4)"/><text x="1171.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="1168" y="308" width="5" height="15" fill="rgb(223,62,3)"/><text x="1171.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="1168" y="324" width="5" height="15" fill="rgb(235,22,7)"/><text x="1171.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="1168" y="340" width="5" height="15" fill="rgb(245,45,23)"/><text x="1171.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="1168" y="356" width="5" height="15" fill="rgb(207,110,19)"/><text x="1171.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="1168" y="372" width="5" height="15" fill="rgb(254,46,53)"/><text x="1171.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:38) (1 samples, 0.45%)</title><rect x="1168" y="388" width="5" height="15" fill="rgb(244,16,47)"/><text x="1171.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:61) (2 samples, 0.90%)</title><rect x="1168" y="52" width="11" height="15" fill="rgb(230,194,21)"/><text x="1171.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:60) (2 samples, 0.90%)</title><rect x="1168" y="68" width="11" height="15" fill="rgb(254,58,5)"/><text x="1171.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (1 samples, 0.45%)</title><rect x="1173" y="84" width="6" height="15" fill="rgb(238,146,51)"/><text x="1176.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (1 samples, 0.45%)</title><rect x="1173" y="100" width="6" height="15" fill="rgb(238,40,11)"/><text x="1176.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.45%)</title><rect x="1173" y="116" width="6" height="15" fill="rgb(241,76,5)"/><text x="1176.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.45%)</title><rect x="1173" y="132" width="6" height="15" fill="rgb(222,111,11)"/><text x="1176.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.45%)</title><rect x="1173" y="148" width="6" height="15" fill="rgb(207,170,34)"/><text x="1176.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.45%)</title><rect x="1173" y="164" width="6" height="15" fill="rgb(239,43,8)"/><text x="1176.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.45%)</title><rect x="1173" y="180" width="6" height="15" fill="rgb(207,164,2)"/><text x="1176.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.45%)</title><rect x="1173" y="196" width="6" height="15" fill="rgb(239,222,37)"/><text x="1176.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.45%)</title><rect x="1173" y="212" width="6" height="15" fill="rgb(244,168,27)"/><text x="1176.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (1 samples, 0.45%)</title><rect x="1173" y="228" width="6" height="15" fill="rgb(242,143,13)"/><text x="1176.00" y="238.50"></text></g><g><title>0x7fb230cb054f (?) (1 samples, 0.45%)</title><rect x="1173" y="244" width="6" height="15" fill="rgb(212,216,45)"/><text x="1176.00" y="254.50"></text></g><g><title>0x7fb230cb665e (?) (1 samples, 0.45%)</title><rect x="1173" y="260" width="6" height="15" fill="rgb(216,32,23)"/><text x="1176.00" y="270.50"></text></g><g><title>0x7fb230cb650f (?) (1 samples, 0.45%)</title><rect x="1173" y="276" width="6" height="15" fill="rgb(253,97,24)"/><text x="1176.00" y="286.50"></text></g><g><title>0x7fb230cbcd6c (?) (1 samples, 0.45%)</title><rect x="1173" y="292" width="6" height="15" fill="rgb(220,188,47)"/><text x="1176.00" y="302.50"></text></g><g><title>0x7fb23a19dab9 (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="1173" y="308" width="6" height="15" fill="rgb(226,51,29)"/><text x="1176.00" y="318.50"></text></g><g><title>0x7fb23a19eeab (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="1173" y="324" width="6" height="15" fill="rgb(243,53,14)"/><text x="1176.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:68) (1 samples, 0.45%)</title><rect x="1179" y="52" width="5" height="15" fill="rgb(227,15,44)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:67) (1 samples, 0.45%)</title><rect x="1179" y="68" width="5" height="15" fill="rgb(230,54,40)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (1 samples, 0.45%)</title><rect x="1179" y="84" width="5" height="15" fill="rgb(245,28,45)"/><text x="1182.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (1 samples, 0.45%)</title><rect x="1179" y="100" width="5" height="15" fill="rgb(235,32,51)"/><text x="1182.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.45%)</title><rect x="1179" y="116" width="5" height="15" fill="rgb(227,31,47)"/><text x="1182.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.45%)</title><rect x="1179" y="132" width="5" height="15" fill="rgb(218,56,44)"/><text x="1182.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.45%)</title><rect x="1179" y="148" width="5" height="15" fill="rgb(215,95,13)"/><text x="1182.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.45%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(207,5,1)"/><text x="1182.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.45%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(212,210,38)"/><text x="1182.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.45%)</title><rect x="1179" y="196" width="5" height="15" fill="rgb(211,193,39)"/><text x="1182.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="212" width="5" height="15" fill="rgb(252,78,44)"/><text x="1182.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="228" width="5" height="15" fill="rgb(226,33,44)"/><text x="1182.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="244" width="5" height="15" fill="rgb(231,177,17)"/><text x="1182.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(225,227,10)"/><text x="1182.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(219,168,20)"/><text x="1182.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(237,2,47)"/><text x="1182.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(205,168,28)"/><text x="1182.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="324" width="5" height="15" fill="rgb(224,67,54)"/><text x="1182.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="340" width="5" height="15" fill="rgb(222,138,43)"/><text x="1182.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="356" width="5" height="15" fill="rgb(250,160,50)"/><text x="1182.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="372" width="5" height="15" fill="rgb(247,138,17)"/><text x="1182.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="388" width="5" height="15" fill="rgb(225,148,20)"/><text x="1182.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="404" width="5" height="15" fill="rgb(224,112,9)"/><text x="1182.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="420" width="5" height="15" fill="rgb(205,220,45)"/><text x="1182.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="436" width="5" height="15" fill="rgb(241,119,12)"/><text x="1182.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="452" width="5" height="15" fill="rgb(243,164,2)"/><text x="1182.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="468" width="5" height="15" fill="rgb(252,54,45)"/><text x="1182.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1179" y="484" width="5" height="15" fill="rgb(231,158,38)"/><text x="1182.00" y="494.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(220,102,30)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="1184" y="52" width="6" height="15" fill="rgb(217,30,2)"/><text x="1187.00" y="62.50"></text></g></g></svg>