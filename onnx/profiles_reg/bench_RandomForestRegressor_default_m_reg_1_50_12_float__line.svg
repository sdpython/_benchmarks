<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1750" onload="init(evt)" viewBox="0 0 1200 1750" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1750" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1733.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1733.00"> </text><g id="frames"><g><title>0x7f9f76d67b1c (libc-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="52" width="5" height="15" fill="rgb(243,152,47)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:1) (1 samples, 0.44%)</title><rect x="15" y="148" width="5" height="15" fill="rgb(233,41,24)"/><text x="18.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="15" y="164" width="5" height="15" fill="rgb(214,98,45)"/><text x="18.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="15" y="180" width="5" height="15" fill="rgb(244,53,50)"/><text x="18.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="15" y="196" width="5" height="15" fill="rgb(214,98,46)"/><text x="18.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="15" y="212" width="5" height="15" fill="rgb(212,55,26)"/><text x="18.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="15" y="228" width="5" height="15" fill="rgb(209,202,17)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.44%)</title><rect x="15" y="244" width="5" height="15" fill="rgb(253,48,2)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="15" y="260" width="5" height="15" fill="rgb(244,67,7)"/><text x="18.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="15" y="276" width="5" height="15" fill="rgb(243,138,23)"/><text x="18.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="15" y="292" width="5" height="15" fill="rgb(216,96,16)"/><text x="18.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="15" y="308" width="5" height="15" fill="rgb(234,60,21)"/><text x="18.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="15" y="324" width="5" height="15" fill="rgb(217,8,5)"/><text x="18.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.44%)</title><rect x="15" y="340" width="5" height="15" fill="rgb(226,118,32)"/><text x="18.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="15" y="356" width="5" height="15" fill="rgb(212,132,30)"/><text x="18.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(237,88,10)"/><text x="18.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(207,169,41)"/><text x="18.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(237,21,37)"/><text x="18.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(230,166,10)"/><text x="18.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:64) (1 samples, 0.44%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(221,78,30)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(215,51,43)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(224,73,37)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(218,5,50)"/><text x="18.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(240,67,1)"/><text x="18.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(247,186,10)"/><text x="18.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py:4) (1 samples, 0.44%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(238,24,18)"/><text x="18.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(241,52,13)"/><text x="18.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(223,51,23)"/><text x="18.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(240,57,29)"/><text x="18.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(248,94,1)"/><text x="18.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="15" y="612" width="5" height="15" fill="rgb(247,122,49)"/><text x="18.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(219,85,19)"/><text x="18.00" y="638.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.44%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(254,79,25)"/><text x="23.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.44%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(248,61,12)"/><text x="23.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(213,194,26)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(230,87,24)"/><text x="23.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.44%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(244,77,4)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.44%)</title><rect x="20" y="996" width="5" height="15" fill="rgb(212,66,43)"/><text x="23.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.44%)</title><rect x="20" y="1012" width="5" height="15" fill="rgb(235,146,34)"/><text x="23.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.44%)</title><rect x="20" y="1028" width="5" height="15" fill="rgb(233,101,44)"/><text x="23.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.88%)</title><rect x="20" y="852" width="10" height="15" fill="rgb(216,224,29)"/><text x="23.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.88%)</title><rect x="20" y="868" width="10" height="15" fill="rgb(242,139,33)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.88%)</title><rect x="20" y="884" width="10" height="15" fill="rgb(247,117,1)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.88%)</title><rect x="20" y="900" width="10" height="15" fill="rgb(217,208,14)"/><text x="23.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.44%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(224,62,26)"/><text x="28.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.44%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(210,57,40)"/><text x="28.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.44%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(236,200,14)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.44%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(244,39,5)"/><text x="28.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.44%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(214,50,38)"/><text x="28.00" y="990.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.44%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(224,113,11)"/><text x="28.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.44%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(253,48,21)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (3 samples, 1.32%)</title><rect x="20" y="148" width="15" height="15" fill="rgb(220,117,13)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="164" width="15" height="15" fill="rgb(235,145,3)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.32%)</title><rect x="20" y="180" width="15" height="15" fill="rgb(232,32,54)"/><text x="23.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="196" width="15" height="15" fill="rgb(209,10,7)"/><text x="23.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="212" width="15" height="15" fill="rgb(226,168,52)"/><text x="23.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="228" width="15" height="15" fill="rgb(243,60,4)"/><text x="23.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="244" width="15" height="15" fill="rgb(214,12,22)"/><text x="23.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="260" width="15" height="15" fill="rgb(234,209,0)"/><text x="23.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="276" width="15" height="15" fill="rgb(252,34,7)"/><text x="23.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.32%)</title><rect x="20" y="292" width="15" height="15" fill="rgb(253,97,46)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="308" width="15" height="15" fill="rgb(254,101,24)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="324" width="15" height="15" fill="rgb(250,193,1)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="340" width="15" height="15" fill="rgb(206,35,23)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="356" width="15" height="15" fill="rgb(232,5,42)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="372" width="15" height="15" fill="rgb(218,70,20)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.32%)</title><rect x="20" y="388" width="15" height="15" fill="rgb(217,166,54)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="404" width="15" height="15" fill="rgb(235,176,47)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="420" width="15" height="15" fill="rgb(213,110,41)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="436" width="15" height="15" fill="rgb(239,85,45)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="452" width="15" height="15" fill="rgb(242,214,7)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="468" width="15" height="15" fill="rgb(219,36,44)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.32%)</title><rect x="20" y="484" width="15" height="15" fill="rgb(224,29,9)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="500" width="15" height="15" fill="rgb(243,22,1)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="516" width="15" height="15" fill="rgb(212,45,32)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="532" width="15" height="15" fill="rgb(211,119,41)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="548" width="15" height="15" fill="rgb(250,3,3)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="564" width="15" height="15" fill="rgb(245,168,39)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.32%)</title><rect x="20" y="580" width="15" height="15" fill="rgb(225,214,2)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="596" width="15" height="15" fill="rgb(219,88,10)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.32%)</title><rect x="20" y="612" width="15" height="15" fill="rgb(223,154,19)"/><text x="23.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="628" width="15" height="15" fill="rgb(237,178,47)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="644" width="15" height="15" fill="rgb(248,168,50)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="660" width="15" height="15" fill="rgb(249,52,30)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="676" width="15" height="15" fill="rgb(228,96,26)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="692" width="15" height="15" fill="rgb(210,96,26)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="708" width="15" height="15" fill="rgb(230,71,37)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.32%)</title><rect x="20" y="724" width="15" height="15" fill="rgb(241,31,30)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.32%)</title><rect x="20" y="740" width="15" height="15" fill="rgb(252,96,24)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.32%)</title><rect x="20" y="756" width="15" height="15" fill="rgb(222,7,53)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.32%)</title><rect x="20" y="772" width="15" height="15" fill="rgb(234,94,46)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.32%)</title><rect x="20" y="788" width="15" height="15" fill="rgb(214,129,24)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.32%)</title><rect x="20" y="804" width="15" height="15" fill="rgb(228,186,27)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.32%)</title><rect x="20" y="820" width="15" height="15" fill="rgb(223,161,29)"/><text x="23.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.32%)</title><rect x="20" y="836" width="15" height="15" fill="rgb(235,59,28)"/><text x="23.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.44%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(216,147,48)"/><text x="33.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.44%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(241,17,40)"/><text x="33.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.44%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(226,70,2)"/><text x="33.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.44%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(232,170,22)"/><text x="33.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(219,44,39)"/><text x="33.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.44%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(213,4,28)"/><text x="33.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.44%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(215,122,42)"/><text x="33.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.44%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(220,81,44)"/><text x="33.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.44%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(232,52,32)"/><text x="33.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.44%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(225,99,4)"/><text x="33.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.44%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(254,59,1)"/><text x="33.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(248,78,29)"/><text x="33.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (1 samples, 0.44%)</title><rect x="35" y="148" width="6" height="15" fill="rgb(237,119,19)"/><text x="38.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="164" width="6" height="15" fill="rgb(226,81,48)"/><text x="38.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="35" y="180" width="6" height="15" fill="rgb(221,176,16)"/><text x="38.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="196" width="6" height="15" fill="rgb(206,145,35)"/><text x="38.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="212" width="6" height="15" fill="rgb(252,18,52)"/><text x="38.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="228" width="6" height="15" fill="rgb(244,161,33)"/><text x="38.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="244" width="6" height="15" fill="rgb(211,112,8)"/><text x="38.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="260" width="6" height="15" fill="rgb(229,171,39)"/><text x="38.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="276" width="6" height="15" fill="rgb(237,174,54)"/><text x="38.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.44%)</title><rect x="35" y="292" width="6" height="15" fill="rgb(244,180,15)"/><text x="38.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="308" width="6" height="15" fill="rgb(205,20,49)"/><text x="38.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="324" width="6" height="15" fill="rgb(253,200,36)"/><text x="38.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="340" width="6" height="15" fill="rgb(232,2,33)"/><text x="38.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="356" width="6" height="15" fill="rgb(245,165,2)"/><text x="38.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="372" width="6" height="15" fill="rgb(226,75,24)"/><text x="38.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.44%)</title><rect x="35" y="388" width="6" height="15" fill="rgb(224,85,37)"/><text x="38.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="404" width="6" height="15" fill="rgb(225,11,39)"/><text x="38.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="420" width="6" height="15" fill="rgb(207,35,51)"/><text x="38.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="436" width="6" height="15" fill="rgb(233,158,52)"/><text x="38.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="452" width="6" height="15" fill="rgb(251,0,32)"/><text x="38.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="468" width="6" height="15" fill="rgb(224,44,1)"/><text x="38.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.44%)</title><rect x="35" y="484" width="6" height="15" fill="rgb(236,152,7)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="500" width="6" height="15" fill="rgb(245,183,33)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="516" width="6" height="15" fill="rgb(232,212,12)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="532" width="6" height="15" fill="rgb(232,184,1)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="548" width="6" height="15" fill="rgb(254,90,31)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="564" width="6" height="15" fill="rgb(231,65,8)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.44%)</title><rect x="35" y="580" width="6" height="15" fill="rgb(244,179,13)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="596" width="6" height="15" fill="rgb(212,37,29)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="612" width="6" height="15" fill="rgb(218,103,4)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="628" width="6" height="15" fill="rgb(220,76,6)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="644" width="6" height="15" fill="rgb(210,49,8)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="660" width="6" height="15" fill="rgb(226,167,0)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.44%)</title><rect x="35" y="676" width="6" height="15" fill="rgb(234,97,12)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="692" width="6" height="15" fill="rgb(229,29,4)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="708" width="6" height="15" fill="rgb(242,8,46)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="724" width="6" height="15" fill="rgb(247,218,0)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="740" width="6" height="15" fill="rgb(235,68,2)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="756" width="6" height="15" fill="rgb(207,1,33)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.44%)</title><rect x="35" y="772" width="6" height="15" fill="rgb(225,192,48)"/><text x="38.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="35" y="788" width="6" height="15" fill="rgb(229,186,40)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="804" width="6" height="15" fill="rgb(235,107,54)"/><text x="38.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="820" width="6" height="15" fill="rgb(231,9,13)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="836" width="6" height="15" fill="rgb(211,197,27)"/><text x="38.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="852" width="6" height="15" fill="rgb(205,180,17)"/><text x="38.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="868" width="6" height="15" fill="rgb(248,49,43)"/><text x="38.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="884" width="6" height="15" fill="rgb(238,206,27)"/><text x="38.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.44%)</title><rect x="35" y="900" width="6" height="15" fill="rgb(253,72,18)"/><text x="38.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="916" width="6" height="15" fill="rgb(205,63,51)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="932" width="6" height="15" fill="rgb(248,16,8)"/><text x="38.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="948" width="6" height="15" fill="rgb(235,26,39)"/><text x="38.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="964" width="6" height="15" fill="rgb(229,109,48)"/><text x="38.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="980" width="6" height="15" fill="rgb(237,17,6)"/><text x="38.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.44%)</title><rect x="35" y="996" width="6" height="15" fill="rgb(222,61,22)"/><text x="38.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.44%)</title><rect x="35" y="1012" width="6" height="15" fill="rgb(236,39,35)"/><text x="38.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1028" width="6" height="15" fill="rgb(248,23,4)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1044" width="6" height="15" fill="rgb(217,9,46)"/><text x="38.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1060" width="6" height="15" fill="rgb(220,94,15)"/><text x="38.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1076" width="6" height="15" fill="rgb(220,222,41)"/><text x="38.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1092" width="6" height="15" fill="rgb(252,54,29)"/><text x="38.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1108" width="6" height="15" fill="rgb(234,156,38)"/><text x="38.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:392) (1 samples, 0.44%)</title><rect x="35" y="1124" width="6" height="15" fill="rgb(234,84,20)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1140" width="6" height="15" fill="rgb(213,103,23)"/><text x="38.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1156" width="6" height="15" fill="rgb(235,227,39)"/><text x="38.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1172" width="6" height="15" fill="rgb(221,161,44)"/><text x="38.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1188" width="6" height="15" fill="rgb(210,32,36)"/><text x="38.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1204" width="6" height="15" fill="rgb(219,69,19)"/><text x="38.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py:19) (1 samples, 0.44%)</title><rect x="35" y="1220" width="6" height="15" fill="rgb(239,138,35)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1236" width="6" height="15" fill="rgb(235,115,40)"/><text x="38.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1252" width="6" height="15" fill="rgb(215,1,16)"/><text x="38.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1268" width="6" height="15" fill="rgb(236,80,15)"/><text x="38.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1284" width="6" height="15" fill="rgb(205,195,43)"/><text x="38.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1300" width="6" height="15" fill="rgb(239,50,25)"/><text x="38.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/minpack.py:15) (1 samples, 0.44%)</title><rect x="35" y="1316" width="6" height="15" fill="rgb(251,139,45)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1332" width="6" height="15" fill="rgb(232,172,3)"/><text x="38.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1348" width="6" height="15" fill="rgb(214,76,53)"/><text x="38.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1364" width="6" height="15" fill="rgb(209,32,25)"/><text x="38.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1380" width="6" height="15" fill="rgb(210,179,2)"/><text x="38.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1396" width="6" height="15" fill="rgb(229,226,22)"/><text x="38.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/__init__.py:4) (1 samples, 0.44%)</title><rect x="35" y="1412" width="6" height="15" fill="rgb(234,218,17)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1428" width="6" height="15" fill="rgb(216,18,34)"/><text x="38.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1444" width="6" height="15" fill="rgb(251,58,19)"/><text x="38.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1460" width="6" height="15" fill="rgb(224,55,38)"/><text x="38.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1476" width="6" height="15" fill="rgb(230,186,2)"/><text x="38.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1492" width="6" height="15" fill="rgb(246,47,21)"/><text x="38.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/least_squares.py:15) (1 samples, 0.44%)</title><rect x="35" y="1508" width="6" height="15" fill="rgb(206,108,52)"/><text x="38.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1524" width="6" height="15" fill="rgb(206,182,19)"/><text x="38.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1540" width="6" height="15" fill="rgb(217,97,2)"/><text x="38.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1556" width="6" height="15" fill="rgb(225,34,50)"/><text x="38.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="35" y="1572" width="6" height="15" fill="rgb(228,92,51)"/><text x="38.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="35" y="1588" width="6" height="15" fill="rgb(219,28,42)"/><text x="38.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_lsq/trf.py:105) (1 samples, 0.44%)</title><rect x="35" y="1604" width="6" height="15" fill="rgb(205,204,25)"/><text x="38.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="35" y="1620" width="6" height="15" fill="rgb(240,38,48)"/><text x="38.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="35" y="1636" width="6" height="15" fill="rgb(231,179,16)"/><text x="38.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="35" y="1652" width="6" height="15" fill="rgb(211,213,5)"/><text x="38.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="35" y="1668" width="6" height="15" fill="rgb(245,184,34)"/><text x="38.00" y="1678.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="35" y="1684" width="6" height="15" fill="rgb(251,116,1)"/><text x="38.00" y="1694.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="35" y="1700" width="6" height="15" fill="rgb(234,34,35)"/><text x="38.00" y="1710.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.44%)</title><rect x="41" y="244" width="5" height="15" fill="rgb(253,64,42)"/><text x="44.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="260" width="5" height="15" fill="rgb(215,41,29)"/><text x="44.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="41" y="276" width="5" height="15" fill="rgb(233,44,9)"/><text x="44.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="41" y="292" width="5" height="15" fill="rgb(246,58,12)"/><text x="44.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="41" y="308" width="5" height="15" fill="rgb(226,139,50)"/><text x="44.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="41" y="324" width="5" height="15" fill="rgb(233,223,47)"/><text x="44.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.44%)</title><rect x="41" y="340" width="5" height="15" fill="rgb(254,40,13)"/><text x="44.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="356" width="5" height="15" fill="rgb(230,152,21)"/><text x="44.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="41" y="372" width="5" height="15" fill="rgb(226,135,18)"/><text x="44.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="41" y="388" width="5" height="15" fill="rgb(217,206,46)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="404" width="5" height="15" fill="rgb(250,139,48)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="41" y="420" width="5" height="15" fill="rgb(248,163,46)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="41" y="436" width="5" height="15" fill="rgb(243,74,33)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="41" y="452" width="5" height="15" fill="rgb(209,223,41)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="41" y="468" width="5" height="15" fill="rgb(247,106,1)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.44%)</title><rect x="41" y="484" width="5" height="15" fill="rgb(251,37,30)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="500" width="5" height="15" fill="rgb(223,78,1)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="41" y="516" width="5" height="15" fill="rgb(252,49,10)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="41" y="532" width="5" height="15" fill="rgb(213,187,29)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="41" y="548" width="5" height="15" fill="rgb(221,143,14)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="41" y="564" width="5" height="15" fill="rgb(234,87,13)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.44%)</title><rect x="41" y="580" width="5" height="15" fill="rgb(246,72,0)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="596" width="5" height="15" fill="rgb(254,134,46)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="41" y="612" width="5" height="15" fill="rgb(220,133,12)"/><text x="44.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="41" y="628" width="5" height="15" fill="rgb(216,102,36)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="41" y="644" width="5" height="15" fill="rgb(223,13,32)"/><text x="44.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.44%)</title><rect x="41" y="660" width="5" height="15" fill="rgb(246,208,17)"/><text x="44.00" y="670.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.44%)</title><rect x="41" y="676" width="5" height="15" fill="rgb(244,3,26)"/><text x="44.00" y="686.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.44%)</title><rect x="41" y="692" width="5" height="15" fill="rgb(233,3,3)"/><text x="44.00" y="702.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.44%)</title><rect x="41" y="708" width="5" height="15" fill="rgb(227,173,42)"/><text x="44.00" y="718.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1384) (1 samples, 0.44%)</title><rect x="41" y="724" width="5" height="15" fill="rgb(253,10,28)"/><text x="44.00" y="734.50"></text></g><g><title>0x7f9f4c29840e (?) (1 samples, 0.44%)</title><rect x="46" y="916" width="5" height="15" fill="rgb(214,17,22)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="932" width="5" height="15" fill="rgb(251,208,43)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="948" width="5" height="15" fill="rgb(235,155,39)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="964" width="5" height="15" fill="rgb(237,142,32)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="46" y="980" width="5" height="15" fill="rgb(239,105,47)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="46" y="996" width="5" height="15" fill="rgb(219,131,12)"/><text x="49.00" y="1006.50"></text></g><g><title>0x7f9f4c051bb0 (?) (1 samples, 0.44%)</title><rect x="46" y="1012" width="5" height="15" fill="rgb(247,152,33)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="1028" width="5" height="15" fill="rgb(223,81,5)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="1044" width="5" height="15" fill="rgb(223,170,42)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="1060" width="5" height="15" fill="rgb(236,121,27)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="46" y="1076" width="5" height="15" fill="rgb(236,26,19)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="46" y="1092" width="5" height="15" fill="rgb(251,212,49)"/><text x="49.00" y="1102.50"></text></g><g><title>0x7f9f4b9d8e18 (?) (1 samples, 0.44%)</title><rect x="46" y="1108" width="5" height="15" fill="rgb(252,17,19)"/><text x="49.00" y="1118.50"></text></g><g><title>0x7f9f4b9db28a (?) (1 samples, 0.44%)</title><rect x="46" y="1124" width="5" height="15" fill="rgb(254,222,39)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="1140" width="5" height="15" fill="rgb(237,18,11)"/><text x="49.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="1156" width="5" height="15" fill="rgb(205,10,4)"/><text x="49.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="1172" width="5" height="15" fill="rgb(242,162,23)"/><text x="49.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="46" y="1188" width="5" height="15" fill="rgb(227,210,23)"/><text x="49.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="46" y="1204" width="5" height="15" fill="rgb(212,78,32)"/><text x="49.00" y="1214.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/__init__.py:2) (1 samples, 0.44%)</title><rect x="46" y="1220" width="5" height="15" fill="rgb(242,76,8)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="1236" width="5" height="15" fill="rgb(240,164,8)"/><text x="49.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="1252" width="5" height="15" fill="rgb(241,156,41)"/><text x="49.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="1268" width="5" height="15" fill="rgb(215,100,40)"/><text x="49.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="46" y="1284" width="5" height="15" fill="rgb(238,48,29)"/><text x="49.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="46" y="1300" width="5" height="15" fill="rgb(241,32,12)"/><text x="49.00" y="1310.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/tz.py:29) (1 samples, 0.44%)</title><rect x="46" y="1316" width="5" height="15" fill="rgb(234,91,20)"/><text x="49.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="46" y="1332" width="5" height="15" fill="rgb(207,71,3)"/><text x="49.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="46" y="1348" width="5" height="15" fill="rgb(208,137,23)"/><text x="49.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="46" y="1364" width="5" height="15" fill="rgb(224,17,52)"/><text x="49.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.44%)</title><rect x="46" y="1380" width="5" height="15" fill="rgb(210,215,52)"/><text x="49.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.44%)</title><rect x="46" y="1396" width="5" height="15" fill="rgb(214,69,21)"/><text x="49.00" y="1406.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.44%)</title><rect x="46" y="1412" width="5" height="15" fill="rgb(214,102,16)"/><text x="49.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (2 samples, 0.88%)</title><rect x="46" y="628" width="10" height="15" fill="rgb(217,73,13)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="46" y="644" width="10" height="15" fill="rgb(214,71,31)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="46" y="660" width="10" height="15" fill="rgb(222,3,20)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="46" y="676" width="10" height="15" fill="rgb(240,205,41)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="46" y="692" width="10" height="15" fill="rgb(252,111,1)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="46" y="708" width="10" height="15" fill="rgb(236,162,11)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (2 samples, 0.88%)</title><rect x="46" y="724" width="10" height="15" fill="rgb(252,222,11)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="46" y="740" width="10" height="15" fill="rgb(247,77,28)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="46" y="756" width="10" height="15" fill="rgb(213,159,53)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="46" y="772" width="10" height="15" fill="rgb(253,0,53)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="46" y="788" width="10" height="15" fill="rgb(206,225,18)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="46" y="804" width="10" height="15" fill="rgb(249,26,46)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (2 samples, 0.88%)</title><rect x="46" y="820" width="10" height="15" fill="rgb(210,126,48)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="46" y="836" width="10" height="15" fill="rgb(212,95,54)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="46" y="852" width="10" height="15" fill="rgb(244,228,33)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="46" y="868" width="10" height="15" fill="rgb(230,202,14)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.88%)</title><rect x="46" y="884" width="10" height="15" fill="rgb(207,202,31)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="46" y="900" width="10" height="15" fill="rgb(226,176,0)"/><text x="49.00" y="910.50"></text></g><g><title>0x7f9f4c29840e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="916" width="5" height="15" fill="rgb(217,141,40)"/><text x="54.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="932" width="5" height="15" fill="rgb(242,46,29)"/><text x="54.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="948" width="5" height="15" fill="rgb(224,29,46)"/><text x="54.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="964" width="5" height="15" fill="rgb(232,216,6)"/><text x="54.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="980" width="5" height="15" fill="rgb(221,132,26)"/><text x="54.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="996" width="5" height="15" fill="rgb(206,1,33)"/><text x="54.00" y="1006.50"></text></g><g><title>0x7f9f4c051cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1012" width="5" height="15" fill="rgb(218,89,27)"/><text x="54.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="1028" width="5" height="15" fill="rgb(236,38,0)"/><text x="54.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="1044" width="5" height="15" fill="rgb(217,89,10)"/><text x="54.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="1060" width="5" height="15" fill="rgb(217,1,19)"/><text x="54.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="1076" width="5" height="15" fill="rgb(223,192,42)"/><text x="54.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="1092" width="5" height="15" fill="rgb(225,163,5)"/><text x="54.00" y="1102.50"></text></g><g><title>0x7f9f4b7470e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1108" width="5" height="15" fill="rgb(232,1,26)"/><text x="54.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="1124" width="5" height="15" fill="rgb(213,95,35)"/><text x="54.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="1140" width="5" height="15" fill="rgb(210,118,37)"/><text x="54.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="1156" width="5" height="15" fill="rgb(247,22,26)"/><text x="54.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="1172" width="5" height="15" fill="rgb(250,179,45)"/><text x="54.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="1188" width="5" height="15" fill="rgb(226,229,14)"/><text x="54.00" y="1198.50"></text></g><g><title>0x7f9f4b4cbe68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1204" width="5" height="15" fill="rgb(229,8,45)"/><text x="54.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="1220" width="5" height="15" fill="rgb(235,147,19)"/><text x="54.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="1236" width="5" height="15" fill="rgb(216,60,49)"/><text x="54.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="1252" width="5" height="15" fill="rgb(213,91,44)"/><text x="54.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="1268" width="5" height="15" fill="rgb(214,90,23)"/><text x="54.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="1284" width="5" height="15" fill="rgb(227,194,24)"/><text x="54.00" y="1294.50"></text></g><g><title>0x7f9f4b25c2fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1300" width="5" height="15" fill="rgb(214,66,24)"/><text x="54.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="1316" width="5" height="15" fill="rgb(246,150,45)"/><text x="54.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="1332" width="5" height="15" fill="rgb(234,199,34)"/><text x="54.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="1348" width="5" height="15" fill="rgb(224,9,43)"/><text x="54.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="1364" width="5" height="15" fill="rgb(220,210,29)"/><text x="54.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="1380" width="5" height="15" fill="rgb(214,199,23)"/><text x="54.00" y="1390.50"></text></g><g><title>0x7f9f4b040153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1396" width="5" height="15" fill="rgb(253,218,38)"/><text x="54.00" y="1406.50"></text></g><g><title>0x7f9f4b03ec13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1412" width="5" height="15" fill="rgb(254,32,15)"/><text x="54.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="51" y="1428" width="5" height="15" fill="rgb(210,187,29)"/><text x="54.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="51" y="1444" width="5" height="15" fill="rgb(240,164,27)"/><text x="54.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="51" y="1460" width="5" height="15" fill="rgb(241,61,13)"/><text x="54.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.44%)</title><rect x="51" y="1476" width="5" height="15" fill="rgb(234,102,26)"/><text x="54.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="51" y="1492" width="5" height="15" fill="rgb(223,33,37)"/><text x="54.00" y="1502.50"></text></g><g><title>0x7f9f4addb181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1508" width="5" height="15" fill="rgb(218,117,26)"/><text x="54.00" y="1518.50"></text></g><g><title>0x7f9f4adde1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1524" width="5" height="15" fill="rgb(216,75,10)"/><text x="54.00" y="1534.50"></text></g><g><title>0x7f9f4ae0a167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1540" width="5" height="15" fill="rgb(250,159,13)"/><text x="54.00" y="1550.50"></text></g><g><title>0x7f9f4ae05b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1556" width="5" height="15" fill="rgb(240,209,42)"/><text x="54.00" y="1566.50"></text></g><g><title>0x7f9f4ade907b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="51" y="1572" width="5" height="15" fill="rgb(231,40,6)"/><text x="54.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (1 samples, 0.44%)</title><rect x="51" y="1588" width="5" height="15" fill="rgb(214,88,45)"/><text x="54.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (1 samples, 0.44%)</title><rect x="51" y="1604" width="5" height="15" fill="rgb(234,62,54)"/><text x="54.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (1 samples, 0.44%)</title><rect x="51" y="1620" width="5" height="15" fill="rgb(214,68,52)"/><text x="54.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:91) (1 samples, 0.44%)</title><rect x="51" y="1636" width="5" height="15" fill="rgb(205,102,4)"/><text x="54.00" y="1646.50"></text></g><g><title>get (_collections_abc.py:660) (1 samples, 0.44%)</title><rect x="51" y="1652" width="5" height="15" fill="rgb(224,39,14)"/><text x="54.00" y="1662.50"></text></g><g><title>__getitem__ (os.py:675) (1 samples, 0.44%)</title><rect x="51" y="1668" width="5" height="15" fill="rgb(232,157,41)"/><text x="54.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.44%)</title><rect x="56" y="724" width="5" height="15" fill="rgb(231,206,0)"/><text x="59.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="56" y="740" width="5" height="15" fill="rgb(218,43,3)"/><text x="59.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="756" width="5" height="15" fill="rgb(252,205,2)"/><text x="59.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="772" width="5" height="15" fill="rgb(254,45,13)"/><text x="59.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="56" y="788" width="5" height="15" fill="rgb(232,41,48)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="804" width="5" height="15" fill="rgb(231,182,17)"/><text x="59.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.44%)</title><rect x="56" y="820" width="5" height="15" fill="rgb(231,74,0)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="56" y="836" width="5" height="15" fill="rgb(228,57,29)"/><text x="59.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="852" width="5" height="15" fill="rgb(205,87,17)"/><text x="59.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="868" width="5" height="15" fill="rgb(223,179,32)"/><text x="59.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="56" y="884" width="5" height="15" fill="rgb(214,128,38)"/><text x="59.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="900" width="5" height="15" fill="rgb(237,195,24)"/><text x="59.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.44%)</title><rect x="56" y="916" width="5" height="15" fill="rgb(207,172,6)"/><text x="59.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="56" y="932" width="5" height="15" fill="rgb(235,161,31)"/><text x="59.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="56" y="948" width="5" height="15" fill="rgb(252,171,33)"/><text x="59.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="56" y="964" width="5" height="15" fill="rgb(209,158,48)"/><text x="59.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="56" y="980" width="5" height="15" fill="rgb(226,162,25)"/><text x="59.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="56" y="996" width="5" height="15" fill="rgb(225,13,37)"/><text x="59.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:8493) (1 samples, 0.44%)</title><rect x="56" y="1012" width="5" height="15" fill="rgb(212,154,51)"/><text x="59.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (1 samples, 0.44%)</title><rect x="56" y="1028" width="5" height="15" fill="rgb(218,160,44)"/><text x="59.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:731) (1 samples, 0.44%)</title><rect x="56" y="1044" width="5" height="15" fill="rgb(242,2,40)"/><text x="59.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.44%)</title><rect x="56" y="1060" width="5" height="15" fill="rgb(208,116,43)"/><text x="59.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.44%)</title><rect x="56" y="1076" width="5" height="15" fill="rgb(205,135,0)"/><text x="59.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.44%)</title><rect x="56" y="1092" width="5" height="15" fill="rgb(235,95,41)"/><text x="59.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.44%)</title><rect x="56" y="1108" width="5" height="15" fill="rgb(241,210,29)"/><text x="59.00" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.44%)</title><rect x="56" y="1124" width="5" height="15" fill="rgb(224,94,46)"/><text x="59.00" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="56" y="1140" width="5" height="15" fill="rgb(207,219,7)"/><text x="59.00" y="1150.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:4) (10 samples, 4.39%)</title><rect x="15" y="52" width="51" height="15" fill="rgb(229,5,2)"/><text x="18.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 4.39%)</title><rect x="15" y="68" width="51" height="15" fill="rgb(232,192,41)"/><text x="18.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 4.39%)</title><rect x="15" y="84" width="51" height="15" fill="rgb(225,30,51)"/><text x="18.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 4.39%)</title><rect x="15" y="100" width="51" height="15" fill="rgb(242,39,47)"/><text x="18.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 4.39%)</title><rect x="15" y="116" width="51" height="15" fill="rgb(230,203,28)"/><text x="18.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 4.39%)</title><rect x="15" y="132" width="51" height="15" fill="rgb(249,20,28)"/><text x="18.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (5 samples, 2.19%)</title><rect x="41" y="148" width="25" height="15" fill="rgb(254,100,11)"/><text x="44.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.19%)</title><rect x="41" y="164" width="25" height="15" fill="rgb(209,27,38)"/><text x="44.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.19%)</title><rect x="41" y="180" width="25" height="15" fill="rgb(208,9,12)"/><text x="44.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.19%)</title><rect x="41" y="196" width="25" height="15" fill="rgb(249,175,23)"/><text x="44.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.19%)</title><rect x="41" y="212" width="25" height="15" fill="rgb(234,100,1)"/><text x="44.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.19%)</title><rect x="41" y="228" width="25" height="15" fill="rgb(212,224,54)"/><text x="44.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.75%)</title><rect x="46" y="244" width="20" height="15" fill="rgb(235,184,42)"/><text x="49.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="46" y="260" width="20" height="15" fill="rgb(241,212,34)"/><text x="49.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="46" y="276" width="20" height="15" fill="rgb(235,19,22)"/><text x="49.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="46" y="292" width="20" height="15" fill="rgb(253,169,10)"/><text x="49.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="46" y="308" width="20" height="15" fill="rgb(231,117,31)"/><text x="49.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="46" y="324" width="20" height="15" fill="rgb(246,200,10)"/><text x="49.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.75%)</title><rect x="46" y="340" width="20" height="15" fill="rgb(251,27,30)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="46" y="356" width="20" height="15" fill="rgb(222,27,53)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="46" y="372" width="20" height="15" fill="rgb(234,97,37)"/><text x="49.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="46" y="388" width="20" height="15" fill="rgb(231,153,16)"/><text x="49.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="46" y="404" width="20" height="15" fill="rgb(222,202,28)"/><text x="49.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="46" y="420" width="20" height="15" fill="rgb(216,16,53)"/><text x="49.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.75%)</title><rect x="46" y="436" width="20" height="15" fill="rgb(207,41,51)"/><text x="49.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="46" y="452" width="20" height="15" fill="rgb(224,139,47)"/><text x="49.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="46" y="468" width="20" height="15" fill="rgb(205,80,11)"/><text x="49.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="46" y="484" width="20" height="15" fill="rgb(213,177,44)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="46" y="500" width="20" height="15" fill="rgb(249,212,7)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="46" y="516" width="20" height="15" fill="rgb(236,173,2)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.75%)</title><rect x="46" y="532" width="20" height="15" fill="rgb(247,26,12)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.75%)</title><rect x="46" y="548" width="20" height="15" fill="rgb(246,91,43)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.75%)</title><rect x="46" y="564" width="20" height="15" fill="rgb(208,214,52)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.75%)</title><rect x="46" y="580" width="20" height="15" fill="rgb(211,196,31)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.75%)</title><rect x="46" y="596" width="20" height="15" fill="rgb(229,52,32)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.75%)</title><rect x="46" y="612" width="20" height="15" fill="rgb(228,22,0)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.88%)</title><rect x="56" y="628" width="10" height="15" fill="rgb(227,114,20)"/><text x="59.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="56" y="644" width="10" height="15" fill="rgb(229,5,36)"/><text x="59.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="56" y="660" width="10" height="15" fill="rgb(222,105,41)"/><text x="59.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="56" y="676" width="10" height="15" fill="rgb(243,107,23)"/><text x="59.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="56" y="692" width="10" height="15" fill="rgb(231,215,10)"/><text x="59.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="56" y="708" width="10" height="15" fill="rgb(235,109,43)"/><text x="59.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.44%)</title><rect x="61" y="724" width="5" height="15" fill="rgb(250,103,41)"/><text x="64.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="740" width="5" height="15" fill="rgb(216,23,40)"/><text x="64.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.44%)</title><rect x="61" y="756" width="5" height="15" fill="rgb(227,102,23)"/><text x="64.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="772" width="5" height="15" fill="rgb(234,110,18)"/><text x="64.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="788" width="5" height="15" fill="rgb(237,1,13)"/><text x="64.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="804" width="5" height="15" fill="rgb(222,158,1)"/><text x="64.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="820" width="5" height="15" fill="rgb(207,134,5)"/><text x="64.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="836" width="5" height="15" fill="rgb(205,145,24)"/><text x="64.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="852" width="5" height="15" fill="rgb(233,184,30)"/><text x="64.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:12) (1 samples, 0.44%)</title><rect x="61" y="868" width="5" height="15" fill="rgb(215,22,21)"/><text x="64.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="61" y="884" width="5" height="15" fill="rgb(251,217,17)"/><text x="64.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.44%)</title><rect x="61" y="900" width="5" height="15" fill="rgb(237,183,44)"/><text x="64.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.44%)</title><rect x="61" y="916" width="5" height="15" fill="rgb(213,168,16)"/><text x="64.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.44%)</title><rect x="61" y="932" width="5" height="15" fill="rgb(225,207,32)"/><text x="64.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.44%)</title><rect x="61" y="948" width="5" height="15" fill="rgb(225,9,52)"/><text x="64.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/period.py:111) (1 samples, 0.44%)</title><rect x="61" y="964" width="5" height="15" fill="rgb(225,144,48)"/><text x="64.00" y="974.50"></text></g><g><title>PeriodArray (pandas/core/arrays/period.py:598) (1 samples, 0.44%)</title><rect x="61" y="980" width="5" height="15" fill="rgb(254,95,48)"/><text x="64.00" y="990.50"></text></g><g><title>inner (typing.py:248) (1 samples, 0.44%)</title><rect x="61" y="996" width="5" height="15" fill="rgb(206,101,26)"/><text x="64.00" y="1006.50"></text></g><g><title>__getitem__ (typing.py:352) (1 samples, 0.44%)</title><rect x="61" y="1012" width="5" height="15" fill="rgb(247,84,29)"/><text x="64.00" y="1022.50"></text></g><g><title>__init__ (typing.py:612) (1 samples, 0.44%)</title><rect x="61" y="1028" width="5" height="15" fill="rgb(207,56,2)"/><text x="64.00" y="1038.50"></text></g><g><title>inner (contextlib.py:73) (1 samples, 0.44%)</title><rect x="66" y="372" width="6" height="15" fill="rgb(228,17,39)"/><text x="69.00" y="382.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.44%)</title><rect x="66" y="388" width="6" height="15" fill="rgb(242,82,38)"/><text x="69.00" y="398.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:132) (1 samples, 0.44%)</title><rect x="66" y="404" width="6" height="15" fill="rgb(234,12,23)"/><text x="69.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.44%)</title><rect x="72" y="404" width="5" height="15" fill="rgb(206,127,47)"/><text x="75.00" y="414.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17413) (1 samples, 0.44%)</title><rect x="72" y="420" width="5" height="15" fill="rgb(207,75,35)"/><text x="75.00" y="430.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (bit_generator.c:18196) (1 samples, 0.44%)</title><rect x="72" y="436" width="5" height="15" fill="rgb(216,197,49)"/><text x="75.00" y="446.50"></text></g><g><title>uint_int (scalarmath.c.src:1412) (1 samples, 0.44%)</title><rect x="72" y="452" width="5" height="15" fill="rgb(248,85,50)"/><text x="75.00" y="462.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (3 samples, 1.32%)</title><rect x="66" y="244" width="16" height="15" fill="rgb(239,181,46)"/><text x="69.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (3 samples, 1.32%)</title><rect x="66" y="260" width="16" height="15" fill="rgb(224,39,36)"/><text x="69.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (3 samples, 1.32%)</title><rect x="66" y="276" width="16" height="15" fill="rgb(231,143,49)"/><text x="69.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (3 samples, 1.32%)</title><rect x="66" y="292" width="16" height="15" fill="rgb(235,163,38)"/><text x="69.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (3 samples, 1.32%)</title><rect x="66" y="308" width="16" height="15" fill="rgb(212,151,35)"/><text x="69.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (3 samples, 1.32%)</title><rect x="66" y="324" width="16" height="15" fill="rgb(218,112,50)"/><text x="69.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (3 samples, 1.32%)</title><rect x="66" y="340" width="16" height="15" fill="rgb(253,23,23)"/><text x="69.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (3 samples, 1.32%)</title><rect x="66" y="356" width="16" height="15" fill="rgb(253,91,28)"/><text x="69.00" y="366.50"></text></g><g><title>inner (contextlib.py:74) (2 samples, 0.88%)</title><rect x="72" y="372" width="10" height="15" fill="rgb(228,68,21)"/><text x="75.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c:5779) (2 samples, 0.88%)</title><rect x="72" y="388" width="10" height="15" fill="rgb(247,52,54)"/><text x="75.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.44%)</title><rect x="77" y="404" width="5" height="15" fill="rgb(211,216,5)"/><text x="80.00" y="414.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (1 samples, 0.44%)</title><rect x="82" y="276" width="5" height="15" fill="rgb(237,184,2)"/><text x="85.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.44%)</title><rect x="82" y="292" width="5" height="15" fill="rgb(237,2,4)"/><text x="85.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.44%)</title><rect x="82" y="308" width="5" height="15" fill="rgb(208,204,46)"/><text x="85.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.44%)</title><rect x="82" y="324" width="5" height="15" fill="rgb(232,16,20)"/><text x="85.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.44%)</title><rect x="82" y="340" width="5" height="15" fill="rgb(236,100,53)"/><text x="85.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.44%)</title><rect x="82" y="356" width="5" height="15" fill="rgb(217,124,43)"/><text x="85.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (1 samples, 0.44%)</title><rect x="82" y="372" width="5" height="15" fill="rgb(226,159,8)"/><text x="85.00" y="382.50"></text></g><g><title>__init__ (bit_generator.c:6998) (1 samples, 0.44%)</title><rect x="82" y="388" width="5" height="15" fill="rgb(222,99,13)"/><text x="85.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (1 samples, 0.44%)</title><rect x="82" y="404" width="5" height="15" fill="rgb(244,173,18)"/><text x="85.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (1 samples, 0.44%)</title><rect x="82" y="420" width="5" height="15" fill="rgb(240,120,33)"/><text x="85.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c:4349) (1 samples, 0.44%)</title><rect x="82" y="436" width="5" height="15" fill="rgb(254,144,16)"/><text x="85.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4670) (1 samples, 0.44%)</title><rect x="82" y="452" width="5" height="15" fill="rgb(209,180,20)"/><text x="85.00" y="462.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.44%)</title><rect x="82" y="468" width="5" height="15" fill="rgb(234,168,1)"/><text x="85.00" y="478.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.44%)</title><rect x="82" y="484" width="5" height="15" fill="rgb(234,132,25)"/><text x="85.00" y="494.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.44%)</title><rect x="82" y="500" width="5" height="15" fill="rgb(206,199,25)"/><text x="85.00" y="510.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.44%)</title><rect x="82" y="516" width="5" height="15" fill="rgb(231,129,2)"/><text x="85.00" y="526.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:132) (1 samples, 0.44%)</title><rect x="82" y="532" width="5" height="15" fill="rgb(224,205,36)"/><text x="85.00" y="542.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.44%)</title><rect x="82" y="548" width="5" height="15" fill="rgb(241,109,17)"/><text x="85.00" y="558.50"></text></g><g><title>fit (sklearn/tree/_classes.py:280) (1 samples, 0.44%)</title><rect x="87" y="276" width="5" height="15" fill="rgb(214,106,39)"/><text x="90.00" y="286.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py:1231) (1 samples, 0.44%)</title><rect x="87" y="292" width="5" height="15" fill="rgb(242,127,13)"/><text x="90.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.44%)</title><rect x="87" y="308" width="5" height="15" fill="rgb(208,80,9)"/><text x="90.00" y="318.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:50) (1 samples, 0.44%)</title><rect x="87" y="324" width="5" height="15" fill="rgb(234,22,24)"/><text x="90.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.44%)</title><rect x="87" y="340" width="5" height="15" fill="rgb(234,216,19)"/><text x="90.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.44%)</title><rect x="87" y="356" width="5" height="15" fill="rgb(206,131,33)"/><text x="90.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.44%)</title><rect x="87" y="372" width="5" height="15" fill="rgb(241,45,51)"/><text x="90.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.44%)</title><rect x="87" y="388" width="5" height="15" fill="rgb(212,79,32)"/><text x="90.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.44%)</title><rect x="87" y="404" width="5" height="15" fill="rgb(240,179,18)"/><text x="90.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.44%)</title><rect x="87" y="420" width="5" height="15" fill="rgb(223,179,29)"/><text x="90.00" y="430.50"></text></g><g><title>0x7f9f76e45fa0 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="87" y="436" width="5" height="15" fill="rgb(215,134,35)"/><text x="90.00" y="446.50"></text></g><g><title>fit (sklearn/tree/_classes.py:331) (1 samples, 0.44%)</title><rect x="92" y="276" width="5" height="15" fill="rgb(241,187,43)"/><text x="95.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:40) (7 samples, 3.07%)</title><rect x="66" y="52" width="37" height="15" fill="rgb(254,2,50)"/><text x="69.00" y="62.50">&lt;mo..</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:11) (7 samples, 3.07%)</title><rect x="66" y="68" width="37" height="15" fill="rgb(213,33,21)"/><text x="69.00" y="78.50">sta..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (7 samples, 3.07%)</title><rect x="66" y="84" width="37" height="15" fill="rgb(243,189,11)"/><text x="69.00" y="94.50">set..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (7 samples, 3.07%)</title><rect x="66" y="100" width="37" height="15" fill="rgb(242,159,40)"/><text x="69.00" y="110.50">set..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (7 samples, 3.07%)</title><rect x="66" y="116" width="37" height="15" fill="rgb(239,138,15)"/><text x="69.00" y="126.50">fit..</text></g><g><title>__call__ (joblib/parallel.py:1006) (7 samples, 3.07%)</title><rect x="66" y="132" width="37" height="15" fill="rgb(254,23,17)"/><text x="69.00" y="142.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (7 samples, 3.07%)</title><rect x="66" y="148" width="37" height="15" fill="rgb(212,11,18)"/><text x="69.00" y="158.50">dis..</text></g><g><title>_dispatch (joblib/parallel.py:753) (7 samples, 3.07%)</title><rect x="66" y="164" width="37" height="15" fill="rgb(251,125,16)"/><text x="69.00" y="174.50">_di..</text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (7 samples, 3.07%)</title><rect x="66" y="180" width="37" height="15" fill="rgb(227,0,33)"/><text x="69.00" y="190.50">app..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (7 samples, 3.07%)</title><rect x="66" y="196" width="37" height="15" fill="rgb(240,52,20)"/><text x="69.00" y="206.50">__i..</text></g><g><title>__call__ (joblib/parallel.py:256) (7 samples, 3.07%)</title><rect x="66" y="212" width="37" height="15" fill="rgb(207,56,21)"/><text x="69.00" y="222.50">__c..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (7 samples, 3.07%)</title><rect x="66" y="228" width="37" height="15" fill="rgb(250,130,4)"/><text x="69.00" y="238.50">&lt;li..</text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (4 samples, 1.75%)</title><rect x="82" y="244" width="21" height="15" fill="rgb(224,148,15)"/><text x="85.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (4 samples, 1.75%)</title><rect x="82" y="260" width="21" height="15" fill="rgb(211,36,44)"/><text x="85.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.44%)</title><rect x="97" y="276" width="6" height="15" fill="rgb(237,120,4)"/><text x="100.00" y="286.50"></text></g><g><title>0x7f9f5079fb11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="97" y="292" width="6" height="15" fill="rgb(232,164,27)"/><text x="100.00" y="302.50"></text></g><g><title>0x7f9f507d110a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="97" y="308" width="6" height="15" fill="rgb(232,145,49)"/><text x="100.00" y="318.50"></text></g><g><title>0x7f9f509fcd8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="97" y="324" width="6" height="15" fill="rgb(209,2,46)"/><text x="100.00" y="334.50"></text></g><g><title>0x7f9f509f5cc0 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="97" y="340" width="6" height="15" fill="rgb(221,123,40)"/><text x="100.00" y="350.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.44%)</title><rect x="103" y="196" width="5" height="15" fill="rgb(226,227,27)"/><text x="106.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.44%)</title><rect x="108" y="292" width="5" height="15" fill="rgb(254,60,52)"/><text x="111.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.44%)</title><rect x="108" y="308" width="5" height="15" fill="rgb(253,12,17)"/><text x="111.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.44%)</title><rect x="108" y="324" width="5" height="15" fill="rgb(246,150,31)"/><text x="111.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.88%)</title><rect x="108" y="276" width="10" height="15" fill="rgb(219,4,4)"/><text x="111.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.44%)</title><rect x="113" y="292" width="5" height="15" fill="rgb(229,117,32)"/><text x="116.00" y="302.50"></text></g><g><title>0x7f9f507abd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="113" y="308" width="5" height="15" fill="rgb(213,166,26)"/><text x="116.00" y="318.50"></text></g><g><title>0x7f9f507aafa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="113" y="324" width="5" height="15" fill="rgb(228,0,17)"/><text x="116.00" y="334.50"></text></g><g><title>0x7f9f507ba405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="113" y="340" width="5" height="15" fill="rgb(216,73,19)"/><text x="116.00" y="350.50"></text></g><g><title>0x7f9f507b953e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="113" y="356" width="5" height="15" fill="rgb(217,137,3)"/><text x="116.00" y="366.50"></text></g><g><title>0x7f9f50785ef0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="113" y="372" width="5" height="15" fill="rgb(212,125,10)"/><text x="116.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.44%)</title><rect x="118" y="276" width="5" height="15" fill="rgb(206,149,5)"/><text x="121.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:47) (5 samples, 2.19%)</title><rect x="103" y="52" width="26" height="15" fill="rgb(243,15,20)"/><text x="106.00" y="62.50">&lt;..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:46) (5 samples, 2.19%)</title><rect x="103" y="68" width="26" height="15" fill="rgb(254,76,8)"/><text x="106.00" y="78.50">p..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:26) (5 samples, 2.19%)</title><rect x="103" y="84" width="26" height="15" fill="rgb(235,184,28)"/><text x="106.00" y="94.50">s..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:18) (5 samples, 2.19%)</title><rect x="103" y="100" width="26" height="15" fill="rgb(215,35,5)"/><text x="106.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (5 samples, 2.19%)</title><rect x="103" y="116" width="26" height="15" fill="rgb(234,91,6)"/><text x="106.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (5 samples, 2.19%)</title><rect x="103" y="132" width="26" height="15" fill="rgb(243,95,16)"/><text x="106.00" y="142.50">&lt;..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (5 samples, 2.19%)</title><rect x="103" y="148" width="26" height="15" fill="rgb(251,28,26)"/><text x="106.00" y="158.50">p..</text></g><g><title>__call__ (joblib/parallel.py:1006) (5 samples, 2.19%)</title><rect x="103" y="164" width="26" height="15" fill="rgb(229,3,18)"/><text x="106.00" y="174.50">_..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (5 samples, 2.19%)</title><rect x="103" y="180" width="26" height="15" fill="rgb(224,176,6)"/><text x="106.00" y="190.50">d..</text></g><g><title>_dispatch (joblib/parallel.py:753) (4 samples, 1.75%)</title><rect x="108" y="196" width="21" height="15" fill="rgb(222,76,51)"/><text x="111.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (4 samples, 1.75%)</title><rect x="108" y="212" width="21" height="15" fill="rgb(243,152,42)"/><text x="111.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (4 samples, 1.75%)</title><rect x="108" y="228" width="21" height="15" fill="rgb(225,188,20)"/><text x="111.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.75%)</title><rect x="108" y="244" width="21" height="15" fill="rgb(248,107,13)"/><text x="111.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.75%)</title><rect x="108" y="260" width="21" height="15" fill="rgb(208,195,28)"/><text x="111.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.44%)</title><rect x="123" y="276" width="6" height="15" fill="rgb(210,153,28)"/><text x="126.00" y="286.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:775) (1 samples, 0.44%)</title><rect x="129" y="148" width="5" height="15" fill="rgb(242,7,11)"/><text x="132.00" y="158.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.44%)</title><rect x="134" y="148" width="5" height="15" fill="rgb(237,134,4)"/><text x="137.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.44%)</title><rect x="134" y="164" width="5" height="15" fill="rgb(225,70,35)"/><text x="137.00" y="174.50"></text></g><g><title>__init__ (queue.py:45) (1 samples, 0.44%)</title><rect x="134" y="180" width="5" height="15" fill="rgb(223,92,47)"/><text x="137.00" y="190.50"></text></g><g><title>__init__ (threading.py:227) (1 samples, 0.44%)</title><rect x="134" y="196" width="5" height="15" fill="rgb(205,202,39)"/><text x="137.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (1 samples, 0.44%)</title><rect x="139" y="164" width="5" height="15" fill="rgb(233,142,26)"/><text x="142.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.44%)</title><rect x="139" y="180" width="5" height="15" fill="rgb(214,218,1)"/><text x="142.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.44%)</title><rect x="139" y="196" width="5" height="15" fill="rgb(250,12,21)"/><text x="142.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.44%)</title><rect x="139" y="212" width="5" height="15" fill="rgb(210,13,9)"/><text x="142.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.44%)</title><rect x="139" y="228" width="5" height="15" fill="rgb(246,81,4)"/><text x="142.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.44%)</title><rect x="139" y="244" width="5" height="15" fill="rgb(254,150,2)"/><text x="142.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.44%)</title><rect x="139" y="260" width="5" height="15" fill="rgb(221,132,29)"/><text x="142.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.44%)</title><rect x="139" y="276" width="5" height="15" fill="rgb(227,29,48)"/><text x="142.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.44%)</title><rect x="139" y="292" width="5" height="15" fill="rgb(253,151,21)"/><text x="142.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.44%)</title><rect x="139" y="308" width="5" height="15" fill="rgb(238,106,10)"/><text x="142.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.44%)</title><rect x="139" y="324" width="5" height="15" fill="rgb(209,41,13)"/><text x="142.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:908) (1 samples, 0.44%)</title><rect x="139" y="340" width="5" height="15" fill="rgb(239,62,53)"/><text x="142.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.44%)</title><rect x="144" y="180" width="5" height="15" fill="rgb(252,46,46)"/><text x="147.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:788) (2 samples, 0.88%)</title><rect x="149" y="180" width="11" height="15" fill="rgb(227,96,17)"/><text x="152.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.44%)</title><rect x="154" y="196" width="6" height="15" fill="rgb(217,119,5)"/><text x="157.00" y="206.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.88%)</title><rect x="165" y="196" width="10" height="15" fill="rgb(212,26,54)"/><text x="168.00" y="206.50"></text></g><g><title>__enter__ (threading.py:240) (1 samples, 0.44%)</title><rect x="170" y="212" width="5" height="15" fill="rgb(230,108,31)"/><text x="173.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.44%)</title><rect x="175" y="196" width="5" height="15" fill="rgb(218,133,52)"/><text x="178.00" y="206.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.88%)</title><rect x="180" y="196" width="11" height="15" fill="rgb(254,150,4)"/><text x="183.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (7 samples, 3.07%)</title><rect x="160" y="180" width="36" height="15" fill="rgb(215,178,54)"/><text x="163.00" y="190.50">dis..</text></g><g><title>get (queue.py:182) (1 samples, 0.44%)</title><rect x="191" y="196" width="5" height="15" fill="rgb(226,83,10)"/><text x="194.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.44%)</title><rect x="191" y="212" width="5" height="15" fill="rgb(250,210,52)"/><text x="194.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (1 samples, 0.44%)</title><rect x="196" y="180" width="5" height="15" fill="rgb(217,228,48)"/><text x="199.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.44%)</title><rect x="222" y="212" width="5" height="15" fill="rgb(228,155,12)"/><text x="225.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.44%)</title><rect x="242" y="228" width="6" height="15" fill="rgb(222,169,42)"/><text x="245.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.88%)</title><rect x="248" y="228" width="10" height="15" fill="rgb(223,18,13)"/><text x="251.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (3 samples, 1.32%)</title><rect x="258" y="228" width="15" height="15" fill="rgb(218,84,46)"/><text x="261.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (3 samples, 1.32%)</title><rect x="273" y="228" width="16" height="15" fill="rgb(235,199,12)"/><text x="276.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (20 samples, 8.77%)</title><rect x="201" y="180" width="104" height="15" fill="rgb(231,63,52)"/><text x="204.00" y="190.50">dispatch_one..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (17 samples, 7.46%)</title><rect x="217" y="196" width="88" height="15" fill="rgb(244,200,35)"/><text x="220.00" y="206.50">&lt;genexpr&gt; ..</text></g><g><title>delayed (joblib/parallel.py:308) (15 samples, 6.58%)</title><rect x="227" y="212" width="78" height="15" fill="rgb(245,161,13)"/><text x="230.00" y="222.50">delayed (..</text></g><g><title>wraps (functools.py:79) (3 samples, 1.32%)</title><rect x="289" y="228" width="16" height="15" fill="rgb(239,146,2)"/><text x="292.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (2 samples, 0.88%)</title><rect x="305" y="180" width="10" height="15" fill="rgb(239,0,31)"/><text x="308.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:809) (1 samples, 0.44%)</title><rect x="315" y="180" width="5" height="15" fill="rgb(225,220,28)"/><text x="318.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.44%)</title><rect x="320" y="180" width="5" height="15" fill="rgb(231,124,38)"/><text x="323.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 1.32%)</title><rect x="325" y="180" width="16" height="15" fill="rgb(220,38,35)"/><text x="328.00" y="190.50"></text></g><g><title>0x7f9f76d7de50 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="372" y="212" width="5" height="15" fill="rgb(242,54,40)"/><text x="375.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.32%)</title><rect x="377" y="212" width="15" height="15" fill="rgb(251,223,8)"/><text x="380.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (12 samples, 5.26%)</title><rect x="341" y="196" width="62" height="15" fill="rgb(226,11,30)"/><text x="344.00" y="206.50">get_ne..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (2 samples, 0.88%)</title><rect x="392" y="212" width="11" height="15" fill="rgb(241,55,20)"/><text x="395.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.44%)</title><rect x="408" y="228" width="5" height="15" fill="rgb(234,141,43)"/><text x="411.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.75%)</title><rect x="403" y="212" width="21" height="15" fill="rgb(235,170,24)"/><text x="406.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.88%)</title><rect x="413" y="228" width="11" height="15" fill="rgb(207,163,51)"/><text x="416.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.44%)</title><rect x="424" y="212" width="5" height="15" fill="rgb(218,112,42)"/><text x="427.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (19 samples, 8.33%)</title><rect x="341" y="180" width="98" height="15" fill="rgb(207,29,1)"/><text x="344.00" y="190.50">dispatch_on..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (7 samples, 3.07%)</title><rect x="403" y="196" width="36" height="15" fill="rgb(241,107,19)"/><text x="406.00" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.88%)</title><rect x="429" y="212" width="10" height="15" fill="rgb(242,126,49)"/><text x="432.00" y="222.50"></text></g><g><title>0x7f9f76d7de7a (libc-2.29.so) (1 samples, 0.44%)</title><rect x="434" y="228" width="5" height="15" fill="rgb(217,145,49)"/><text x="437.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (3 samples, 1.32%)</title><rect x="444" y="196" width="16" height="15" fill="rgb(216,183,26)"/><text x="447.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:244) (1 samples, 0.44%)</title><rect x="460" y="196" width="5" height="15" fill="rgb(212,200,41)"/><text x="463.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (6 samples, 2.63%)</title><rect x="439" y="180" width="31" height="15" fill="rgb(207,62,27)"/><text x="442.00" y="190.50">di..</text></g><g><title>__init__ (joblib/parallel.py:249) (1 samples, 0.44%)</title><rect x="465" y="196" width="5" height="15" fill="rgb(205,225,36)"/><text x="468.00" y="206.50"></text></g><g><title>put (queue.py:121) (1 samples, 0.44%)</title><rect x="475" y="196" width="5" height="15" fill="rgb(233,159,6)"/><text x="478.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.44%)</title><rect x="480" y="196" width="6" height="15" fill="rgb(207,109,35)"/><text x="483.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.44%)</title><rect x="480" y="212" width="6" height="15" fill="rgb(253,189,28)"/><text x="483.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.44%)</title><rect x="480" y="228" width="6" height="15" fill="rgb(250,99,30)"/><text x="483.00" y="238.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.44%)</title><rect x="496" y="212" width="5" height="15" fill="rgb(226,122,30)"/><text x="499.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.44%)</title><rect x="496" y="228" width="5" height="15" fill="rgb(241,21,4)"/><text x="499.00" y="238.50"></text></g><g><title>notify (threading.py:348) (3 samples, 1.32%)</title><rect x="501" y="212" width="16" height="15" fill="rgb(232,143,25)"/><text x="504.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (10 samples, 4.39%)</title><rect x="470" y="180" width="52" height="15" fill="rgb(227,167,3)"/><text x="473.00" y="190.50">dispa..</text></g><g><title>put (queue.py:151) (7 samples, 3.07%)</title><rect x="486" y="196" width="36" height="15" fill="rgb(230,91,50)"/><text x="489.00" y="206.50">put..</text></g><g><title>notify (threading.py:349) (1 samples, 0.44%)</title><rect x="517" y="212" width="5" height="15" fill="rgb(251,125,37)"/><text x="520.00" y="222.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.88%)</title><rect x="527" y="196" width="10" height="15" fill="rgb(243,42,51)"/><text x="530.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.44%)</title><rect x="532" y="212" width="5" height="15" fill="rgb(225,153,29)"/><text x="535.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.44%)</title><rect x="532" y="228" width="5" height="15" fill="rgb(205,47,15)"/><text x="535.00" y="238.50"></text></g><g><title>0x7f9f76d7d734 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="532" y="244" width="5" height="15" fill="rgb(245,55,17)"/><text x="535.00" y="254.50"></text></g><g><title>get (queue.py:181) (2 samples, 0.88%)</title><rect x="537" y="196" width="11" height="15" fill="rgb(250,229,10)"/><text x="540.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (6 samples, 2.63%)</title><rect x="522" y="180" width="31" height="15" fill="rgb(217,141,52)"/><text x="525.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (1 samples, 0.44%)</title><rect x="548" y="196" width="5" height="15" fill="rgb(245,92,21)"/><text x="551.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.44%)</title><rect x="548" y="212" width="5" height="15" fill="rgb(213,119,25)"/><text x="551.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.44%)</title><rect x="548" y="228" width="5" height="15" fill="rgb(245,94,7)"/><text x="551.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.88%)</title><rect x="553" y="180" width="10" height="15" fill="rgb(233,183,40)"/><text x="556.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.44%)</title><rect x="563" y="196" width="5" height="15" fill="rgb(205,78,23)"/><text x="566.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (2 samples, 0.88%)</title><rect x="568" y="196" width="11" height="15" fill="rgb(249,42,47)"/><text x="571.00" y="206.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.44%)</title><rect x="574" y="212" width="5" height="15" fill="rgb(208,155,16)"/><text x="577.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (3 samples, 1.32%)</title><rect x="579" y="196" width="15" height="15" fill="rgb(248,220,53)"/><text x="582.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:329) (1 samples, 0.44%)</title><rect x="589" y="212" width="5" height="15" fill="rgb(223,213,39)"/><text x="592.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.44%)</title><rect x="594" y="196" width="6" height="15" fill="rgb(221,107,51)"/><text x="597.00" y="206.50"></text></g><g><title>0x7f9f76d7d730 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="594" y="212" width="6" height="15" fill="rgb(226,33,10)"/><text x="597.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.44%)</title><rect x="600" y="196" width="5" height="15" fill="rgb(246,198,32)"/><text x="603.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (1 samples, 0.44%)</title><rect x="625" y="260" width="6" height="15" fill="rgb(234,223,39)"/><text x="628.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (8 samples, 3.51%)</title><rect x="615" y="244" width="41" height="15" fill="rgb(210,50,9)"/><text x="618.00" y="254.50">__c..</text></g><g><title>__init__ (joblib/parallel.py:196) (5 samples, 2.19%)</title><rect x="631" y="260" width="25" height="15" fill="rgb(234,187,36)"/><text x="634.00" y="270.50">_..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.44%)</title><rect x="672" y="308" width="5" height="15" fill="rgb(221,33,1)"/><text x="675.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 1.75%)</title><rect x="677" y="308" width="21" height="15" fill="rgb(214,223,26)"/><text x="680.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.44%)</title><rect x="703" y="324" width="5" height="15" fill="rgb(217,24,43)"/><text x="706.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (6 samples, 2.63%)</title><rect x="708" y="324" width="31" height="15" fill="rgb(235,35,53)"/><text x="711.00" y="334.50">&lt;l..</text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.75%)</title><rect x="719" y="340" width="20" height="15" fill="rgb(207,121,7)"/><text x="722.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (14 samples, 6.14%)</title><rect x="672" y="292" width="72" height="15" fill="rgb(243,149,12)"/><text x="675.00" y="302.50">predict ..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 3.95%)</title><rect x="698" y="308" width="46" height="15" fill="rgb(213,58,42)"/><text x="701.00" y="318.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.44%)</title><rect x="739" y="324" width="5" height="15" fill="rgb(239,139,46)"/><text x="742.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.44%)</title><rect x="744" y="292" width="6" height="15" fill="rgb(218,132,43)"/><text x="747.00" y="302.50"></text></g><g><title>0x7f9f507b91dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="760" y="356" width="5" height="15" fill="rgb(228,59,14)"/><text x="763.00" y="366.50"></text></g><g><title>0x7f9f507b9225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="765" y="356" width="5" height="15" fill="rgb(238,122,18)"/><text x="768.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.44%)</title><rect x="765" y="372" width="5" height="15" fill="rgb(254,81,25)"/><text x="768.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.44%)</title><rect x="765" y="388" width="5" height="15" fill="rgb(240,76,22)"/><text x="768.00" y="398.50"></text></g><g><title>0x7f9f5079310c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="770" y="404" width="5" height="15" fill="rgb(209,13,35)"/><text x="773.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.44%)</title><rect x="781" y="452" width="5" height="15" fill="rgb(245,203,43)"/><text x="784.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="781" y="468" width="5" height="15" fill="rgb(240,59,11)"/><text x="784.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.88%)</title><rect x="781" y="436" width="10" height="15" fill="rgb(227,72,19)"/><text x="784.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.44%)</title><rect x="786" y="452" width="5" height="15" fill="rgb(234,120,41)"/><text x="789.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:300) (1 samples, 0.44%)</title><rect x="786" y="468" width="5" height="15" fill="rgb(235,52,46)"/><text x="789.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.44%)</title><rect x="791" y="436" width="5" height="15" fill="rgb(224,61,14)"/><text x="794.00" y="446.50"></text></g><g><title>0x7f9f5079dd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.63%)</title><rect x="770" y="372" width="31" height="15" fill="rgb(249,154,37)"/><text x="773.00" y="382.50">0x..</text></g><g><title>0x7f9f5079d666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.63%)</title><rect x="770" y="388" width="31" height="15" fill="rgb(251,46,52)"/><text x="773.00" y="398.50">0x..</text></g><g><title>0x7f9f507932fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.19%)</title><rect x="775" y="404" width="26" height="15" fill="rgb(241,97,24)"/><text x="778.00" y="414.50">0..</text></g><g><title>array_getbuffer (buffer.c:782) (4 samples, 1.75%)</title><rect x="781" y="420" width="20" height="15" fill="rgb(248,45,49)"/><text x="784.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.44%)</title><rect x="796" y="436" width="5" height="15" fill="rgb(227,166,52)"/><text x="799.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.44%)</title><rect x="796" y="452" width="5" height="15" fill="rgb(209,165,21)"/><text x="799.00" y="462.50"></text></g><g><title>0x7f9f507b92df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.07%)</title><rect x="770" y="356" width="37" height="15" fill="rgb(222,204,53)"/><text x="773.00" y="366.50">0x7..</text></g><g><title>0x7f9f5079de72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="801" y="372" width="6" height="15" fill="rgb(233,198,17)"/><text x="804.00" y="382.50"></text></g><g><title>0x7f9f50790fd2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="801" y="388" width="6" height="15" fill="rgb(219,133,22)"/><text x="804.00" y="398.50"></text></g><g><title>0x7f9f507b9364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="807" y="356" width="5" height="15" fill="rgb(211,19,20)"/><text x="810.00" y="366.50"></text></g><g><title>0x7f9f507b9592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="812" y="356" width="10" height="15" fill="rgb(218,134,33)"/><text x="815.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.44%)</title><rect x="817" y="372" width="5" height="15" fill="rgb(238,52,53)"/><text x="820.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.44%)</title><rect x="817" y="388" width="5" height="15" fill="rgb(246,182,3)"/><text x="820.00" y="398.50"></text></g><g><title>0x7f9f507b98c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="822" y="356" width="5" height="15" fill="rgb(233,158,15)"/><text x="825.00" y="366.50"></text></g><g><title>0x7f9f507b992f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="827" y="356" width="5" height="15" fill="rgb(235,217,0)"/><text x="830.00" y="366.50"></text></g><g><title>0x7f9f5078e8a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="827" y="372" width="5" height="15" fill="rgb(230,54,17)"/><text x="830.00" y="382.50"></text></g><g><title>0x7f9f507b9a15 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="832" y="356" width="6" height="15" fill="rgb(212,118,41)"/><text x="835.00" y="366.50"></text></g><g><title>0x7f9f507ba405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 7.02%)</title><rect x="760" y="340" width="83" height="15" fill="rgb(225,107,4)"/><text x="763.00" y="350.50">0x7f9f507..</text></g><g><title>0x7f9f507b9c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="838" y="356" width="5" height="15" fill="rgb(249,201,49)"/><text x="841.00" y="366.50"></text></g><g><title>0x7f9f50791529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="838" y="372" width="5" height="15" fill="rgb(227,217,29)"/><text x="841.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.44%)</title><rect x="838" y="388" width="5" height="15" fill="rgb(253,202,2)"/><text x="841.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.44%)</title><rect x="838" y="404" width="5" height="15" fill="rgb(248,37,18)"/><text x="841.00" y="414.50"></text></g><g><title>0x7f9f5078f178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="843" y="356" width="5" height="15" fill="rgb(228,135,7)"/><text x="846.00" y="366.50"></text></g><g><title>0x7f9f5078e4f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="848" y="372" width="5" height="15" fill="rgb(237,69,13)"/><text x="851.00" y="382.50"></text></g><g><title>0x7f9f507aafa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 8.33%)</title><rect x="760" y="324" width="98" height="15" fill="rgb(235,159,27)"/><text x="763.00" y="334.50">0x7f9f507aa..</text></g><g><title>0x7f9f507ba540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.32%)</title><rect x="843" y="340" width="15" height="15" fill="rgb(214,63,6)"/><text x="846.00" y="350.50"></text></g><g><title>0x7f9f5078f2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="848" y="356" width="10" height="15" fill="rgb(225,15,42)"/><text x="851.00" y="366.50"></text></g><g><title>0x7f9f5078e530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="853" y="372" width="5" height="15" fill="rgb(218,184,16)"/><text x="856.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.44%)</title><rect x="853" y="388" width="5" height="15" fill="rgb(235,141,29)"/><text x="856.00" y="398.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.44%)</title><rect x="858" y="340" width="5" height="15" fill="rgb(241,3,32)"/><text x="861.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.44%)</title><rect x="858" y="356" width="5" height="15" fill="rgb(209,15,2)"/><text x="861.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.44%)</title><rect x="863" y="372" width="6" height="15" fill="rgb(228,155,21)"/><text x="866.00" y="382.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="863" y="388" width="6" height="15" fill="rgb(230,93,25)"/><text x="866.00" y="398.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.88%)</title><rect x="863" y="356" width="11" height="15" fill="rgb(216,134,41)"/><text x="866.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.44%)</title><rect x="869" y="372" width="5" height="15" fill="rgb(240,154,35)"/><text x="872.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="869" y="388" width="5" height="15" fill="rgb(232,24,0)"/><text x="872.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.44%)</title><rect x="874" y="404" width="5" height="15" fill="rgb(220,132,35)"/><text x="877.00" y="414.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (2 samples, 0.88%)</title><rect x="874" y="356" width="10" height="15" fill="rgb(219,226,52)"/><text x="877.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (2 samples, 0.88%)</title><rect x="874" y="372" width="10" height="15" fill="rgb(226,130,22)"/><text x="877.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.88%)</title><rect x="874" y="388" width="10" height="15" fill="rgb(240,147,49)"/><text x="877.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.44%)</title><rect x="879" y="404" width="5" height="15" fill="rgb(248,22,9)"/><text x="882.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.44%)</title><rect x="879" y="420" width="5" height="15" fill="rgb(221,154,12)"/><text x="882.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.44%)</title><rect x="879" y="436" width="5" height="15" fill="rgb(247,159,15)"/><text x="882.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.44%)</title><rect x="884" y="388" width="5" height="15" fill="rgb(235,207,17)"/><text x="887.00" y="398.50"></text></g><g><title>0x7f9f507ab05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.07%)</title><rect x="858" y="324" width="36" height="15" fill="rgb(216,86,48)"/><text x="861.00" y="334.50">0x7..</text></g><g><title>array_take (methods.c:145) (6 samples, 2.63%)</title><rect x="863" y="340" width="31" height="15" fill="rgb(248,82,10)"/><text x="866.00" y="350.50">ar..</text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.88%)</title><rect x="884" y="356" width="10" height="15" fill="rgb(248,91,51)"/><text x="887.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.88%)</title><rect x="884" y="372" width="10" height="15" fill="rgb(243,148,16)"/><text x="887.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.44%)</title><rect x="889" y="388" width="5" height="15" fill="rgb(234,62,23)"/><text x="892.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.44%)</title><rect x="889" y="404" width="5" height="15" fill="rgb(237,91,26)"/><text x="892.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:73) (1 samples, 0.44%)</title><rect x="889" y="420" width="5" height="15" fill="rgb(239,38,28)"/><text x="892.00" y="430.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.44%)</title><rect x="894" y="340" width="6" height="15" fill="rgb(229,166,23)"/><text x="897.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.44%)</title><rect x="894" y="356" width="6" height="15" fill="rgb(235,101,13)"/><text x="897.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.44%)</title><rect x="894" y="372" width="6" height="15" fill="rgb(250,166,23)"/><text x="897.00" y="382.50"></text></g><g><title>0x7f9f75f89ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="894" y="388" width="6" height="15" fill="rgb(207,140,12)"/><text x="897.00" y="398.50"></text></g><g><title>0x7f9f507ab328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="894" y="324" width="11" height="15" fill="rgb(220,89,23)"/><text x="897.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.44%)</title><rect x="900" y="340" width="5" height="15" fill="rgb(235,189,3)"/><text x="903.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.44%)</title><rect x="900" y="356" width="5" height="15" fill="rgb(238,48,52)"/><text x="903.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:265) (1 samples, 0.44%)</title><rect x="900" y="372" width="5" height="15" fill="rgb(247,9,1)"/><text x="903.00" y="382.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (31 samples, 13.60%)</title><rect x="750" y="292" width="160" height="15" fill="rgb(210,196,46)"/><text x="753.00" y="302.50">predict (sklearn/tre..</text></g><g><title>0x7f9f507abd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 12.72%)</title><rect x="760" y="308" width="150" height="15" fill="rgb(247,138,49)"/><text x="763.00" y="318.50">0x7f9f507abd2e (skl..</text></g><g><title>0x7f9f507ab5f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="905" y="324" width="5" height="15" fill="rgb(246,70,32)"/><text x="908.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 1.32%)</title><rect x="910" y="292" width="16" height="15" fill="rgb(252,22,20)"/><text x="913.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.88%)</title><rect x="915" y="308" width="11" height="15" fill="rgb(239,216,54)"/><text x="918.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.44%)</title><rect x="926" y="292" width="5" height="15" fill="rgb(241,219,14)"/><text x="929.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1508) (1 samples, 0.44%)</title><rect x="936" y="308" width="5" height="15" fill="rgb(231,73,3)"/><text x="939.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (54 samples, 23.68%)</title><rect x="667" y="276" width="279" height="15" fill="rgb(252,118,32)"/><text x="670.00" y="286.50">_accumulate_prediction (sklearn/ensem..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (3 samples, 1.32%)</title><rect x="931" y="292" width="15" height="15" fill="rgb(221,30,29)"/><text x="934.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.44%)</title><rect x="941" y="308" width="5" height="15" fill="rgb(232,177,49)"/><text x="944.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:418) (1 samples, 0.44%)</title><rect x="941" y="324" width="5" height="15" fill="rgb(214,111,23)"/><text x="944.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.44%)</title><rect x="946" y="276" width="5" height="15" fill="rgb(226,62,23)"/><text x="949.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (3 samples, 1.32%)</title><rect x="957" y="292" width="15" height="15" fill="rgb(242,152,47)"/><text x="960.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (3 samples, 1.32%)</title><rect x="957" y="308" width="15" height="15" fill="rgb(246,221,25)"/><text x="960.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 1.32%)</title><rect x="957" y="324" width="15" height="15" fill="rgb(231,198,10)"/><text x="960.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (3 samples, 1.32%)</title><rect x="957" y="340" width="15" height="15" fill="rgb(240,51,12)"/><text x="960.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.44%)</title><rect x="972" y="308" width="5" height="15" fill="rgb(240,65,46)"/><text x="975.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1102) (1 samples, 0.44%)</title><rect x="972" y="324" width="5" height="15" fill="rgb(227,125,48)"/><text x="975.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.44%)</title><rect x="972" y="340" width="5" height="15" fill="rgb(226,214,52)"/><text x="975.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.44%)</title><rect x="977" y="308" width="5" height="15" fill="rgb(235,119,53)"/><text x="980.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.44%)</title><rect x="977" y="324" width="5" height="15" fill="rgb(214,20,44)"/><text x="980.00" y="334.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.44%)</title><rect x="982" y="324" width="6" height="15" fill="rgb(251,68,11)"/><text x="985.00" y="334.50"></text></g><g><title>0x7f9f76d88124 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="982" y="340" width="6" height="15" fill="rgb(217,9,15)"/><text x="985.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.88%)</title><rect x="982" y="308" width="11" height="15" fill="rgb(247,158,54)"/><text x="985.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2019) (1 samples, 0.44%)</title><rect x="988" y="324" width="5" height="15" fill="rgb(239,160,47)"/><text x="991.00" y="334.50"></text></g><g><title>tuple_all_none (ufunc_object.c:1925) (1 samples, 0.44%)</title><rect x="988" y="340" width="5" height="15" fill="rgb(230,220,42)"/><text x="991.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.44%)</title><rect x="993" y="324" width="5" height="15" fill="rgb(219,72,30)"/><text x="996.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:734) (1 samples, 0.44%)</title><rect x="993" y="340" width="5" height="15" fill="rgb(250,163,27)"/><text x="996.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.44%)</title><rect x="998" y="356" width="5" height="15" fill="rgb(254,3,25)"/><text x="1001.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1428) (1 samples, 0.44%)</title><rect x="1003" y="372" width="5" height="15" fill="rgb(213,49,25)"/><text x="1006.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.88%)</title><rect x="1003" y="356" width="11" height="15" fill="rgb(247,222,34)"/><text x="1006.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.44%)</title><rect x="1008" y="372" width="6" height="15" fill="rgb(231,156,36)"/><text x="1011.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.75%)</title><rect x="998" y="324" width="21" height="15" fill="rgb(218,18,6)"/><text x="1001.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.75%)</title><rect x="998" y="340" width="21" height="15" fill="rgb(210,188,24)"/><text x="1001.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:268) (1 samples, 0.44%)</title><rect x="1014" y="356" width="5" height="15" fill="rgb(215,94,36)"/><text x="1017.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 2.63%)</title><rect x="993" y="308" width="31" height="15" fill="rgb(237,177,11)"/><text x="996.00" y="318.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:810) (1 samples, 0.44%)</title><rect x="1019" y="324" width="5" height="15" fill="rgb(230,120,30)"/><text x="1022.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.44%)</title><rect x="1024" y="308" width="5" height="15" fill="rgb(226,42,36)"/><text x="1027.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 5.26%)</title><rect x="972" y="292" width="62" height="15" fill="rgb(210,192,24)"/><text x="975.00" y="302.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (1 samples, 0.44%)</title><rect x="1029" y="308" width="5" height="15" fill="rgb(222,70,3)"/><text x="1032.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4751) (1 samples, 0.44%)</title><rect x="1034" y="292" width="5" height="15" fill="rgb(233,166,37)"/><text x="1037.00" y="302.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.44%)</title><rect x="1034" y="308" width="5" height="15" fill="rgb(224,204,19)"/><text x="1037.00" y="318.50"></text></g><g><title>0x7f9f76d88120 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1034" y="324" width="5" height="15" fill="rgb(215,101,27)"/><text x="1037.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (74 samples, 32.46%)</title><rect x="662" y="260" width="383" height="15" fill="rgb(211,1,45)"/><text x="665.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (18 samples, 7.89%)</title><rect x="951" y="276" width="94" height="15" fill="rgb(216,210,4)"/><text x="954.00" y="286.50">_accumulate..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.44%)</title><rect x="1039" y="292" width="6" height="15" fill="rgb(226,158,3)"/><text x="1042.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.44%)</title><rect x="1039" y="308" width="6" height="15" fill="rgb(210,210,0)"/><text x="1042.00" y="318.50"></text></g><g><title>unregister (joblib/parallel.py:217) (1 samples, 0.44%)</title><rect x="1050" y="276" width="5" height="15" fill="rgb(252,2,5)"/><text x="1053.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (86 samples, 37.72%)</title><rect x="615" y="212" width="445" height="15" fill="rgb(253,211,14)"/><text x="618.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (86 samples, 37.72%)</title><rect x="615" y="228" width="445" height="15" fill="rgb(230,110,0)"/><text x="618.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (78 samples, 34.21%)</title><rect x="656" y="244" width="404" height="15" fill="rgb(208,207,32)"/><text x="659.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 1.32%)</title><rect x="1045" y="260" width="15" height="15" fill="rgb(251,145,43)"/><text x="1048.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:220) (1 samples, 0.44%)</title><rect x="1055" y="276" width="5" height="15" fill="rgb(210,107,19)"/><text x="1058.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.44%)</title><rect x="1065" y="228" width="5" height="15" fill="rgb(210,63,29)"/><text x="1068.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.88%)</title><rect x="1070" y="228" width="11" height="15" fill="rgb(220,168,2)"/><text x="1073.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.44%)</title><rect x="1076" y="244" width="5" height="15" fill="rgb(244,76,45)"/><text x="1079.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1076" y="260" width="5" height="15" fill="rgb(224,32,10)"/><text x="1079.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.44%)</title><rect x="1081" y="228" width="5" height="15" fill="rgb(245,56,15)"/><text x="1084.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.44%)</title><rect x="1081" y="244" width="5" height="15" fill="rgb(208,74,26)"/><text x="1084.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (94 samples, 41.23%)</title><rect x="605" y="196" width="486" height="15" fill="rgb(237,215,8)"/><text x="608.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (6 samples, 2.63%)</title><rect x="1060" y="212" width="31" height="15" fill="rgb(211,139,5)"/><text x="1063.00" y="222.50">ap..</text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.44%)</title><rect x="1086" y="228" width="5" height="15" fill="rgb(254,63,3)"/><text x="1089.00" y="238.50"></text></g><g><title>0x7f9f76d7d757 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1086" y="244" width="5" height="15" fill="rgb(210,112,54)"/><text x="1089.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (104 samples, 45.61%)</title><rect x="563" y="180" width="539" height="15" fill="rgb(222,96,36)"/><text x="566.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.88%)</title><rect x="1091" y="196" width="11" height="15" fill="rgb(218,116,24)"/><text x="1094.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (186 samples, 81.58%)</title><rect x="144" y="164" width="963" height="15" fill="rgb(252,187,30)"/><text x="147.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.44%)</title><rect x="1102" y="180" width="5" height="15" fill="rgb(237,201,37)"/><text x="1105.00" y="190.50"></text></g><g><title>__enter__ (contextlib.py:110) (1 samples, 0.44%)</title><rect x="1107" y="180" width="5" height="15" fill="rgb(228,227,3)"/><text x="1110.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1015) (2 samples, 0.88%)</title><rect x="1107" y="164" width="10" height="15" fill="rgb(236,200,29)"/><text x="1110.00" y="174.50"></text></g><g><title>helper (contextlib.py:239) (1 samples, 0.44%)</title><rect x="1112" y="180" width="5" height="15" fill="rgb(208,116,3)"/><text x="1115.00" y="190.50"></text></g><g><title>__init__ (contextlib.py:82) (1 samples, 0.44%)</title><rect x="1112" y="196" width="5" height="15" fill="rgb(227,6,47)"/><text x="1115.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (2 samples, 0.88%)</title><rect x="1117" y="180" width="10" height="15" fill="rgb(241,24,49)"/><text x="1120.00" y="190.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.44%)</title><rect x="1122" y="196" width="5" height="15" fill="rgb(226,144,22)"/><text x="1125.00" y="206.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="1122" y="212" width="5" height="15" fill="rgb(243,73,32)"/><text x="1125.00" y="222.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.44%)</title><rect x="1127" y="180" width="6" height="15" fill="rgb(246,117,42)"/><text x="1130.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (4 samples, 1.75%)</title><rect x="1117" y="164" width="21" height="15" fill="rgb(236,171,34)"/><text x="1120.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.44%)</title><rect x="1133" y="180" width="5" height="15" fill="rgb(211,145,52)"/><text x="1136.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (194 samples, 85.09%)</title><rect x="139" y="148" width="1004" height="15" fill="rgb(211,38,37)"/><text x="142.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:993) (1 samples, 0.44%)</title><rect x="1138" y="164" width="5" height="15" fill="rgb(235,38,8)"/><text x="1141.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.44%)</title><rect x="1143" y="180" width="5" height="15" fill="rgb(217,214,2)"/><text x="1146.00" y="190.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.44%)</title><rect x="1143" y="196" width="5" height="15" fill="rgb(250,220,34)"/><text x="1146.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:54) (198 samples, 86.84%)</title><rect x="129" y="52" width="1024" height="15" fill="rgb(218,0,12)"/><text x="132.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:53) (198 samples, 86.84%)</title><rect x="129" y="68" width="1024" height="15" fill="rgb(211,3,34)"/><text x="132.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (198 samples, 86.84%)</title><rect x="129" y="84" width="1024" height="15" fill="rgb(233,36,36)"/><text x="132.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (198 samples, 86.84%)</title><rect x="129" y="100" width="1024" height="15" fill="rgb(218,38,5)"/><text x="132.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (198 samples, 86.84%)</title><rect x="129" y="116" width="1024" height="15" fill="rgb(248,127,39)"/><text x="132.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (198 samples, 86.84%)</title><rect x="129" y="132" width="1024" height="15" fill="rgb(241,207,20)"/><text x="132.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (2 samples, 0.88%)</title><rect x="1143" y="148" width="10" height="15" fill="rgb(234,85,35)"/><text x="1146.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.88%)</title><rect x="1143" y="164" width="10" height="15" fill="rgb(250,101,33)"/><text x="1146.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.44%)</title><rect x="1148" y="180" width="5" height="15" fill="rgb(224,61,46)"/><text x="1151.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.44%)</title><rect x="1148" y="196" width="5" height="15" fill="rgb(243,59,3)"/><text x="1151.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.44%)</title><rect x="1148" y="212" width="5" height="15" fill="rgb(208,22,0)"/><text x="1151.00" y="222.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.44%)</title><rect x="1148" y="228" width="5" height="15" fill="rgb(228,179,18)"/><text x="1151.00" y="238.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1704) (1 samples, 0.44%)</title><rect x="1148" y="244" width="5" height="15" fill="rgb(253,52,50)"/><text x="1151.00" y="254.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (1 samples, 0.44%)</title><rect x="1153" y="100" width="5" height="15" fill="rgb(209,71,52)"/><text x="1156.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (1 samples, 0.44%)</title><rect x="1153" y="116" width="5" height="15" fill="rgb(232,141,10)"/><text x="1156.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (1 samples, 0.44%)</title><rect x="1153" y="132" width="5" height="15" fill="rgb(209,90,1)"/><text x="1156.00" y="142.50"></text></g><g><title>load (_pickle.c:6423) (1 samples, 0.44%)</title><rect x="1153" y="148" width="5" height="15" fill="rgb(215,99,42)"/><text x="1156.00" y="158.50"></text></g><g><title>load_none (_pickle.c:4758) (1 samples, 0.44%)</title><rect x="1153" y="164" width="5" height="15" fill="rgb(207,39,11)"/><text x="1156.00" y="174.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:44) (1 samples, 0.44%)</title><rect x="1158" y="388" width="6" height="15" fill="rgb(244,74,10)"/><text x="1161.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.44%)</title><rect x="1158" y="404" width="6" height="15" fill="rgb(241,175,18)"/><text x="1161.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.44%)</title><rect x="1158" y="420" width="6" height="15" fill="rgb(209,132,19)"/><text x="1161.00" y="430.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.44%)</title><rect x="1158" y="436" width="6" height="15" fill="rgb(235,33,14)"/><text x="1161.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.44%)</title><rect x="1158" y="452" width="6" height="15" fill="rgb(206,190,21)"/><text x="1161.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.44%)</title><rect x="1158" y="468" width="6" height="15" fill="rgb(221,122,2)"/><text x="1161.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.44%)</title><rect x="1158" y="484" width="6" height="15" fill="rgb(225,170,27)"/><text x="1161.00" y="494.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:36) (3 samples, 1.32%)</title><rect x="1153" y="84" width="16" height="15" fill="rgb(207,104,5)"/><text x="1156.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.88%)</title><rect x="1158" y="100" width="11" height="15" fill="rgb(218,141,11)"/><text x="1161.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.88%)</title><rect x="1158" y="116" width="11" height="15" fill="rgb(235,157,40)"/><text x="1161.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.88%)</title><rect x="1158" y="132" width="11" height="15" fill="rgb(219,209,29)"/><text x="1161.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.88%)</title><rect x="1158" y="148" width="11" height="15" fill="rgb(239,215,52)"/><text x="1161.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.88%)</title><rect x="1158" y="164" width="11" height="15" fill="rgb(250,226,17)"/><text x="1161.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.88%)</title><rect x="1158" y="180" width="11" height="15" fill="rgb(214,16,46)"/><text x="1161.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.88%)</title><rect x="1158" y="196" width="11" height="15" fill="rgb(207,116,23)"/><text x="1161.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="1158" y="212" width="11" height="15" fill="rgb(224,60,49)"/><text x="1161.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="1158" y="228" width="11" height="15" fill="rgb(252,24,15)"/><text x="1161.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="1158" y="244" width="11" height="15" fill="rgb(245,44,13)"/><text x="1161.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="1158" y="260" width="11" height="15" fill="rgb(232,186,51)"/><text x="1161.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="1158" y="276" width="11" height="15" fill="rgb(227,116,15)"/><text x="1161.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.88%)</title><rect x="1158" y="292" width="11" height="15" fill="rgb(252,34,7)"/><text x="1161.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.88%)</title><rect x="1158" y="308" width="11" height="15" fill="rgb(212,58,39)"/><text x="1161.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.88%)</title><rect x="1158" y="324" width="11" height="15" fill="rgb(241,111,24)"/><text x="1161.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.88%)</title><rect x="1158" y="340" width="11" height="15" fill="rgb(222,100,10)"/><text x="1161.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.88%)</title><rect x="1158" y="356" width="11" height="15" fill="rgb(244,57,9)"/><text x="1161.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.88%)</title><rect x="1158" y="372" width="11" height="15" fill="rgb(241,166,35)"/><text x="1161.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.44%)</title><rect x="1164" y="388" width="5" height="15" fill="rgb(206,219,47)"/><text x="1167.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.44%)</title><rect x="1164" y="404" width="5" height="15" fill="rgb(239,195,8)"/><text x="1167.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.44%)</title><rect x="1164" y="420" width="5" height="15" fill="rgb(234,41,29)"/><text x="1167.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.44%)</title><rect x="1164" y="436" width="5" height="15" fill="rgb(235,104,17)"/><text x="1167.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.44%)</title><rect x="1164" y="452" width="5" height="15" fill="rgb(224,38,11)"/><text x="1167.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:107) (1 samples, 0.44%)</title><rect x="1164" y="468" width="5" height="15" fill="rgb(239,151,4)"/><text x="1167.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.44%)</title><rect x="1164" y="484" width="5" height="15" fill="rgb(253,146,17)"/><text x="1167.00" y="494.50"></text></g><g><title>getconstraint (mlprodict/onnxrt/doc/doc_helper.py:165) (1 samples, 0.44%)</title><rect x="1164" y="500" width="5" height="15" fill="rgb(228,207,4)"/><text x="1167.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="1164" y="516" width="5" height="15" fill="rgb(223,130,7)"/><text x="1167.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::TypeConstraintParam const&amp;, pybind11::is_method&gt;(pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::TypeConstraintParam const&amp;), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="1164" y="532" width="5" height="15" fill="rgb(228,64,45)"/><text x="1167.00" y="542.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="1164" y="548" width="5" height="15" fill="rgb(247,121,6)"/><text x="1167.00" y="558.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="1164" y="564" width="5" height="15" fill="rgb(231,153,50)"/><text x="1167.00" y="574.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:61) (4 samples, 1.75%)</title><rect x="1153" y="52" width="21" height="15" fill="rgb(213,137,13)"/><text x="1156.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:60) (4 samples, 1.75%)</title><rect x="1153" y="68" width="21" height="15" fill="rgb(254,82,54)"/><text x="1156.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (1 samples, 0.44%)</title><rect x="1169" y="84" width="5" height="15" fill="rgb(213,185,15)"/><text x="1172.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (1 samples, 0.44%)</title><rect x="1169" y="100" width="5" height="15" fill="rgb(218,132,5)"/><text x="1172.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.44%)</title><rect x="1169" y="116" width="5" height="15" fill="rgb(252,44,49)"/><text x="1172.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.44%)</title><rect x="1169" y="132" width="5" height="15" fill="rgb(217,222,22)"/><text x="1172.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.44%)</title><rect x="1169" y="148" width="5" height="15" fill="rgb(218,39,28)"/><text x="1172.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.44%)</title><rect x="1169" y="164" width="5" height="15" fill="rgb(210,167,45)"/><text x="1172.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.44%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(252,73,32)"/><text x="1172.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.44%)</title><rect x="1169" y="196" width="5" height="15" fill="rgb(240,45,33)"/><text x="1172.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.44%)</title><rect x="1169" y="212" width="5" height="15" fill="rgb(236,35,37)"/><text x="1172.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (1 samples, 0.44%)</title><rect x="1169" y="228" width="5" height="15" fill="rgb(211,10,39)"/><text x="1172.00" y="238.50"></text></g><g><title>0x7f9f3780054f (?) (1 samples, 0.44%)</title><rect x="1169" y="244" width="5" height="15" fill="rgb(229,213,4)"/><text x="1172.00" y="254.50"></text></g><g><title>0x7f9f3780665e (?) (1 samples, 0.44%)</title><rect x="1169" y="260" width="5" height="15" fill="rgb(220,179,7)"/><text x="1172.00" y="270.50"></text></g><g><title>0x7f9f3780650f (?) (1 samples, 0.44%)</title><rect x="1169" y="276" width="5" height="15" fill="rgb(217,155,1)"/><text x="1172.00" y="286.50"></text></g><g><title>0x7f9f3780cd6c (?) (1 samples, 0.44%)</title><rect x="1169" y="292" width="5" height="15" fill="rgb(226,180,53)"/><text x="1172.00" y="302.50"></text></g><g><title>0x7f9f40d2dab9 (?) (1 samples, 0.44%)</title><rect x="1169" y="308" width="5" height="15" fill="rgb(228,147,34)"/><text x="1172.00" y="318.50"></text></g><g><title>0x7f9f40d2eeab (?) (1 samples, 0.44%)</title><rect x="1169" y="324" width="5" height="15" fill="rgb(214,7,24)"/><text x="1172.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:68) (1 samples, 0.44%)</title><rect x="1174" y="52" width="5" height="15" fill="rgb(210,47,25)"/><text x="1177.00" y="62.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:67) (1 samples, 0.44%)</title><rect x="1174" y="68" width="5" height="15" fill="rgb(249,189,3)"/><text x="1177.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:37) (1 samples, 0.44%)</title><rect x="1174" y="84" width="5" height="15" fill="rgb(238,85,40)"/><text x="1177.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py:31) (1 samples, 0.44%)</title><rect x="1174" y="100" width="5" height="15" fill="rgb(232,220,34)"/><text x="1177.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.44%)</title><rect x="1174" y="116" width="5" height="15" fill="rgb(250,220,46)"/><text x="1177.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.44%)</title><rect x="1174" y="132" width="5" height="15" fill="rgb(239,6,7)"/><text x="1177.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.44%)</title><rect x="1174" y="148" width="5" height="15" fill="rgb(233,21,22)"/><text x="1177.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (1 samples, 0.44%)</title><rect x="1174" y="164" width="5" height="15" fill="rgb(212,73,10)"/><text x="1177.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (1 samples, 0.44%)</title><rect x="1174" y="180" width="5" height="15" fill="rgb(223,165,26)"/><text x="1177.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:136) (1 samples, 0.44%)</title><rect x="1174" y="196" width="5" height="15" fill="rgb(211,152,9)"/><text x="1177.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="212" width="5" height="15" fill="rgb(221,162,15)"/><text x="1177.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="228" width="5" height="15" fill="rgb(247,185,33)"/><text x="1177.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="244" width="5" height="15" fill="rgb(229,220,0)"/><text x="1177.00" y="254.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(253,108,11)"/><text x="1177.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="276" width="5" height="15" fill="rgb(247,99,23)"/><text x="1177.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="292" width="5" height="15" fill="rgb(225,29,40)"/><text x="1177.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="308" width="5" height="15" fill="rgb(233,24,33)"/><text x="1177.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="324" width="5" height="15" fill="rgb(226,191,12)"/><text x="1177.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="340" width="5" height="15" fill="rgb(245,163,49)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="1174" y="356" width="5" height="15" fill="rgb(241,31,41)"/><text x="1177.00" y="366.50"></text></g><g><title>all (228 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,55,43)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (2 samples, 0.88%)</title><rect x="1179" y="52" width="11" height="15" fill="rgb(213,86,18)"/><text x="1182.00" y="62.50"></text></g></g></svg>