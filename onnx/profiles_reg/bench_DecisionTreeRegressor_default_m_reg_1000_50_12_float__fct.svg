<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>__enter__ (warnings.py) (1 samples, 0.16%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(228,135,16)"/><text x="13.00" y="942.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(206,46,2)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(232,118,50)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(253,172,22)"/><text x="14.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(230,122,6)"/><text x="14.00" y="990.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(250,219,22)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(206,215,49)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(217,36,52)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(227,202,49)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.16%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(219,110,48)"/><text x="16.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.16%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(225,74,42)"/><text x="16.00" y="958.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.62%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(221,72,5)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.62%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(244,107,28)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(213,181,34)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(229,37,16)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(218,151,53)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(214,174,21)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(228,152,11)"/><text x="18.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(216,27,14)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.78%)</title><rect x="10" y="292" width="9" height="15" fill="rgb(247,149,53)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="308" width="9" height="15" fill="rgb(217,41,42)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="324" width="9" height="15" fill="rgb(253,208,46)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="340" width="9" height="15" fill="rgb(216,177,46)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="10" y="356" width="9" height="15" fill="rgb(221,93,28)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="372" width="9" height="15" fill="rgb(231,205,23)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.78%)</title><rect x="10" y="388" width="9" height="15" fill="rgb(224,126,41)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="404" width="9" height="15" fill="rgb(232,12,45)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="420" width="9" height="15" fill="rgb(232,98,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="436" width="9" height="15" fill="rgb(221,166,17)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="10" y="452" width="9" height="15" fill="rgb(247,195,11)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="468" width="9" height="15" fill="rgb(240,163,46)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.78%)</title><rect x="10" y="484" width="9" height="15" fill="rgb(248,44,1)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="500" width="9" height="15" fill="rgb(234,27,48)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="516" width="9" height="15" fill="rgb(223,143,24)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="532" width="9" height="15" fill="rgb(209,98,38)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="10" y="548" width="9" height="15" fill="rgb(225,18,7)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="564" width="9" height="15" fill="rgb(217,189,54)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.78%)</title><rect x="10" y="580" width="9" height="15" fill="rgb(230,130,11)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="596" width="9" height="15" fill="rgb(218,81,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="612" width="9" height="15" fill="rgb(240,101,50)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="628" width="9" height="15" fill="rgb(220,206,50)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="644" width="9" height="15" fill="rgb(231,91,2)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="660" width="9" height="15" fill="rgb(233,75,42)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="676" width="9" height="15" fill="rgb(250,219,42)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="10" y="692" width="9" height="15" fill="rgb(221,137,36)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="708" width="9" height="15" fill="rgb(234,43,53)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.78%)</title><rect x="10" y="724" width="9" height="15" fill="rgb(238,46,40)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="740" width="9" height="15" fill="rgb(224,30,20)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="756" width="9" height="15" fill="rgb(237,17,17)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="772" width="9" height="15" fill="rgb(213,65,45)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="10" y="788" width="9" height="15" fill="rgb(218,26,24)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="10" y="804" width="9" height="15" fill="rgb(250,108,21)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.78%)</title><rect x="10" y="820" width="9" height="15" fill="rgb(219,188,36)"/><text x="13.00" y="830.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(237,223,6)"/><text x="20.00" y="846.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(240,203,26)"/><text x="20.00" y="862.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(239,123,39)"/><text x="20.00" y="878.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(218,83,31)"/><text x="20.00" y="894.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(250,154,49)"/><text x="20.00" y="910.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(226,90,30)"/><text x="20.00" y="926.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(211,32,10)"/><text x="20.00" y="942.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(237,184,19)"/><text x="20.00" y="958.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(223,175,3)"/><text x="20.00" y="974.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(220,142,6)"/><text x="20.00" y="990.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.16%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(222,203,21)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(215,210,50)"/><text x="22.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(246,146,17)"/><text x="22.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(254,165,29)"/><text x="22.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(224,54,30)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(251,110,43)"/><text x="22.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(215,116,41)"/><text x="22.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(223,38,39)"/><text x="22.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(216,18,17)"/><text x="22.00" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(241,171,38)"/><text x="22.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(219,206,24)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(207,35,17)"/><text x="22.00" y="750.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(217,6,54)"/><text x="22.00" y="766.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(210,12,50)"/><text x="22.00" y="782.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(217,63,32)"/><text x="22.00" y="798.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(227,44,25)"/><text x="22.00" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(235,126,52)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(243,200,4)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(243,208,24)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(246,199,34)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.09%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(252,139,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(239,63,7)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.31%)</title><rect x="19" y="292" width="3" height="15" fill="rgb(229,153,29)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="308" width="3" height="15" fill="rgb(226,192,6)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="324" width="3" height="15" fill="rgb(237,1,48)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="340" width="3" height="15" fill="rgb(219,106,7)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="19" y="356" width="3" height="15" fill="rgb(211,102,18)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="372" width="3" height="15" fill="rgb(205,223,8)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.31%)</title><rect x="19" y="388" width="3" height="15" fill="rgb(237,122,22)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="404" width="3" height="15" fill="rgb(208,43,0)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="420" width="3" height="15" fill="rgb(245,136,15)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="436" width="3" height="15" fill="rgb(214,192,45)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="19" y="452" width="3" height="15" fill="rgb(227,24,2)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="468" width="3" height="15" fill="rgb(227,182,39)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.31%)</title><rect x="19" y="484" width="3" height="15" fill="rgb(237,87,4)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="500" width="3" height="15" fill="rgb(207,84,27)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="516" width="3" height="15" fill="rgb(239,163,14)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="532" width="3" height="15" fill="rgb(238,65,22)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="19" y="548" width="3" height="15" fill="rgb(212,187,6)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="19" y="564" width="3" height="15" fill="rgb(208,68,38)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.16%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(218,8,31)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(244,79,8)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(250,118,35)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(222,70,4)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(206,164,19)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(211,73,10)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(242,92,36)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(213,102,45)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(249,47,4)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(208,148,3)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(209,83,32)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(208,73,0)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.16%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(212,147,33)"/><text x="24.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(217,135,17)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(215,52,48)"/><text x="24.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(225,11,7)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(248,125,40)"/><text x="24.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(211,227,13)"/><text x="24.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(242,5,36)"/><text x="24.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(244,170,17)"/><text x="24.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.16%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(237,32,53)"/><text x="24.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(248,3,42)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(218,67,28)"/><text x="24.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(254,32,44)"/><text x="24.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(254,41,38)"/><text x="24.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(210,218,52)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(214,169,20)"/><text x="24.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(224,159,19)"/><text x="24.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(244,154,51)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(245,63,20)"/><text x="24.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(219,71,17)"/><text x="24.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(242,219,1)"/><text x="24.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(209,78,21)"/><text x="24.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(247,89,4)"/><text x="24.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(235,41,32)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(234,70,28)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(211,170,19)"/><text x="24.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(211,91,50)"/><text x="24.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(217,27,10)"/><text x="24.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(211,229,30)"/><text x="24.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.16%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(220,90,24)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(246,25,40)"/><text x="24.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(207,72,30)"/><text x="24.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(210,202,11)"/><text x="24.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(220,16,5)"/><text x="24.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(241,135,35)"/><text x="24.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(247,203,39)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(215,162,15)"/><text x="24.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(229,84,48)"/><text x="24.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(224,84,11)"/><text x="24.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(216,102,6)"/><text x="24.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(230,130,0)"/><text x="24.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.16%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(230,33,36)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1428" width="1" height="15" fill="rgb(208,164,48)"/><text x="24.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1444" width="1" height="15" fill="rgb(223,229,23)"/><text x="24.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1460" width="1" height="15" fill="rgb(215,174,54)"/><text x="24.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1476" width="1" height="15" fill="rgb(252,199,39)"/><text x="24.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(254,55,31)"/><text x="24.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(241,205,10)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(208,32,34)"/><text x="24.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(207,97,6)"/><text x="24.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(247,34,17)"/><text x="24.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(233,177,15)"/><text x="24.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(254,189,34)"/><text x="24.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/matfuncs.py) (1 samples, 0.16%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(249,139,53)"/><text x="24.00" y="1614.50"></text></g><g><title>_ExpmPadeHelper (scipy/sparse/linalg/matfuncs.py) (1 samples, 0.16%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(222,69,4)"/><text x="24.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1124" width="4" height="15" fill="rgb(217,67,50)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1140" width="4" height="15" fill="rgb(227,100,14)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1156" width="4" height="15" fill="rgb(232,13,54)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1172" width="4" height="15" fill="rgb(236,4,38)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1188" width="4" height="15" fill="rgb(245,16,46)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.31%)</title><rect x="22" y="1204" width="4" height="15" fill="rgb(205,138,23)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1220" width="4" height="15" fill="rgb(239,70,4)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1236" width="4" height="15" fill="rgb(217,179,36)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1252" width="4" height="15" fill="rgb(221,183,53)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1268" width="4" height="15" fill="rgb(251,116,4)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1284" width="4" height="15" fill="rgb(221,131,11)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.31%)</title><rect x="22" y="1300" width="4" height="15" fill="rgb(208,112,34)"/><text x="25.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.31%)</title><rect x="22" y="1316" width="4" height="15" fill="rgb(242,206,7)"/><text x="25.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.31%)</title><rect x="22" y="1332" width="4" height="15" fill="rgb(221,63,28)"/><text x="25.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.31%)</title><rect x="22" y="1348" width="4" height="15" fill="rgb(230,136,15)"/><text x="25.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.31%)</title><rect x="22" y="1364" width="4" height="15" fill="rgb(219,152,3)"/><text x="25.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.31%)</title><rect x="22" y="1380" width="4" height="15" fill="rgb(243,19,7)"/><text x="25.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (2 samples, 0.31%)</title><rect x="22" y="1396" width="4" height="15" fill="rgb(205,224,4)"/><text x="25.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.31%)</title><rect x="22" y="1412" width="4" height="15" fill="rgb(228,86,54)"/><text x="25.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.31%)</title><rect x="22" y="1428" width="4" height="15" fill="rgb(250,0,47)"/><text x="25.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(249,137,11)"/><text x="27.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(216,134,20)"/><text x="27.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(216,169,49)"/><text x="27.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(209,6,32)"/><text x="27.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(239,141,49)"/><text x="27.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(209,151,45)"/><text x="27.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(210,90,50)"/><text x="27.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(235,89,52)"/><text x="27.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(214,139,24)"/><text x="27.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(237,16,9)"/><text x="27.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(206,108,32)"/><text x="27.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(232,6,40)"/><text x="27.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(235,87,45)"/><text x="29.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(226,104,4)"/><text x="29.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.16%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(225,13,13)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(206,226,39)"/><text x="29.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(240,201,30)"/><text x="29.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(212,221,14)"/><text x="29.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(250,133,23)"/><text x="29.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1444" width="2" height="15" fill="rgb(208,195,40)"/><text x="29.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="26" y="1460" width="2" height="15" fill="rgb(239,30,8)"/><text x="29.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="26" y="1476" width="2" height="15" fill="rgb(224,128,4)"/><text x="29.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(233,83,19)"/><text x="29.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(206,146,37)"/><text x="29.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.16%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(229,94,51)"/><text x="29.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(205,126,39)"/><text x="29.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(231,123,22)"/><text x="29.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.16%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(205,114,17)"/><text x="29.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="26" y="1588" width="2" height="15" fill="rgb(210,211,2)"/><text x="29.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(219,163,35)"/><text x="29.00" y="1614.50"></text></g><g><title>0x7f66a25020e9 (?) (1 samples, 0.16%)</title><rect x="26" y="1620" width="2" height="15" fill="rgb(225,89,45)"/><text x="29.00" y="1630.50"></text></g><g><title>0x7f66a24e5aeb (?) (1 samples, 0.16%)</title><rect x="26" y="1636" width="2" height="15" fill="rgb(237,130,28)"/><text x="29.00" y="1646.50"></text></g><g><title>0x7f66a213b985 (?) (1 samples, 0.16%)</title><rect x="26" y="1652" width="2" height="15" fill="rgb(253,222,23)"/><text x="29.00" y="1662.50"></text></g><g><title>0x7f66a213b82c (?) (1 samples, 0.16%)</title><rect x="26" y="1668" width="2" height="15" fill="rgb(248,204,25)"/><text x="29.00" y="1678.50"></text></g><g><title>0x7f66a2637f66 (?) (1 samples, 0.16%)</title><rect x="26" y="1684" width="2" height="15" fill="rgb(244,144,0)"/><text x="29.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="692" width="8" height="15" fill="rgb(216,63,44)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="708" width="8" height="15" fill="rgb(236,227,53)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="724" width="8" height="15" fill="rgb(214,163,28)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="22" y="740" width="8" height="15" fill="rgb(236,188,11)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="756" width="8" height="15" fill="rgb(214,110,2)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.62%)</title><rect x="22" y="772" width="8" height="15" fill="rgb(222,0,7)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="788" width="8" height="15" fill="rgb(210,185,28)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="804" width="8" height="15" fill="rgb(244,175,0)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="820" width="8" height="15" fill="rgb(213,102,48)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="22" y="836" width="8" height="15" fill="rgb(210,185,15)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="852" width="8" height="15" fill="rgb(207,19,28)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.62%)</title><rect x="22" y="868" width="8" height="15" fill="rgb(230,153,17)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="884" width="8" height="15" fill="rgb(246,87,3)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="900" width="8" height="15" fill="rgb(244,22,17)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="916" width="8" height="15" fill="rgb(207,146,9)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="932" width="8" height="15" fill="rgb(233,135,20)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="948" width="8" height="15" fill="rgb(234,108,42)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="964" width="8" height="15" fill="rgb(228,195,38)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="22" y="980" width="8" height="15" fill="rgb(221,189,45)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="996" width="8" height="15" fill="rgb(218,143,40)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.62%)</title><rect x="22" y="1012" width="8" height="15" fill="rgb(222,36,29)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="1028" width="8" height="15" fill="rgb(214,174,47)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="1044" width="8" height="15" fill="rgb(233,185,0)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="1060" width="8" height="15" fill="rgb(215,50,16)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="22" y="1076" width="8" height="15" fill="rgb(228,70,4)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="22" y="1092" width="8" height="15" fill="rgb(221,222,17)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.62%)</title><rect x="22" y="1108" width="8" height="15" fill="rgb(211,22,52)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(220,2,34)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(226,159,17)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(247,127,14)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(236,157,12)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(213,141,38)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(217,14,51)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(225,205,34)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.31%)</title><rect x="26" y="1236" width="4" height="15" fill="rgb(217,136,1)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1252" width="4" height="15" fill="rgb(219,158,15)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1268" width="4" height="15" fill="rgb(217,92,18)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1284" width="4" height="15" fill="rgb(206,74,29)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1300" width="4" height="15" fill="rgb(211,93,10)"/><text x="29.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="26" y="1316" width="4" height="15" fill="rgb(217,87,45)"/><text x="29.00" y="1326.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(253,105,22)"/><text x="31.00" y="1342.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(214,210,14)"/><text x="31.00" y="1358.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(253,186,31)"/><text x="31.00" y="1374.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(252,156,8)"/><text x="31.00" y="1390.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(251,58,1)"/><text x="31.00" y="1406.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(210,10,29)"/><text x="31.00" y="1422.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.78%)</title><rect x="22" y="436" width="10" height="15" fill="rgb(251,132,50)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="452" width="10" height="15" fill="rgb(253,2,40)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="468" width="10" height="15" fill="rgb(246,50,10)"/><text x="25.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="484" width="10" height="15" fill="rgb(233,172,11)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="500" width="10" height="15" fill="rgb(251,201,16)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="516" width="10" height="15" fill="rgb(231,201,45)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="532" width="10" height="15" fill="rgb(252,205,7)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="22" y="548" width="10" height="15" fill="rgb(235,224,38)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="564" width="10" height="15" fill="rgb(228,183,47)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.78%)</title><rect x="22" y="580" width="10" height="15" fill="rgb(214,53,45)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="596" width="10" height="15" fill="rgb(214,70,31)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="612" width="10" height="15" fill="rgb(214,33,48)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="628" width="10" height="15" fill="rgb(244,112,51)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.78%)</title><rect x="22" y="644" width="10" height="15" fill="rgb(206,215,46)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.78%)</title><rect x="22" y="660" width="10" height="15" fill="rgb(249,154,33)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.78%)</title><rect x="22" y="676" width="10" height="15" fill="rgb(221,202,47)"/><text x="25.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="692" width="2" height="15" fill="rgb(247,80,11)"/><text x="33.00" y="702.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.16%)</title><rect x="32" y="532" width="1" height="15" fill="rgb(219,151,5)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="548" width="1" height="15" fill="rgb(207,173,48)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="564" width="1" height="15" fill="rgb(252,41,29)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="580" width="1" height="15" fill="rgb(238,18,19)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="596" width="1" height="15" fill="rgb(242,112,24)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="612" width="1" height="15" fill="rgb(246,187,24)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.16%)</title><rect x="32" y="628" width="1" height="15" fill="rgb(248,121,53)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="644" width="1" height="15" fill="rgb(221,21,36)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="660" width="1" height="15" fill="rgb(221,170,19)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="676" width="1" height="15" fill="rgb(251,178,18)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="692" width="1" height="15" fill="rgb(235,71,54)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="708" width="1" height="15" fill="rgb(207,212,18)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.16%)</title><rect x="32" y="724" width="1" height="15" fill="rgb(206,118,14)"/><text x="35.00" y="734.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="32" y="740" width="1" height="15" fill="rgb(214,94,28)"/><text x="35.00" y="750.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="32" y="756" width="1" height="15" fill="rgb(209,89,5)"/><text x="35.00" y="766.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="32" y="772" width="1" height="15" fill="rgb(247,126,34)"/><text x="35.00" y="782.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="32" y="788" width="1" height="15" fill="rgb(221,53,43)"/><text x="35.00" y="798.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="32" y="804" width="1" height="15" fill="rgb(235,85,34)"/><text x="35.00" y="814.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="32" y="820" width="1" height="15" fill="rgb(232,111,27)"/><text x="35.00" y="830.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.09%)</title><rect x="22" y="244" width="13" height="15" fill="rgb(239,94,47)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="260" width="13" height="15" fill="rgb(251,18,6)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="276" width="13" height="15" fill="rgb(213,225,51)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="292" width="13" height="15" fill="rgb(226,137,52)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.09%)</title><rect x="22" y="308" width="13" height="15" fill="rgb(213,69,45)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="324" width="13" height="15" fill="rgb(247,173,12)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 1.09%)</title><rect x="22" y="340" width="13" height="15" fill="rgb(210,163,4)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="356" width="13" height="15" fill="rgb(226,64,22)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="372" width="13" height="15" fill="rgb(219,161,27)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="388" width="13" height="15" fill="rgb(213,144,6)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.09%)</title><rect x="22" y="404" width="13" height="15" fill="rgb(236,121,28)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="22" y="420" width="13" height="15" fill="rgb(248,58,6)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (2 samples, 0.31%)</title><rect x="32" y="436" width="3" height="15" fill="rgb(237,85,53)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="452" width="3" height="15" fill="rgb(230,169,37)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="468" width="3" height="15" fill="rgb(205,51,6)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="484" width="3" height="15" fill="rgb(206,195,35)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="32" y="500" width="3" height="15" fill="rgb(215,35,30)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="32" y="516" width="3" height="15" fill="rgb(210,115,48)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.16%)</title><rect x="33" y="532" width="2" height="15" fill="rgb(210,202,49)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="548" width="2" height="15" fill="rgb(234,79,32)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="564" width="2" height="15" fill="rgb(239,210,53)"/><text x="36.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="580" width="2" height="15" fill="rgb(241,77,37)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="596" width="2" height="15" fill="rgb(233,91,48)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="612" width="2" height="15" fill="rgb(238,75,35)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="628" width="2" height="15" fill="rgb(250,10,31)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="644" width="2" height="15" fill="rgb(248,173,49)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="660" width="2" height="15" fill="rgb(225,133,6)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.16%)</title><rect x="33" y="676" width="2" height="15" fill="rgb(233,171,1)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="692" width="2" height="15" fill="rgb(211,191,48)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="708" width="2" height="15" fill="rgb(247,52,22)"/><text x="36.00" y="718.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="724" width="2" height="15" fill="rgb(230,85,35)"/><text x="36.00" y="734.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="740" width="2" height="15" fill="rgb(205,159,16)"/><text x="36.00" y="750.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="756" width="2" height="15" fill="rgb(250,207,24)"/><text x="36.00" y="766.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(251,83,54)"/><text x="36.00" y="782.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(215,171,39)"/><text x="36.00" y="798.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(219,7,28)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="68" width="27" height="15" fill="rgb(213,218,22)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="84" width="27" height="15" fill="rgb(247,49,23)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="100" width="27" height="15" fill="rgb(224,11,1)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.34%)</title><rect x="10" y="116" width="27" height="15" fill="rgb(215,83,22)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="132" width="27" height="15" fill="rgb(229,185,46)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (15 samples, 2.34%)</title><rect x="10" y="148" width="27" height="15" fill="rgb(244,208,13)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="164" width="27" height="15" fill="rgb(246,124,17)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.34%)</title><rect x="10" y="180" width="27" height="15" fill="rgb(238,166,17)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.25%)</title><rect x="22" y="196" width="15" height="15" fill="rgb(246,197,32)"/><text x="25.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.25%)</title><rect x="22" y="212" width="15" height="15" fill="rgb(215,222,50)"/><text x="25.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.25%)</title><rect x="22" y="228" width="15" height="15" fill="rgb(208,103,9)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.16%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(246,72,34)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(246,174,4)"/><text x="38.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(211,120,19)"/><text x="38.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(225,177,33)"/><text x="38.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(228,66,52)"/><text x="38.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="324" width="2" height="15" fill="rgb(242,138,39)"/><text x="38.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.16%)</title><rect x="35" y="340" width="2" height="15" fill="rgb(228,10,32)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="356" width="2" height="15" fill="rgb(215,73,19)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="372" width="2" height="15" fill="rgb(237,50,20)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="388" width="2" height="15" fill="rgb(253,24,5)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="404" width="2" height="15" fill="rgb(253,6,22)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="420" width="2" height="15" fill="rgb(238,128,17)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.16%)</title><rect x="35" y="436" width="2" height="15" fill="rgb(228,94,34)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="452" width="2" height="15" fill="rgb(214,77,53)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="468" width="2" height="15" fill="rgb(210,19,34)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="484" width="2" height="15" fill="rgb(223,162,41)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="500" width="2" height="15" fill="rgb(221,141,20)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="516" width="2" height="15" fill="rgb(238,154,11)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.16%)</title><rect x="35" y="532" width="2" height="15" fill="rgb(252,218,46)"/><text x="38.00" y="542.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="548" width="2" height="15" fill="rgb(240,52,9)"/><text x="38.00" y="558.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="564" width="2" height="15" fill="rgb(231,144,53)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.16%)</title><rect x="54" y="180" width="2" height="15" fill="rgb(208,10,48)"/><text x="57.00" y="190.50"></text></g><g><title>0x7f6672504ff9 (?) (1 samples, 0.16%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(232,155,26)"/><text x="60.00" y="222.50"></text></g><g><title>0x7f66724ffef6 (?) (1 samples, 0.16%)</title><rect x="57" y="228" width="2" height="15" fill="rgb(245,30,20)"/><text x="60.00" y="238.50"></text></g><g><title>0x7f66724f4962 (?) (1 samples, 0.16%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(246,25,18)"/><text x="60.00" y="254.50"></text></g><g><title>0x7f66725287a7 (?) (1 samples, 0.16%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(216,73,18)"/><text x="60.00" y="270.50"></text></g><g><title>0x7f6672528379 (?) (1 samples, 0.16%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(213,106,34)"/><text x="60.00" y="286.50"></text></g><g><title>0x7f66729868b8 (?) (1 samples, 0.16%)</title><rect x="57" y="292" width="2" height="15" fill="rgb(222,229,10)"/><text x="60.00" y="302.50"></text></g><g><title>0x7f6672984c7f (?) (1 samples, 0.16%)</title><rect x="57" y="308" width="2" height="15" fill="rgb(251,117,10)"/><text x="60.00" y="318.50"></text></g><g><title>0x7f667299799c (?) (1 samples, 0.16%)</title><rect x="57" y="324" width="2" height="15" fill="rgb(234,19,37)"/><text x="60.00" y="334.50"></text></g><g><title>0x7f66726bedc2 (?) (1 samples, 0.16%)</title><rect x="57" y="340" width="2" height="15" fill="rgb(245,77,19)"/><text x="60.00" y="350.50"></text></g><g><title>0x7f66726be65b (?) (1 samples, 0.16%)</title><rect x="57" y="356" width="2" height="15" fill="rgb(239,130,44)"/><text x="60.00" y="366.50"></text></g><g><title>0x7f66726be317 (?) (1 samples, 0.16%)</title><rect x="57" y="372" width="2" height="15" fill="rgb(235,183,48)"/><text x="60.00" y="382.50"></text></g><g><title>0x7f66726be1e5 (?) (1 samples, 0.16%)</title><rect x="57" y="388" width="2" height="15" fill="rgb(222,77,6)"/><text x="60.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="57" y="404" width="2" height="15" fill="rgb(237,16,17)"/><text x="60.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="63" y="244" width="2" height="15" fill="rgb(236,53,2)"/><text x="66.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 0.62%)</title><rect x="59" y="212" width="8" height="15" fill="rgb(221,176,50)"/><text x="62.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="63" y="228" width="4" height="15" fill="rgb(250,98,29)"/><text x="66.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="65" y="244" width="2" height="15" fill="rgb(234,26,51)"/><text x="68.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="65" y="260" width="2" height="15" fill="rgb(235,78,40)"/><text x="68.00" y="270.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.16%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(205,159,21)"/><text x="70.00" y="222.50"></text></g><g><title>0x7fff38c95bce ([vdso]) (1 samples, 0.16%)</title><rect x="67" y="228" width="2" height="15" fill="rgb(236,122,34)"/><text x="70.00" y="238.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="70" y="228" width="4" height="15" fill="rgb(249,110,53)"/><text x="73.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="78" y="260" width="2" height="15" fill="rgb(223,51,43)"/><text x="81.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="81" y="292" width="4" height="15" fill="rgb(252,48,40)"/><text x="84.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="81" y="308" width="4" height="15" fill="rgb(227,183,46)"/><text x="84.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="81" y="324" width="4" height="15" fill="rgb(242,26,54)"/><text x="84.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="85" y="292" width="2" height="15" fill="rgb(249,111,45)"/><text x="88.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="85" y="308" width="2" height="15" fill="rgb(227,52,46)"/><text x="88.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="85" y="324" width="2" height="15" fill="rgb(230,221,29)"/><text x="88.00" y="334.50"></text></g><g><title>0x7f66b2448344 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="85" y="340" width="2" height="15" fill="rgb(230,73,15)"/><text x="88.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="87" y="292" width="5" height="15" fill="rgb(244,214,37)"/><text x="90.00" y="302.50"></text></g><g><title>onnxruntime::logging::LoggingManager::CreateLogger (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="91" y="308" width="1" height="15" fill="rgb(215,36,52)"/><text x="94.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="92" y="308" width="2" height="15" fill="rgb(252,116,54)"/><text x="95.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="92" y="292" width="4" height="15" fill="rgb(239,100,47)"/><text x="95.00" y="302.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="94" y="308" width="2" height="15" fill="rgb(238,81,38)"/><text x="97.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="102" y="356" width="2" height="15" fill="rgb(248,140,36)"/><text x="105.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(215,18,15)"/><text x="105.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="102" y="388" width="2" height="15" fill="rgb(238,28,18)"/><text x="105.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.78%)</title><rect x="96" y="340" width="9" height="15" fill="rgb(236,88,16)"/><text x="99.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="104" y="356" width="1" height="15" fill="rgb(253,105,23)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="105" y="340" width="2" height="15" fill="rgb(238,104,38)"/><text x="108.00" y="350.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="105" y="356" width="2" height="15" fill="rgb(231,58,41)"/><text x="108.00" y="366.50"></text></g><g><title>0x7f66a1f137a0 (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="194" y="356" width="4" height="15" fill="rgb(206,188,32)"/><text x="197.00" y="366.50"></text></g><g><title>0x7f66b2446906 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="198" y="356" width="1" height="15" fill="rgb(235,209,13)"/><text x="201.00" y="366.50"></text></g><g><title>0x7f66b2446908 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="199" y="356" width="2" height="15" fill="rgb(246,9,4)"/><text x="202.00" y="366.50"></text></g><g><title>0x7f66b244690e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="201" y="356" width="2" height="15" fill="rgb(242,90,28)"/><text x="204.00" y="366.50"></text></g><g><title>0x7f66b2446922 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="203" y="356" width="4" height="15" fill="rgb(207,82,8)"/><text x="206.00" y="366.50"></text></g><g><title>0x7f66b2446929 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="207" y="356" width="2" height="15" fill="rgb(245,213,8)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f66b2446938 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="209" y="356" width="1" height="15" fill="rgb(227,161,54)"/><text x="212.00" y="366.50"></text></g><g><title>0x7f66b2446945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(234,227,41)"/><text x="213.00" y="366.50"></text></g><g><title>0x7f66b2446957 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="212" y="356" width="2" height="15" fill="rgb(243,92,50)"/><text x="215.00" y="366.50"></text></g><g><title>0x7f66b2446961 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="214" y="356" width="2" height="15" fill="rgb(221,59,44)"/><text x="217.00" y="366.50"></text></g><g><title>0x7f66b2446965 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(225,148,35)"/><text x="219.00" y="366.50"></text></g><g><title>0x7f66b244696a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="218" y="356" width="2" height="15" fill="rgb(246,26,16)"/><text x="221.00" y="366.50"></text></g><g><title>0x7f66b2446971 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="220" y="356" width="2" height="15" fill="rgb(220,23,2)"/><text x="223.00" y="366.50"></text></g><g><title>0x7f66b244697c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(234,63,48)"/><text x="225.00" y="366.50"></text></g><g><title>0x7f66b2446982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="223" y="356" width="2" height="15" fill="rgb(253,161,33)"/><text x="226.00" y="366.50"></text></g><g><title>0x7f66b2446991 (libc-2.29.so) (7 samples, 1.09%)</title><rect x="225" y="356" width="13" height="15" fill="rgb(221,90,11)"/><text x="228.00" y="366.50"></text></g><g><title>0x7f66b2446998 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="238" y="356" width="4" height="15" fill="rgb(232,96,31)"/><text x="241.00" y="366.50"></text></g><g><title>0x7f66b2446a41 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="242" y="356" width="2" height="15" fill="rgb(232,109,16)"/><text x="245.00" y="366.50"></text></g><g><title>0x7f66b2446a4d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="244" y="356" width="2" height="15" fill="rgb(228,43,1)"/><text x="247.00" y="366.50"></text></g><g><title>0x7f66b2446a53 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="246" y="356" width="1" height="15" fill="rgb(252,201,24)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f66b2446bc0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="247" y="356" width="2" height="15" fill="rgb(254,38,36)"/><text x="250.00" y="366.50"></text></g><g><title>0x7f66b2446bd8 (libc-2.29.so) (4 samples, 0.62%)</title><rect x="249" y="356" width="8" height="15" fill="rgb(225,84,50)"/><text x="252.00" y="366.50"></text></g><g><title>0x7f66b2467144 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="257" y="356" width="1" height="15" fill="rgb(215,223,45)"/><text x="260.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (10 samples, 1.56%)</title><rect x="258" y="356" width="19" height="15" fill="rgb(220,23,48)"/><text x="261.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="277" y="452" width="2" height="15" fill="rgb(223,195,16)"/><text x="280.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="277" y="468" width="2" height="15" fill="rgb(253,211,26)"/><text x="280.00" y="478.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="356" width="5" height="15" fill="rgb(241,115,45)"/><text x="280.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="372" width="5" height="15" fill="rgb(239,66,48)"/><text x="280.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="388" width="5" height="15" fill="rgb(210,215,42)"/><text x="280.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="404" width="5" height="15" fill="rgb(254,74,52)"/><text x="280.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="420" width="5" height="15" fill="rgb(211,77,54)"/><text x="280.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="277" y="436" width="5" height="15" fill="rgb(206,154,7)"/><text x="280.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="279" y="452" width="3" height="15" fill="rgb(214,114,18)"/><text x="282.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="279" y="468" width="3" height="15" fill="rgb(238,142,20)"/><text x="282.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="279" y="484" width="3" height="15" fill="rgb(209,125,23)"/><text x="282.00" y="494.50"></text></g><g><title>0x7f66724cb930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="522" y="388" width="2" height="15" fill="rgb(227,175,16)"/><text x="525.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.72%)</title><rect x="524" y="388" width="20" height="15" fill="rgb(245,36,10)"/><text x="527.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.56%)</title><rect x="526" y="404" width="18" height="15" fill="rgb(228,142,39)"/><text x="529.00" y="414.50"></text></g><g><title>0x7f66b2467120 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="579" y="420" width="4" height="15" fill="rgb(246,186,40)"/><text x="582.00" y="430.50"></text></g><g><title>0x7f66b246712f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="583" y="420" width="2" height="15" fill="rgb(253,118,34)"/><text x="586.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 3.44%)</title><rect x="566" y="404" width="41" height="15" fill="rgb(210,73,17)"/><text x="569.00" y="414.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.88%)</title><rect x="585" y="420" width="22" height="15" fill="rgb(229,68,51)"/><text x="588.00" y="430.50">o..</text></g><g><title>malloc (libc-2.29.so) (12 samples, 1.88%)</title><rect x="585" y="436" width="22" height="15" fill="rgb(247,87,39)"/><text x="588.00" y="446.50">m..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (239 samples, 37.34%)</title><rect x="282" y="356" width="441" height="15" fill="rgb(232,92,38)"/><text x="285.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNo..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (127 samples, 19.84%)</title><rect x="489" y="372" width="234" height="15" fill="rgb(225,196,15)"/><text x="492.00" y="382.50">std::_Hashtable&lt;long, std::pair..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (97 samples, 15.16%)</title><rect x="544" y="388" width="179" height="15" fill="rgb(211,188,9)"/><text x="547.00" y="398.50">std::_Hashtable&lt;long, s..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (63 samples, 9.84%)</title><rect x="607" y="404" width="116" height="15" fill="rgb(247,225,53)"/><text x="610.00" y="414.50">std::__detail:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (29 samples, 4.53%)</title><rect x="670" y="420" width="53" height="15" fill="rgb(242,163,43)"/><text x="673.00" y="430.50">std::..</text></g><g><title>0x7f66b2466d97 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="749" y="372" width="4" height="15" fill="rgb(232,54,48)"/><text x="752.00" y="382.50"></text></g><g><title>0x7f66b2466dc3 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="753" y="372" width="1" height="15" fill="rgb(254,62,15)"/><text x="756.00" y="382.50"></text></g><g><title>0x7f66b2466dc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="754" y="372" width="2" height="15" fill="rgb(242,123,9)"/><text x="757.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.28%)</title><rect x="723" y="356" width="39" height="15" fill="rgb(246,194,2)"/><text x="726.00" y="366.50">onn..</text></g><g><title>0x7f66b2466dcb (libc-2.29.so) (3 samples, 0.47%)</title><rect x="756" y="372" width="6" height="15" fill="rgb(213,212,43)"/><text x="759.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (3 samples, 0.47%)</title><rect x="762" y="356" width="5" height="15" fill="rgb(225,48,45)"/><text x="765.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 2.97%)</title><rect x="767" y="356" width="35" height="15" fill="rgb(251,162,4)"/><text x="770.00" y="366.50">st..</text></g><g><title>0x7f66a1f12d50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="821" y="388" width="2" height="15" fill="rgb(222,43,3)"/><text x="824.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (412 samples, 64.38%)</title><rect x="81" y="276" width="760" height="15" fill="rgb(221,211,51)"/><text x="84.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (404 samples, 63.12%)</title><rect x="96" y="292" width="745" height="15" fill="rgb(250,116,43)"/><text x="99.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (404 samples, 63.12%)</title><rect x="96" y="308" width="745" height="15" fill="rgb(215,33,24)"/><text x="99.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (404 samples, 63.12%)</title><rect x="96" y="324" width="745" height="15" fill="rgb(211,165,29)"/><text x="99.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (398 samples, 62.19%)</title><rect x="107" y="340" width="734" height="15" fill="rgb(234,55,14)"/><text x="110.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.s..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 3.28%)</title><rect x="802" y="356" width="39" height="15" fill="rgb(251,75,48)"/><text x="805.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.88%)</title><rect x="819" y="372" width="22" height="15" fill="rgb(242,218,0)"/><text x="822.00" y="382.50">o..</text></g><g><title>malloc (libc-2.29.so) (10 samples, 1.56%)</title><rect x="823" y="388" width="18" height="15" fill="rgb(217,61,45)"/><text x="826.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (414 samples, 64.69%)</title><rect x="80" y="260" width="763" height="15" fill="rgb(227,137,20)"/><text x="83.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="841" y="276" width="2" height="15" fill="rgb(230,65,30)"/><text x="844.00" y="286.50"></text></g><g><title>0x7f66724cb930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="841" y="292" width="2" height="15" fill="rgb(216,213,7)"/><text x="844.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="843" y="260" width="5" height="15" fill="rgb(249,0,25)"/><text x="846.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="845" y="276" width="3" height="15" fill="rgb(230,64,30)"/><text x="848.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="847" y="292" width="1" height="15" fill="rgb(232,57,36)"/><text x="850.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="847" y="308" width="1" height="15" fill="rgb(206,179,27)"/><text x="850.00" y="318.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="847" y="324" width="1" height="15" fill="rgb(228,229,15)"/><text x="850.00" y="334.50"></text></g><g><title>0x7f66b2466d50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="848" y="276" width="2" height="15" fill="rgb(234,130,22)"/><text x="851.00" y="286.50"></text></g><g><title>0x7f66b2466d94 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="850" y="276" width="2" height="15" fill="rgb(222,69,1)"/><text x="853.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="852" y="308" width="2" height="15" fill="rgb(220,217,52)"/><text x="855.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.31%)</title><rect x="854" y="308" width="4" height="15" fill="rgb(253,115,53)"/><text x="857.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.31%)</title><rect x="854" y="324" width="4" height="15" fill="rgb(220,141,35)"/><text x="857.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.16%)</title><rect x="856" y="340" width="2" height="15" fill="rgb(231,171,8)"/><text x="859.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="856" y="356" width="2" height="15" fill="rgb(253,139,29)"/><text x="859.00" y="366.50"></text></g><g><title>0x7f66b2448028 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="856" y="372" width="2" height="15" fill="rgb(233,113,30)"/><text x="859.00" y="382.50"></text></g><g><title>0x7f66b2445b9b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="856" y="388" width="2" height="15" fill="rgb(213,46,40)"/><text x="859.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.16%)</title><rect x="858" y="308" width="1" height="15" fill="rgb(235,81,14)"/><text x="861.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c) (5 samples, 0.78%)</title><rect x="852" y="276" width="9" height="15" fill="rgb(223,6,25)"/><text x="855.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (5 samples, 0.78%)</title><rect x="852" y="292" width="9" height="15" fill="rgb(247,214,51)"/><text x="855.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.16%)</title><rect x="859" y="308" width="2" height="15" fill="rgb(242,56,19)"/><text x="862.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.41%)</title><rect x="848" y="260" width="17" height="15" fill="rgb(206,65,20)"/><text x="851.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="861" y="276" width="4" height="15" fill="rgb(209,217,25)"/><text x="864.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (431 samples, 67.34%)</title><rect x="74" y="244" width="795" height="15" fill="rgb(207,42,45)"/><text x="77.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="865" y="260" width="4" height="15" fill="rgb(239,130,49)"/><text x="868.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="865" y="276" width="4" height="15" fill="rgb(235,155,44)"/><text x="868.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="865" y="292" width="4" height="15" fill="rgb(227,19,32)"/><text x="868.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="867" y="308" width="2" height="15" fill="rgb(224,129,12)"/><text x="870.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="867" y="324" width="2" height="15" fill="rgb(214,211,54)"/><text x="870.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="867" y="340" width="2" height="15" fill="rgb(211,56,41)"/><text x="870.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="867" y="356" width="2" height="15" fill="rgb(225,61,41)"/><text x="870.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="867" y="372" width="2" height="15" fill="rgb(238,161,8)"/><text x="870.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="869" y="244" width="2" height="15" fill="rgb(251,139,15)"/><text x="872.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="869" y="260" width="2" height="15" fill="rgb(247,128,13)"/><text x="872.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="869" y="276" width="2" height="15" fill="rgb(221,160,20)"/><text x="872.00" y="286.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (453 samples, 70.78%)</title><rect x="37" y="100" width="835" height="15" fill="rgb(215,38,3)"/><text x="40.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (451 samples, 70.47%)</title><rect x="41" y="116" width="831" height="15" fill="rgb(211,31,29)"/><text x="44.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (450 samples, 70.31%)</title><rect x="43" y="132" width="829" height="15" fill="rgb(209,218,25)"/><text x="46.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (448 samples, 70.00%)</title><rect x="46" y="148" width="826" height="15" fill="rgb(246,190,52)"/><text x="49.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (445 samples, 69.53%)</title><rect x="52" y="164" width="820" height="15" fill="rgb(226,146,28)"/><text x="55.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (443 samples, 69.22%)</title><rect x="56" y="180" width="816" height="15" fill="rgb(223,21,43)"/><text x="59.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (443 samples, 69.22%)</title><rect x="56" y="196" width="816" height="15" fill="rgb(222,199,47)"/><text x="59.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (436 samples, 68.12%)</title><rect x="69" y="212" width="803" height="15" fill="rgb(237,24,44)"/><text x="72.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (433 samples, 67.66%)</title><rect x="74" y="228" width="798" height="15" fill="rgb(239,133,22)"/><text x="77.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="871" y="244" width="1" height="15" fill="rgb(209,131,18)"/><text x="874.00" y="254.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (455 samples, 71.09%)</title><rect x="37" y="68" width="839" height="15" fill="rgb(231,221,29)"/><text x="40.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (455 samples, 71.09%)</title><rect x="37" y="84" width="839" height="15" fill="rgb(245,46,7)"/><text x="40.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="872" y="100" width="4" height="15" fill="rgb(253,116,25)"/><text x="875.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="872" y="116" width="4" height="15" fill="rgb(251,53,30)"/><text x="875.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.31%)</title><rect x="872" y="132" width="4" height="15" fill="rgb(226,107,33)"/><text x="875.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="872" y="148" width="4" height="15" fill="rgb(236,126,30)"/><text x="875.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="872" y="164" width="4" height="15" fill="rgb(240,118,18)"/><text x="875.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.31%)</title><rect x="872" y="180" width="4" height="15" fill="rgb(248,90,45)"/><text x="875.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="872" y="196" width="4" height="15" fill="rgb(223,85,20)"/><text x="875.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="872" y="212" width="4" height="15" fill="rgb(236,30,29)"/><text x="875.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (2 samples, 0.31%)</title><rect x="872" y="228" width="4" height="15" fill="rgb(208,122,29)"/><text x="875.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="874" y="244" width="2" height="15" fill="rgb(207,195,7)"/><text x="877.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.16%)</title><rect x="874" y="260" width="2" height="15" fill="rgb(238,0,46)"/><text x="877.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.16%)</title><rect x="874" y="276" width="2" height="15" fill="rgb(210,27,35)"/><text x="877.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.16%)</title><rect x="874" y="292" width="2" height="15" fill="rgb(251,85,14)"/><text x="877.00" y="302.50"></text></g><g><title>0x7f6672f5f54f (?) (1 samples, 0.16%)</title><rect x="878" y="244" width="2" height="15" fill="rgb(220,74,47)"/><text x="881.00" y="254.50"></text></g><g><title>0x7f6672f6565e (?) (1 samples, 0.16%)</title><rect x="878" y="260" width="2" height="15" fill="rgb(207,222,24)"/><text x="881.00" y="270.50"></text></g><g><title>0x7f6672f6550f (?) (1 samples, 0.16%)</title><rect x="878" y="276" width="2" height="15" fill="rgb(242,59,46)"/><text x="881.00" y="286.50"></text></g><g><title>0x7f6672f6bd6c (?) (1 samples, 0.16%)</title><rect x="878" y="292" width="2" height="15" fill="rgb(231,94,13)"/><text x="881.00" y="302.50"></text></g><g><title>0x7f667c44cab9 (?) (1 samples, 0.16%)</title><rect x="878" y="308" width="2" height="15" fill="rgb(240,140,11)"/><text x="881.00" y="318.50"></text></g><g><title>0x7f667c44deab (?) (1 samples, 0.16%)</title><rect x="878" y="324" width="2" height="15" fill="rgb(252,49,9)"/><text x="881.00" y="334.50"></text></g><g><title>0x7f667c44dea0 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="880" y="484" width="2" height="15" fill="rgb(233,51,2)"/><text x="883.00" y="494.50"></text></g><g><title>0x7f667c44dea9 (libgomp.so.1.0.0) (17 samples, 2.66%)</title><rect x="882" y="484" width="31" height="15" fill="rgb(244,169,18)"/><text x="885.00" y="494.50">0x..</text></g><g><title>0x7f667c44deab (libgomp.so.1.0.0) (25 samples, 3.91%)</title><rect x="913" y="484" width="46" height="15" fill="rgb(223,25,15)"/><text x="916.00" y="494.50">0x7f..</text></g><g><title>0x7f667c44cab9 (libgomp.so.1.0.0) (56 samples, 8.75%)</title><rect x="880" y="468" width="103" height="15" fill="rgb(229,157,29)"/><text x="883.00" y="478.50">0x7f667c44ca..</text></g><g><title>0x7f667c44dead (libgomp.so.1.0.0) (13 samples, 2.03%)</title><rect x="959" y="484" width="24" height="15" fill="rgb(217,28,54)"/><text x="962.00" y="494.50">0..</text></g><g><title>0x7f667c44dcf9 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="983" y="500" width="2" height="15" fill="rgb(220,206,8)"/><text x="986.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (60 samples, 9.38%)</title><rect x="876" y="68" width="111" height="15" fill="rgb(238,23,33)"/><text x="879.00" y="78.50">profile_pyrt ..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (60 samples, 9.38%)</title><rect x="876" y="84" width="111" height="15" fill="rgb(208,207,5)"/><text x="879.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (60 samples, 9.38%)</title><rect x="876" y="100" width="111" height="15" fill="rgb(249,127,50)"/><text x="879.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (60 samples, 9.38%)</title><rect x="876" y="116" width="111" height="15" fill="rgb(225,3,44)"/><text x="879.00" y="126.50">time_predict ..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (60 samples, 9.38%)</title><rect x="876" y="132" width="111" height="15" fill="rgb(241,112,33)"/><text x="879.00" y="142.50">&lt;lambda&gt; (mlp..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (60 samples, 9.38%)</title><rect x="876" y="148" width="111" height="15" fill="rgb(219,163,33)"/><text x="879.00" y="158.50">run (mlprodic..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (60 samples, 9.38%)</title><rect x="876" y="164" width="111" height="15" fill="rgb(215,41,1)"/><text x="879.00" y="174.50">_run_sequence..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (60 samples, 9.38%)</title><rect x="876" y="180" width="111" height="15" fill="rgb(234,153,10)"/><text x="879.00" y="190.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (59 samples, 9.22%)</title><rect x="878" y="196" width="109" height="15" fill="rgb(235,116,9)"/><text x="881.00" y="206.50">run (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (59 samples, 9.22%)</title><rect x="878" y="212" width="109" height="15" fill="rgb(252,49,37)"/><text x="881.00" y="222.50">run (mlprodic..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (59 samples, 9.22%)</title><rect x="878" y="228" width="109" height="15" fill="rgb(244,167,27)"/><text x="881.00" y="238.50">_run (mlprodi..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (58 samples, 9.06%)</title><rect x="880" y="244" width="107" height="15" fill="rgb(245,124,31)"/><text x="883.00" y="254.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (58 samples, 9.06%)</title><rect x="880" y="260" width="107" height="15" fill="rgb(224,172,37)"/><text x="883.00" y="270.50">void pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (58 samples, 9.06%)</title><rect x="880" y="276" width="107" height="15" fill="rgb(250,45,5)"/><text x="883.00" y="286.50">void pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (58 samples, 9.06%)</title><rect x="880" y="292" width="107" height="15" fill="rgb(234,56,39)"/><text x="883.00" y="302.50">pybind11::det..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (58 samples, 9.06%)</title><rect x="880" y="308" width="107" height="15" fill="rgb(212,108,10)"/><text x="883.00" y="318.50">pybind11::det..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (58 samples, 9.06%)</title><rect x="880" y="324" width="107" height="15" fill="rgb(249,171,11)"/><text x="883.00" y="334.50">pybind11::cpp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (58 samples, 9.06%)</title><rect x="880" y="340" width="107" height="15" fill="rgb(211,63,40)"/><text x="883.00" y="350.50">pybind11::arr..</text></g><g><title>pybind11::array::~array (numpy.h) (58 samples, 9.06%)</title><rect x="880" y="356" width="107" height="15" fill="rgb(240,58,41)"/><text x="883.00" y="366.50">pybind11::arr..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (58 samples, 9.06%)</title><rect x="880" y="372" width="107" height="15" fill="rgb(231,166,40)"/><text x="883.00" y="382.50">pybind11::buf..</text></g><g><title>pybind11::object::~object (pytypes.h) (58 samples, 9.06%)</title><rect x="880" y="388" width="107" height="15" fill="rgb(251,102,45)"/><text x="883.00" y="398.50">pybind11::obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (58 samples, 9.06%)</title><rect x="880" y="404" width="107" height="15" fill="rgb(207,112,4)"/><text x="883.00" y="414.50">pybind11::han..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (58 samples, 9.06%)</title><rect x="880" y="420" width="107" height="15" fill="rgb(253,105,48)"/><text x="883.00" y="430.50">RuntimeTreeEn..</text></g><g><title>pybind11::array::size (numpy.h) (58 samples, 9.06%)</title><rect x="880" y="436" width="107" height="15" fill="rgb(211,141,7)"/><text x="883.00" y="446.50">pybind11::arr..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (58 samples, 9.06%)</title><rect x="880" y="452" width="107" height="15" fill="rgb(249,149,17)"/><text x="883.00" y="462.50">std::accumula..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.31%)</title><rect x="983" y="468" width="4" height="15" fill="rgb(214,45,21)"/><text x="986.00" y="478.50"></text></g><g><title>0x7f667c44bdaa (libgomp.so.1.0.0) (2 samples, 0.31%)</title><rect x="983" y="484" width="4" height="15" fill="rgb(247,158,1)"/><text x="986.00" y="494.50"></text></g><g><title>0x7f667c44dcfd (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="985" y="500" width="2" height="15" fill="rgb(235,176,25)"/><text x="988.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="989" y="116" width="1" height="15" fill="rgb(249,56,26)"/><text x="992.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="989" y="132" width="1" height="15" fill="rgb(215,99,16)"/><text x="992.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="148" width="1" height="15" fill="rgb(222,167,44)"/><text x="992.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="989" y="164" width="1" height="15" fill="rgb(247,99,13)"/><text x="992.00" y="174.50"></text></g><g><title>0x7f668cac0225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1011" y="212" width="2" height="15" fill="rgb(228,8,0)"/><text x="1014.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.16%)</title><rect x="1011" y="228" width="2" height="15" fill="rgb(253,200,34)"/><text x="1014.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.16%)</title><rect x="1011" y="244" width="2" height="15" fill="rgb(250,62,2)"/><text x="1014.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.16%)</title><rect x="1016" y="308" width="2" height="15" fill="rgb(229,227,7)"/><text x="1019.00" y="318.50"></text></g><g><title>0x7f668caa4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.62%)</title><rect x="1013" y="228" width="7" height="15" fill="rgb(252,91,18)"/><text x="1016.00" y="238.50"></text></g><g><title>0x7f668caa4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.62%)</title><rect x="1013" y="244" width="7" height="15" fill="rgb(216,195,45)"/><text x="1016.00" y="254.50"></text></g><g><title>0x7f668ca9a2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1014" y="260" width="6" height="15" fill="rgb(240,87,54)"/><text x="1017.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.47%)</title><rect x="1014" y="276" width="6" height="15" fill="rgb(230,173,26)"/><text x="1017.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.47%)</title><rect x="1014" y="292" width="6" height="15" fill="rgb(245,52,37)"/><text x="1017.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.16%)</title><rect x="1018" y="308" width="2" height="15" fill="rgb(213,13,32)"/><text x="1021.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.16%)</title><rect x="1018" y="324" width="2" height="15" fill="rgb(229,184,39)"/><text x="1021.00" y="334.50"></text></g><g><title>0x7f668caa4e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1020" y="228" width="2" height="15" fill="rgb(227,65,4)"/><text x="1023.00" y="238.50"></text></g><g><title>0x7f668ca97f4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1020" y="244" width="2" height="15" fill="rgb(236,18,12)"/><text x="1023.00" y="254.50"></text></g><g><title>0x7f668cac02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.94%)</title><rect x="1013" y="212" width="11" height="15" fill="rgb(240,128,19)"/><text x="1016.00" y="222.50"></text></g><g><title>0x7f668caa4ee0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1022" y="228" width="2" height="15" fill="rgb(207,94,36)"/><text x="1025.00" y="238.50"></text></g><g><title>0x7f668cac03f4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1024" y="212" width="1" height="15" fill="rgb(230,3,39)"/><text x="1027.00" y="222.50"></text></g><g><title>0x7f668cac04a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1025" y="212" width="2" height="15" fill="rgb(239,58,8)"/><text x="1028.00" y="222.50"></text></g><g><title>0x7f66b245c73b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1027" y="244" width="2" height="15" fill="rgb(208,160,53)"/><text x="1030.00" y="254.50"></text></g><g><title>0x7f66b2447dd2 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1031" y="340" width="2" height="15" fill="rgb(205,65,44)"/><text x="1034.00" y="350.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.47%)</title><rect x="1029" y="324" width="6" height="15" fill="rgb(239,75,4)"/><text x="1032.00" y="334.50"></text></g><g><title>0x7f66b2448510 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1033" y="340" width="2" height="15" fill="rgb(224,129,34)"/><text x="1036.00" y="350.50"></text></g><g><title>0x7f668cac0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.78%)</title><rect x="1027" y="212" width="9" height="15" fill="rgb(233,154,31)"/><text x="1030.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 0.78%)</title><rect x="1027" y="228" width="9" height="15" fill="rgb(207,222,35)"/><text x="1030.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (4 samples, 0.62%)</title><rect x="1029" y="244" width="7" height="15" fill="rgb(254,45,8)"/><text x="1032.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (4 samples, 0.62%)</title><rect x="1029" y="260" width="7" height="15" fill="rgb(225,166,31)"/><text x="1032.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (4 samples, 0.62%)</title><rect x="1029" y="276" width="7" height="15" fill="rgb(231,204,26)"/><text x="1032.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (4 samples, 0.62%)</title><rect x="1029" y="292" width="7" height="15" fill="rgb(239,14,3)"/><text x="1032.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (4 samples, 0.62%)</title><rect x="1029" y="308" width="7" height="15" fill="rgb(246,199,36)"/><text x="1032.00" y="318.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="1035" y="324" width="1" height="15" fill="rgb(223,221,52)"/><text x="1038.00" y="334.50"></text></g><g><title>0x7f668cac06aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.09%)</title><rect x="1036" y="212" width="13" height="15" fill="rgb(236,135,22)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7f668cac06ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1049" y="212" width="2" height="15" fill="rgb(236,115,20)"/><text x="1052.00" y="222.50"></text></g><g><title>0x7f668cac06b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1051" y="212" width="4" height="15" fill="rgb(215,127,17)"/><text x="1054.00" y="222.50"></text></g><g><title>0x7f668cac06c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1055" y="212" width="2" height="15" fill="rgb(243,206,34)"/><text x="1058.00" y="222.50"></text></g><g><title>0x7f668cac06d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1057" y="212" width="2" height="15" fill="rgb(219,100,21)"/><text x="1060.00" y="222.50"></text></g><g><title>0x7f668cac1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 4.38%)</title><rect x="1011" y="196" width="51" height="15" fill="rgb(241,183,9)"/><text x="1014.00" y="206.50">0x7f6..</text></g><g><title>0x7f668cac0c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1059" y="212" width="3" height="15" fill="rgb(217,117,29)"/><text x="1062.00" y="222.50"></text></g><g><title>0x7f668ca98529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1059" y="228" width="3" height="15" fill="rgb(248,205,21)"/><text x="1062.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.31%)</title><rect x="1059" y="244" width="3" height="15" fill="rgb(222,82,54)"/><text x="1062.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.31%)</title><rect x="1059" y="260" width="3" height="15" fill="rgb(215,37,20)"/><text x="1062.00" y="270.50"></text></g><g><title>0x7f668cab1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 4.53%)</title><rect x="1011" y="180" width="53" height="15" fill="rgb(214,135,7)"/><text x="1014.00" y="190.50">0x7f6..</text></g><g><title>0x7f668cac1540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1062" y="196" width="2" height="15" fill="rgb(228,174,26)"/><text x="1065.00" y="206.50"></text></g><g><title>0x7f668ca962f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1062" y="212" width="2" height="15" fill="rgb(234,90,36)"/><text x="1065.00" y="222.50"></text></g><g><title>0x7f668ca95570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1062" y="228" width="2" height="15" fill="rgb(248,36,9)"/><text x="1065.00" y="238.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.16%)</title><rect x="1066" y="212" width="2" height="15" fill="rgb(250,75,42)"/><text x="1069.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (6 samples, 0.94%)</title><rect x="1068" y="228" width="11" height="15" fill="rgb(212,174,5)"/><text x="1071.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="1077" y="244" width="2" height="15" fill="rgb(215,154,22)"/><text x="1080.00" y="254.50"></text></g><g><title>0x7f668cab205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.41%)</title><rect x="1064" y="180" width="17" height="15" fill="rgb(232,181,25)"/><text x="1067.00" y="190.50"></text></g><g><title>array_take (methods.c) (9 samples, 1.41%)</title><rect x="1064" y="196" width="17" height="15" fill="rgb(207,7,52)"/><text x="1067.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (7 samples, 1.09%)</title><rect x="1068" y="212" width="13" height="15" fill="rgb(253,141,21)"/><text x="1071.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1079" y="228" width="2" height="15" fill="rgb(211,59,14)"/><text x="1082.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1079" y="244" width="2" height="15" fill="rgb(218,176,14)"/><text x="1082.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1079" y="260" width="2" height="15" fill="rgb(245,140,22)"/><text x="1082.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.16%)</title><rect x="1079" y="276" width="2" height="15" fill="rgb(240,145,24)"/><text x="1082.00" y="286.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.16%)</title><rect x="1079" y="292" width="2" height="15" fill="rgb(211,57,24)"/><text x="1082.00" y="302.50"></text></g><g><title>0x7f668cab213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1081" y="180" width="3" height="15" fill="rgb(250,212,17)"/><text x="1084.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1083" y="196" width="1" height="15" fill="rgb(234,61,21)"/><text x="1086.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="1083" y="212" width="1" height="15" fill="rgb(242,3,35)"/><text x="1086.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="1083" y="228" width="1" height="15" fill="rgb(247,61,43)"/><text x="1086.00" y="238.50"></text></g><g><title>0x7f668cab218f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1084" y="180" width="2" height="15" fill="rgb(253,58,4)"/><text x="1087.00" y="190.50"></text></g><g><title>0x7f668cab2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (42 samples, 6.56%)</title><rect x="1011" y="164" width="77" height="15" fill="rgb(254,156,2)"/><text x="1014.00" y="174.50">0x7f668c..</text></g><g><title>0x7f668cab2328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1086" y="180" width="2" height="15" fill="rgb(218,39,20)"/><text x="1089.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.16%)</title><rect x="1086" y="196" width="2" height="15" fill="rgb(228,71,15)"/><text x="1089.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.16%)</title><rect x="1086" y="212" width="2" height="15" fill="rgb(228,55,44)"/><text x="1089.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.16%)</title><rect x="1086" y="228" width="2" height="15" fill="rgb(241,225,5)"/><text x="1089.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.16%)</title><rect x="1103" y="196" width="2" height="15" fill="rgb(205,29,1)"/><text x="1106.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.31%)</title><rect x="1105" y="196" width="3" height="15" fill="rgb(232,205,19)"/><text x="1108.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.16%)</title><rect x="1108" y="196" width="2" height="15" fill="rgb(239,187,50)"/><text x="1111.00" y="206.50"></text></g><g><title>0x7f66b245ce6d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1116" y="212" width="2" height="15" fill="rgb(254,59,19)"/><text x="1119.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="1118" y="212" width="7" height="15" fill="rgb(251,227,2)"/><text x="1121.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.31%)</title><rect x="1125" y="212" width="4" height="15" fill="rgb(225,147,20)"/><text x="1128.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (12 samples, 1.88%)</title><rect x="1110" y="196" width="22" height="15" fill="rgb(252,62,41)"/><text x="1113.00" y="206.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="1129" y="212" width="3" height="15" fill="rgb(223,9,32)"/><text x="1132.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (2 samples, 0.31%)</title><rect x="1132" y="196" width="4" height="15" fill="rgb(228,111,3)"/><text x="1135.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (5 samples, 0.78%)</title><rect x="1136" y="196" width="9" height="15" fill="rgb(246,200,12)"/><text x="1139.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1143" y="212" width="2" height="15" fill="rgb(209,215,50)"/><text x="1146.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1143" y="228" width="2" height="15" fill="rgb(237,184,7)"/><text x="1146.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.31%)</title><rect x="1145" y="196" width="4" height="15" fill="rgb(229,195,46)"/><text x="1148.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.16%)</title><rect x="1147" y="212" width="2" height="15" fill="rgb(236,134,13)"/><text x="1150.00" y="222.50"></text></g><g><title>simplefilter (warnings.py) (3 samples, 0.47%)</title><rect x="1149" y="196" width="5" height="15" fill="rgb(219,98,11)"/><text x="1152.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.31%)</title><rect x="1151" y="212" width="3" height="15" fill="rgb(230,34,46)"/><text x="1154.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (37 samples, 5.78%)</title><rect x="1088" y="164" width="68" height="15" fill="rgb(247,223,24)"/><text x="1091.00" y="174.50">_valida..</text></g><g><title>check_array (sklearn/utils/validation.py) (37 samples, 5.78%)</title><rect x="1088" y="180" width="68" height="15" fill="rgb(242,128,18)"/><text x="1091.00" y="190.50">check_a..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.16%)</title><rect x="1154" y="196" width="2" height="15" fill="rgb(228,213,46)"/><text x="1157.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.16%)</title><rect x="1175" y="196" width="2" height="15" fill="rgb(250,217,31)"/><text x="1178.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 1.25%)</title><rect x="1167" y="180" width="15" height="15" fill="rgb(236,200,10)"/><text x="1170.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.47%)</title><rect x="1177" y="196" width="5" height="15" fill="rgb(209,167,27)"/><text x="1180.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (102 samples, 15.94%)</title><rect x="998" y="132" width="188" height="15" fill="rgb(242,123,38)"/><text x="1001.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>predict (sklearn/tree/_classes.py) (102 samples, 15.94%)</title><rect x="998" y="148" width="188" height="15" fill="rgb(252,78,40)"/><text x="1001.00" y="158.50">predict (sklearn/tree/_c..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 2.50%)</title><rect x="1156" y="164" width="30" height="15" fill="rgb(210,27,51)"/><text x="1159.00" y="174.50">ch..</text></g><g><title>isclass (inspect.py) (2 samples, 0.31%)</title><rect x="1182" y="180" width="4" height="15" fill="rgb(249,17,26)"/><text x="1185.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.16%)</title><rect x="1186" y="132" width="2" height="15" fill="rgb(223,41,38)"/><text x="1189.00" y="142.50"></text></g><g><title>all (640 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,2,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (640 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(220,33,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (110 samples, 17.19%)</title><rect x="987" y="68" width="203" height="15" fill="rgb(220,71,37)"/><text x="990.00" y="78.50">profile_skl (bench_Decisio..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (110 samples, 17.19%)</title><rect x="987" y="84" width="203" height="15" fill="rgb(217,121,34)"/><text x="990.00" y="94.50">setup_profile (bench_Decis..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (110 samples, 17.19%)</title><rect x="987" y="100" width="203" height="15" fill="rgb(254,103,27)"/><text x="990.00" y="110.50">profile (bench_DecisionTre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (108 samples, 16.88%)</title><rect x="990" y="116" width="200" height="15" fill="rgb(235,173,23)"/><text x="993.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(221,150,41)"/><text x="1191.00" y="142.50"></text></g></g></svg>