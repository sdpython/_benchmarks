<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2230" onload="init(evt)" viewBox="0 0 1200 2230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2230" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2213.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2213.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.31%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(248,55,51)"/><text x="13.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(238,52,7)"/><text x="14.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.16%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(222,177,17)"/><text x="14.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(234,146,38)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(235,182,22)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(230,112,20)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(239,19,46)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(227,26,2)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(224,138,14)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.47%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(245,184,35)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(206,113,44)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(249,117,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(252,49,47)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(229,229,9)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(237,120,5)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.47%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(230,125,16)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(248,163,18)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(210,151,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(237,26,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(227,121,5)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(225,29,22)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.47%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(249,165,9)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(238,84,8)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(253,13,44)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(230,44,50)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(244,175,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(251,19,6)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(235,112,48)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(213,180,50)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(250,11,42)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(232,195,35)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(212,222,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(213,157,25)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(210,200,25)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(248,107,1)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(217,64,31)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(253,158,52)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(248,145,8)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(245,147,27)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(229,124,31)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(250,148,26)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(239,173,50)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(254,190,28)"/><text x="16.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.16%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(236,125,21)"/><text x="16.00" y="942.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(232,150,27)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(212,194,21)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(215,26,12)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(218,128,9)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(231,157,31)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(252,26,13)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(211,171,45)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py) (1 samples, 0.16%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(250,134,44)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(209,2,4)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(233,94,32)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(240,134,39)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(207,104,26)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(217,122,41)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/compressed.py) (1 samples, 0.16%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(243,54,27)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(229,63,23)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(245,37,26)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(236,72,14)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(238,36,22)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(235,122,7)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_util.py) (1 samples, 0.16%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(217,73,18)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(252,210,36)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(253,37,26)"/><text x="18.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(245,161,4)"/><text x="18.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(242,45,19)"/><text x="18.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(250,49,9)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;module&gt; (multiprocessing/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(243,108,38)"/><text x="18.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(240,32,11)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="996" width="2" height="15" fill="rgb(223,190,47)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1012" width="2" height="15" fill="rgb(208,122,31)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1028" width="2" height="15" fill="rgb(231,204,13)"/><text x="18.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1044" width="2" height="15" fill="rgb(239,215,22)"/><text x="18.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="1060" width="2" height="15" fill="rgb(236,74,13)"/><text x="18.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="1076" width="2" height="15" fill="rgb(249,185,48)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (multiprocessing/context.py) (1 samples, 0.16%)</title><rect x="15" y="1092" width="2" height="15" fill="rgb(249,154,26)"/><text x="18.00" y="1102.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(232,133,6)"/><text x="20.00" y="606.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(214,113,14)"/><text x="20.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="15" y="500" width="6" height="15" fill="rgb(207,113,30)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="15" y="516" width="6" height="15" fill="rgb(215,51,44)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="15" y="532" width="6" height="15" fill="rgb(252,19,32)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="15" y="548" width="6" height="15" fill="rgb(253,48,50)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="15" y="564" width="6" height="15" fill="rgb(222,203,38)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.31%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(215,154,50)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(229,125,51)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(215,195,41)"/><text x="22.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(248,104,49)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(237,167,13)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(208,218,31)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(210,118,53)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(217,125,31)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(236,159,48)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.16%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(227,155,28)"/><text x="22.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(250,31,48)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(222,122,50)"/><text x="22.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(240,119,14)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(234,42,39)"/><text x="22.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(206,54,18)"/><text x="22.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(250,62,36)"/><text x="22.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(254,126,47)"/><text x="22.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.16%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(242,59,46)"/><text x="22.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(217,10,21)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(207,140,46)"/><text x="22.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(232,50,42)"/><text x="22.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(225,162,37)"/><text x="22.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(239,16,43)"/><text x="22.00" y="942.50"></text></g><g><title>&lt;module&gt; (distutils/fancy_getopt.py) (1 samples, 0.16%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(222,125,39)"/><text x="22.00" y="958.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(236,5,47)"/><text x="22.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(230,125,10)"/><text x="22.00" y="990.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(218,72,22)"/><text x="22.00" y="1006.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(243,205,4)"/><text x="22.00" y="1022.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(238,101,37)"/><text x="22.00" y="1038.50"></text></g><g><title>tell (sre_parse.py) (1 samples, 0.16%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(245,91,46)"/><text x="22.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(207,206,11)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(231,56,53)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(221,97,35)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(246,85,46)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.09%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(227,145,32)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.09%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(232,77,15)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 0.62%)</title><rect x="15" y="292" width="7" height="15" fill="rgb(220,172,41)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="308" width="7" height="15" fill="rgb(252,128,8)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="324" width="7" height="15" fill="rgb(213,24,33)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="340" width="7" height="15" fill="rgb(251,48,47)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="15" y="356" width="7" height="15" fill="rgb(216,22,48)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="372" width="7" height="15" fill="rgb(233,3,5)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 0.62%)</title><rect x="15" y="388" width="7" height="15" fill="rgb(231,54,23)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="404" width="7" height="15" fill="rgb(205,117,53)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="420" width="7" height="15" fill="rgb(229,154,41)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="436" width="7" height="15" fill="rgb(245,111,13)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="15" y="452" width="7" height="15" fill="rgb(248,145,7)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="15" y="468" width="7" height="15" fill="rgb(228,88,19)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 0.62%)</title><rect x="15" y="484" width="7" height="15" fill="rgb(212,17,14)"/><text x="18.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="500" width="1" height="15" fill="rgb(242,9,4)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="516" width="1" height="15" fill="rgb(245,211,28)"/><text x="24.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="532" width="1" height="15" fill="rgb(219,38,49)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="548" width="1" height="15" fill="rgb(211,211,19)"/><text x="24.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="564" width="1" height="15" fill="rgb(235,50,20)"/><text x="24.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="580" width="1" height="15" fill="rgb(253,194,7)"/><text x="24.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="596" width="1" height="15" fill="rgb(236,83,10)"/><text x="24.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.16%)</title><rect x="21" y="612" width="1" height="15" fill="rgb(230,23,14)"/><text x="24.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="628" width="1" height="15" fill="rgb(205,53,32)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="644" width="1" height="15" fill="rgb(233,25,30)"/><text x="24.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="660" width="1" height="15" fill="rgb(236,20,30)"/><text x="24.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="676" width="1" height="15" fill="rgb(239,8,2)"/><text x="24.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="692" width="1" height="15" fill="rgb(241,136,48)"/><text x="24.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="708" width="1" height="15" fill="rgb(219,144,17)"/><text x="24.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(216,99,16)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(225,10,12)"/><text x="24.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(244,189,7)"/><text x="24.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(228,117,37)"/><text x="24.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(205,159,1)"/><text x="24.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.16%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(244,59,25)"/><text x="24.00" y="814.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(229,26,25)"/><text x="24.00" y="830.50"></text></g><g><title>0x7f2c6b994700 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(208,181,28)"/><text x="24.00" y="846.50"></text></g><g><title>0x7f2c6b991afe (libc-2.29.so) (1 samples, 0.16%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(219,95,39)"/><text x="24.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(206,90,50)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(221,148,44)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(214,113,7)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(240,44,13)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(233,29,11)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.16%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(234,220,42)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(229,56,7)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(225,67,44)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(246,66,52)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(226,93,30)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(238,79,33)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.16%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(235,17,39)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(250,115,24)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(223,55,43)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(214,109,45)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(220,83,4)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(208,30,2)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_selection/__init__.py) (1 samples, 0.16%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(207,65,32)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(211,170,12)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(230,20,32)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(206,7,9)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(253,129,47)"/><text x="25.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(254,39,36)"/><text x="25.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(215,115,10)"/><text x="25.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="484" width="4" height="15" fill="rgb(209,39,36)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="500" width="4" height="15" fill="rgb(254,209,27)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="516" width="4" height="15" fill="rgb(223,152,48)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="532" width="4" height="15" fill="rgb(227,112,15)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="548" width="4" height="15" fill="rgb(238,229,19)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="564" width="4" height="15" fill="rgb(226,190,42)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="580" width="4" height="15" fill="rgb(217,169,44)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="596" width="4" height="15" fill="rgb(241,220,15)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="612" width="4" height="15" fill="rgb(214,52,3)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="628" width="4" height="15" fill="rgb(209,79,29)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="644" width="4" height="15" fill="rgb(232,125,23)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="660" width="4" height="15" fill="rgb(211,71,6)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.31%)</title><rect x="22" y="676" width="4" height="15" fill="rgb(240,212,26)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="692" width="4" height="15" fill="rgb(229,67,32)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="708" width="4" height="15" fill="rgb(233,136,44)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="724" width="4" height="15" fill="rgb(207,163,6)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="740" width="4" height="15" fill="rgb(228,174,48)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="756" width="4" height="15" fill="rgb(249,12,49)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="772" width="4" height="15" fill="rgb(239,135,10)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="788" width="4" height="15" fill="rgb(249,227,10)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="804" width="4" height="15" fill="rgb(231,31,50)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="820" width="4" height="15" fill="rgb(214,99,31)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="836" width="4" height="15" fill="rgb(221,80,22)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="852" width="4" height="15" fill="rgb(227,61,3)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.31%)</title><rect x="22" y="868" width="4" height="15" fill="rgb(229,67,27)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="884" width="4" height="15" fill="rgb(210,18,43)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="900" width="4" height="15" fill="rgb(215,119,2)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="916" width="4" height="15" fill="rgb(220,148,12)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="932" width="4" height="15" fill="rgb(224,160,39)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="948" width="4" height="15" fill="rgb(225,5,49)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="964" width="4" height="15" fill="rgb(223,129,14)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="980" width="4" height="15" fill="rgb(214,174,36)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="996" width="4" height="15" fill="rgb(208,48,7)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.31%)</title><rect x="22" y="1012" width="4" height="15" fill="rgb(226,212,37)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1028" width="4" height="15" fill="rgb(216,167,18)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1044" width="4" height="15" fill="rgb(227,19,13)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1060" width="4" height="15" fill="rgb(212,121,31)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="22" y="1076" width="4" height="15" fill="rgb(253,43,38)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="22" y="1092" width="4" height="15" fill="rgb(246,156,31)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.31%)</title><rect x="22" y="1108" width="4" height="15" fill="rgb(207,57,38)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(217,95,22)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(227,143,21)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(254,135,41)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(215,150,36)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(231,6,25)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(208,48,16)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(233,95,50)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(254,180,29)"/><text x="27.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(213,30,14)"/><text x="27.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(249,79,36)"/><text x="27.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(238,156,19)"/><text x="27.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(211,153,39)"/><text x="27.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(250,60,40)"/><text x="27.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(208,119,17)"/><text x="27.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(242,119,9)"/><text x="27.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.16%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(251,51,21)"/><text x="27.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(230,94,50)"/><text x="27.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(242,165,33)"/><text x="27.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(213,72,2)"/><text x="27.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(253,185,31)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(239,147,12)"/><text x="27.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.16%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(254,143,7)"/><text x="27.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(222,28,8)"/><text x="27.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(251,8,19)"/><text x="27.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(238,114,11)"/><text x="27.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(218,193,43)"/><text x="27.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(241,171,25)"/><text x="27.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(252,215,8)"/><text x="27.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(243,228,8)"/><text x="27.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(219,87,29)"/><text x="27.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(211,131,20)"/><text x="27.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(205,223,36)"/><text x="27.00" y="1630.50"></text></g><g><title>_compile (jinja2/environment.py) (1 samples, 0.16%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(224,137,49)"/><text x="27.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(249,133,10)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(227,11,24)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(225,19,31)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(249,113,36)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(215,106,17)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(230,25,41)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(226,126,29)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(226,104,28)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(224,6,41)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(211,24,40)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(220,167,41)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(217,16,15)"/><text x="29.00" y="910.50"></text></g><g><title>0x7f2c4117a40e (?) (1 samples, 0.16%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(236,74,25)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(206,229,20)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(230,85,1)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(234,165,10)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(240,112,51)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(229,214,17)"/><text x="29.00" y="1006.50"></text></g><g><title>0x7f2c40f33cd2 (?) (1 samples, 0.16%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(246,2,41)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(226,7,20)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(251,9,16)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(231,64,33)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(225,193,21)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(254,90,21)"/><text x="29.00" y="1102.50"></text></g><g><title>0x7f2c406290e5 (?) (1 samples, 0.16%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(229,186,41)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(249,195,21)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(240,142,40)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(218,224,37)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(209,96,16)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(239,137,5)"/><text x="29.00" y="1198.50"></text></g><g><title>0x7f2c403ade68 (?) (1 samples, 0.16%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(242,34,35)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(226,97,48)"/><text x="29.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(242,2,28)"/><text x="29.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(213,224,45)"/><text x="29.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(250,138,21)"/><text x="29.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(242,201,23)"/><text x="29.00" y="1294.50"></text></g><g><title>0x7f2c4013e2fb (?) (1 samples, 0.16%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(207,156,51)"/><text x="29.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(221,107,25)"/><text x="29.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(218,229,46)"/><text x="29.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(214,130,21)"/><text x="29.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(246,190,9)"/><text x="29.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(213,163,26)"/><text x="29.00" y="1390.50"></text></g><g><title>0x7f2c3ff22153 (?) (1 samples, 0.16%)</title><rect x="26" y="1396" width="2" height="15" fill="rgb(227,48,28)"/><text x="29.00" y="1406.50"></text></g><g><title>0x7f2c3ff20c13 (?) (1 samples, 0.16%)</title><rect x="26" y="1412" width="2" height="15" fill="rgb(250,86,32)"/><text x="29.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1428" width="2" height="15" fill="rgb(232,171,13)"/><text x="29.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1444" width="2" height="15" fill="rgb(217,129,14)"/><text x="29.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1460" width="2" height="15" fill="rgb(205,136,0)"/><text x="29.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1476" width="2" height="15" fill="rgb(208,114,19)"/><text x="29.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(238,130,22)"/><text x="29.00" y="1502.50"></text></g><g><title>0x7f2c3fcbd181 (?) (1 samples, 0.16%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(237,211,16)"/><text x="29.00" y="1518.50"></text></g><g><title>0x7f2c3fcc01c9 (?) (1 samples, 0.16%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(209,208,42)"/><text x="29.00" y="1534.50"></text></g><g><title>0x7f2c3fcec167 (?) (1 samples, 0.16%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(236,18,34)"/><text x="29.00" y="1550.50"></text></g><g><title>0x7f2c3fce7b64 (?) (1 samples, 0.16%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(237,226,34)"/><text x="29.00" y="1566.50"></text></g><g><title>0x7f2c3fccb07b (?) (1 samples, 0.16%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(217,227,49)"/><text x="29.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.16%)</title><rect x="26" y="1588" width="2" height="15" fill="rgb(230,51,7)"/><text x="29.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="1604" width="2" height="15" fill="rgb(225,55,50)"/><text x="29.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="1620" width="2" height="15" fill="rgb(239,164,54)"/><text x="29.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="1636" width="2" height="15" fill="rgb(225,142,49)"/><text x="29.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.16%)</title><rect x="26" y="1652" width="2" height="15" fill="rgb(227,184,35)"/><text x="29.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.16%)</title><rect x="26" y="1668" width="2" height="15" fill="rgb(225,83,25)"/><text x="29.00" y="1678.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="26" y="1684" width="2" height="15" fill="rgb(245,22,1)"/><text x="29.00" y="1694.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.31%)</title><rect x="28" y="724" width="4" height="15" fill="rgb(209,8,50)"/><text x="31.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="740" width="4" height="15" fill="rgb(233,125,25)"/><text x="31.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="756" width="4" height="15" fill="rgb(234,201,23)"/><text x="31.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="772" width="4" height="15" fill="rgb(246,37,5)"/><text x="31.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="788" width="4" height="15" fill="rgb(209,206,40)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="804" width="4" height="15" fill="rgb(223,226,52)"/><text x="31.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="820" width="4" height="15" fill="rgb(227,164,1)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="836" width="4" height="15" fill="rgb(237,163,2)"/><text x="31.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="852" width="4" height="15" fill="rgb(223,127,24)"/><text x="31.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="868" width="4" height="15" fill="rgb(220,130,43)"/><text x="31.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="884" width="4" height="15" fill="rgb(223,210,8)"/><text x="31.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="900" width="4" height="15" fill="rgb(245,66,49)"/><text x="31.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.31%)</title><rect x="28" y="916" width="4" height="15" fill="rgb(231,226,22)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="932" width="4" height="15" fill="rgb(241,227,14)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="948" width="4" height="15" fill="rgb(225,24,31)"/><text x="31.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="964" width="4" height="15" fill="rgb(221,58,40)"/><text x="31.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="980" width="4" height="15" fill="rgb(215,200,28)"/><text x="31.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="996" width="4" height="15" fill="rgb(222,26,12)"/><text x="31.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.31%)</title><rect x="28" y="1012" width="4" height="15" fill="rgb(211,41,33)"/><text x="31.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1028" width="4" height="15" fill="rgb(242,140,38)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1044" width="4" height="15" fill="rgb(208,101,15)"/><text x="31.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1060" width="4" height="15" fill="rgb(211,220,23)"/><text x="31.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1076" width="4" height="15" fill="rgb(206,184,28)"/><text x="31.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1092" width="4" height="15" fill="rgb(233,108,34)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.31%)</title><rect x="28" y="1108" width="4" height="15" fill="rgb(232,172,45)"/><text x="31.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1124" width="4" height="15" fill="rgb(244,20,21)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1140" width="4" height="15" fill="rgb(227,25,49)"/><text x="31.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1156" width="4" height="15" fill="rgb(207,149,45)"/><text x="31.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1172" width="4" height="15" fill="rgb(222,112,19)"/><text x="31.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1188" width="4" height="15" fill="rgb(250,46,3)"/><text x="31.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="1204" width="4" height="15" fill="rgb(235,132,24)"/><text x="31.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1220" width="4" height="15" fill="rgb(247,107,15)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1236" width="4" height="15" fill="rgb(222,87,33)"/><text x="31.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1252" width="4" height="15" fill="rgb(205,185,8)"/><text x="31.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1268" width="4" height="15" fill="rgb(212,107,20)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1284" width="4" height="15" fill="rgb(223,16,9)"/><text x="31.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.31%)</title><rect x="28" y="1300" width="4" height="15" fill="rgb(239,206,16)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1316" width="4" height="15" fill="rgb(234,9,22)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1332" width="4" height="15" fill="rgb(216,60,27)"/><text x="31.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1348" width="4" height="15" fill="rgb(217,26,48)"/><text x="31.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1364" width="4" height="15" fill="rgb(232,43,17)"/><text x="31.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1380" width="4" height="15" fill="rgb(226,121,6)"/><text x="31.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="1396" width="4" height="15" fill="rgb(250,68,24)"/><text x="31.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1412" width="4" height="15" fill="rgb(209,185,18)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1428" width="4" height="15" fill="rgb(207,2,38)"/><text x="31.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1444" width="4" height="15" fill="rgb(233,73,36)"/><text x="31.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1460" width="4" height="15" fill="rgb(206,159,26)"/><text x="31.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1476" width="4" height="15" fill="rgb(244,94,31)"/><text x="31.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.31%)</title><rect x="28" y="1492" width="4" height="15" fill="rgb(210,184,11)"/><text x="31.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1508" width="4" height="15" fill="rgb(248,74,29)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1524" width="4" height="15" fill="rgb(250,7,9)"/><text x="31.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1540" width="4" height="15" fill="rgb(246,210,11)"/><text x="31.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1556" width="4" height="15" fill="rgb(240,8,52)"/><text x="31.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1572" width="4" height="15" fill="rgb(213,58,29)"/><text x="31.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.31%)</title><rect x="28" y="1588" width="4" height="15" fill="rgb(230,122,45)"/><text x="31.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1604" width="4" height="15" fill="rgb(216,214,22)"/><text x="31.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1620" width="4" height="15" fill="rgb(206,144,53)"/><text x="31.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1636" width="4" height="15" fill="rgb(253,90,26)"/><text x="31.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1652" width="4" height="15" fill="rgb(248,139,49)"/><text x="31.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1668" width="4" height="15" fill="rgb(217,53,34)"/><text x="31.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.31%)</title><rect x="28" y="1684" width="4" height="15" fill="rgb(246,5,7)"/><text x="31.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1700" width="4" height="15" fill="rgb(251,110,22)"/><text x="31.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1716" width="4" height="15" fill="rgb(206,201,40)"/><text x="31.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1732" width="4" height="15" fill="rgb(243,100,22)"/><text x="31.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1748" width="4" height="15" fill="rgb(245,135,11)"/><text x="31.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1764" width="4" height="15" fill="rgb(244,140,48)"/><text x="31.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.31%)</title><rect x="28" y="1780" width="4" height="15" fill="rgb(242,127,30)"/><text x="31.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1796" width="4" height="15" fill="rgb(240,30,43)"/><text x="31.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1812" width="4" height="15" fill="rgb(219,57,25)"/><text x="31.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1828" width="4" height="15" fill="rgb(221,142,34)"/><text x="31.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1844" width="4" height="15" fill="rgb(243,159,36)"/><text x="31.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1860" width="4" height="15" fill="rgb(233,57,21)"/><text x="31.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.31%)</title><rect x="28" y="1876" width="4" height="15" fill="rgb(240,57,46)"/><text x="31.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1892" width="4" height="15" fill="rgb(208,79,26)"/><text x="31.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1908" width="4" height="15" fill="rgb(244,211,44)"/><text x="31.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1924" width="4" height="15" fill="rgb(209,145,23)"/><text x="31.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="28" y="1940" width="4" height="15" fill="rgb(245,210,51)"/><text x="31.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="28" y="1956" width="4" height="15" fill="rgb(240,24,47)"/><text x="31.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (2 samples, 0.31%)</title><rect x="28" y="1972" width="4" height="15" fill="rgb(222,17,0)"/><text x="31.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (2 samples, 0.31%)</title><rect x="28" y="1988" width="4" height="15" fill="rgb(247,79,54)"/><text x="31.00" y="1998.50"></text></g><g><title>load (json/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="2004" width="4" height="15" fill="rgb(235,227,12)"/><text x="31.00" y="2014.50"></text></g><g><title>loads (json/__init__.py) (2 samples, 0.31%)</title><rect x="28" y="2020" width="4" height="15" fill="rgb(248,145,47)"/><text x="31.00" y="2030.50"></text></g><g><title>decode (json/decoder.py) (2 samples, 0.31%)</title><rect x="28" y="2036" width="4" height="15" fill="rgb(230,204,42)"/><text x="31.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py) (2 samples, 0.31%)</title><rect x="28" y="2052" width="4" height="15" fill="rgb(223,222,20)"/><text x="31.00" y="2062.50"></text></g><g><title>scanner_call (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2068" width="4" height="15" fill="rgb(205,218,38)"/><text x="31.00" y="2078.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2084" width="4" height="15" fill="rgb(245,162,47)"/><text x="31.00" y="2094.50"></text></g><g><title>_parse_object_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2100" width="4" height="15" fill="rgb(252,202,17)"/><text x="31.00" y="2110.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2116" width="4" height="15" fill="rgb(223,25,16)"/><text x="31.00" y="2126.50"></text></g><g><title>_parse_array_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2132" width="4" height="15" fill="rgb(252,124,32)"/><text x="31.00" y="2142.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2148" width="4" height="15" fill="rgb(234,209,44)"/><text x="31.00" y="2158.50"></text></g><g><title>_parse_object_unicode (_json.c) (2 samples, 0.31%)</title><rect x="28" y="2164" width="4" height="15" fill="rgb(213,3,38)"/><text x="31.00" y="2174.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py) (2 samples, 0.31%)</title><rect x="28" y="2180" width="4" height="15" fill="rgb(223,207,49)"/><text x="31.00" y="2190.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.94%)</title><rect x="22" y="244" width="11" height="15" fill="rgb(253,26,46)"/><text x="25.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="260" width="11" height="15" fill="rgb(208,179,25)"/><text x="25.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="276" width="11" height="15" fill="rgb(227,39,54)"/><text x="25.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="292" width="11" height="15" fill="rgb(220,166,25)"/><text x="25.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="22" y="308" width="11" height="15" fill="rgb(248,211,41)"/><text x="25.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="324" width="11" height="15" fill="rgb(208,63,42)"/><text x="25.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.94%)</title><rect x="22" y="340" width="11" height="15" fill="rgb(253,185,43)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="356" width="11" height="15" fill="rgb(234,192,2)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="372" width="11" height="15" fill="rgb(216,157,8)"/><text x="25.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="388" width="11" height="15" fill="rgb(208,139,34)"/><text x="25.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.94%)</title><rect x="22" y="404" width="11" height="15" fill="rgb(250,158,19)"/><text x="25.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="420" width="11" height="15" fill="rgb(231,173,4)"/><text x="25.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 0.94%)</title><rect x="22" y="436" width="11" height="15" fill="rgb(208,113,10)"/><text x="25.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="452" width="11" height="15" fill="rgb(206,48,51)"/><text x="25.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.94%)</title><rect x="22" y="468" width="11" height="15" fill="rgb(227,40,28)"/><text x="25.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="484" width="7" height="15" fill="rgb(230,90,1)"/><text x="29.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="26" y="500" width="7" height="15" fill="rgb(233,45,44)"/><text x="29.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="516" width="7" height="15" fill="rgb(215,139,21)"/><text x="29.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.62%)</title><rect x="26" y="532" width="7" height="15" fill="rgb(247,85,53)"/><text x="29.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="548" width="7" height="15" fill="rgb(224,150,20)"/><text x="29.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="564" width="7" height="15" fill="rgb(236,94,13)"/><text x="29.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="580" width="7" height="15" fill="rgb(238,170,34)"/><text x="29.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="26" y="596" width="7" height="15" fill="rgb(212,151,35)"/><text x="29.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="612" width="7" height="15" fill="rgb(213,222,10)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.62%)</title><rect x="26" y="628" width="7" height="15" fill="rgb(229,166,46)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="644" width="7" height="15" fill="rgb(217,121,48)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="660" width="7" height="15" fill="rgb(252,13,38)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="676" width="7" height="15" fill="rgb(237,102,7)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="26" y="692" width="7" height="15" fill="rgb(223,223,45)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="26" y="708" width="7" height="15" fill="rgb(228,66,43)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.16%)</title><rect x="32" y="724" width="1" height="15" fill="rgb(218,204,45)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="740" width="1" height="15" fill="rgb(242,220,53)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="756" width="1" height="15" fill="rgb(250,22,12)"/><text x="35.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="772" width="1" height="15" fill="rgb(225,168,44)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="32" y="788" width="1" height="15" fill="rgb(244,100,8)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="32" y="804" width="1" height="15" fill="rgb(235,170,0)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py) (1 samples, 0.16%)</title><rect x="32" y="820" width="1" height="15" fill="rgb(213,70,15)"/><text x="35.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(245,186,9)"/><text x="36.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.16%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(219,8,26)"/><text x="36.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(205,100,47)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(237,95,53)"/><text x="36.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(243,88,53)"/><text x="36.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(231,210,11)"/><text x="36.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(212,200,10)"/><text x="36.00" y="1086.50"></text></g><g><title>&lt;module&gt; (urllib/parse.py) (1 samples, 0.16%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(220,58,16)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.31%)</title><rect x="33" y="372" width="4" height="15" fill="rgb(230,86,54)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="388" width="4" height="15" fill="rgb(234,98,7)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="404" width="4" height="15" fill="rgb(232,179,1)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="420" width="4" height="15" fill="rgb(242,58,36)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="436" width="4" height="15" fill="rgb(226,177,41)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="452" width="4" height="15" fill="rgb(251,56,53)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="33" y="468" width="4" height="15" fill="rgb(237,64,30)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="484" width="4" height="15" fill="rgb(226,27,43)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.31%)</title><rect x="33" y="500" width="4" height="15" fill="rgb(208,176,12)"/><text x="36.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="516" width="4" height="15" fill="rgb(229,123,35)"/><text x="36.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="532" width="4" height="15" fill="rgb(222,194,4)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="548" width="4" height="15" fill="rgb(214,47,46)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="564" width="4" height="15" fill="rgb(231,49,7)"/><text x="36.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="580" width="4" height="15" fill="rgb(241,51,50)"/><text x="36.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="33" y="596" width="4" height="15" fill="rgb(235,8,20)"/><text x="36.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="612" width="4" height="15" fill="rgb(225,121,54)"/><text x="36.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (2 samples, 0.31%)</title><rect x="33" y="628" width="4" height="15" fill="rgb(221,147,49)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="644" width="4" height="15" fill="rgb(243,85,1)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="660" width="4" height="15" fill="rgb(208,112,45)"/><text x="36.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="676" width="4" height="15" fill="rgb(243,97,15)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="692" width="4" height="15" fill="rgb(248,221,37)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="708" width="4" height="15" fill="rgb(221,104,50)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="724" width="4" height="15" fill="rgb(235,187,1)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="33" y="740" width="4" height="15" fill="rgb(209,102,47)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="756" width="4" height="15" fill="rgb(221,41,6)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (2 samples, 0.31%)</title><rect x="33" y="772" width="4" height="15" fill="rgb(243,27,13)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="788" width="4" height="15" fill="rgb(245,195,10)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="804" width="4" height="15" fill="rgb(215,39,38)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="820" width="4" height="15" fill="rgb(240,197,14)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="836" width="4" height="15" fill="rgb(220,93,21)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="852" width="4" height="15" fill="rgb(249,51,36)"/><text x="36.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="33" y="868" width="4" height="15" fill="rgb(223,89,16)"/><text x="36.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="884" width="4" height="15" fill="rgb(244,128,50)"/><text x="36.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (2 samples, 0.31%)</title><rect x="33" y="900" width="4" height="15" fill="rgb(239,135,14)"/><text x="36.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="916" width="4" height="15" fill="rgb(233,204,12)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="932" width="4" height="15" fill="rgb(224,164,4)"/><text x="36.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.31%)</title><rect x="33" y="948" width="4" height="15" fill="rgb(219,156,51)"/><text x="36.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.31%)</title><rect x="33" y="964" width="4" height="15" fill="rgb(235,87,5)"/><text x="36.00" y="974.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="980" width="2" height="15" fill="rgb(207,158,44)"/><text x="38.00" y="990.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="35" y="996" width="2" height="15" fill="rgb(242,203,49)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.16%)</title><rect x="37" y="372" width="2" height="15" fill="rgb(241,18,1)"/><text x="40.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="388" width="2" height="15" fill="rgb(213,143,48)"/><text x="40.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="404" width="2" height="15" fill="rgb(212,47,21)"/><text x="40.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="420" width="2" height="15" fill="rgb(227,160,28)"/><text x="40.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="436" width="2" height="15" fill="rgb(233,104,32)"/><text x="40.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="452" width="2" height="15" fill="rgb(235,72,29)"/><text x="40.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.16%)</title><rect x="37" y="468" width="2" height="15" fill="rgb(224,155,20)"/><text x="40.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="484" width="2" height="15" fill="rgb(237,200,17)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="500" width="2" height="15" fill="rgb(208,108,35)"/><text x="40.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="516" width="2" height="15" fill="rgb(235,75,30)"/><text x="40.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="532" width="2" height="15" fill="rgb(251,213,39)"/><text x="40.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="548" width="2" height="15" fill="rgb(211,149,38)"/><text x="40.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.16%)</title><rect x="37" y="564" width="2" height="15" fill="rgb(209,170,26)"/><text x="40.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="580" width="2" height="15" fill="rgb(251,109,35)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="596" width="2" height="15" fill="rgb(215,27,31)"/><text x="40.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="612" width="2" height="15" fill="rgb(240,218,33)"/><text x="40.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="37" y="628" width="2" height="15" fill="rgb(226,73,2)"/><text x="40.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="644" width="2" height="15" fill="rgb(213,207,27)"/><text x="40.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py) (1 samples, 0.16%)</title><rect x="37" y="660" width="2" height="15" fill="rgb(242,205,34)"/><text x="40.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="676" width="2" height="15" fill="rgb(229,22,46)"/><text x="40.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="692" width="2" height="15" fill="rgb(210,37,33)"/><text x="40.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="708" width="2" height="15" fill="rgb(253,175,9)"/><text x="40.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="724" width="2" height="15" fill="rgb(210,11,20)"/><text x="40.00" y="734.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="37" y="740" width="2" height="15" fill="rgb(243,172,33)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="68" width="31" height="15" fill="rgb(234,110,29)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="84" width="31" height="15" fill="rgb(223,179,1)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="100" width="31" height="15" fill="rgb(216,45,23)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.66%)</title><rect x="10" y="116" width="31" height="15" fill="rgb(214,192,40)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="132" width="31" height="15" fill="rgb(254,188,2)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (17 samples, 2.66%)</title><rect x="10" y="148" width="31" height="15" fill="rgb(226,142,49)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="164" width="31" height="15" fill="rgb(209,217,20)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.66%)</title><rect x="10" y="180" width="31" height="15" fill="rgb(231,10,15)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.56%)</title><rect x="22" y="196" width="19" height="15" fill="rgb(231,105,14)"/><text x="25.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.56%)</title><rect x="22" y="212" width="19" height="15" fill="rgb(234,196,47)"/><text x="25.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.56%)</title><rect x="22" y="228" width="19" height="15" fill="rgb(221,75,31)"/><text x="25.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (4 samples, 0.62%)</title><rect x="33" y="244" width="8" height="15" fill="rgb(221,110,35)"/><text x="36.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="260" width="8" height="15" fill="rgb(207,63,26)"/><text x="36.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="276" width="8" height="15" fill="rgb(215,221,1)"/><text x="36.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="292" width="8" height="15" fill="rgb(210,203,31)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="308" width="8" height="15" fill="rgb(242,37,7)"/><text x="36.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="324" width="8" height="15" fill="rgb(214,134,23)"/><text x="36.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.62%)</title><rect x="33" y="340" width="8" height="15" fill="rgb(216,9,48)"/><text x="36.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.62%)</title><rect x="33" y="356" width="8" height="15" fill="rgb(219,180,14)"/><text x="36.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.16%)</title><rect x="39" y="372" width="2" height="15" fill="rgb(251,169,28)"/><text x="42.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="388" width="2" height="15" fill="rgb(224,60,51)"/><text x="42.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="404" width="2" height="15" fill="rgb(230,94,53)"/><text x="42.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="420" width="2" height="15" fill="rgb(211,211,0)"/><text x="42.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="436" width="2" height="15" fill="rgb(210,204,16)"/><text x="42.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="452" width="2" height="15" fill="rgb(243,171,3)"/><text x="42.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="39" y="468" width="2" height="15" fill="rgb(214,178,53)"/><text x="42.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="484" width="2" height="15" fill="rgb(237,132,4)"/><text x="42.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.16%)</title><rect x="39" y="500" width="2" height="15" fill="rgb(205,228,47)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="516" width="2" height="15" fill="rgb(244,135,8)"/><text x="42.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="532" width="2" height="15" fill="rgb(218,11,12)"/><text x="42.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="548" width="2" height="15" fill="rgb(247,208,45)"/><text x="42.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="39" y="564" width="2" height="15" fill="rgb(242,29,27)"/><text x="42.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="580" width="2" height="15" fill="rgb(250,43,52)"/><text x="42.00" y="590.50"></text></g><g><title>0x7f2c5e259585 (?) (1 samples, 0.16%)</title><rect x="39" y="596" width="2" height="15" fill="rgb(209,84,33)"/><text x="42.00" y="606.50"></text></g><g><title>0x7f2c5e25f075 (?) (1 samples, 0.16%)</title><rect x="39" y="612" width="2" height="15" fill="rgb(225,190,10)"/><text x="42.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="628" width="2" height="15" fill="rgb(243,137,52)"/><text x="42.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="644" width="2" height="15" fill="rgb(232,81,34)"/><text x="42.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="660" width="2" height="15" fill="rgb(243,182,27)"/><text x="42.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="39" y="676" width="2" height="15" fill="rgb(206,167,3)"/><text x="42.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="692" width="2" height="15" fill="rgb(228,17,17)"/><text x="42.00" y="702.50"></text></g><g><title>0x7f2c5db96543 (?) (1 samples, 0.16%)</title><rect x="39" y="708" width="2" height="15" fill="rgb(212,103,49)"/><text x="42.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="724" width="2" height="15" fill="rgb(231,97,26)"/><text x="42.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="740" width="2" height="15" fill="rgb(224,32,22)"/><text x="42.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="756" width="2" height="15" fill="rgb(207,98,10)"/><text x="42.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="39" y="772" width="2" height="15" fill="rgb(207,137,33)"/><text x="42.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="39" y="788" width="2" height="15" fill="rgb(208,139,54)"/><text x="42.00" y="798.50"></text></g><g><title>0x7f2c5d96cdf8 (?) (1 samples, 0.16%)</title><rect x="39" y="804" width="2" height="15" fill="rgb(249,51,26)"/><text x="42.00" y="814.50"></text></g><g><title>0x7f2c5d96f76f (?) (1 samples, 0.16%)</title><rect x="39" y="820" width="2" height="15" fill="rgb(243,1,53)"/><text x="42.00" y="830.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="39" y="836" width="2" height="15" fill="rgb(251,192,50)"/><text x="42.00" y="846.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="39" y="852" width="2" height="15" fill="rgb(244,95,10)"/><text x="42.00" y="862.50"></text></g><g><title>__and__ (enum.py) (1 samples, 0.16%)</title><rect x="39" y="868" width="2" height="15" fill="rgb(222,108,43)"/><text x="42.00" y="878.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="45" y="116" width="1" height="15" fill="rgb(231,96,11)"/><text x="48.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="45" y="132" width="1" height="15" fill="rgb(223,11,11)"/><text x="48.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="45" y="148" width="1" height="15" fill="rgb(249,17,12)"/><text x="48.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.16%)</title><rect x="45" y="164" width="1" height="15" fill="rgb(234,47,32)"/><text x="48.00" y="174.50"></text></g><g><title>0x7f2c6b992eb0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="45" y="180" width="1" height="15" fill="rgb(249,82,1)"/><text x="48.00" y="190.50"></text></g><g><title>0x7f2c6b991b9b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="45" y="196" width="1" height="15" fill="rgb(223,181,47)"/><text x="48.00" y="206.50"></text></g><g><title>0x7f2c2ba50ff9 (?) (1 samples, 0.16%)</title><rect x="67" y="212" width="2" height="15" fill="rgb(213,21,30)"/><text x="70.00" y="222.50"></text></g><g><title>0x7f2c2ba4bef6 (?) (1 samples, 0.16%)</title><rect x="67" y="228" width="2" height="15" fill="rgb(230,134,18)"/><text x="70.00" y="238.50"></text></g><g><title>0x7f2c2ba40962 (?) (1 samples, 0.16%)</title><rect x="67" y="244" width="2" height="15" fill="rgb(225,192,28)"/><text x="70.00" y="254.50"></text></g><g><title>0x7f2c2ba747a7 (?) (1 samples, 0.16%)</title><rect x="67" y="260" width="2" height="15" fill="rgb(211,102,0)"/><text x="70.00" y="270.50"></text></g><g><title>0x7f2c2ba74379 (?) (1 samples, 0.16%)</title><rect x="67" y="276" width="2" height="15" fill="rgb(238,170,11)"/><text x="70.00" y="286.50"></text></g><g><title>0x7f2c2bed28b8 (?) (1 samples, 0.16%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(217,219,7)"/><text x="70.00" y="302.50"></text></g><g><title>0x7f2c2bed0c7f (?) (1 samples, 0.16%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(246,147,12)"/><text x="70.00" y="318.50"></text></g><g><title>0x7f2c2bee399c (?) (1 samples, 0.16%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(217,109,0)"/><text x="70.00" y="334.50"></text></g><g><title>0x7f2c2bc0adc2 (?) (1 samples, 0.16%)</title><rect x="67" y="340" width="2" height="15" fill="rgb(243,82,2)"/><text x="70.00" y="350.50"></text></g><g><title>0x7f2c2bc0a65b (?) (1 samples, 0.16%)</title><rect x="67" y="356" width="2" height="15" fill="rgb(232,214,5)"/><text x="70.00" y="366.50"></text></g><g><title>0x7f2c2bc0a2a6 (?) (1 samples, 0.16%)</title><rect x="67" y="372" width="2" height="15" fill="rgb(243,67,32)"/><text x="70.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="67" y="388" width="2" height="15" fill="rgb(210,180,37)"/><text x="70.00" y="398.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 0.78%)</title><rect x="69" y="212" width="9" height="15" fill="rgb(240,211,19)"/><text x="72.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="76" y="228" width="2" height="15" fill="rgb(251,107,7)"/><text x="79.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="76" y="244" width="2" height="15" fill="rgb(219,49,23)"/><text x="79.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="76" y="260" width="2" height="15" fill="rgb(220,199,50)"/><text x="79.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="76" y="276" width="2" height="15" fill="rgb(249,56,35)"/><text x="79.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="83" y="260" width="2" height="15" fill="rgb(246,1,1)"/><text x="86.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="85" y="292" width="2" height="15" fill="rgb(215,82,22)"/><text x="88.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="91" y="356" width="3" height="15" fill="rgb(221,32,53)"/><text x="94.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="92" y="372" width="2" height="15" fill="rgb(208,170,16)"/><text x="95.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.62%)</title><rect x="89" y="340" width="7" height="15" fill="rgb(234,74,18)"/><text x="92.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="94" y="356" width="2" height="15" fill="rgb(232,40,6)"/><text x="97.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="96" y="340" width="2" height="15" fill="rgb(216,96,24)"/><text x="99.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="96" y="356" width="2" height="15" fill="rgb(246,43,23)"/><text x="99.00" y="366.50"></text></g><g><title>0x7f2c2ba180f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="183" y="356" width="5" height="15" fill="rgb(214,62,14)"/><text x="186.00" y="366.50"></text></g><g><title>0x7f2c5b45f7a0 (libstdc++.so.6.0.28) (4 samples, 0.62%)</title><rect x="188" y="356" width="8" height="15" fill="rgb(245,129,5)"/><text x="191.00" y="366.50"></text></g><g><title>0x7f2c6b992906 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="196" y="356" width="2" height="15" fill="rgb(246,186,23)"/><text x="199.00" y="366.50"></text></g><g><title>0x7f2c6b992908 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="198" y="356" width="1" height="15" fill="rgb(205,23,1)"/><text x="201.00" y="366.50"></text></g><g><title>0x7f2c6b99290e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="199" y="356" width="2" height="15" fill="rgb(223,111,54)"/><text x="202.00" y="366.50"></text></g><g><title>0x7f2c6b99291c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="201" y="356" width="2" height="15" fill="rgb(244,65,7)"/><text x="204.00" y="366.50"></text></g><g><title>0x7f2c6b99291e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="203" y="356" width="2" height="15" fill="rgb(221,180,40)"/><text x="206.00" y="366.50"></text></g><g><title>0x7f2c6b99292f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="205" y="356" width="2" height="15" fill="rgb(239,23,40)"/><text x="208.00" y="366.50"></text></g><g><title>0x7f2c6b99293b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="207" y="356" width="2" height="15" fill="rgb(207,205,0)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f2c6b99295e (libc-2.29.so) (2 samples, 0.31%)</title><rect x="209" y="356" width="3" height="15" fill="rgb(225,222,15)"/><text x="212.00" y="366.50"></text></g><g><title>0x7f2c6b992961 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="212" y="356" width="4" height="15" fill="rgb(241,98,11)"/><text x="215.00" y="366.50"></text></g><g><title>0x7f2c6b992965 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="216" y="356" width="4" height="15" fill="rgb(232,30,42)"/><text x="219.00" y="366.50"></text></g><g><title>0x7f2c6b99296a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="220" y="356" width="2" height="15" fill="rgb(220,34,37)"/><text x="223.00" y="366.50"></text></g><g><title>0x7f2c6b99297c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="222" y="356" width="1" height="15" fill="rgb(244,0,49)"/><text x="225.00" y="366.50"></text></g><g><title>0x7f2c6b992991 (libc-2.29.so) (6 samples, 0.94%)</title><rect x="223" y="356" width="11" height="15" fill="rgb(245,40,10)"/><text x="226.00" y="366.50"></text></g><g><title>0x7f2c6b992998 (libc-2.29.so) (4 samples, 0.62%)</title><rect x="234" y="356" width="8" height="15" fill="rgb(213,21,36)"/><text x="237.00" y="366.50"></text></g><g><title>0x7f2c6b992a4d (libc-2.29.so) (2 samples, 0.31%)</title><rect x="242" y="356" width="4" height="15" fill="rgb(207,53,32)"/><text x="245.00" y="366.50"></text></g><g><title>0x7f2c6b992a55 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="246" y="356" width="3" height="15" fill="rgb(226,106,42)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f2c6b992bd8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="249" y="356" width="2" height="15" fill="rgb(230,208,3)"/><text x="252.00" y="366.50"></text></g><g><title>0x7f2c6b992be4 (libc-2.29.so) (2 samples, 0.31%)</title><rect x="251" y="356" width="4" height="15" fill="rgb(232,220,25)"/><text x="254.00" y="366.50"></text></g><g><title>0x7f2c6b992be8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="255" y="356" width="2" height="15" fill="rgb(243,119,31)"/><text x="258.00" y="366.50"></text></g><g><title>0x7f2c6b9b3144 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="257" y="356" width="1" height="15" fill="rgb(251,98,8)"/><text x="260.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (24 samples, 3.75%)</title><rect x="258" y="356" width="45" height="15" fill="rgb(241,75,36)"/><text x="261.00" y="366.50">free..</text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="305" y="372" width="5" height="15" fill="rgb(250,187,28)"/><text x="308.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="305" y="388" width="5" height="15" fill="rgb(246,10,22)"/><text x="308.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="305" y="404" width="5" height="15" fill="rgb(210,204,20)"/><text x="308.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="305" y="420" width="5" height="15" fill="rgb(205,120,13)"/><text x="308.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="305" y="436" width="5" height="15" fill="rgb(225,196,3)"/><text x="308.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="306" y="452" width="4" height="15" fill="rgb(237,0,40)"/><text x="309.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="308" y="468" width="2" height="15" fill="rgb(245,15,22)"/><text x="311.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="308" y="484" width="2" height="15" fill="rgb(222,40,37)"/><text x="311.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="308" y="500" width="2" height="15" fill="rgb(224,62,39)"/><text x="311.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.78%)</title><rect x="303" y="356" width="9" height="15" fill="rgb(223,191,19)"/><text x="306.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="310" y="372" width="2" height="15" fill="rgb(227,192,18)"/><text x="313.00" y="382.50"></text></g><g><title>0x7f2c5b45ed50 (libstdc++.so.6.0.28) (4 samples, 0.62%)</title><rect x="583" y="404" width="7" height="15" fill="rgb(250,194,11)"/><text x="586.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (18 samples, 2.81%)</title><rect x="581" y="388" width="33" height="15" fill="rgb(215,161,48)"/><text x="584.00" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (13 samples, 2.03%)</title><rect x="590" y="404" width="24" height="15" fill="rgb(229,95,48)"/><text x="593.00" y="414.50">m..</text></g><g><title>0x7f2c6b9b312f (libc-2.29.so) (1 samples, 0.16%)</title><rect x="651" y="420" width="2" height="15" fill="rgb(248,105,46)"/><text x="654.00" y="430.50"></text></g><g><title>0x7f2c5b45ed50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="657" y="436" width="2" height="15" fill="rgb(241,223,15)"/><text x="660.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 2.19%)</title><rect x="635" y="404" width="25" height="15" fill="rgb(214,22,18)"/><text x="638.00" y="414.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.62%)</title><rect x="653" y="420" width="7" height="15" fill="rgb(211,78,33)"/><text x="656.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="659" y="436" width="1" height="15" fill="rgb(249,6,15)"/><text x="662.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (257 samples, 40.16%)</title><rect x="312" y="356" width="474" height="15" fill="rgb(240,113,17)"/><text x="315.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (123 samples, 19.22%)</title><rect x="559" y="372" width="227" height="15" fill="rgb(226,8,49)"/><text x="562.00" y="382.50">std::_Hashtable&lt;long, std::pai..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (93 samples, 14.53%)</title><rect x="614" y="388" width="172" height="15" fill="rgb(213,107,2)"/><text x="617.00" y="398.50">std::_Hashtable&lt;long, ..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (68 samples, 10.62%)</title><rect x="660" y="404" width="126" height="15" fill="rgb(224,62,3)"/><text x="663.00" y="414.50">std::__detail::..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (32 samples, 5.00%)</title><rect x="727" y="420" width="59" height="15" fill="rgb(205,134,16)"/><text x="730.00" y="430.50">std::_..</text></g><g><title>0x7f2c6b9b2d50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="799" y="372" width="1" height="15" fill="rgb(228,186,54)"/><text x="802.00" y="382.50"></text></g><g><title>0x7f2c6b9b2dbf (libc-2.29.so) (1 samples, 0.16%)</title><rect x="800" y="372" width="2" height="15" fill="rgb(225,147,34)"/><text x="803.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.56%)</title><rect x="786" y="356" width="18" height="15" fill="rgb(209,129,18)"/><text x="789.00" y="366.50"></text></g><g><title>0x7f2c6b9b2dc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="802" y="372" width="2" height="15" fill="rgb(250,163,48)"/><text x="805.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.31%)</title><rect x="804" y="356" width="4" height="15" fill="rgb(211,88,19)"/><text x="807.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 4.22%)</title><rect x="808" y="356" width="50" height="15" fill="rgb(212,152,32)"/><text x="811.00" y="366.50">std::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (436 samples, 68.12%)</title><rect x="87" y="292" width="804" height="15" fill="rgb(230,164,29)"/><text x="90.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (435 samples, 67.97%)</title><rect x="89" y="308" width="802" height="15" fill="rgb(250,182,35)"/><text x="92.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (435 samples, 67.97%)</title><rect x="89" y="324" width="802" height="15" fill="rgb(215,226,32)"/><text x="92.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (430 samples, 67.19%)</title><rect x="98" y="340" width="793" height="15" fill="rgb(254,51,5)"/><text x="101.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.81%)</title><rect x="858" y="356" width="33" height="15" fill="rgb(240,111,15)"/><text x="861.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.94%)</title><rect x="880" y="372" width="11" height="15" fill="rgb(214,158,28)"/><text x="883.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.94%)</title><rect x="880" y="388" width="11" height="15" fill="rgb(243,196,6)"/><text x="883.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (438 samples, 68.44%)</title><rect x="85" y="260" width="808" height="15" fill="rgb(210,41,41)"/><text x="88.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (438 samples, 68.44%)</title><rect x="85" y="276" width="808" height="15" fill="rgb(248,197,49)"/><text x="88.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="891" y="292" width="2" height="15" fill="rgb(214,45,35)"/><text x="894.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="893" y="276" width="2" height="15" fill="rgb(217,24,2)"/><text x="896.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="893" y="292" width="2" height="15" fill="rgb(243,56,43)"/><text x="896.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="893" y="308" width="2" height="15" fill="rgb(250,61,2)"/><text x="896.00" y="318.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="893" y="324" width="2" height="15" fill="rgb(219,182,13)"/><text x="896.00" y="334.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.31%)</title><rect x="893" y="260" width="3" height="15" fill="rgb(248,179,42)"/><text x="896.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="895" y="276" width="1" height="15" fill="rgb(254,149,23)"/><text x="898.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="896" y="260" width="2" height="15" fill="rgb(227,94,38)"/><text x="899.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.16%)</title><rect x="896" y="276" width="2" height="15" fill="rgb(241,110,32)"/><text x="899.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="896" y="292" width="2" height="15" fill="rgb(232,229,52)"/><text x="899.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="896" y="308" width="2" height="15" fill="rgb(236,228,16)"/><text x="899.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="896" y="324" width="2" height="15" fill="rgb(229,154,7)"/><text x="899.00" y="334.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (446 samples, 69.69%)</title><rect x="78" y="244" width="822" height="15" fill="rgb(221,28,33)"/><text x="81.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="260" width="2" height="15" fill="rgb(209,144,11)"/><text x="901.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="276" width="2" height="15" fill="rgb(247,152,18)"/><text x="901.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="292" width="2" height="15" fill="rgb(217,124,35)"/><text x="901.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="308" width="2" height="15" fill="rgb(212,49,18)"/><text x="901.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="324" width="2" height="15" fill="rgb(234,166,46)"/><text x="901.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="340" width="2" height="15" fill="rgb(220,173,29)"/><text x="901.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="356" width="2" height="15" fill="rgb(208,161,39)"/><text x="901.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="898" y="372" width="2" height="15" fill="rgb(253,164,47)"/><text x="901.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="900" y="244" width="2" height="15" fill="rgb(215,29,46)"/><text x="903.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="900" y="260" width="2" height="15" fill="rgb(239,86,7)"/><text x="903.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="900" y="276" width="2" height="15" fill="rgb(247,190,12)"/><text x="903.00" y="286.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (468 samples, 73.12%)</title><rect x="41" y="68" width="863" height="15" fill="rgb(221,163,44)"/><text x="44.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (468 samples, 73.12%)</title><rect x="41" y="84" width="863" height="15" fill="rgb(236,106,20)"/><text x="44.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (468 samples, 73.12%)</title><rect x="41" y="100" width="863" height="15" fill="rgb(227,49,31)"/><text x="44.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (465 samples, 72.66%)</title><rect x="46" y="116" width="858" height="15" fill="rgb(205,139,52)"/><text x="49.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (464 samples, 72.50%)</title><rect x="48" y="132" width="856" height="15" fill="rgb(224,122,18)"/><text x="51.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (463 samples, 72.34%)</title><rect x="50" y="148" width="854" height="15" fill="rgb(253,36,40)"/><text x="53.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (461 samples, 72.03%)</title><rect x="54" y="164" width="850" height="15" fill="rgb(248,72,26)"/><text x="57.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (459 samples, 71.72%)</title><rect x="57" y="180" width="847" height="15" fill="rgb(209,202,34)"/><text x="60.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (457 samples, 71.41%)</title><rect x="61" y="196" width="843" height="15" fill="rgb(254,148,30)"/><text x="64.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (448 samples, 70.00%)</title><rect x="78" y="212" width="826" height="15" fill="rgb(215,129,21)"/><text x="81.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (448 samples, 70.00%)</title><rect x="78" y="228" width="826" height="15" fill="rgb(205,224,20)"/><text x="81.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrunt..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="902" y="244" width="2" height="15" fill="rgb(214,27,25)"/><text x="905.00" y="254.50"></text></g><g><title>0x7f2c2c46b54f (?) (1 samples, 0.16%)</title><rect x="907" y="244" width="2" height="15" fill="rgb(223,202,3)"/><text x="910.00" y="254.50"></text></g><g><title>0x7f2c2c47165e (?) (1 samples, 0.16%)</title><rect x="907" y="260" width="2" height="15" fill="rgb(251,35,23)"/><text x="910.00" y="270.50"></text></g><g><title>0x7f2c2c47150f (?) (1 samples, 0.16%)</title><rect x="907" y="276" width="2" height="15" fill="rgb(233,6,52)"/><text x="910.00" y="286.50"></text></g><g><title>0x7f2c2c477d6c (?) (1 samples, 0.16%)</title><rect x="907" y="292" width="2" height="15" fill="rgb(221,29,22)"/><text x="910.00" y="302.50"></text></g><g><title>0x7f2c35998ab9 (?) (1 samples, 0.16%)</title><rect x="907" y="308" width="2" height="15" fill="rgb(249,152,30)"/><text x="910.00" y="318.50"></text></g><g><title>0x7f2c35999eab (?) (1 samples, 0.16%)</title><rect x="907" y="324" width="2" height="15" fill="rgb(240,46,18)"/><text x="910.00" y="334.50"></text></g><g><title>0x7f2c35999ea0 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="909" y="484" width="2" height="15" fill="rgb(226,25,31)"/><text x="912.00" y="494.50"></text></g><g><title>0x7f2c35999ea9 (libgomp.so.1.0.0) (17 samples, 2.66%)</title><rect x="911" y="484" width="31" height="15" fill="rgb(206,81,19)"/><text x="914.00" y="494.50">0x..</text></g><g><title>0x7f2c35999eab (libgomp.so.1.0.0) (6 samples, 0.94%)</title><rect x="942" y="484" width="12" height="15" fill="rgb(211,23,47)"/><text x="945.00" y="494.50"></text></g><g><title>0x7f2c35998ab9 (libgomp.so.1.0.0) (41 samples, 6.41%)</title><rect x="909" y="468" width="76" height="15" fill="rgb(208,100,51)"/><text x="912.00" y="478.50">0x7f2c35..</text></g><g><title>0x7f2c35999ead (libgomp.so.1.0.0) (17 samples, 2.66%)</title><rect x="954" y="484" width="31" height="15" fill="rgb(250,216,23)"/><text x="957.00" y="494.50">0x..</text></g><g><title>0x7f2c35999cf0 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="985" y="500" width="2" height="15" fill="rgb(205,64,23)"/><text x="988.00" y="510.50"></text></g><g><title>0x7f2c35999cfb (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="987" y="500" width="2" height="15" fill="rgb(252,209,11)"/><text x="990.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (47 samples, 7.34%)</title><rect x="904" y="68" width="86" height="15" fill="rgb(219,82,17)"/><text x="907.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (47 samples, 7.34%)</title><rect x="904" y="84" width="86" height="15" fill="rgb(254,32,29)"/><text x="907.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (47 samples, 7.34%)</title><rect x="904" y="100" width="86" height="15" fill="rgb(244,91,52)"/><text x="907.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 7.34%)</title><rect x="904" y="116" width="86" height="15" fill="rgb(211,173,16)"/><text x="907.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 7.34%)</title><rect x="904" y="132" width="86" height="15" fill="rgb(213,3,5)"/><text x="907.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (47 samples, 7.34%)</title><rect x="904" y="148" width="86" height="15" fill="rgb(252,189,28)"/><text x="907.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (47 samples, 7.34%)</title><rect x="904" y="164" width="86" height="15" fill="rgb(215,25,18)"/><text x="907.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (45 samples, 7.03%)</title><rect x="907" y="180" width="83" height="15" fill="rgb(208,189,51)"/><text x="910.00" y="190.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 7.03%)</title><rect x="907" y="196" width="83" height="15" fill="rgb(224,202,19)"/><text x="910.00" y="206.50">run (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 7.03%)</title><rect x="907" y="212" width="83" height="15" fill="rgb(249,92,33)"/><text x="910.00" y="222.50">run (mlpr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (45 samples, 7.03%)</title><rect x="907" y="228" width="83" height="15" fill="rgb(214,180,3)"/><text x="910.00" y="238.50">_run (mlp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (44 samples, 6.88%)</title><rect x="909" y="244" width="81" height="15" fill="rgb(214,159,17)"/><text x="912.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (44 samples, 6.88%)</title><rect x="909" y="260" width="81" height="15" fill="rgb(212,105,43)"/><text x="912.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (44 samples, 6.88%)</title><rect x="909" y="276" width="81" height="15" fill="rgb(220,74,28)"/><text x="912.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (44 samples, 6.88%)</title><rect x="909" y="292" width="81" height="15" fill="rgb(251,161,18)"/><text x="912.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (44 samples, 6.88%)</title><rect x="909" y="308" width="81" height="15" fill="rgb(217,23,9)"/><text x="912.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (44 samples, 6.88%)</title><rect x="909" y="324" width="81" height="15" fill="rgb(215,35,39)"/><text x="912.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (44 samples, 6.88%)</title><rect x="909" y="340" width="81" height="15" fill="rgb(219,49,22)"/><text x="912.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (44 samples, 6.88%)</title><rect x="909" y="356" width="81" height="15" fill="rgb(226,216,10)"/><text x="912.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (44 samples, 6.88%)</title><rect x="909" y="372" width="81" height="15" fill="rgb(248,65,52)"/><text x="912.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (44 samples, 6.88%)</title><rect x="909" y="388" width="81" height="15" fill="rgb(236,49,12)"/><text x="912.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (44 samples, 6.88%)</title><rect x="909" y="404" width="81" height="15" fill="rgb(237,48,41)"/><text x="912.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (44 samples, 6.88%)</title><rect x="909" y="420" width="81" height="15" fill="rgb(207,54,40)"/><text x="912.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::array::size (numpy.h) (44 samples, 6.88%)</title><rect x="909" y="436" width="81" height="15" fill="rgb(207,61,1)"/><text x="912.00" y="446.50">pybind11:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (44 samples, 6.88%)</title><rect x="909" y="452" width="81" height="15" fill="rgb(215,197,47)"/><text x="912.00" y="462.50">std::accu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.47%)</title><rect x="985" y="468" width="5" height="15" fill="rgb(220,170,32)"/><text x="988.00" y="478.50"></text></g><g><title>0x7f2c35997daa (libgomp.so.1.0.0) (3 samples, 0.47%)</title><rect x="985" y="484" width="5" height="15" fill="rgb(230,71,34)"/><text x="988.00" y="494.50"></text></g><g><title>0x7f2c35999d6d (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="989" y="500" width="1" height="15" fill="rgb(243,97,41)"/><text x="992.00" y="510.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="992" y="116" width="2" height="15" fill="rgb(205,187,51)"/><text x="995.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="992" y="132" width="2" height="15" fill="rgb(205,3,51)"/><text x="995.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="992" y="148" width="2" height="15" fill="rgb(227,92,38)"/><text x="995.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.16%)</title><rect x="992" y="164" width="2" height="15" fill="rgb(225,56,52)"/><text x="995.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.16%)</title><rect x="992" y="180" width="2" height="15" fill="rgb(253,219,11)"/><text x="995.00" y="190.50"></text></g><g><title>0x7f2c6b992f35 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="992" y="196" width="2" height="15" fill="rgb(217,195,29)"/><text x="995.00" y="206.50"></text></g><g><title>0x7f2c45ffdf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1001" y="180" width="2" height="15" fill="rgb(226,193,52)"/><text x="1004.00" y="190.50"></text></g><g><title>0x7f2c45fedd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1001" y="196" width="2" height="15" fill="rgb(251,32,34)"/><text x="1004.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.16%)</title><rect x="1001" y="212" width="2" height="15" fill="rgb(247,120,7)"/><text x="1004.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1001" y="228" width="2" height="15" fill="rgb(253,85,15)"/><text x="1004.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1001" y="244" width="2" height="15" fill="rgb(241,219,23)"/><text x="1004.00" y="254.50"></text></g><g><title>0x7f2c4600c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1003" y="212" width="2" height="15" fill="rgb(213,223,17)"/><text x="1006.00" y="222.50"></text></g><g><title>0x7f2c45ff0d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1003" y="228" width="2" height="15" fill="rgb(251,111,16)"/><text x="1006.00" y="238.50"></text></g><g><title>0x7f2c45ff0666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1003" y="244" width="2" height="15" fill="rgb(241,190,20)"/><text x="1006.00" y="254.50"></text></g><g><title>0x7f2c45fe62fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1003" y="260" width="2" height="15" fill="rgb(227,51,52)"/><text x="1006.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.16%)</title><rect x="1003" y="276" width="2" height="15" fill="rgb(209,143,45)"/><text x="1006.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.16%)</title><rect x="1003" y="292" width="2" height="15" fill="rgb(226,167,26)"/><text x="1006.00" y="302.50"></text></g><g><title>0x7f2c4600c53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1005" y="212" width="2" height="15" fill="rgb(236,163,42)"/><text x="1008.00" y="222.50"></text></g><g><title>0x7f2c4600c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1007" y="212" width="6" height="15" fill="rgb(219,61,13)"/><text x="1010.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.31%)</title><rect x="1009" y="228" width="4" height="15" fill="rgb(205,93,41)"/><text x="1012.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.16%)</title><rect x="1011" y="244" width="2" height="15" fill="rgb(235,50,37)"/><text x="1014.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.16%)</title><rect x="1011" y="260" width="2" height="15" fill="rgb(241,24,14)"/><text x="1014.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1011" y="276" width="2" height="15" fill="rgb(209,5,15)"/><text x="1014.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.16%)</title><rect x="1011" y="292" width="2" height="15" fill="rgb(243,150,39)"/><text x="1014.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.16%)</title><rect x="1011" y="308" width="2" height="15" fill="rgb(247,198,2)"/><text x="1014.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1011" y="324" width="2" height="15" fill="rgb(224,156,38)"/><text x="1014.00" y="334.50"></text></g><g><title>0x7f2c6b9b3103 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1011" y="340" width="2" height="15" fill="rgb(218,209,3)"/><text x="1014.00" y="350.50"></text></g><g><title>0x7f2c4600c6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1013" y="212" width="1" height="15" fill="rgb(252,210,16)"/><text x="1016.00" y="222.50"></text></g><g><title>0x7f2c4600c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.09%)</title><rect x="1014" y="212" width="13" height="15" fill="rgb(239,44,37)"/><text x="1017.00" y="222.50"></text></g><g><title>0x7f2c4600c6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1027" y="212" width="2" height="15" fill="rgb(235,75,20)"/><text x="1030.00" y="222.50"></text></g><g><title>0x7f2c4600c6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1029" y="212" width="2" height="15" fill="rgb(232,164,13)"/><text x="1032.00" y="222.50"></text></g><g><title>0x7f2c4600c6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1031" y="212" width="4" height="15" fill="rgb(215,31,19)"/><text x="1034.00" y="222.50"></text></g><g><title>0x7f2c4600c7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1035" y="212" width="1" height="15" fill="rgb(249,26,40)"/><text x="1038.00" y="222.50"></text></g><g><title>0x7f2c4600c8eb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1036" y="212" width="2" height="15" fill="rgb(212,89,3)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7f2c4600ca04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1038" y="212" width="2" height="15" fill="rgb(229,42,46)"/><text x="1041.00" y="222.50"></text></g><g><title>0x7f2c45fe4529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1040" y="228" width="4" height="15" fill="rgb(238,110,36)"/><text x="1043.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.31%)</title><rect x="1040" y="244" width="4" height="15" fill="rgb(245,84,16)"/><text x="1043.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.31%)</title><rect x="1040" y="260" width="4" height="15" fill="rgb(205,144,21)"/><text x="1043.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.16%)</title><rect x="1042" y="276" width="2" height="15" fill="rgb(228,139,1)"/><text x="1045.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1042" y="292" width="2" height="15" fill="rgb(225,90,42)"/><text x="1045.00" y="302.50"></text></g><g><title>0x7f2c4600d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 3.59%)</title><rect x="1003" y="196" width="43" height="15" fill="rgb(245,179,27)"/><text x="1006.00" y="206.50">0x7f..</text></g><g><title>0x7f2c4600cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1040" y="212" width="6" height="15" fill="rgb(235,74,13)"/><text x="1043.00" y="222.50"></text></g><g><title>0x7f2c45fe45f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1044" y="228" width="2" height="15" fill="rgb(247,22,6)"/><text x="1047.00" y="238.50"></text></g><g><title>0x7f2c45fe42d1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(253,187,4)"/><text x="1047.00" y="254.50"></text></g><g><title>0x7f2c45ffdfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 3.75%)</title><rect x="1003" y="180" width="45" height="15" fill="rgb(211,15,48)"/><text x="1006.00" y="190.50">0x7f..</text></g><g><title>0x7f2c4600d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1046" y="196" width="2" height="15" fill="rgb(230,215,33)"/><text x="1049.00" y="206.50"></text></g><g><title>0x7f2c45fe2178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1046" y="212" width="2" height="15" fill="rgb(215,120,28)"/><text x="1049.00" y="222.50"></text></g><g><title>0x7f2c6b9a8757 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1049" y="212" width="2" height="15" fill="rgb(209,82,26)"/><text x="1052.00" y="222.50"></text></g><g><title>0x7f2c45ffe05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1048" y="180" width="5" height="15" fill="rgb(233,66,9)"/><text x="1051.00" y="190.50"></text></g><g><title>array_take (methods.c) (3 samples, 0.47%)</title><rect x="1048" y="196" width="5" height="15" fill="rgb(230,186,44)"/><text x="1051.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.16%)</title><rect x="1051" y="212" width="2" height="15" fill="rgb(248,50,4)"/><text x="1054.00" y="222.50"></text></g><g><title>0x7f2c45ffe13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1053" y="180" width="2" height="15" fill="rgb(205,68,54)"/><text x="1056.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1053" y="196" width="2" height="15" fill="rgb(245,101,49)"/><text x="1056.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="1053" y="212" width="2" height="15" fill="rgb(235,89,54)"/><text x="1056.00" y="222.50"></text></g><g><title>0x7f2c6abb47c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1053" y="228" width="2" height="15" fill="rgb(229,50,52)"/><text x="1056.00" y="238.50"></text></g><g><title>0x7f2c45ffe14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1055" y="180" width="5" height="15" fill="rgb(221,180,35)"/><text x="1058.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.47%)</title><rect x="1055" y="196" width="5" height="15" fill="rgb(211,17,13)"/><text x="1058.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.47%)</title><rect x="1055" y="212" width="5" height="15" fill="rgb(219,39,15)"/><text x="1058.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.47%)</title><rect x="1055" y="228" width="5" height="15" fill="rgb(247,223,2)"/><text x="1058.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.16%)</title><rect x="1059" y="244" width="1" height="15" fill="rgb(239,118,8)"/><text x="1062.00" y="254.50"></text></g><g><title>0x7f2c6b9a8730 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1060" y="228" width="2" height="15" fill="rgb(252,40,7)"/><text x="1063.00" y="238.50"></text></g><g><title>0x7f2c45ffed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 5.31%)</title><rect x="1001" y="164" width="63" height="15" fill="rgb(249,162,43)"/><text x="1004.00" y="174.50">0x7f2c..</text></g><g><title>0x7f2c45ffe328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.31%)</title><rect x="1060" y="180" width="4" height="15" fill="rgb(247,182,20)"/><text x="1063.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.31%)</title><rect x="1060" y="196" width="4" height="15" fill="rgb(236,140,12)"/><text x="1063.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (2 samples, 0.31%)</title><rect x="1060" y="212" width="4" height="15" fill="rgb(235,112,41)"/><text x="1063.00" y="222.50"></text></g><g><title>0x7f2c6b9a8734 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1062" y="228" width="2" height="15" fill="rgb(207,182,10)"/><text x="1065.00" y="238.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.62%)</title><rect x="1086" y="196" width="8" height="15" fill="rgb(248,23,15)"/><text x="1089.00" y="206.50"></text></g><g><title>0x7f2c6b9a8e7a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1101" y="212" width="2" height="15" fill="rgb(216,76,13)"/><text x="1104.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="1103" y="212" width="5" height="15" fill="rgb(237,9,39)"/><text x="1106.00" y="222.50"></text></g><g><title>0x7f2c6b9a8e7a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1107" y="228" width="1" height="15" fill="rgb(245,156,42)"/><text x="1110.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.16%)</title><rect x="1108" y="212" width="2" height="15" fill="rgb(215,160,28)"/><text x="1111.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 1.56%)</title><rect x="1094" y="196" width="18" height="15" fill="rgb(221,189,46)"/><text x="1097.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="1110" y="212" width="2" height="15" fill="rgb(245,131,36)"/><text x="1113.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="1112" y="196" width="2" height="15" fill="rgb(210,23,14)"/><text x="1115.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (9 samples, 1.41%)</title><rect x="1114" y="196" width="17" height="15" fill="rgb(219,188,26)"/><text x="1117.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.47%)</title><rect x="1125" y="212" width="6" height="15" fill="rgb(217,205,15)"/><text x="1128.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.16%)</title><rect x="1129" y="228" width="2" height="15" fill="rgb(243,18,32)"/><text x="1132.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (41 samples, 6.41%)</title><rect x="1064" y="164" width="76" height="15" fill="rgb(208,62,16)"/><text x="1067.00" y="174.50">_validat..</text></g><g><title>check_array (sklearn/utils/validation.py) (38 samples, 5.94%)</title><rect x="1070" y="180" width="70" height="15" fill="rgb(212,218,52)"/><text x="1073.00" y="190.50">check_a..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.78%)</title><rect x="1131" y="196" width="9" height="15" fill="rgb(242,3,40)"/><text x="1134.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.62%)</title><rect x="1132" y="212" width="8" height="15" fill="rgb(224,181,8)"/><text x="1135.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.16%)</title><rect x="1140" y="164" width="2" height="15" fill="rgb(237,0,25)"/><text x="1143.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.16%)</title><rect x="1140" y="180" width="2" height="15" fill="rgb(219,130,44)"/><text x="1143.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.16%)</title><rect x="1140" y="196" width="2" height="15" fill="rgb(218,47,54)"/><text x="1143.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1140" y="212" width="2" height="15" fill="rgb(208,36,28)"/><text x="1143.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1140" y="228" width="2" height="15" fill="rgb(219,194,10)"/><text x="1143.00" y="238.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.16%)</title><rect x="1140" y="244" width="2" height="15" fill="rgb(222,49,31)"/><text x="1143.00" y="254.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.16%)</title><rect x="1140" y="260" width="2" height="15" fill="rgb(242,13,4)"/><text x="1143.00" y="270.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 0.78%)</title><rect x="1162" y="196" width="9" height="15" fill="rgb(221,209,50)"/><text x="1165.00" y="206.50"></text></g><g><title>0x7f2c6ba70130 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1169" y="212" width="2" height="15" fill="rgb(246,137,38)"/><text x="1172.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 1.88%)</title><rect x="1154" y="180" width="23" height="15" fill="rgb(227,187,6)"/><text x="1157.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.47%)</title><rect x="1171" y="196" width="6" height="15" fill="rgb(214,139,46)"/><text x="1174.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (20 samples, 3.12%)</title><rect x="1142" y="164" width="36" height="15" fill="rgb(234,136,14)"/><text x="1145.00" y="174.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.16%)</title><rect x="1177" y="180" width="1" height="15" fill="rgb(213,173,14)"/><text x="1180.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (103 samples, 16.09%)</title><rect x="996" y="132" width="190" height="15" fill="rgb(209,167,3)"/><text x="999.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_..</text></g><g><title>predict (sklearn/tree/_classes.py) (103 samples, 16.09%)</title><rect x="996" y="148" width="190" height="15" fill="rgb(210,196,50)"/><text x="999.00" y="158.50">predict (sklearn/tree/_c..</text></g><g><title>is_classifier (sklearn/base.py) (4 samples, 0.62%)</title><rect x="1178" y="164" width="8" height="15" fill="rgb(219,43,12)"/><text x="1181.00" y="174.50"></text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (107 samples, 16.72%)</title><rect x="990" y="68" width="198" height="15" fill="rgb(214,206,45)"/><text x="993.00" y="78.50">profile_skl (bench_Decisi..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (107 samples, 16.72%)</title><rect x="990" y="84" width="198" height="15" fill="rgb(234,49,12)"/><text x="993.00" y="94.50">setup_profile (bench_Deci..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (107 samples, 16.72%)</title><rect x="990" y="100" width="198" height="15" fill="rgb(250,155,11)"/><text x="993.00" y="110.50">profile (bench_DecisionTr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 16.41%)</title><rect x="994" y="116" width="194" height="15" fill="rgb(224,50,15)"/><text x="997.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1186" y="132" width="2" height="15" fill="rgb(216,142,29)"/><text x="1189.00" y="142.50"></text></g><g><title>all (640 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(209,26,38)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (640 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(222,214,52)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py) (1 samples, 0.16%)</title><rect x="1188" y="68" width="2" height="15" fill="rgb(239,91,31)"/><text x="1191.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (1 samples, 0.16%)</title><rect x="1188" y="84" width="2" height="15" fill="rgb(221,37,4)"/><text x="1191.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(224,198,16)"/><text x="1191.00" y="110.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.16%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(246,123,25)"/><text x="1191.00" y="126.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.16%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(253,165,11)"/><text x="1191.00" y="142.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(228,82,36)"/><text x="1191.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.16%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(246,154,24)"/><text x="1191.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(252,35,47)"/><text x="1191.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.16%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(239,1,11)"/><text x="1191.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.16%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(230,198,27)"/><text x="1191.00" y="222.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.16%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(236,149,7)"/><text x="1191.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.16%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(216,125,24)"/><text x="1191.00" y="254.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.16%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(250,107,4)"/><text x="1191.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(230,124,15)"/><text x="1191.00" y="286.50"></text></g></g></svg>