<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>declare_namespace (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(249,38,35)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(241,179,36)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(240,171,10)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(245,132,23)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(214,168,28)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(232,42,51)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(244,67,40)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(233,160,32)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(245,194,50)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.27%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(244,82,22)"/><text x="13.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(234,199,26)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(252,171,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(221,6,9)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(232,229,44)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(205,165,35)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(213,116,25)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(229,130,5)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(217,42,23)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(242,111,10)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(249,151,8)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(250,228,9)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(245,144,7)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(208,53,17)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(226,211,2)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(251,167,23)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(205,76,42)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(207,156,44)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(252,157,15)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(245,19,53)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(220,226,42)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(206,106,4)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(205,199,9)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(225,177,40)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(238,130,7)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(228,79,2)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(238,90,40)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(222,139,30)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(228,117,50)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(227,94,52)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(243,44,43)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(228,196,11)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(236,105,47)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(253,88,34)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(217,224,43)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(208,132,35)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(226,91,28)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(249,107,27)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.54%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(233,146,21)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(240,190,41)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.27%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(209,207,32)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(219,97,22)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(241,160,33)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(212,58,37)"/><text x="16.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(211,37,51)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(219,170,37)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(233,124,37)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(235,183,50)"/><text x="16.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.27%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(249,83,11)"/><text x="16.00" y="1054.50"></text></g><g><title>0x7f65eb24cbc0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="13" y="1060" width="3" height="15" fill="rgb(254,138,39)"/><text x="16.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(234,48,45)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(212,185,35)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(219,132,1)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(211,219,31)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(246,225,31)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(226,172,48)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.27%)</title><rect x="16" y="724" width="3" height="15" fill="rgb(220,106,30)"/><text x="19.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="740" width="3" height="15" fill="rgb(226,208,25)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="756" width="3" height="15" fill="rgb(212,115,52)"/><text x="19.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="772" width="3" height="15" fill="rgb(233,59,13)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="788" width="3" height="15" fill="rgb(235,186,4)"/><text x="19.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="804" width="3" height="15" fill="rgb(221,109,9)"/><text x="19.00" y="814.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(218,98,28)"/><text x="19.00" y="830.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(223,84,29)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1492" width="3" height="15" fill="rgb(236,0,27)"/><text x="22.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/equality_constrained_sqp.py) (1 samples, 0.27%)</title><rect x="19" y="1508" width="3" height="15" fill="rgb(217,225,21)"/><text x="22.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1524" width="3" height="15" fill="rgb(219,88,22)"/><text x="22.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1540" width="3" height="15" fill="rgb(252,77,2)"/><text x="22.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="19" y="1556" width="3" height="15" fill="rgb(205,41,52)"/><text x="22.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1572" width="3" height="15" fill="rgb(212,114,3)"/><text x="22.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1588" width="3" height="15" fill="rgb(251,227,34)"/><text x="22.00" y="1598.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="19" y="1604" width="3" height="15" fill="rgb(245,202,34)"/><text x="22.00" y="1614.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="19" y="1620" width="3" height="15" fill="rgb(226,163,13)"/><text x="22.00" y="1630.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (2 samples, 0.54%)</title><rect x="19" y="1220" width="6" height="15" fill="rgb(222,105,38)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1236" width="6" height="15" fill="rgb(242,139,42)"/><text x="22.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1252" width="6" height="15" fill="rgb(222,156,41)"/><text x="22.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1268" width="6" height="15" fill="rgb(217,198,24)"/><text x="22.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="19" y="1284" width="6" height="15" fill="rgb(236,224,50)"/><text x="22.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1300" width="6" height="15" fill="rgb(217,219,12)"/><text x="22.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (2 samples, 0.54%)</title><rect x="19" y="1316" width="6" height="15" fill="rgb(234,3,26)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1332" width="6" height="15" fill="rgb(242,59,4)"/><text x="22.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1348" width="6" height="15" fill="rgb(208,3,33)"/><text x="22.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1364" width="6" height="15" fill="rgb(225,174,18)"/><text x="22.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="19" y="1380" width="6" height="15" fill="rgb(237,22,6)"/><text x="22.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1396" width="6" height="15" fill="rgb(211,220,49)"/><text x="22.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (2 samples, 0.54%)</title><rect x="19" y="1412" width="6" height="15" fill="rgb(221,202,54)"/><text x="22.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1428" width="6" height="15" fill="rgb(229,120,32)"/><text x="22.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1444" width="6" height="15" fill="rgb(219,175,42)"/><text x="22.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="19" y="1460" width="6" height="15" fill="rgb(242,103,52)"/><text x="22.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="19" y="1476" width="6" height="15" fill="rgb(243,194,38)"/><text x="22.00" y="1486.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1492" width="3" height="15" fill="rgb(215,64,0)"/><text x="25.00" y="1502.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1508" width="3" height="15" fill="rgb(209,84,34)"/><text x="25.00" y="1518.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="22" y="1524" width="3" height="15" fill="rgb(233,46,25)"/><text x="25.00" y="1534.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.27%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(247,157,7)"/><text x="25.00" y="1550.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.27%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(253,220,38)"/><text x="25.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="10" y="196" width="19" height="15" fill="rgb(206,113,35)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="10" y="212" width="19" height="15" fill="rgb(228,39,36)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="10" y="228" width="19" height="15" fill="rgb(205,128,44)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="10" y="244" width="19" height="15" fill="rgb(216,7,22)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.62%)</title><rect x="10" y="260" width="19" height="15" fill="rgb(217,214,35)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="10" y="276" width="19" height="15" fill="rgb(211,0,17)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.08%)</title><rect x="16" y="292" width="13" height="15" fill="rgb(213,165,17)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="308" width="13" height="15" fill="rgb(238,53,22)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="324" width="13" height="15" fill="rgb(209,137,10)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="340" width="13" height="15" fill="rgb(235,2,19)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="16" y="356" width="13" height="15" fill="rgb(224,33,32)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="372" width="13" height="15" fill="rgb(224,151,15)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.08%)</title><rect x="16" y="388" width="13" height="15" fill="rgb(254,193,30)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="404" width="13" height="15" fill="rgb(239,90,33)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="420" width="13" height="15" fill="rgb(205,190,15)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="436" width="13" height="15" fill="rgb(221,19,54)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="16" y="452" width="13" height="15" fill="rgb(211,72,19)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="468" width="13" height="15" fill="rgb(233,160,10)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.08%)</title><rect x="16" y="484" width="13" height="15" fill="rgb(252,14,2)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="500" width="13" height="15" fill="rgb(253,15,31)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="516" width="13" height="15" fill="rgb(218,210,11)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="532" width="13" height="15" fill="rgb(241,221,40)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="16" y="548" width="13" height="15" fill="rgb(228,75,20)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="564" width="13" height="15" fill="rgb(209,49,3)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (4 samples, 1.08%)</title><rect x="16" y="580" width="13" height="15" fill="rgb(241,189,6)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="596" width="13" height="15" fill="rgb(254,29,28)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="16" y="612" width="13" height="15" fill="rgb(221,199,47)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="628" width="10" height="15" fill="rgb(217,177,7)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="644" width="10" height="15" fill="rgb(213,119,37)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="660" width="10" height="15" fill="rgb(231,40,46)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.81%)</title><rect x="19" y="676" width="10" height="15" fill="rgb(217,25,30)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="692" width="10" height="15" fill="rgb(237,131,42)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="708" width="10" height="15" fill="rgb(205,141,43)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="724" width="10" height="15" fill="rgb(234,51,7)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="740" width="10" height="15" fill="rgb(234,32,44)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="756" width="10" height="15" fill="rgb(241,190,38)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.81%)</title><rect x="19" y="772" width="10" height="15" fill="rgb(236,116,42)"/><text x="22.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="788" width="10" height="15" fill="rgb(233,92,24)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="804" width="10" height="15" fill="rgb(206,36,46)"/><text x="22.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="820" width="10" height="15" fill="rgb(253,91,29)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="836" width="10" height="15" fill="rgb(244,128,0)"/><text x="22.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="852" width="10" height="15" fill="rgb(244,63,23)"/><text x="22.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="868" width="10" height="15" fill="rgb(225,3,27)"/><text x="22.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="884" width="10" height="15" fill="rgb(239,220,21)"/><text x="22.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (3 samples, 0.81%)</title><rect x="19" y="900" width="10" height="15" fill="rgb(231,17,30)"/><text x="22.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="916" width="10" height="15" fill="rgb(249,72,40)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="932" width="10" height="15" fill="rgb(245,197,23)"/><text x="22.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="948" width="10" height="15" fill="rgb(213,216,12)"/><text x="22.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="964" width="10" height="15" fill="rgb(246,27,25)"/><text x="22.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="980" width="10" height="15" fill="rgb(253,128,7)"/><text x="22.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (3 samples, 0.81%)</title><rect x="19" y="996" width="10" height="15" fill="rgb(241,186,14)"/><text x="22.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1012" width="10" height="15" fill="rgb(235,104,3)"/><text x="22.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1028" width="10" height="15" fill="rgb(247,49,36)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1044" width="10" height="15" fill="rgb(241,159,40)"/><text x="22.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1060" width="10" height="15" fill="rgb(218,216,14)"/><text x="22.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1076" width="10" height="15" fill="rgb(242,80,12)"/><text x="22.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="1092" width="10" height="15" fill="rgb(227,4,0)"/><text x="22.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1108" width="10" height="15" fill="rgb(211,193,29)"/><text x="22.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (3 samples, 0.81%)</title><rect x="19" y="1124" width="10" height="15" fill="rgb(211,215,20)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1140" width="10" height="15" fill="rgb(231,58,52)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1156" width="10" height="15" fill="rgb(249,156,12)"/><text x="22.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1172" width="10" height="15" fill="rgb(242,145,3)"/><text x="22.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="19" y="1188" width="10" height="15" fill="rgb(213,114,44)"/><text x="22.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="19" y="1204" width="10" height="15" fill="rgb(230,133,11)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/optimize.py) (1 samples, 0.27%)</title><rect x="25" y="1220" width="4" height="15" fill="rgb(218,39,27)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1236" width="4" height="15" fill="rgb(254,92,36)"/><text x="28.00" y="1246.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1252" width="4" height="15" fill="rgb(205,210,53)"/><text x="28.00" y="1262.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="25" y="1268" width="4" height="15" fill="rgb(246,142,46)"/><text x="28.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(217,99,53)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(230,106,29)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(252,175,4)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(223,19,33)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(246,217,21)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.27%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(246,66,7)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1220" width="3" height="15" fill="rgb(253,70,5)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1236" width="3" height="15" fill="rgb(233,1,7)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1252" width="3" height="15" fill="rgb(205,21,19)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="29" y="1268" width="3" height="15" fill="rgb(235,126,1)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="29" y="1284" width="3" height="15" fill="rgb(251,155,29)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="29" y="1300" width="3" height="15" fill="rgb(237,20,30)"/><text x="32.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.27%)</title><rect x="29" y="1316" width="3" height="15" fill="rgb(214,164,5)"/><text x="32.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.27%)</title><rect x="29" y="1332" width="3" height="15" fill="rgb(245,134,54)"/><text x="32.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.27%)</title><rect x="29" y="1348" width="3" height="15" fill="rgb(220,166,53)"/><text x="32.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.27%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(248,55,0)"/><text x="32.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.27%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(228,15,30)"/><text x="32.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="484" width="9" height="15" fill="rgb(222,54,39)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="500" width="9" height="15" fill="rgb(236,177,27)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="516" width="9" height="15" fill="rgb(253,159,12)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="532" width="9" height="15" fill="rgb(249,56,19)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="548" width="9" height="15" fill="rgb(241,221,50)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="564" width="9" height="15" fill="rgb(237,140,32)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.81%)</title><rect x="29" y="580" width="9" height="15" fill="rgb(207,19,49)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="596" width="9" height="15" fill="rgb(233,212,38)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="612" width="9" height="15" fill="rgb(211,226,40)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="628" width="9" height="15" fill="rgb(219,88,12)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="644" width="9" height="15" fill="rgb(213,213,20)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="660" width="9" height="15" fill="rgb(222,138,17)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.81%)</title><rect x="29" y="676" width="9" height="15" fill="rgb(251,153,0)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="692" width="9" height="15" fill="rgb(233,98,46)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="708" width="9" height="15" fill="rgb(216,40,49)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="724" width="9" height="15" fill="rgb(253,203,3)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="740" width="9" height="15" fill="rgb(243,78,39)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="756" width="9" height="15" fill="rgb(217,121,48)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.81%)</title><rect x="29" y="772" width="9" height="15" fill="rgb(215,123,40)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="788" width="9" height="15" fill="rgb(250,147,2)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="804" width="9" height="15" fill="rgb(222,207,32)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="820" width="9" height="15" fill="rgb(248,220,53)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="836" width="9" height="15" fill="rgb(254,134,31)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="852" width="9" height="15" fill="rgb(247,82,49)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.81%)</title><rect x="29" y="868" width="9" height="15" fill="rgb(211,160,7)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="884" width="9" height="15" fill="rgb(243,223,33)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="900" width="9" height="15" fill="rgb(246,135,23)"/><text x="32.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="916" width="9" height="15" fill="rgb(236,115,27)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="932" width="9" height="15" fill="rgb(220,186,54)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="948" width="9" height="15" fill="rgb(219,13,11)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="964" width="9" height="15" fill="rgb(223,66,45)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="980" width="9" height="15" fill="rgb(221,221,11)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="996" width="9" height="15" fill="rgb(245,129,10)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.81%)</title><rect x="29" y="1012" width="9" height="15" fill="rgb(214,97,20)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="1028" width="9" height="15" fill="rgb(224,37,17)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="1044" width="9" height="15" fill="rgb(205,20,38)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="1060" width="9" height="15" fill="rgb(252,187,48)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.81%)</title><rect x="29" y="1076" width="9" height="15" fill="rgb(252,97,15)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="29" y="1092" width="9" height="15" fill="rgb(252,44,32)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.81%)</title><rect x="29" y="1108" width="9" height="15" fill="rgb(235,56,19)"/><text x="32.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1124" width="6" height="15" fill="rgb(250,30,14)"/><text x="35.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1140" width="6" height="15" fill="rgb(222,208,28)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1156" width="6" height="15" fill="rgb(229,191,29)"/><text x="35.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1172" width="6" height="15" fill="rgb(207,141,12)"/><text x="35.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1188" width="6" height="15" fill="rgb(248,213,43)"/><text x="35.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="32" y="1204" width="6" height="15" fill="rgb(226,49,31)"/><text x="35.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1220" width="6" height="15" fill="rgb(222,66,21)"/><text x="35.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.54%)</title><rect x="32" y="1236" width="6" height="15" fill="rgb(224,53,20)"/><text x="35.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1252" width="6" height="15" fill="rgb(252,163,34)"/><text x="35.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1268" width="6" height="15" fill="rgb(206,109,46)"/><text x="35.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1284" width="6" height="15" fill="rgb(237,209,20)"/><text x="35.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1300" width="6" height="15" fill="rgb(235,108,44)"/><text x="35.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1316" width="6" height="15" fill="rgb(248,167,16)"/><text x="35.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="32" y="1332" width="6" height="15" fill="rgb(229,173,37)"/><text x="35.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1348" width="6" height="15" fill="rgb(212,56,53)"/><text x="35.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.54%)</title><rect x="32" y="1364" width="6" height="15" fill="rgb(220,104,13)"/><text x="35.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1380" width="6" height="15" fill="rgb(239,141,36)"/><text x="35.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1396" width="6" height="15" fill="rgb(229,216,31)"/><text x="35.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1412" width="6" height="15" fill="rgb(239,38,13)"/><text x="35.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="32" y="1428" width="6" height="15" fill="rgb(236,96,21)"/><text x="35.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="32" y="1444" width="6" height="15" fill="rgb(249,79,39)"/><text x="35.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.54%)</title><rect x="32" y="1460" width="6" height="15" fill="rgb(230,173,45)"/><text x="35.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.54%)</title><rect x="32" y="1476" width="6" height="15" fill="rgb(220,65,44)"/><text x="35.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.54%)</title><rect x="32" y="1492" width="6" height="15" fill="rgb(246,42,10)"/><text x="35.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.54%)</title><rect x="32" y="1508" width="6" height="15" fill="rgb(248,192,20)"/><text x="35.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.54%)</title><rect x="32" y="1524" width="6" height="15" fill="rgb(241,20,37)"/><text x="35.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.54%)</title><rect x="32" y="1540" width="6" height="15" fill="rgb(233,109,40)"/><text x="35.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.54%)</title><rect x="32" y="1556" width="6" height="15" fill="rgb(241,165,47)"/><text x="35.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.54%)</title><rect x="32" y="1572" width="6" height="15" fill="rgb(249,183,0)"/><text x="35.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.27%)</title><rect x="35" y="1588" width="3" height="15" fill="rgb(217,146,15)"/><text x="38.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.27%)</title><rect x="35" y="1604" width="3" height="15" fill="rgb(231,146,37)"/><text x="38.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.27%)</title><rect x="35" y="1620" width="3" height="15" fill="rgb(225,113,4)"/><text x="38.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.27%)</title><rect x="35" y="1636" width="3" height="15" fill="rgb(250,141,28)"/><text x="38.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.27%)</title><rect x="35" y="1652" width="3" height="15" fill="rgb(221,137,39)"/><text x="38.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.27%)</title><rect x="35" y="1668" width="3" height="15" fill="rgb(215,208,38)"/><text x="38.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.08%)</title><rect x="29" y="340" width="12" height="15" fill="rgb(228,101,6)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="356" width="12" height="15" fill="rgb(209,180,45)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="372" width="12" height="15" fill="rgb(233,122,0)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="388" width="12" height="15" fill="rgb(205,182,52)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.08%)</title><rect x="29" y="404" width="12" height="15" fill="rgb(237,109,17)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="420" width="12" height="15" fill="rgb(251,161,3)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.08%)</title><rect x="29" y="436" width="12" height="15" fill="rgb(216,152,33)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="452" width="12" height="15" fill="rgb(253,74,11)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.08%)</title><rect x="29" y="468" width="12" height="15" fill="rgb(213,44,28)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="484" width="3" height="15" fill="rgb(235,165,23)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="500" width="3" height="15" fill="rgb(215,33,43)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="516" width="3" height="15" fill="rgb(245,3,39)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.27%)</title><rect x="38" y="532" width="3" height="15" fill="rgb(237,149,19)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="548" width="3" height="15" fill="rgb(220,25,17)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="564" width="3" height="15" fill="rgb(251,171,53)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="580" width="3" height="15" fill="rgb(225,205,8)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="596" width="3" height="15" fill="rgb(218,61,9)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="612" width="3" height="15" fill="rgb(210,195,3)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.27%)</title><rect x="38" y="628" width="3" height="15" fill="rgb(237,56,11)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="644" width="3" height="15" fill="rgb(244,68,14)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="660" width="3" height="15" fill="rgb(230,153,34)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="676" width="3" height="15" fill="rgb(231,47,10)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="692" width="3" height="15" fill="rgb(248,7,29)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="708" width="3" height="15" fill="rgb(230,184,33)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py) (1 samples, 0.27%)</title><rect x="38" y="724" width="3" height="15" fill="rgb(246,138,41)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="740" width="3" height="15" fill="rgb(240,44,27)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="756" width="3" height="15" fill="rgb(246,12,34)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="38" y="772" width="3" height="15" fill="rgb(219,134,3)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="788" width="3" height="15" fill="rgb(252,215,53)"/><text x="41.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="804" width="3" height="15" fill="rgb(210,41,12)"/><text x="41.00" y="814.50"></text></g><g><title>_check_name_wrapper (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="38" y="820" width="3" height="15" fill="rgb(215,173,17)"/><text x="41.00" y="830.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.27%)</title><rect x="41" y="900" width="3" height="15" fill="rgb(241,160,32)"/><text x="44.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="916" width="3" height="15" fill="rgb(229,175,25)"/><text x="44.00" y="926.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="932" width="3" height="15" fill="rgb(210,118,37)"/><text x="44.00" y="942.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="41" y="948" width="3" height="15" fill="rgb(218,102,52)"/><text x="44.00" y="958.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 1.62%)</title><rect x="29" y="244" width="19" height="15" fill="rgb(206,109,23)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="29" y="260" width="19" height="15" fill="rgb(212,104,22)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="29" y="276" width="19" height="15" fill="rgb(249,80,53)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="29" y="292" width="19" height="15" fill="rgb(212,30,45)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.62%)</title><rect x="29" y="308" width="19" height="15" fill="rgb(224,127,21)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.62%)</title><rect x="29" y="324" width="19" height="15" fill="rgb(251,52,27)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.54%)</title><rect x="41" y="340" width="7" height="15" fill="rgb(214,36,20)"/><text x="44.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="356" width="7" height="15" fill="rgb(254,182,11)"/><text x="44.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="372" width="7" height="15" fill="rgb(226,228,24)"/><text x="44.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="388" width="7" height="15" fill="rgb(225,36,35)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="404" width="7" height="15" fill="rgb(237,66,1)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="420" width="7" height="15" fill="rgb(215,142,10)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="436" width="7" height="15" fill="rgb(238,176,34)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="41" y="452" width="7" height="15" fill="rgb(244,197,2)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="468" width="7" height="15" fill="rgb(254,31,43)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.54%)</title><rect x="41" y="484" width="7" height="15" fill="rgb(252,116,17)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="500" width="7" height="15" fill="rgb(251,114,14)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="516" width="7" height="15" fill="rgb(214,63,21)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="532" width="7" height="15" fill="rgb(229,4,49)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="41" y="548" width="7" height="15" fill="rgb(249,37,13)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="564" width="7" height="15" fill="rgb(216,212,45)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.54%)</title><rect x="41" y="580" width="7" height="15" fill="rgb(211,160,27)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="596" width="7" height="15" fill="rgb(238,215,39)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="612" width="7" height="15" fill="rgb(222,31,1)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="628" width="7" height="15" fill="rgb(208,99,20)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="41" y="644" width="7" height="15" fill="rgb(221,143,9)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="660" width="7" height="15" fill="rgb(211,92,8)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.54%)</title><rect x="41" y="676" width="7" height="15" fill="rgb(247,42,1)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="692" width="7" height="15" fill="rgb(223,131,22)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="708" width="7" height="15" fill="rgb(252,177,1)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="724" width="7" height="15" fill="rgb(207,202,22)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="41" y="740" width="7" height="15" fill="rgb(244,172,6)"/><text x="44.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="756" width="7" height="15" fill="rgb(210,179,17)"/><text x="44.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.54%)</title><rect x="41" y="772" width="7" height="15" fill="rgb(226,119,20)"/><text x="44.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="788" width="7" height="15" fill="rgb(236,113,52)"/><text x="44.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="804" width="7" height="15" fill="rgb(216,126,24)"/><text x="44.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="820" width="7" height="15" fill="rgb(211,126,36)"/><text x="44.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="836" width="7" height="15" fill="rgb(209,4,8)"/><text x="44.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="852" width="7" height="15" fill="rgb(215,227,46)"/><text x="44.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="41" y="868" width="7" height="15" fill="rgb(254,164,27)"/><text x="44.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="41" y="884" width="7" height="15" fill="rgb(236,89,9)"/><text x="44.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.27%)</title><rect x="44" y="900" width="4" height="15" fill="rgb(230,57,28)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="916" width="4" height="15" fill="rgb(218,207,10)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="932" width="4" height="15" fill="rgb(228,161,24)"/><text x="47.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="948" width="4" height="15" fill="rgb(243,147,20)"/><text x="47.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="964" width="4" height="15" fill="rgb(229,92,46)"/><text x="47.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="980" width="4" height="15" fill="rgb(239,137,4)"/><text x="47.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.27%)</title><rect x="44" y="996" width="4" height="15" fill="rgb(248,148,24)"/><text x="47.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1012" width="4" height="15" fill="rgb(207,156,22)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1028" width="4" height="15" fill="rgb(221,111,12)"/><text x="47.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1044" width="4" height="15" fill="rgb(214,152,2)"/><text x="47.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="1060" width="4" height="15" fill="rgb(217,99,53)"/><text x="47.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1076" width="4" height="15" fill="rgb(219,84,37)"/><text x="47.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.27%)</title><rect x="44" y="1092" width="4" height="15" fill="rgb(239,139,11)"/><text x="47.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1108" width="4" height="15" fill="rgb(208,7,22)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1124" width="4" height="15" fill="rgb(231,30,42)"/><text x="47.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1140" width="4" height="15" fill="rgb(245,167,48)"/><text x="47.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="44" y="1156" width="4" height="15" fill="rgb(223,203,44)"/><text x="47.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="44" y="1172" width="4" height="15" fill="rgb(229,17,51)"/><text x="47.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x25519.py) (1 samples, 0.27%)</title><rect x="44" y="1188" width="4" height="15" fill="rgb(215,189,23)"/><text x="47.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.27%)</title><rect x="44" y="1204" width="4" height="15" fill="rgb(253,78,40)"/><text x="47.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.27%)</title><rect x="44" y="1220" width="4" height="15" fill="rgb(251,50,18)"/><text x="47.00" y="1230.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.27%)</title><rect x="44" y="1236" width="4" height="15" fill="rgb(246,153,15)"/><text x="47.00" y="1246.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="44" y="1252" width="4" height="15" fill="rgb(224,145,10)"/><text x="47.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="44" y="1268" width="4" height="15" fill="rgb(230,213,5)"/><text x="47.00" y="1278.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="372" width="3" height="15" fill="rgb(253,119,25)"/><text x="51.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="388" width="3" height="15" fill="rgb(250,38,46)"/><text x="51.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="404" width="3" height="15" fill="rgb(241,223,38)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="420" width="3" height="15" fill="rgb(245,124,28)"/><text x="51.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="436" width="3" height="15" fill="rgb(239,21,22)"/><text x="51.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="452" width="3" height="15" fill="rgb(244,166,15)"/><text x="51.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="468" width="3" height="15" fill="rgb(217,11,54)"/><text x="51.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="484" width="3" height="15" fill="rgb(210,153,7)"/><text x="51.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.27%)</title><rect x="48" y="500" width="3" height="15" fill="rgb(252,64,28)"/><text x="51.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="516" width="3" height="15" fill="rgb(250,187,16)"/><text x="51.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="532" width="3" height="15" fill="rgb(229,170,54)"/><text x="51.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="548" width="3" height="15" fill="rgb(253,27,36)"/><text x="51.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="564" width="3" height="15" fill="rgb(249,147,37)"/><text x="51.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="580" width="3" height="15" fill="rgb(210,157,25)"/><text x="51.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="596" width="3" height="15" fill="rgb(247,177,30)"/><text x="51.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="612" width="3" height="15" fill="rgb(208,71,19)"/><text x="51.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.27%)</title><rect x="48" y="628" width="3" height="15" fill="rgb(206,6,8)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="644" width="3" height="15" fill="rgb(248,65,39)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="660" width="3" height="15" fill="rgb(216,66,45)"/><text x="51.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="676" width="3" height="15" fill="rgb(249,112,27)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="692" width="3" height="15" fill="rgb(250,57,13)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="708" width="3" height="15" fill="rgb(233,175,49)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="724" width="3" height="15" fill="rgb(232,57,41)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="740" width="3" height="15" fill="rgb(231,114,43)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="756" width="3" height="15" fill="rgb(246,179,44)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.27%)</title><rect x="48" y="772" width="3" height="15" fill="rgb(250,106,7)"/><text x="51.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(222,92,7)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(250,0,27)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(238,210,7)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(238,1,8)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(245,56,0)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="868" width="3" height="15" fill="rgb(210,38,19)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="884" width="3" height="15" fill="rgb(215,92,48)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.27%)</title><rect x="48" y="900" width="3" height="15" fill="rgb(217,138,3)"/><text x="51.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(253,144,25)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(253,45,37)"/><text x="51.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(217,226,33)"/><text x="51.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(232,199,0)"/><text x="51.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(245,215,31)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (pickle.py) (1 samples, 0.27%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(219,20,14)"/><text x="51.00" y="1006.50"></text></g><g><title>&lt;listcomp&gt; (pickle.py) (1 samples, 0.27%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(231,41,27)"/><text x="51.00" y="1022.50"></text></g><g><title>match (re.py) (1 samples, 0.27%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(205,56,27)"/><text x="51.00" y="1038.50"></text></g><g><title>_compile (re.py) (1 samples, 0.27%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(222,189,21)"/><text x="51.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="260" width="6" height="15" fill="rgb(223,34,12)"/><text x="51.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="276" width="6" height="15" fill="rgb(210,229,32)"/><text x="51.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="292" width="6" height="15" fill="rgb(220,103,54)"/><text x="51.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="308" width="6" height="15" fill="rgb(216,81,36)"/><text x="51.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="324" width="6" height="15" fill="rgb(246,154,20)"/><text x="51.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.54%)</title><rect x="48" y="340" width="6" height="15" fill="rgb(240,181,9)"/><text x="51.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.54%)</title><rect x="48" y="356" width="6" height="15" fill="rgb(210,215,29)"/><text x="51.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.27%)</title><rect x="51" y="372" width="3" height="15" fill="rgb(225,25,28)"/><text x="54.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="388" width="3" height="15" fill="rgb(224,187,46)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="404" width="3" height="15" fill="rgb(227,47,33)"/><text x="54.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="420" width="3" height="15" fill="rgb(243,111,1)"/><text x="54.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="436" width="3" height="15" fill="rgb(250,219,22)"/><text x="54.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="452" width="3" height="15" fill="rgb(219,201,45)"/><text x="54.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.27%)</title><rect x="51" y="468" width="3" height="15" fill="rgb(231,132,22)"/><text x="54.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="484" width="3" height="15" fill="rgb(245,88,22)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="500" width="3" height="15" fill="rgb(221,126,21)"/><text x="54.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="516" width="3" height="15" fill="rgb(208,95,34)"/><text x="54.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.27%)</title><rect x="51" y="532" width="3" height="15" fill="rgb(206,45,7)"/><text x="54.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="548" width="3" height="15" fill="rgb(232,101,22)"/><text x="54.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_iotools.py) (1 samples, 0.27%)</title><rect x="51" y="564" width="3" height="15" fill="rgb(241,9,51)"/><text x="54.00" y="574.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="51" y="580" width="3" height="15" fill="rgb(208,19,23)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(219,37,19)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(254,92,53)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(246,25,18)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 4.04%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(228,67,33)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(225,95,47)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (15 samples, 4.04%)</title><rect x="10" y="148" width="47" height="15" fill="rgb(209,87,4)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="164" width="47" height="15" fill="rgb(206,189,6)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 4.04%)</title><rect x="10" y="180" width="47" height="15" fill="rgb(229,46,47)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.43%)</title><rect x="29" y="196" width="28" height="15" fill="rgb(219,2,26)"/><text x="32.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.43%)</title><rect x="29" y="212" width="28" height="15" fill="rgb(222,114,7)"/><text x="32.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.43%)</title><rect x="29" y="228" width="28" height="15" fill="rgb(229,217,4)"/><text x="32.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.81%)</title><rect x="48" y="244" width="9" height="15" fill="rgb(240,165,38)"/><text x="51.00" y="254.50"></text></g><g><title>_register_known_types (numpy/core/getlimits.py) (1 samples, 0.27%)</title><rect x="54" y="260" width="3" height="15" fill="rgb(210,77,51)"/><text x="57.00" y="270.50"></text></g><g><title>__init__ (numpy/core/getlimits.py) (1 samples, 0.27%)</title><rect x="54" y="276" width="3" height="15" fill="rgb(210,136,39)"/><text x="57.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (numpy/core/getlimits.py) (1 samples, 0.27%)</title><rect x="54" y="292" width="3" height="15" fill="rgb(206,185,43)"/><text x="57.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (3 samples, 0.81%)</title><rect x="60" y="196" width="10" height="15" fill="rgb(236,217,27)"/><text x="63.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="67" y="212" width="3" height="15" fill="rgb(244,35,33)"/><text x="70.00" y="222.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.27%)</title><rect x="67" y="228" width="3" height="15" fill="rgb(225,66,17)"/><text x="70.00" y="238.50"></text></g><g><title>0x7f65c4c9e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="76" y="356" width="3" height="15" fill="rgb(210,47,35)"/><text x="79.00" y="366.50"></text></g><g><title>0x7f65c4c8ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="76" y="324" width="7" height="15" fill="rgb(225,197,54)"/><text x="79.00" y="334.50"></text></g><g><title>0x7f65c4c9f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="76" y="340" width="7" height="15" fill="rgb(253,43,38)"/><text x="79.00" y="350.50"></text></g><g><title>0x7f65c4c9ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="79" y="356" width="4" height="15" fill="rgb(211,175,49)"/><text x="82.00" y="366.50"></text></g><g><title>0x7f65c4c76529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="79" y="372" width="4" height="15" fill="rgb(250,225,5)"/><text x="82.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.27%)</title><rect x="79" y="388" width="4" height="15" fill="rgb(224,122,41)"/><text x="82.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.27%)</title><rect x="79" y="404" width="4" height="15" fill="rgb(214,12,35)"/><text x="82.00" y="414.50"></text></g><g><title>0x7f65c4c90d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.08%)</title><rect x="76" y="308" width="13" height="15" fill="rgb(246,18,6)"/><text x="79.00" y="318.50"></text></g><g><title>0x7f65c4c9005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="83" y="324" width="6" height="15" fill="rgb(229,27,48)"/><text x="86.00" y="334.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.54%)</title><rect x="83" y="340" width="6" height="15" fill="rgb(249,146,45)"/><text x="86.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="86" y="356" width="3" height="15" fill="rgb(248,37,5)"/><text x="89.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="86" y="372" width="3" height="15" fill="rgb(229,14,22)"/><text x="89.00" y="382.50"></text></g><g><title>_dispatch (joblib/parallel.py) (8 samples, 2.16%)</title><rect x="70" y="196" width="25" height="15" fill="rgb(207,33,39)"/><text x="73.00" y="206.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (8 samples, 2.16%)</title><rect x="70" y="212" width="25" height="15" fill="rgb(220,223,1)"/><text x="73.00" y="222.50">a..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 1.89%)</title><rect x="73" y="228" width="22" height="15" fill="rgb(218,216,27)"/><text x="76.00" y="238.50">_..</text></g><g><title>__call__ (joblib/parallel.py) (7 samples, 1.89%)</title><rect x="73" y="244" width="22" height="15" fill="rgb(254,107,9)"/><text x="76.00" y="254.50">_..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (7 samples, 1.89%)</title><rect x="73" y="260" width="22" height="15" fill="rgb(214,11,32)"/><text x="76.00" y="270.50">&lt;..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (7 samples, 1.89%)</title><rect x="73" y="276" width="22" height="15" fill="rgb(205,153,24)"/><text x="76.00" y="286.50">_..</text></g><g><title>predict (sklearn/tree/_classes.py) (6 samples, 1.62%)</title><rect x="76" y="292" width="19" height="15" fill="rgb(239,226,13)"/><text x="79.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.54%)</title><rect x="89" y="308" width="6" height="15" fill="rgb(218,118,3)"/><text x="92.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.54%)</title><rect x="89" y="324" width="6" height="15" fill="rgb(253,68,2)"/><text x="92.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.27%)</title><rect x="92" y="340" width="3" height="15" fill="rgb(239,20,1)"/><text x="95.00" y="350.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (13 samples, 3.50%)</title><rect x="57" y="68" width="42" height="15" fill="rgb(206,61,3)"/><text x="60.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (13 samples, 3.50%)</title><rect x="57" y="84" width="42" height="15" fill="rgb(237,15,44)"/><text x="60.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (13 samples, 3.50%)</title><rect x="57" y="100" width="42" height="15" fill="rgb(251,87,54)"/><text x="60.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 3.50%)</title><rect x="57" y="116" width="42" height="15" fill="rgb(242,85,31)"/><text x="60.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 3.50%)</title><rect x="57" y="132" width="42" height="15" fill="rgb(254,192,15)"/><text x="60.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (13 samples, 3.50%)</title><rect x="57" y="148" width="42" height="15" fill="rgb(242,109,13)"/><text x="60.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py) (13 samples, 3.50%)</title><rect x="57" y="164" width="42" height="15" fill="rgb(217,156,0)"/><text x="60.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (13 samples, 3.50%)</title><rect x="57" y="180" width="42" height="15" fill="rgb(220,170,22)"/><text x="60.00" y="190.50">dis..</text></g><g><title>put (queue.py) (1 samples, 0.27%)</title><rect x="95" y="196" width="4" height="15" fill="rgb(223,44,14)"/><text x="98.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.27%)</title><rect x="95" y="212" width="4" height="15" fill="rgb(213,13,38)"/><text x="98.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.27%)</title><rect x="95" y="228" width="4" height="15" fill="rgb(207,167,15)"/><text x="98.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.27%)</title><rect x="95" y="244" width="4" height="15" fill="rgb(251,46,17)"/><text x="98.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.27%)</title><rect x="95" y="260" width="4" height="15" fill="rgb(221,99,31)"/><text x="98.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="95" y="276" width="4" height="15" fill="rgb(253,190,24)"/><text x="98.00" y="286.50"></text></g><g><title>0x7f65ab28aff9 (?) (1 samples, 0.27%)</title><rect x="99" y="212" width="3" height="15" fill="rgb(236,106,17)"/><text x="102.00" y="222.50"></text></g><g><title>0x7f65ab285ef6 (?) (1 samples, 0.27%)</title><rect x="99" y="228" width="3" height="15" fill="rgb(247,128,29)"/><text x="102.00" y="238.50"></text></g><g><title>0x7f65ab27a962 (?) (1 samples, 0.27%)</title><rect x="99" y="244" width="3" height="15" fill="rgb(224,208,40)"/><text x="102.00" y="254.50"></text></g><g><title>0x7f65ab2ae7a7 (?) (1 samples, 0.27%)</title><rect x="99" y="260" width="3" height="15" fill="rgb(252,77,44)"/><text x="102.00" y="270.50"></text></g><g><title>0x7f65ab2ae379 (?) (1 samples, 0.27%)</title><rect x="99" y="276" width="3" height="15" fill="rgb(223,114,28)"/><text x="102.00" y="286.50"></text></g><g><title>0x7f65ab70c8b8 (?) (1 samples, 0.27%)</title><rect x="99" y="292" width="3" height="15" fill="rgb(210,106,23)"/><text x="102.00" y="302.50"></text></g><g><title>0x7f65ab70ac7f (?) (1 samples, 0.27%)</title><rect x="99" y="308" width="3" height="15" fill="rgb(237,46,51)"/><text x="102.00" y="318.50"></text></g><g><title>0x7f65ab71d99c (?) (1 samples, 0.27%)</title><rect x="99" y="324" width="3" height="15" fill="rgb(247,1,8)"/><text x="102.00" y="334.50"></text></g><g><title>0x7f65ab444dc2 (?) (1 samples, 0.27%)</title><rect x="99" y="340" width="3" height="15" fill="rgb(213,64,26)"/><text x="102.00" y="350.50"></text></g><g><title>0x7f65ab444557 (?) (1 samples, 0.27%)</title><rect x="99" y="356" width="3" height="15" fill="rgb(209,148,29)"/><text x="102.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 31.54%)</title><rect x="105" y="356" width="372" height="15" fill="rgb(213,216,2)"/><text x="108.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Pro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (120 samples, 32.35%)</title><rect x="99" y="132" width="381" height="15" fill="rgb(254,99,26)"/><text x="102.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (120 samples, 32.35%)</title><rect x="99" y="148" width="381" height="15" fill="rgb(241,8,23)"/><text x="102.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (120 samples, 32.35%)</title><rect x="99" y="164" width="381" height="15" fill="rgb(226,169,54)"/><text x="102.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (120 samples, 32.35%)</title><rect x="99" y="180" width="381" height="15" fill="rgb(240,64,33)"/><text x="102.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (120 samples, 32.35%)</title><rect x="99" y="196" width="381" height="15" fill="rgb(208,49,24)"/><text x="102.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="212" width="378" height="15" fill="rgb(209,33,27)"/><text x="105.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="228" width="378" height="15" fill="rgb(226,73,1)"/><text x="105.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="244" width="378" height="15" fill="rgb(222,152,17)"/><text x="105.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="260" width="378" height="15" fill="rgb(227,186,24)"/><text x="105.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="276" width="378" height="15" fill="rgb(224,217,11)"/><text x="105.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/cap..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="292" width="378" height="15" fill="rgb(252,107,52)"/><text x="105.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="308" width="378" height="15" fill="rgb(219,11,10)"/><text x="105.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/c..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="324" width="378" height="15" fill="rgb(238,34,19)"/><text x="105.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxrunti..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (119 samples, 32.08%)</title><rect x="102" y="340" width="378" height="15" fill="rgb(221,7,13)"/><text x="105.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Comp..</text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.27%)</title><rect x="477" y="356" width="3" height="15" fill="rgb(240,207,20)"/><text x="480.00" y="366.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (121 samples, 32.61%)</title><rect x="99" y="68" width="384" height="15" fill="rgb(242,7,37)"/><text x="102.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_r..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (121 samples, 32.61%)</title><rect x="99" y="84" width="384" height="15" fill="rgb(229,179,10)"/><text x="102.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (121 samples, 32.61%)</title><rect x="99" y="100" width="384" height="15" fill="rgb(207,189,21)"/><text x="102.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (121 samples, 32.61%)</title><rect x="99" y="116" width="384" height="15" fill="rgb(213,185,14)"/><text x="102.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.27%)</title><rect x="480" y="132" width="3" height="15" fill="rgb(227,135,31)"/><text x="483.00" y="142.50"></text></g><g><title>0x7f65abd2554f (?) (1 samples, 0.27%)</title><rect x="483" y="244" width="4" height="15" fill="rgb(236,45,9)"/><text x="486.00" y="254.50"></text></g><g><title>0x7f65abd2b65e (?) (1 samples, 0.27%)</title><rect x="483" y="260" width="4" height="15" fill="rgb(221,18,36)"/><text x="486.00" y="270.50"></text></g><g><title>0x7f65abd2b50f (?) (1 samples, 0.27%)</title><rect x="483" y="276" width="4" height="15" fill="rgb(218,77,34)"/><text x="486.00" y="286.50"></text></g><g><title>0x7f65abd31d6c (?) (1 samples, 0.27%)</title><rect x="483" y="292" width="4" height="15" fill="rgb(217,104,21)"/><text x="486.00" y="302.50"></text></g><g><title>0x7f65b5208cff (?) (1 samples, 0.27%)</title><rect x="483" y="308" width="4" height="15" fill="rgb(242,187,4)"/><text x="486.00" y="318.50"></text></g><g><title>0x7f65abd1627c (?) (1 samples, 0.27%)</title><rect x="483" y="324" width="4" height="15" fill="rgb(206,229,33)"/><text x="486.00" y="334.50"></text></g><g><title>0x7f65abd155d0 (?) (1 samples, 0.27%)</title><rect x="483" y="340" width="4" height="15" fill="rgb(215,215,13)"/><text x="486.00" y="350.50"></text></g><g><title>0x7f65b5213eab (libgomp.so.1.0.0) (2 samples, 0.54%)</title><rect x="487" y="484" width="6" height="15" fill="rgb(226,196,14)"/><text x="490.00" y="494.50"></text></g><g><title>0x7f65b5212ab9 (libgomp.so.1.0.0) (3 samples, 0.81%)</title><rect x="487" y="468" width="9" height="15" fill="rgb(227,129,50)"/><text x="490.00" y="478.50"></text></g><g><title>0x7f65b5213ead (libgomp.so.1.0.0) (1 samples, 0.27%)</title><rect x="493" y="484" width="3" height="15" fill="rgb(205,64,43)"/><text x="496.00" y="494.50"></text></g><g><title>0x7f65b5211daa (libgomp.so.1.0.0) (1 samples, 0.27%)</title><rect x="496" y="484" width="3" height="15" fill="rgb(207,208,34)"/><text x="499.00" y="494.50"></text></g><g><title>0x7f65b5213cf9 (libgomp.so.1.0.0) (1 samples, 0.27%)</title><rect x="496" y="500" width="3" height="15" fill="rgb(246,209,14)"/><text x="499.00" y="510.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (2 samples, 0.54%)</title><rect x="534" y="564" width="7" height="15" fill="rgb(252,192,20)"/><text x="537.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (2 samples, 0.54%)</title><rect x="534" y="580" width="7" height="15" fill="rgb(217,92,45)"/><text x="537.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (2 samples, 0.54%)</title><rect x="534" y="596" width="7" height="15" fill="rgb(238,62,28)"/><text x="537.00" y="606.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (10 samples, 2.70%)</title><rect x="534" y="532" width="32" height="15" fill="rgb(235,144,11)"/><text x="537.00" y="542.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (10 samples, 2.70%)</title><rect x="534" y="548" width="32" height="15" fill="rgb(222,114,22)"/><text x="537.00" y="558.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (8 samples, 2.16%)</title><rect x="541" y="564" width="25" height="15" fill="rgb(239,142,52)"/><text x="544.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (8 samples, 2.16%)</title><rect x="541" y="580" width="25" height="15" fill="rgb(234,125,0)"/><text x="544.00" y="590.50">s..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (27 samples, 7.28%)</title><rect x="483" y="68" width="86" height="15" fill="rgb(210,93,33)"/><text x="486.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (27 samples, 7.28%)</title><rect x="483" y="84" width="86" height="15" fill="rgb(224,197,30)"/><text x="486.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (27 samples, 7.28%)</title><rect x="483" y="100" width="86" height="15" fill="rgb(252,69,0)"/><text x="486.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (27 samples, 7.28%)</title><rect x="483" y="116" width="86" height="15" fill="rgb(237,88,29)"/><text x="486.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (27 samples, 7.28%)</title><rect x="483" y="132" width="86" height="15" fill="rgb(206,161,13)"/><text x="486.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (27 samples, 7.28%)</title><rect x="483" y="148" width="86" height="15" fill="rgb(225,225,37)"/><text x="486.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (27 samples, 7.28%)</title><rect x="483" y="164" width="86" height="15" fill="rgb(245,100,42)"/><text x="486.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (27 samples, 7.28%)</title><rect x="483" y="180" width="86" height="15" fill="rgb(251,85,45)"/><text x="486.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 7.28%)</title><rect x="483" y="196" width="86" height="15" fill="rgb(238,57,5)"/><text x="486.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (27 samples, 7.28%)</title><rect x="483" y="212" width="86" height="15" fill="rgb(207,110,39)"/><text x="486.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (27 samples, 7.28%)</title><rect x="483" y="228" width="86" height="15" fill="rgb(208,87,5)"/><text x="486.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (26 samples, 7.01%)</title><rect x="487" y="244" width="82" height="15" fill="rgb(217,89,1)"/><text x="490.00" y="254.50">pybind11:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (26 samples, 7.01%)</title><rect x="487" y="260" width="82" height="15" fill="rgb(232,133,46)"/><text x="490.00" y="270.50">void pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (26 samples, 7.01%)</title><rect x="487" y="276" width="82" height="15" fill="rgb(207,163,52)"/><text x="490.00" y="286.50">void pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (26 samples, 7.01%)</title><rect x="487" y="292" width="82" height="15" fill="rgb(219,34,26)"/><text x="490.00" y="302.50">pybind11:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (26 samples, 7.01%)</title><rect x="487" y="308" width="82" height="15" fill="rgb(235,179,20)"/><text x="490.00" y="318.50">pybind11:..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (26 samples, 7.01%)</title><rect x="487" y="324" width="82" height="15" fill="rgb(216,32,13)"/><text x="490.00" y="334.50">pybind11:..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (26 samples, 7.01%)</title><rect x="487" y="340" width="82" height="15" fill="rgb(222,108,42)"/><text x="490.00" y="350.50">pybind11:..</text></g><g><title>pybind11::array::~array (numpy.h) (26 samples, 7.01%)</title><rect x="487" y="356" width="82" height="15" fill="rgb(237,79,48)"/><text x="490.00" y="366.50">pybind11:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (26 samples, 7.01%)</title><rect x="487" y="372" width="82" height="15" fill="rgb(224,191,2)"/><text x="490.00" y="382.50">pybind11:..</text></g><g><title>pybind11::object::~object (pytypes.h) (26 samples, 7.01%)</title><rect x="487" y="388" width="82" height="15" fill="rgb(242,183,48)"/><text x="490.00" y="398.50">pybind11:..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (26 samples, 7.01%)</title><rect x="487" y="404" width="82" height="15" fill="rgb(216,86,49)"/><text x="490.00" y="414.50">pybind11:..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (26 samples, 7.01%)</title><rect x="487" y="420" width="82" height="15" fill="rgb(239,57,14)"/><text x="490.00" y="430.50">RuntimeTr..</text></g><g><title>pybind11::array::size (numpy.h) (26 samples, 7.01%)</title><rect x="487" y="436" width="82" height="15" fill="rgb(205,104,48)"/><text x="490.00" y="446.50">pybind11:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (26 samples, 7.01%)</title><rect x="487" y="452" width="82" height="15" fill="rgb(220,48,30)"/><text x="490.00" y="462.50">std::accu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (23 samples, 6.20%)</title><rect x="496" y="468" width="73" height="15" fill="rgb(236,120,6)"/><text x="499.00" y="478.50">GOMP_par..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (22 samples, 5.93%)</title><rect x="499" y="484" width="70" height="15" fill="rgb(252,51,24)"/><text x="502.00" y="494.50">Runtime..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (21 samples, 5.66%)</title><rect x="502" y="500" width="67" height="15" fill="rgb(217,31,23)"/><text x="505.00" y="510.50">std::ve..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (21 samples, 5.66%)</title><rect x="502" y="516" width="67" height="15" fill="rgb(251,160,50)"/><text x="505.00" y="526.50">Runtime..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.27%)</title><rect x="566" y="532" width="3" height="15" fill="rgb(217,153,31)"/><text x="569.00" y="542.50"></text></g><g><title>update_wrapper (functools.py) (7 samples, 1.89%)</title><rect x="646" y="228" width="22" height="15" fill="rgb(239,19,20)"/><text x="649.00" y="238.50">u..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (11 samples, 2.96%)</title><rect x="642" y="196" width="35" height="15" fill="rgb(208,186,54)"/><text x="645.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py) (10 samples, 2.70%)</title><rect x="646" y="212" width="31" height="15" fill="rgb(211,186,13)"/><text x="649.00" y="222.50">de..</text></g><g><title>wraps (functools.py) (3 samples, 0.81%)</title><rect x="668" y="228" width="9" height="15" fill="rgb(230,169,21)"/><text x="671.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.81%)</title><rect x="677" y="196" width="10" height="15" fill="rgb(246,57,46)"/><text x="680.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="706" y="228" width="13" height="15" fill="rgb(249,147,6)"/><text x="709.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.27%)</title><rect x="716" y="244" width="3" height="15" fill="rgb(230,73,23)"/><text x="719.00" y="254.50"></text></g><g><title>0x7f65c4c7fd11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="779" y="340" width="3" height="15" fill="rgb(214,162,27)"/><text x="782.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.27%)</title><rect x="782" y="372" width="4" height="15" fill="rgb(250,31,30)"/><text x="785.00" y="382.50"></text></g><g><title>0x7f65c4c8ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="779" y="324" width="10" height="15" fill="rgb(248,21,38)"/><text x="782.00" y="334.50"></text></g><g><title>0x7f65c4c7fd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="782" y="340" width="7" height="15" fill="rgb(205,4,33)"/><text x="785.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.54%)</title><rect x="782" y="356" width="7" height="15" fill="rgb(251,8,23)"/><text x="785.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="786" y="372" width="3" height="15" fill="rgb(247,125,3)"/><text x="789.00" y="382.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.27%)</title><rect x="786" y="388" width="3" height="15" fill="rgb(212,63,49)"/><text x="789.00" y="398.50"></text></g><g><title>0x7f65c4c8ff81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="789" y="324" width="3" height="15" fill="rgb(249,87,48)"/><text x="792.00" y="334.50"></text></g><g><title>0x7f65c4c9e225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="792" y="356" width="9" height="15" fill="rgb(250,146,32)"/><text x="795.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 0.81%)</title><rect x="792" y="372" width="9" height="15" fill="rgb(241,53,12)"/><text x="795.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (3 samples, 0.81%)</title><rect x="792" y="388" width="9" height="15" fill="rgb(230,124,32)"/><text x="795.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (2 samples, 0.54%)</title><rect x="795" y="404" width="6" height="15" fill="rgb(232,112,44)"/><text x="798.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.27%)</title><rect x="798" y="420" width="3" height="15" fill="rgb(207,74,34)"/><text x="801.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.27%)</title><rect x="798" y="436" width="3" height="15" fill="rgb(229,136,26)"/><text x="801.00" y="446.50"></text></g><g><title>0x7f65c4c78228 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="805" y="404" width="3" height="15" fill="rgb(219,199,28)"/><text x="808.00" y="414.50"></text></g><g><title>0x7f65c4c9e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="801" y="356" width="10" height="15" fill="rgb(237,90,44)"/><text x="804.00" y="366.50"></text></g><g><title>0x7f65c4c82d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="801" y="372" width="10" height="15" fill="rgb(237,39,45)"/><text x="804.00" y="382.50"></text></g><g><title>0x7f65c4c82666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="801" y="388" width="10" height="15" fill="rgb(244,147,51)"/><text x="804.00" y="398.50"></text></g><g><title>0x7f65c4c782fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="808" y="404" width="3" height="15" fill="rgb(221,103,42)"/><text x="811.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.27%)</title><rect x="808" y="420" width="3" height="15" fill="rgb(216,119,0)"/><text x="811.00" y="430.50"></text></g><g><title>0x7f65c4c9e2fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="811" y="356" width="3" height="15" fill="rgb(227,114,2)"/><text x="814.00" y="366.50"></text></g><g><title>0x7f65c4c9e53e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="814" y="356" width="3" height="15" fill="rgb(230,106,6)"/><text x="817.00" y="366.50"></text></g><g><title>0x7f65eb262757 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="821" y="388" width="3" height="15" fill="rgb(218,121,20)"/><text x="824.00" y="398.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="824" y="388" width="3" height="15" fill="rgb(223,73,5)"/><text x="827.00" y="398.50"></text></g><g><title>0x7f65ea46f970 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="827" y="468" width="3" height="15" fill="rgb(238,96,29)"/><text x="830.00" y="478.50"></text></g><g><title>0x7f65eb24ddb0 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="830" y="484" width="3" height="15" fill="rgb(207,64,23)"/><text x="833.00" y="494.50"></text></g><g><title>0x7f65eb24ddb4 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="833" y="484" width="3" height="15" fill="rgb(241,28,12)"/><text x="836.00" y="494.50"></text></g><g><title>0x7f65eb24e700 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="836" y="484" width="4" height="15" fill="rgb(226,38,31)"/><text x="839.00" y="494.50"></text></g><g><title>0x7f65eb24bad5 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="836" y="500" width="4" height="15" fill="rgb(225,66,30)"/><text x="839.00" y="510.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (7 samples, 1.89%)</title><rect x="827" y="388" width="22" height="15" fill="rgb(205,115,6)"/><text x="830.00" y="398.50">n..</text></g><g><title>PyArray_Zeros (ctors.c) (7 samples, 1.89%)</title><rect x="827" y="404" width="22" height="15" fill="rgb(222,88,51)"/><text x="830.00" y="414.50">P..</text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (7 samples, 1.89%)</title><rect x="827" y="420" width="22" height="15" fill="rgb(219,94,17)"/><text x="830.00" y="430.50">P..</text></g><g><title>npy_alloc_cache_zero (alloc.c) (7 samples, 1.89%)</title><rect x="827" y="436" width="22" height="15" fill="rgb(242,5,40)"/><text x="830.00" y="446.50">n..</text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (7 samples, 1.89%)</title><rect x="827" y="452" width="22" height="15" fill="rgb(216,12,37)"/><text x="830.00" y="462.50">P..</text></g><g><title>__libc_calloc (libc-2.29.so) (6 samples, 1.62%)</title><rect x="830" y="468" width="19" height="15" fill="rgb(231,193,18)"/><text x="833.00" y="478.50"></text></g><g><title>0x7f65eb26d103 (libc-2.29.so) (3 samples, 0.81%)</title><rect x="840" y="484" width="9" height="15" fill="rgb(241,167,28)"/><text x="843.00" y="494.50"></text></g><g><title>0x7f65c4c9e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 3.23%)</title><rect x="817" y="356" width="39" height="15" fill="rgb(249,199,44)"/><text x="820.00" y="366.50">0x7..</text></g><g><title>array_zeros (multiarraymodule.c) (12 samples, 3.23%)</title><rect x="817" y="372" width="39" height="15" fill="rgb(247,13,21)"/><text x="820.00" y="382.50">arr..</text></g><g><title>unicode_eq (python3.7) (2 samples, 0.54%)</title><rect x="849" y="388" width="7" height="15" fill="rgb(217,103,31)"/><text x="852.00" y="398.50"></text></g><g><title>0x7f65eb32a130 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="852" y="404" width="4" height="15" fill="rgb(221,59,49)"/><text x="855.00" y="414.50"></text></g><g><title>0x7f65c4c9e684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="856" y="356" width="3" height="15" fill="rgb(222,173,20)"/><text x="859.00" y="366.50"></text></g><g><title>0x7f65c4c9e6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="859" y="356" width="3" height="15" fill="rgb(221,157,23)"/><text x="862.00" y="366.50"></text></g><g><title>0x7f65c4c9e6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.08%)</title><rect x="862" y="356" width="13" height="15" fill="rgb(242,32,52)"/><text x="865.00" y="366.50"></text></g><g><title>0x7f65c4c9e6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="875" y="356" width="3" height="15" fill="rgb(222,117,39)"/><text x="878.00" y="366.50"></text></g><g><title>0x7f65c4c9e6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.62%)</title><rect x="878" y="356" width="19" height="15" fill="rgb(235,57,33)"/><text x="881.00" y="366.50"></text></g><g><title>0x7f65c4c9e6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="897" y="356" width="3" height="15" fill="rgb(238,49,48)"/><text x="900.00" y="366.50"></text></g><g><title>0x7f65c4c9e6cc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="900" y="356" width="3" height="15" fill="rgb(222,58,51)"/><text x="903.00" y="366.50"></text></g><g><title>0x7f65c4c9e6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="903" y="356" width="3" height="15" fill="rgb(216,105,31)"/><text x="906.00" y="366.50"></text></g><g><title>0x7f65c4c9e7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="906" y="356" width="4" height="15" fill="rgb(234,111,27)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f65c4c9e7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="910" y="356" width="3" height="15" fill="rgb(249,47,32)"/><text x="913.00" y="366.50"></text></g><g><title>0x7f65c4c9e92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="913" y="356" width="3" height="15" fill="rgb(237,46,13)"/><text x="916.00" y="366.50"></text></g><g><title>0x7f65c4c73a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="913" y="372" width="3" height="15" fill="rgb(205,6,23)"/><text x="916.00" y="382.50"></text></g><g><title>0x7f65c4c9f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 11.05%)</title><rect x="792" y="340" width="130" height="15" fill="rgb(243,195,11)"/><text x="795.00" y="350.50">0x7f65c4c9f405 (..</text></g><g><title>0x7f65c4c9ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="916" y="356" width="6" height="15" fill="rgb(211,194,46)"/><text x="919.00" y="366.50"></text></g><g><title>0x7f65c4c76529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="916" y="372" width="6" height="15" fill="rgb(241,115,53)"/><text x="919.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.54%)</title><rect x="916" y="388" width="6" height="15" fill="rgb(218,111,51)"/><text x="919.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.54%)</title><rect x="916" y="404" width="6" height="15" fill="rgb(228,204,53)"/><text x="919.00" y="414.50"></text></g><g><title>0x7f65c4c8ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (42 samples, 11.32%)</title><rect x="792" y="324" width="134" height="15" fill="rgb(209,85,0)"/><text x="795.00" y="334.50">0x7f65c4c8ffa6 (..</text></g><g><title>0x7f65c4c9f540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="922" y="340" width="4" height="15" fill="rgb(241,137,41)"/><text x="925.00" y="350.50"></text></g><g><title>0x7f65c4c742f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="922" y="356" width="4" height="15" fill="rgb(212,10,22)"/><text x="925.00" y="366.50"></text></g><g><title>0x7f65c4c734f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="922" y="372" width="4" height="15" fill="rgb(221,36,6)"/><text x="925.00" y="382.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.27%)</title><rect x="926" y="356" width="3" height="15" fill="rgb(215,4,10)"/><text x="929.00" y="366.50"></text></g><g><title>0x7f65c4c9005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.81%)</title><rect x="926" y="324" width="9" height="15" fill="rgb(236,123,29)"/><text x="929.00" y="334.50"></text></g><g><title>array_take (methods.c) (3 samples, 0.81%)</title><rect x="926" y="340" width="9" height="15" fill="rgb(223,75,8)"/><text x="929.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.54%)</title><rect x="929" y="356" width="6" height="15" fill="rgb(252,150,38)"/><text x="932.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.54%)</title><rect x="929" y="372" width="6" height="15" fill="rgb(220,43,17)"/><text x="932.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="932" y="388" width="3" height="15" fill="rgb(242,207,53)"/><text x="935.00" y="398.50"></text></g><g><title>0x7f65c4c9013a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="935" y="324" width="3" height="15" fill="rgb(209,18,12)"/><text x="938.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.27%)</title><rect x="935" y="340" width="3" height="15" fill="rgb(253,210,19)"/><text x="938.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.27%)</title><rect x="935" y="356" width="3" height="15" fill="rgb(249,109,41)"/><text x="938.00" y="366.50"></text></g><g><title>0x7f65c4c9014f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.54%)</title><rect x="938" y="324" width="7" height="15" fill="rgb(224,31,48)"/><text x="941.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.54%)</title><rect x="938" y="340" width="7" height="15" fill="rgb(233,41,1)"/><text x="941.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="941" y="356" width="4" height="15" fill="rgb(247,114,25)"/><text x="944.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.27%)</title><rect x="941" y="372" width="4" height="15" fill="rgb(221,37,42)"/><text x="944.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.27%)</title><rect x="941" y="388" width="4" height="15" fill="rgb(243,180,6)"/><text x="944.00" y="398.50"></text></g><g><title>0x7f65eb24ca38 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="941" y="404" width="4" height="15" fill="rgb(238,33,40)"/><text x="944.00" y="414.50"></text></g><g><title>0x7f65c4c9015d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="945" y="324" width="3" height="15" fill="rgb(212,5,37)"/><text x="948.00" y="334.50"></text></g><g><title>0x7f65c4c90d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (54 samples, 14.56%)</title><rect x="779" y="308" width="172" height="15" fill="rgb(246,85,47)"/><text x="782.00" y="318.50">0x7f65c4c90d2e (sklear..</text></g><g><title>0x7f65c4c9018f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(251,59,6)"/><text x="951.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.27%)</title><rect x="951" y="308" width="3" height="15" fill="rgb(243,216,43)"/><text x="954.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.27%)</title><rect x="957" y="324" width="3" height="15" fill="rgb(226,125,11)"/><text x="960.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.27%)</title><rect x="957" y="340" width="3" height="15" fill="rgb(236,182,12)"/><text x="960.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="957" y="356" width="3" height="15" fill="rgb(221,226,6)"/><text x="960.00" y="366.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.27%)</title><rect x="957" y="372" width="3" height="15" fill="rgb(245,167,12)"/><text x="960.00" y="382.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.27%)</title><rect x="957" y="388" width="3" height="15" fill="rgb(252,107,15)"/><text x="960.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.27%)</title><rect x="957" y="404" width="3" height="15" fill="rgb(252,198,34)"/><text x="960.00" y="414.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.81%)</title><rect x="954" y="308" width="10" height="15" fill="rgb(244,93,23)"/><text x="957.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.27%)</title><rect x="960" y="324" width="4" height="15" fill="rgb(227,135,12)"/><text x="963.00" y="334.50"></text></g><g><title>0x7f65eb26d120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="980" y="340" width="3" height="15" fill="rgb(245,78,30)"/><text x="983.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.35%)</title><rect x="983" y="340" width="16" height="15" fill="rgb(225,198,38)"/><text x="986.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (78 samples, 21.02%)</title><rect x="760" y="292" width="248" height="15" fill="rgb(252,129,0)"/><text x="763.00" y="302.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 3.77%)</title><rect x="964" y="308" width="44" height="15" fill="rgb(247,131,3)"/><text x="967.00" y="318.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (11 samples, 2.96%)</title><rect x="973" y="324" width="35" height="15" fill="rgb(240,108,8)"/><text x="976.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.81%)</title><rect x="999" y="340" width="9" height="15" fill="rgb(233,201,33)"/><text x="1002.00" y="350.50"></text></g><g><title>0x7f65eb204760 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1008" y="404" width="3" height="15" fill="rgb(222,226,33)"/><text x="1011.00" y="414.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.54%)</title><rect x="1008" y="372" width="7" height="15" fill="rgb(221,64,16)"/><text x="1011.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.54%)</title><rect x="1008" y="388" width="7" height="15" fill="rgb(206,40,45)"/><text x="1011.00" y="398.50"></text></g><g><title>0x7f65eb2047a5 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1011" y="404" width="4" height="15" fill="rgb(228,163,26)"/><text x="1014.00" y="414.50"></text></g><g><title>0x7f65eb204a19 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1011" y="420" width="4" height="15" fill="rgb(205,99,5)"/><text x="1014.00" y="430.50"></text></g><g><title>diophantine_sort_A (mem_overlap.c) (1 samples, 0.27%)</title><rect x="1011" y="436" width="4" height="15" fill="rgb(246,143,16)"/><text x="1014.00" y="446.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 1.08%)</title><rect x="1008" y="340" width="13" height="15" fill="rgb(249,69,2)"/><text x="1011.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 1.08%)</title><rect x="1008" y="356" width="13" height="15" fill="rgb(253,83,41)"/><text x="1011.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.54%)</title><rect x="1015" y="372" width="6" height="15" fill="rgb(208,217,16)"/><text x="1018.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.54%)</title><rect x="1015" y="388" width="6" height="15" fill="rgb(247,6,23)"/><text x="1018.00" y="398.50"></text></g><g><title>gt_128 (npy_extint128.h) (1 samples, 0.27%)</title><rect x="1018" y="404" width="3" height="15" fill="rgb(239,193,15)"/><text x="1021.00" y="414.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (91 samples, 24.53%)</title><rect x="738" y="260" width="289" height="15" fill="rgb(246,40,38)"/><text x="741.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (89 samples, 23.99%)</title><rect x="744" y="276" width="283" height="15" fill="rgb(251,59,31)"/><text x="747.00" y="286.50">_accumulate_prediction (sklearn/ensem..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 1.62%)</title><rect x="1008" y="292" width="19" height="15" fill="rgb(250,104,2)"/><text x="1011.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.62%)</title><rect x="1008" y="308" width="19" height="15" fill="rgb(244,38,17)"/><text x="1011.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 1.62%)</title><rect x="1008" y="324" width="19" height="15" fill="rgb(240,12,21)"/><text x="1011.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.54%)</title><rect x="1021" y="340" width="6" height="15" fill="rgb(235,57,42)"/><text x="1024.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.54%)</title><rect x="1021" y="356" width="6" height="15" fill="rgb(231,156,28)"/><text x="1024.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.54%)</title><rect x="1021" y="372" width="6" height="15" fill="rgb(223,149,10)"/><text x="1024.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.27%)</title><rect x="1024" y="388" width="3" height="15" fill="rgb(254,78,44)"/><text x="1027.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.27%)</title><rect x="1024" y="404" width="3" height="15" fill="rgb(220,128,14)"/><text x="1027.00" y="414.50"></text></g><g><title>_dispatch (joblib/parallel.py) (113 samples, 30.46%)</title><rect x="687" y="196" width="359" height="15" fill="rgb(223,114,53)"/><text x="690.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (108 samples, 29.11%)</title><rect x="703" y="212" width="343" height="15" fill="rgb(226,186,1)"/><text x="706.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (103 samples, 27.76%)</title><rect x="719" y="228" width="327" height="15" fill="rgb(221,226,47)"/><text x="722.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (103 samples, 27.76%)</title><rect x="719" y="244" width="327" height="15" fill="rgb(212,41,21)"/><text x="722.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (6 samples, 1.62%)</title><rect x="1027" y="260" width="19" height="15" fill="rgb(241,216,8)"/><text x="1030.00" y="270.50"></text></g><g><title>compute_batch_size (joblib/_parallel_backends.py) (1 samples, 0.27%)</title><rect x="1046" y="196" width="4" height="15" fill="rgb(236,228,1)"/><text x="1049.00" y="206.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.27%)</title><rect x="1065" y="212" width="4" height="15" fill="rgb(232,151,22)"/><text x="1068.00" y="222.50"></text></g><g><title>get (queue.py) (7 samples, 1.89%)</title><rect x="1050" y="196" width="22" height="15" fill="rgb(230,157,36)"/><text x="1053.00" y="206.50">g..</text></g><g><title>notify (threading.py) (1 samples, 0.27%)</title><rect x="1069" y="212" width="3" height="15" fill="rgb(240,80,27)"/><text x="1072.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.81%)</title><rect x="1075" y="212" width="10" height="15" fill="rgb(208,110,24)"/><text x="1078.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (9 samples, 2.43%)</title><rect x="1085" y="212" width="28" height="15" fill="rgb(239,52,44)"/><text x="1088.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.27%)</title><rect x="1110" y="228" width="3" height="15" fill="rgb(226,9,44)"/><text x="1113.00" y="238.50"></text></g><g><title>0x7f65eb26d120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1110" y="244" width="3" height="15" fill="rgb(231,118,9)"/><text x="1113.00" y="254.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (14 samples, 3.77%)</title><rect x="1072" y="196" width="44" height="15" fill="rgb(208,74,42)"/><text x="1075.00" y="206.50">get_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.27%)</title><rect x="1113" y="212" width="3" height="15" fill="rgb(253,78,2)"/><text x="1116.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.27%)</title><rect x="1129" y="212" width="3" height="15" fill="rgb(228,96,23)"/><text x="1132.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.27%)</title><rect x="1129" y="228" width="3" height="15" fill="rgb(247,14,34)"/><text x="1132.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.27%)</title><rect x="1129" y="244" width="3" height="15" fill="rgb(248,50,17)"/><text x="1132.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="1129" y="260" width="3" height="15" fill="rgb(208,59,52)"/><text x="1132.00" y="270.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.27%)</title><rect x="1132" y="212" width="3" height="15" fill="rgb(224,31,50)"/><text x="1135.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.27%)</title><rect x="1132" y="228" width="3" height="15" fill="rgb(206,149,19)"/><text x="1135.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.27%)</title><rect x="1132" y="244" width="3" height="15" fill="rgb(217,85,16)"/><text x="1135.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="1132" y="260" width="3" height="15" fill="rgb(212,32,16)"/><text x="1135.00" y="270.50"></text></g><g><title>_put (queue.py) (1 samples, 0.27%)</title><rect x="1135" y="212" width="4" height="15" fill="rgb(240,94,9)"/><text x="1138.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (183 samples, 49.33%)</title><rect x="572" y="180" width="583" height="15" fill="rgb(249,185,19)"/><text x="575.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (12 samples, 3.23%)</title><rect x="1116" y="196" width="39" height="15" fill="rgb(247,195,39)"/><text x="1119.00" y="206.50">put..</text></g><g><title>notify (threading.py) (5 samples, 1.35%)</title><rect x="1139" y="212" width="16" height="15" fill="rgb(240,34,8)"/><text x="1142.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (3 samples, 0.81%)</title><rect x="1145" y="228" width="10" height="15" fill="rgb(220,13,18)"/><text x="1148.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.54%)</title><rect x="1148" y="244" width="7" height="15" fill="rgb(252,11,29)"/><text x="1151.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.27%)</title><rect x="1151" y="260" width="4" height="15" fill="rgb(253,62,32)"/><text x="1154.00" y="270.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.27%)</title><rect x="1151" y="276" width="4" height="15" fill="rgb(230,71,0)"/><text x="1154.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py) (186 samples, 50.13%)</title><rect x="569" y="164" width="592" height="15" fill="rgb(251,28,13)"/><text x="572.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.54%)</title><rect x="1155" y="180" width="6" height="15" fill="rgb(239,162,24)"/><text x="1158.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.27%)</title><rect x="1161" y="164" width="3" height="15" fill="rgb(235,207,30)"/><text x="1164.00" y="174.50"></text></g><g><title>__init__ (queue.py) (1 samples, 0.27%)</title><rect x="1161" y="180" width="3" height="15" fill="rgb(229,126,50)"/><text x="1164.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.54%)</title><rect x="1164" y="212" width="6" height="15" fill="rgb(206,6,29)"/><text x="1167.00" y="222.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (190 samples, 51.21%)</title><rect x="569" y="68" width="605" height="15" fill="rgb(219,10,20)"/><text x="572.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (190 samples, 51.21%)</title><rect x="569" y="84" width="605" height="15" fill="rgb(236,116,10)"/><text x="572.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (190 samples, 51.21%)</title><rect x="569" y="100" width="605" height="15" fill="rgb(217,82,50)"/><text x="572.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (190 samples, 51.21%)</title><rect x="569" y="116" width="605" height="15" fill="rgb(238,141,10)"/><text x="572.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (190 samples, 51.21%)</title><rect x="569" y="132" width="605" height="15" fill="rgb(218,91,28)"/><text x="572.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (190 samples, 51.21%)</title><rect x="569" y="148" width="605" height="15" fill="rgb(209,226,4)"/><text x="572.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (3 samples, 0.81%)</title><rect x="1164" y="164" width="10" height="15" fill="rgb(218,19,29)"/><text x="1167.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (3 samples, 0.81%)</title><rect x="1164" y="180" width="10" height="15" fill="rgb(233,54,46)"/><text x="1167.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.81%)</title><rect x="1164" y="196" width="10" height="15" fill="rgb(221,32,9)"/><text x="1167.00" y="206.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.27%)</title><rect x="1170" y="212" width="4" height="15" fill="rgb(230,49,10)"/><text x="1173.00" y="222.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.27%)</title><rect x="1170" y="228" width="4" height="15" fill="rgb(246,114,4)"/><text x="1173.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.27%)</title><rect x="1174" y="132" width="3" height="15" fill="rgb(205,112,52)"/><text x="1177.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.27%)</title><rect x="1174" y="148" width="3" height="15" fill="rgb(238,9,39)"/><text x="1177.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (1 samples, 0.27%)</title><rect x="1174" y="164" width="3" height="15" fill="rgb(247,200,53)"/><text x="1177.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py) (1 samples, 0.27%)</title><rect x="1174" y="180" width="3" height="15" fill="rgb(248,92,48)"/><text x="1177.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.27%)</title><rect x="1174" y="196" width="3" height="15" fill="rgb(205,69,5)"/><text x="1177.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.27%)</title><rect x="1174" y="212" width="3" height="15" fill="rgb(221,169,54)"/><text x="1177.00" y="222.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.27%)</title><rect x="1174" y="228" width="3" height="15" fill="rgb(214,139,51)"/><text x="1177.00" y="238.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="1174" y="244" width="3" height="15" fill="rgb(224,77,38)"/><text x="1177.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.27%)</title><rect x="1174" y="260" width="3" height="15" fill="rgb(250,205,34)"/><text x="1177.00" y="270.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.27%)</title><rect x="1174" y="276" width="3" height="15" fill="rgb(246,110,19)"/><text x="1177.00" y="286.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.27%)</title><rect x="1174" y="292" width="3" height="15" fill="rgb(245,27,25)"/><text x="1177.00" y="302.50"></text></g><g><title>0x7f65ddb27a66 (?) (1 samples, 0.27%)</title><rect x="1177" y="292" width="3" height="15" fill="rgb(232,166,9)"/><text x="1180.00" y="302.50"></text></g><g><title>0x7f65ddb19579 (?) (1 samples, 0.27%)</title><rect x="1177" y="308" width="3" height="15" fill="rgb(208,203,6)"/><text x="1180.00" y="318.50"></text></g><g><title>0x7f65dd45a713 (?) (1 samples, 0.27%)</title><rect x="1177" y="324" width="3" height="15" fill="rgb(206,114,35)"/><text x="1180.00" y="334.50"></text></g><g><title>0x7f65dd453884 (?) (1 samples, 0.27%)</title><rect x="1177" y="340" width="3" height="15" fill="rgb(252,124,10)"/><text x="1180.00" y="350.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.27%)</title><rect x="1177" y="356" width="3" height="15" fill="rgb(219,155,40)"/><text x="1180.00" y="366.50"></text></g><g><title>0x7f65dd237725 (?) (1 samples, 0.27%)</title><rect x="1177" y="372" width="3" height="15" fill="rgb(245,69,22)"/><text x="1180.00" y="382.50"></text></g><g><title>0x7f65dd222d1f (?) (1 samples, 0.27%)</title><rect x="1177" y="388" width="3" height="15" fill="rgb(250,77,43)"/><text x="1180.00" y="398.50"></text></g><g><title>0x7f65dd22976f (?) (1 samples, 0.27%)</title><rect x="1177" y="404" width="3" height="15" fill="rgb(251,128,33)"/><text x="1180.00" y="414.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.27%)</title><rect x="1177" y="420" width="3" height="15" fill="rgb(250,109,37)"/><text x="1180.00" y="430.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (2 samples, 0.54%)</title><rect x="1177" y="260" width="6" height="15" fill="rgb(242,72,10)"/><text x="1180.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.54%)</title><rect x="1177" y="276" width="6" height="15" fill="rgb(232,78,49)"/><text x="1180.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.27%)</title><rect x="1180" y="292" width="3" height="15" fill="rgb(252,224,44)"/><text x="1183.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.27%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(214,74,2)"/><text x="1183.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.27%)</title><rect x="1180" y="324" width="3" height="15" fill="rgb(254,115,51)"/><text x="1183.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.27%)</title><rect x="1180" y="340" width="3" height="15" fill="rgb(219,115,26)"/><text x="1183.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.27%)</title><rect x="1180" y="356" width="3" height="15" fill="rgb(248,137,25)"/><text x="1183.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.27%)</title><rect x="1180" y="372" width="3" height="15" fill="rgb(241,191,54)"/><text x="1183.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.27%)</title><rect x="1180" y="388" width="3" height="15" fill="rgb(209,209,4)"/><text x="1183.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.27%)</title><rect x="1180" y="404" width="3" height="15" fill="rgb(214,140,8)"/><text x="1183.00" y="414.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.27%)</title><rect x="1180" y="420" width="3" height="15" fill="rgb(206,106,3)"/><text x="1183.00" y="430.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.27%)</title><rect x="1180" y="436" width="3" height="15" fill="rgb(233,189,22)"/><text x="1183.00" y="446.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.27%)</title><rect x="1180" y="452" width="3" height="15" fill="rgb(224,103,54)"/><text x="1183.00" y="462.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.27%)</title><rect x="1180" y="468" width="3" height="15" fill="rgb(253,110,40)"/><text x="1183.00" y="478.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.27%)</title><rect x="1180" y="484" width="3" height="15" fill="rgb(216,162,10)"/><text x="1183.00" y="494.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.27%)</title><rect x="1180" y="500" width="3" height="15" fill="rgb(223,79,5)"/><text x="1183.00" y="510.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1180" y="516" width="3" height="15" fill="rgb(233,74,11)"/><text x="1183.00" y="526.50"></text></g><g><title>0x7f65eb26d120 (libc-2.29.so) (1 samples, 0.27%)</title><rect x="1180" y="532" width="3" height="15" fill="rgb(254,43,46)"/><text x="1183.00" y="542.50"></text></g><g><title>0x7f65c4c84b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(252,181,50)"/><text x="1186.00" y="302.50"></text></g><g><title>0x7f65c4cb610a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="308" width="3" height="15" fill="rgb(237,222,42)"/><text x="1186.00" y="318.50"></text></g><g><title>0x7f65c4ee1d6f (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="324" width="3" height="15" fill="rgb(249,75,10)"/><text x="1186.00" y="334.50"></text></g><g><title>0x7f65c2072b89 (sklearn/tree/_utils.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.27%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(216,119,2)"/><text x="1186.00" y="350.50"></text></g><g><title>0x7f65eb41eece (libm-2.29.so) (1 samples, 0.27%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(243,70,50)"/><text x="1186.00" y="366.50"></text></g><g><title>all (371 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(205,22,41)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (371 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(219,134,53)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (5 samples, 1.35%)</title><rect x="1174" y="68" width="16" height="15" fill="rgb(233,67,0)"/><text x="1177.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (5 samples, 1.35%)</title><rect x="1174" y="84" width="16" height="15" fill="rgb(252,101,9)"/><text x="1177.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.35%)</title><rect x="1174" y="100" width="16" height="15" fill="rgb(236,226,7)"/><text x="1177.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (5 samples, 1.35%)</title><rect x="1174" y="116" width="16" height="15" fill="rgb(233,129,14)"/><text x="1177.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="1177" y="132" width="13" height="15" fill="rgb(235,29,29)"/><text x="1180.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="1177" y="148" width="13" height="15" fill="rgb(252,204,5)"/><text x="1180.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="1177" y="164" width="13" height="15" fill="rgb(210,134,34)"/><text x="1180.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.08%)</title><rect x="1177" y="180" width="13" height="15" fill="rgb(247,213,15)"/><text x="1180.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.08%)</title><rect x="1177" y="196" width="13" height="15" fill="rgb(220,14,34)"/><text x="1180.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="1177" y="212" width="13" height="15" fill="rgb(245,158,52)"/><text x="1180.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.08%)</title><rect x="1177" y="228" width="13" height="15" fill="rgb(242,23,11)"/><text x="1180.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.08%)</title><rect x="1177" y="244" width="13" height="15" fill="rgb(250,62,26)"/><text x="1180.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.54%)</title><rect x="1183" y="260" width="7" height="15" fill="rgb(239,211,3)"/><text x="1186.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.54%)</title><rect x="1183" y="276" width="7" height="15" fill="rgb(251,20,14)"/><text x="1186.00" y="286.50"></text></g><g><title>_check_sample_weight (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(246,108,50)"/><text x="1189.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(247,130,11)"/><text x="1189.00" y="318.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.27%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(254,169,52)"/><text x="1189.00" y="334.50"></text></g><g><title>_safe_accumulator_op (sklearn/utils/extmath.py) (1 samples, 0.27%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(253,22,7)"/><text x="1189.00" y="350.50"></text></g></g></svg>