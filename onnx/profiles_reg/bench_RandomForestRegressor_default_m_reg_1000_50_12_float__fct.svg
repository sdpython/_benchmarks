<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="836" width="2" height="15" fill="rgb(232,22,54)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(212,18,25)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(221,155,28)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(219,123,11)"/><text x="13.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(230,213,33)"/><text x="13.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(227,3,50)"/><text x="13.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(220,15,40)"/><text x="13.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(228,183,22)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(239,182,18)"/><text x="13.00" y="974.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(237,224,28)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(250,225,34)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(239,134,14)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(241,48,44)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(216,190,18)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(228,46,7)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.50%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(226,127,21)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(208,16,15)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(224,40,32)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(244,94,28)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(231,15,8)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(214,134,42)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.50%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(219,99,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(252,54,47)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(218,101,45)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(249,23,49)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(210,46,19)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(239,163,13)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.50%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(216,64,23)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(226,216,47)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(231,90,7)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(212,172,12)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(242,35,34)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(233,83,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(253,113,44)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(221,86,27)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(248,79,41)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(222,98,34)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(242,174,6)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(206,222,10)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(215,144,14)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(241,173,2)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(229,34,52)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.50%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(219,75,3)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="12" y="836" width="3" height="15" fill="rgb(212,194,52)"/><text x="15.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="12" y="852" width="3" height="15" fill="rgb(216,196,41)"/><text x="15.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="12" y="868" width="3" height="15" fill="rgb(226,214,14)"/><text x="15.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="12" y="884" width="3" height="15" fill="rgb(250,188,6)"/><text x="15.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(240,158,19)"/><text x="15.00" y="910.50"></text></g><g><title>&lt;module&gt; (plistlib.py) (1 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(237,83,41)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.50%)</title><rect x="15" y="900" width="6" height="15" fill="rgb(221,94,44)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="916" width="6" height="15" fill="rgb(222,100,25)"/><text x="18.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="932" width="6" height="15" fill="rgb(233,127,24)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="948" width="6" height="15" fill="rgb(226,218,45)"/><text x="18.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="964" width="6" height="15" fill="rgb(238,128,36)"/><text x="18.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="980" width="6" height="15" fill="rgb(222,82,28)"/><text x="18.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="15" y="996" width="6" height="15" fill="rgb(218,66,45)"/><text x="18.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="15" y="1012" width="6" height="15" fill="rgb(205,55,0)"/><text x="18.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (2 samples, 0.50%)</title><rect x="15" y="1028" width="6" height="15" fill="rgb(205,139,28)"/><text x="18.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (2 samples, 0.50%)</title><rect x="15" y="1044" width="6" height="15" fill="rgb(254,161,3)"/><text x="18.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (2 samples, 0.50%)</title><rect x="15" y="1060" width="6" height="15" fill="rgb(228,121,38)"/><text x="18.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (2 samples, 0.50%)</title><rect x="15" y="1076" width="6" height="15" fill="rgb(231,207,3)"/><text x="18.00" y="1086.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="18" y="1092" width="3" height="15" fill="rgb(211,171,1)"/><text x="21.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="10" y="196" width="14" height="15" fill="rgb(212,61,33)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="10" y="212" width="14" height="15" fill="rgb(246,173,29)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="10" y="228" width="14" height="15" fill="rgb(247,113,53)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="10" y="244" width="14" height="15" fill="rgb(207,48,8)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.24%)</title><rect x="10" y="260" width="14" height="15" fill="rgb(228,159,46)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="10" y="276" width="14" height="15" fill="rgb(208,149,49)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.74%)</title><rect x="15" y="292" width="9" height="15" fill="rgb(249,82,11)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="308" width="9" height="15" fill="rgb(213,76,31)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="324" width="9" height="15" fill="rgb(219,47,46)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="340" width="9" height="15" fill="rgb(220,172,9)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="356" width="9" height="15" fill="rgb(212,209,45)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="372" width="9" height="15" fill="rgb(236,96,10)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.74%)</title><rect x="15" y="388" width="9" height="15" fill="rgb(212,83,4)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="404" width="9" height="15" fill="rgb(247,222,33)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="420" width="9" height="15" fill="rgb(237,88,18)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="436" width="9" height="15" fill="rgb(247,210,40)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="452" width="9" height="15" fill="rgb(221,29,33)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="468" width="9" height="15" fill="rgb(231,225,1)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.74%)</title><rect x="15" y="484" width="9" height="15" fill="rgb(224,154,53)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="500" width="9" height="15" fill="rgb(253,159,22)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="516" width="9" height="15" fill="rgb(247,129,37)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="532" width="9" height="15" fill="rgb(211,146,51)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="548" width="9" height="15" fill="rgb(244,114,7)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="564" width="9" height="15" fill="rgb(220,180,24)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 0.74%)</title><rect x="15" y="580" width="9" height="15" fill="rgb(254,70,47)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="596" width="9" height="15" fill="rgb(232,123,1)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="612" width="9" height="15" fill="rgb(248,158,15)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="628" width="9" height="15" fill="rgb(244,2,54)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="644" width="9" height="15" fill="rgb(231,134,41)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="660" width="9" height="15" fill="rgb(246,29,52)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 0.74%)</title><rect x="15" y="676" width="9" height="15" fill="rgb(241,162,15)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="692" width="9" height="15" fill="rgb(233,117,41)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="708" width="9" height="15" fill="rgb(217,91,49)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="724" width="9" height="15" fill="rgb(249,108,22)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="740" width="9" height="15" fill="rgb(231,17,25)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="756" width="9" height="15" fill="rgb(208,200,14)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 0.74%)</title><rect x="15" y="772" width="9" height="15" fill="rgb(248,25,9)"/><text x="18.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="788" width="9" height="15" fill="rgb(241,228,47)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="804" width="9" height="15" fill="rgb(237,13,35)"/><text x="18.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="820" width="9" height="15" fill="rgb(206,22,32)"/><text x="18.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="836" width="9" height="15" fill="rgb(208,68,29)"/><text x="18.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="852" width="9" height="15" fill="rgb(216,125,19)"/><text x="18.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="15" y="868" width="9" height="15" fill="rgb(253,154,44)"/><text x="18.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="15" y="884" width="9" height="15" fill="rgb(235,168,21)"/><text x="18.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py) (1 samples, 0.25%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(234,70,12)"/><text x="24.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(223,39,50)"/><text x="24.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="436" width="3" height="15" fill="rgb(242,38,44)"/><text x="27.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="452" width="3" height="15" fill="rgb(224,60,41)"/><text x="27.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="468" width="3" height="15" fill="rgb(251,219,14)"/><text x="27.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(229,166,26)"/><text x="27.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(214,210,32)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(252,168,42)"/><text x="27.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(225,120,21)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(222,7,28)"/><text x="27.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(215,86,10)"/><text x="27.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="580" width="3" height="15" fill="rgb(247,78,3)"/><text x="27.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="596" width="3" height="15" fill="rgb(230,48,37)"/><text x="27.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="612" width="3" height="15" fill="rgb(250,184,18)"/><text x="27.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="628" width="3" height="15" fill="rgb(248,220,14)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="644" width="3" height="15" fill="rgb(217,99,52)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="660" width="3" height="15" fill="rgb(229,224,25)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="676" width="3" height="15" fill="rgb(208,26,20)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="692" width="3" height="15" fill="rgb(252,36,27)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="708" width="3" height="15" fill="rgb(215,126,21)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.25%)</title><rect x="24" y="724" width="3" height="15" fill="rgb(243,15,42)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="740" width="3" height="15" fill="rgb(249,203,46)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="756" width="3" height="15" fill="rgb(220,17,32)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(241,79,33)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(239,166,34)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(230,51,0)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(241,37,49)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(233,92,22)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(247,194,44)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(222,150,42)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(238,191,23)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(232,10,48)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(218,110,11)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(232,102,4)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(211,52,33)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(239,41,47)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(208,178,14)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(207,33,20)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.25%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(240,21,45)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(225,209,9)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(233,192,12)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(208,5,41)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(248,161,3)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(214,157,41)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.25%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(232,107,34)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1124" width="3" height="15" fill="rgb(213,71,12)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1140" width="3" height="15" fill="rgb(226,0,34)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1156" width="3" height="15" fill="rgb(254,158,11)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1172" width="3" height="15" fill="rgb(229,217,41)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1188" width="3" height="15" fill="rgb(230,5,24)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(227,3,19)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(226,104,0)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(221,20,24)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(240,40,33)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(206,206,29)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(229,109,47)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.25%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(229,97,28)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(249,36,20)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1332" width="3" height="15" fill="rgb(242,191,24)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1348" width="3" height="15" fill="rgb(251,195,20)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1364" width="3" height="15" fill="rgb(222,65,1)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1380" width="3" height="15" fill="rgb(216,163,33)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.25%)</title><rect x="24" y="1396" width="3" height="15" fill="rgb(212,70,0)"/><text x="27.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1412" width="3" height="15" fill="rgb(247,224,40)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1428" width="3" height="15" fill="rgb(230,213,11)"/><text x="27.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1444" width="3" height="15" fill="rgb(254,76,53)"/><text x="27.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1460" width="3" height="15" fill="rgb(219,149,37)"/><text x="27.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1476" width="3" height="15" fill="rgb(226,23,26)"/><text x="27.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.25%)</title><rect x="24" y="1492" width="3" height="15" fill="rgb(216,114,7)"/><text x="27.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1508" width="3" height="15" fill="rgb(231,24,30)"/><text x="27.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1524" width="3" height="15" fill="rgb(233,22,27)"/><text x="27.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1540" width="3" height="15" fill="rgb(211,171,42)"/><text x="27.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1556" width="3" height="15" fill="rgb(250,190,31)"/><text x="27.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1572" width="3" height="15" fill="rgb(249,209,6)"/><text x="27.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.25%)</title><rect x="24" y="1588" width="3" height="15" fill="rgb(239,27,47)"/><text x="27.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1604" width="3" height="15" fill="rgb(216,132,37)"/><text x="27.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1620" width="3" height="15" fill="rgb(230,1,50)"/><text x="27.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1636" width="3" height="15" fill="rgb(243,18,0)"/><text x="27.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1652" width="3" height="15" fill="rgb(226,98,38)"/><text x="27.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1668" width="3" height="15" fill="rgb(239,76,38)"/><text x="27.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.25%)</title><rect x="24" y="1684" width="3" height="15" fill="rgb(239,47,32)"/><text x="27.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1700" width="3" height="15" fill="rgb(224,209,30)"/><text x="27.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1716" width="3" height="15" fill="rgb(244,176,39)"/><text x="27.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1732" width="3" height="15" fill="rgb(207,219,23)"/><text x="27.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1748" width="3" height="15" fill="rgb(247,80,14)"/><text x="27.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1764" width="3" height="15" fill="rgb(213,168,26)"/><text x="27.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.25%)</title><rect x="24" y="1780" width="3" height="15" fill="rgb(230,224,2)"/><text x="27.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1796" width="3" height="15" fill="rgb(236,61,16)"/><text x="27.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1812" width="3" height="15" fill="rgb(232,209,5)"/><text x="27.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1828" width="3" height="15" fill="rgb(233,71,26)"/><text x="27.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1844" width="3" height="15" fill="rgb(254,86,19)"/><text x="27.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1860" width="3" height="15" fill="rgb(211,200,34)"/><text x="27.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.25%)</title><rect x="24" y="1876" width="3" height="15" fill="rgb(237,120,6)"/><text x="27.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1892" width="3" height="15" fill="rgb(248,198,48)"/><text x="27.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1908" width="3" height="15" fill="rgb(232,67,44)"/><text x="27.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1924" width="3" height="15" fill="rgb(223,8,7)"/><text x="27.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="1940" width="3" height="15" fill="rgb(238,64,47)"/><text x="27.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1956" width="3" height="15" fill="rgb(239,54,16)"/><text x="27.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.25%)</title><rect x="24" y="1972" width="3" height="15" fill="rgb(244,149,52)"/><text x="27.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="1988" width="3" height="15" fill="rgb(254,137,22)"/><text x="27.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="2004" width="3" height="15" fill="rgb(225,44,29)"/><text x="27.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="2020" width="3" height="15" fill="rgb(248,117,22)"/><text x="27.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="2036" width="3" height="15" fill="rgb(235,144,28)"/><text x="27.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="2052" width="3" height="15" fill="rgb(221,175,38)"/><text x="27.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="2068" width="3" height="15" fill="rgb(244,173,49)"/><text x="27.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="2084" width="3" height="15" fill="rgb(214,201,43)"/><text x="27.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/dviread.py) (1 samples, 0.25%)</title><rect x="24" y="2100" width="3" height="15" fill="rgb(211,21,35)"/><text x="27.00" y="2110.50"></text></g><g><title>Dvi (matplotlib/dviread.py) (1 samples, 0.25%)</title><rect x="24" y="2116" width="3" height="15" fill="rgb(209,193,2)"/><text x="27.00" y="2126.50"></text></g><g><title>decorate (matplotlib/dviread.py) (1 samples, 0.25%)</title><rect x="24" y="2132" width="3" height="15" fill="rgb(247,140,51)"/><text x="27.00" y="2142.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_covtype.py) (1 samples, 0.25%)</title><rect x="27" y="532" width="3" height="15" fill="rgb(247,182,25)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="548" width="3" height="15" fill="rgb(210,63,32)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="564" width="3" height="15" fill="rgb(225,205,30)"/><text x="30.00" y="574.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="580" width="3" height="15" fill="rgb(233,158,53)"/><text x="30.00" y="590.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="596" width="3" height="15" fill="rgb(243,118,45)"/><text x="30.00" y="606.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="612" width="3" height="15" fill="rgb(214,206,4)"/><text x="30.00" y="622.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="628" width="3" height="15" fill="rgb(205,79,6)"/><text x="30.00" y="638.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="644" width="3" height="15" fill="rgb(230,17,42)"/><text x="30.00" y="654.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="27" y="660" width="3" height="15" fill="rgb(243,67,17)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (3 samples, 0.74%)</title><rect x="24" y="244" width="9" height="15" fill="rgb(218,187,48)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="260" width="9" height="15" fill="rgb(238,123,46)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="276" width="9" height="15" fill="rgb(222,179,51)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="292" width="9" height="15" fill="rgb(225,61,45)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="24" y="308" width="9" height="15" fill="rgb(238,123,43)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="324" width="9" height="15" fill="rgb(207,221,6)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.74%)</title><rect x="24" y="340" width="9" height="15" fill="rgb(239,15,33)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="356" width="9" height="15" fill="rgb(210,94,21)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="372" width="9" height="15" fill="rgb(225,53,14)"/><text x="27.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="388" width="9" height="15" fill="rgb(235,95,43)"/><text x="27.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="24" y="404" width="9" height="15" fill="rgb(216,163,3)"/><text x="27.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="24" y="420" width="9" height="15" fill="rgb(234,117,41)"/><text x="27.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (2 samples, 0.50%)</title><rect x="27" y="436" width="6" height="15" fill="rgb(226,61,24)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="27" y="452" width="6" height="15" fill="rgb(209,184,14)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="27" y="468" width="6" height="15" fill="rgb(243,99,18)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="27" y="484" width="6" height="15" fill="rgb(233,227,20)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="27" y="500" width="6" height="15" fill="rgb(242,123,31)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="27" y="516" width="6" height="15" fill="rgb(229,97,47)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.25%)</title><rect x="30" y="532" width="3" height="15" fill="rgb(222,192,17)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="548" width="3" height="15" fill="rgb(228,41,0)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="564" width="3" height="15" fill="rgb(249,75,31)"/><text x="33.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="580" width="3" height="15" fill="rgb(219,128,52)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="596" width="3" height="15" fill="rgb(246,164,15)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="612" width="3" height="15" fill="rgb(248,189,35)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="628" width="3" height="15" fill="rgb(212,49,34)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="644" width="3" height="15" fill="rgb(245,221,21)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="660" width="3" height="15" fill="rgb(219,156,50)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.25%)</title><rect x="30" y="676" width="3" height="15" fill="rgb(233,161,5)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="692" width="3" height="15" fill="rgb(220,73,24)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="708" width="3" height="15" fill="rgb(245,88,17)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(241,162,20)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(234,104,6)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(211,13,54)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/harwell_boeing/__init__.py) (1 samples, 0.25%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(246,161,12)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(246,26,6)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(226,143,6)"/><text x="33.00" y="814.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(213,212,5)"/><text x="33.00" y="830.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(249,220,5)"/><text x="33.00" y="846.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(238,71,29)"/><text x="33.00" y="862.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(234,53,48)"/><text x="33.00" y="878.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(245,148,28)"/><text x="33.00" y="894.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(249,73,47)"/><text x="33.00" y="910.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(233,16,29)"/><text x="33.00" y="926.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="33" y="852" width="3" height="15" fill="rgb(248,69,39)"/><text x="36.00" y="862.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="33" y="868" width="3" height="15" fill="rgb(206,59,11)"/><text x="36.00" y="878.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.50%)</title><rect x="33" y="372" width="6" height="15" fill="rgb(207,222,20)"/><text x="36.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="388" width="6" height="15" fill="rgb(218,146,8)"/><text x="36.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="404" width="6" height="15" fill="rgb(222,138,43)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="420" width="6" height="15" fill="rgb(207,33,14)"/><text x="36.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="436" width="6" height="15" fill="rgb(250,156,23)"/><text x="36.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="452" width="6" height="15" fill="rgb(228,29,11)"/><text x="36.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="33" y="468" width="6" height="15" fill="rgb(249,195,31)"/><text x="36.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="484" width="6" height="15" fill="rgb(207,113,4)"/><text x="36.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.50%)</title><rect x="33" y="500" width="6" height="15" fill="rgb(242,32,15)"/><text x="36.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="516" width="6" height="15" fill="rgb(224,59,15)"/><text x="36.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="532" width="6" height="15" fill="rgb(247,36,27)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="548" width="6" height="15" fill="rgb(245,80,52)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="564" width="6" height="15" fill="rgb(235,181,26)"/><text x="36.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="580" width="6" height="15" fill="rgb(245,210,47)"/><text x="36.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="33" y="596" width="6" height="15" fill="rgb(243,220,33)"/><text x="36.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="612" width="6" height="15" fill="rgb(211,59,47)"/><text x="36.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (2 samples, 0.50%)</title><rect x="33" y="628" width="6" height="15" fill="rgb(253,139,41)"/><text x="36.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="644" width="6" height="15" fill="rgb(213,164,12)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="660" width="6" height="15" fill="rgb(220,207,1)"/><text x="36.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="676" width="6" height="15" fill="rgb(232,190,17)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="692" width="6" height="15" fill="rgb(235,111,7)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="708" width="6" height="15" fill="rgb(235,180,1)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="724" width="6" height="15" fill="rgb(229,13,11)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="33" y="740" width="6" height="15" fill="rgb(213,175,6)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="756" width="6" height="15" fill="rgb(239,50,27)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (2 samples, 0.50%)</title><rect x="33" y="772" width="6" height="15" fill="rgb(211,111,31)"/><text x="36.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="788" width="6" height="15" fill="rgb(243,126,31)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="804" width="6" height="15" fill="rgb(206,52,33)"/><text x="36.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="820" width="6" height="15" fill="rgb(234,82,19)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="33" y="836" width="6" height="15" fill="rgb(232,228,30)"/><text x="36.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(231,61,39)"/><text x="39.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(248,9,46)"/><text x="39.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(242,36,19)"/><text x="39.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (1 samples, 0.25%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(242,25,4)"/><text x="39.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(207,122,54)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(209,143,0)"/><text x="39.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(244,103,9)"/><text x="39.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(210,43,15)"/><text x="39.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(224,145,23)"/><text x="39.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (1 samples, 0.25%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(206,209,35)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(246,224,45)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(225,180,10)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(225,161,9)"/><text x="39.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(246,122,36)"/><text x="39.00" y="1070.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(245,137,25)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 0.74%)</title><rect x="33" y="244" width="9" height="15" fill="rgb(237,88,7)"/><text x="36.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="260" width="9" height="15" fill="rgb(254,164,1)"/><text x="36.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="276" width="9" height="15" fill="rgb(228,3,15)"/><text x="36.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="292" width="9" height="15" fill="rgb(252,194,18)"/><text x="36.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="308" width="9" height="15" fill="rgb(229,37,54)"/><text x="36.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="324" width="9" height="15" fill="rgb(239,179,31)"/><text x="36.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.74%)</title><rect x="33" y="340" width="9" height="15" fill="rgb(242,223,41)"/><text x="36.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.74%)</title><rect x="33" y="356" width="9" height="15" fill="rgb(205,219,14)"/><text x="36.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.25%)</title><rect x="39" y="372" width="3" height="15" fill="rgb(205,167,40)"/><text x="42.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="388" width="3" height="15" fill="rgb(240,164,33)"/><text x="42.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="404" width="3" height="15" fill="rgb(246,43,23)"/><text x="42.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="420" width="3" height="15" fill="rgb(231,152,43)"/><text x="42.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="436" width="3" height="15" fill="rgb(239,161,4)"/><text x="42.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="452" width="3" height="15" fill="rgb(239,8,28)"/><text x="42.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.25%)</title><rect x="39" y="468" width="3" height="15" fill="rgb(245,61,35)"/><text x="42.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="484" width="3" height="15" fill="rgb(238,178,3)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="500" width="3" height="15" fill="rgb(222,170,35)"/><text x="42.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="516" width="3" height="15" fill="rgb(232,151,50)"/><text x="42.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="532" width="3" height="15" fill="rgb(207,41,34)"/><text x="42.00" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="548" width="3" height="15" fill="rgb(206,56,17)"/><text x="42.00" y="558.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="564" width="3" height="15" fill="rgb(252,188,18)"/><text x="42.00" y="574.50"></text></g><g><title>0x7fd4d8e63373 (?) (1 samples, 0.25%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(229,54,8)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(250,111,5)"/><text x="45.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(253,111,19)"/><text x="45.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(215,139,4)"/><text x="45.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(229,227,8)"/><text x="45.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(247,37,26)"/><text x="45.00" y="718.50"></text></g><g><title>0x7fd4d8c26eea (?) (1 samples, 0.25%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(231,29,43)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(235,122,26)"/><text x="45.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(237,198,47)"/><text x="45.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(205,165,23)"/><text x="45.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(233,9,53)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(206,66,26)"/><text x="45.00" y="814.50"></text></g><g><title>0x7fd4d89bf887 (?) (1 samples, 0.25%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(239,77,42)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(217,98,22)"/><text x="45.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(214,92,36)"/><text x="45.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(242,109,6)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(214,142,51)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(238,102,39)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="916" width="3" height="15" fill="rgb(224,7,23)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="932" width="3" height="15" fill="rgb(205,77,49)"/><text x="45.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="948" width="3" height="15" fill="rgb(230,44,23)"/><text x="45.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.25%)</title><rect x="42" y="964" width="3" height="15" fill="rgb(229,5,22)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="980" width="3" height="15" fill="rgb(232,1,51)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="996" width="3" height="15" fill="rgb(254,3,21)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1012" width="3" height="15" fill="rgb(227,91,34)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="1028" width="3" height="15" fill="rgb(234,34,29)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1044" width="3" height="15" fill="rgb(235,75,41)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.25%)</title><rect x="42" y="1060" width="3" height="15" fill="rgb(222,139,24)"/><text x="45.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="1076" width="3" height="15" fill="rgb(213,82,13)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="68" width="38" height="15" fill="rgb(240,206,11)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="84" width="38" height="15" fill="rgb(240,39,33)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="100" width="38" height="15" fill="rgb(209,37,30)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.23%)</title><rect x="10" y="116" width="38" height="15" fill="rgb(248,10,19)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="132" width="38" height="15" fill="rgb(208,144,8)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (13 samples, 3.23%)</title><rect x="10" y="148" width="38" height="15" fill="rgb(250,227,54)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="164" width="38" height="15" fill="rgb(250,58,39)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.23%)</title><rect x="10" y="180" width="38" height="15" fill="rgb(247,133,8)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.99%)</title><rect x="24" y="196" width="24" height="15" fill="rgb(239,224,16)"/><text x="27.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.99%)</title><rect x="24" y="212" width="24" height="15" fill="rgb(206,178,46)"/><text x="27.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.99%)</title><rect x="24" y="228" width="24" height="15" fill="rgb(241,207,22)"/><text x="27.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.50%)</title><rect x="42" y="244" width="6" height="15" fill="rgb(232,111,22)"/><text x="45.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="260" width="6" height="15" fill="rgb(243,9,22)"/><text x="45.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="276" width="6" height="15" fill="rgb(253,147,38)"/><text x="45.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="292" width="6" height="15" fill="rgb(241,44,37)"/><text x="45.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="42" y="308" width="6" height="15" fill="rgb(239,66,9)"/><text x="45.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="324" width="6" height="15" fill="rgb(243,29,48)"/><text x="45.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.50%)</title><rect x="42" y="340" width="6" height="15" fill="rgb(230,24,35)"/><text x="45.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="356" width="6" height="15" fill="rgb(246,68,42)"/><text x="45.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="372" width="6" height="15" fill="rgb(212,174,20)"/><text x="45.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="388" width="6" height="15" fill="rgb(224,32,6)"/><text x="45.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="42" y="404" width="6" height="15" fill="rgb(236,191,31)"/><text x="45.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="420" width="6" height="15" fill="rgb(238,156,43)"/><text x="45.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (2 samples, 0.50%)</title><rect x="42" y="436" width="6" height="15" fill="rgb(246,168,49)"/><text x="45.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="452" width="6" height="15" fill="rgb(244,114,16)"/><text x="45.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="468" width="6" height="15" fill="rgb(224,136,27)"/><text x="45.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="484" width="6" height="15" fill="rgb(250,163,31)"/><text x="45.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="42" y="500" width="6" height="15" fill="rgb(236,157,41)"/><text x="45.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="516" width="6" height="15" fill="rgb(224,214,7)"/><text x="45.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (2 samples, 0.50%)</title><rect x="42" y="532" width="6" height="15" fill="rgb(248,151,28)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="548" width="6" height="15" fill="rgb(218,17,38)"/><text x="45.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="564" width="6" height="15" fill="rgb(248,24,17)"/><text x="45.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="580" width="6" height="15" fill="rgb(221,171,10)"/><text x="45.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.50%)</title><rect x="42" y="596" width="6" height="15" fill="rgb(220,109,0)"/><text x="45.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="42" y="612" width="6" height="15" fill="rgb(205,137,18)"/><text x="45.00" y="622.50"></text></g><g><title>0x7fd4d8e63373 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="45" y="628" width="3" height="15" fill="rgb(237,123,26)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="644" width="3" height="15" fill="rgb(216,204,20)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="660" width="3" height="15" fill="rgb(233,56,7)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="676" width="3" height="15" fill="rgb(215,22,42)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="692" width="3" height="15" fill="rgb(248,104,17)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="708" width="3" height="15" fill="rgb(237,119,20)"/><text x="48.00" y="718.50"></text></g><g><title>0x7fd4d8c26eea (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="45" y="724" width="3" height="15" fill="rgb(252,111,52)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="740" width="3" height="15" fill="rgb(248,170,40)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="756" width="3" height="15" fill="rgb(212,210,0)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="772" width="3" height="15" fill="rgb(253,145,11)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(240,159,7)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(243,97,30)"/><text x="48.00" y="814.50"></text></g><g><title>0x7fd4d89bf887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(214,156,39)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(221,75,36)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(233,70,24)"/><text x="48.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(233,140,11)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(230,115,32)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(249,212,15)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="916" width="3" height="15" fill="rgb(221,145,51)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="932" width="3" height="15" fill="rgb(211,117,52)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="948" width="3" height="15" fill="rgb(249,137,2)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(236,215,30)"/><text x="48.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(223,228,26)"/><text x="48.00" y="990.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="48" y="196" width="2" height="15" fill="rgb(217,57,35)"/><text x="51.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="50" y="196" width="3" height="15" fill="rgb(206,89,45)"/><text x="53.00" y="206.50"></text></g><g><title>0x7fd4d89e0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(238,74,7)"/><text x="65.00" y="318.50"></text></g><g><title>0x7fd4d89dffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="62" y="324" width="3" height="15" fill="rgb(243,15,48)"/><text x="65.00" y="334.50"></text></g><g><title>0x7fd4d89ef405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(238,20,0)"/><text x="65.00" y="350.50"></text></g><g><title>0x7fd4d89ee7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(227,74,30)"/><text x="65.00" y="366.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.25%)</title><rect x="65" y="308" width="3" height="15" fill="rgb(205,11,18)"/><text x="68.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.25%)</title><rect x="65" y="324" width="3" height="15" fill="rgb(215,56,20)"/><text x="68.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (3 samples, 0.74%)</title><rect x="62" y="292" width="9" height="15" fill="rgb(251,211,24)"/><text x="65.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="68" y="308" width="3" height="15" fill="rgb(210,51,35)"/><text x="71.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="68" y="324" width="3" height="15" fill="rgb(221,92,41)"/><text x="71.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.25%)</title><rect x="68" y="340" width="3" height="15" fill="rgb(254,36,22)"/><text x="71.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.25%)</title><rect x="71" y="308" width="3" height="15" fill="rgb(233,72,12)"/><text x="74.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="71" y="324" width="3" height="15" fill="rgb(229,33,50)"/><text x="74.00" y="334.50"></text></g><g><title>_dispatch (joblib/parallel.py) (8 samples, 1.99%)</title><rect x="53" y="196" width="24" height="15" fill="rgb(212,181,3)"/><text x="56.00" y="206.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (7 samples, 1.74%)</title><rect x="56" y="212" width="21" height="15" fill="rgb(245,182,19)"/><text x="59.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 1.74%)</title><rect x="56" y="228" width="21" height="15" fill="rgb(221,126,33)"/><text x="59.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (7 samples, 1.74%)</title><rect x="56" y="244" width="21" height="15" fill="rgb(248,31,21)"/><text x="59.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (6 samples, 1.49%)</title><rect x="59" y="260" width="18" height="15" fill="rgb(223,216,25)"/><text x="62.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (6 samples, 1.49%)</title><rect x="59" y="276" width="18" height="15" fill="rgb(210,67,53)"/><text x="62.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.50%)</title><rect x="71" y="292" width="6" height="15" fill="rgb(232,90,43)"/><text x="74.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.25%)</title><rect x="74" y="308" width="3" height="15" fill="rgb(214,156,3)"/><text x="77.00" y="318.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.25%)</title><rect x="77" y="196" width="3" height="15" fill="rgb(219,90,18)"/><text x="80.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="77" y="212" width="3" height="15" fill="rgb(228,3,16)"/><text x="80.00" y="222.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (13 samples, 3.23%)</title><rect x="48" y="100" width="38" height="15" fill="rgb(213,132,27)"/><text x="51.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 3.23%)</title><rect x="48" y="116" width="38" height="15" fill="rgb(249,30,41)"/><text x="51.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (13 samples, 3.23%)</title><rect x="48" y="132" width="38" height="15" fill="rgb(214,111,50)"/><text x="51.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (13 samples, 3.23%)</title><rect x="48" y="148" width="38" height="15" fill="rgb(235,183,29)"/><text x="51.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py) (13 samples, 3.23%)</title><rect x="48" y="164" width="38" height="15" fill="rgb(224,26,1)"/><text x="51.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (13 samples, 3.23%)</title><rect x="48" y="180" width="38" height="15" fill="rgb(253,33,32)"/><text x="51.00" y="190.50">dis..</text></g><g><title>put (queue.py) (2 samples, 0.50%)</title><rect x="80" y="196" width="6" height="15" fill="rgb(239,127,38)"/><text x="83.00" y="206.50"></text></g><g><title>notify (threading.py) (2 samples, 0.50%)</title><rect x="80" y="212" width="6" height="15" fill="rgb(210,170,34)"/><text x="83.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.25%)</title><rect x="83" y="228" width="3" height="15" fill="rgb(220,158,41)"/><text x="86.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="83" y="244" width="3" height="15" fill="rgb(218,135,38)"/><text x="86.00" y="254.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (14 samples, 3.47%)</title><rect x="48" y="68" width="41" height="15" fill="rgb(235,201,46)"/><text x="51.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (14 samples, 3.47%)</title><rect x="48" y="84" width="41" height="15" fill="rgb(253,188,46)"/><text x="51.00" y="94.50">set..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="86" y="100" width="3" height="15" fill="rgb(240,36,7)"/><text x="89.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="86" y="116" width="3" height="15" fill="rgb(240,156,31)"/><text x="89.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="86" y="132" width="3" height="15" fill="rgb(205,15,11)"/><text x="89.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="86" y="148" width="3" height="15" fill="rgb(211,7,2)"/><text x="89.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="86" y="164" width="3" height="15" fill="rgb(219,5,54)"/><text x="89.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="86" y="180" width="3" height="15" fill="rgb(224,17,39)"/><text x="89.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="86" y="196" width="3" height="15" fill="rgb(244,26,10)"/><text x="89.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.25%)</title><rect x="86" y="212" width="3" height="15" fill="rgb(250,178,49)"/><text x="89.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="86" y="228" width="3" height="15" fill="rgb(206,211,19)"/><text x="89.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="86" y="244" width="3" height="15" fill="rgb(251,119,20)"/><text x="89.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="86" y="260" width="3" height="15" fill="rgb(207,64,6)"/><text x="89.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="86" y="276" width="3" height="15" fill="rgb(244,39,19)"/><text x="89.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="86" y="292" width="3" height="15" fill="rgb(230,150,16)"/><text x="89.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.25%)</title><rect x="86" y="308" width="3" height="15" fill="rgb(247,182,52)"/><text x="89.00" y="318.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.25%)</title><rect x="86" y="324" width="3" height="15" fill="rgb(241,49,0)"/><text x="89.00" y="334.50"></text></g><g><title>0x7fd4bef9aff9 (?) (1 samples, 0.25%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(229,212,1)"/><text x="92.00" y="222.50"></text></g><g><title>0x7fd4bef95ef6 (?) (1 samples, 0.25%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(244,22,21)"/><text x="92.00" y="238.50"></text></g><g><title>0x7fd4bef8a962 (?) (1 samples, 0.25%)</title><rect x="89" y="244" width="2" height="15" fill="rgb(212,217,52)"/><text x="92.00" y="254.50"></text></g><g><title>0x7fd4befbe7a7 (?) (1 samples, 0.25%)</title><rect x="89" y="260" width="2" height="15" fill="rgb(246,25,20)"/><text x="92.00" y="270.50"></text></g><g><title>0x7fd4befbe379 (?) (1 samples, 0.25%)</title><rect x="89" y="276" width="2" height="15" fill="rgb(245,100,46)"/><text x="92.00" y="286.50"></text></g><g><title>0x7fd4bf41c8b8 (?) (1 samples, 0.25%)</title><rect x="89" y="292" width="2" height="15" fill="rgb(219,159,33)"/><text x="92.00" y="302.50"></text></g><g><title>0x7fd4bf41ac7f (?) (1 samples, 0.25%)</title><rect x="89" y="308" width="2" height="15" fill="rgb(244,26,28)"/><text x="92.00" y="318.50"></text></g><g><title>0x7fd4bf42d99c (?) (1 samples, 0.25%)</title><rect x="89" y="324" width="2" height="15" fill="rgb(232,212,22)"/><text x="92.00" y="334.50"></text></g><g><title>0x7fd4bf154dc2 (?) (1 samples, 0.25%)</title><rect x="89" y="340" width="2" height="15" fill="rgb(234,50,4)"/><text x="92.00" y="350.50"></text></g><g><title>0x7fd4bf154604 (?) (1 samples, 0.25%)</title><rect x="89" y="356" width="2" height="15" fill="rgb(213,186,50)"/><text x="92.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="97" y="356" width="3" height="15" fill="rgb(230,66,46)"/><text x="100.00" y="366.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (132 samples, 32.75%)</title><rect x="89" y="100" width="386" height="15" fill="rgb(205,175,23)"/><text x="92.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 32.75%)</title><rect x="89" y="116" width="386" height="15" fill="rgb(209,131,28)"/><text x="92.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 32.75%)</title><rect x="89" y="132" width="386" height="15" fill="rgb(218,58,8)"/><text x="92.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (132 samples, 32.75%)</title><rect x="89" y="148" width="386" height="15" fill="rgb(232,75,28)"/><text x="92.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (132 samples, 32.75%)</title><rect x="89" y="164" width="386" height="15" fill="rgb(229,150,2)"/><text x="92.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (132 samples, 32.75%)</title><rect x="89" y="180" width="386" height="15" fill="rgb(235,203,37)"/><text x="92.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (132 samples, 32.75%)</title><rect x="89" y="196" width="386" height="15" fill="rgb(223,12,33)"/><text x="92.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="212" width="384" height="15" fill="rgb(241,52,33)"/><text x="94.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="228" width="384" height="15" fill="rgb(246,78,27)"/><text x="94.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime:..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="244" width="384" height="15" fill="rgb(245,24,41)"/><text x="94.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::modu..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="260" width="384" height="15" fill="rgb(232,146,13)"/><text x="94.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="276" width="384" height="15" fill="rgb(215,0,38)"/><text x="94.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="292" width="384" height="15" fill="rgb(236,209,9)"/><text x="94.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="308" width="384" height="15" fill="rgb(213,159,45)"/><text x="94.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="324" width="384" height="15" fill="rgb(227,198,3)"/><text x="94.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 32.51%)</title><rect x="91" y="340" width="384" height="15" fill="rgb(248,71,14)"/><text x="94.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compu..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 31.76%)</title><rect x="100" y="356" width="375" height="15" fill="rgb(223,70,17)"/><text x="103.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Pro..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="472" y="372" width="3" height="15" fill="rgb(217,145,51)"/><text x="475.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="472" y="388" width="3" height="15" fill="rgb(205,8,20)"/><text x="475.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="472" y="404" width="3" height="15" fill="rgb(241,61,38)"/><text x="475.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="472" y="420" width="3" height="15" fill="rgb(251,12,51)"/><text x="475.00" y="430.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (133 samples, 33.00%)</title><rect x="89" y="68" width="389" height="15" fill="rgb(250,21,35)"/><text x="92.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_r..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (133 samples, 33.00%)</title><rect x="89" y="84" width="389" height="15" fill="rgb(236,162,44)"/><text x="92.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="475" y="100" width="3" height="15" fill="rgb(239,52,10)"/><text x="478.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h) (1 samples, 0.25%)</title><rect x="475" y="116" width="3" height="15" fill="rgb(213,75,34)"/><text x="478.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c) (1 samples, 0.25%)</title><rect x="475" y="132" width="3" height="15" fill="rgb(220,141,53)"/><text x="478.00" y="142.50"></text></g><g><title>load (_pickle.c) (1 samples, 0.25%)</title><rect x="475" y="148" width="3" height="15" fill="rgb(225,21,0)"/><text x="478.00" y="158.50"></text></g><g><title>load_reduce (_pickle.c) (1 samples, 0.25%)</title><rect x="475" y="164" width="3" height="15" fill="rgb(226,144,5)"/><text x="478.00" y="174.50"></text></g><g><title>0x7fd4d89df271 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="475" y="180" width="3" height="15" fill="rgb(212,105,38)"/><text x="478.00" y="190.50"></text></g><g><title>0x7fd4d5dd2a13 (sklearn/tree/_utils.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="475" y="196" width="3" height="15" fill="rgb(207,149,54)"/><text x="478.00" y="206.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="475" y="212" width="3" height="15" fill="rgb(253,152,2)"/><text x="478.00" y="222.50"></text></g><g><title>0x7fd4bfa3554f (?) (1 samples, 0.25%)</title><rect x="478" y="244" width="3" height="15" fill="rgb(246,146,11)"/><text x="481.00" y="254.50"></text></g><g><title>0x7fd4bfa3b65e (?) (1 samples, 0.25%)</title><rect x="478" y="260" width="3" height="15" fill="rgb(236,66,40)"/><text x="481.00" y="270.50"></text></g><g><title>0x7fd4bfa3b50f (?) (1 samples, 0.25%)</title><rect x="478" y="276" width="3" height="15" fill="rgb(245,85,19)"/><text x="481.00" y="286.50"></text></g><g><title>0x7fd4bfa41d6c (?) (1 samples, 0.25%)</title><rect x="478" y="292" width="3" height="15" fill="rgb(224,180,48)"/><text x="481.00" y="302.50"></text></g><g><title>0x7fd4c8f58cff (?) (1 samples, 0.25%)</title><rect x="478" y="308" width="3" height="15" fill="rgb(242,48,31)"/><text x="481.00" y="318.50"></text></g><g><title>0x7fd4bfa2627c (?) (1 samples, 0.25%)</title><rect x="478" y="324" width="3" height="15" fill="rgb(209,99,35)"/><text x="481.00" y="334.50"></text></g><g><title>0x7fd4bfa255d0 (?) (1 samples, 0.25%)</title><rect x="478" y="340" width="3" height="15" fill="rgb(254,80,46)"/><text x="481.00" y="350.50"></text></g><g><title>0x7fd4c8f63ea0 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="481" y="484" width="3" height="15" fill="rgb(235,219,1)"/><text x="484.00" y="494.50"></text></g><g><title>0x7fd4c8f63ea9 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="484" y="484" width="3" height="15" fill="rgb(247,32,51)"/><text x="487.00" y="494.50"></text></g><g><title>0x7fd4c8f63eab (libgomp.so.1.0.0) (2 samples, 0.50%)</title><rect x="487" y="484" width="6" height="15" fill="rgb(221,142,35)"/><text x="490.00" y="494.50"></text></g><g><title>0x7fd4c8f62ab9 (libgomp.so.1.0.0) (5 samples, 1.24%)</title><rect x="481" y="468" width="15" height="15" fill="rgb(221,0,52)"/><text x="484.00" y="478.50"></text></g><g><title>0x7fd4c8f63ead (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="493" y="484" width="3" height="15" fill="rgb(215,29,44)"/><text x="496.00" y="494.50"></text></g><g><title>0x7fd4c8f61daa (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="496" y="484" width="2" height="15" fill="rgb(207,7,10)"/><text x="499.00" y="494.50"></text></g><g><title>0x7fd4c8f63cf9 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="496" y="500" width="2" height="15" fill="rgb(218,165,40)"/><text x="499.00" y="510.50"></text></g><g><title>std::isnan (cmath) (1 samples, 0.25%)</title><rect x="519" y="532" width="3" height="15" fill="rgb(244,78,43)"/><text x="522.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.25%)</title><rect x="522" y="564" width="3" height="15" fill="rgb(251,229,3)"/><text x="525.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="522" y="580" width="3" height="15" fill="rgb(232,3,1)"/><text x="525.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="522" y="596" width="3" height="15" fill="rgb(236,204,35)"/><text x="525.00" y="606.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (13 samples, 3.23%)</title><rect x="522" y="532" width="38" height="15" fill="rgb(254,50,39)"/><text x="525.00" y="542.50">std..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (13 samples, 3.23%)</title><rect x="522" y="548" width="38" height="15" fill="rgb(247,97,11)"/><text x="525.00" y="558.50">std..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (12 samples, 2.98%)</title><rect x="525" y="564" width="35" height="15" fill="rgb(238,18,45)"/><text x="528.00" y="574.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (12 samples, 2.98%)</title><rect x="525" y="580" width="35" height="15" fill="rgb(205,9,1)"/><text x="528.00" y="590.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.25%)</title><rect x="557" y="596" width="3" height="15" fill="rgb(233,229,36)"/><text x="560.00" y="606.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="557" y="612" width="3" height="15" fill="rgb(219,85,33)"/><text x="560.00" y="622.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="557" y="628" width="3" height="15" fill="rgb(246,31,1)"/><text x="560.00" y="638.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.25%)</title><rect x="560" y="532" width="3" height="15" fill="rgb(212,173,33)"/><text x="563.00" y="542.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.25%)</title><rect x="563" y="532" width="3" height="15" fill="rgb(218,76,32)"/><text x="566.00" y="542.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (31 samples, 7.69%)</title><rect x="478" y="100" width="91" height="15" fill="rgb(226,225,40)"/><text x="481.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 7.69%)</title><rect x="478" y="116" width="91" height="15" fill="rgb(205,201,41)"/><text x="481.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 7.69%)</title><rect x="478" y="132" width="91" height="15" fill="rgb(230,205,10)"/><text x="481.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (31 samples, 7.69%)</title><rect x="478" y="148" width="91" height="15" fill="rgb(231,78,39)"/><text x="481.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (31 samples, 7.69%)</title><rect x="478" y="164" width="91" height="15" fill="rgb(247,105,5)"/><text x="481.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (31 samples, 7.69%)</title><rect x="478" y="180" width="91" height="15" fill="rgb(243,55,21)"/><text x="481.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 7.69%)</title><rect x="478" y="196" width="91" height="15" fill="rgb(250,159,29)"/><text x="481.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (31 samples, 7.69%)</title><rect x="478" y="212" width="91" height="15" fill="rgb(215,12,33)"/><text x="481.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (31 samples, 7.69%)</title><rect x="478" y="228" width="91" height="15" fill="rgb(209,53,37)"/><text x="481.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (30 samples, 7.44%)</title><rect x="481" y="244" width="88" height="15" fill="rgb(251,144,20)"/><text x="484.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (30 samples, 7.44%)</title><rect x="481" y="260" width="88" height="15" fill="rgb(243,169,27)"/><text x="484.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (30 samples, 7.44%)</title><rect x="481" y="276" width="88" height="15" fill="rgb(220,104,26)"/><text x="484.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (30 samples, 7.44%)</title><rect x="481" y="292" width="88" height="15" fill="rgb(207,202,2)"/><text x="484.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (30 samples, 7.44%)</title><rect x="481" y="308" width="88" height="15" fill="rgb(223,137,52)"/><text x="484.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (30 samples, 7.44%)</title><rect x="481" y="324" width="88" height="15" fill="rgb(251,229,42)"/><text x="484.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (30 samples, 7.44%)</title><rect x="481" y="340" width="88" height="15" fill="rgb(248,50,13)"/><text x="484.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (30 samples, 7.44%)</title><rect x="481" y="356" width="88" height="15" fill="rgb(212,163,43)"/><text x="484.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (30 samples, 7.44%)</title><rect x="481" y="372" width="88" height="15" fill="rgb(216,57,26)"/><text x="484.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (30 samples, 7.44%)</title><rect x="481" y="388" width="88" height="15" fill="rgb(216,108,49)"/><text x="484.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (30 samples, 7.44%)</title><rect x="481" y="404" width="88" height="15" fill="rgb(231,10,20)"/><text x="484.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (30 samples, 7.44%)</title><rect x="481" y="420" width="88" height="15" fill="rgb(249,150,40)"/><text x="484.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (30 samples, 7.44%)</title><rect x="481" y="436" width="88" height="15" fill="rgb(236,178,43)"/><text x="484.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (30 samples, 7.44%)</title><rect x="481" y="452" width="88" height="15" fill="rgb(227,184,20)"/><text x="484.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (25 samples, 6.20%)</title><rect x="496" y="468" width="73" height="15" fill="rgb(210,61,2)"/><text x="499.00" y="478.50">GOMP_par..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (24 samples, 5.96%)</title><rect x="498" y="484" width="71" height="15" fill="rgb(246,215,36)"/><text x="501.00" y="494.50">RuntimeT..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (23 samples, 5.71%)</title><rect x="501" y="500" width="68" height="15" fill="rgb(244,43,6)"/><text x="504.00" y="510.50">std::ve..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (23 samples, 5.71%)</title><rect x="501" y="516" width="68" height="15" fill="rgb(223,85,50)"/><text x="504.00" y="526.50">Runtime..</text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.25%)</title><rect x="566" y="532" width="3" height="15" fill="rgb(237,75,39)"/><text x="569.00" y="542.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (32 samples, 7.94%)</title><rect x="478" y="68" width="94" height="15" fill="rgb(250,68,38)"/><text x="481.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (32 samples, 7.94%)</title><rect x="478" y="84" width="94" height="15" fill="rgb(235,122,18)"/><text x="481.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="569" y="100" width="3" height="15" fill="rgb(217,56,3)"/><text x="572.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="569" y="116" width="3" height="15" fill="rgb(241,211,8)"/><text x="572.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="569" y="132" width="3" height="15" fill="rgb(210,156,32)"/><text x="572.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="569" y="148" width="3" height="15" fill="rgb(212,184,18)"/><text x="572.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="569" y="164" width="3" height="15" fill="rgb(238,96,39)"/><text x="572.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="569" y="180" width="3" height="15" fill="rgb(249,174,38)"/><text x="572.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="569" y="196" width="3" height="15" fill="rgb(231,157,22)"/><text x="572.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.25%)</title><rect x="569" y="212" width="3" height="15" fill="rgb(217,164,47)"/><text x="572.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="569" y="228" width="3" height="15" fill="rgb(236,81,16)"/><text x="572.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="569" y="244" width="3" height="15" fill="rgb(211,172,23)"/><text x="572.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="569" y="260" width="3" height="15" fill="rgb(220,54,37)"/><text x="572.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="569" y="276" width="3" height="15" fill="rgb(254,224,28)"/><text x="572.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (7 samples, 1.74%)</title><rect x="613" y="196" width="20" height="15" fill="rgb(248,84,49)"/><text x="616.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py) (7 samples, 1.74%)</title><rect x="613" y="212" width="20" height="15" fill="rgb(218,76,5)"/><text x="616.00" y="222.50"></text></g><g><title>update_wrapper (functools.py) (2 samples, 0.50%)</title><rect x="627" y="228" width="6" height="15" fill="rgb(222,47,53)"/><text x="630.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.50%)</title><rect x="633" y="196" width="6" height="15" fill="rgb(208,182,30)"/><text x="636.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.50%)</title><rect x="674" y="212" width="6" height="15" fill="rgb(232,191,8)"/><text x="677.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 0.99%)</title><rect x="680" y="228" width="12" height="15" fill="rgb(240,62,35)"/><text x="683.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.25%)</title><rect x="689" y="244" width="3" height="15" fill="rgb(223,131,29)"/><text x="692.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="718" y="292" width="3" height="15" fill="rgb(210,163,48)"/><text x="721.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="718" y="308" width="3" height="15" fill="rgb(223,119,13)"/><text x="721.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="718" y="324" width="3" height="15" fill="rgb(218,68,20)"/><text x="721.00" y="334.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="721" y="292" width="3" height="15" fill="rgb(221,93,18)"/><text x="724.00" y="302.50"></text></g><g><title>0x7fd4d89e0d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="730" y="308" width="3" height="15" fill="rgb(222,48,12)"/><text x="733.00" y="318.50"></text></g><g><title>0x7fd4d89cfd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="733" y="340" width="3" height="15" fill="rgb(246,197,0)"/><text x="736.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.25%)</title><rect x="733" y="356" width="3" height="15" fill="rgb(206,12,42)"/><text x="736.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="733" y="372" width="3" height="15" fill="rgb(235,193,8)"/><text x="736.00" y="382.50"></text></g><g><title>0x7fd4d89dff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="733" y="324" width="6" height="15" fill="rgb(250,190,45)"/><text x="736.00" y="334.50"></text></g><g><title>0x7fd4d89cfd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="736" y="340" width="3" height="15" fill="rgb(239,156,52)"/><text x="739.00" y="350.50"></text></g><g><title>0x7fd4d89bcbef (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="736" y="356" width="3" height="15" fill="rgb(233,18,53)"/><text x="739.00" y="366.50"></text></g><g><title>0x7fd4d89dff76 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="739" y="324" width="3" height="15" fill="rgb(224,192,48)"/><text x="742.00" y="334.50"></text></g><g><title>0x7fd4d89ee225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="742" y="356" width="2" height="15" fill="rgb(225,137,25)"/><text x="745.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.25%)</title><rect x="742" y="372" width="2" height="15" fill="rgb(220,95,45)"/><text x="745.00" y="382.50"></text></g><g><title>0x7fd4d89c810c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="744" y="404" width="3" height="15" fill="rgb(212,38,17)"/><text x="747.00" y="414.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (3 samples, 0.74%)</title><rect x="747" y="436" width="9" height="15" fill="rgb(238,158,8)"/><text x="750.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.25%)</title><rect x="762" y="452" width="3" height="15" fill="rgb(227,84,26)"/><text x="765.00" y="462.50"></text></g><g><title>0x7fd4fef9ca38 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="762" y="468" width="3" height="15" fill="rgb(243,139,31)"/><text x="765.00" y="478.50"></text></g><g><title>0x7fd4d89c82fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.74%)</title><rect x="747" y="404" width="21" height="15" fill="rgb(206,14,40)"/><text x="750.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (7 samples, 1.74%)</title><rect x="747" y="420" width="21" height="15" fill="rgb(213,21,32)"/><text x="750.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.99%)</title><rect x="756" y="436" width="12" height="15" fill="rgb(253,10,27)"/><text x="759.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.25%)</title><rect x="765" y="452" width="3" height="15" fill="rgb(215,98,39)"/><text x="768.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.25%)</title><rect x="765" y="468" width="3" height="15" fill="rgb(222,54,47)"/><text x="768.00" y="478.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.25%)</title><rect x="765" y="484" width="3" height="15" fill="rgb(217,68,3)"/><text x="768.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="765" y="500" width="3" height="15" fill="rgb(226,87,24)"/><text x="768.00" y="510.50"></text></g><g><title>0x7fd4d89ee2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.23%)</title><rect x="744" y="356" width="27" height="15" fill="rgb(244,22,48)"/><text x="747.00" y="366.50">0..</text></g><g><title>0x7fd4d89d2d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.23%)</title><rect x="744" y="372" width="27" height="15" fill="rgb(248,182,44)"/><text x="747.00" y="382.50">0..</text></g><g><title>0x7fd4d89d2666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.23%)</title><rect x="744" y="388" width="27" height="15" fill="rgb(251,191,18)"/><text x="747.00" y="398.50">0..</text></g><g><title>0x7fd4d89c8300 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="768" y="404" width="3" height="15" fill="rgb(242,94,39)"/><text x="771.00" y="414.50"></text></g><g><title>0x7fd4fefb2757 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="774" y="388" width="3" height="15" fill="rgb(214,176,1)"/><text x="777.00" y="398.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.50%)</title><rect x="777" y="388" width="6" height="15" fill="rgb(235,162,54)"/><text x="780.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.25%)</title><rect x="780" y="404" width="3" height="15" fill="rgb(239,204,36)"/><text x="783.00" y="414.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="783" y="388" width="2" height="15" fill="rgb(208,144,50)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.25%)</title><rect x="783" y="404" width="2" height="15" fill="rgb(212,9,0)"/><text x="786.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.25%)</title><rect x="783" y="420" width="2" height="15" fill="rgb(254,160,9)"/><text x="786.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.25%)</title><rect x="783" y="436" width="2" height="15" fill="rgb(253,29,49)"/><text x="786.00" y="446.50"></text></g><g><title>0x7fd4d89ee592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.49%)</title><rect x="771" y="356" width="17" height="15" fill="rgb(253,8,19)"/><text x="774.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 1.49%)</title><rect x="771" y="372" width="17" height="15" fill="rgb(239,47,6)"/><text x="774.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.25%)</title><rect x="785" y="388" width="3" height="15" fill="rgb(221,142,5)"/><text x="788.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.25%)</title><rect x="785" y="404" width="3" height="15" fill="rgb(246,129,16)"/><text x="788.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="785" y="420" width="3" height="15" fill="rgb(244,17,38)"/><text x="788.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.25%)</title><rect x="785" y="436" width="3" height="15" fill="rgb(244,176,22)"/><text x="788.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.25%)</title><rect x="785" y="452" width="3" height="15" fill="rgb(225,69,10)"/><text x="788.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="785" y="468" width="3" height="15" fill="rgb(207,142,13)"/><text x="788.00" y="478.50"></text></g><g><title>0x7fd4fefbd103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="785" y="484" width="3" height="15" fill="rgb(234,81,0)"/><text x="788.00" y="494.50"></text></g><g><title>0x7fd4d89ee693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="788" y="356" width="6" height="15" fill="rgb(207,46,30)"/><text x="791.00" y="366.50"></text></g><g><title>0x7fd4d89ee698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="794" y="356" width="3" height="15" fill="rgb(254,135,35)"/><text x="797.00" y="366.50"></text></g><g><title>0x7fd4d89ee69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="797" y="356" width="3" height="15" fill="rgb(217,62,33)"/><text x="800.00" y="366.50"></text></g><g><title>0x7fd4d89ee6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="800" y="356" width="3" height="15" fill="rgb(240,55,5)"/><text x="803.00" y="366.50"></text></g><g><title>0x7fd4d89ee6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.74%)</title><rect x="803" y="356" width="20" height="15" fill="rgb(235,108,8)"/><text x="806.00" y="366.50"></text></g><g><title>0x7fd4d89ee6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.99%)</title><rect x="823" y="356" width="12" height="15" fill="rgb(244,132,19)"/><text x="826.00" y="366.50"></text></g><g><title>0x7fd4d89ee6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.74%)</title><rect x="835" y="356" width="9" height="15" fill="rgb(212,118,3)"/><text x="838.00" y="366.50"></text></g><g><title>0x7fd4d89ee6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="844" y="356" width="3" height="15" fill="rgb(244,107,28)"/><text x="847.00" y="366.50"></text></g><g><title>0x7fd4d89ee6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="847" y="356" width="3" height="15" fill="rgb(207,72,53)"/><text x="850.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="847" y="372" width="3" height="15" fill="rgb(214,141,40)"/><text x="850.00" y="382.50"></text></g><g><title>0x7fd4d89ee731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="850" y="356" width="3" height="15" fill="rgb(250,165,7)"/><text x="853.00" y="366.50"></text></g><g><title>0x7fd4d89ee7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="853" y="356" width="3" height="15" fill="rgb(207,51,19)"/><text x="856.00" y="366.50"></text></g><g><title>0x7fd4d89ee92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="856" y="356" width="3" height="15" fill="rgb(249,64,35)"/><text x="859.00" y="366.50"></text></g><g><title>0x7fd4d89c3899 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="856" y="372" width="3" height="15" fill="rgb(214,4,2)"/><text x="859.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.25%)</title><rect x="862" y="436" width="2" height="15" fill="rgb(224,84,46)"/><text x="865.00" y="446.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.25%)</title><rect x="862" y="452" width="2" height="15" fill="rgb(252,92,30)"/><text x="865.00" y="462.50"></text></g><g><title>0x7fd4d89ef405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (43 samples, 10.67%)</title><rect x="742" y="340" width="125" height="15" fill="rgb(206,120,12)"/><text x="745.00" y="350.50">0x7fd4d89ef405 ..</text></g><g><title>0x7fd4d89eec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.74%)</title><rect x="859" y="356" width="8" height="15" fill="rgb(248,64,46)"/><text x="862.00" y="366.50"></text></g><g><title>0x7fd4d89c6529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.74%)</title><rect x="859" y="372" width="8" height="15" fill="rgb(214,196,49)"/><text x="862.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.74%)</title><rect x="859" y="388" width="8" height="15" fill="rgb(242,167,41)"/><text x="862.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.50%)</title><rect x="862" y="404" width="5" height="15" fill="rgb(245,166,29)"/><text x="865.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.50%)</title><rect x="862" y="420" width="5" height="15" fill="rgb(213,27,54)"/><text x="865.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="864" y="436" width="3" height="15" fill="rgb(216,58,51)"/><text x="867.00" y="446.50"></text></g><g><title>0x7fd4d89c34f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="867" y="372" width="3" height="15" fill="rgb(226,225,41)"/><text x="870.00" y="382.50"></text></g><g><title>0x7fd4d89c3530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="870" y="372" width="3" height="15" fill="rgb(246,49,21)"/><text x="873.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.25%)</title><rect x="870" y="388" width="3" height="15" fill="rgb(224,109,49)"/><text x="873.00" y="398.50"></text></g><g><title>0x7fd4d89dffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (46 samples, 11.41%)</title><rect x="742" y="324" width="134" height="15" fill="rgb(250,24,53)"/><text x="745.00" y="334.50">0x7fd4d89dffa6 (..</text></g><g><title>0x7fd4d89ef540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.74%)</title><rect x="867" y="340" width="9" height="15" fill="rgb(218,178,40)"/><text x="870.00" y="350.50"></text></g><g><title>0x7fd4d89c42f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.74%)</title><rect x="867" y="356" width="9" height="15" fill="rgb(220,205,40)"/><text x="870.00" y="366.50"></text></g><g><title>0x7fd4d89c3570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="873" y="372" width="3" height="15" fill="rgb(238,126,54)"/><text x="876.00" y="382.50"></text></g><g><title>0x7fd4d89e0002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="876" y="324" width="3" height="15" fill="rgb(225,127,25)"/><text x="879.00" y="334.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.74%)</title><rect x="879" y="372" width="9" height="15" fill="rgb(253,146,26)"/><text x="882.00" y="382.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.25%)</title><rect x="888" y="372" width="3" height="15" fill="rgb(251,120,25)"/><text x="891.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.25%)</title><rect x="888" y="388" width="3" height="15" fill="rgb(215,149,17)"/><text x="891.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.25%)</title><rect x="888" y="404" width="3" height="15" fill="rgb(224,19,18)"/><text x="891.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.25%)</title><rect x="888" y="420" width="3" height="15" fill="rgb(252,206,1)"/><text x="891.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.25%)</title><rect x="888" y="436" width="3" height="15" fill="rgb(253,24,3)"/><text x="891.00" y="446.50"></text></g><g><title>0x7fd4d89e005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.24%)</title><rect x="879" y="324" width="15" height="15" fill="rgb(224,0,21)"/><text x="882.00" y="334.50"></text></g><g><title>array_take (methods.c) (5 samples, 1.24%)</title><rect x="879" y="340" width="15" height="15" fill="rgb(223,18,40)"/><text x="882.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (5 samples, 1.24%)</title><rect x="879" y="356" width="15" height="15" fill="rgb(248,135,3)"/><text x="882.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.25%)</title><rect x="891" y="372" width="3" height="15" fill="rgb(224,34,16)"/><text x="894.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="891" y="388" width="3" height="15" fill="rgb(240,6,7)"/><text x="894.00" y="398.50"></text></g><g><title>0x7fd4d89e0062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="894" y="324" width="3" height="15" fill="rgb(214,81,33)"/><text x="897.00" y="334.50"></text></g><g><title>0x7fd4d89e0d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (58 samples, 14.39%)</title><rect x="733" y="308" width="170" height="15" fill="rgb(223,214,17)"/><text x="736.00" y="318.50">0x7fd4d89e0d2e (sklear..</text></g><g><title>0x7fd4d89e0328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="897" y="324" width="6" height="15" fill="rgb(209,31,54)"/><text x="900.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.50%)</title><rect x="897" y="340" width="6" height="15" fill="rgb(215,14,0)"/><text x="900.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.25%)</title><rect x="900" y="356" width="3" height="15" fill="rgb(244,214,42)"/><text x="903.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.25%)</title><rect x="900" y="372" width="3" height="15" fill="rgb(234,131,30)"/><text x="903.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="900" y="388" width="3" height="15" fill="rgb(252,225,40)"/><text x="903.00" y="398.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.25%)</title><rect x="900" y="404" width="3" height="15" fill="rgb(212,16,48)"/><text x="903.00" y="414.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.25%)</title><rect x="903" y="308" width="2" height="15" fill="rgb(230,126,10)"/><text x="906.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.25%)</title><rect x="903" y="324" width="2" height="15" fill="rgb(234,125,42)"/><text x="906.00" y="334.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.25%)</title><rect x="905" y="324" width="3" height="15" fill="rgb(216,9,12)"/><text x="908.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.74%)</title><rect x="905" y="308" width="9" height="15" fill="rgb(206,108,50)"/><text x="908.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.50%)</title><rect x="908" y="324" width="6" height="15" fill="rgb(221,167,27)"/><text x="911.00" y="334.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.25%)</title><rect x="911" y="340" width="3" height="15" fill="rgb(239,71,15)"/><text x="914.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.24%)</title><rect x="952" y="340" width="15" height="15" fill="rgb(246,70,19)"/><text x="955.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 3.23%)</title><rect x="935" y="324" width="38" height="15" fill="rgb(217,121,42)"/><text x="938.00" y="334.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.50%)</title><rect x="967" y="340" width="6" height="15" fill="rgb(254,139,35)"/><text x="970.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 5.21%)</title><rect x="914" y="308" width="62" height="15" fill="rgb(237,44,28)"/><text x="917.00" y="318.50">check_..</text></g><g><title>isclass (inspect.py) (1 samples, 0.25%)</title><rect x="973" y="324" width="3" height="15" fill="rgb(228,84,23)"/><text x="976.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (88 samples, 21.84%)</title><rect x="724" y="292" width="258" height="15" fill="rgb(207,130,40)"/><text x="727.00" y="302.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (2 samples, 0.50%)</title><rect x="976" y="308" width="6" height="15" fill="rgb(253,40,15)"/><text x="979.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.25%)</title><rect x="985" y="308" width="2" height="15" fill="rgb(253,84,41)"/><text x="988.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.25%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(254,207,4)"/><text x="988.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="993" y="324" width="3" height="15" fill="rgb(230,137,15)"/><text x="996.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.25%)</title><rect x="993" y="340" width="3" height="15" fill="rgb(232,18,2)"/><text x="996.00" y="350.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (2 samples, 0.50%)</title><rect x="996" y="372" width="6" height="15" fill="rgb(227,17,50)"/><text x="999.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (2 samples, 0.50%)</title><rect x="996" y="388" width="6" height="15" fill="rgb(235,187,42)"/><text x="999.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="999" y="404" width="3" height="15" fill="rgb(247,80,7)"/><text x="1002.00" y="414.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (4 samples, 0.99%)</title><rect x="996" y="340" width="12" height="15" fill="rgb(239,0,40)"/><text x="999.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (4 samples, 0.99%)</title><rect x="996" y="356" width="12" height="15" fill="rgb(236,171,23)"/><text x="999.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1002" y="372" width="6" height="15" fill="rgb(234,84,36)"/><text x="1005.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (2 samples, 0.50%)</title><rect x="1002" y="388" width="6" height="15" fill="rgb(213,114,46)"/><text x="1005.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1005" y="404" width="3" height="15" fill="rgb(223,107,2)"/><text x="1008.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.25%)</title><rect x="1005" y="420" width="3" height="15" fill="rgb(223,152,1)"/><text x="1008.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.24%)</title><rect x="996" y="324" width="15" height="15" fill="rgb(233,34,53)"/><text x="999.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1008" y="340" width="3" height="15" fill="rgb(217,177,24)"/><text x="1011.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.25%)</title><rect x="1008" y="356" width="3" height="15" fill="rgb(221,209,52)"/><text x="1011.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="1008" y="372" width="3" height="15" fill="rgb(237,70,10)"/><text x="1011.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.25%)</title><rect x="1008" y="388" width="3" height="15" fill="rgb(249,38,2)"/><text x="1011.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.25%)</title><rect x="1008" y="404" width="3" height="15" fill="rgb(250,164,40)"/><text x="1011.00" y="414.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1011" y="324" width="3" height="15" fill="rgb(216,205,27)"/><text x="1014.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (107 samples, 26.55%)</title><rect x="706" y="276" width="314" height="15" fill="rgb(245,36,35)"/><text x="709.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.23%)</title><rect x="982" y="292" width="38" height="15" fill="rgb(224,164,33)"/><text x="985.00" y="302.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 2.73%)</title><rect x="987" y="308" width="33" height="15" fill="rgb(229,204,42)"/><text x="990.00" y="318.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.50%)</title><rect x="1014" y="324" width="6" height="15" fill="rgb(240,174,13)"/><text x="1017.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (110 samples, 27.30%)</title><rect x="701" y="260" width="322" height="15" fill="rgb(240,5,46)"/><text x="704.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="1020" y="276" width="3" height="15" fill="rgb(231,41,41)"/><text x="1023.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.25%)</title><rect x="1020" y="292" width="3" height="15" fill="rgb(227,144,54)"/><text x="1023.00" y="302.50"></text></g><g><title>__exit__ (joblib/parallel.py) (4 samples, 0.99%)</title><rect x="1023" y="260" width="11" height="15" fill="rgb(226,59,16)"/><text x="1026.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1026" y="276" width="8" height="15" fill="rgb(226,35,54)"/><text x="1029.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (123 samples, 30.52%)</title><rect x="680" y="212" width="360" height="15" fill="rgb(244,201,20)"/><text x="683.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (119 samples, 29.53%)</title><rect x="692" y="228" width="348" height="15" fill="rgb(237,219,35)"/><text x="695.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (119 samples, 29.53%)</title><rect x="692" y="244" width="348" height="15" fill="rgb(208,59,2)"/><text x="695.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.50%)</title><rect x="1034" y="260" width="6" height="15" fill="rgb(237,211,36)"/><text x="1037.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py) (138 samples, 34.24%)</title><rect x="639" y="196" width="404" height="15" fill="rgb(210,100,4)"/><text x="642.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.25%)</title><rect x="1040" y="212" width="3" height="15" fill="rgb(210,82,42)"/><text x="1043.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1040" y="228" width="3" height="15" fill="rgb(251,134,23)"/><text x="1043.00" y="238.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.50%)</title><rect x="1055" y="212" width="6" height="15" fill="rgb(206,94,44)"/><text x="1058.00" y="222.50"></text></g><g><title>get (queue.py) (7 samples, 1.74%)</title><rect x="1043" y="196" width="21" height="15" fill="rgb(240,67,15)"/><text x="1046.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.25%)</title><rect x="1061" y="212" width="3" height="15" fill="rgb(249,209,30)"/><text x="1064.00" y="222.50"></text></g><g><title>0x7fd4fefb2e7a (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1084" y="212" width="3" height="15" fill="rgb(214,31,11)"/><text x="1087.00" y="222.50"></text></g><g><title>0x7fd4ff07aee3 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1087" y="212" width="3" height="15" fill="rgb(244,202,7)"/><text x="1090.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.24%)</title><rect x="1090" y="212" width="15" height="15" fill="rgb(243,61,38)"/><text x="1093.00" y="222.50"></text></g><g><title>0x7fd4fefbd134 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1113" y="228" width="3" height="15" fill="rgb(246,109,48)"/><text x="1116.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (11 samples, 2.73%)</title><rect x="1105" y="212" width="32" height="15" fill="rgb(208,104,53)"/><text x="1108.00" y="222.50">ge..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 1.74%)</title><rect x="1116" y="228" width="21" height="15" fill="rgb(249,91,17)"/><text x="1119.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.50%)</title><rect x="1137" y="212" width="6" height="15" fill="rgb(213,180,50)"/><text x="1140.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (28 samples, 6.95%)</title><rect x="1064" y="196" width="82" height="15" fill="rgb(228,163,27)"/><text x="1067.00" y="206.50">get_neste..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.25%)</title><rect x="1143" y="212" width="3" height="15" fill="rgb(218,69,12)"/><text x="1146.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.25%)</title><rect x="1151" y="212" width="3" height="15" fill="rgb(207,168,19)"/><text x="1154.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="1151" y="228" width="3" height="15" fill="rgb(227,111,13)"/><text x="1154.00" y="238.50"></text></g><g><title>0x7fd4fefb2757 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1151" y="244" width="3" height="15" fill="rgb(235,1,54)"/><text x="1154.00" y="254.50"></text></g><g><title>_put (queue.py) (1 samples, 0.25%)</title><rect x="1154" y="212" width="3" height="15" fill="rgb(210,214,23)"/><text x="1157.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (203 samples, 50.37%)</title><rect x="572" y="180" width="594" height="15" fill="rgb(247,41,35)"/><text x="575.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (7 samples, 1.74%)</title><rect x="1146" y="196" width="20" height="15" fill="rgb(240,212,31)"/><text x="1149.00" y="206.50"></text></g><g><title>notify (threading.py) (3 samples, 0.74%)</title><rect x="1157" y="212" width="9" height="15" fill="rgb(236,142,38)"/><text x="1160.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (207 samples, 51.36%)</title><rect x="572" y="164" width="606" height="15" fill="rgb(253,222,27)"/><text x="575.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (4 samples, 0.99%)</title><rect x="1166" y="180" width="12" height="15" fill="rgb(208,13,54)"/><text x="1169.00" y="190.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (208 samples, 51.61%)</title><rect x="572" y="68" width="609" height="15" fill="rgb(224,4,54)"/><text x="575.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (208 samples, 51.61%)</title><rect x="572" y="84" width="609" height="15" fill="rgb(248,159,52)"/><text x="575.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (208 samples, 51.61%)</title><rect x="572" y="100" width="609" height="15" fill="rgb(239,44,37)"/><text x="575.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (208 samples, 51.61%)</title><rect x="572" y="116" width="609" height="15" fill="rgb(248,67,50)"/><text x="575.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (208 samples, 51.61%)</title><rect x="572" y="132" width="609" height="15" fill="rgb(250,96,19)"/><text x="575.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (208 samples, 51.61%)</title><rect x="572" y="148" width="609" height="15" fill="rgb(220,51,41)"/><text x="575.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="1178" y="164" width="3" height="15" fill="rgb(219,21,23)"/><text x="1181.00" y="174.50"></text></g><g><title>0x7fd4d8a05ee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1181" y="308" width="3" height="15" fill="rgb(226,150,47)"/><text x="1184.00" y="318.50"></text></g><g><title>0x7fd4d8c36100 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1181" y="324" width="3" height="15" fill="rgb(245,95,15)"/><text x="1184.00" y="334.50"></text></g><g><title>0x7fd4d8c3fa47 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1181" y="340" width="3" height="15" fill="rgb(248,217,14)"/><text x="1184.00" y="350.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.25%)</title><rect x="1181" y="356" width="3" height="15" fill="rgb(209,54,1)"/><text x="1184.00" y="366.50"></text></g><g><title>randint (mtrand.c) (1 samples, 0.25%)</title><rect x="1181" y="372" width="3" height="15" fill="rgb(229,148,50)"/><text x="1184.00" y="382.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c) (1 samples, 0.25%)</title><rect x="1181" y="388" width="3" height="15" fill="rgb(210,78,8)"/><text x="1184.00" y="398.50"></text></g><g><title>arraydescr_name_get (descriptor.c) (1 samples, 0.25%)</title><rect x="1181" y="404" width="3" height="15" fill="rgb(231,25,39)"/><text x="1184.00" y="414.50"></text></g><g><title>0x7fd4d89d4b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.50%)</title><rect x="1181" y="292" width="6" height="15" fill="rgb(249,12,11)"/><text x="1184.00" y="302.50"></text></g><g><title>0x7fd4d8a0610a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1184" y="308" width="3" height="15" fill="rgb(231,15,11)"/><text x="1187.00" y="318.50"></text></g><g><title>0x7fd4d8c31e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1184" y="324" width="3" height="15" fill="rgb(206,145,1)"/><text x="1187.00" y="334.50"></text></g><g><title>0x7fd4d8e6db2d (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1184" y="340" width="3" height="15" fill="rgb(234,37,52)"/><text x="1187.00" y="350.50"></text></g><g><title>all (403 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(252,99,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (403 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(214,20,7)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_50_12_float_.py) (3 samples, 0.74%)</title><rect x="1181" y="68" width="9" height="15" fill="rgb(251,103,28)"/><text x="1184.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (3 samples, 0.74%)</title><rect x="1181" y="84" width="9" height="15" fill="rgb(248,35,44)"/><text x="1184.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.74%)</title><rect x="1181" y="100" width="9" height="15" fill="rgb(239,13,44)"/><text x="1184.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (3 samples, 0.74%)</title><rect x="1181" y="116" width="9" height="15" fill="rgb(213,159,43)"/><text x="1184.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1181" y="132" width="9" height="15" fill="rgb(214,224,35)"/><text x="1184.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1181" y="148" width="9" height="15" fill="rgb(228,190,47)"/><text x="1184.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1181" y="164" width="9" height="15" fill="rgb(244,10,5)"/><text x="1184.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (3 samples, 0.74%)</title><rect x="1181" y="180" width="9" height="15" fill="rgb(214,9,46)"/><text x="1184.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 0.74%)</title><rect x="1181" y="196" width="9" height="15" fill="rgb(246,162,45)"/><text x="1184.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1181" y="212" width="9" height="15" fill="rgb(212,34,38)"/><text x="1184.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (3 samples, 0.74%)</title><rect x="1181" y="228" width="9" height="15" fill="rgb(205,18,1)"/><text x="1184.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (3 samples, 0.74%)</title><rect x="1181" y="244" width="9" height="15" fill="rgb(219,60,41)"/><text x="1184.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.74%)</title><rect x="1181" y="260" width="9" height="15" fill="rgb(214,28,46)"/><text x="1184.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 0.74%)</title><rect x="1181" y="276" width="9" height="15" fill="rgb(208,46,26)"/><text x="1184.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(253,108,6)"/><text x="1190.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.25%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(219,76,5)"/><text x="1190.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.25%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(230,81,49)"/><text x="1190.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.25%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(208,207,36)"/><text x="1190.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.25%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(223,108,52)"/><text x="1190.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.25%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(232,92,8)"/><text x="1190.00" y="382.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.25%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(231,171,38)"/><text x="1190.00" y="398.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (1 samples, 0.25%)</title><rect x="1187" y="404" width="3" height="15" fill="rgb(230,44,17)"/><text x="1190.00" y="414.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.25%)</title><rect x="1187" y="420" width="3" height="15" fill="rgb(226,222,34)"/><text x="1190.00" y="430.50"></text></g><g><title>ufunc_geterr (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1187" y="436" width="3" height="15" fill="rgb(246,116,49)"/><text x="1190.00" y="446.50"></text></g></g></svg>